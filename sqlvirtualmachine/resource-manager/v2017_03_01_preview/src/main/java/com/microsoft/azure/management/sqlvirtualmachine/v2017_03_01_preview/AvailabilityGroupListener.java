/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.sqlvirtualmachine.v2017_03_01_preview;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.sqlvirtualmachine.v2017_03_01_preview.implementation.AvailabilityGroupListenerInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.sqlvirtualmachine.v2017_03_01_preview.implementation.SqlVirtualMachineManager;
import java.util.List;

/**
 * Type representing AvailabilityGroupListener.
 */
public interface AvailabilityGroupListener extends HasInner<AvailabilityGroupListenerInner>, Indexable, Refreshable<AvailabilityGroupListener>, Updatable<AvailabilityGroupListener.Update>, HasManager<SqlVirtualMachineManager> {
    /**
     * @return the availabilityGroupName value.
     */
    String availabilityGroupName();

    /**
     * @return the createDefaultAvailabilityGroupIfNotExist value.
     */
    Boolean createDefaultAvailabilityGroupIfNotExist();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the loadBalancerConfigurations value.
     */
    List<LoadBalancerConfiguration> loadBalancerConfigurations();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the port value.
     */
    Integer port();

    /**
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * @return the type value.
     */
    String type();

    /**
     * The entirety of the AvailabilityGroupListener definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithSqlVirtualMachineGroup, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of AvailabilityGroupListener definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a AvailabilityGroupListener definition.
         */
        interface Blank extends WithSqlVirtualMachineGroup {
        }

        /**
         * The stage of the availabilitygrouplistener definition allowing to specify SqlVirtualMachineGroup.
         */
        interface WithSqlVirtualMachineGroup {
           /**
            * Specifies resourceGroupName, sqlVirtualMachineGroupName.
            * @param resourceGroupName Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal
            * @param sqlVirtualMachineGroupName Name of the SQL virtual machine group
            * @return the next definition stage
            */
            WithCreate withExistingSqlVirtualMachineGroup(String resourceGroupName, String sqlVirtualMachineGroupName);
        }

        /**
         * The stage of the availabilitygrouplistener definition allowing to specify AvailabilityGroupName.
         */
        interface WithAvailabilityGroupName {
            /**
             * Specifies availabilityGroupName.
             * @param availabilityGroupName Name of the availability group
             * @return the next definition stage
             */
            WithCreate withAvailabilityGroupName(String availabilityGroupName);
        }

        /**
         * The stage of the availabilitygrouplistener definition allowing to specify CreateDefaultAvailabilityGroupIfNotExist.
         */
        interface WithCreateDefaultAvailabilityGroupIfNotExist {
            /**
             * Specifies createDefaultAvailabilityGroupIfNotExist.
             * @param createDefaultAvailabilityGroupIfNotExist Create a default availability group if it does not exist
             * @return the next definition stage
             */
            WithCreate withCreateDefaultAvailabilityGroupIfNotExist(Boolean createDefaultAvailabilityGroupIfNotExist);
        }

        /**
         * The stage of the availabilitygrouplistener definition allowing to specify LoadBalancerConfigurations.
         */
        interface WithLoadBalancerConfigurations {
            /**
             * Specifies loadBalancerConfigurations.
             * @param loadBalancerConfigurations List of load balancer configurations for an availability group listener
             * @return the next definition stage
             */
            WithCreate withLoadBalancerConfigurations(List<LoadBalancerConfiguration> loadBalancerConfigurations);
        }

        /**
         * The stage of the availabilitygrouplistener definition allowing to specify Port.
         */
        interface WithPort {
            /**
             * Specifies port.
             * @param port Listener port
             * @return the next definition stage
             */
            WithCreate withPort(Integer port);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<AvailabilityGroupListener>, DefinitionStages.WithAvailabilityGroupName, DefinitionStages.WithCreateDefaultAvailabilityGroupIfNotExist, DefinitionStages.WithLoadBalancerConfigurations, DefinitionStages.WithPort {
        }
    }
    /**
     * The template for a AvailabilityGroupListener update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<AvailabilityGroupListener>, UpdateStages.WithAvailabilityGroupName, UpdateStages.WithCreateDefaultAvailabilityGroupIfNotExist, UpdateStages.WithLoadBalancerConfigurations, UpdateStages.WithPort {
    }

    /**
     * Grouping of AvailabilityGroupListener update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the availabilitygrouplistener update allowing to specify AvailabilityGroupName.
         */
        interface WithAvailabilityGroupName {
            /**
             * Specifies availabilityGroupName.
             * @param availabilityGroupName Name of the availability group
             * @return the next update stage
             */
            Update withAvailabilityGroupName(String availabilityGroupName);
        }

        /**
         * The stage of the availabilitygrouplistener update allowing to specify CreateDefaultAvailabilityGroupIfNotExist.
         */
        interface WithCreateDefaultAvailabilityGroupIfNotExist {
            /**
             * Specifies createDefaultAvailabilityGroupIfNotExist.
             * @param createDefaultAvailabilityGroupIfNotExist Create a default availability group if it does not exist
             * @return the next update stage
             */
            Update withCreateDefaultAvailabilityGroupIfNotExist(Boolean createDefaultAvailabilityGroupIfNotExist);
        }

        /**
         * The stage of the availabilitygrouplistener update allowing to specify LoadBalancerConfigurations.
         */
        interface WithLoadBalancerConfigurations {
            /**
             * Specifies loadBalancerConfigurations.
             * @param loadBalancerConfigurations List of load balancer configurations for an availability group listener
             * @return the next update stage
             */
            Update withLoadBalancerConfigurations(List<LoadBalancerConfiguration> loadBalancerConfigurations);
        }

        /**
         * The stage of the availabilitygrouplistener update allowing to specify Port.
         */
        interface WithPort {
            /**
             * Specifies port.
             * @param port Listener port
             * @return the next update stage
             */
            Update withPort(Integer port);
        }

    }
}
