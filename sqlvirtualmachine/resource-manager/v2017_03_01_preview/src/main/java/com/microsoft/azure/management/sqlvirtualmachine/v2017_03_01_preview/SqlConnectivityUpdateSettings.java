/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.sqlvirtualmachine.v2017_03_01_preview;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Set the access level and network port settings for SQL Server.
 */
public class SqlConnectivityUpdateSettings {
    /**
     * SQL Server connectivity option. Possible values include: 'LOCAL',
     * 'PRIVATE', 'PUBLIC'.
     */
    @JsonProperty(value = "connectivityType")
    private ConnectivityType connectivityType;

    /**
     * SQL Server port.
     */
    @JsonProperty(value = "port")
    private Integer port;

    /**
     * SQL Server sysadmin login to create.
     */
    @JsonProperty(value = "sqlAuthUpdateUserName")
    private String sqlAuthUpdateUserName;

    /**
     * SQL Server sysadmin login password.
     */
    @JsonProperty(value = "sqlAuthUpdatePassword")
    private String sqlAuthUpdatePassword;

    /**
     * Get sQL Server connectivity option. Possible values include: 'LOCAL', 'PRIVATE', 'PUBLIC'.
     *
     * @return the connectivityType value
     */
    public ConnectivityType connectivityType() {
        return this.connectivityType;
    }

    /**
     * Set sQL Server connectivity option. Possible values include: 'LOCAL', 'PRIVATE', 'PUBLIC'.
     *
     * @param connectivityType the connectivityType value to set
     * @return the SqlConnectivityUpdateSettings object itself.
     */
    public SqlConnectivityUpdateSettings withConnectivityType(ConnectivityType connectivityType) {
        this.connectivityType = connectivityType;
        return this;
    }

    /**
     * Get sQL Server port.
     *
     * @return the port value
     */
    public Integer port() {
        return this.port;
    }

    /**
     * Set sQL Server port.
     *
     * @param port the port value to set
     * @return the SqlConnectivityUpdateSettings object itself.
     */
    public SqlConnectivityUpdateSettings withPort(Integer port) {
        this.port = port;
        return this;
    }

    /**
     * Get sQL Server sysadmin login to create.
     *
     * @return the sqlAuthUpdateUserName value
     */
    public String sqlAuthUpdateUserName() {
        return this.sqlAuthUpdateUserName;
    }

    /**
     * Set sQL Server sysadmin login to create.
     *
     * @param sqlAuthUpdateUserName the sqlAuthUpdateUserName value to set
     * @return the SqlConnectivityUpdateSettings object itself.
     */
    public SqlConnectivityUpdateSettings withSqlAuthUpdateUserName(String sqlAuthUpdateUserName) {
        this.sqlAuthUpdateUserName = sqlAuthUpdateUserName;
        return this;
    }

    /**
     * Get sQL Server sysadmin login password.
     *
     * @return the sqlAuthUpdatePassword value
     */
    public String sqlAuthUpdatePassword() {
        return this.sqlAuthUpdatePassword;
    }

    /**
     * Set sQL Server sysadmin login password.
     *
     * @param sqlAuthUpdatePassword the sqlAuthUpdatePassword value to set
     * @return the SqlConnectivityUpdateSettings object itself.
     */
    public SqlConnectivityUpdateSettings withSqlAuthUpdatePassword(String sqlAuthUpdatePassword) {
        this.sqlAuthUpdatePassword = sqlAuthUpdatePassword;
        return this;
    }

}
