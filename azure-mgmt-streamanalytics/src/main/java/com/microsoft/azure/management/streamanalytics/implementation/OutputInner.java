/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.streamanalytics.implementation;

import com.microsoft.azure.management.streamanalytics.OutputDataSource;
import com.microsoft.azure.management.streamanalytics.Serialization;
import com.microsoft.azure.management.streamanalytics.Diagnostics;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.SubResource;

/**
 * An output object, containing all information associated with the named
 * output. All outputs are contained under a streaming job.
 */
@JsonFlatten
public class OutputInner extends SubResource {
    /**
     * Describes the data source that output will be written to. Required on
     * PUT (CreateOrReplace) requests.
     */
    @JsonProperty(value = "properties.datasource")
    private OutputDataSource datasource;

    /**
     * Describes how data from an input is serialized or how data is serialized
     * when written to an output. Required on PUT (CreateOrReplace) requests.
     */
    @JsonProperty(value = "properties.serialization")
    private Serialization serialization;

    /**
     * Describes conditions applicable to the Input, Output, or the job
     * overall, that warrant customer attention.
     */
    @JsonProperty(value = "properties.diagnostics", access = JsonProperty.Access.WRITE_ONLY)
    private Diagnostics diagnostics;

    /**
     * The current entity tag for the output. This is an opaque string. You can
     * use it to detect whether the resource has changed between requests. You
     * can also use it in the If-Match or If-None-Match headers for write
     * operations for optimistic concurrency.
     */
    @JsonProperty(value = "properties.etag", access = JsonProperty.Access.WRITE_ONLY)
    private String etag;

    /**
     * Get the datasource value.
     *
     * @return the datasource value
     */
    public OutputDataSource datasource() {
        return this.datasource;
    }

    /**
     * Set the datasource value.
     *
     * @param datasource the datasource value to set
     * @return the OutputInner object itself.
     */
    public OutputInner withDatasource(OutputDataSource datasource) {
        this.datasource = datasource;
        return this;
    }

    /**
     * Get the serialization value.
     *
     * @return the serialization value
     */
    public Serialization serialization() {
        return this.serialization;
    }

    /**
     * Set the serialization value.
     *
     * @param serialization the serialization value to set
     * @return the OutputInner object itself.
     */
    public OutputInner withSerialization(Serialization serialization) {
        this.serialization = serialization;
        return this;
    }

    /**
     * Get the diagnostics value.
     *
     * @return the diagnostics value
     */
    public Diagnostics diagnostics() {
        return this.diagnostics;
    }

    /**
     * Get the etag value.
     *
     * @return the etag value
     */
    public String etag() {
        return this.etag;
    }

}
