/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.machinelearning;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Defines a global parameter in the graph.
 */
public class GraphParameter {
    /**
     * Description of this graph parameter.
     */
    @JsonProperty(value = "description")
    private String description;

    /**
     * Graph parameter's type. Possible values include: 'String', 'Int',
     * 'Float', 'Enumerated', 'Script', 'Mode', 'Credential', 'Boolean',
     * 'Double', 'ColumnPicker', 'ParameterRange', 'DataGatewayName'.
     */
    @JsonProperty(value = "type", required = true)
    private ParameterType type;

    /**
     * Association links for this parameter to nodes in the graph.
     */
    @JsonProperty(value = "links", required = true)
    private List<GraphParameterLink> links;

    /**
     * Get the description value.
     *
     * @return the description value
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description value.
     *
     * @param description the description value to set
     * @return the GraphParameter object itself.
     */
    public GraphParameter withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the type value.
     *
     * @return the type value
     */
    public ParameterType type() {
        return this.type;
    }

    /**
     * Set the type value.
     *
     * @param type the type value to set
     * @return the GraphParameter object itself.
     */
    public GraphParameter withType(ParameterType type) {
        this.type = type;
        return this;
    }

    /**
     * Get the links value.
     *
     * @return the links value
     */
    public List<GraphParameterLink> links() {
        return this.links;
    }

    /**
     * Set the links value.
     *
     * @param links the links value to set
     * @return the GraphParameter object itself.
     */
    public GraphParameter withLinks(List<GraphParameterLink> links) {
        this.links = links;
        return this;
    }

}
