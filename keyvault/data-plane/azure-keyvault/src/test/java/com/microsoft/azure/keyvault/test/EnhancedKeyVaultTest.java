// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

package com.microsoft.azure.keyvault.test;

import com.microsoft.azure.keyvault.messagesecurity.HttpMessageSecurity;

import org.junit.Assert;
import org.junit.Test;
import org.apache.commons.codec.binary.Base64;

import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.MediaType;
import okhttp3.Response;
import okhttp3.ResponseBody;

import okio.Buffer;



public class EnhancedKeyVaultTest {
    String clientEncryptionKeyBase64 = "eyJraWQiOiI2NDk2NWRjYi0yZTY0LTRhMjQtYmFjMC1kNWI3NGNiMWY3YzQiLCJrdHkiOiJSU0EiLCJrZXlfb3BzIjpudWxsLCJuIjoici1kbkVZRElaemoxbVc4eXdKamJuV3BWQ2pzRXFjZ3BXTm1yRWdsWW10MUtnZnZpZTAxMEwyX05UTnZnYW5FTWY1Z2I2ZUp0UjZkOE9SN2kybXpIOVpHV1pkbVBfbkstNUJWOG9pRjdEeVpMTXptS0NtQUluazJVZV94Q0dqb0dDOUR4R1pHZWhOUWpJU2J2LURtTW4wY0UzVGh1YTVXRWt3b1h3Xzg4d1VhU2tsMk5EQXUyUjYtY1kwVldkMVFuWldrZE5qRllaZ1Uzc0tnWnRJRFh2b1oxNFBoTGY1T2tXMDlmRkdGQVUxaTRiLXkyWktyNndRQnljTUhmR1pqZ0owYXVrYWVXcTZQMnRwTmVJc1I5SDYxbkZjUkxOamw5dWptVWVNbWd6RWFzN2VtTGhNY1pDVURWbzh4aG8yU1NQTlh6RDVXQUN1MkNYSGxlWGZPSU5RIiwiZSI6IkFRQUIiLCJkIjoiTUZidE1oZ3Itb0hpckdtc2p0VHk5VTExVlR4bXlhbWlBekstR2xUTExyUEZkX2NhaER3Q3c4NTdvcldCOUg1Z3F1ZklNX3Z2Z0JOOHhjM0JGYmx6TWY3eVQ4YjhGVGFfVXJxODUybEFBaWZKM3FmZlVYNlduN28tSmR4cTVmNHdEeXM2Tm9hWUEzU3d1cm1TbEtwc0JKRmx1czE1T3NONkRWWm10WXY4ekRmLUNYem1hSEdaeG00RHZFdGJVYXMyLWo0TWRkN2U3VXNVZlg1ajBQMXNTS2YzS2ZfeGIxSVR2MC1mOFJDTy04SWozcGVQN19sRkVFTTZYRTRPS3JiSFlRc1VDVHhiZHVBMElzTGxNMHp3UFJ1NU04ZnFmLTR5VjRoc3ZMOHNGWElnWHdNRkpWc1hjek5iQldfLWtsVDczdDgxZVVubllJR21qeDQtLVE3clFRIiwiZHAiOiJ4Z1NGRXVMcm5pdHlHVVpxZXpIdjV6SW0yemhsVEpnUGp4UE41ZWJQbjF2S3JhOUxDVTdkRTZWd21WZWhVdnFlMFhIR2IyakNFTXdwQmNURk0xRlBVRERwaTVmdzMtcWkzQ3pWTHdUN2I4M1ZNcVZYYUFHN0h6MjJUWjhFU04ycHFkSVVKNS1yTzY0UGJSMWZRVWNEWkhnOGJnU2Jrc0NRbDduOWxYekE4d0UiLCJkcSI6IkNxTlJKRXc1cEhXWi1xSGwtU09remdveGpfckNiY0JKdE1hMGRTOXpSZ1ptb1N0UkxZM1QyZ1ZPN3R4RzVERkxCNXFqbVdhYUhISWNlQW00U2lXVUliUEZDV0lOWG9IZ0UzaFhqbnVOLUthU2c3UzJRR21tY09BMWN3Z1BFX0ZxNEFlRGhncEJrYjJCeUs0Y0UzN044RmhJdG91OTB0TFp0YzhDWGx6Wm8zMCIsInFpIjoiZzRZb3Z5UnRWMVAtM0tnUnIzRHd6VWxrSFpReUJUS0szVzljOXRnOEhQS2dwT3hoaXpOU29YVjBQT0RLZmRLTmFvSEx5d3AxR3dDMWxueW1ORnNVVTRXMnhDa2FuMmJKMlVRTzh5bnEtNjlRZlY0MmtPcjhNQm5vNXQ5MVdXTjJwV2NSRnZVVFNya2VaZkZJY3RxcFVtY0hQNUN2SWc2Z2xnTXVCaWlVa0FnIiwicCI6IjFIQnNjOE5oT201TXVkVmZGYldldjE4akRuclcyZ25GOXNMV1JKemE0VFJYZVZZeVpDWDZQb0I4dFp1cmJTUklNbjNqTEZFMGFCOWFsXzYwZDdhRi1VdTl2VGtfSUxPMU15aVNTWmpyYjNvd0FxaTk4WjlUYWxBRHpXWWdXZjJIbTZ5VWp1YTcyMXkxOUtldHlrQmphdHhWTGtUMzZ1NExYY2dJNm1MSzlqayIsInEiOiIwX2tpSThGQ21qWGxaZ2hNTkI2cHBfZmZ5aW5BWHR2cmlNbllTNllPNTAwSHJCYnBHejRrNGNfNDJqQTlEekUxaXVqNkFvR2lyZWF5YU9fQ0NHVmM5UVItZm4wM3Noc2h6cTlkWTN0bmRYN2lYYzhkdmlUTl9pNjU5NDQyb19XaVBreG1QYURhMzFDdGxrcWZfNW45NlBwbWZ1Z2lJc1JYaWI4Wlp6bjh3ZDAiLCJrIjpudWxsLCJrZXlfaHNtIjpudWxsfQ==";
    String clientSignatureKeyBase64 = "eyJraWQiOiI2NDk2NWRjYi0yZTY0LTRhMjQtYmFjMC1kNWI3NGNiMWY3YzQiLCJrdHkiOiJSU0EiLCJrZXlfb3BzIjpudWxsLCJuIjoici1kbkVZRElaemoxbVc4eXdKamJuV3BWQ2pzRXFjZ3BXTm1yRWdsWW10MUtnZnZpZTAxMEwyX05UTnZnYW5FTWY1Z2I2ZUp0UjZkOE9SN2kybXpIOVpHV1pkbVBfbkstNUJWOG9pRjdEeVpMTXptS0NtQUluazJVZV94Q0dqb0dDOUR4R1pHZWhOUWpJU2J2LURtTW4wY0UzVGh1YTVXRWt3b1h3Xzg4d1VhU2tsMk5EQXUyUjYtY1kwVldkMVFuWldrZE5qRllaZ1Uzc0tnWnRJRFh2b1oxNFBoTGY1T2tXMDlmRkdGQVUxaTRiLXkyWktyNndRQnljTUhmR1pqZ0owYXVrYWVXcTZQMnRwTmVJc1I5SDYxbkZjUkxOamw5dWptVWVNbWd6RWFzN2VtTGhNY1pDVURWbzh4aG8yU1NQTlh6RDVXQUN1MkNYSGxlWGZPSU5RIiwiZSI6IkFRQUIiLCJkIjoiTUZidE1oZ3Itb0hpckdtc2p0VHk5VTExVlR4bXlhbWlBekstR2xUTExyUEZkX2NhaER3Q3c4NTdvcldCOUg1Z3F1ZklNX3Z2Z0JOOHhjM0JGYmx6TWY3eVQ4YjhGVGFfVXJxODUybEFBaWZKM3FmZlVYNlduN28tSmR4cTVmNHdEeXM2Tm9hWUEzU3d1cm1TbEtwc0JKRmx1czE1T3NONkRWWm10WXY4ekRmLUNYem1hSEdaeG00RHZFdGJVYXMyLWo0TWRkN2U3VXNVZlg1ajBQMXNTS2YzS2ZfeGIxSVR2MC1mOFJDTy04SWozcGVQN19sRkVFTTZYRTRPS3JiSFlRc1VDVHhiZHVBMElzTGxNMHp3UFJ1NU04ZnFmLTR5VjRoc3ZMOHNGWElnWHdNRkpWc1hjek5iQldfLWtsVDczdDgxZVVubllJR21qeDQtLVE3clFRIiwiZHAiOiJ4Z1NGRXVMcm5pdHlHVVpxZXpIdjV6SW0yemhsVEpnUGp4UE41ZWJQbjF2S3JhOUxDVTdkRTZWd21WZWhVdnFlMFhIR2IyakNFTXdwQmNURk0xRlBVRERwaTVmdzMtcWkzQ3pWTHdUN2I4M1ZNcVZYYUFHN0h6MjJUWjhFU04ycHFkSVVKNS1yTzY0UGJSMWZRVWNEWkhnOGJnU2Jrc0NRbDduOWxYekE4d0UiLCJkcSI6IkNxTlJKRXc1cEhXWi1xSGwtU09remdveGpfckNiY0JKdE1hMGRTOXpSZ1ptb1N0UkxZM1QyZ1ZPN3R4RzVERkxCNXFqbVdhYUhISWNlQW00U2lXVUliUEZDV0lOWG9IZ0UzaFhqbnVOLUthU2c3UzJRR21tY09BMWN3Z1BFX0ZxNEFlRGhncEJrYjJCeUs0Y0UzN044RmhJdG91OTB0TFp0YzhDWGx6Wm8zMCIsInFpIjoiZzRZb3Z5UnRWMVAtM0tnUnIzRHd6VWxrSFpReUJUS0szVzljOXRnOEhQS2dwT3hoaXpOU29YVjBQT0RLZmRLTmFvSEx5d3AxR3dDMWxueW1ORnNVVTRXMnhDa2FuMmJKMlVRTzh5bnEtNjlRZlY0MmtPcjhNQm5vNXQ5MVdXTjJwV2NSRnZVVFNya2VaZkZJY3RxcFVtY0hQNUN2SWc2Z2xnTXVCaWlVa0FnIiwicCI6IjFIQnNjOE5oT201TXVkVmZGYldldjE4akRuclcyZ25GOXNMV1JKemE0VFJYZVZZeVpDWDZQb0I4dFp1cmJTUklNbjNqTEZFMGFCOWFsXzYwZDdhRi1VdTl2VGtfSUxPMU15aVNTWmpyYjNvd0FxaTk4WjlUYWxBRHpXWWdXZjJIbTZ5VWp1YTcyMXkxOUtldHlrQmphdHhWTGtUMzZ1NExYY2dJNm1MSzlqayIsInEiOiIwX2tpSThGQ21qWGxaZ2hNTkI2cHBfZmZ5aW5BWHR2cmlNbllTNllPNTAwSHJCYnBHejRrNGNfNDJqQTlEekUxaXVqNkFvR2lyZWF5YU9fQ0NHVmM5UVItZm4wM3Noc2h6cTlkWTN0bmRYN2lYYzhkdmlUTl9pNjU5NDQyb19XaVBreG1QYURhMzFDdGxrcWZfNW45NlBwbWZ1Z2lJc1JYaWI4Wlp6bjh3ZDAiLCJrIjpudWxsLCJrZXlfaHNtIjpudWxsfQ==";
    String serverEncryptionKeyBase64 = "eyJraWQiOiIwMzZhOTQ2MS01NDAxLTQzNTItYjQ0Ni02ZWNmNGQyNmUwOGEiLCJrdHkiOiJSU0EiLCJrZXlfb3BzIjpudWxsLCJuIjoiaHlmZjlHVVZSRzJnQ1Z6MnhUUTAzYlA1dzVCS2FEenRMYmhHT0REeExJaDRVSGU5VWVpSWJiZ1FKd3lTMHZKWHNaRjVTRDRPamo2WlNOQXhwbkRYdVdXcHI4Yk0xWWFMaklVYldtUTc3ZVBWT0o5bVExak1DdnlSVkJ4RVNtQUo2MVdtTjhQZ012SDBhVjJ6SFZQSXpPS0ZCLVFGQkNkZjJWaEprYlRjcF9wd25wVGZnRVlTdzNWYXdyM0RfZExIWHFMWE9HRGRQUDM4NHluTS1LSEZqMmplZ3NjaThEek9XcmtNbVdoM2tYSHU4WVFwVnBsb0hpdkVjRGM1QkNXQ2Q2NlFHZ1hkcEFzSnJfNVN2SEhsLVZJOXM3UDN1dlNraExJRGRNYWZqWm1NTURRa1pselZZWXRMQk1iVDB2NmhRVVZSaTQ2RVNkQUNMNVE5aVpGR3dRIiwiZSI6IkFRQUIiLCJkIjoiREVLZ3ZUSENPUl9jcVp6R1FlTlhmRmtNS2lKWHJaY0JTT2x6YlR0N1ZUZlgtaXl5ZnRDaU41bV8xVnI5b3FjYkwxOXI2aEtfRFVZLWIyMTdZNGJPLXVGdkFDUF9oc3NhczVlTGdLcWhDUlptekNraGhMQjBhZmE1VkREd1BQTHpVMmJFbWtCcGdSV1R2MDhocFdKcFQ3U29ycXVQak8zcGN2VGdUNWhoZjlkRkZqbjlVUkxMWGltejlnLW9KaDdETVdvVnBkS2hnU1FFR0FUUGVFelBYZFlrd3pXYml2VGRoV3hiZ2pLQjE4Y3VNaDNrTU9TYXZzbl8tU3JTdjJLTW4xWjBLTldvbHFHN1JDaWZNelZlS29pcWtKLWVUZ0ttbGtHVU8tcksxT05uM1A3VUJSZG1mNjRaZjNISTVRdERQSXJCNURnRzBHUDNrVXZvZENQWU5RIiwiZHAiOiJrOTVGRTJpZDVMMGdwWTBwUGFyQjV6d3QtS2lvbG1FcTJlMjhVaVZiSHJYRmEwbVdsMjlrak5SUi10MTk0WUNwMFd5c2VHako3Qjd3a0U3TFM4TEszaHoxelUwLU9CM3VJdmdMbHZYNk05MHgtZF81S0p3WFB0eHk1ZVdYTndGMVg5Q1ZybUNZUGlKNDFoUXY5aE40b293aEJ4dnV2MldGTS1VRkZYbS03UDAiLCJkcSI6ImtLcmRtN0pkWl9SSkMtTjJBLUw3dEo1M3RfNjlweUZkYXdwS1RlNlNGeGNabkRHSGRUNDZXdDM3dzBFZ0tGdlRYWlVzXzB3M2doUDg4YVJBLUFDb1FqdUFReWkwVVNfZUlzUWRnQ21jZ2pHOU1uVWJXYW9LeEg0eGJNNUxmYlJCMDJRdGRnWkZKdm5nWkp3R0VLZjJOVVZwM2dTNXFEZmZIMllSUUpoSnZScyIsInFpIjoibVNEV2lvaDMyblRlRWdOTTNPZ09kWXBZbmhuMjdrVE1peGNNaElKeEdnWFFER0IxNmFzTjlaZ3dLdThIMVA1TkJfVG5CUHlWUmh6ZmtEd1dVM2hjc0lRMTFxbHFNbjdaaU1Vbm81NWtNNUZENzBsaXltZVNSc3AzVTZnNnVfOEc2MXhpWFdkeHZoLVFXaEhxQnZFdWE5aXdVcUxxbXZKTnNxT3phUFBjMGFZIiwicCI6Ino2NkFVbW0zYWNmZlJjNWdLQ015ajdVbTdKVURoRlBLXzJ2eTlzZ0RudzA0X0hOUFFwcG53ZVo0cTk3cE5GMG5MQ0phdWc2Yk0wMGhNQkV1U1FBdDA0UTFIcE1fcUxtd2YzMmpjOGViaTdBYnNJYVZiVk45T1VPUlJ6UVNHNkhzZERXMUx3SUFHazRZeDJ1WXlHdkpla1ZqVHVNQ2drLXA4SFFCeFBCX2ZtcyIsInEiOiJwcG05Sl9vc3pqdVNpNlJVdXFjS3gtajgxdmFNR1EtTFlwS0U3ZE5ydldrd2dOQUYzRU5pWmcxdEZCa3dQajFyaUNXVkV5NmpmZFR0aGZ0Rk9paURpLWRwOW9mYnppaVFTT3VjSXZVb1NFcGlDZ3Ewa2RPamZQVG03UVViWmxubk1iWkJ4SVZVUS12dksweVB2SHFmSFVLdEVic2NJZjh5UWVnMDBzUTBRb00iLCJrIjpudWxsLCJrZXlfaHNtIjpudWxsfQ==";
    String serverSignatureKeyBase64 = "eyJraWQiOiI0Yjg2NGRiZi02NGRkLTQ1Y2EtOGI2OS1jZmVjMDQ1NjRiNTAiLCJrdHkiOiJSU0EiLCJrZXlfb3BzIjpudWxsLCJuIjoib1hsOS1hd2xtODNFRUhrOEVpS3dFRUJLMmhPZVMzYnVQdjVDX2xqdW9TVHZGLVlwSUdoclZEZ1hjTEF4ZmFLT0ZKS0FTUUFJTWhDSlI2a2owWGdEend1NUdrMkNmQXFuS0RMc050MHVJZEZLMFprcmJHU01RNkRyUW8zUHRaTl9Ja2N6Yi1ZeVlLQ05aMXJKZTRmRjE5VlZlT05jNTkwcTM1M21CX3UtTDFPTWZtSGNnNTM5aHdBT3JqWjhjdXIzZkotSW1NOW9naFJXLVp2UE94eXJ0Mmpsak9NancycDgzN09kdUQ0UGx5NG02RmY0c0pDUFNwYjVUUDV3OWdzeFdxQVVucjlmLTYzanYyX2RZdXZVOUpBQnB2MEprQTRSeHp5MWpJQlJoemNMWFp2TnZDSllPOFlBaGpSOGJzSEpBa0FLMXVDRFhzeXhEUFRnS0VPNXFRIiwiZSI6IkFRQUIiLCJkIjoiRWRzTWFpSjJHaTk3d2RLV0tPODdCdUVGSmU1TGI4N2I4NDFNUFRINldVbHJRdnBKaV9MZ0EzVWNhbktoVm1JMlVlSU5XNFVzWXRUZlNWUlR5S0w3ME5aY0JxT1JqVVBrVGhhcmRqbXBFMFpBZnNMd1FWRXhEWDFxNW5ZbUJNOGxuTlhBdzF2eU1Dc3cxN183VGJTcTFQNGJNSDM3MVF2bzVNZGlHM25rQXZtTnB5VVFqX1VWeVJSM3dJaEUwNnJPV0VOem83VnVQdUZvMl9OZWZtZC1WcWRMMVNDS2lPS1hiMGNOd29nTHRrMV9BVWhNNXVWY1dEU0poVmhTTzFxcEJFOHlOQ2xTR25YdWtQYlp6N3lLTnJLRUc2djBiWEJXV3d3SmRlUnhoZ0pjMFI4blVYWi14ZDlnTXhwVWM0eFU2ZmNHU3k3WHpfUzBlcVRuNGRhOVBRIiwiZHAiOiJKZHc4Mm1SM1N6X1Y4Vk8ySlRiVXpLektHTEpicUx4LWhTcFRxSktZYm5qS3NPd1R0RG1NZkFGY1VBRzZ5enJlbC02ZW50dWd0Y0o1bVZGVnVKQW44Vm1Yd2VSeFNBN3hLdUJoYUtqOWdjRTh2UzlHc21nWjF5MGZYT0VNcjBmMUFXdlV1V3RqZFh0RHdtSDQyVU03QWJILXlFaGNwRlA5aVlMOC1sUVFYYzAiLCJkcSI6Ikp2X0R5RlIzdXFxNlBkSFBrSTNBcHpKVzNmTkdrSGM4aGhUU01wd1ZzcmYyTHdKMGh5dVc2aVFnc1RaS1RoUmpyMUFZMjE1VGJsVWd1OV9rd3dEb2tnZU5LZmZwam9VTFBUSGdMOEN3c0ZKQ3A5UTE1Wl9GSEZtQzBiM291bDIzMjY1bVVFMHJwZjRZZFZLX29DWVBuRUJ4T2t6MnN6bDA3VUtlNEJzMWVGTSIsInFpIjoiaFNUWnBMM2NUSUJGaFlGUkFCd1V5QU16eVJrWExhdVVHQjRZelJEY0hvQzBBMUNXZ3k4eU1GbW1ZUWVTNlFwNUZaemV3Vy1zUnhyTkZJSFZOZTVHOE81dnhQSUFpMXF5Sk8wRWJIRHpPT0NiYXpaX2pRRXZtS0dPWGRqN2NqMDdlM2Rkdkp2cFl6UF85cDVFVGVVbEE0Q1IzMjNjbjhaNzVCY0FCTkFCamljIiwicCI6IjdlVkRqLW1vSDVlUlNJdVl2VGF2aDk1a2tqTGRkOVNXUU9xcW0xLVo2N1VGTWtsQm83NDg2S0UzZElucFB3V3dwSHA5dEZ3VXBzajBqcUJfZTJnNmpSNjFPWDBDaEE0cTh0VkFGajlIc0QtVkpLdUR2MTZBc2ExbGF4TFc2NlRNb3pGakpFZVg4OHRvS0pjVDNNR0VIeVdwd2RVRlJQeGROVVpPeFhaU2F0cyIsInEiOiJyY05nZ2pCSDFIWmRlSDJ1NXZwbVA5czFXV2lPZ0lLTXIwQUFJUnVnUVdaRUdrRy0xTzBuRVdleEphQzRiQ21YbXBCYXM3UGpNSjYyQ0I4UGRBZGZQRDBLVF9sZ3l2ckIwWXpGejVpeUdUZk1QYnNTX0Rlci1WekVsZ212V214VURXZmk0Snh0MTJpZ0NqaE5VMWdDYUVDelBoV2lNYXkwb21pOTB2V0lXc3MiLCJrIjpudWxsLCJrZXlfaHNtIjpudWxsfQ==";

    @Test
    public void protectRequestEmptyKeysTest() throws Exception {
        HttpMessageSecurity messagesecurity = getMessageSecurityWithoutKeys();

        Request request =  getRequest();
        Request protectedRequest = messagesecurity.protectRequest(request);

        Assert.assertTrue(getRequestBody(protectedRequest).equals(getRequestBody(request)));
        Assert.assertTrue(protectedRequest.method().equals(request.method()));

        Assert.assertTrue("Bearer Token".equals(protectedRequest.header("Authorization")));
    }

    @Test
    public void unprotectRequestEmptyKeysTest() throws Exception {
        HttpMessageSecurity messagesecurity = new HttpMessageSecurity("Token", "", "", null, "", true);

        Request request =  getRequest();
        Response response = getResponse();

        Response unprotectedResponse = messagesecurity.unprotectResponse(response);

        Assert.assertTrue(response.body().equals(unprotectedResponse.body()));
    }

    @Test
    public void protectRequestTest() throws Exception {
        String expectedEncryptedRequestBody = new String(Base64.decodeBase64("eyJwcm90ZWN0ZWQiOiJleUpoYkdjaU9pSlNVekkxTmlJc0ltdHBaQ0k2SWpZME9UWTFaR05pTFRKbE5qUXROR0V5TkMxaVlXTXdMV1ExWWpjMFkySXhaamRqTkNJc0ltRjBJam9pVkc5clpXNGlMQ0owY3lJNk1Dd2ljQ0k2Ym5Wc2JDd2lkSGx3SWpvaVVHOVFJbjAiLCJwYXlsb2FkIjoiZXlKd2NtOTBaV04wWldRaU9pSmxlVXBvWWtkamFVOXBTbE5WTUVWMFZEQkdSbFZEU1hOSmJYUndXa05KTmtscVFYcE9iVVUxVGtSWmVFeFVWVEJOUkVWMFRrUk5NVTFwTVdsT1JGRXlURlJhYkZreVdUQmFSRWt5V2xSQk5GbFRTWE5KYlZaMVdYbEpOa2xyUlhoTmFtaEVVV3ROZEZOR1RYbE9WRmxwWmxFaUxDSmxibU55ZVhCMFpXUmZhMlY1SWpvaVlUSldOU0lzSW1sMklqb2lWa1ZXVkZaRVJYbE5lbEpWVWxaT1ZVMVVTWHBPUVNJc0ltTnBjR2hsY25SbGVIUWlPaUpsYmpGTGRYZ3pSSE40ZERNellqbEtaRlI2UzNweVEzcGhlVkpsWldoR2VqaGZiMVpoUzE5V1QwVnphMEpUV214a1N6WmFieTFsVDJGblNVaFNha3BKY1VacllXcDFWblYwU0ZkUFkwaE5jV0Z3UVdjMGJtaE9kV1kxYlhKcFIzbFVRbWgxYTJWNFUzWlZNeTFaY0dGMVF6RkhXbGhhUjI1dFp6SjFOazVZYVVaVWEwVlZUWEpNUVcwdE5GWkRiWEZtUlhRdFFtSjRZMXBIWVdKMVJtNXlWVGxIUlhWTk5sWmpSVFZvVUZSNWFGUjFZelZoYkU1S1NpMXBNMFpQTW05dFdGUm5iUzFuVXpSUVVYRTVaRjk0U0VaQlVrcHZRM2gxTVdkSFJVcHFZbG8xUlRkeVNGZ3dRak5yV2xKaE1uUlJabXBmV1d0MFFqVTFVbmMzWW1SVlIxZDNSa05wWlhaWE9GVmhjakpJYms1dVZrWnRhWFpmUWpFeGVsUnVhRVp4VTFkd2VtbFdVV1JRVmprNE0wMVRNR2N4U2sxYVdERktWbTlVTFcxMFJWODRMWGhxTlhOTVdVZFBkbmxGTm5JdFprUlRPRFZoUTFOUlNtRkRVMUJ0TkVWM1JIbGlOVVZNUVc5WGFXTjJWMFpsVWtVNFdVZG9jekIzWDFSYVdqZENPSFk0VUdKTE1uWnFiRW8wUlc1ME4yRm1kMHRKVkd0bVRrMTZUM1pyWWprM1JWVjRSVkZRWlVOSWFYZFVUbHBRY1dGalUwUktOMEpWV0d4cFlVcE9WSGRXUkhaSFEzVlVTVE0wZUhOdVNYUkhlVXREUldocFRXbDRVR3B2ZWpaSmRYcFBTMTk1V0RWWWNrbEZMVXRmVVVSdVFYcEhkVmhVTUdkWFRYWkZVSFZJWjJScVZYbDVWSFpJWDFOWGEwcDBVelZZUzJOZmFIZExRVGRpTTNsSVpUTm1lbGRTWDNCc05GZEhhbmgxWlZKbmNFd3dUSFpQV1doMWVqZERibE5hVlZFNVpHcHRiMUJCU0VkUlowbHFhWGM0YTA5S2FHNHRVbEZoVHpoRVlXdGtkMUJKVmxKc2RYSlBRbU5qU21kT2IybEhWR0pDY2pRM1VIQTNTVE5NWlZSb1YyNVJObmwwVGtWdk5YTktZVk5SWlU1aFUwODRPV3hQVWpGRVpIUk5SRTF6VDBWc1ZXZFNRbE5vUTJWWFZta3hNalJwTUdOZlUzbFVSV1l5UkRVeFpYVXRNbFY2V1MxSU4wVTJiWGREYmxWamEzVlBkRkE0Ums5NVJrUXpVM0YzWXpCSWRGZHhaMmRRTVc1MGRIUnZVVkpTU0hwTWJFTjZaazF4TTBOamNYVmtiV0UzWW1vMk5teEpablE0VkZoV1gxSnFTWFpHY0VORGQxRmhOR2gxZFdwR1JrZ3haRFpCSWl3aWRHRm5Jam9pWjJKU05WbEtkWGwwTkZZMWRsUk9lazFRV0RScWR5SjkiLCJzaWduYXR1cmUiOiJtdVhWcmN1TjUzanhYY0xmc0Q5MlF2YW43cm41UGhHZW9qdTJaSGtEX3E3YlpHVGU0R0NzRkZuNnRsdzRDTVhNcDZsQ3N6VmRyMkJadjVDeFZHbGFFMVluSUh2bkg2Y3JWMklFVERUMUhiZ3NjMHF4NUtGaHI2cklXUjhJdm91X001MGlFc2UzZDRyN19ZR3dxbDhyWFN6N2NPWXFHRE91bEZyY1FaZ2xwZU15TVdRS19nQXRJSjBlTUk3ZGk5ZG5fQ0pKLUhKUlNUWWJsNkF4czgzOFAtR3pfcV9HNXNtSldfVmN2bVRFVlhRNGliLWNjUlpxYklZNUxSYmpkZl9UaWJ0XzUwZndkT3h2OHZWY1MyQUlISHduWVM1bmhUSGFfZ1hvdmtSU1lJVEw2SXd0Q1Y0TzRuTm12cHFQcDNiLW5ndnl4a2VQbVgzRE1KZHp2aml4Y2cifQ=="));
        HttpMessageSecurity messagesecurity = getMessageSecurityWithKeys();

        Request request =  getRequest();
        Request protectedRequest = messagesecurity.protectRequest(request);

        Assert.assertTrue(getRequestBody(protectedRequest).equals(expectedEncryptedRequestBody));
        Assert.assertTrue(protectedRequest.method().equals(request.method()));

        Assert.assertTrue("Bearer Token".equals(protectedRequest.header("Authorization")));
    }

    @Test
    public void unprotectResponseTest() throws Exception {
        String expectedResponse = new String(Base64.decodeBase64("eyJraWQiOiJ0ZXN0IiwicmVrIjp7Imp3ayI6eyJraWQiOiIwMzZhOTQ2MS01NDAxLTQzNTItYjQ0Ni02ZWNmNGQyNmUwOGEiLCJrdHkiOiJSU0EiLCJrZXlfb3BzIjpbImVuY3J5cHQiLCJ3cmFwS2V5IiwidmVyaWZ5Il0sIm4iOiJoeWZmOUdVVlJHMmdDVnoyeFRRMDNiUDV3NUJLYUR6dExiaEdPRER4TEloNFVIZTlVZWlJYmJnUUp3eVMwdkpYc1pGNVNENE9qajZaU05BeHBuRFh1V1dwcjhiTTFZYUxqSVViV21RNzdlUFZPSjltUTFqTUN2eVJWQnhFU21BSjYxV21OOFBnTXZIMGFWMnpIVlBJek9LRkItUUZCQ2RmMlZoSmtiVGNwX3B3bnBUZmdFWVN3M1Zhd3IzRF9kTEhYcUxYT0dEZFBQMzg0eW5NLUtIRmoyamVnc2NpOER6T1dya01tV2gza1hIdThZUXBWcGxvSGl2RWNEYzVCQ1dDZDY2UUdnWGRwQXNKcl81U3ZISGwtVkk5czdQM3V2U2toTElEZE1hZmpabU1NRFFrWmx6VllZdExCTWJUMHY2aFFVVlJpNDZFU2RBQ0w1UTlpWkZHd1EiLCJlIjoiQVFBQiIsImQiOm51bGwsImRwIjpudWxsLCJkcSI6bnVsbCwicWkiOm51bGwsInAiOm51bGwsInEiOm51bGwsImsiOm51bGwsImtleV9oc20iOm51bGx9fX0="));
        HttpMessageSecurity messagesecurity = getMessageSecurityWithKeys();
        Response response = getResponse();

        Response unprotectedResponse = messagesecurity.unprotectResponse(response);

        Assert.assertTrue(expectedResponse.equals(unprotectedResponse.body().string()));
    }

    private HttpMessageSecurity getMessageSecurityWithoutKeys() throws Exception {
        return new HttpMessageSecurity("Token", "", "", "", "", true);
    }

    private HttpMessageSecurity getMessageSecurityWithKeys() throws Exception {
        return new HttpMessageSecurity("Token",
                                       new String(Base64.decodeBase64(clientEncryptionKeyBase64)),
                                       new String(Base64.decodeBase64(clientSignatureKeyBase64)),
                                       new String(Base64.decodeBase64(serverEncryptionKeyBase64)),
                                       new String(Base64.decodeBase64(serverSignatureKeyBase64)),
                                       true);
    }

    private Request getRequest() {
        RequestBody requestBody = RequestBody.create(MediaType.parse("application/jose+json"), "{\"kid\":\"test\"}");
        return (new Request.Builder()).url("http://www.contoso.com").post(requestBody).build();
    }

    private Response getResponse() {
        String responseBodyString = new String(Base64.decodeBase64("eyJwcm90ZWN0ZWQiOiJleUpoYkdjaU9pSlNVekkxTmlJc0ltdHBaQ0k2SWpSaU9EWTBaR0ptTFRZMFpHUXRORFZqWVMwNFlqWTVMV05tWldNd05EVTJOR0kxTUNJc0ltRjBJam9pVkc5clpXNGlMQ0owY3lJNk1Dd2ljQ0k2Ym5Wc2JDd2lkSGx3SWpvaVVHOVFJbjAiLCJwYXlsb2FkIjoiZXlKd2NtOTBaV04wWldRaU9pSmxlVXBvWWtkamFVOXBTbE5WTUVWMFZEQkdSbFZEU1hOSmJYUndXa05KTmtscVdUQlBWRmt4V2tkT2FVeFVTbXhPYWxGMFRrZEZlVTVETVdsWlYwMTNURmRSTVZscVl6QlpNa2w0V21wa2FrNURTWE5KYlZaMVdYbEpOa2xyUlhoTmFtaEVVV3ROZEZOR1RYbE9WRmxwWmxFaUxDSmxibU55ZVhCMFpXUmZhMlY1SWpvaVFsVnNkVEJIWDJObldVSm9iVFYzUm5WaGEzZHViekEwUkZVd1kxTkRYemxVWjNwRGVsVlNRMWd5Y1VkdWRqRldaRTFRU0RVelpFcE1TbkZJT0ROc2IyWmplVTVSV0hGWWEwRlZkbVUxYVhVdFNGVlpXRmRwVmpOYVNsaGhWRVZRTUZKb2RHZHdaMkl3VUhGMFZtSlVibWRHU25VNVJ6Rm5VMWswTmxaTVdYaGtWek41ZGtsTFpFRmhRalV5Ums4M1MyOVlZVWw2T1ROblgxOHdjMnhuV1hSTlkxSjNkRm80VlZaTVpFVjNOemxXZUY5elMybGZNbVZyVm5VeFFYaE1iV0o2ZWxKeVNYQnplblJhUWpKWWNIWlRSak16VFRoVE1XSXRWVnBSU2s5QlVqWmpaQzE0UkVsRFYzVTRWbEJLZUVaalFWSlVaVlpHT1ZCaGNqbFBSMEpKV1ZOd1NXMXdTRlpYTUVWWE4yTkVSVVl6YWpCU2NFaEVRMko1YUZoeGFtVmpUMEZsVlV4MVRtaExOa0ZLYVhwTmF6Rldha3RFVldzM09HSlVhbkpSYkZOV1ZHWmxOamxTYVdGYVJsUXRabmhtYVhCQklpd2lhWFlpT2lKV1JWWlVWa1JGZVUxNlVsVlNWazVWVFZSSmVrNUJJaXdpWTJsd2FHVnlkR1Y0ZENJNkltVnVNVXQxZURORWMzaDBNek5pT1Vwa1ZIcExlbkpEZW1GNVVtVmxhRVo2T0Y5dlZtRkxYMVpQUlhWa2NXb3pkVGt3WWxWamFqVlllV2xyVVdGSFMyUXlZa0V3T0hsaWVuaHRUalZMVFVkbVRGSjBRbWMwVGpOMFNEQmhXRGxFWHpKSk4wdFZVRk5SY25GQ1dGTkpaSFZtV0RsaFdrUnZaRTl4ZW0xMWFWRmpkWFJUVWtWVFJtRkJUa2xTWHpCS2FsUkpORmhOVW1RMk5uQXdiVFJLVjA5TlluSmZkRlJ3VDNwVmJtbEhXRzloYUdZMU1sSk5kV3MxVlRCWFNrOU9aSGRxWlhwdll6bHdWM0JLTUdSTVZVVmlhVGhQVjJzMk9IVkdkemR3TFRWc1JIcFRSbGx4WVhOQ2FsaHFXSFJLV1c1alUzRnZUbTU0Y1VFMWVtTjBSSGxpUm5NNFMzSXRWSGRCYUU1S2JYQnJUVzVpYkZoTWVrczRVMGxZWkc1alZEbHJRWEJFWVZKWFQzWkNVa014ZVdaNlFUTmhhemd6VmpaSlFUZzRRMGt5WVRWcmMzSm9lakZIWTNKWllVVkRkWEY1ZFROMFNsZ3RMVVIyWlhSRWIwSlpkbDgzWlY5eWN6RnNWMVIzV0VOdk9FdG5MVVZzTTA1VFVFTnJjM2xFT1RWWFRYRkhSVWx6Y1V4aU1XVllWazEwWVd4aE5scGZYMHQyVTFSWVRVa3pZa0pVYkRoTFJITklNME5GTW5FNWNFdGxSbXBvTFROdVVuQnNibGcwYVdWcldsUjFRbWxrVDJaT1ozQktkRk13TTFSM05uVlJRbTB0WXpaWVRrUlNTR00xTUZjMFJ6WTFOemMxWDJJMmFFZGZjbmcxYkZSV2NYUTNaamRRTkZGeU1tRnFPSE5RTUdwaVJYWk1SRkJYWlhKYVdtNXpUak55T0VscmIwcFpPVTVLT0ZSelJuRXpSemMyVDE5U1gyVnJNRlZQY0Vob2VTMDFWR3B0UW1wTWFYSm1SMGRaZW5RNGJEWkRkVGd4YzBJdExVZG1SSEYwVkRNNVQxTTJaM2RvYWsxQlUxSjRORzQwYkRCVmRFbFNiMlpCWVdNd1IzWkNhVUZrV2xRMVIzcEVYekZZYUdSdGVGSnhNbmR1Vms0eE1XaDRSeTFTTUY5ZlFYQlNVVUY1WVdwaWNGQnFhMkYxWDE5ck5qVnFibTFWYWxGcGNXbHNjM1Z4UkZkR2JVWXlja1V0VlUwMFFXRkxSVlI2TUdWdFJtd3diakZ5WVRWRlNYVkpXRXczVFVjNVgybDZVMlZ2UlRaT1lWWnRkMnRHWnpKbFpqTnRNbk0xWTFKMlRGZ3hSeUlzSW5SaFp5STZJbUZIWTAwelVrWnJOR2xQVG5KZmVGUjBURkpQV21jaWZRIiwic2lnbmF0dXJlIjoiSXYzMzZ4Z1ZMVjNjOXpVb1RIcVRPd3Z6cHg2VTBySXpYaVRqS1Fxak8zSmZsbUJWczJ1OEw0STNDVFhSbGZuU0U5Y0plSXNuazR1Nmh1ZzhhakN0eHdVczBaUjVJREtPaDlfYjJoTG5vZEhQaE9Fb1dEMTBaWEJSZFlKb2dqVDd6cXhNSkd2NC1Mdmg5aGp5TE5BLUZ5TXd0dG9QVmQxdjRfOVlNQzNGczhUTHAyZTlrRHdreUxYUXpDYXN1ZkpRSGVybW82MDFJcXFfUVVZbTZnaWJCVXFMOWI4NEk3OHNOSVRLcWxkb0tGLXVKeHcxNzJRM2NMbEZycEJIWWhDalB2OFYtZnJHOGtMOVBhXzdaRjJBME4ycTNkR1ltMDAzWGo3VllmUDBkVU1rTFRnLUppakJNUzNnMDlqVTdLck5xRjlkUF9xejhjXzFjaG1JWFhxa3VRIn0="));

        ResponseBody responseBody = ResponseBody.create(MediaType.parse("application/jose+json"), responseBodyString);
        return (new Response.Builder())
                .header("content-type", "application/jose+json")
                .body(responseBody)
                .request(getRequest())
                .protocol(okhttp3.Protocol.HTTP_2)
                .code(200)
                .message("OK")
                .build();
    }

    private String getRequestBody(Request request) throws Exception {
        Buffer buffer = new Buffer();
        request.body().writeTo(buffer);
        return buffer.readUtf8();
    }
}
