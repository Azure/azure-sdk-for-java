/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * abc
 */

package com.microsoft.azure.management.keyvault.v2016_10_01.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.keyvault.v2016_10_01.AccessPolicies;
import rx.functions.Func1;
import rx.Observable;
import com.microsoft.azure.management.keyvault.v2016_10_01.VaultAccessPolicyParameters;
import com.microsoft.azure.management.keyvault.v2016_10_01.AccessPolicyUpdateKind;
import com.microsoft.azure.management.keyvault.v2016_10_01.VaultAccessPolicyProperties;

class AccessPoliciesImpl extends WrapperImpl<VaultsInner> implements AccessPolicies {
    private final KeyVaultManager manager;

    AccessPoliciesImpl(KeyVaultManager manager) {
        super(manager.inner().vaults());
        this.manager = manager;
    }

    public KeyVaultManager manager() {
        return this.manager;
    }

    @Override
    public Observable<VaultAccessPolicyParameters> updateAccessPolicyAsync(String resourceGroupName, String vaultName, AccessPolicyUpdateKind operationKind, VaultAccessPolicyProperties properties) {
        VaultsInner client = this.inner();
        return client.updateAccessPolicyAsync(resourceGroupName, vaultName, operationKind, properties)
        .map(new Func1<VaultAccessPolicyParametersInner, VaultAccessPolicyParameters>() {
            @Override
            public VaultAccessPolicyParameters call(VaultAccessPolicyParametersInner inner) {
                return new VaultAccessPolicyParametersImpl(inner, manager());
            }
        });
    }

}
