/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.datafactoryv2.v2017_09_01_preview;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * A copy activity tabular translator.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type")
@JsonTypeName("TabularTranslator")
public class TabularTranslator extends CopyTranslator {
    /**
     * Column mappings. Example: "UserId: MyUserId, Group: MyGroup, Name:
     * MyName" Type: string (or Expression with resultType string).
     */
    @JsonProperty(value = "columnMappings")
    private Object columnMappings;

    /**
     * The schema mapping to map between tabular data and hierarchical data.
     * Example: {"Column1": "$.Column1", "Column2": "$.Column2.Property1",
     * "Column3": "$.Column2.Property2"}. Type: object (or Expression with
     * resultType object).
     */
    @JsonProperty(value = "schemaMapping")
    private Object schemaMapping;

    /**
     * Get column mappings. Example: "UserId: MyUserId, Group: MyGroup, Name: MyName" Type: string (or Expression with resultType string).
     *
     * @return the columnMappings value
     */
    public Object columnMappings() {
        return this.columnMappings;
    }

    /**
     * Set column mappings. Example: "UserId: MyUserId, Group: MyGroup, Name: MyName" Type: string (or Expression with resultType string).
     *
     * @param columnMappings the columnMappings value to set
     * @return the TabularTranslator object itself.
     */
    public TabularTranslator withColumnMappings(Object columnMappings) {
        this.columnMappings = columnMappings;
        return this;
    }

    /**
     * Get the schema mapping to map between tabular data and hierarchical data. Example: {"Column1": "$.Column1", "Column2": "$.Column2.Property1", "Column3": "$.Column2.Property2"}. Type: object (or Expression with resultType object).
     *
     * @return the schemaMapping value
     */
    public Object schemaMapping() {
        return this.schemaMapping;
    }

    /**
     * Set the schema mapping to map between tabular data and hierarchical data. Example: {"Column1": "$.Column1", "Column2": "$.Column2.Property1", "Column3": "$.Column2.Property2"}. Type: object (or Expression with resultType object).
     *
     * @param schemaMapping the schemaMapping value to set
     * @return the TabularTranslator object itself.
     */
    public TabularTranslator withSchemaMapping(Object schemaMapping) {
        this.schemaMapping = schemaMapping;
        return this;
    }

}
