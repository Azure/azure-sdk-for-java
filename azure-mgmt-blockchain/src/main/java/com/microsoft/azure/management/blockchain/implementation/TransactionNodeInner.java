/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.blockchain.implementation;

import com.microsoft.azure.management.blockchain.NodeProvisioningState;
import java.util.List;
import com.microsoft.azure.management.blockchain.FirewallRule;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.ProxyResource;

/**
 * Payload of the transaction node which is the request/response of the
 * resource provider.
 */
@JsonFlatten
public class TransactionNodeInner extends ProxyResource {
    /**
     * Gets or sets the transaction node location.
     */
    @JsonProperty(value = "location")
    private String location;

    /**
     * Gets or sets the blockchain member provision state. Possible values
     * include: 'NotSpecified', 'Updating', 'Deleting', 'Succeeded', 'Failed'.
     */
    @JsonProperty(value = "properties.provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private NodeProvisioningState provisioningState;

    /**
     * Gets or sets the transaction node dns endpoint.
     */
    @JsonProperty(value = "properties.dns", access = JsonProperty.Access.WRITE_ONLY)
    private String dns;

    /**
     * Gets or sets the transaction node public key.
     */
    @JsonProperty(value = "properties.publicKey", access = JsonProperty.Access.WRITE_ONLY)
    private String publicKey;

    /**
     * Gets or sets the transaction node dns endpoint basic auth user name.
     */
    @JsonProperty(value = "properties.userName", access = JsonProperty.Access.WRITE_ONLY)
    private String userName;

    /**
     * Sets the transaction node dns endpoint basic auth password.
     */
    @JsonProperty(value = "properties.password")
    private String password;

    /**
     * Gets or sets the firewall rules.
     */
    @JsonProperty(value = "properties.firewallRules")
    private List<FirewallRule> firewallRules;

    /**
     * Get gets or sets the transaction node location.
     *
     * @return the location value
     */
    public String location() {
        return this.location;
    }

    /**
     * Set gets or sets the transaction node location.
     *
     * @param location the location value to set
     * @return the TransactionNodeInner object itself.
     */
    public TransactionNodeInner withLocation(String location) {
        this.location = location;
        return this;
    }

    /**
     * Get gets or sets the blockchain member provision state. Possible values include: 'NotSpecified', 'Updating', 'Deleting', 'Succeeded', 'Failed'.
     *
     * @return the provisioningState value
     */
    public NodeProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get gets or sets the transaction node dns endpoint.
     *
     * @return the dns value
     */
    public String dns() {
        return this.dns;
    }

    /**
     * Get gets or sets the transaction node public key.
     *
     * @return the publicKey value
     */
    public String publicKey() {
        return this.publicKey;
    }

    /**
     * Get gets or sets the transaction node dns endpoint basic auth user name.
     *
     * @return the userName value
     */
    public String userName() {
        return this.userName;
    }

    /**
     * Get sets the transaction node dns endpoint basic auth password.
     *
     * @return the password value
     */
    public String password() {
        return this.password;
    }

    /**
     * Set sets the transaction node dns endpoint basic auth password.
     *
     * @param password the password value to set
     * @return the TransactionNodeInner object itself.
     */
    public TransactionNodeInner withPassword(String password) {
        this.password = password;
        return this;
    }

    /**
     * Get gets or sets the firewall rules.
     *
     * @return the firewallRules value
     */
    public List<FirewallRule> firewallRules() {
        return this.firewallRules;
    }

    /**
     * Set gets or sets the firewall rules.
     *
     * @param firewallRules the firewallRules value to set
     * @return the TransactionNodeInner object itself.
     */
    public TransactionNodeInner withFirewallRules(List<FirewallRule> firewallRules) {
        this.firewallRules = firewallRules;
        return this;
    }

}
