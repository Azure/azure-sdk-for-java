/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.logic.v2016_06_01;

import rx.Observable;
import rx.Completable;
import com.microsoft.azure.management.logic.v2016_06_01.implementation.WorkflowTriggerHistoriesInner;
import com.microsoft.azure.arm.model.HasInner;

/**
 * Type representing Histories.
 */
public interface Histories extends HasInner<WorkflowTriggerHistoriesInner> {

    /**
     * Gets a list of workflow trigger histories.
     *
     * @param resourceGroupName The resource group name.
     * @param workflowName The workflow name.
     * @param triggerName The workflow trigger name.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<WorkflowTriggerHistory> listByTriggerAsync(final String resourceGroupName, final String workflowName, final String triggerName);

    /**
     * Gets a workflow trigger history.
    *
     * @param resourceGroupName The resource group name.
     * @param workflowName The workflow name.
     * @param triggerName The workflow trigger name.
     * @param historyName The workflow trigger history name. Corresponds to the run name for triggers that resulted in a run.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<WorkflowTriggerHistory> getByTriggerAsync(String resourceGroupName, String workflowName, String triggerName, String historyName);
    /**
     * Resubmits a workflow run based on the trigger history.
     *
     * @param resourceGroupName The resource group name.
     * @param workflowName The workflow name.
     * @param triggerName The workflow trigger name.
     * @param historyName The workflow trigger history name. Corresponds to the run name for triggers that resulted in a run.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable resubmitAsync(String resourceGroupName, String workflowName, String triggerName, String historyName);

}
