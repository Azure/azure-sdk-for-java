/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * abc
 */

package com.microsoft.azure.management.logic.v2016_06_01.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.logic.v2016_06_01.WorkflowSchemas;
import rx.functions.Func1;
import rx.Observable;
import com.microsoft.azure.management.logic.v2016_06_01.JsonSchema;

class WorkflowSchemasImpl extends WrapperImpl<WorkflowTriggersInner> implements WorkflowSchemas {
    private final LogicManager manager;

    WorkflowSchemasImpl(LogicManager manager) {
        super(manager.inner().workflowTriggers());
        this.manager = manager;
    }

    public LogicManager manager() {
        return this.manager;
    }

    @Override
    public Observable<JsonSchema> getSchemaJsonAsync(String resourceGroupName, String workflowName, String triggerName) {
        WorkflowTriggersInner client = this.inner();
        return client.getSchemaJsonAsync(resourceGroupName, workflowName, triggerName)
        .map(new Func1<JsonSchemaInner, JsonSchema>() {
            @Override
            public JsonSchema call(JsonSchemaInner inner) {
                return new JsonSchemaImpl(inner, manager());
            }
        });
    }

}
