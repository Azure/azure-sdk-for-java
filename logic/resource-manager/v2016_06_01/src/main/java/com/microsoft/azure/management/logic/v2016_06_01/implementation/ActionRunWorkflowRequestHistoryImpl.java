/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.logic.v2016_06_01.implementation;

import com.microsoft.azure.management.logic.v2016_06_01.ActionRunWorkflowRequestHistory;
import com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl;
import rx.Observable;
import org.joda.time.DateTime;
import com.microsoft.azure.management.logic.v2016_06_01.Request;
import com.microsoft.azure.management.logic.v2016_06_01.Response;
import java.util.Map;

class ActionRunWorkflowRequestHistoryImpl extends IndexableRefreshableWrapperImpl<ActionRunWorkflowRequestHistory, RequestHistoryInner> implements ActionRunWorkflowRequestHistory {
    private final LogicManager manager;
    private String resourceGroupName;
    private String workflowName;
    private String runName;
    private String actionName;
    private String requestHistoryName;

    ActionRunWorkflowRequestHistoryImpl(RequestHistoryInner inner,  LogicManager manager) {
        super(null, inner);
        this.manager = manager;
        this.resourceGroupName = IdParsingUtils.getValueFromIdByName(inner.id(), "resourceGroups");
        this.workflowName = IdParsingUtils.getValueFromIdByName(inner.id(), "workflows");
        this.runName = IdParsingUtils.getValueFromIdByName(inner.id(), "runs");
        this.actionName = IdParsingUtils.getValueFromIdByName(inner.id(), "actions");
        this.requestHistoryName = IdParsingUtils.getValueFromIdByName(inner.id(), "requestHistories");
    }

    @Override
    public LogicManager manager() {
        return this.manager;
    }

    @Override
    protected Observable<RequestHistoryInner> getInnerAsync() {
        WorkflowRunActionRequestHistoriesInner client = this.manager().inner().workflowRunActionRequestHistories();
        return client.getAsync(this.resourceGroupName, this.workflowName, this.runName, this.actionName, this.requestHistoryName);
    }



    @Override
    public DateTime endTime() {
        return this.inner().endTime();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public String location() {
        return this.inner().location();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public Request request() {
        return this.inner().request();
    }

    @Override
    public Response response() {
        return this.inner().response();
    }

    @Override
    public DateTime startTime() {
        return this.inner().startTime();
    }

    @Override
    public Map<String, String> tags() {
        return this.inner().getTags();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

}
