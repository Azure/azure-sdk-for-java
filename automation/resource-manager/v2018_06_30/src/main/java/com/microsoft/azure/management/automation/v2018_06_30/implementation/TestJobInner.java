/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.automation.v2018_06_30.implementation;

import org.joda.time.DateTime;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Definition of the test job.
 */
public class TestJobInner {
    /**
     * Gets or sets the creation time of the test job.
     */
    @JsonProperty(value = "creationTime")
    private DateTime creationTime;

    /**
     * Gets or sets the status of the test job.
     */
    @JsonProperty(value = "status")
    private String status;

    /**
     * Gets or sets the status details of the test job.
     */
    @JsonProperty(value = "statusDetails")
    private String statusDetails;

    /**
     * Gets or sets the runOn which specifies the group name where the job is
     * to be executed.
     */
    @JsonProperty(value = "runOn")
    private String runOn;

    /**
     * Gets or sets the start time of the test job.
     */
    @JsonProperty(value = "startTime")
    private DateTime startTime;

    /**
     * Gets or sets the end time of the test job.
     */
    @JsonProperty(value = "endTime")
    private DateTime endTime;

    /**
     * Gets or sets the exception of the test job.
     */
    @JsonProperty(value = "exception")
    private String exception;

    /**
     * Gets or sets the last modified time of the test job.
     */
    @JsonProperty(value = "lastModifiedTime")
    private DateTime lastModifiedTime;

    /**
     * Gets or sets the last status modified time of the test job.
     */
    @JsonProperty(value = "lastStatusModifiedTime")
    private DateTime lastStatusModifiedTime;

    /**
     * Gets or sets the parameters of the test job.
     */
    @JsonProperty(value = "parameters")
    private Map<String, String> parameters;

    /**
     * The activity-level tracing options of the runbook.
     */
    @JsonProperty(value = "logActivityTrace")
    private Integer logActivityTrace;

    /**
     * Get gets or sets the creation time of the test job.
     *
     * @return the creationTime value
     */
    public DateTime creationTime() {
        return this.creationTime;
    }

    /**
     * Set gets or sets the creation time of the test job.
     *
     * @param creationTime the creationTime value to set
     * @return the TestJobInner object itself.
     */
    public TestJobInner withCreationTime(DateTime creationTime) {
        this.creationTime = creationTime;
        return this;
    }

    /**
     * Get gets or sets the status of the test job.
     *
     * @return the status value
     */
    public String status() {
        return this.status;
    }

    /**
     * Set gets or sets the status of the test job.
     *
     * @param status the status value to set
     * @return the TestJobInner object itself.
     */
    public TestJobInner withStatus(String status) {
        this.status = status;
        return this;
    }

    /**
     * Get gets or sets the status details of the test job.
     *
     * @return the statusDetails value
     */
    public String statusDetails() {
        return this.statusDetails;
    }

    /**
     * Set gets or sets the status details of the test job.
     *
     * @param statusDetails the statusDetails value to set
     * @return the TestJobInner object itself.
     */
    public TestJobInner withStatusDetails(String statusDetails) {
        this.statusDetails = statusDetails;
        return this;
    }

    /**
     * Get gets or sets the runOn which specifies the group name where the job is to be executed.
     *
     * @return the runOn value
     */
    public String runOn() {
        return this.runOn;
    }

    /**
     * Set gets or sets the runOn which specifies the group name where the job is to be executed.
     *
     * @param runOn the runOn value to set
     * @return the TestJobInner object itself.
     */
    public TestJobInner withRunOn(String runOn) {
        this.runOn = runOn;
        return this;
    }

    /**
     * Get gets or sets the start time of the test job.
     *
     * @return the startTime value
     */
    public DateTime startTime() {
        return this.startTime;
    }

    /**
     * Set gets or sets the start time of the test job.
     *
     * @param startTime the startTime value to set
     * @return the TestJobInner object itself.
     */
    public TestJobInner withStartTime(DateTime startTime) {
        this.startTime = startTime;
        return this;
    }

    /**
     * Get gets or sets the end time of the test job.
     *
     * @return the endTime value
     */
    public DateTime endTime() {
        return this.endTime;
    }

    /**
     * Set gets or sets the end time of the test job.
     *
     * @param endTime the endTime value to set
     * @return the TestJobInner object itself.
     */
    public TestJobInner withEndTime(DateTime endTime) {
        this.endTime = endTime;
        return this;
    }

    /**
     * Get gets or sets the exception of the test job.
     *
     * @return the exception value
     */
    public String exception() {
        return this.exception;
    }

    /**
     * Set gets or sets the exception of the test job.
     *
     * @param exception the exception value to set
     * @return the TestJobInner object itself.
     */
    public TestJobInner withException(String exception) {
        this.exception = exception;
        return this;
    }

    /**
     * Get gets or sets the last modified time of the test job.
     *
     * @return the lastModifiedTime value
     */
    public DateTime lastModifiedTime() {
        return this.lastModifiedTime;
    }

    /**
     * Set gets or sets the last modified time of the test job.
     *
     * @param lastModifiedTime the lastModifiedTime value to set
     * @return the TestJobInner object itself.
     */
    public TestJobInner withLastModifiedTime(DateTime lastModifiedTime) {
        this.lastModifiedTime = lastModifiedTime;
        return this;
    }

    /**
     * Get gets or sets the last status modified time of the test job.
     *
     * @return the lastStatusModifiedTime value
     */
    public DateTime lastStatusModifiedTime() {
        return this.lastStatusModifiedTime;
    }

    /**
     * Set gets or sets the last status modified time of the test job.
     *
     * @param lastStatusModifiedTime the lastStatusModifiedTime value to set
     * @return the TestJobInner object itself.
     */
    public TestJobInner withLastStatusModifiedTime(DateTime lastStatusModifiedTime) {
        this.lastStatusModifiedTime = lastStatusModifiedTime;
        return this;
    }

    /**
     * Get gets or sets the parameters of the test job.
     *
     * @return the parameters value
     */
    public Map<String, String> parameters() {
        return this.parameters;
    }

    /**
     * Set gets or sets the parameters of the test job.
     *
     * @param parameters the parameters value to set
     * @return the TestJobInner object itself.
     */
    public TestJobInner withParameters(Map<String, String> parameters) {
        this.parameters = parameters;
        return this;
    }

    /**
     * Get the activity-level tracing options of the runbook.
     *
     * @return the logActivityTrace value
     */
    public Integer logActivityTrace() {
        return this.logActivityTrace;
    }

    /**
     * Set the activity-level tracing options of the runbook.
     *
     * @param logActivityTrace the logActivityTrace value to set
     * @return the TestJobInner object itself.
     */
    public TestJobInner withLogActivityTrace(Integer logActivityTrace) {
        this.logActivityTrace = logActivityTrace;
        return this;
    }

}
