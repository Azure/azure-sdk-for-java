/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.automation.v2018_06_30;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.automation.v2018_06_30.implementation.ModuleInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.automation.v2018_06_30.implementation.AutomationManager;
import java.util.Map;
import org.joda.time.DateTime;

/**
 * Type representing Module.
 */
public interface Module extends HasInner<ModuleInner>, Indexable, Refreshable<Module>, Updatable<Module.Update>, HasManager<AutomationManager> {
    /**
     * @return the activityCount value.
     */
    Integer activityCount();

    /**
     * @return the contentLink value.
     */
    ContentLink contentLink();

    /**
     * @return the creationTime value.
     */
    DateTime creationTime();

    /**
     * @return the description value.
     */
    String description();

    /**
     * @return the error value.
     */
    ModuleErrorInfo error();

    /**
     * @return the etag value.
     */
    String etag();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the isComposite value.
     */
    Boolean isComposite();

    /**
     * @return the isGlobal value.
     */
    Boolean isGlobal();

    /**
     * @return the lastModifiedTime value.
     */
    DateTime lastModifiedTime();

    /**
     * @return the location value.
     */
    String location();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the provisioningState value.
     */
    ModuleProvisioningState provisioningState();

    /**
     * @return the sizeInBytes value.
     */
    Long sizeInBytes();

    /**
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * @return the type value.
     */
    String type();

    /**
     * @return the version value.
     */
    String version();

    /**
     * The entirety of the Module definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithAutomationAccount, DefinitionStages.WithContentLink, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of Module definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a Module definition.
         */
        interface Blank extends WithAutomationAccount {
        }

        /**
         * The stage of the module definition allowing to specify AutomationAccount.
         */
        interface WithAutomationAccount {
           /**
            * Specifies resourceGroupName, automationAccountName.
            * @param resourceGroupName Name of an Azure Resource group
            * @param automationAccountName The name of the automation account
            * @return the next definition stage
            */
            WithContentLink withExistingAutomationAccount(String resourceGroupName, String automationAccountName);
        }

        /**
         * The stage of the module definition allowing to specify ContentLink.
         */
        interface WithContentLink {
           /**
            * Specifies contentLink.
            * @param contentLink Gets or sets the module content link
            * @return the next definition stage
            */
            WithCreate withContentLink(ContentLink contentLink);
        }

        /**
         * The stage of the module definition allowing to specify Tags.
         */
        interface WithTags {
            /**
             * Specifies tags.
             * @param tags Gets or sets the tags attached to the resource
             * @return the next definition stage
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<Module>, DefinitionStages.WithTags {
        }
    }
    /**
     * The template for a Module update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<Module>, UpdateStages.WithTags {
    }

    /**
     * Grouping of Module update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the module update allowing to specify Tags.
         */
        interface WithTags {
            /**
             * Specifies tags.
             * @param tags Gets or sets the tags attached to the resource
             * @return the next update stage
             */
            Update withTags(Map<String, String> tags);
        }

    }
}
