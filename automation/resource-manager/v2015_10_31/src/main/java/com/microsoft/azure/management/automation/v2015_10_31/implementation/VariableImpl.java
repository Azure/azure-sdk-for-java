/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.automation.v2015_10_31.implementation;

import com.microsoft.azure.management.automation.v2015_10_31.Variable;
import com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl;
import rx.Observable;
import com.microsoft.azure.management.automation.v2015_10_31.VariableUpdateParameters;
import com.microsoft.azure.management.automation.v2015_10_31.VariableCreateOrUpdateParameters;
import org.joda.time.DateTime;
import rx.functions.Func1;

class VariableImpl extends CreatableUpdatableImpl<Variable, VariableInner, VariableImpl> implements Variable, Variable.Definition, Variable.Update {
    private final AutomationManager manager;
    private String resourceGroupName;
    private String automationAccountName;
    private String variableName;
    private VariableCreateOrUpdateParameters createParameter;
    private VariableUpdateParameters updateParameter;

    VariableImpl(String name, AutomationManager manager) {
        super(name, new VariableInner());
        this.manager = manager;
        // Set resource name
        this.variableName = name;
        //
        this.createParameter = new VariableCreateOrUpdateParameters();
        this.updateParameter = new VariableUpdateParameters();
    }

    VariableImpl(VariableInner inner, AutomationManager manager) {
        super(inner.name(), inner);
        this.manager = manager;
        // Set resource name
        this.variableName = inner.name();
        // resource ancestor names
        this.resourceGroupName = IdParsingUtils.getValueFromIdByName(inner.id(), "resourceGroups");
        this.automationAccountName = IdParsingUtils.getValueFromIdByName(inner.id(), "automationAccounts");
        this.variableName = IdParsingUtils.getValueFromIdByName(inner.id(), "variables");
        //
        this.createParameter = new VariableCreateOrUpdateParameters();
        this.updateParameter = new VariableUpdateParameters();
    }

    @Override
    public AutomationManager manager() {
        return this.manager;
    }

    @Override
    public Observable<Variable> createResourceAsync() {
        VariablesInner client = this.manager().inner().variables();
        return client.createOrUpdateAsync(this.resourceGroupName, this.automationAccountName, this.variableName, this.createParameter)
            .map(new Func1<VariableInner, VariableInner>() {
               @Override
               public VariableInner call(VariableInner resource) {
                   resetCreateUpdateParameters();
                   return resource;
               }
            })
            .map(innerToFluentMap(this));
    }

    @Override
    public Observable<Variable> updateResourceAsync() {
        VariablesInner client = this.manager().inner().variables();
        return client.updateAsync(this.resourceGroupName, this.automationAccountName, this.variableName, this.updateParameter)
            .map(new Func1<VariableInner, VariableInner>() {
               @Override
               public VariableInner call(VariableInner resource) {
                   resetCreateUpdateParameters();
                   return resource;
               }
            })
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<VariableInner> getInnerAsync() {
        VariablesInner client = this.manager().inner().variables();
        return client.getAsync(this.resourceGroupName, this.automationAccountName, this.variableName);
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }

    private void resetCreateUpdateParameters() {
        this.createParameter = new VariableCreateOrUpdateParameters();
        this.updateParameter = new VariableUpdateParameters();
    }

    @Override
    public DateTime creationTime() {
        return this.inner().creationTime();
    }

    @Override
    public String description() {
        return this.inner().description();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public Boolean isEncrypted() {
        return this.inner().isEncrypted();
    }

    @Override
    public DateTime lastModifiedTime() {
        return this.inner().lastModifiedTime();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

    @Override
    public String value() {
        return this.inner().value();
    }

    @Override
    public VariableImpl withExistingAutomationAccount(String resourceGroupName, String automationAccountName) {
        this.resourceGroupName = resourceGroupName;
        this.automationAccountName = automationAccountName;
        return this;
    }

    @Override
    public VariableImpl withIsEncrypted(Boolean isEncrypted) {
        this.createParameter.withIsEncrypted(isEncrypted);
        return this;
    }

    @Override
    public VariableImpl withName(String name) {
        if (isInCreateMode()) {
            this.createParameter.withName(name);
        } else {
            this.updateParameter.withName(name);
        }
        return this;
    }

    @Override
    public VariableImpl withDescription(String description) {
        if (isInCreateMode()) {
            this.createParameter.withDescription(description);
        } else {
            this.updateParameter.withDescription(description);
        }
        return this;
    }

    @Override
    public VariableImpl withValue(String value) {
        if (isInCreateMode()) {
            this.createParameter.withValue(value);
        } else {
            this.updateParameter.withValue(value);
        }
        return this;
    }

}
