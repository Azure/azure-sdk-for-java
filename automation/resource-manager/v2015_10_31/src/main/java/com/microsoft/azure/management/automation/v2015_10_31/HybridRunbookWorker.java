/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.automation.v2015_10_31;

import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Definition of hybrid runbook worker.
 */
public class HybridRunbookWorker {
    /**
     * Gets or sets the worker machine name.
     */
    @JsonProperty(value = "name")
    private String name;

    /**
     * Gets or sets the assigned machine IP address.
     */
    @JsonProperty(value = "ip")
    private String ip;

    /**
     * Gets or sets the registration time of the worker machine.
     */
    @JsonProperty(value = "registrationTime")
    private DateTime registrationTime;

    /**
     * Last Heartbeat from the Worker.
     */
    @JsonProperty(value = "lastSeenDateTime")
    private DateTime lastSeenDateTime;

    /**
     * Get gets or sets the worker machine name.
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Set gets or sets the worker machine name.
     *
     * @param name the name value to set
     * @return the HybridRunbookWorker object itself.
     */
    public HybridRunbookWorker withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get gets or sets the assigned machine IP address.
     *
     * @return the ip value
     */
    public String ip() {
        return this.ip;
    }

    /**
     * Set gets or sets the assigned machine IP address.
     *
     * @param ip the ip value to set
     * @return the HybridRunbookWorker object itself.
     */
    public HybridRunbookWorker withIp(String ip) {
        this.ip = ip;
        return this;
    }

    /**
     * Get gets or sets the registration time of the worker machine.
     *
     * @return the registrationTime value
     */
    public DateTime registrationTime() {
        return this.registrationTime;
    }

    /**
     * Set gets or sets the registration time of the worker machine.
     *
     * @param registrationTime the registrationTime value to set
     * @return the HybridRunbookWorker object itself.
     */
    public HybridRunbookWorker withRegistrationTime(DateTime registrationTime) {
        this.registrationTime = registrationTime;
        return this;
    }

    /**
     * Get last Heartbeat from the Worker.
     *
     * @return the lastSeenDateTime value
     */
    public DateTime lastSeenDateTime() {
        return this.lastSeenDateTime;
    }

    /**
     * Set last Heartbeat from the Worker.
     *
     * @param lastSeenDateTime the lastSeenDateTime value to set
     * @return the HybridRunbookWorker object itself.
     */
    public HybridRunbookWorker withLastSeenDateTime(DateTime lastSeenDateTime) {
        this.lastSeenDateTime = lastSeenDateTime;
        return this;
    }

}
