/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 *
 */

package com.microsoft.azure.management.automation.v2015_10_31.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.automation.v2015_10_31.Statistics;
import rx.Observable;
import rx.functions.Func1;
import java.util.List;
import com.microsoft.azure.management.automation.v2015_10_31.StatisticsModel;

class StatisticsImpl extends WrapperImpl<StatisticsInner> implements Statistics {
    private final AutomationManager manager;

    StatisticsImpl(AutomationManager manager) {
        super(manager.inner().statistics());
        this.manager = manager;
    }

    public AutomationManager manager() {
        return this.manager;
    }

    private StatisticsModelImpl wrapModel(StatisticsModelInner inner) {
        return  new StatisticsModelImpl(inner, manager());
    }

    @Override
    public Observable<StatisticsModel> listByAutomationAccountAsync(String resourceGroupName, String automationAccountName) {
        StatisticsInner client = this.inner();
        return client.listByAutomationAccountAsync(resourceGroupName, automationAccountName)
        .flatMap(new Func1<List<StatisticsModelInner>, Observable<StatisticsModelInner>>() {
            @Override
            public Observable<StatisticsModelInner> call(List<StatisticsModelInner> innerList) {
                return Observable.from(innerList);
            }
        })
        .map(new Func1<StatisticsModelInner, StatisticsModel>() {
            @Override
            public StatisticsModel call(StatisticsModelInner inner) {
                return wrapModel(inner);
            }
        });
    }

}
