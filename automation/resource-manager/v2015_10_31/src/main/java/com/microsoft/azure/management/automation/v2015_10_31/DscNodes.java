/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.automation.v2015_10_31;

import rx.Completable;
import rx.Observable;
import com.microsoft.azure.management.automation.v2015_10_31.implementation.DscNodesInner;
import com.microsoft.azure.arm.model.HasInner;

/**
 * Type representing DscNodes.
 */
public interface DscNodes extends HasInner<DscNodesInner> {
    /**
     * Retrieve the dsc node identified by node id.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param nodeId The node id.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<DscNode> getAsync(String resourceGroupName, String automationAccountName, String nodeId);

    /**
     * Retrieve a list of dsc nodes.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<DscNode> listByAutomationAccountAsync(final String resourceGroupName, final String automationAccountName);

    /**
     * Delete the dsc node identified by node id.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param nodeId The node id.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable deleteAsync(String resourceGroupName, String automationAccountName, String nodeId);

}
