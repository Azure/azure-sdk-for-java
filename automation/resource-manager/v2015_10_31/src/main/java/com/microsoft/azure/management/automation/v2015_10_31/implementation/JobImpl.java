/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.automation.v2015_10_31.implementation;

import com.microsoft.azure.management.automation.v2015_10_31.Job;
import com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl;
import rx.Observable;
import org.joda.time.DateTime;
import java.util.UUID;
import java.util.Map;
import com.microsoft.azure.management.automation.v2015_10_31.JobProvisioningState;
import com.microsoft.azure.management.automation.v2015_10_31.RunbookAssociationProperty;
import com.microsoft.azure.management.automation.v2015_10_31.ScheduleAssociationProperty;
import com.microsoft.azure.management.automation.v2015_10_31.JobStatus;

class JobImpl extends IndexableRefreshableWrapperImpl<Job, JobInner> implements Job {
    private final AutomationManager manager;
    private String resourceGroupName;
    private String automationAccountName;
    private UUID jobId;

    JobImpl(JobInner inner,  AutomationManager manager) {
        super(null, inner);
        this.manager = manager;
        this.resourceGroupName = IdParsingUtils.getValueFromIdByName(inner.id(), "resourceGroups");
        this.automationAccountName = IdParsingUtils.getValueFromIdByName(inner.id(), "automationAccounts");
        this.jobId = UUID.fromString(IdParsingUtils.getValueFromIdByName(inner.id(), "jobs"));
    }

    @Override
    public AutomationManager manager() {
        return this.manager;
    }

    @Override
    protected Observable<JobInner> getInnerAsync() {
        JobsInner client = this.manager().inner().jobs();
        return client.getAsync(this.resourceGroupName, this.automationAccountName, this.jobId);
    }



    @Override
    public DateTime creationTime() {
        return this.inner().creationTime();
    }

    @Override
    public DateTime endTime() {
        return this.inner().endTime();
    }

    @Override
    public String exception() {
        return this.inner().exception();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public UUID jobId() {
        return this.inner().jobId();
    }

    @Override
    public String jobScheduleId() {
        return this.inner().jobScheduleId();
    }

    @Override
    public DateTime lastModifiedTime() {
        return this.inner().lastModifiedTime();
    }

    @Override
    public DateTime lastStatusModifiedTime() {
        return this.inner().lastStatusModifiedTime();
    }

    @Override
    public Map<String, String> parameters() {
        return this.inner().parameters();
    }

    @Override
    public JobProvisioningState provisioningState() {
        return this.inner().provisioningState();
    }

    @Override
    public RunbookAssociationProperty runbook() {
        return this.inner().runbook();
    }

    @Override
    public String runOn() {
        return this.inner().runOn();
    }

    @Override
    public ScheduleAssociationProperty schedule() {
        return this.inner().schedule();
    }

    @Override
    public String startedBy() {
        return this.inner().startedBy();
    }

    @Override
    public DateTime startTime() {
        return this.inner().startTime();
    }

    @Override
    public JobStatus status() {
        return this.inner().status();
    }

    @Override
    public String statusDetails() {
        return this.inner().statusDetails();
    }

}
