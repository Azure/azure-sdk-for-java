// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.adp.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.adp.fluent.models.DataPoolInner;
import java.util.List;

/** An immutable client-side representation of DataPool. */
public interface DataPool {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the dataPoolId property: The Data Pool's data-plane ID.
     *
     * @return the dataPoolId value.
     */
    String dataPoolId();

    /**
     * Gets the provisioningState property: Gets the status of the data pool at the time the operation was called.
     *
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the locations property: Gets or sets the collection of locations where Data Pool resources should be
     * created.
     *
     * @return the locations value.
     */
    List<DataPoolLocation> locations();

    /**
     * Gets the inner com.azure.resourcemanager.adp.fluent.models.DataPoolInner object.
     *
     * @return the inner object.
     */
    DataPoolInner innerModel();

    /** The entirety of the DataPool definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The DataPool definition stages. */
    interface DefinitionStages {
        /** The first stage of the DataPool definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the DataPool definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, accountName.
             *
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param accountName The name of the ADP account.
             * @return the next definition stage.
             */
            WithCreate withExistingAccount(String resourceGroupName, String accountName);
        }
        /**
         * The stage of the DataPool definition which contains all the minimum required properties for the resource to
         * be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithLocations {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            DataPool create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            DataPool create(Context context);
        }
        /** The stage of the DataPool definition allowing to specify locations. */
        interface WithLocations {
            /**
             * Specifies the locations property: Gets or sets the collection of locations where Data Pool resources
             * should be created..
             *
             * @param locations Gets or sets the collection of locations where Data Pool resources should be created.
             * @return the next definition stage.
             */
            WithCreate withLocations(List<DataPoolLocation> locations);
        }
    }
    /**
     * Begins update for the DataPool resource.
     *
     * @return the stage of resource update.
     */
    DataPool.Update update();

    /** The template for DataPool update. */
    interface Update extends UpdateStages.WithLocations {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        DataPool apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        DataPool apply(Context context);
    }
    /** The DataPool update stages. */
    interface UpdateStages {
        /** The stage of the DataPool update allowing to specify locations. */
        interface WithLocations {
            /**
             * Specifies the locations property: Gets or sets the collection of locations where Data Pool resources
             * should be created..
             *
             * @param locations Gets or sets the collection of locations where Data Pool resources should be created.
             * @return the next definition stage.
             */
            Update withLocations(List<DataPoolLocation> locations);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    DataPool refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    DataPool refresh(Context context);
}
