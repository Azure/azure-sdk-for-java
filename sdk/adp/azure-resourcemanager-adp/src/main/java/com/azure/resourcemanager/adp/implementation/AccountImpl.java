// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.adp.implementation;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.adp.AdpManager;
import com.azure.resourcemanager.adp.fluent.models.AccountInner;
import com.azure.resourcemanager.adp.models.Account;
import com.azure.resourcemanager.adp.models.AccountPatch;
import com.azure.resourcemanager.adp.models.ProvisioningState;
import com.azure.resourcemanager.adp.models.SystemData;
import java.util.Collections;
import java.util.Map;

public final class AccountImpl implements Account, Account.Definition, Account.Update {
    private AccountInner innerObject;

    private final AdpManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String accountId() {
        return this.innerModel().accountId();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public AccountInner innerModel() {
        return this.innerObject;
    }

    private AdpManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String accountName;

    private AccountPatch updateParameters;

    public AccountImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public Account create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAccounts()
                .createOrUpdate(resourceGroupName, accountName, this.innerModel(), Context.NONE);
        return this;
    }

    public Account create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAccounts()
                .createOrUpdate(resourceGroupName, accountName, this.innerModel(), context);
        return this;
    }

    public AccountImpl(String name, AdpManager serviceManager) {
        this.innerObject = new AccountInner();
        this.serviceManager = serviceManager;
        this.accountName = name;
    }

    public AccountImpl update() {
        this.updateParameters = new AccountPatch();
        return this;
    }

    public Account apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAccounts()
                .update(resourceGroupName, accountName, updateParameters, Context.NONE);
        return this;
    }

    public Account apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAccounts()
                .update(resourceGroupName, accountName, updateParameters, context);
        return this;
    }

    public AccountImpl(AccountInner innerObject, AdpManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.accountName = Utils.getValueFromIdByName(innerObject.id(), "accounts");
    }

    public Account refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAccounts()
                .getByResourceGroupWithResponse(resourceGroupName, accountName, Context.NONE)
                .getValue();
        return this;
    }

    public Account refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAccounts()
                .getByResourceGroupWithResponse(resourceGroupName, accountName, context)
                .getValue();
        return this;
    }

    public AccountImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public AccountImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public AccountImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateParameters.withTags(tags);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
