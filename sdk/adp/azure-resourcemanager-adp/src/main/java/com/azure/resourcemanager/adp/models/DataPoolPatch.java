// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.adp.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.adp.fluent.models.DataPoolBaseProperties;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/** ADP Data Pool. */
@Fluent
public final class DataPoolPatch extends ProxyResource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(DataPoolPatch.class);

    /*
     * List of data pool properties
     */
    @JsonProperty(value = "properties")
    private DataPoolBaseProperties innerProperties;

    /*
     * The system meta data relating to this resource
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Get the innerProperties property: List of data pool properties.
     *
     * @return the innerProperties value.
     */
    private DataPoolBaseProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: The system meta data relating to this resource.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the dataPoolId property: The Data Pool's data-plane ID.
     *
     * @return the dataPoolId value.
     */
    public String dataPoolId() {
        return this.innerProperties() == null ? null : this.innerProperties().dataPoolId();
    }

    /**
     * Get the provisioningState property: Gets the status of the data pool at the time the operation was called.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Get the locations property: Gets or sets the collection of locations where Data Pool resources should be created.
     *
     * @return the locations value.
     */
    public List<DataPoolLocation> locations() {
        return this.innerProperties() == null ? null : this.innerProperties().locations();
    }

    /**
     * Set the locations property: Gets or sets the collection of locations where Data Pool resources should be created.
     *
     * @param locations the locations value to set.
     * @return the DataPoolPatch object itself.
     */
    public DataPoolPatch withLocations(List<DataPoolLocation> locations) {
        if (this.innerProperties() == null) {
            this.innerProperties = new DataPoolBaseProperties();
        }
        this.innerProperties().withLocations(locations);
        return this;
    }

    /**
     * Get the tags property: Resource tags.
     *
     * @return the tags value.
     */
    public Map<String, String> tags() {
        return this.innerProperties() == null ? null : this.innerProperties().tags();
    }

    /**
     * Set the tags property: Resource tags.
     *
     * @param tags the tags value to set.
     * @return the DataPoolPatch object itself.
     */
    public DataPoolPatch withTags(Map<String, String> tags) {
        if (this.innerProperties() == null) {
            this.innerProperties = new DataPoolBaseProperties();
        }
        this.innerProperties().withTags(tags);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
