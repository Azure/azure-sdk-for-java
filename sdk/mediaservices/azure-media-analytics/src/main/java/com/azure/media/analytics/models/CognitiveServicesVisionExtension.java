// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

package com.azure.media.analytics.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * A processor that allows the pipeline topology to send video frames to a Cognitive Services Vision extension.
 * Inference results are relayed to downstream nodes.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "@type")
@JsonTypeName("#Microsoft.VideoAnalyzer.CognitiveServicesVisionExtension")
@Fluent
public final class CognitiveServicesVisionExtension extends ExtensionProcessorBase {
    /*
     * Optional configuration to pass to the CognitiveServicesVision extension.
     */
    @JsonProperty(value = "extensionConfiguration")
    private String extensionConfiguration;

    /**
     * Get the extensionConfiguration property: Optional configuration to pass to the CognitiveServicesVision extension.
     *
     * @return the extensionConfiguration value.
     */
    public String getExtensionConfiguration() {
        return this.extensionConfiguration;
    }

    /**
     * Set the extensionConfiguration property: Optional configuration to pass to the CognitiveServicesVision extension.
     *
     * @param extensionConfiguration the extensionConfiguration value to set.
     * @return the CognitiveServicesVisionExtension object itself.
     */
    public CognitiveServicesVisionExtension setExtensionConfiguration(String extensionConfiguration) {
        this.extensionConfiguration = extensionConfiguration;
        return this;
    }
}
