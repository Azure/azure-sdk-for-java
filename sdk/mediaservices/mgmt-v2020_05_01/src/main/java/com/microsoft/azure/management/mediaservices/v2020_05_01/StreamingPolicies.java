/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.mediaservices.v2020_05_01;

import com.microsoft.azure.arm.collection.SupportsCreating;
import rx.Completable;
import rx.Observable;
import com.microsoft.azure.management.mediaservices.v2020_05_01.implementation.StreamingPoliciesInner;
import com.microsoft.azure.arm.model.HasInner;

/**
 * Type representing StreamingPolicies.
 */
public interface StreamingPolicies extends SupportsCreating<StreamingPolicy.DefinitionStages.Blank>, HasInner<StreamingPoliciesInner> {
    /**
     * Get a Streaming Policy.
     * Get the details of a Streaming Policy in the Media Services account.
     *
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param streamingPolicyName The Streaming Policy name.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<StreamingPolicy> getAsync(String resourceGroupName, String accountName, String streamingPolicyName);

    /**
     * List Streaming Policies.
     * Lists the Streaming Policies in the account.
     *
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<StreamingPolicy> listAsync(final String resourceGroupName, final String accountName);

    /**
     * Delete a Streaming Policy.
     * Deletes a Streaming Policy in the Media Services account.
     *
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param streamingPolicyName The Streaming Policy name.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable deleteAsync(String resourceGroupName, String accountName, String streamingPolicyName);

}
