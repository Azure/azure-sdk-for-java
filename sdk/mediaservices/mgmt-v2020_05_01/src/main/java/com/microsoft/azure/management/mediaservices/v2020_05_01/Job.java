/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.mediaservices.v2020_05_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.mediaservices.v2020_05_01.implementation.JobInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.mediaservices.v2020_05_01.implementation.MediaManager;
import org.joda.time.DateTime;
import java.util.List;
import java.util.Map;

/**
 * Type representing Job.
 */
public interface Job extends HasInner<JobInner>, Indexable, Refreshable<Job>, Updatable<Job.Update>, HasManager<MediaManager> {
    /**
     * @return the correlationData value.
     */
    Map<String, String> correlationData();

    /**
     * @return the created value.
     */
    DateTime created();

    /**
     * @return the description value.
     */
    String description();

    /**
     * @return the endTime value.
     */
    DateTime endTime();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the input value.
     */
    JobInput input();

    /**
     * @return the lastModified value.
     */
    DateTime lastModified();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the outputs value.
     */
    List<JobOutput> outputs();

    /**
     * @return the priority value.
     */
    Priority priority();

    /**
     * @return the startTime value.
     */
    DateTime startTime();

    /**
     * @return the state value.
     */
    JobState state();

    /**
     * @return the type value.
     */
    String type();

    /**
     * The entirety of the Job definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithTransform, DefinitionStages.WithInput, DefinitionStages.WithOutputs, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of Job definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a Job definition.
         */
        interface Blank extends WithTransform {
        }

        /**
         * The stage of the job definition allowing to specify Transform.
         */
        interface WithTransform {
           /**
            * Specifies resourceGroupName, accountName, transformName.
            * @param resourceGroupName The name of the resource group within the Azure subscription
            * @param accountName The Media Services account name
            * @param transformName The Transform name
            * @return the next definition stage
            */
            WithInput withExistingTransform(String resourceGroupName, String accountName, String transformName);
        }

        /**
         * The stage of the job definition allowing to specify Input.
         */
        interface WithInput {
           /**
            * Specifies input.
            * @param input The inputs for the Job
            * @return the next definition stage
            */
            WithOutputs withInput(JobInput input);
        }

        /**
         * The stage of the job definition allowing to specify Outputs.
         */
        interface WithOutputs {
           /**
            * Specifies outputs.
            * @param outputs The outputs for the Job
            * @return the next definition stage
            */
            WithCreate withOutputs(List<JobOutput> outputs);
        }

        /**
         * The stage of the job definition allowing to specify CorrelationData.
         */
        interface WithCorrelationData {
            /**
             * Specifies correlationData.
             * @param correlationData Customer provided key, value pairs that will be returned in Job and JobOutput state events
             * @return the next definition stage
             */
            WithCreate withCorrelationData(Map<String, String> correlationData);
        }

        /**
         * The stage of the job definition allowing to specify Description.
         */
        interface WithDescription {
            /**
             * Specifies description.
             * @param description Optional customer supplied description of the Job
             * @return the next definition stage
             */
            WithCreate withDescription(String description);
        }

        /**
         * The stage of the job definition allowing to specify Priority.
         */
        interface WithPriority {
            /**
             * Specifies priority.
             * @param priority Priority with which the job should be processed. Higher priority jobs are processed before lower priority jobs. If not set, the default is normal. Possible values include: 'Low', 'Normal', 'High'
             * @return the next definition stage
             */
            WithCreate withPriority(Priority priority);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<Job>, DefinitionStages.WithCorrelationData, DefinitionStages.WithDescription, DefinitionStages.WithPriority {
        }
    }
    /**
     * The template for a Job update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<Job>, UpdateStages.WithCorrelationData, UpdateStages.WithDescription, UpdateStages.WithPriority {
    }

    /**
     * Grouping of Job update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the job update allowing to specify CorrelationData.
         */
        interface WithCorrelationData {
            /**
             * Specifies correlationData.
             * @param correlationData Customer provided key, value pairs that will be returned in Job and JobOutput state events
             * @return the next update stage
             */
            Update withCorrelationData(Map<String, String> correlationData);
        }

        /**
         * The stage of the job update allowing to specify Description.
         */
        interface WithDescription {
            /**
             * Specifies description.
             * @param description Optional customer supplied description of the Job
             * @return the next update stage
             */
            Update withDescription(String description);
        }

        /**
         * The stage of the job update allowing to specify Priority.
         */
        interface WithPriority {
            /**
             * Specifies priority.
             * @param priority Priority with which the job should be processed. Higher priority jobs are processed before lower priority jobs. If not set, the default is normal. Possible values include: 'Low', 'Normal', 'High'
             * @return the next update stage
             */
            Update withPriority(Priority priority);
        }

    }
}
