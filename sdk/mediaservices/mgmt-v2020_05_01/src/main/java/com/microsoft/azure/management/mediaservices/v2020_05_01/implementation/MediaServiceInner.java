/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.mediaservices.v2020_05_01.implementation;

import java.util.UUID;
import java.util.List;
import com.microsoft.azure.management.mediaservices.v2020_05_01.StorageAccount;
import com.microsoft.azure.management.mediaservices.v2020_05_01.StorageAuthentication;
import com.microsoft.azure.management.mediaservices.v2020_05_01.AccountEncryption;
import com.microsoft.azure.management.mediaservices.v2020_05_01.MediaServiceIdentity;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.Resource;

/**
 * A Media Services account.
 */
@JsonFlatten
public class MediaServiceInner extends Resource {
    /**
     * The Media Services account ID.
     */
    @JsonProperty(value = "properties.mediaServiceId", access = JsonProperty.Access.WRITE_ONLY)
    private UUID mediaServiceId;

    /**
     * The storage accounts for this resource.
     */
    @JsonProperty(value = "properties.storageAccounts")
    private List<StorageAccount> storageAccounts;

    /**
     * Possible values include: 'System', 'ManagedIdentity'.
     */
    @JsonProperty(value = "properties.storageAuthentication")
    private StorageAuthentication storageAuthentication;

    /**
     * The account encryption properties.
     */
    @JsonProperty(value = "properties.encryption")
    private AccountEncryption encryption;

    /**
     * The Managed Identity for the Media Services account.
     */
    @JsonProperty(value = "identity")
    private MediaServiceIdentity identity;

    /**
     * Get the Media Services account ID.
     *
     * @return the mediaServiceId value
     */
    public UUID mediaServiceId() {
        return this.mediaServiceId;
    }

    /**
     * Get the storage accounts for this resource.
     *
     * @return the storageAccounts value
     */
    public List<StorageAccount> storageAccounts() {
        return this.storageAccounts;
    }

    /**
     * Set the storage accounts for this resource.
     *
     * @param storageAccounts the storageAccounts value to set
     * @return the MediaServiceInner object itself.
     */
    public MediaServiceInner withStorageAccounts(List<StorageAccount> storageAccounts) {
        this.storageAccounts = storageAccounts;
        return this;
    }

    /**
     * Get possible values include: 'System', 'ManagedIdentity'.
     *
     * @return the storageAuthentication value
     */
    public StorageAuthentication storageAuthentication() {
        return this.storageAuthentication;
    }

    /**
     * Set possible values include: 'System', 'ManagedIdentity'.
     *
     * @param storageAuthentication the storageAuthentication value to set
     * @return the MediaServiceInner object itself.
     */
    public MediaServiceInner withStorageAuthentication(StorageAuthentication storageAuthentication) {
        this.storageAuthentication = storageAuthentication;
        return this;
    }

    /**
     * Get the account encryption properties.
     *
     * @return the encryption value
     */
    public AccountEncryption encryption() {
        return this.encryption;
    }

    /**
     * Set the account encryption properties.
     *
     * @param encryption the encryption value to set
     * @return the MediaServiceInner object itself.
     */
    public MediaServiceInner withEncryption(AccountEncryption encryption) {
        this.encryption = encryption;
        return this;
    }

    /**
     * Get the Managed Identity for the Media Services account.
     *
     * @return the identity value
     */
    public MediaServiceIdentity identity() {
        return this.identity;
    }

    /**
     * Set the Managed Identity for the Media Services account.
     *
     * @param identity the identity value to set
     * @return the MediaServiceInner object itself.
     */
    public MediaServiceInner withIdentity(MediaServiceIdentity identity) {
        this.identity = identity;
        return this;
    }

}
