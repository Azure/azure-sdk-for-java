// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Class to specify DRM configurations of CommonEncryptionCbcs scheme in Streaming Policy.
 */
@Fluent
public final class CbcsDrmConfiguration implements JsonSerializable<CbcsDrmConfiguration> {
    /*
     * FairPlay configurations
     */
    private StreamingPolicyFairPlayConfiguration fairPlay;

    /*
     * PlayReady configurations
     */
    private StreamingPolicyPlayReadyConfiguration playReady;

    /*
     * Widevine configurations
     */
    private StreamingPolicyWidevineConfiguration widevine;

    /**
     * Creates an instance of CbcsDrmConfiguration class.
     */
    public CbcsDrmConfiguration() {
    }

    /**
     * Get the fairPlay property: FairPlay configurations.
     * 
     * @return the fairPlay value.
     */
    public StreamingPolicyFairPlayConfiguration fairPlay() {
        return this.fairPlay;
    }

    /**
     * Set the fairPlay property: FairPlay configurations.
     * 
     * @param fairPlay the fairPlay value to set.
     * @return the CbcsDrmConfiguration object itself.
     */
    public CbcsDrmConfiguration withFairPlay(StreamingPolicyFairPlayConfiguration fairPlay) {
        this.fairPlay = fairPlay;
        return this;
    }

    /**
     * Get the playReady property: PlayReady configurations.
     * 
     * @return the playReady value.
     */
    public StreamingPolicyPlayReadyConfiguration playReady() {
        return this.playReady;
    }

    /**
     * Set the playReady property: PlayReady configurations.
     * 
     * @param playReady the playReady value to set.
     * @return the CbcsDrmConfiguration object itself.
     */
    public CbcsDrmConfiguration withPlayReady(StreamingPolicyPlayReadyConfiguration playReady) {
        this.playReady = playReady;
        return this;
    }

    /**
     * Get the widevine property: Widevine configurations.
     * 
     * @return the widevine value.
     */
    public StreamingPolicyWidevineConfiguration widevine() {
        return this.widevine;
    }

    /**
     * Set the widevine property: Widevine configurations.
     * 
     * @param widevine the widevine value to set.
     * @return the CbcsDrmConfiguration object itself.
     */
    public CbcsDrmConfiguration withWidevine(StreamingPolicyWidevineConfiguration widevine) {
        this.widevine = widevine;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (fairPlay() != null) {
            fairPlay().validate();
        }
        if (playReady() != null) {
            playReady().validate();
        }
        if (widevine() != null) {
            widevine().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("fairPlay", this.fairPlay);
        jsonWriter.writeJsonField("playReady", this.playReady);
        jsonWriter.writeJsonField("widevine", this.widevine);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CbcsDrmConfiguration from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CbcsDrmConfiguration if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the CbcsDrmConfiguration.
     */
    public static CbcsDrmConfiguration fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CbcsDrmConfiguration deserializedCbcsDrmConfiguration = new CbcsDrmConfiguration();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("fairPlay".equals(fieldName)) {
                    deserializedCbcsDrmConfiguration.fairPlay = StreamingPolicyFairPlayConfiguration.fromJson(reader);
                } else if ("playReady".equals(fieldName)) {
                    deserializedCbcsDrmConfiguration.playReady = StreamingPolicyPlayReadyConfiguration.fromJson(reader);
                } else if ("widevine".equals(fieldName)) {
                    deserializedCbcsDrmConfiguration.widevine = StreamingPolicyWidevineConfiguration.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCbcsDrmConfiguration;
        });
    }
}
