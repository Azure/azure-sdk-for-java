// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.models;

import com.azure.core.util.ExpandableStringEnum;
import com.fasterxml.jackson.annotation.JsonCreator;
import java.util.Collection;

/**
 * Specifies the maximum resolution at which your video is analyzed. The default behavior is "SourceResolution," which
 * will keep the input video at its original resolution when analyzed. Using "StandardDefinition" will resize input
 * videos to standard definition while preserving the appropriate aspect ratio. It will only resize if the video is of
 * higher resolution. For example, a 1920x1080 input would be scaled to 640x360 before processing. Switching to
 * "StandardDefinition" will reduce the time it takes to process high resolution video. It may also reduce the cost of
 * using this component (see https://azure.microsoft.com/en-us/pricing/details/media-services/#analytics for details).
 * However, faces that end up being too small in the resized video may not be detected.
 */
public final class AnalysisResolution extends ExpandableStringEnum<AnalysisResolution> {
    /** Static value SourceResolution for AnalysisResolution. */
    public static final AnalysisResolution SOURCE_RESOLUTION = fromString("SourceResolution");

    /** Static value StandardDefinition for AnalysisResolution. */
    public static final AnalysisResolution STANDARD_DEFINITION = fromString("StandardDefinition");

    /**
     * Creates a new instance of AnalysisResolution value.
     *
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public AnalysisResolution() {
    }

    /**
     * Creates or finds a AnalysisResolution from its string representation.
     *
     * @param name a name to look for.
     * @return the corresponding AnalysisResolution.
     */
    @JsonCreator
    public static AnalysisResolution fromString(String name) {
        return fromString(name, AnalysisResolution.class);
    }

    /**
     * Gets known AnalysisResolution values.
     *
     * @return known AnalysisResolution values.
     */
    public static Collection<AnalysisResolution> values() {
        return values(AnalysisResolution.class);
    }
}
