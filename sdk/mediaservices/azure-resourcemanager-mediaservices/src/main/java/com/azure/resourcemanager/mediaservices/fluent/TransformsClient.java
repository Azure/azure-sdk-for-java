// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.mediaservices.fluent.models.TransformInner;

/** An instance of this class provides access to all the operations defined in TransformsClient. */
public interface TransformsClient {
    /**
     * Lists the Transforms in the account.
     *
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a collection of Transform items.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<TransformInner> list(String resourceGroupName, String accountName);

    /**
     * Lists the Transforms in the account.
     *
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param filter Restricts the set of items returned.
     * @param orderby Specifies the key by which the result collection should be ordered.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a collection of Transform items.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<TransformInner> list(
        String resourceGroupName, String accountName, String filter, String orderby, Context context);

    /**
     * Gets a Transform.
     *
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param transformName The Transform name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Transform.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    TransformInner get(String resourceGroupName, String accountName, String transformName);

    /**
     * Gets a Transform.
     *
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param transformName The Transform name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Transform.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<TransformInner> getWithResponse(
        String resourceGroupName, String accountName, String transformName, Context context);

    /**
     * Creates or updates a new Transform.
     *
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param transformName The Transform name.
     * @param parameters The request parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Transform encapsulates the rules or instructions for generating desired outputs from input media, such
     *     as by transcoding or by extracting insights.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    TransformInner createOrUpdate(
        String resourceGroupName, String accountName, String transformName, TransformInner parameters);

    /**
     * Creates or updates a new Transform.
     *
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param transformName The Transform name.
     * @param parameters The request parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Transform encapsulates the rules or instructions for generating desired outputs from input media, such
     *     as by transcoding or by extracting insights.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<TransformInner> createOrUpdateWithResponse(
        String resourceGroupName, String accountName, String transformName, TransformInner parameters, Context context);

    /**
     * Deletes a Transform.
     *
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param transformName The Transform name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String accountName, String transformName);

    /**
     * Deletes a Transform.
     *
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param transformName The Transform name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(
        String resourceGroupName, String accountName, String transformName, Context context);

    /**
     * Updates a Transform.
     *
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param transformName The Transform name.
     * @param parameters The request parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Transform encapsulates the rules or instructions for generating desired outputs from input media, such
     *     as by transcoding or by extracting insights.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    TransformInner update(
        String resourceGroupName, String accountName, String transformName, TransformInner parameters);

    /**
     * Updates a Transform.
     *
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param transformName The Transform name.
     * @param parameters The request parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Transform encapsulates the rules or instructions for generating desired outputs from input media, such
     *     as by transcoding or by extracting insights.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<TransformInner> updateWithResponse(
        String resourceGroupName, String accountName, String transformName, TransformInner parameters, Context context);
}
