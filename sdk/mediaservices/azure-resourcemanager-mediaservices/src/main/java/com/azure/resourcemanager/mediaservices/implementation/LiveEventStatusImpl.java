// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.implementation;

import com.azure.resourcemanager.mediaservices.fluent.models.LiveEventStatusInner;
import com.azure.resourcemanager.mediaservices.models.LiveEventHealthStatus;
import com.azure.resourcemanager.mediaservices.models.LiveEventIngestion;
import com.azure.resourcemanager.mediaservices.models.LiveEventState;
import com.azure.resourcemanager.mediaservices.models.LiveEventStatus;
import com.azure.resourcemanager.mediaservices.models.LiveEventTrackStatus;
import java.time.OffsetDateTime;
import java.util.Collections;
import java.util.List;

public final class LiveEventStatusImpl implements LiveEventStatus {
    private LiveEventStatusInner innerObject;

    private final com.azure.resourcemanager.mediaservices.MediaServicesManager serviceManager;

    LiveEventStatusImpl(
        LiveEventStatusInner innerObject, com.azure.resourcemanager.mediaservices.MediaServicesManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public LiveEventState state() {
        return this.innerModel().state();
    }

    public LiveEventHealthStatus healthStatus() {
        return this.innerModel().healthStatus();
    }

    public List<String> healthDescriptions() {
        List<String> inner = this.innerModel().healthDescriptions();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public OffsetDateTime lastUpdatedTime() {
        return this.innerModel().lastUpdatedTime();
    }

    public LiveEventIngestion ingestion() {
        return this.innerModel().ingestion();
    }

    public List<LiveEventTrackStatus> trackStatus() {
        List<LiveEventTrackStatus> inner = this.innerModel().trackStatus();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public LiveEventStatusInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.mediaservices.MediaServicesManager manager() {
        return this.serviceManager;
    }
}
