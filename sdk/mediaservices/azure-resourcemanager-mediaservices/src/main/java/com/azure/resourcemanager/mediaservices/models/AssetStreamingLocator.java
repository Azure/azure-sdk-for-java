// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.UUID;

/** Properties of the Streaming Locator. */
@Immutable
public final class AssetStreamingLocator {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(AssetStreamingLocator.class);

    /*
     * Streaming Locator name.
     */
    @JsonProperty(value = "name", access = JsonProperty.Access.WRITE_ONLY)
    private String name;

    /*
     * Asset Name.
     */
    @JsonProperty(value = "assetName", access = JsonProperty.Access.WRITE_ONLY)
    private String assetName;

    /*
     * The creation time of the Streaming Locator.
     */
    @JsonProperty(value = "created", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime created;

    /*
     * The start time of the Streaming Locator.
     */
    @JsonProperty(value = "startTime", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime startTime;

    /*
     * The end time of the Streaming Locator.
     */
    @JsonProperty(value = "endTime", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime endTime;

    /*
     * StreamingLocatorId of the Streaming Locator.
     */
    @JsonProperty(value = "streamingLocatorId", access = JsonProperty.Access.WRITE_ONLY)
    private UUID streamingLocatorId;

    /*
     * Name of the Streaming Policy used by this Streaming Locator.
     */
    @JsonProperty(value = "streamingPolicyName", access = JsonProperty.Access.WRITE_ONLY)
    private String streamingPolicyName;

    /*
     * Name of the default ContentKeyPolicy used by this Streaming Locator.
     */
    @JsonProperty(value = "defaultContentKeyPolicyName", access = JsonProperty.Access.WRITE_ONLY)
    private String defaultContentKeyPolicyName;

    /**
     * Get the name property: Streaming Locator name.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the assetName property: Asset Name.
     *
     * @return the assetName value.
     */
    public String assetName() {
        return this.assetName;
    }

    /**
     * Get the created property: The creation time of the Streaming Locator.
     *
     * @return the created value.
     */
    public OffsetDateTime created() {
        return this.created;
    }

    /**
     * Get the startTime property: The start time of the Streaming Locator.
     *
     * @return the startTime value.
     */
    public OffsetDateTime startTime() {
        return this.startTime;
    }

    /**
     * Get the endTime property: The end time of the Streaming Locator.
     *
     * @return the endTime value.
     */
    public OffsetDateTime endTime() {
        return this.endTime;
    }

    /**
     * Get the streamingLocatorId property: StreamingLocatorId of the Streaming Locator.
     *
     * @return the streamingLocatorId value.
     */
    public UUID streamingLocatorId() {
        return this.streamingLocatorId;
    }

    /**
     * Get the streamingPolicyName property: Name of the Streaming Policy used by this Streaming Locator.
     *
     * @return the streamingPolicyName value.
     */
    public String streamingPolicyName() {
        return this.streamingPolicyName;
    }

    /**
     * Get the defaultContentKeyPolicyName property: Name of the default ContentKeyPolicy used by this Streaming
     * Locator.
     *
     * @return the defaultContentKeyPolicyName value.
     */
    public String defaultContentKeyPolicyName() {
        return this.defaultContentKeyPolicyName;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
