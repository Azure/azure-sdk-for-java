// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The ArmStreamingEndpointSkuInfo model.
 */
@Fluent
public final class ArmStreamingEndpointSkuInfo implements JsonSerializable<ArmStreamingEndpointSkuInfo> {
    /*
     * The resourceType property.
     */
    private String resourceType;

    /*
     * The streaming endpoint sku capacity.
     */
    private ArmStreamingEndpointCapacity capacity;

    /*
     * The streaming endpoint sku.
     */
    private ArmStreamingEndpointSku sku;

    /**
     * Creates an instance of ArmStreamingEndpointSkuInfo class.
     */
    public ArmStreamingEndpointSkuInfo() {
    }

    /**
     * Get the resourceType property: The resourceType property.
     * 
     * @return the resourceType value.
     */
    public String resourceType() {
        return this.resourceType;
    }

    /**
     * Set the resourceType property: The resourceType property.
     * 
     * @param resourceType the resourceType value to set.
     * @return the ArmStreamingEndpointSkuInfo object itself.
     */
    public ArmStreamingEndpointSkuInfo withResourceType(String resourceType) {
        this.resourceType = resourceType;
        return this;
    }

    /**
     * Get the capacity property: The streaming endpoint sku capacity.
     * 
     * @return the capacity value.
     */
    public ArmStreamingEndpointCapacity capacity() {
        return this.capacity;
    }

    /**
     * Set the capacity property: The streaming endpoint sku capacity.
     * 
     * @param capacity the capacity value to set.
     * @return the ArmStreamingEndpointSkuInfo object itself.
     */
    public ArmStreamingEndpointSkuInfo withCapacity(ArmStreamingEndpointCapacity capacity) {
        this.capacity = capacity;
        return this;
    }

    /**
     * Get the sku property: The streaming endpoint sku.
     * 
     * @return the sku value.
     */
    public ArmStreamingEndpointSku sku() {
        return this.sku;
    }

    /**
     * Set the sku property: The streaming endpoint sku.
     * 
     * @param sku the sku value to set.
     * @return the ArmStreamingEndpointSkuInfo object itself.
     */
    public ArmStreamingEndpointSkuInfo withSku(ArmStreamingEndpointSku sku) {
        this.sku = sku;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (capacity() != null) {
            capacity().validate();
        }
        if (sku() != null) {
            sku().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("resourceType", this.resourceType);
        jsonWriter.writeJsonField("capacity", this.capacity);
        jsonWriter.writeJsonField("sku", this.sku);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ArmStreamingEndpointSkuInfo from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ArmStreamingEndpointSkuInfo if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ArmStreamingEndpointSkuInfo.
     */
    public static ArmStreamingEndpointSkuInfo fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ArmStreamingEndpointSkuInfo deserializedArmStreamingEndpointSkuInfo = new ArmStreamingEndpointSkuInfo();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("resourceType".equals(fieldName)) {
                    deserializedArmStreamingEndpointSkuInfo.resourceType = reader.getString();
                } else if ("capacity".equals(fieldName)) {
                    deserializedArmStreamingEndpointSkuInfo.capacity = ArmStreamingEndpointCapacity.fromJson(reader);
                } else if ("sku".equals(fieldName)) {
                    deserializedArmStreamingEndpointSkuInfo.sku = ArmStreamingEndpointSku.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedArmStreamingEndpointSkuInfo;
        });
    }
}
