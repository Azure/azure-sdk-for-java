// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.mediaservices.models.StreamingPath;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Class of response for listPaths action. */
@Fluent
public final class ListPathsResponseInner {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ListPathsResponseInner.class);

    /*
     * Streaming Paths supported by current Streaming Locator
     */
    @JsonProperty(value = "streamingPaths")
    private List<StreamingPath> streamingPaths;

    /*
     * Download Paths supported by current Streaming Locator
     */
    @JsonProperty(value = "downloadPaths")
    private List<String> downloadPaths;

    /**
     * Get the streamingPaths property: Streaming Paths supported by current Streaming Locator.
     *
     * @return the streamingPaths value.
     */
    public List<StreamingPath> streamingPaths() {
        return this.streamingPaths;
    }

    /**
     * Set the streamingPaths property: Streaming Paths supported by current Streaming Locator.
     *
     * @param streamingPaths the streamingPaths value to set.
     * @return the ListPathsResponseInner object itself.
     */
    public ListPathsResponseInner withStreamingPaths(List<StreamingPath> streamingPaths) {
        this.streamingPaths = streamingPaths;
        return this;
    }

    /**
     * Get the downloadPaths property: Download Paths supported by current Streaming Locator.
     *
     * @return the downloadPaths value.
     */
    public List<String> downloadPaths() {
        return this.downloadPaths;
    }

    /**
     * Set the downloadPaths property: Download Paths supported by current Streaming Locator.
     *
     * @param downloadPaths the downloadPaths value to set.
     * @return the ListPathsResponseInner object itself.
     */
    public ListPathsResponseInner withDownloadPaths(List<String> downloadPaths) {
        this.downloadPaths = downloadPaths;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (streamingPaths() != null) {
            streamingPaths().forEach(e -> e.validate());
        }
    }
}
