// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The LiveEvent action input parameter definition.
 */
@Fluent
public final class LiveEventActionInput implements JsonSerializable<LiveEventActionInput> {
    /*
     * The flag indicates whether live outputs are automatically deleted when live event is being stopped. Deleting live
     * outputs do not delete the underlying assets.
     */
    private Boolean removeOutputsOnStop;

    /**
     * Creates an instance of LiveEventActionInput class.
     */
    public LiveEventActionInput() {
    }

    /**
     * Get the removeOutputsOnStop property: The flag indicates whether live outputs are automatically deleted when live
     * event is being stopped. Deleting live outputs do not delete the underlying assets.
     * 
     * @return the removeOutputsOnStop value.
     */
    public Boolean removeOutputsOnStop() {
        return this.removeOutputsOnStop;
    }

    /**
     * Set the removeOutputsOnStop property: The flag indicates whether live outputs are automatically deleted when live
     * event is being stopped. Deleting live outputs do not delete the underlying assets.
     * 
     * @param removeOutputsOnStop the removeOutputsOnStop value to set.
     * @return the LiveEventActionInput object itself.
     */
    public LiveEventActionInput withRemoveOutputsOnStop(Boolean removeOutputsOnStop) {
        this.removeOutputsOnStop = removeOutputsOnStop;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("removeOutputsOnStop", this.removeOutputsOnStop);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of LiveEventActionInput from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of LiveEventActionInput if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the LiveEventActionInput.
     */
    public static LiveEventActionInput fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            LiveEventActionInput deserializedLiveEventActionInput = new LiveEventActionInput();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("removeOutputsOnStop".equals(fieldName)) {
                    deserializedLiveEventActionInput.removeOutputsOnStop = reader.getNullable(JsonReader::getBoolean);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedLiveEventActionInput;
        });
    }
}
