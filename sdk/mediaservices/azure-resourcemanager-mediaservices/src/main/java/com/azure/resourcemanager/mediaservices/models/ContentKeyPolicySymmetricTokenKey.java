// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.util.CoreUtils;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/** Specifies a symmetric key for token validation. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "@odata\\.type")
@JsonTypeName("#Microsoft.Media.ContentKeyPolicySymmetricTokenKey")
@JsonFlatten
@Fluent
public class ContentKeyPolicySymmetricTokenKey extends ContentKeyPolicyRestrictionTokenKey {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ContentKeyPolicySymmetricTokenKey.class);

    /*
     * The key value of the key
     */
    @JsonProperty(value = "keyValue", required = true)
    private byte[] keyValue;

    /**
     * Get the keyValue property: The key value of the key.
     *
     * @return the keyValue value.
     */
    public byte[] keyValue() {
        return CoreUtils.clone(this.keyValue);
    }

    /**
     * Set the keyValue property: The key value of the key.
     *
     * @param keyValue the keyValue value to set.
     * @return the ContentKeyPolicySymmetricTokenKey object itself.
     */
    public ContentKeyPolicySymmetricTokenKey withKeyValue(byte[] keyValue) {
        this.keyValue = CoreUtils.clone(keyValue);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (keyValue() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property keyValue in model ContentKeyPolicySymmetricTokenKey"));
        }
    }
}
