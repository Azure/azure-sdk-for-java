// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The Asset Storage container SAS URLs.
 */
@Fluent
public final class AssetContainerSasInner implements JsonSerializable<AssetContainerSasInner> {
    /*
     * The list of Asset container SAS URLs.
     */
    private List<String> assetContainerSasUrls;

    /**
     * Creates an instance of AssetContainerSasInner class.
     */
    public AssetContainerSasInner() {
    }

    /**
     * Get the assetContainerSasUrls property: The list of Asset container SAS URLs.
     * 
     * @return the assetContainerSasUrls value.
     */
    public List<String> assetContainerSasUrls() {
        return this.assetContainerSasUrls;
    }

    /**
     * Set the assetContainerSasUrls property: The list of Asset container SAS URLs.
     * 
     * @param assetContainerSasUrls the assetContainerSasUrls value to set.
     * @return the AssetContainerSasInner object itself.
     */
    public AssetContainerSasInner withAssetContainerSasUrls(List<String> assetContainerSasUrls) {
        this.assetContainerSasUrls = assetContainerSasUrls;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("assetContainerSasUrls", this.assetContainerSasUrls,
            (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AssetContainerSasInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AssetContainerSasInner if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AssetContainerSasInner.
     */
    public static AssetContainerSasInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AssetContainerSasInner deserializedAssetContainerSasInner = new AssetContainerSasInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("assetContainerSasUrls".equals(fieldName)) {
                    List<String> assetContainerSasUrls = reader.readArray(reader1 -> reader1.getString());
                    deserializedAssetContainerSasInner.assetContainerSasUrls = assetContainerSasUrls;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAssetContainerSasInner;
        });
    }
}
