// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;

/** Represents an Asset for input into a Job. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "@odata\\.type")
@JsonTypeName("#Microsoft.Media.JobInputAsset")
@JsonFlatten
@Fluent
public class JobInputAsset extends JobInputClip {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(JobInputAsset.class);

    /*
     * The name of the input Asset.
     */
    @JsonProperty(value = "assetName", required = true)
    private String assetName;

    /**
     * Get the assetName property: The name of the input Asset.
     *
     * @return the assetName value.
     */
    public String assetName() {
        return this.assetName;
    }

    /**
     * Set the assetName property: The name of the input Asset.
     *
     * @param assetName the assetName value to set.
     * @return the JobInputAsset object itself.
     */
    public JobInputAsset withAssetName(String assetName) {
        this.assetName = assetName;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public JobInputAsset withFiles(List<String> files) {
        super.withFiles(files);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public JobInputAsset withStart(ClipTime start) {
        super.withStart(start);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public JobInputAsset withEnd(ClipTime end) {
        super.withEnd(end);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public JobInputAsset withLabel(String label) {
        super.withLabel(label);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public JobInputAsset withInputDefinitions(List<InputDefinition> inputDefinitions) {
        super.withInputDefinitions(inputDefinitions);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (assetName() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property assetName in model JobInputAsset"));
        }
    }
}
