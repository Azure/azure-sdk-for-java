// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.models;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.mediaservices.fluent.models.StreamingEndpointInner;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;

/** An immutable client-side representation of StreamingEndpoint. */
public interface StreamingEndpoint {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the systemData property: The system metadata relating to this resource.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the description property: The streaming endpoint description.
     *
     * @return the description value.
     */
    String description();

    /**
     * Gets the scaleUnits property: The number of scale units. Use the Scale operation to adjust this value.
     *
     * @return the scaleUnits value.
     */
    Integer scaleUnits();

    /**
     * Gets the availabilitySetName property: This feature is deprecated, do not set a value for this property.
     *
     * @return the availabilitySetName value.
     */
    String availabilitySetName();

    /**
     * Gets the accessControl property: The access control definition of the streaming endpoint.
     *
     * @return the accessControl value.
     */
    StreamingEndpointAccessControl accessControl();

    /**
     * Gets the maxCacheAge property: Max cache age.
     *
     * @return the maxCacheAge value.
     */
    Long maxCacheAge();

    /**
     * Gets the customHostNames property: The custom host names of the streaming endpoint.
     *
     * @return the customHostNames value.
     */
    List<String> customHostNames();

    /**
     * Gets the hostname property: The streaming endpoint host name.
     *
     * @return the hostname value.
     */
    String hostname();

    /**
     * Gets the cdnEnabled property: The CDN enabled flag.
     *
     * @return the cdnEnabled value.
     */
    Boolean cdnEnabled();

    /**
     * Gets the cdnProvider property: The CDN provider name.
     *
     * @return the cdnProvider value.
     */
    String cdnProvider();

    /**
     * Gets the cdnProfile property: The CDN profile name.
     *
     * @return the cdnProfile value.
     */
    String cdnProfile();

    /**
     * Gets the provisioningState property: The provisioning state of the streaming endpoint.
     *
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * Gets the resourceState property: The resource state of the streaming endpoint.
     *
     * @return the resourceState value.
     */
    StreamingEndpointResourceState resourceState();

    /**
     * Gets the crossSiteAccessPolicies property: The streaming endpoint access policies.
     *
     * @return the crossSiteAccessPolicies value.
     */
    CrossSiteAccessPolicies crossSiteAccessPolicies();

    /**
     * Gets the freeTrialEndTime property: The free trial expiration time.
     *
     * @return the freeTrialEndTime value.
     */
    OffsetDateTime freeTrialEndTime();

    /**
     * Gets the created property: The exact time the streaming endpoint was created.
     *
     * @return the created value.
     */
    OffsetDateTime created();

    /**
     * Gets the lastModified property: The exact time the streaming endpoint was last modified.
     *
     * @return the lastModified value.
     */
    OffsetDateTime lastModified();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.mediaservices.fluent.models.StreamingEndpointInner object.
     *
     * @return the inner object.
     */
    StreamingEndpointInner innerModel();

    /** The entirety of the StreamingEndpoint definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithParentResource,
            DefinitionStages.WithCreate {
    }
    /** The StreamingEndpoint definition stages. */
    interface DefinitionStages {
        /** The first stage of the StreamingEndpoint definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the StreamingEndpoint definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(String location);
        }
        /** The stage of the StreamingEndpoint definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, accountName.
             *
             * @param resourceGroupName The name of the resource group within the Azure subscription.
             * @param accountName The Media Services account name.
             * @return the next definition stage.
             */
            WithCreate withExistingMediaservice(String resourceGroupName, String accountName);
        }
        /**
         * The stage of the StreamingEndpoint definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithDescription,
                DefinitionStages.WithScaleUnits,
                DefinitionStages.WithAvailabilitySetName,
                DefinitionStages.WithAccessControl,
                DefinitionStages.WithMaxCacheAge,
                DefinitionStages.WithCustomHostNames,
                DefinitionStages.WithCdnEnabled,
                DefinitionStages.WithCdnProvider,
                DefinitionStages.WithCdnProfile,
                DefinitionStages.WithCrossSiteAccessPolicies,
                DefinitionStages.WithAutoStart {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            StreamingEndpoint create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            StreamingEndpoint create(Context context);
        }
        /** The stage of the StreamingEndpoint definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the StreamingEndpoint definition allowing to specify description. */
        interface WithDescription {
            /**
             * Specifies the description property: The streaming endpoint description..
             *
             * @param description The streaming endpoint description.
             * @return the next definition stage.
             */
            WithCreate withDescription(String description);
        }
        /** The stage of the StreamingEndpoint definition allowing to specify scaleUnits. */
        interface WithScaleUnits {
            /**
             * Specifies the scaleUnits property: The number of scale units. Use the Scale operation to adjust this
             * value..
             *
             * @param scaleUnits The number of scale units. Use the Scale operation to adjust this value.
             * @return the next definition stage.
             */
            WithCreate withScaleUnits(Integer scaleUnits);
        }
        /** The stage of the StreamingEndpoint definition allowing to specify availabilitySetName. */
        interface WithAvailabilitySetName {
            /**
             * Specifies the availabilitySetName property: This feature is deprecated, do not set a value for this
             * property..
             *
             * @param availabilitySetName This feature is deprecated, do not set a value for this property.
             * @return the next definition stage.
             */
            WithCreate withAvailabilitySetName(String availabilitySetName);
        }
        /** The stage of the StreamingEndpoint definition allowing to specify accessControl. */
        interface WithAccessControl {
            /**
             * Specifies the accessControl property: The access control definition of the streaming endpoint..
             *
             * @param accessControl The access control definition of the streaming endpoint.
             * @return the next definition stage.
             */
            WithCreate withAccessControl(StreamingEndpointAccessControl accessControl);
        }
        /** The stage of the StreamingEndpoint definition allowing to specify maxCacheAge. */
        interface WithMaxCacheAge {
            /**
             * Specifies the maxCacheAge property: Max cache age.
             *
             * @param maxCacheAge Max cache age.
             * @return the next definition stage.
             */
            WithCreate withMaxCacheAge(Long maxCacheAge);
        }
        /** The stage of the StreamingEndpoint definition allowing to specify customHostNames. */
        interface WithCustomHostNames {
            /**
             * Specifies the customHostNames property: The custom host names of the streaming endpoint.
             *
             * @param customHostNames The custom host names of the streaming endpoint.
             * @return the next definition stage.
             */
            WithCreate withCustomHostNames(List<String> customHostNames);
        }
        /** The stage of the StreamingEndpoint definition allowing to specify cdnEnabled. */
        interface WithCdnEnabled {
            /**
             * Specifies the cdnEnabled property: The CDN enabled flag..
             *
             * @param cdnEnabled The CDN enabled flag.
             * @return the next definition stage.
             */
            WithCreate withCdnEnabled(Boolean cdnEnabled);
        }
        /** The stage of the StreamingEndpoint definition allowing to specify cdnProvider. */
        interface WithCdnProvider {
            /**
             * Specifies the cdnProvider property: The CDN provider name..
             *
             * @param cdnProvider The CDN provider name.
             * @return the next definition stage.
             */
            WithCreate withCdnProvider(String cdnProvider);
        }
        /** The stage of the StreamingEndpoint definition allowing to specify cdnProfile. */
        interface WithCdnProfile {
            /**
             * Specifies the cdnProfile property: The CDN profile name..
             *
             * @param cdnProfile The CDN profile name.
             * @return the next definition stage.
             */
            WithCreate withCdnProfile(String cdnProfile);
        }
        /** The stage of the StreamingEndpoint definition allowing to specify crossSiteAccessPolicies. */
        interface WithCrossSiteAccessPolicies {
            /**
             * Specifies the crossSiteAccessPolicies property: The streaming endpoint access policies..
             *
             * @param crossSiteAccessPolicies The streaming endpoint access policies.
             * @return the next definition stage.
             */
            WithCreate withCrossSiteAccessPolicies(CrossSiteAccessPolicies crossSiteAccessPolicies);
        }
        /** The stage of the StreamingEndpoint definition allowing to specify autoStart. */
        interface WithAutoStart {
            /**
             * Specifies the autoStart property: The flag indicates if the resource should be automatically started on
             * creation..
             *
             * @param autoStart The flag indicates if the resource should be automatically started on creation.
             * @return the next definition stage.
             */
            WithCreate withAutoStart(Boolean autoStart);
        }
    }
    /**
     * Begins update for the StreamingEndpoint resource.
     *
     * @return the stage of resource update.
     */
    StreamingEndpoint.Update update();

    /** The template for StreamingEndpoint update. */
    interface Update
        extends UpdateStages.WithTags,
            UpdateStages.WithDescription,
            UpdateStages.WithScaleUnits,
            UpdateStages.WithAvailabilitySetName,
            UpdateStages.WithAccessControl,
            UpdateStages.WithMaxCacheAge,
            UpdateStages.WithCustomHostNames,
            UpdateStages.WithCdnEnabled,
            UpdateStages.WithCdnProvider,
            UpdateStages.WithCdnProfile,
            UpdateStages.WithCrossSiteAccessPolicies {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        StreamingEndpoint apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        StreamingEndpoint apply(Context context);
    }
    /** The StreamingEndpoint update stages. */
    interface UpdateStages {
        /** The stage of the StreamingEndpoint update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
        /** The stage of the StreamingEndpoint update allowing to specify description. */
        interface WithDescription {
            /**
             * Specifies the description property: The streaming endpoint description..
             *
             * @param description The streaming endpoint description.
             * @return the next definition stage.
             */
            Update withDescription(String description);
        }
        /** The stage of the StreamingEndpoint update allowing to specify scaleUnits. */
        interface WithScaleUnits {
            /**
             * Specifies the scaleUnits property: The number of scale units. Use the Scale operation to adjust this
             * value..
             *
             * @param scaleUnits The number of scale units. Use the Scale operation to adjust this value.
             * @return the next definition stage.
             */
            Update withScaleUnits(Integer scaleUnits);
        }
        /** The stage of the StreamingEndpoint update allowing to specify availabilitySetName. */
        interface WithAvailabilitySetName {
            /**
             * Specifies the availabilitySetName property: This feature is deprecated, do not set a value for this
             * property..
             *
             * @param availabilitySetName This feature is deprecated, do not set a value for this property.
             * @return the next definition stage.
             */
            Update withAvailabilitySetName(String availabilitySetName);
        }
        /** The stage of the StreamingEndpoint update allowing to specify accessControl. */
        interface WithAccessControl {
            /**
             * Specifies the accessControl property: The access control definition of the streaming endpoint..
             *
             * @param accessControl The access control definition of the streaming endpoint.
             * @return the next definition stage.
             */
            Update withAccessControl(StreamingEndpointAccessControl accessControl);
        }
        /** The stage of the StreamingEndpoint update allowing to specify maxCacheAge. */
        interface WithMaxCacheAge {
            /**
             * Specifies the maxCacheAge property: Max cache age.
             *
             * @param maxCacheAge Max cache age.
             * @return the next definition stage.
             */
            Update withMaxCacheAge(Long maxCacheAge);
        }
        /** The stage of the StreamingEndpoint update allowing to specify customHostNames. */
        interface WithCustomHostNames {
            /**
             * Specifies the customHostNames property: The custom host names of the streaming endpoint.
             *
             * @param customHostNames The custom host names of the streaming endpoint.
             * @return the next definition stage.
             */
            Update withCustomHostNames(List<String> customHostNames);
        }
        /** The stage of the StreamingEndpoint update allowing to specify cdnEnabled. */
        interface WithCdnEnabled {
            /**
             * Specifies the cdnEnabled property: The CDN enabled flag..
             *
             * @param cdnEnabled The CDN enabled flag.
             * @return the next definition stage.
             */
            Update withCdnEnabled(Boolean cdnEnabled);
        }
        /** The stage of the StreamingEndpoint update allowing to specify cdnProvider. */
        interface WithCdnProvider {
            /**
             * Specifies the cdnProvider property: The CDN provider name..
             *
             * @param cdnProvider The CDN provider name.
             * @return the next definition stage.
             */
            Update withCdnProvider(String cdnProvider);
        }
        /** The stage of the StreamingEndpoint update allowing to specify cdnProfile. */
        interface WithCdnProfile {
            /**
             * Specifies the cdnProfile property: The CDN profile name..
             *
             * @param cdnProfile The CDN profile name.
             * @return the next definition stage.
             */
            Update withCdnProfile(String cdnProfile);
        }
        /** The stage of the StreamingEndpoint update allowing to specify crossSiteAccessPolicies. */
        interface WithCrossSiteAccessPolicies {
            /**
             * Specifies the crossSiteAccessPolicies property: The streaming endpoint access policies..
             *
             * @param crossSiteAccessPolicies The streaming endpoint access policies.
             * @return the next definition stage.
             */
            Update withCrossSiteAccessPolicies(CrossSiteAccessPolicies crossSiteAccessPolicies);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    StreamingEndpoint refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    StreamingEndpoint refresh(Context context);

    /**
     * Starts an existing streaming endpoint.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void start();

    /**
     * Starts an existing streaming endpoint.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void start(Context context);

    /**
     * Stops an existing streaming endpoint.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void stop();

    /**
     * Stops an existing streaming endpoint.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void stop(Context context);

    /**
     * Scales an existing streaming endpoint.
     *
     * @param parameters Streaming endpoint scale parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void scale(StreamingEntityScaleUnit parameters);

    /**
     * Scales an existing streaming endpoint.
     *
     * @param parameters Streaming endpoint scale parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void scale(StreamingEntityScaleUnit parameters, Context context);
}
