// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.models.H265Complexity;
import com.azure.resourcemanager.mediaservices.models.H265Layer;
import com.azure.resourcemanager.mediaservices.models.H265Video;
import com.azure.resourcemanager.mediaservices.models.H265VideoProfile;
import com.azure.resourcemanager.mediaservices.models.StretchMode;
import com.azure.resourcemanager.mediaservices.models.VideoSyncMode;
import java.time.Duration;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class H265VideoTests {
    @Test
    public void testDeserialize() {
        H265Video model =
            BinaryData
                .fromString(
                    "{\"@odata.type\":\"#Microsoft.Media.H265Video\",\"sceneChangeDetection\":false,\"complexity\":\"Speed\",\"layers\":[{\"profile\":\"Auto\",\"level\":\"dyuib\",\"bufferWindow\":\"PT132H2M8S\",\"crf\":64.25693,\"referenceFrames\":1709399278,\"bitrate\":566054970,\"maxBitrate\":1454417647,\"bFrames\":1872796730,\"frameRate\":\"cjnaeoisrvhmgor\",\"slices\":657143071,\"adaptiveBFrame\":false,\"width\":\"cvwmzhwplefa\",\"height\":\"xilcbtgnhnzey\",\"label\":\"tjj\"},{\"profile\":\"Main\",\"level\":\"qhycavodggxdbees\",\"bufferWindow\":\"PT166H39M40S\",\"crf\":81.58196,\"referenceFrames\":420094918,\"bitrate\":1641970858,\"maxBitrate\":659400127,\"bFrames\":2070170024,\"frameRate\":\"iuagydwqfbylyrfg\",\"slices\":377400220,\"adaptiveBFrame\":true,\"width\":\"jocqwogfnzjvusf\",\"height\":\"dmozu\",\"label\":\"lfsbtkadpysow\"},{\"profile\":\"Main\",\"level\":\"kb\",\"bufferWindow\":\"PT94H24M32S\",\"crf\":67.30978,\"referenceFrames\":508604725,\"bitrate\":1010221539,\"maxBitrate\":1966674078,\"bFrames\":1835646696,\"frameRate\":\"of\",\"slices\":1484675592,\"adaptiveBFrame\":true,\"width\":\"ojyqdhcuplcplcw\",\"height\":\"ihih\",\"label\":\"zdsqtzbsrgnow\"}],\"keyFrameInterval\":\"PT114H28M17S\",\"stretchMode\":\"None\",\"syncMode\":\"Passthrough\",\"label\":\"cact\"}")
                .toObject(H265Video.class);
        Assertions.assertEquals("cact", model.label());
        Assertions.assertEquals(Duration.parse("PT114H28M17S"), model.keyFrameInterval());
        Assertions.assertEquals(StretchMode.NONE, model.stretchMode());
        Assertions.assertEquals(VideoSyncMode.PASSTHROUGH, model.syncMode());
        Assertions.assertEquals(false, model.sceneChangeDetection());
        Assertions.assertEquals(H265Complexity.SPEED, model.complexity());
        Assertions.assertEquals("cvwmzhwplefa", model.layers().get(0).width());
        Assertions.assertEquals("xilcbtgnhnzey", model.layers().get(0).height());
        Assertions.assertEquals("tjj", model.layers().get(0).label());
        Assertions.assertEquals(566054970, model.layers().get(0).bitrate());
        Assertions.assertEquals(1454417647, model.layers().get(0).maxBitrate());
        Assertions.assertEquals(1872796730, model.layers().get(0).bFrames());
        Assertions.assertEquals("cjnaeoisrvhmgor", model.layers().get(0).frameRate());
        Assertions.assertEquals(657143071, model.layers().get(0).slices());
        Assertions.assertEquals(false, model.layers().get(0).adaptiveBFrame());
        Assertions.assertEquals(H265VideoProfile.AUTO, model.layers().get(0).profile());
        Assertions.assertEquals("dyuib", model.layers().get(0).level());
        Assertions.assertEquals(Duration.parse("PT132H2M8S"), model.layers().get(0).bufferWindow());
        Assertions.assertEquals(64.25693f, model.layers().get(0).crf());
        Assertions.assertEquals(1709399278, model.layers().get(0).referenceFrames());
    }

    @Test
    public void testSerialize() {
        H265Video model =
            new H265Video()
                .withLabel("cact")
                .withKeyFrameInterval(Duration.parse("PT114H28M17S"))
                .withStretchMode(StretchMode.NONE)
                .withSyncMode(VideoSyncMode.PASSTHROUGH)
                .withSceneChangeDetection(false)
                .withComplexity(H265Complexity.SPEED)
                .withLayers(
                    Arrays
                        .asList(
                            new H265Layer()
                                .withWidth("cvwmzhwplefa")
                                .withHeight("xilcbtgnhnzey")
                                .withLabel("tjj")
                                .withBitrate(566054970)
                                .withMaxBitrate(1454417647)
                                .withBFrames(1872796730)
                                .withFrameRate("cjnaeoisrvhmgor")
                                .withSlices(657143071)
                                .withAdaptiveBFrame(false)
                                .withProfile(H265VideoProfile.AUTO)
                                .withLevel("dyuib")
                                .withBufferWindow(Duration.parse("PT132H2M8S"))
                                .withCrf(64.25693f)
                                .withReferenceFrames(1709399278),
                            new H265Layer()
                                .withWidth("jocqwogfnzjvusf")
                                .withHeight("dmozu")
                                .withLabel("lfsbtkadpysow")
                                .withBitrate(1641970858)
                                .withMaxBitrate(659400127)
                                .withBFrames(2070170024)
                                .withFrameRate("iuagydwqfbylyrfg")
                                .withSlices(377400220)
                                .withAdaptiveBFrame(true)
                                .withProfile(H265VideoProfile.MAIN)
                                .withLevel("qhycavodggxdbees")
                                .withBufferWindow(Duration.parse("PT166H39M40S"))
                                .withCrf(81.58196f)
                                .withReferenceFrames(420094918),
                            new H265Layer()
                                .withWidth("ojyqdhcuplcplcw")
                                .withHeight("ihih")
                                .withLabel("zdsqtzbsrgnow")
                                .withBitrate(1010221539)
                                .withMaxBitrate(1966674078)
                                .withBFrames(1835646696)
                                .withFrameRate("of")
                                .withSlices(1484675592)
                                .withAdaptiveBFrame(true)
                                .withProfile(H265VideoProfile.MAIN)
                                .withLevel("kb")
                                .withBufferWindow(Duration.parse("PT94H24M32S"))
                                .withCrf(67.30978f)
                                .withReferenceFrames(508604725)));
        model = BinaryData.fromObject(model).toObject(H265Video.class);
        Assertions.assertEquals("cact", model.label());
        Assertions.assertEquals(Duration.parse("PT114H28M17S"), model.keyFrameInterval());
        Assertions.assertEquals(StretchMode.NONE, model.stretchMode());
        Assertions.assertEquals(VideoSyncMode.PASSTHROUGH, model.syncMode());
        Assertions.assertEquals(false, model.sceneChangeDetection());
        Assertions.assertEquals(H265Complexity.SPEED, model.complexity());
        Assertions.assertEquals("cvwmzhwplefa", model.layers().get(0).width());
        Assertions.assertEquals("xilcbtgnhnzey", model.layers().get(0).height());
        Assertions.assertEquals("tjj", model.layers().get(0).label());
        Assertions.assertEquals(566054970, model.layers().get(0).bitrate());
        Assertions.assertEquals(1454417647, model.layers().get(0).maxBitrate());
        Assertions.assertEquals(1872796730, model.layers().get(0).bFrames());
        Assertions.assertEquals("cjnaeoisrvhmgor", model.layers().get(0).frameRate());
        Assertions.assertEquals(657143071, model.layers().get(0).slices());
        Assertions.assertEquals(false, model.layers().get(0).adaptiveBFrame());
        Assertions.assertEquals(H265VideoProfile.AUTO, model.layers().get(0).profile());
        Assertions.assertEquals("dyuib", model.layers().get(0).level());
        Assertions.assertEquals(Duration.parse("PT132H2M8S"), model.layers().get(0).bufferWindow());
        Assertions.assertEquals(64.25693f, model.layers().get(0).crf());
        Assertions.assertEquals(1709399278, model.layers().get(0).referenceFrames());
    }
}
