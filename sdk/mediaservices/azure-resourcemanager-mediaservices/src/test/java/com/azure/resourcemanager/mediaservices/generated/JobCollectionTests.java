// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.fluent.models.JobInner;
import com.azure.resourcemanager.mediaservices.models.JobCollection;
import com.azure.resourcemanager.mediaservices.models.Priority;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class JobCollectionTests {
    @Test
    public void testDeserialize() {
        JobCollection model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"created\":\"2021-02-11T12:46:36Z\",\"state\":\"Processing\",\"description\":\"r\",\"lastModified\":\"2021-10-05T00:25:34Z\",\"outputs\":[],\"priority\":\"Normal\",\"correlationData\":{},\"startTime\":\"2021-07-27T15:53:57Z\",\"endTime\":\"2021-10-26T13:42:02Z\"},\"id\":\"fauvjfdxx\",\"name\":\"vetvt\",\"type\":\"qaqtdoqmcbxvwvxy\"}],\"@odata.nextLink\":\"qbhsfxobl\"}")
                .toObject(JobCollection.class);
        Assertions.assertEquals("r", model.value().get(0).description());
        Assertions.assertEquals(Priority.NORMAL, model.value().get(0).priority());
    }

    @Test
    public void testSerialize() {
        JobCollection model =
            new JobCollection()
                .withValue(
                    Arrays
                        .asList(
                            new JobInner()
                                .withDescription("r")
                                .withOutputs(Arrays.asList())
                                .withPriority(Priority.NORMAL)
                                .withCorrelationData(mapOf())));
        model = BinaryData.fromObject(model).toObject(JobCollection.class);
        Assertions.assertEquals("r", model.value().get(0).description());
        Assertions.assertEquals(Priority.NORMAL, model.value().get(0).priority());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
