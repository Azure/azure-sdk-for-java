// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.mediaservices.MediaServicesManager;
import com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy;
import com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyConfiguration;
import com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyOption;
import com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyRestriction;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ContentKeyPoliciesCreateOrUpdateWithResponseMockTests {
    @Test
    public void testCreateOrUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"policyId\":\"9cd0b286-5fef-4a50-9002-2f9b0662c9bf\",\"created\":\"2021-03-02T09:33:59Z\",\"lastModified\":\"2021-06-06T03:18:11Z\",\"description\":\"gguxhemlwyw\",\"options\":[{\"policyOptionId\":\"6a59dad0-4b2c-48dd-8d1a-f47158f95fd8\",\"name\":\"zgfbukklelssx\",\"configuration\":{\"@odata.type\":\"ContentKeyPolicyConfiguration\"},\"restriction\":{\"@odata.type\":\"ContentKeyPolicyRestriction\"}},{\"policyOptionId\":\"e9d19cab-b49d-496f-bdf1-09a9ca431899\",\"name\":\"c\",\"configuration\":{\"@odata.type\":\"ContentKeyPolicyConfiguration\"},\"restriction\":{\"@odata.type\":\"ContentKeyPolicyRestriction\"}}]},\"id\":\"zujksrlsmdes\",\"name\":\"plpvm\",\"type\":\"cdoewbidyv\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MediaServicesManager manager = MediaServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ContentKeyPolicy response = manager.contentKeyPolicies()
            .define("sqowxwc")
            .withExistingMediaService("awzovgkk", "muikjcjcaztbws")
            .withDescription("vc")
            .withOptions(Arrays.asList(
                new ContentKeyPolicyOption().withName("k")
                    .withConfiguration(new ContentKeyPolicyConfiguration())
                    .withRestriction(new ContentKeyPolicyRestriction()),
                new ContentKeyPolicyOption().withName("ejyfdvlvhbwrnfx")
                    .withConfiguration(new ContentKeyPolicyConfiguration())
                    .withRestriction(new ContentKeyPolicyRestriction()),
                new ContentKeyPolicyOption().withName("dpqthehn")
                    .withConfiguration(new ContentKeyPolicyConfiguration())
                    .withRestriction(new ContentKeyPolicyRestriction())))
            .create();

        Assertions.assertEquals("gguxhemlwyw", response.description());
        Assertions.assertEquals("zgfbukklelssx", response.options().get(0).name());
    }
}
