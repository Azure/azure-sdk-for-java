// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.mediaservices.MediaServicesManager;
import com.azure.resourcemanager.mediaservices.models.Hls;
import com.azure.resourcemanager.mediaservices.models.LiveOutput;
import java.nio.charset.StandardCharsets;
import java.time.Duration;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class LiveOutputsCreateMockTests {
    @Test
    public void testCreate() throws Exception {
        String responseStr
            = "{\"properties\":{\"description\":\"nkyhf\",\"assetName\":\"zv\",\"archiveWindowLength\":\"PT148H22M52S\",\"rewindWindowLength\":\"PT55H33M23S\",\"manifestName\":\"jelgcmpzqjhhhq\",\"hls\":{\"fragmentsPerTsSegment\":1057566425},\"outputSnapTime\":3563929703826464840,\"created\":\"2021-10-07T10:11:02Z\",\"lastModified\":\"2021-03-16T00:43:40Z\",\"provisioningState\":\"Succeeded\",\"resourceState\":\"Deleting\"},\"id\":\"jiu\",\"name\":\"ehgmvflnwyv\",\"type\":\"kxrerlniylylyfwx\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MediaServicesManager manager = MediaServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        LiveOutput response = manager.liveOutputs()
            .define("nfnzhhh")
            .withExistingLiveEvent("dgo", "ewijymrhbguz", "zkye")
            .withDescription("mffjkutycyarn")
            .withAssetName("oohguabzoghkt")
            .withArchiveWindowLength(Duration.parse("PT173H13M29S"))
            .withRewindWindowLength(Duration.parse("PT227H38M26S"))
            .withManifestName("hcoeocnhzq")
            .withHls(new Hls().withFragmentsPerTsSegment(368546114))
            .withOutputSnapTime(2745437835600434543L)
            .create();

        Assertions.assertEquals("nkyhf", response.description());
        Assertions.assertEquals("zv", response.assetName());
        Assertions.assertEquals(Duration.parse("PT148H22M52S"), response.archiveWindowLength());
        Assertions.assertEquals(Duration.parse("PT55H33M23S"), response.rewindWindowLength());
        Assertions.assertEquals("jelgcmpzqjhhhq", response.manifestName());
        Assertions.assertEquals(1057566425, response.hls().fragmentsPerTsSegment());
        Assertions.assertEquals(3563929703826464840L, response.outputSnapTime());
    }
}
