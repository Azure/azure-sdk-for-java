// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.models.AkamaiAccessControl;
import com.azure.resourcemanager.mediaservices.models.AkamaiSignatureHeaderAuthenticationKey;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class AkamaiAccessControlTests {
    @Test
    public void testDeserialize() {
        AkamaiAccessControl model =
            BinaryData
                .fromString(
                    "{\"akamaiSignatureHeaderAuthenticationKeyList\":[{\"identifier\":\"xcpjuisavokqdzf\",\"base64Key\":\"zivj\",\"expiration\":\"2021-07-08T09:37:13Z\"}]}")
                .toObject(AkamaiAccessControl.class);
        Assertions
            .assertEquals("xcpjuisavokqdzf", model.akamaiSignatureHeaderAuthenticationKeyList().get(0).identifier());
        Assertions.assertEquals("zivj", model.akamaiSignatureHeaderAuthenticationKeyList().get(0).base64Key());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-07-08T09:37:13Z"),
                model.akamaiSignatureHeaderAuthenticationKeyList().get(0).expiration());
    }

    @Test
    public void testSerialize() {
        AkamaiAccessControl model =
            new AkamaiAccessControl()
                .withAkamaiSignatureHeaderAuthenticationKeyList(
                    Arrays
                        .asList(
                            new AkamaiSignatureHeaderAuthenticationKey()
                                .withIdentifier("xcpjuisavokqdzf")
                                .withBase64Key("zivj")
                                .withExpiration(OffsetDateTime.parse("2021-07-08T09:37:13Z"))));
        model = BinaryData.fromObject(model).toObject(AkamaiAccessControl.class);
        Assertions
            .assertEquals("xcpjuisavokqdzf", model.akamaiSignatureHeaderAuthenticationKeyList().get(0).identifier());
        Assertions.assertEquals("zivj", model.akamaiSignatureHeaderAuthenticationKeyList().get(0).base64Key());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-07-08T09:37:13Z"),
                model.akamaiSignatureHeaderAuthenticationKeyList().get(0).expiration());
    }
}
