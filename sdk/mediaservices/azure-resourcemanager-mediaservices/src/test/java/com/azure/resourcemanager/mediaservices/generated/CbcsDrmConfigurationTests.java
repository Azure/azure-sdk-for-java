// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.models.CbcsDrmConfiguration;
import com.azure.resourcemanager.mediaservices.models.StreamingPolicyFairPlayConfiguration;
import com.azure.resourcemanager.mediaservices.models.StreamingPolicyPlayReadyConfiguration;
import com.azure.resourcemanager.mediaservices.models.StreamingPolicyWidevineConfiguration;
import org.junit.jupiter.api.Assertions;

public final class CbcsDrmConfigurationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CbcsDrmConfiguration model = BinaryData.fromString(
            "{\"fairPlay\":{\"customLicenseAcquisitionUrlTemplate\":\"jaltolmnc\",\"allowPersistentLicense\":false},\"playReady\":{\"customLicenseAcquisitionUrlTemplate\":\"qwcsdbnwdcfhuc\",\"playReadyCustomAttributes\":\"pfuvglsbjjca\"},\"widevine\":{\"customLicenseAcquisitionUrlTemplate\":\"bvtvudutncormr\"}}")
            .toObject(CbcsDrmConfiguration.class);
        Assertions.assertEquals("jaltolmnc", model.fairPlay().customLicenseAcquisitionUrlTemplate());
        Assertions.assertEquals(false, model.fairPlay().allowPersistentLicense());
        Assertions.assertEquals("qwcsdbnwdcfhuc", model.playReady().customLicenseAcquisitionUrlTemplate());
        Assertions.assertEquals("pfuvglsbjjca", model.playReady().playReadyCustomAttributes());
        Assertions.assertEquals("bvtvudutncormr", model.widevine().customLicenseAcquisitionUrlTemplate());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CbcsDrmConfiguration model = new CbcsDrmConfiguration()
            .withFairPlay(
                new StreamingPolicyFairPlayConfiguration().withCustomLicenseAcquisitionUrlTemplate("jaltolmnc")
                    .withAllowPersistentLicense(false))
            .withPlayReady(
                new StreamingPolicyPlayReadyConfiguration().withCustomLicenseAcquisitionUrlTemplate("qwcsdbnwdcfhuc")
                    .withPlayReadyCustomAttributes("pfuvglsbjjca"))
            .withWidevine(
                new StreamingPolicyWidevineConfiguration().withCustomLicenseAcquisitionUrlTemplate("bvtvudutncormr"));
        model = BinaryData.fromObject(model).toObject(CbcsDrmConfiguration.class);
        Assertions.assertEquals("jaltolmnc", model.fairPlay().customLicenseAcquisitionUrlTemplate());
        Assertions.assertEquals(false, model.fairPlay().allowPersistentLicense());
        Assertions.assertEquals("qwcsdbnwdcfhuc", model.playReady().customLicenseAcquisitionUrlTemplate());
        Assertions.assertEquals("pfuvglsbjjca", model.playReady().playReadyCustomAttributes());
        Assertions.assertEquals("bvtvudutncormr", model.widevine().customLicenseAcquisitionUrlTemplate());
    }
}
