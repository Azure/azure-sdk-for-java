// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.models.AttributeFilter;
import com.azure.resourcemanager.mediaservices.models.ChannelMapping;
import com.azure.resourcemanager.mediaservices.models.SelectAudioTrackByAttribute;
import com.azure.resourcemanager.mediaservices.models.TrackAttribute;
import org.junit.jupiter.api.Assertions;

public final class SelectAudioTrackByAttributeTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SelectAudioTrackByAttribute model =
            BinaryData
                .fromString(
                    "{\"@odata.type\":\"#Microsoft.Media.SelectAudioTrackByAttribute\",\"attribute\":\"Bitrate\",\"filter\":\"Bottom\",\"filterValue\":\"yiopi\",\"channelMapping\":\"Center\"}")
                .toObject(SelectAudioTrackByAttribute.class);
        Assertions.assertEquals(ChannelMapping.CENTER, model.channelMapping());
        Assertions.assertEquals(TrackAttribute.BITRATE, model.attribute());
        Assertions.assertEquals(AttributeFilter.BOTTOM, model.filter());
        Assertions.assertEquals("yiopi", model.filterValue());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SelectAudioTrackByAttribute model =
            new SelectAudioTrackByAttribute()
                .withChannelMapping(ChannelMapping.CENTER)
                .withAttribute(TrackAttribute.BITRATE)
                .withFilter(AttributeFilter.BOTTOM)
                .withFilterValue("yiopi");
        model = BinaryData.fromObject(model).toObject(SelectAudioTrackByAttribute.class);
        Assertions.assertEquals(ChannelMapping.CENTER, model.channelMapping());
        Assertions.assertEquals(TrackAttribute.BITRATE, model.attribute());
        Assertions.assertEquals(AttributeFilter.BOTTOM, model.filter());
        Assertions.assertEquals("yiopi", model.filterValue());
    }
}
