// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.models.Deinterlace;
import com.azure.resourcemanager.mediaservices.models.DeinterlaceMode;
import com.azure.resourcemanager.mediaservices.models.DeinterlaceParity;
import com.azure.resourcemanager.mediaservices.models.Filters;
import com.azure.resourcemanager.mediaservices.models.Overlay;
import com.azure.resourcemanager.mediaservices.models.Rectangle;
import com.azure.resourcemanager.mediaservices.models.Rotation;
import java.time.Duration;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class FiltersTests {
    @Test
    public void testDeserialize() {
        Filters model =
            BinaryData
                .fromString(
                    "{\"deinterlace\":{\"parity\":\"Auto\",\"mode\":\"AutoPixelAdaptive\"},\"rotation\":\"Rotate90\",\"crop\":{\"left\":\"k\",\"top\":\"gg\",\"width\":\"pijrajcivmmghf\",\"height\":\"iwrxgkn\"},\"overlays\":[{\"@odata.type\":\"Overlay\",\"inputLabel\":\"yinzqodfvpgs\",\"start\":\"PT158H8M16S\",\"end\":\"PT146H27M24S\",\"fadeInDuration\":\"PT211H31M38S\",\"fadeOutDuration\":\"PT160H19M35S\",\"audioGainLevel\":68.77050040063554}]}")
                .toObject(Filters.class);
        Assertions.assertEquals(DeinterlaceParity.AUTO, model.deinterlace().parity());
        Assertions.assertEquals(DeinterlaceMode.AUTO_PIXEL_ADAPTIVE, model.deinterlace().mode());
        Assertions.assertEquals(Rotation.ROTATE90, model.rotation());
        Assertions.assertEquals("k", model.crop().left());
        Assertions.assertEquals("gg", model.crop().top());
        Assertions.assertEquals("pijrajcivmmghf", model.crop().width());
        Assertions.assertEquals("iwrxgkn", model.crop().height());
        Assertions.assertEquals("yinzqodfvpgs", model.overlays().get(0).inputLabel());
        Assertions.assertEquals(Duration.parse("PT158H8M16S"), model.overlays().get(0).start());
        Assertions.assertEquals(Duration.parse("PT146H27M24S"), model.overlays().get(0).end());
        Assertions.assertEquals(Duration.parse("PT211H31M38S"), model.overlays().get(0).fadeInDuration());
        Assertions.assertEquals(Duration.parse("PT160H19M35S"), model.overlays().get(0).fadeOutDuration());
        Assertions.assertEquals(68.77050040063554, model.overlays().get(0).audioGainLevel());
    }

    @Test
    public void testSerialize() {
        Filters model =
            new Filters()
                .withDeinterlace(
                    new Deinterlace().withParity(DeinterlaceParity.AUTO).withMode(DeinterlaceMode.AUTO_PIXEL_ADAPTIVE))
                .withRotation(Rotation.ROTATE90)
                .withCrop(new Rectangle().withLeft("k").withTop("gg").withWidth("pijrajcivmmghf").withHeight("iwrxgkn"))
                .withOverlays(
                    Arrays
                        .asList(
                            new Overlay()
                                .withInputLabel("yinzqodfvpgs")
                                .withStart(Duration.parse("PT158H8M16S"))
                                .withEnd(Duration.parse("PT146H27M24S"))
                                .withFadeInDuration(Duration.parse("PT211H31M38S"))
                                .withFadeOutDuration(Duration.parse("PT160H19M35S"))
                                .withAudioGainLevel(68.77050040063554)));
        model = BinaryData.fromObject(model).toObject(Filters.class);
        Assertions.assertEquals(DeinterlaceParity.AUTO, model.deinterlace().parity());
        Assertions.assertEquals(DeinterlaceMode.AUTO_PIXEL_ADAPTIVE, model.deinterlace().mode());
        Assertions.assertEquals(Rotation.ROTATE90, model.rotation());
        Assertions.assertEquals("k", model.crop().left());
        Assertions.assertEquals("gg", model.crop().top());
        Assertions.assertEquals("pijrajcivmmghf", model.crop().width());
        Assertions.assertEquals("iwrxgkn", model.crop().height());
        Assertions.assertEquals("yinzqodfvpgs", model.overlays().get(0).inputLabel());
        Assertions.assertEquals(Duration.parse("PT158H8M16S"), model.overlays().get(0).start());
        Assertions.assertEquals(Duration.parse("PT146H27M24S"), model.overlays().get(0).end());
        Assertions.assertEquals(Duration.parse("PT211H31M38S"), model.overlays().get(0).fadeInDuration());
        Assertions.assertEquals(Duration.parse("PT160H19M35S"), model.overlays().get(0).fadeOutDuration());
        Assertions.assertEquals(68.77050040063554, model.overlays().get(0).audioGainLevel());
    }
}
