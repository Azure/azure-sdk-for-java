// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.mediaservices.MediaServicesManager;
import com.azure.resourcemanager.mediaservices.models.Asset;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AssetsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"assetId\":\"e8b4eba4-3907-4233-82b5-9ab77319ae5b\",\"created\":\"2021-11-23T18:15:25Z\",\"lastModified\":\"2021-06-08T01:40:36Z\",\"alternateId\":\"ecjxe\",\"description\":\"tuhxuicb\",\"container\":\"wmrswnjlxuzrh\",\"storageAccountName\":\"usxjbaqehg\",\"storageEncryptionFormat\":\"MediaStorageClientEncryption\"},\"id\":\"zjqatucoig\",\"name\":\"bxncnwfepbnw\",\"type\":\"fmxjg\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MediaServicesManager manager = MediaServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Asset> response = manager.assets()
            .list("jxtxrdc", "tjvidt", "gepuslvyjtc", 1750462834, "wkasiziesf", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("ecjxe", response.iterator().next().alternateId());
        Assertions.assertEquals("tuhxuicb", response.iterator().next().description());
        Assertions.assertEquals("wmrswnjlxuzrh", response.iterator().next().container());
        Assertions.assertEquals("usxjbaqehg", response.iterator().next().storageAccountName());
    }
}
