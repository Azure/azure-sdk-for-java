// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.models.EncryptionScheme;
import com.azure.resourcemanager.mediaservices.models.StreamingPath;
import com.azure.resourcemanager.mediaservices.models.StreamingPolicyStreamingProtocol;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class StreamingPathTests {
    @Test
    public void testDeserialize() {
        StreamingPath model =
            BinaryData
                .fromString(
                    "{\"streamingProtocol\":\"Dash\",\"encryptionScheme\":\"CommonEncryptionCbcs\",\"paths\":[\"ft\",\"maequiahxicslfa\",\"qzpiyyl\"]}")
                .toObject(StreamingPath.class);
        Assertions.assertEquals(StreamingPolicyStreamingProtocol.DASH, model.streamingProtocol());
        Assertions.assertEquals(EncryptionScheme.COMMON_ENCRYPTION_CBCS, model.encryptionScheme());
        Assertions.assertEquals("ft", model.paths().get(0));
    }

    @Test
    public void testSerialize() {
        StreamingPath model =
            new StreamingPath()
                .withStreamingProtocol(StreamingPolicyStreamingProtocol.DASH)
                .withEncryptionScheme(EncryptionScheme.COMMON_ENCRYPTION_CBCS)
                .withPaths(Arrays.asList("ft", "maequiahxicslfa", "qzpiyyl"));
        model = BinaryData.fromObject(model).toObject(StreamingPath.class);
        Assertions.assertEquals(StreamingPolicyStreamingProtocol.DASH, model.streamingProtocol());
        Assertions.assertEquals(EncryptionScheme.COMMON_ENCRYPTION_CBCS, model.encryptionScheme());
        Assertions.assertEquals("ft", model.paths().get(0));
    }
}
