// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.models.ArmStreamingEndpointCapacity;
import com.azure.resourcemanager.mediaservices.models.ArmStreamingEndpointSku;
import com.azure.resourcemanager.mediaservices.models.ArmStreamingEndpointSkuInfo;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class ArmStreamingEndpointSkuInfoTests {
    @Test
    public void testDeserialize() {
        ArmStreamingEndpointSkuInfo model =
            BinaryData
                .fromString(
                    "{\"resourceType\":\"wjplma\",\"capacity\":{\"scaleType\":\"cyohpfkyrkdbd\",\"default\":863803765,\"minimum\":2131502112,\"maximum\":2107096986},\"sku\":{\"name\":\"wqjnob\"}}")
                .toObject(ArmStreamingEndpointSkuInfo.class);
        Assertions.assertEquals("wjplma", model.resourceType());
        Assertions.assertEquals(863803765, model.capacity().defaultProperty());
        Assertions.assertEquals(2131502112, model.capacity().minimum());
        Assertions.assertEquals(2107096986, model.capacity().maximum());
    }

    @Test
    public void testSerialize() {
        ArmStreamingEndpointSkuInfo model =
            new ArmStreamingEndpointSkuInfo()
                .withResourceType("wjplma")
                .withCapacity(
                    new ArmStreamingEndpointCapacity()
                        .withDefaultProperty(863803765)
                        .withMinimum(2131502112)
                        .withMaximum(2107096986))
                .withSku(new ArmStreamingEndpointSku());
        model = BinaryData.fromObject(model).toObject(ArmStreamingEndpointSkuInfo.class);
        Assertions.assertEquals("wjplma", model.resourceType());
        Assertions.assertEquals(863803765, model.capacity().defaultProperty());
        Assertions.assertEquals(2131502112, model.capacity().minimum());
        Assertions.assertEquals(2107096986, model.capacity().maximum());
    }
}
