// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.fluent.models.StreamingEndpointProperties;
import com.azure.resourcemanager.mediaservices.models.AkamaiAccessControl;
import com.azure.resourcemanager.mediaservices.models.CrossSiteAccessPolicies;
import com.azure.resourcemanager.mediaservices.models.IpAccessControl;
import com.azure.resourcemanager.mediaservices.models.StreamingEndpointAccessControl;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class StreamingEndpointPropertiesTests {
    @Test
    public void testDeserialize() {
        StreamingEndpointProperties model =
            BinaryData
                .fromString(
                    "{\"description\":\"lywjhh\",\"scaleUnits\":1788432373,\"availabilitySetName\":\"hxmsivfo\",\"accessControl\":{\"akamai\":{\"akamaiSignatureHeaderAuthenticationKeyList\":[]},\"ip\":{\"allow\":[]}},\"maxCacheAge\":2254648320750623886,\"customHostNames\":[\"dieuzaofj\",\"hvcyyysfg\",\"otcubi\"],\"hostName\":\"uipwoqonmacje\",\"cdnEnabled\":false,\"cdnProvider\":\"shqvcimpev\",\"cdnProfile\":\"mblrrilbywd\",\"provisioningState\":\"miccwrwfscjfnyn\",\"resourceState\":\"Starting\",\"crossSiteAccessPolicies\":{\"clientAccessPolicy\":\"i\",\"crossDomainPolicy\":\"voqyt\"},\"freeTrialEndTime\":\"2021-11-02T20:40:47Z\",\"created\":\"2021-04-18T12:20:46Z\",\"lastModified\":\"2021-09-24T22:06:57Z\"}")
                .toObject(StreamingEndpointProperties.class);
        Assertions.assertEquals("lywjhh", model.description());
        Assertions.assertEquals(1788432373, model.scaleUnits());
        Assertions.assertEquals("hxmsivfo", model.availabilitySetName());
        Assertions.assertEquals(2254648320750623886L, model.maxCacheAge());
        Assertions.assertEquals("dieuzaofj", model.customHostNames().get(0));
        Assertions.assertEquals(false, model.cdnEnabled());
        Assertions.assertEquals("shqvcimpev", model.cdnProvider());
        Assertions.assertEquals("mblrrilbywd", model.cdnProfile());
        Assertions.assertEquals("i", model.crossSiteAccessPolicies().clientAccessPolicy());
        Assertions.assertEquals("voqyt", model.crossSiteAccessPolicies().crossDomainPolicy());
    }

    @Test
    public void testSerialize() {
        StreamingEndpointProperties model =
            new StreamingEndpointProperties()
                .withDescription("lywjhh")
                .withScaleUnits(1788432373)
                .withAvailabilitySetName("hxmsivfo")
                .withAccessControl(
                    new StreamingEndpointAccessControl()
                        .withAkamai(
                            new AkamaiAccessControl().withAkamaiSignatureHeaderAuthenticationKeyList(Arrays.asList()))
                        .withIp(new IpAccessControl().withAllow(Arrays.asList())))
                .withMaxCacheAge(2254648320750623886L)
                .withCustomHostNames(Arrays.asList("dieuzaofj", "hvcyyysfg", "otcubi"))
                .withCdnEnabled(false)
                .withCdnProvider("shqvcimpev")
                .withCdnProfile("mblrrilbywd")
                .withCrossSiteAccessPolicies(
                    new CrossSiteAccessPolicies().withClientAccessPolicy("i").withCrossDomainPolicy("voqyt"));
        model = BinaryData.fromObject(model).toObject(StreamingEndpointProperties.class);
        Assertions.assertEquals("lywjhh", model.description());
        Assertions.assertEquals(1788432373, model.scaleUnits());
        Assertions.assertEquals("hxmsivfo", model.availabilitySetName());
        Assertions.assertEquals(2254648320750623886L, model.maxCacheAge());
        Assertions.assertEquals("dieuzaofj", model.customHostNames().get(0));
        Assertions.assertEquals(false, model.cdnEnabled());
        Assertions.assertEquals("shqvcimpev", model.cdnProvider());
        Assertions.assertEquals("mblrrilbywd", model.cdnProfile());
        Assertions.assertEquals("i", model.crossSiteAccessPolicies().clientAccessPolicy());
        Assertions.assertEquals("voqyt", model.crossSiteAccessPolicies().crossDomainPolicy());
    }
}
