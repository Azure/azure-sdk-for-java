// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.models.IpAccessControl;
import com.azure.resourcemanager.mediaservices.models.IpRange;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class IpAccessControlTests {
    @Test
    public void testDeserialize() {
        IpAccessControl model =
            BinaryData
                .fromString(
                    "{\"allow\":[{\"name\":\"rryuzhlhkjo\",\"address\":\"vqqaatjinrvgo\",\"subnetPrefixLength\":167667662},{\"name\":\"iibfggj\",\"address\":\"olvrw\",\"subnetPrefixLength\":148831092},{\"name\":\"kkgll\",\"address\":\"jygvjayvbl\",\"subnetPrefixLength\":1469065615}]}")
                .toObject(IpAccessControl.class);
        Assertions.assertEquals("rryuzhlhkjo", model.allow().get(0).name());
        Assertions.assertEquals("vqqaatjinrvgo", model.allow().get(0).address());
        Assertions.assertEquals(167667662, model.allow().get(0).subnetPrefixLength());
    }

    @Test
    public void testSerialize() {
        IpAccessControl model =
            new IpAccessControl()
                .withAllow(
                    Arrays
                        .asList(
                            new IpRange()
                                .withName("rryuzhlhkjo")
                                .withAddress("vqqaatjinrvgo")
                                .withSubnetPrefixLength(167667662),
                            new IpRange().withName("iibfggj").withAddress("olvrw").withSubnetPrefixLength(148831092),
                            new IpRange()
                                .withName("kkgll")
                                .withAddress("jygvjayvbl")
                                .withSubnetPrefixLength(1469065615)));
        model = BinaryData.fromObject(model).toObject(IpAccessControl.class);
        Assertions.assertEquals("rryuzhlhkjo", model.allow().get(0).name());
        Assertions.assertEquals("vqqaatjinrvgo", model.allow().get(0).address());
        Assertions.assertEquals(167667662, model.allow().get(0).subnetPrefixLength());
    }
}
