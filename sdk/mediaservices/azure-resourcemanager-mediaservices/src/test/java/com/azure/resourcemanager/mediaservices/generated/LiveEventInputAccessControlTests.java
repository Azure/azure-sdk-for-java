// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.models.IpAccessControl;
import com.azure.resourcemanager.mediaservices.models.IpRange;
import com.azure.resourcemanager.mediaservices.models.LiveEventInputAccessControl;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class LiveEventInputAccessControlTests {
    @Test
    public void testDeserialize() {
        LiveEventInputAccessControl model =
            BinaryData
                .fromString(
                    "{\"ip\":{\"allow\":[{\"name\":\"pg\",\"address\":\"dkow\",\"subnetPrefixLength\":818081451},{\"name\":\"pc\",\"address\":\"kbwcc\",\"subnetPrefixLength\":942350763},{\"name\":\"cdwxlpq\",\"address\":\"ftnkhtj\",\"subnetPrefixLength\":84302397},{\"name\":\"gwfqatmt\",\"address\":\"tmdvypgikdgs\",\"subnetPrefixLength\":35154388}]}}")
                .toObject(LiveEventInputAccessControl.class);
        Assertions.assertEquals("pg", model.ip().allow().get(0).name());
        Assertions.assertEquals("dkow", model.ip().allow().get(0).address());
        Assertions.assertEquals(818081451, model.ip().allow().get(0).subnetPrefixLength());
    }

    @Test
    public void testSerialize() {
        LiveEventInputAccessControl model =
            new LiveEventInputAccessControl()
                .withIp(
                    new IpAccessControl()
                        .withAllow(
                            Arrays
                                .asList(
                                    new IpRange().withName("pg").withAddress("dkow").withSubnetPrefixLength(818081451),
                                    new IpRange().withName("pc").withAddress("kbwcc").withSubnetPrefixLength(942350763),
                                    new IpRange()
                                        .withName("cdwxlpq")
                                        .withAddress("ftnkhtj")
                                        .withSubnetPrefixLength(84302397),
                                    new IpRange()
                                        .withName("gwfqatmt")
                                        .withAddress("tmdvypgikdgs")
                                        .withSubnetPrefixLength(35154388))));
        model = BinaryData.fromObject(model).toObject(LiveEventInputAccessControl.class);
        Assertions.assertEquals("pg", model.ip().allow().get(0).name());
        Assertions.assertEquals("dkow", model.ip().allow().get(0).address());
        Assertions.assertEquals(818081451, model.ip().allow().get(0).subnetPrefixLength());
    }
}
