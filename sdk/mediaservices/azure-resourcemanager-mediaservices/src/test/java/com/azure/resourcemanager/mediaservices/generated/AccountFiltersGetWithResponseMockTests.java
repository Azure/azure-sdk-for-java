// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.mediaservices.MediaServicesManager;
import com.azure.resourcemanager.mediaservices.models.AccountFilter;
import com.azure.resourcemanager.mediaservices.models.FilterTrackPropertyCompareOperation;
import com.azure.resourcemanager.mediaservices.models.FilterTrackPropertyType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AccountFiltersGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"presentationTimeRange\":{\"startTimestamp\":1718820549593481354,\"endTimestamp\":353173494369186573,\"presentationWindowDuration\":2977319405795581090,\"liveBackoffDuration\":4364402905165555657,\"timescale\":3149234657831065578,\"forceEndTimestamp\":true},\"firstQuality\":{\"bitrate\":1944558428},\"tracks\":[{\"trackSelections\":[{\"property\":\"FourCC\",\"value\":\"bwefqsfapaqtfer\",\"operation\":\"Equal\"}]},{\"trackSelections\":[{\"property\":\"FourCC\",\"value\":\"x\",\"operation\":\"Equal\"},{\"property\":\"Name\",\"value\":\"fxapjwogqqnobpu\",\"operation\":\"NotEqual\"},{\"property\":\"FourCC\",\"value\":\"abtqwpwyawbzasqb\",\"operation\":\"Equal\"},{\"property\":\"FourCC\",\"value\":\"jg\",\"operation\":\"Equal\"}]},{\"trackSelections\":[{\"property\":\"FourCC\",\"value\":\"aoguyaipids\",\"operation\":\"Equal\"},{\"property\":\"Unknown\",\"value\":\"ltxijjumfqwazln\",\"operation\":\"Equal\"}]}]},\"id\":\"cjngzqdqxtbjwgny\",\"name\":\"usfzsvtuikzha\",\"type\":\"qglcfhmlrqryxynq\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MediaServicesManager manager = MediaServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        AccountFilter response = manager.accountFilters()
            .getWithResponse("prprsnmokay", "ejnhlbkpb", "pcpil", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(1718820549593481354L, response.presentationTimeRange().startTimestamp());
        Assertions.assertEquals(353173494369186573L, response.presentationTimeRange().endTimestamp());
        Assertions.assertEquals(2977319405795581090L, response.presentationTimeRange().presentationWindowDuration());
        Assertions.assertEquals(4364402905165555657L, response.presentationTimeRange().liveBackoffDuration());
        Assertions.assertEquals(3149234657831065578L, response.presentationTimeRange().timescale());
        Assertions.assertEquals(true, response.presentationTimeRange().forceEndTimestamp());
        Assertions.assertEquals(1944558428, response.firstQuality().bitrate());
        Assertions.assertEquals(FilterTrackPropertyType.FOUR_CC,
            response.tracks().get(0).trackSelections().get(0).property());
        Assertions.assertEquals("bwefqsfapaqtfer", response.tracks().get(0).trackSelections().get(0).value());
        Assertions.assertEquals(FilterTrackPropertyCompareOperation.EQUAL,
            response.tracks().get(0).trackSelections().get(0).operation());
    }
}
