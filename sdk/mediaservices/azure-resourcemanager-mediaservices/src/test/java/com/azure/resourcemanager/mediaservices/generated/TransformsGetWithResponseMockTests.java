// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.mediaservices.MediaServicesManager;
import com.azure.resourcemanager.mediaservices.models.OnErrorType;
import com.azure.resourcemanager.mediaservices.models.Priority;
import com.azure.resourcemanager.mediaservices.models.Transform;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class TransformsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"created\":\"2021-07-05T12:47:55Z\",\"description\":\"iiovgqcgxu\",\"lastModified\":\"2021-07-06T10:58:26Z\",\"outputs\":[{\"onError\":\"ContinueJob\",\"relativePriority\":\"High\",\"preset\":{\"@odata.type\":\"Preset\"}},{\"onError\":\"StopProcessingJob\",\"relativePriority\":\"High\",\"preset\":{\"@odata.type\":\"Preset\"}},{\"onError\":\"StopProcessingJob\",\"relativePriority\":\"High\",\"preset\":{\"@odata.type\":\"Preset\"}},{\"onError\":\"StopProcessingJob\",\"relativePriority\":\"Low\",\"preset\":{\"@odata.type\":\"Preset\"}}]},\"id\":\"wdtgukranblw\",\"name\":\"hqlkccuzgygqwaho\",\"type\":\"ulwgniiprglvawuw\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MediaServicesManager manager = MediaServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Transform response = manager.transforms()
            .getWithResponse("emmucfxh", "kkflrmymyincqlhr", "s", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("iiovgqcgxu", response.description());
        Assertions.assertEquals(OnErrorType.CONTINUE_JOB, response.outputs().get(0).onError());
        Assertions.assertEquals(Priority.HIGH, response.outputs().get(0).relativePriority());
    }
}
