// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.models.H265VideoLayer;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class H265VideoLayerTests {
    @Test
    public void testDeserialize() {
        H265VideoLayer model =
            BinaryData
                .fromString(
                    "{\"bitrate\":96758451,\"maxBitrate\":1532884453,\"bFrames\":1169693926,\"frameRate\":\"xnkomtkubo\",\"slices\":1449469351,\"adaptiveBFrame\":true,\"width\":\"xz\",\"height\":\"ihfrbbcevqa\",\"label\":\"ltd\"}")
                .toObject(H265VideoLayer.class);
        Assertions.assertEquals("xz", model.width());
        Assertions.assertEquals("ihfrbbcevqa", model.height());
        Assertions.assertEquals("ltd", model.label());
        Assertions.assertEquals(96758451, model.bitrate());
        Assertions.assertEquals(1532884453, model.maxBitrate());
        Assertions.assertEquals(1169693926, model.bFrames());
        Assertions.assertEquals("xnkomtkubo", model.frameRate());
        Assertions.assertEquals(1449469351, model.slices());
        Assertions.assertEquals(true, model.adaptiveBFrame());
    }

    @Test
    public void testSerialize() {
        H265VideoLayer model =
            new H265VideoLayer()
                .withWidth("xz")
                .withHeight("ihfrbbcevqa")
                .withLabel("ltd")
                .withBitrate(96758451)
                .withMaxBitrate(1532884453)
                .withBFrames(1169693926)
                .withFrameRate("xnkomtkubo")
                .withSlices(1449469351)
                .withAdaptiveBFrame(true);
        model = BinaryData.fromObject(model).toObject(H265VideoLayer.class);
        Assertions.assertEquals("xz", model.width());
        Assertions.assertEquals("ihfrbbcevqa", model.height());
        Assertions.assertEquals("ltd", model.label());
        Assertions.assertEquals(96758451, model.bitrate());
        Assertions.assertEquals(1532884453, model.maxBitrate());
        Assertions.assertEquals(1169693926, model.bFrames());
        Assertions.assertEquals("xnkomtkubo", model.frameRate());
        Assertions.assertEquals(1449469351, model.slices());
        Assertions.assertEquals(true, model.adaptiveBFrame());
    }
}
