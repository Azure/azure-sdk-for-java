// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.models.H265VideoLayer;
import org.junit.jupiter.api.Assertions;

public final class H265VideoLayerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        H265VideoLayer model =
            BinaryData
                .fromString(
                    "{\"bitrate\":694182696,\"maxBitrate\":856431804,\"bFrames\":2038816187,\"frameRate\":\"hftqsxhqxujxukn\",\"slices\":2084244471,\"adaptiveBFrame\":true,\"width\":\"jguufzdm\",\"height\":\"qtfihwhbotzinga\",\"label\":\"pph\"}")
                .toObject(H265VideoLayer.class);
        Assertions.assertEquals("jguufzdm", model.width());
        Assertions.assertEquals("qtfihwhbotzinga", model.height());
        Assertions.assertEquals("pph", model.label());
        Assertions.assertEquals(694182696, model.bitrate());
        Assertions.assertEquals(856431804, model.maxBitrate());
        Assertions.assertEquals(2038816187, model.bFrames());
        Assertions.assertEquals("hftqsxhqxujxukn", model.frameRate());
        Assertions.assertEquals(2084244471, model.slices());
        Assertions.assertEquals(true, model.adaptiveBFrame());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        H265VideoLayer model =
            new H265VideoLayer()
                .withWidth("jguufzdm")
                .withHeight("qtfihwhbotzinga")
                .withLabel("pph")
                .withBitrate(694182696)
                .withMaxBitrate(856431804)
                .withBFrames(2038816187)
                .withFrameRate("hftqsxhqxujxukn")
                .withSlices(2084244471)
                .withAdaptiveBFrame(true);
        model = BinaryData.fromObject(model).toObject(H265VideoLayer.class);
        Assertions.assertEquals("jguufzdm", model.width());
        Assertions.assertEquals("qtfihwhbotzinga", model.height());
        Assertions.assertEquals("pph", model.label());
        Assertions.assertEquals(694182696, model.bitrate());
        Assertions.assertEquals(856431804, model.maxBitrate());
        Assertions.assertEquals(2038816187, model.bFrames());
        Assertions.assertEquals("hftqsxhqxujxukn", model.frameRate());
        Assertions.assertEquals(2084244471, model.slices());
        Assertions.assertEquals(true, model.adaptiveBFrame());
    }
}
