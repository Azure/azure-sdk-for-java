// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.mediaservices.MediaServicesManager;
import com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ContentKeyPoliciesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"policyId\":\"87d1a541-91d1-4829-b298-ce62a9ce916f\",\"created\":\"2021-06-21T12:18:33Z\",\"lastModified\":\"2021-10-02T12:53:04Z\",\"description\":\"ycxnmskw\",\"options\":[{\"policyOptionId\":\"697fd50b-a04d-4daf-8653-6a09ca314d2b\",\"name\":\"yslu\",\"configuration\":{\"@odata.type\":\"ContentKeyPolicyConfiguration\"},\"restriction\":{\"@odata.type\":\"ContentKeyPolicyRestriction\"}},{\"policyOptionId\":\"98490cbc-16ef-42f4-807c-7027c2636743\",\"name\":\"shhkvpedw\",\"configuration\":{\"@odata.type\":\"ContentKeyPolicyConfiguration\"},\"restriction\":{\"@odata.type\":\"ContentKeyPolicyRestriction\"}},{\"policyOptionId\":\"7600ac23-f0e4-49d1-97d4-1e0185b94a87\",\"name\":\"srhmpqvww\",\"configuration\":{\"@odata.type\":\"ContentKeyPolicyConfiguration\"},\"restriction\":{\"@odata.type\":\"ContentKeyPolicyRestriction\"}}]},\"id\":\"ondcbrw\",\"name\":\"muvqejosovyr\",\"type\":\"leaesi\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MediaServicesManager manager = MediaServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ContentKeyPolicy response = manager.contentKeyPolicies()
            .getWithResponse("zhzmtksjci", "digsxcdgl", "plkeuachtomflryt", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("ycxnmskw", response.description());
        Assertions.assertEquals("yslu", response.options().get(0).name());
    }
}
