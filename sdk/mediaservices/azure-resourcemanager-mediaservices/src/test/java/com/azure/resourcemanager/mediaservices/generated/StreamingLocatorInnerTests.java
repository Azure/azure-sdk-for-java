// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner;
import com.azure.resourcemanager.mediaservices.models.StreamingLocatorContentKey;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class StreamingLocatorInnerTests {
    @Test
    public void testDeserialize() {
        StreamingLocatorInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"assetName\":\"ulpqblylsyxkqjn\",\"created\":\"2021-02-22T12:01:41Z\",\"startTime\":\"2021-01-29T11:24:17Z\",\"endTime\":\"2021-03-30T12:46:09Z\",\"streamingPolicyName\":\"gxsds\",\"defaultContentKeyPolicyName\":\"e\",\"contentKeys\":[{\"type\":\"CommonEncryptionCenc\",\"labelReferenceInStreamingPolicy\":\"f\",\"value\":\"eyvpnqicvinvkj\",\"policyName\":\"dxrbuukzcle\",\"tracks\":[]},{\"type\":\"CommonEncryptionCbcs\",\"labelReferenceInStreamingPolicy\":\"wp\",\"value\":\"tzpofncckwyfzq\",\"policyName\":\"xxbuyq\",\"tracks\":[]}],\"alternativeMediaId\":\"feqztppriol\",\"filters\":[\"jaltolmnc\",\"sobqw\",\"sdbnwdcfhucqdpf\"]},\"id\":\"glsbjjc\",\"name\":\"nvxbvt\",\"type\":\"udutnco\"}")
                .toObject(StreamingLocatorInner.class);
        Assertions.assertEquals("ulpqblylsyxkqjn", model.assetName());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-29T11:24:17Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-30T12:46:09Z"), model.endTime());
        Assertions.assertEquals("gxsds", model.streamingPolicyName());
        Assertions.assertEquals("e", model.defaultContentKeyPolicyName());
        Assertions.assertEquals("f", model.contentKeys().get(0).labelReferenceInStreamingPolicy());
        Assertions.assertEquals("eyvpnqicvinvkj", model.contentKeys().get(0).value());
        Assertions.assertEquals("feqztppriol", model.alternativeMediaId());
        Assertions.assertEquals("jaltolmnc", model.filters().get(0));
    }

    @Test
    public void testSerialize() {
        StreamingLocatorInner model =
            new StreamingLocatorInner()
                .withAssetName("ulpqblylsyxkqjn")
                .withStartTime(OffsetDateTime.parse("2021-01-29T11:24:17Z"))
                .withEndTime(OffsetDateTime.parse("2021-03-30T12:46:09Z"))
                .withStreamingPolicyName("gxsds")
                .withDefaultContentKeyPolicyName("e")
                .withContentKeys(
                    Arrays
                        .asList(
                            new StreamingLocatorContentKey()
                                .withLabelReferenceInStreamingPolicy("f")
                                .withValue("eyvpnqicvinvkj"),
                            new StreamingLocatorContentKey()
                                .withLabelReferenceInStreamingPolicy("wp")
                                .withValue("tzpofncckwyfzq")))
                .withAlternativeMediaId("feqztppriol")
                .withFilters(Arrays.asList("jaltolmnc", "sobqw", "sdbnwdcfhucqdpf"));
        model = BinaryData.fromObject(model).toObject(StreamingLocatorInner.class);
        Assertions.assertEquals("ulpqblylsyxkqjn", model.assetName());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-29T11:24:17Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-30T12:46:09Z"), model.endTime());
        Assertions.assertEquals("gxsds", model.streamingPolicyName());
        Assertions.assertEquals("e", model.defaultContentKeyPolicyName());
        Assertions.assertEquals("f", model.contentKeys().get(0).labelReferenceInStreamingPolicy());
        Assertions.assertEquals("eyvpnqicvinvkj", model.contentKeys().get(0).value());
        Assertions.assertEquals("feqztppriol", model.alternativeMediaId());
        Assertions.assertEquals("jaltolmnc", model.filters().get(0));
    }
}
