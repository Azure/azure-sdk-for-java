// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.mediaservices.MediaServicesManager;
import com.azure.resourcemanager.mediaservices.models.PrivateEndpointConnectionListResult;
import com.azure.resourcemanager.mediaservices.models.PrivateEndpointServiceConnectionStatus;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PrivateEndpointConnectionsListWithResponseMockTests {
    @Test
    public void testListWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"privateEndpoint\":{\"id\":\"z\"},\"privateLinkServiceConnectionState\":{\"status\":\"Approved\",\"description\":\"nlqwzdvpiwhx\",\"actionsRequired\":\"zdtmaajquhuxylrj\"},\"provisioningState\":\"Succeeded\"},\"id\":\"ygjbmzyospspsh\",\"name\":\"kfkyjp\",\"type\":\"sp\"},{\"properties\":{\"privateEndpoint\":{\"id\":\"df\"},\"privateLinkServiceConnectionState\":{\"status\":\"Approved\",\"description\":\"gt\",\"actionsRequired\":\"yujtvczkcnyx\"},\"provisioningState\":\"Failed\"},\"id\":\"unjdx\",\"name\":\"glnkvxlxpagl\",\"type\":\"ivbgkcv\"},{\"properties\":{\"privateEndpoint\":{\"id\":\"vuqd\"},\"privateLinkServiceConnectionState\":{\"status\":\"Approved\",\"description\":\"niypfpubcpzg\",\"actionsRequired\":\"tivhjknidibgqjx\"},\"provisioningState\":\"Succeeded\"},\"id\":\"r\",\"name\":\"govfgpikqmhhaow\",\"type\":\"rmzvupo\"},{\"properties\":{\"privateEndpoint\":{\"id\":\"fuyd\"},\"privateLinkServiceConnectionState\":{\"status\":\"Pending\",\"description\":\"vxcnqmxqps\",\"actionsRequired\":\"kmvkhl\"},\"provisioningState\":\"Deleting\"},\"id\":\"hbemzq\",\"name\":\"zszuwiwtglxx\",\"type\":\"ljfp\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MediaServicesManager manager = MediaServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PrivateEndpointConnectionListResult response = manager.privateEndpointConnections()
            .listWithResponse("mr", "ddoui", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.APPROVED,
            response.value().get(0).privateLinkServiceConnectionState().status());
        Assertions.assertEquals("nlqwzdvpiwhx",
            response.value().get(0).privateLinkServiceConnectionState().description());
        Assertions.assertEquals("zdtmaajquhuxylrj",
            response.value().get(0).privateLinkServiceConnectionState().actionsRequired());
    }
}
