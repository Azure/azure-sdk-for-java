// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.models.H265Layer;
import com.azure.resourcemanager.mediaservices.models.H265VideoProfile;
import java.time.Duration;
import org.junit.jupiter.api.Assertions;

public final class H265LayerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        H265Layer model =
            BinaryData
                .fromString(
                    "{\"profile\":\"Main10\",\"level\":\"zudphqamvdkfw\",\"bufferWindow\":\"PT172H12M29S\",\"crf\":46.01294,\"referenceFrames\":1451582274,\"bitrate\":885107915,\"maxBitrate\":1353261360,\"bFrames\":1479821561,\"frameRate\":\"tnvyqiatkzwp\",\"slices\":180338782,\"adaptiveBFrame\":true,\"width\":\"jaesgvvsccya\",\"height\":\"uq\",\"label\":\"wygzlvdnkfxusem\"}")
                .toObject(H265Layer.class);
        Assertions.assertEquals("jaesgvvsccya", model.width());
        Assertions.assertEquals("uq", model.height());
        Assertions.assertEquals("wygzlvdnkfxusem", model.label());
        Assertions.assertEquals(885107915, model.bitrate());
        Assertions.assertEquals(1353261360, model.maxBitrate());
        Assertions.assertEquals(1479821561, model.bFrames());
        Assertions.assertEquals("tnvyqiatkzwp", model.frameRate());
        Assertions.assertEquals(180338782, model.slices());
        Assertions.assertEquals(true, model.adaptiveBFrame());
        Assertions.assertEquals(H265VideoProfile.MAIN10, model.profile());
        Assertions.assertEquals("zudphqamvdkfw", model.level());
        Assertions.assertEquals(Duration.parse("PT172H12M29S"), model.bufferWindow());
        Assertions.assertEquals(46.01294F, model.crf());
        Assertions.assertEquals(1451582274, model.referenceFrames());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        H265Layer model =
            new H265Layer()
                .withWidth("jaesgvvsccya")
                .withHeight("uq")
                .withLabel("wygzlvdnkfxusem")
                .withBitrate(885107915)
                .withMaxBitrate(1353261360)
                .withBFrames(1479821561)
                .withFrameRate("tnvyqiatkzwp")
                .withSlices(180338782)
                .withAdaptiveBFrame(true)
                .withProfile(H265VideoProfile.MAIN10)
                .withLevel("zudphqamvdkfw")
                .withBufferWindow(Duration.parse("PT172H12M29S"))
                .withCrf(46.01294F)
                .withReferenceFrames(1451582274);
        model = BinaryData.fromObject(model).toObject(H265Layer.class);
        Assertions.assertEquals("jaesgvvsccya", model.width());
        Assertions.assertEquals("uq", model.height());
        Assertions.assertEquals("wygzlvdnkfxusem", model.label());
        Assertions.assertEquals(885107915, model.bitrate());
        Assertions.assertEquals(1353261360, model.maxBitrate());
        Assertions.assertEquals(1479821561, model.bFrames());
        Assertions.assertEquals("tnvyqiatkzwp", model.frameRate());
        Assertions.assertEquals(180338782, model.slices());
        Assertions.assertEquals(true, model.adaptiveBFrame());
        Assertions.assertEquals(H265VideoProfile.MAIN10, model.profile());
        Assertions.assertEquals("zudphqamvdkfw", model.level());
        Assertions.assertEquals(Duration.parse("PT172H12M29S"), model.bufferWindow());
        Assertions.assertEquals(46.01294F, model.crf());
        Assertions.assertEquals(1451582274, model.referenceFrames());
    }
}
