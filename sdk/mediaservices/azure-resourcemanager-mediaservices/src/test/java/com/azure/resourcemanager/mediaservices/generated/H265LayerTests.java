// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.models.H265Layer;
import com.azure.resourcemanager.mediaservices.models.H265VideoProfile;
import java.time.Duration;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class H265LayerTests {
    @Test
    public void testDeserialize() {
        H265Layer model =
            BinaryData
                .fromString(
                    "{\"profile\":\"Main\",\"level\":\"qojpy\",\"bufferWindow\":\"PT159H30M37S\",\"crf\":71.06859,\"referenceFrames\":1334213198,\"bitrate\":1947341896,\"maxBitrate\":814510520,\"bFrames\":1598759472,\"frameRate\":\"sdymbrn\",\"slices\":44176896,\"adaptiveBFrame\":false,\"width\":\"rafwgckhocxvdf\",\"height\":\"wafqroud\",\"label\":\"pavehhr\"}")
                .toObject(H265Layer.class);
        Assertions.assertEquals("rafwgckhocxvdf", model.width());
        Assertions.assertEquals("wafqroud", model.height());
        Assertions.assertEquals("pavehhr", model.label());
        Assertions.assertEquals(1947341896, model.bitrate());
        Assertions.assertEquals(814510520, model.maxBitrate());
        Assertions.assertEquals(1598759472, model.bFrames());
        Assertions.assertEquals("sdymbrn", model.frameRate());
        Assertions.assertEquals(44176896, model.slices());
        Assertions.assertEquals(false, model.adaptiveBFrame());
        Assertions.assertEquals(H265VideoProfile.MAIN, model.profile());
        Assertions.assertEquals("qojpy", model.level());
        Assertions.assertEquals(Duration.parse("PT159H30M37S"), model.bufferWindow());
        Assertions.assertEquals(71.06859f, model.crf());
        Assertions.assertEquals(1334213198, model.referenceFrames());
    }

    @Test
    public void testSerialize() {
        H265Layer model =
            new H265Layer()
                .withWidth("rafwgckhocxvdf")
                .withHeight("wafqroud")
                .withLabel("pavehhr")
                .withBitrate(1947341896)
                .withMaxBitrate(814510520)
                .withBFrames(1598759472)
                .withFrameRate("sdymbrn")
                .withSlices(44176896)
                .withAdaptiveBFrame(false)
                .withProfile(H265VideoProfile.MAIN)
                .withLevel("qojpy")
                .withBufferWindow(Duration.parse("PT159H30M37S"))
                .withCrf(71.06859f)
                .withReferenceFrames(1334213198);
        model = BinaryData.fromObject(model).toObject(H265Layer.class);
        Assertions.assertEquals("rafwgckhocxvdf", model.width());
        Assertions.assertEquals("wafqroud", model.height());
        Assertions.assertEquals("pavehhr", model.label());
        Assertions.assertEquals(1947341896, model.bitrate());
        Assertions.assertEquals(814510520, model.maxBitrate());
        Assertions.assertEquals(1598759472, model.bFrames());
        Assertions.assertEquals("sdymbrn", model.frameRate());
        Assertions.assertEquals(44176896, model.slices());
        Assertions.assertEquals(false, model.adaptiveBFrame());
        Assertions.assertEquals(H265VideoProfile.MAIN, model.profile());
        Assertions.assertEquals("qojpy", model.level());
        Assertions.assertEquals(Duration.parse("PT159H30M37S"), model.bufferWindow());
        Assertions.assertEquals(71.06859f, model.crf());
        Assertions.assertEquals(1334213198, model.referenceFrames());
    }
}
