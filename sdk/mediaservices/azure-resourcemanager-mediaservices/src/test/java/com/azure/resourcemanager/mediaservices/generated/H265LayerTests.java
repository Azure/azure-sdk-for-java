// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.models.H265Layer;
import com.azure.resourcemanager.mediaservices.models.H265VideoProfile;
import java.time.Duration;
import org.junit.jupiter.api.Assertions;

public final class H265LayerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        H265Layer model = BinaryData.fromString(
            "{\"profile\":\"Auto\",\"level\":\"grttikteusqczk\",\"bufferWindow\":\"PT228H57M56S\",\"crf\":93.77124,\"referenceFrames\":148819128,\"bitrate\":655933358,\"maxBitrate\":609812419,\"bFrames\":472498299,\"frameRate\":\"mfblcqcuubg\",\"slices\":827453136,\"adaptiveBFrame\":false,\"width\":\"lmetttwgdslqxi\",\"height\":\"rmooizqse\",\"label\":\"xiutcx\"}")
            .toObject(H265Layer.class);
        Assertions.assertEquals("lmetttwgdslqxi", model.width());
        Assertions.assertEquals("rmooizqse", model.height());
        Assertions.assertEquals("xiutcx", model.label());
        Assertions.assertEquals(655933358, model.bitrate());
        Assertions.assertEquals(609812419, model.maxBitrate());
        Assertions.assertEquals(472498299, model.bFrames());
        Assertions.assertEquals("mfblcqcuubg", model.frameRate());
        Assertions.assertEquals(827453136, model.slices());
        Assertions.assertEquals(false, model.adaptiveBFrame());
        Assertions.assertEquals(H265VideoProfile.AUTO, model.profile());
        Assertions.assertEquals("grttikteusqczk", model.level());
        Assertions.assertEquals(Duration.parse("PT228H57M56S"), model.bufferWindow());
        Assertions.assertEquals(93.77124F, model.crf());
        Assertions.assertEquals(148819128, model.referenceFrames());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        H265Layer model = new H265Layer().withWidth("lmetttwgdslqxi")
            .withHeight("rmooizqse")
            .withLabel("xiutcx")
            .withBitrate(655933358)
            .withMaxBitrate(609812419)
            .withBFrames(472498299)
            .withFrameRate("mfblcqcuubg")
            .withSlices(827453136)
            .withAdaptiveBFrame(false)
            .withProfile(H265VideoProfile.AUTO)
            .withLevel("grttikteusqczk")
            .withBufferWindow(Duration.parse("PT228H57M56S"))
            .withCrf(93.77124F)
            .withReferenceFrames(148819128);
        model = BinaryData.fromObject(model).toObject(H265Layer.class);
        Assertions.assertEquals("lmetttwgdslqxi", model.width());
        Assertions.assertEquals("rmooizqse", model.height());
        Assertions.assertEquals("xiutcx", model.label());
        Assertions.assertEquals(655933358, model.bitrate());
        Assertions.assertEquals(609812419, model.maxBitrate());
        Assertions.assertEquals(472498299, model.bFrames());
        Assertions.assertEquals("mfblcqcuubg", model.frameRate());
        Assertions.assertEquals(827453136, model.slices());
        Assertions.assertEquals(false, model.adaptiveBFrame());
        Assertions.assertEquals(H265VideoProfile.AUTO, model.profile());
        Assertions.assertEquals("grttikteusqczk", model.level());
        Assertions.assertEquals(Duration.parse("PT228H57M56S"), model.bufferWindow());
        Assertions.assertEquals(93.77124F, model.crf());
        Assertions.assertEquals(148819128, model.referenceFrames());
    }
}
