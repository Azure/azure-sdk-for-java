// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.fluent.models.JobInner;
import com.azure.resourcemanager.mediaservices.models.JobInput;
import com.azure.resourcemanager.mediaservices.models.JobOutput;
import com.azure.resourcemanager.mediaservices.models.Priority;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class JobInnerTests {
    @Test
    public void testDeserialize() {
        JobInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"created\":\"2021-05-07T06:47:22Z\",\"state\":\"Finished\",\"description\":\"ewwwfbkrvrnsv\",\"input\":{\"@odata.type\":\"JobInput\"},\"lastModified\":\"2021-04-19T21:02:09Z\",\"outputs\":[{\"@odata.type\":\"JobOutput\",\"state\":\"Canceling\",\"progress\":1126029407,\"label\":\"fovasr\",\"startTime\":\"2021-11-24T07:21:32Z\",\"endTime\":\"2021-08-23T16:56:34Z\"},{\"@odata.type\":\"JobOutput\",\"state\":\"Processing\",\"progress\":309117028,\"label\":\"cgjbirxbp\",\"startTime\":\"2021-06-28T04:15:27Z\",\"endTime\":\"2021-08-04T15:53:59Z\"}],\"priority\":\"Low\",\"correlationData\":{\"sotftpvj\":\"w\"},\"startTime\":\"2021-04-19T06:05:29Z\",\"endTime\":\"2021-01-23T23:11:07Z\"},\"id\":\"zznfqqnvwpmqta\",\"name\":\"uoujmkcjhwqy\",\"type\":\"jrybnwjewgdrjer\"}")
                .toObject(JobInner.class);
        Assertions.assertEquals("ewwwfbkrvrnsv", model.description());
        Assertions.assertEquals("fovasr", model.outputs().get(0).label());
        Assertions.assertEquals(Priority.LOW, model.priority());
        Assertions.assertEquals("w", model.correlationData().get("sotftpvj"));
    }

    @Test
    public void testSerialize() {
        JobInner model =
            new JobInner()
                .withDescription("ewwwfbkrvrnsv")
                .withInput(new JobInput())
                .withOutputs(Arrays.asList(new JobOutput().withLabel("fovasr"), new JobOutput().withLabel("cgjbirxbp")))
                .withPriority(Priority.LOW)
                .withCorrelationData(mapOf("sotftpvj", "w"));
        model = BinaryData.fromObject(model).toObject(JobInner.class);
        Assertions.assertEquals("ewwwfbkrvrnsv", model.description());
        Assertions.assertEquals("fovasr", model.outputs().get(0).label());
        Assertions.assertEquals(Priority.LOW, model.priority());
        Assertions.assertEquals("w", model.correlationData().get("sotftpvj"));
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
