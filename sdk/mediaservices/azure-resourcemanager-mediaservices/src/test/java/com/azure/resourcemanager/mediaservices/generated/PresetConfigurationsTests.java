// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.models.Complexity;
import com.azure.resourcemanager.mediaservices.models.InterleaveOutput;
import com.azure.resourcemanager.mediaservices.models.PresetConfigurations;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class PresetConfigurationsTests {
    @Test
    public void testDeserialize() {
        PresetConfigurations model =
            BinaryData
                .fromString(
                    "{\"complexity\":\"Quality\",\"interleaveOutput\":\"InterleavedOutput\",\"keyFrameIntervalInSeconds\":36.347836,\"maxBitrateBps\":379885454,\"maxHeight\":1790981414,\"maxLayers\":694410488,\"minBitrateBps\":188552555,\"minHeight\":1596471966}")
                .toObject(PresetConfigurations.class);
        Assertions.assertEquals(Complexity.QUALITY, model.complexity());
        Assertions.assertEquals(InterleaveOutput.INTERLEAVED_OUTPUT, model.interleaveOutput());
        Assertions.assertEquals(36.347836f, model.keyFrameIntervalInSeconds());
        Assertions.assertEquals(379885454, model.maxBitrateBps());
        Assertions.assertEquals(1790981414, model.maxHeight());
        Assertions.assertEquals(694410488, model.maxLayers());
        Assertions.assertEquals(188552555, model.minBitrateBps());
        Assertions.assertEquals(1596471966, model.minHeight());
    }

    @Test
    public void testSerialize() {
        PresetConfigurations model =
            new PresetConfigurations()
                .withComplexity(Complexity.QUALITY)
                .withInterleaveOutput(InterleaveOutput.INTERLEAVED_OUTPUT)
                .withKeyFrameIntervalInSeconds(36.347836f)
                .withMaxBitrateBps(379885454)
                .withMaxHeight(1790981414)
                .withMaxLayers(694410488)
                .withMinBitrateBps(188552555)
                .withMinHeight(1596471966);
        model = BinaryData.fromObject(model).toObject(PresetConfigurations.class);
        Assertions.assertEquals(Complexity.QUALITY, model.complexity());
        Assertions.assertEquals(InterleaveOutput.INTERLEAVED_OUTPUT, model.interleaveOutput());
        Assertions.assertEquals(36.347836f, model.keyFrameIntervalInSeconds());
        Assertions.assertEquals(379885454, model.maxBitrateBps());
        Assertions.assertEquals(1790981414, model.maxHeight());
        Assertions.assertEquals(694410488, model.maxLayers());
        Assertions.assertEquals(188552555, model.minBitrateBps());
        Assertions.assertEquals(1596471966, model.minHeight());
    }
}
