// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.fluent.models.StorageEncryptedAssetDecryptionDataInner;
import com.azure.resourcemanager.mediaservices.models.AssetFileEncryptionMetadata;
import java.util.Arrays;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;

public final class StorageEncryptedAssetDecryptionDataInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        StorageEncryptedAssetDecryptionDataInner model =
            BinaryData
                .fromString(
                    "{\"assetFileEncryptionMetadata\":[{\"initializationVector\":\"pvecxgodeb\",\"assetFileName\":\"kk\",\"assetFileId\":\"b3372a8d-4224-4070-a40b-59757b9baf5e\"},{\"initializationVector\":\"mpukgriw\",\"assetFileName\":\"zlfbxzpuzycispnq\",\"assetFileId\":\"1f2ae958-3a71-481a-a46b-6f506b2cbb0c\"}]}")
                .toObject(StorageEncryptedAssetDecryptionDataInner.class);
        Assertions.assertEquals("pvecxgodeb", model.assetFileEncryptionMetadata().get(0).initializationVector());
        Assertions.assertEquals("kk", model.assetFileEncryptionMetadata().get(0).assetFileName());
        Assertions
            .assertEquals(
                UUID.fromString("b3372a8d-4224-4070-a40b-59757b9baf5e"),
                model.assetFileEncryptionMetadata().get(0).assetFileId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        StorageEncryptedAssetDecryptionDataInner model =
            new StorageEncryptedAssetDecryptionDataInner()
                .withAssetFileEncryptionMetadata(
                    Arrays
                        .asList(
                            new AssetFileEncryptionMetadata()
                                .withInitializationVector("pvecxgodeb")
                                .withAssetFileName("kk")
                                .withAssetFileId(UUID.fromString("b3372a8d-4224-4070-a40b-59757b9baf5e")),
                            new AssetFileEncryptionMetadata()
                                .withInitializationVector("mpukgriw")
                                .withAssetFileName("zlfbxzpuzycispnq")
                                .withAssetFileId(UUID.fromString("1f2ae958-3a71-481a-a46b-6f506b2cbb0c"))));
        model = BinaryData.fromObject(model).toObject(StorageEncryptedAssetDecryptionDataInner.class);
        Assertions.assertEquals("pvecxgodeb", model.assetFileEncryptionMetadata().get(0).initializationVector());
        Assertions.assertEquals("kk", model.assetFileEncryptionMetadata().get(0).assetFileName());
        Assertions
            .assertEquals(
                UUID.fromString("b3372a8d-4224-4070-a40b-59757b9baf5e"),
                model.assetFileEncryptionMetadata().get(0).assetFileId());
    }
}
