// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.models.LiveEventInputTrackSelection;
import com.azure.resourcemanager.mediaservices.models.LiveEventOutputTranscriptionTrack;
import com.azure.resourcemanager.mediaservices.models.LiveEventTranscription;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class LiveEventTranscriptionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LiveEventTranscription model = BinaryData.fromString(
            "{\"language\":\"irgzp\",\"inputTrackSelection\":[{\"property\":\"zszrnwoiindfpw\",\"operation\":\"ylwbtlhflsjcdhsz\",\"value\":\"vfbgofeljagrqmqh\"},{\"property\":\"vriiio\",\"operation\":\"al\",\"value\":\"fk\"}],\"outputTranscriptionTrack\":{\"trackName\":\"vsexsowuelu\"}}")
            .toObject(LiveEventTranscription.class);
        Assertions.assertEquals("irgzp", model.language());
        Assertions.assertEquals("zszrnwoiindfpw", model.inputTrackSelection().get(0).property());
        Assertions.assertEquals("ylwbtlhflsjcdhsz", model.inputTrackSelection().get(0).operation());
        Assertions.assertEquals("vfbgofeljagrqmqh", model.inputTrackSelection().get(0).value());
        Assertions.assertEquals("vsexsowuelu", model.outputTranscriptionTrack().trackName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LiveEventTranscription model = new LiveEventTranscription().withLanguage("irgzp")
            .withInputTrackSelection(Arrays.asList(
                new LiveEventInputTrackSelection().withProperty("zszrnwoiindfpw")
                    .withOperation("ylwbtlhflsjcdhsz")
                    .withValue("vfbgofeljagrqmqh"),
                new LiveEventInputTrackSelection().withProperty("vriiio").withOperation("al").withValue("fk")))
            .withOutputTranscriptionTrack(new LiveEventOutputTranscriptionTrack().withTrackName("vsexsowuelu"));
        model = BinaryData.fromObject(model).toObject(LiveEventTranscription.class);
        Assertions.assertEquals("irgzp", model.language());
        Assertions.assertEquals("zszrnwoiindfpw", model.inputTrackSelection().get(0).property());
        Assertions.assertEquals("ylwbtlhflsjcdhsz", model.inputTrackSelection().get(0).operation());
        Assertions.assertEquals("vfbgofeljagrqmqh", model.inputTrackSelection().get(0).value());
        Assertions.assertEquals("vsexsowuelu", model.outputTranscriptionTrack().trackName());
    }
}
