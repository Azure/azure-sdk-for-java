// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.models.IpAccessControl;
import com.azure.resourcemanager.mediaservices.models.IpRange;
import com.azure.resourcemanager.mediaservices.models.LiveEventPreviewAccessControl;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class LiveEventPreviewAccessControlTests {
    @Test
    public void testDeserialize() {
        LiveEventPreviewAccessControl model =
            BinaryData
                .fromString(
                    "{\"ip\":{\"allow\":[{\"name\":\"wkpnbsaz\",\"address\":\"joqkagfhsxt\",\"subnetPrefixLength\":1479780432}]}}")
                .toObject(LiveEventPreviewAccessControl.class);
        Assertions.assertEquals("wkpnbsaz", model.ip().allow().get(0).name());
        Assertions.assertEquals("joqkagfhsxt", model.ip().allow().get(0).address());
        Assertions.assertEquals(1479780432, model.ip().allow().get(0).subnetPrefixLength());
    }

    @Test
    public void testSerialize() {
        LiveEventPreviewAccessControl model =
            new LiveEventPreviewAccessControl()
                .withIp(
                    new IpAccessControl()
                        .withAllow(
                            Arrays
                                .asList(
                                    new IpRange()
                                        .withName("wkpnbsaz")
                                        .withAddress("joqkagfhsxt")
                                        .withSubnetPrefixLength(1479780432))));
        model = BinaryData.fromObject(model).toObject(LiveEventPreviewAccessControl.class);
        Assertions.assertEquals("wkpnbsaz", model.ip().allow().get(0).name());
        Assertions.assertEquals("joqkagfhsxt", model.ip().allow().get(0).address());
        Assertions.assertEquals(1479780432, model.ip().allow().get(0).subnetPrefixLength());
    }
}
