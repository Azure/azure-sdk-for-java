// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.fluent.models.TransformProperties;
import com.azure.resourcemanager.mediaservices.models.OnErrorType;
import com.azure.resourcemanager.mediaservices.models.Preset;
import com.azure.resourcemanager.mediaservices.models.Priority;
import com.azure.resourcemanager.mediaservices.models.TransformOutput;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class TransformPropertiesTests {
    @Test
    public void testDeserialize() {
        TransformProperties model =
            BinaryData
                .fromString(
                    "{\"created\":\"2021-09-01T00:32:36Z\",\"description\":\"oizpostmgrcfbun\",\"lastModified\":\"2021-04-30T20:29:14Z\",\"outputs\":[{\"onError\":\"StopProcessingJob\",\"relativePriority\":\"Normal\",\"preset\":{\"@odata.type\":\"Preset\"}},{\"onError\":\"ContinueJob\",\"relativePriority\":\"Low\",\"preset\":{\"@odata.type\":\"Preset\"}},{\"onError\":\"ContinueJob\",\"relativePriority\":\"Low\",\"preset\":{\"@odata.type\":\"Preset\"}}]}")
                .toObject(TransformProperties.class);
        Assertions.assertEquals("oizpostmgrcfbun", model.description());
        Assertions.assertEquals(OnErrorType.STOP_PROCESSING_JOB, model.outputs().get(0).onError());
        Assertions.assertEquals(Priority.NORMAL, model.outputs().get(0).relativePriority());
    }

    @Test
    public void testSerialize() {
        TransformProperties model =
            new TransformProperties()
                .withDescription("oizpostmgrcfbun")
                .withOutputs(
                    Arrays
                        .asList(
                            new TransformOutput()
                                .withOnError(OnErrorType.STOP_PROCESSING_JOB)
                                .withRelativePriority(Priority.NORMAL)
                                .withPreset(new Preset()),
                            new TransformOutput()
                                .withOnError(OnErrorType.CONTINUE_JOB)
                                .withRelativePriority(Priority.LOW)
                                .withPreset(new Preset()),
                            new TransformOutput()
                                .withOnError(OnErrorType.CONTINUE_JOB)
                                .withRelativePriority(Priority.LOW)
                                .withPreset(new Preset())));
        model = BinaryData.fromObject(model).toObject(TransformProperties.class);
        Assertions.assertEquals("oizpostmgrcfbun", model.description());
        Assertions.assertEquals(OnErrorType.STOP_PROCESSING_JOB, model.outputs().get(0).onError());
        Assertions.assertEquals(Priority.NORMAL, model.outputs().get(0).relativePriority());
    }
}
