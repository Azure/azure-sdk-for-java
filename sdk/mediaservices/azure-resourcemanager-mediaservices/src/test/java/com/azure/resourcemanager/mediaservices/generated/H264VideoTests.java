// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.models.EntropyMode;
import com.azure.resourcemanager.mediaservices.models.H264Complexity;
import com.azure.resourcemanager.mediaservices.models.H264Layer;
import com.azure.resourcemanager.mediaservices.models.H264RateControlMode;
import com.azure.resourcemanager.mediaservices.models.H264Video;
import com.azure.resourcemanager.mediaservices.models.H264VideoProfile;
import com.azure.resourcemanager.mediaservices.models.StretchMode;
import com.azure.resourcemanager.mediaservices.models.VideoSyncMode;
import java.time.Duration;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class H264VideoTests {
    @Test
    public void testDeserialize() {
        H264Video model =
            BinaryData
                .fromString(
                    "{\"@odata.type\":\"#Microsoft.Media.H264Video\",\"complexity\":\"Balanced\",\"layers\":[{\"profile\":\"Baseline\",\"level\":\"wqzdzgtilaxhnfhq\",\"bufferWindow\":\"PT74H39M12S\",\"crf\":21.078909,\"referenceFrames\":2065118929,\"entropyMode\":\"Cabac\",\"bitrate\":312575916,\"maxBitrate\":178963664,\"bFrames\":1231243109,\"frameRate\":\"un\",\"slices\":1975908496,\"adaptiveBFrame\":true,\"width\":\"ikvcpwp\",\"height\":\"lrcivtsoxfrke\",\"label\":\"pmyyefrpmpdnqq\"},{\"profile\":\"Main\",\"level\":\"ao\",\"bufferWindow\":\"PT170H39M23S\",\"crf\":75.03729,\"referenceFrames\":27536498,\"entropyMode\":\"Cabac\",\"bitrate\":863722507,\"maxBitrate\":1464484826,\"bFrames\":1371498334,\"frameRate\":\"megni\",\"slices\":1313848861,\"adaptiveBFrame\":false,\"width\":\"zyqdrfegcealzx\",\"height\":\"cansymoyqhlwigd\",\"label\":\"bkbxgomfa\"},{\"profile\":\"Main\",\"level\":\"sqvdaeyygux\",\"bufferWindow\":\"PT58H2M52S\",\"crf\":76.07596,\"referenceFrames\":1927207410,\"entropyMode\":\"Cavlc\",\"bitrate\":1283068075,\"maxBitrate\":879392983,\"bFrames\":2095566189,\"frameRate\":\"sidxasicdd\",\"slices\":83141311,\"adaptiveBFrame\":true,\"width\":\"gfmo\",\"height\":\"ah\",\"label\":\"gat\"}],\"rateControlMode\":\"ABR\",\"sceneChangeDetection\":false,\"keyFrameInterval\":\"PT100H20M3S\",\"stretchMode\":\"AutoFit\",\"syncMode\":\"Auto\",\"label\":\"kzyb\"}")
                .toObject(H264Video.class);
        Assertions.assertEquals("kzyb", model.label());
        Assertions.assertEquals(Duration.parse("PT100H20M3S"), model.keyFrameInterval());
        Assertions.assertEquals(StretchMode.AUTO_FIT, model.stretchMode());
        Assertions.assertEquals(VideoSyncMode.AUTO, model.syncMode());
        Assertions.assertEquals(H264Complexity.BALANCED, model.complexity());
        Assertions.assertEquals("ikvcpwp", model.layers().get(0).width());
        Assertions.assertEquals("lrcivtsoxfrke", model.layers().get(0).height());
        Assertions.assertEquals("pmyyefrpmpdnqq", model.layers().get(0).label());
        Assertions.assertEquals(312575916, model.layers().get(0).bitrate());
        Assertions.assertEquals(178963664, model.layers().get(0).maxBitrate());
        Assertions.assertEquals(1231243109, model.layers().get(0).bFrames());
        Assertions.assertEquals("un", model.layers().get(0).frameRate());
        Assertions.assertEquals(1975908496, model.layers().get(0).slices());
        Assertions.assertEquals(true, model.layers().get(0).adaptiveBFrame());
        Assertions.assertEquals(H264VideoProfile.BASELINE, model.layers().get(0).profile());
        Assertions.assertEquals("wqzdzgtilaxhnfhq", model.layers().get(0).level());
        Assertions.assertEquals(Duration.parse("PT74H39M12S"), model.layers().get(0).bufferWindow());
        Assertions.assertEquals(21.078909f, model.layers().get(0).crf());
        Assertions.assertEquals(2065118929, model.layers().get(0).referenceFrames());
        Assertions.assertEquals(EntropyMode.CABAC, model.layers().get(0).entropyMode());
        Assertions.assertEquals(H264RateControlMode.ABR, model.rateControlMode());
        Assertions.assertEquals(false, model.sceneChangeDetection());
    }

    @Test
    public void testSerialize() {
        H264Video model =
            new H264Video()
                .withLabel("kzyb")
                .withKeyFrameInterval(Duration.parse("PT100H20M3S"))
                .withStretchMode(StretchMode.AUTO_FIT)
                .withSyncMode(VideoSyncMode.AUTO)
                .withComplexity(H264Complexity.BALANCED)
                .withLayers(
                    Arrays
                        .asList(
                            new H264Layer()
                                .withWidth("ikvcpwp")
                                .withHeight("lrcivtsoxfrke")
                                .withLabel("pmyyefrpmpdnqq")
                                .withBitrate(312575916)
                                .withMaxBitrate(178963664)
                                .withBFrames(1231243109)
                                .withFrameRate("un")
                                .withSlices(1975908496)
                                .withAdaptiveBFrame(true)
                                .withProfile(H264VideoProfile.BASELINE)
                                .withLevel("wqzdzgtilaxhnfhq")
                                .withBufferWindow(Duration.parse("PT74H39M12S"))
                                .withCrf(21.078909f)
                                .withReferenceFrames(2065118929)
                                .withEntropyMode(EntropyMode.CABAC),
                            new H264Layer()
                                .withWidth("zyqdrfegcealzx")
                                .withHeight("cansymoyqhlwigd")
                                .withLabel("bkbxgomfa")
                                .withBitrate(863722507)
                                .withMaxBitrate(1464484826)
                                .withBFrames(1371498334)
                                .withFrameRate("megni")
                                .withSlices(1313848861)
                                .withAdaptiveBFrame(false)
                                .withProfile(H264VideoProfile.MAIN)
                                .withLevel("ao")
                                .withBufferWindow(Duration.parse("PT170H39M23S"))
                                .withCrf(75.03729f)
                                .withReferenceFrames(27536498)
                                .withEntropyMode(EntropyMode.CABAC),
                            new H264Layer()
                                .withWidth("gfmo")
                                .withHeight("ah")
                                .withLabel("gat")
                                .withBitrate(1283068075)
                                .withMaxBitrate(879392983)
                                .withBFrames(2095566189)
                                .withFrameRate("sidxasicdd")
                                .withSlices(83141311)
                                .withAdaptiveBFrame(true)
                                .withProfile(H264VideoProfile.MAIN)
                                .withLevel("sqvdaeyygux")
                                .withBufferWindow(Duration.parse("PT58H2M52S"))
                                .withCrf(76.07596f)
                                .withReferenceFrames(1927207410)
                                .withEntropyMode(EntropyMode.CAVLC)))
                .withRateControlMode(H264RateControlMode.ABR)
                .withSceneChangeDetection(false);
        model = BinaryData.fromObject(model).toObject(H264Video.class);
        Assertions.assertEquals("kzyb", model.label());
        Assertions.assertEquals(Duration.parse("PT100H20M3S"), model.keyFrameInterval());
        Assertions.assertEquals(StretchMode.AUTO_FIT, model.stretchMode());
        Assertions.assertEquals(VideoSyncMode.AUTO, model.syncMode());
        Assertions.assertEquals(H264Complexity.BALANCED, model.complexity());
        Assertions.assertEquals("ikvcpwp", model.layers().get(0).width());
        Assertions.assertEquals("lrcivtsoxfrke", model.layers().get(0).height());
        Assertions.assertEquals("pmyyefrpmpdnqq", model.layers().get(0).label());
        Assertions.assertEquals(312575916, model.layers().get(0).bitrate());
        Assertions.assertEquals(178963664, model.layers().get(0).maxBitrate());
        Assertions.assertEquals(1231243109, model.layers().get(0).bFrames());
        Assertions.assertEquals("un", model.layers().get(0).frameRate());
        Assertions.assertEquals(1975908496, model.layers().get(0).slices());
        Assertions.assertEquals(true, model.layers().get(0).adaptiveBFrame());
        Assertions.assertEquals(H264VideoProfile.BASELINE, model.layers().get(0).profile());
        Assertions.assertEquals("wqzdzgtilaxhnfhq", model.layers().get(0).level());
        Assertions.assertEquals(Duration.parse("PT74H39M12S"), model.layers().get(0).bufferWindow());
        Assertions.assertEquals(21.078909f, model.layers().get(0).crf());
        Assertions.assertEquals(2065118929, model.layers().get(0).referenceFrames());
        Assertions.assertEquals(EntropyMode.CABAC, model.layers().get(0).entropyMode());
        Assertions.assertEquals(H264RateControlMode.ABR, model.rateControlMode());
        Assertions.assertEquals(false, model.sceneChangeDetection());
    }
}
