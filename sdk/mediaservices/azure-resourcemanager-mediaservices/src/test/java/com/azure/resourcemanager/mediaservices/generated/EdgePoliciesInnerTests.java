// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.fluent.models.EdgePoliciesInner;
import com.azure.resourcemanager.mediaservices.models.EdgeUsageDataCollectionPolicy;
import com.azure.resourcemanager.mediaservices.models.EdgeUsageDataEventHub;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class EdgePoliciesInnerTests {
    @Test
    public void testDeserialize() {
        EdgePoliciesInner model =
            BinaryData
                .fromString(
                    "{\"usageDataCollectionPolicy\":{\"dataCollectionFrequency\":\"hqyudxorrqnbpoc\",\"dataReportingFrequency\":\"yifqrvkdvjsllrmv\",\"maxAllowedUnreportedUsageDuration\":\"f\",\"eventHubDetails\":{\"name\":\"kpnpulexxbczwtr\",\"namespace\":\"iqzbq\",\"token\":\"sovmyokacspkwl\"}}}")
                .toObject(EdgePoliciesInner.class);
        Assertions.assertEquals("hqyudxorrqnbpoc", model.usageDataCollectionPolicy().dataCollectionFrequency());
        Assertions.assertEquals("yifqrvkdvjsllrmv", model.usageDataCollectionPolicy().dataReportingFrequency());
        Assertions.assertEquals("f", model.usageDataCollectionPolicy().maxAllowedUnreportedUsageDuration());
        Assertions.assertEquals("kpnpulexxbczwtr", model.usageDataCollectionPolicy().eventHubDetails().name());
        Assertions.assertEquals("iqzbq", model.usageDataCollectionPolicy().eventHubDetails().namespace());
        Assertions.assertEquals("sovmyokacspkwl", model.usageDataCollectionPolicy().eventHubDetails().token());
    }

    @Test
    public void testSerialize() {
        EdgePoliciesInner model =
            new EdgePoliciesInner()
                .withUsageDataCollectionPolicy(
                    new EdgeUsageDataCollectionPolicy()
                        .withDataCollectionFrequency("hqyudxorrqnbpoc")
                        .withDataReportingFrequency("yifqrvkdvjsllrmv")
                        .withMaxAllowedUnreportedUsageDuration("f")
                        .withEventHubDetails(
                            new EdgeUsageDataEventHub()
                                .withName("kpnpulexxbczwtr")
                                .withNamespace("iqzbq")
                                .withToken("sovmyokacspkwl")));
        model = BinaryData.fromObject(model).toObject(EdgePoliciesInner.class);
        Assertions.assertEquals("hqyudxorrqnbpoc", model.usageDataCollectionPolicy().dataCollectionFrequency());
        Assertions.assertEquals("yifqrvkdvjsllrmv", model.usageDataCollectionPolicy().dataReportingFrequency());
        Assertions.assertEquals("f", model.usageDataCollectionPolicy().maxAllowedUnreportedUsageDuration());
        Assertions.assertEquals("kpnpulexxbczwtr", model.usageDataCollectionPolicy().eventHubDetails().name());
        Assertions.assertEquals("iqzbq", model.usageDataCollectionPolicy().eventHubDetails().namespace());
        Assertions.assertEquals("sovmyokacspkwl", model.usageDataCollectionPolicy().eventHubDetails().token());
    }
}
