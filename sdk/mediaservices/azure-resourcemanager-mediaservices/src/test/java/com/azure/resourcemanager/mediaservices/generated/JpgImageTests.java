// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.models.JpgImage;
import com.azure.resourcemanager.mediaservices.models.JpgLayer;
import com.azure.resourcemanager.mediaservices.models.StretchMode;
import com.azure.resourcemanager.mediaservices.models.VideoSyncMode;
import java.time.Duration;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class JpgImageTests {
    @Test
    public void testDeserialize() {
        JpgImage model =
            BinaryData
                .fromString(
                    "{\"@odata.type\":\"#Microsoft.Media.JpgImage\",\"layers\":[{\"quality\":371006756,\"width\":\"ksyxkyxvxevblbje\",\"height\":\"ljlageuaulxu\",\"label\":\"mjbnk\"}],\"spriteColumn\":1476296254,\"start\":\"ynenlsvxeizz\",\"step\":\"klnsrmffey\",\"range\":\"ckt\",\"keyFrameInterval\":\"PT153H51M18S\",\"stretchMode\":\"AutoFit\",\"syncMode\":\"Vfr\",\"label\":\"eammxqiekkkzddr\"}")
                .toObject(JpgImage.class);
        Assertions.assertEquals("eammxqiekkkzddr", model.label());
        Assertions.assertEquals(Duration.parse("PT153H51M18S"), model.keyFrameInterval());
        Assertions.assertEquals(StretchMode.AUTO_FIT, model.stretchMode());
        Assertions.assertEquals(VideoSyncMode.VFR, model.syncMode());
        Assertions.assertEquals("ynenlsvxeizz", model.start());
        Assertions.assertEquals("klnsrmffey", model.step());
        Assertions.assertEquals("ckt", model.range());
        Assertions.assertEquals("ksyxkyxvxevblbje", model.layers().get(0).width());
        Assertions.assertEquals("ljlageuaulxu", model.layers().get(0).height());
        Assertions.assertEquals("mjbnk", model.layers().get(0).label());
        Assertions.assertEquals(371006756, model.layers().get(0).quality());
        Assertions.assertEquals(1476296254, model.spriteColumn());
    }

    @Test
    public void testSerialize() {
        JpgImage model =
            new JpgImage()
                .withLabel("eammxqiekkkzddr")
                .withKeyFrameInterval(Duration.parse("PT153H51M18S"))
                .withStretchMode(StretchMode.AUTO_FIT)
                .withSyncMode(VideoSyncMode.VFR)
                .withStart("ynenlsvxeizz")
                .withStep("klnsrmffey")
                .withRange("ckt")
                .withLayers(
                    Arrays
                        .asList(
                            new JpgLayer()
                                .withWidth("ksyxkyxvxevblbje")
                                .withHeight("ljlageuaulxu")
                                .withLabel("mjbnk")
                                .withQuality(371006756)))
                .withSpriteColumn(1476296254);
        model = BinaryData.fromObject(model).toObject(JpgImage.class);
        Assertions.assertEquals("eammxqiekkkzddr", model.label());
        Assertions.assertEquals(Duration.parse("PT153H51M18S"), model.keyFrameInterval());
        Assertions.assertEquals(StretchMode.AUTO_FIT, model.stretchMode());
        Assertions.assertEquals(VideoSyncMode.VFR, model.syncMode());
        Assertions.assertEquals("ynenlsvxeizz", model.start());
        Assertions.assertEquals("klnsrmffey", model.step());
        Assertions.assertEquals("ckt", model.range());
        Assertions.assertEquals("ksyxkyxvxevblbje", model.layers().get(0).width());
        Assertions.assertEquals("ljlageuaulxu", model.layers().get(0).height());
        Assertions.assertEquals("mjbnk", model.layers().get(0).label());
        Assertions.assertEquals(371006756, model.layers().get(0).quality());
        Assertions.assertEquals(1476296254, model.spriteColumn());
    }
}
