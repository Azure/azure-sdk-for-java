// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.mediaservices.MediaServicesManager;
import com.azure.resourcemanager.mediaservices.models.AssetFilter;
import com.azure.resourcemanager.mediaservices.models.FilterTrackPropertyCompareOperation;
import com.azure.resourcemanager.mediaservices.models.FilterTrackPropertyType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AssetFiltersGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"presentationTimeRange\":{\"startTimestamp\":7884550482595755486,\"endTimestamp\":1123988859235353647,\"presentationWindowDuration\":265467730720390113,\"liveBackoffDuration\":1696391097538530481,\"timescale\":3418796905686627898,\"forceEndTimestamp\":true},\"firstQuality\":{\"bitrate\":194184786},\"tracks\":[{\"trackSelections\":[{\"property\":\"FourCC\",\"value\":\"jhbzxliohrdddtf\",\"operation\":\"Equal\"}]},{\"trackSelections\":[{\"property\":\"Name\",\"value\":\"awpcbbnzqcykn\",\"operation\":\"Equal\"},{\"property\":\"Type\",\"value\":\"ofyuicd\",\"operation\":\"Equal\"},{\"property\":\"Type\",\"value\":\"dyb\",\"operation\":\"NotEqual\"},{\"property\":\"Unknown\",\"value\":\"bdvibidmhmwffpl\",\"operation\":\"Equal\"}]},{\"trackSelections\":[{\"property\":\"Name\",\"value\":\"apckccrrvw\",\"operation\":\"Equal\"}]},{\"trackSelections\":[{\"property\":\"Name\",\"value\":\"oy\",\"operation\":\"NotEqual\"},{\"property\":\"Name\",\"value\":\"phaimmoi\",\"operation\":\"NotEqual\"}]}]},\"id\":\"boshbragapyyrmfs\",\"name\":\"bpav\",\"type\":\"opfppdbwnupgah\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MediaServicesManager manager = MediaServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        AssetFilter response = manager.assetFilters()
            .getWithResponse("voxczytpr", "nwvroevytlyokrr", "o", "uxvnsasbcrymodi", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(7884550482595755486L, response.presentationTimeRange().startTimestamp());
        Assertions.assertEquals(1123988859235353647L, response.presentationTimeRange().endTimestamp());
        Assertions.assertEquals(265467730720390113L, response.presentationTimeRange().presentationWindowDuration());
        Assertions.assertEquals(1696391097538530481L, response.presentationTimeRange().liveBackoffDuration());
        Assertions.assertEquals(3418796905686627898L, response.presentationTimeRange().timescale());
        Assertions.assertEquals(true, response.presentationTimeRange().forceEndTimestamp());
        Assertions.assertEquals(194184786, response.firstQuality().bitrate());
        Assertions.assertEquals(FilterTrackPropertyType.FOUR_CC,
            response.tracks().get(0).trackSelections().get(0).property());
        Assertions.assertEquals("jhbzxliohrdddtf", response.tracks().get(0).trackSelections().get(0).value());
        Assertions.assertEquals(FilterTrackPropertyCompareOperation.EQUAL,
            response.tracks().get(0).trackSelections().get(0).operation());
    }
}
