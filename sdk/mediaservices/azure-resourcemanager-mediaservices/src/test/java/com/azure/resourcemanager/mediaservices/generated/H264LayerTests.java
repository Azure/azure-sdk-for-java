// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.models.EntropyMode;
import com.azure.resourcemanager.mediaservices.models.H264Layer;
import com.azure.resourcemanager.mediaservices.models.H264VideoProfile;
import java.time.Duration;
import org.junit.jupiter.api.Assertions;

public final class H264LayerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        H264Layer model = BinaryData.fromString(
            "{\"profile\":\"High444\",\"level\":\"nenlsvxeizzg\",\"bufferWindow\":\"PT135H15M24S\",\"crf\":98.58561,\"referenceFrames\":980138235,\"entropyMode\":\"Cavlc\",\"bitrate\":1900773666,\"maxBitrate\":1831461160,\"bFrames\":625773403,\"frameRate\":\"tpiymerteea\",\"slices\":1192403212,\"adaptiveBFrame\":true,\"width\":\"kk\",\"height\":\"ddrtkgdojb\",\"label\":\"vavrefdees\"}")
            .toObject(H264Layer.class);
        Assertions.assertEquals("kk", model.width());
        Assertions.assertEquals("ddrtkgdojb", model.height());
        Assertions.assertEquals("vavrefdees", model.label());
        Assertions.assertEquals(1900773666, model.bitrate());
        Assertions.assertEquals(1831461160, model.maxBitrate());
        Assertions.assertEquals(625773403, model.bFrames());
        Assertions.assertEquals("tpiymerteea", model.frameRate());
        Assertions.assertEquals(1192403212, model.slices());
        Assertions.assertEquals(true, model.adaptiveBFrame());
        Assertions.assertEquals(H264VideoProfile.HIGH444, model.profile());
        Assertions.assertEquals("nenlsvxeizzg", model.level());
        Assertions.assertEquals(Duration.parse("PT135H15M24S"), model.bufferWindow());
        Assertions.assertEquals(98.58561F, model.crf());
        Assertions.assertEquals(980138235, model.referenceFrames());
        Assertions.assertEquals(EntropyMode.CAVLC, model.entropyMode());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        H264Layer model = new H264Layer().withWidth("kk")
            .withHeight("ddrtkgdojb")
            .withLabel("vavrefdees")
            .withBitrate(1900773666)
            .withMaxBitrate(1831461160)
            .withBFrames(625773403)
            .withFrameRate("tpiymerteea")
            .withSlices(1192403212)
            .withAdaptiveBFrame(true)
            .withProfile(H264VideoProfile.HIGH444)
            .withLevel("nenlsvxeizzg")
            .withBufferWindow(Duration.parse("PT135H15M24S"))
            .withCrf(98.58561F)
            .withReferenceFrames(980138235)
            .withEntropyMode(EntropyMode.CAVLC);
        model = BinaryData.fromObject(model).toObject(H264Layer.class);
        Assertions.assertEquals("kk", model.width());
        Assertions.assertEquals("ddrtkgdojb", model.height());
        Assertions.assertEquals("vavrefdees", model.label());
        Assertions.assertEquals(1900773666, model.bitrate());
        Assertions.assertEquals(1831461160, model.maxBitrate());
        Assertions.assertEquals(625773403, model.bFrames());
        Assertions.assertEquals("tpiymerteea", model.frameRate());
        Assertions.assertEquals(1192403212, model.slices());
        Assertions.assertEquals(true, model.adaptiveBFrame());
        Assertions.assertEquals(H264VideoProfile.HIGH444, model.profile());
        Assertions.assertEquals("nenlsvxeizzg", model.level());
        Assertions.assertEquals(Duration.parse("PT135H15M24S"), model.bufferWindow());
        Assertions.assertEquals(98.58561F, model.crf());
        Assertions.assertEquals(980138235, model.referenceFrames());
        Assertions.assertEquals(EntropyMode.CAVLC, model.entropyMode());
    }
}
