// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.models.EntropyMode;
import com.azure.resourcemanager.mediaservices.models.H264Layer;
import com.azure.resourcemanager.mediaservices.models.H264VideoProfile;
import java.time.Duration;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class H264LayerTests {
    @Test
    public void testDeserialize() {
        H264Layer model =
            BinaryData
                .fromString(
                    "{\"profile\":\"High\",\"level\":\"dxgketwzhhzjhfj\",\"bufferWindow\":\"PT104H42M37S\",\"crf\":29.420763,\"referenceFrames\":1386736873,\"entropyMode\":\"Cabac\",\"bitrate\":675944910,\"maxBitrate\":1946069829,\"bFrames\":1633732368,\"frameRate\":\"xvmhf\",\"slices\":837522232,\"adaptiveBFrame\":true,\"width\":\"hsasbhu\",\"height\":\"pohyuemslynsqyr\",\"label\":\"oobrlttyms\"}")
                .toObject(H264Layer.class);
        Assertions.assertEquals("hsasbhu", model.width());
        Assertions.assertEquals("pohyuemslynsqyr", model.height());
        Assertions.assertEquals("oobrlttyms", model.label());
        Assertions.assertEquals(675944910, model.bitrate());
        Assertions.assertEquals(1946069829, model.maxBitrate());
        Assertions.assertEquals(1633732368, model.bFrames());
        Assertions.assertEquals("xvmhf", model.frameRate());
        Assertions.assertEquals(837522232, model.slices());
        Assertions.assertEquals(true, model.adaptiveBFrame());
        Assertions.assertEquals(H264VideoProfile.HIGH, model.profile());
        Assertions.assertEquals("dxgketwzhhzjhfj", model.level());
        Assertions.assertEquals(Duration.parse("PT104H42M37S"), model.bufferWindow());
        Assertions.assertEquals(29.420763f, model.crf());
        Assertions.assertEquals(1386736873, model.referenceFrames());
        Assertions.assertEquals(EntropyMode.CABAC, model.entropyMode());
    }

    @Test
    public void testSerialize() {
        H264Layer model =
            new H264Layer()
                .withWidth("hsasbhu")
                .withHeight("pohyuemslynsqyr")
                .withLabel("oobrlttyms")
                .withBitrate(675944910)
                .withMaxBitrate(1946069829)
                .withBFrames(1633732368)
                .withFrameRate("xvmhf")
                .withSlices(837522232)
                .withAdaptiveBFrame(true)
                .withProfile(H264VideoProfile.HIGH)
                .withLevel("dxgketwzhhzjhfj")
                .withBufferWindow(Duration.parse("PT104H42M37S"))
                .withCrf(29.420763f)
                .withReferenceFrames(1386736873)
                .withEntropyMode(EntropyMode.CABAC);
        model = BinaryData.fromObject(model).toObject(H264Layer.class);
        Assertions.assertEquals("hsasbhu", model.width());
        Assertions.assertEquals("pohyuemslynsqyr", model.height());
        Assertions.assertEquals("oobrlttyms", model.label());
        Assertions.assertEquals(675944910, model.bitrate());
        Assertions.assertEquals(1946069829, model.maxBitrate());
        Assertions.assertEquals(1633732368, model.bFrames());
        Assertions.assertEquals("xvmhf", model.frameRate());
        Assertions.assertEquals(837522232, model.slices());
        Assertions.assertEquals(true, model.adaptiveBFrame());
        Assertions.assertEquals(H264VideoProfile.HIGH, model.profile());
        Assertions.assertEquals("dxgketwzhhzjhfj", model.level());
        Assertions.assertEquals(Duration.parse("PT104H42M37S"), model.bufferWindow());
        Assertions.assertEquals(29.420763f, model.crf());
        Assertions.assertEquals(1386736873, model.referenceFrames());
        Assertions.assertEquals(EntropyMode.CABAC, model.entropyMode());
    }
}
