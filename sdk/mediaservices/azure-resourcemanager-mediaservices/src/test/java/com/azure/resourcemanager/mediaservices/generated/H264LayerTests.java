// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.models.EntropyMode;
import com.azure.resourcemanager.mediaservices.models.H264Layer;
import com.azure.resourcemanager.mediaservices.models.H264VideoProfile;
import java.time.Duration;
import org.junit.jupiter.api.Assertions;

public final class H264LayerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        H264Layer model =
            BinaryData
                .fromString(
                    "{\"profile\":\"High\",\"level\":\"luudfdlwggytsb\",\"bufferWindow\":\"PT26H19M57S\",\"crf\":31.355131,\"referenceFrames\":1481495846,\"entropyMode\":\"Cabac\",\"bitrate\":2041049436,\"maxBitrate\":800109726,\"bFrames\":405729519,\"frameRate\":\"fxqknpirgneptt\",\"slices\":1651925529,\"adaptiveBFrame\":true,\"width\":\"ffcdmqnrojl\",\"height\":\"jnkrxf\",\"label\":\"dhcrati\"}")
                .toObject(H264Layer.class);
        Assertions.assertEquals("ffcdmqnrojl", model.width());
        Assertions.assertEquals("jnkrxf", model.height());
        Assertions.assertEquals("dhcrati", model.label());
        Assertions.assertEquals(2041049436, model.bitrate());
        Assertions.assertEquals(800109726, model.maxBitrate());
        Assertions.assertEquals(405729519, model.bFrames());
        Assertions.assertEquals("fxqknpirgneptt", model.frameRate());
        Assertions.assertEquals(1651925529, model.slices());
        Assertions.assertEquals(true, model.adaptiveBFrame());
        Assertions.assertEquals(H264VideoProfile.HIGH, model.profile());
        Assertions.assertEquals("luudfdlwggytsb", model.level());
        Assertions.assertEquals(Duration.parse("PT26H19M57S"), model.bufferWindow());
        Assertions.assertEquals(31.355131F, model.crf());
        Assertions.assertEquals(1481495846, model.referenceFrames());
        Assertions.assertEquals(EntropyMode.CABAC, model.entropyMode());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        H264Layer model =
            new H264Layer()
                .withWidth("ffcdmqnrojl")
                .withHeight("jnkrxf")
                .withLabel("dhcrati")
                .withBitrate(2041049436)
                .withMaxBitrate(800109726)
                .withBFrames(405729519)
                .withFrameRate("fxqknpirgneptt")
                .withSlices(1651925529)
                .withAdaptiveBFrame(true)
                .withProfile(H264VideoProfile.HIGH)
                .withLevel("luudfdlwggytsb")
                .withBufferWindow(Duration.parse("PT26H19M57S"))
                .withCrf(31.355131F)
                .withReferenceFrames(1481495846)
                .withEntropyMode(EntropyMode.CABAC);
        model = BinaryData.fromObject(model).toObject(H264Layer.class);
        Assertions.assertEquals("ffcdmqnrojl", model.width());
        Assertions.assertEquals("jnkrxf", model.height());
        Assertions.assertEquals("dhcrati", model.label());
        Assertions.assertEquals(2041049436, model.bitrate());
        Assertions.assertEquals(800109726, model.maxBitrate());
        Assertions.assertEquals(405729519, model.bFrames());
        Assertions.assertEquals("fxqknpirgneptt", model.frameRate());
        Assertions.assertEquals(1651925529, model.slices());
        Assertions.assertEquals(true, model.adaptiveBFrame());
        Assertions.assertEquals(H264VideoProfile.HIGH, model.profile());
        Assertions.assertEquals("luudfdlwggytsb", model.level());
        Assertions.assertEquals(Duration.parse("PT26H19M57S"), model.bufferWindow());
        Assertions.assertEquals(31.355131F, model.crf());
        Assertions.assertEquals(1481495846, model.referenceFrames());
        Assertions.assertEquals(EntropyMode.CABAC, model.entropyMode());
    }
}
