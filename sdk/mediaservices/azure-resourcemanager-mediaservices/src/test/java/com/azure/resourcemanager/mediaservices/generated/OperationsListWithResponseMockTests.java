// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.mediaservices.MediaServicesManager;
import com.azure.resourcemanager.mediaservices.models.ActionType;
import com.azure.resourcemanager.mediaservices.models.OperationCollection;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class OperationsListWithResponseMockTests {
    @Test
    public void testListWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"name\":\"yryuzcb\",\"display\":{\"provider\":\"vxmvw\",\"resource\":\"tayx\",\"operation\":\"supe\",\"description\":\"lzqnhcvs\"},\"origin\":\"tnzoibgsxgnxfy\",\"properties\":{\"serviceSpecification\":{\"logSpecifications\":[{}],\"metricSpecifications\":[{}]}},\"isDataAction\":true,\"actionType\":\"Internal\"},{\"name\":\"fdbxiqxeiiqbim\",\"display\":{\"provider\":\"wwinhehf\",\"resource\":\"ofvwbcb\",\"operation\":\"mbnkb\",\"description\":\"qvxkd\"},\"origin\":\"qihebw\",\"properties\":{\"serviceSpecification\":{\"logSpecifications\":[{},{}],\"metricSpecifications\":[{},{},{}]}},\"isDataAction\":false,\"actionType\":\"Internal\"},{\"name\":\"ragegi\",\"display\":{\"provider\":\"jfelisdjubggbqig\",\"resource\":\"kbsazgak\",\"operation\":\"cyrcmjdmspo\",\"description\":\"pv\"},\"origin\":\"rylniofrzg\",\"properties\":{\"serviceSpecification\":{\"logSpecifications\":[{},{}],\"metricSpecifications\":[{}]}},\"isDataAction\":true,\"actionType\":\"Internal\"},{\"name\":\"l\",\"display\":{\"provider\":\"c\",\"resource\":\"iznk\",\"operation\":\"f\",\"description\":\"snvpdibmi\"},\"origin\":\"stbz\",\"properties\":{\"serviceSpecification\":{\"logSpecifications\":[{},{}],\"metricSpecifications\":[{},{},{}]}},\"isDataAction\":false,\"actionType\":\"Internal\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MediaServicesManager manager = MediaServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        OperationCollection response
            = manager.operations().listWithResponse(com.azure.core.util.Context.NONE).getValue();

        Assertions.assertEquals("yryuzcb", response.value().get(0).name());
        Assertions.assertEquals("vxmvw", response.value().get(0).display().provider());
        Assertions.assertEquals("tayx", response.value().get(0).display().resource());
        Assertions.assertEquals("supe", response.value().get(0).display().operation());
        Assertions.assertEquals("lzqnhcvs", response.value().get(0).display().description());
        Assertions.assertEquals("tnzoibgsxgnxfy", response.value().get(0).origin());
        Assertions.assertEquals(true, response.value().get(0).isDataAction());
        Assertions.assertEquals(ActionType.INTERNAL, response.value().get(0).actionType());
    }
}
