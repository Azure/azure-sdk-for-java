// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.fluent.models.LiveOutputInner;
import com.azure.resourcemanager.mediaservices.models.Hls;
import java.time.Duration;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class LiveOutputInnerTests {
    @Test
    public void testDeserialize() {
        LiveOutputInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"description\":\"hrnsvbu\",\"assetName\":\"wdvzyy\",\"archiveWindowLength\":\"PT149H56M13S\",\"manifestName\":\"nu\",\"hls\":{\"fragmentsPerTsSegment\":1468754006},\"outputSnapTime\":4457519931759813782,\"created\":\"2021-04-02T14:41:37Z\",\"lastModified\":\"2021-01-10T15:25:32Z\",\"provisioningState\":\"pqgik\",\"resourceState\":\"Running\"},\"id\":\"txdyuxzejntpsew\",\"name\":\"ioilqukrydxtq\",\"type\":\"ieoxorggufhyaomt\"}")
                .toObject(LiveOutputInner.class);
        Assertions.assertEquals("hrnsvbu", model.description());
        Assertions.assertEquals("wdvzyy", model.assetName());
        Assertions.assertEquals(Duration.parse("PT149H56M13S"), model.archiveWindowLength());
        Assertions.assertEquals("nu", model.manifestName());
        Assertions.assertEquals(1468754006, model.hls().fragmentsPerTsSegment());
        Assertions.assertEquals(4457519931759813782L, model.outputSnapTime());
    }

    @Test
    public void testSerialize() {
        LiveOutputInner model =
            new LiveOutputInner()
                .withDescription("hrnsvbu")
                .withAssetName("wdvzyy")
                .withArchiveWindowLength(Duration.parse("PT149H56M13S"))
                .withManifestName("nu")
                .withHls(new Hls().withFragmentsPerTsSegment(1468754006))
                .withOutputSnapTime(4457519931759813782L);
        model = BinaryData.fromObject(model).toObject(LiveOutputInner.class);
        Assertions.assertEquals("hrnsvbu", model.description());
        Assertions.assertEquals("wdvzyy", model.assetName());
        Assertions.assertEquals(Duration.parse("PT149H56M13S"), model.archiveWindowLength());
        Assertions.assertEquals("nu", model.manifestName());
        Assertions.assertEquals(1468754006, model.hls().fragmentsPerTsSegment());
        Assertions.assertEquals(4457519931759813782L, model.outputSnapTime());
    }
}
