// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.fluent.models.LiveOutputInner;
import com.azure.resourcemanager.mediaservices.models.Hls;
import java.time.Duration;
import org.junit.jupiter.api.Assertions;

public final class LiveOutputInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LiveOutputInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"description\":\"gymare\",\"assetName\":\"n\",\"archiveWindowLength\":\"PT49H48M38S\",\"rewindWindowLength\":\"PT23H59M19S\",\"manifestName\":\"gjhkycubeddg\",\"hls\":{\"fragmentsPerTsSegment\":1063119881},\"outputSnapTime\":7961323024818262585,\"created\":\"2021-05-03T03:51:25Z\",\"lastModified\":\"2021-01-02T14:20:16Z\",\"provisioningState\":\"rmnjijpx\",\"resourceState\":\"Running\"},\"id\":\"udfnbyxba\",\"name\":\"abjy\",\"type\":\"ayffim\"}")
                .toObject(LiveOutputInner.class);
        Assertions.assertEquals("gymare", model.description());
        Assertions.assertEquals("n", model.assetName());
        Assertions.assertEquals(Duration.parse("PT49H48M38S"), model.archiveWindowLength());
        Assertions.assertEquals(Duration.parse("PT23H59M19S"), model.rewindWindowLength());
        Assertions.assertEquals("gjhkycubeddg", model.manifestName());
        Assertions.assertEquals(1063119881, model.hls().fragmentsPerTsSegment());
        Assertions.assertEquals(7961323024818262585L, model.outputSnapTime());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LiveOutputInner model =
            new LiveOutputInner()
                .withDescription("gymare")
                .withAssetName("n")
                .withArchiveWindowLength(Duration.parse("PT49H48M38S"))
                .withRewindWindowLength(Duration.parse("PT23H59M19S"))
                .withManifestName("gjhkycubeddg")
                .withHls(new Hls().withFragmentsPerTsSegment(1063119881))
                .withOutputSnapTime(7961323024818262585L);
        model = BinaryData.fromObject(model).toObject(LiveOutputInner.class);
        Assertions.assertEquals("gymare", model.description());
        Assertions.assertEquals("n", model.assetName());
        Assertions.assertEquals(Duration.parse("PT49H48M38S"), model.archiveWindowLength());
        Assertions.assertEquals(Duration.parse("PT23H59M19S"), model.rewindWindowLength());
        Assertions.assertEquals("gjhkycubeddg", model.manifestName());
        Assertions.assertEquals(1063119881, model.hls().fragmentsPerTsSegment());
        Assertions.assertEquals(7961323024818262585L, model.outputSnapTime());
    }
}
