// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.fluent.models.LiveOutputInner;
import com.azure.resourcemanager.mediaservices.models.Hls;
import java.time.Duration;
import org.junit.jupiter.api.Assertions;

public final class LiveOutputInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LiveOutputInner model = BinaryData.fromString(
            "{\"properties\":{\"description\":\"iacegfnmn\",\"assetName\":\"fpmvmemfnczd\",\"archiveWindowLength\":\"PT154H32M8S\",\"rewindWindowLength\":\"PT195H39M15S\",\"manifestName\":\"lxlllchpo\",\"hls\":{\"fragmentsPerTsSegment\":482170286},\"outputSnapTime\":2808701299898037313,\"created\":\"2021-09-24T05:04:25Z\",\"lastModified\":\"2021-05-27T08:33:17Z\",\"provisioningState\":\"uvsj\",\"resourceState\":\"Deleting\"},\"id\":\"myst\",\"name\":\"luqypfcvlerch\",\"type\":\"qbmfpjbabwidf\"}")
            .toObject(LiveOutputInner.class);
        Assertions.assertEquals("iacegfnmn", model.description());
        Assertions.assertEquals("fpmvmemfnczd", model.assetName());
        Assertions.assertEquals(Duration.parse("PT154H32M8S"), model.archiveWindowLength());
        Assertions.assertEquals(Duration.parse("PT195H39M15S"), model.rewindWindowLength());
        Assertions.assertEquals("lxlllchpo", model.manifestName());
        Assertions.assertEquals(482170286, model.hls().fragmentsPerTsSegment());
        Assertions.assertEquals(2808701299898037313L, model.outputSnapTime());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LiveOutputInner model = new LiveOutputInner().withDescription("iacegfnmn")
            .withAssetName("fpmvmemfnczd")
            .withArchiveWindowLength(Duration.parse("PT154H32M8S"))
            .withRewindWindowLength(Duration.parse("PT195H39M15S"))
            .withManifestName("lxlllchpo")
            .withHls(new Hls().withFragmentsPerTsSegment(482170286))
            .withOutputSnapTime(2808701299898037313L);
        model = BinaryData.fromObject(model).toObject(LiveOutputInner.class);
        Assertions.assertEquals("iacegfnmn", model.description());
        Assertions.assertEquals("fpmvmemfnczd", model.assetName());
        Assertions.assertEquals(Duration.parse("PT154H32M8S"), model.archiveWindowLength());
        Assertions.assertEquals(Duration.parse("PT195H39M15S"), model.rewindWindowLength());
        Assertions.assertEquals("lxlllchpo", model.manifestName());
        Assertions.assertEquals(482170286, model.hls().fragmentsPerTsSegment());
        Assertions.assertEquals(2808701299898037313L, model.outputSnapTime());
    }
}
