// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.mediaservices.MediaServicesManager;
import com.azure.resourcemanager.mediaservices.models.ContentKeyPolicy;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ContentKeyPoliciesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"policyId\":\"d1323554-7ab5-4a25-b374-9a8c557838dc\",\"created\":\"2021-07-12T17:40:04Z\",\"lastModified\":\"2021-09-03T15:46:10Z\",\"description\":\"zzhz\",\"options\":[{\"policyOptionId\":\"a37eb795-21bb-444c-bf42-b9500acdce13\",\"name\":\"tlgy\",\"configuration\":{\"@odata.type\":\"ContentKeyPolicyConfiguration\"},\"restriction\":{\"@odata.type\":\"ContentKeyPolicyRestriction\"}},{\"policyOptionId\":\"a22c9892-6735-47e4-ae51-4848d881fe4e\",\"name\":\"qvlnnpxybafiqgea\",\"configuration\":{\"@odata.type\":\"ContentKeyPolicyConfiguration\"},\"restriction\":{\"@odata.type\":\"ContentKeyPolicyRestriction\"}},{\"policyOptionId\":\"5128878c-1a37-4b94-99f3-029a7553655a\",\"name\":\"gjekglklby\",\"configuration\":{\"@odata.type\":\"ContentKeyPolicyConfiguration\"},\"restriction\":{\"@odata.type\":\"ContentKeyPolicyRestriction\"}}]},\"id\":\"idwcwvmzegjon\",\"name\":\"hj\",\"type\":\"rwgdnqzbrfks\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MediaServicesManager manager = MediaServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<ContentKeyPolicy> response = manager.contentKeyPolicies()
            .list("vl", "jchcsrlzknmzla", "rupdwvnphcnzq", 797938091, "jhmqrhvthla", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("zzhz", response.iterator().next().description());
        Assertions.assertEquals("tlgy", response.iterator().next().options().get(0).name());
    }
}
