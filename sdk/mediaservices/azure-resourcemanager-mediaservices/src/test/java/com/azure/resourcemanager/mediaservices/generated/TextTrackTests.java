// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.models.HlsSettings;
import com.azure.resourcemanager.mediaservices.models.TextTrack;
import com.azure.resourcemanager.mediaservices.models.Visibility;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class TextTrackTests {
    @Test
    public void testDeserialize() {
        TextTrack model =
            BinaryData
                .fromString(
                    "{\"@odata.type\":\"#Microsoft.Media.TextTrack\",\"fileName\":\"hpodbzev\",\"displayName\":\"dnhfuk\",\"languageCode\":\"sjcswsmystuluqyp\",\"playerVisibility\":\"Visible\",\"hlsSettings\":{\"default\":true,\"forced\":false,\"characteristics\":\"qbmfpjbabwidf\"}}")
                .toObject(TextTrack.class);
        Assertions.assertEquals("hpodbzev", model.fileName());
        Assertions.assertEquals("dnhfuk", model.displayName());
        Assertions.assertEquals(Visibility.VISIBLE, model.playerVisibility());
        Assertions.assertEquals(true, model.hlsSettings().defaultProperty());
        Assertions.assertEquals(false, model.hlsSettings().forced());
        Assertions.assertEquals("qbmfpjbabwidf", model.hlsSettings().characteristics());
    }

    @Test
    public void testSerialize() {
        TextTrack model =
            new TextTrack()
                .withFileName("hpodbzev")
                .withDisplayName("dnhfuk")
                .withPlayerVisibility(Visibility.VISIBLE)
                .withHlsSettings(
                    new HlsSettings().withDefaultProperty(true).withForced(false).withCharacteristics("qbmfpjbabwidf"));
        model = BinaryData.fromObject(model).toObject(TextTrack.class);
        Assertions.assertEquals("hpodbzev", model.fileName());
        Assertions.assertEquals("dnhfuk", model.displayName());
        Assertions.assertEquals(Visibility.VISIBLE, model.playerVisibility());
        Assertions.assertEquals(true, model.hlsSettings().defaultProperty());
        Assertions.assertEquals(false, model.hlsSettings().forced());
        Assertions.assertEquals("qbmfpjbabwidf", model.hlsSettings().characteristics());
    }
}
