// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.models.Image;
import com.azure.resourcemanager.mediaservices.models.StretchMode;
import com.azure.resourcemanager.mediaservices.models.VideoSyncMode;
import java.time.Duration;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class ImageTests {
    @Test
    public void testDeserialize() {
        Image model =
            BinaryData
                .fromString(
                    "{\"@odata.type\":\"#Microsoft.Media.Image\",\"start\":\"lkb\",\"step\":\"pfajnjwltlwtjj\",\"range\":\"ktalhsnvkcdmxz\",\"keyFrameInterval\":\"PT72H50M1S\",\"stretchMode\":\"AutoSize\",\"syncMode\":\"Cfr\",\"label\":\"wiaaomylweaz\"}")
                .toObject(Image.class);
        Assertions.assertEquals("wiaaomylweaz", model.label());
        Assertions.assertEquals(Duration.parse("PT72H50M1S"), model.keyFrameInterval());
        Assertions.assertEquals(StretchMode.AUTO_SIZE, model.stretchMode());
        Assertions.assertEquals(VideoSyncMode.CFR, model.syncMode());
        Assertions.assertEquals("lkb", model.start());
        Assertions.assertEquals("pfajnjwltlwtjj", model.step());
        Assertions.assertEquals("ktalhsnvkcdmxz", model.range());
    }

    @Test
    public void testSerialize() {
        Image model =
            new Image()
                .withLabel("wiaaomylweaz")
                .withKeyFrameInterval(Duration.parse("PT72H50M1S"))
                .withStretchMode(StretchMode.AUTO_SIZE)
                .withSyncMode(VideoSyncMode.CFR)
                .withStart("lkb")
                .withStep("pfajnjwltlwtjj")
                .withRange("ktalhsnvkcdmxz");
        model = BinaryData.fromObject(model).toObject(Image.class);
        Assertions.assertEquals("wiaaomylweaz", model.label());
        Assertions.assertEquals(Duration.parse("PT72H50M1S"), model.keyFrameInterval());
        Assertions.assertEquals(StretchMode.AUTO_SIZE, model.stretchMode());
        Assertions.assertEquals(VideoSyncMode.CFR, model.syncMode());
        Assertions.assertEquals("lkb", model.start());
        Assertions.assertEquals("pfajnjwltlwtjj", model.step());
        Assertions.assertEquals("ktalhsnvkcdmxz", model.range());
    }
}
