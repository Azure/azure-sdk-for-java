// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.fluent.models.StreamingEndpointSkuInfoListResultInner;
import com.azure.resourcemanager.mediaservices.models.ArmStreamingEndpointCapacity;
import com.azure.resourcemanager.mediaservices.models.ArmStreamingEndpointSku;
import com.azure.resourcemanager.mediaservices.models.ArmStreamingEndpointSkuInfo;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class StreamingEndpointSkuInfoListResultInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        StreamingEndpointSkuInfoListResultInner model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"resourceType\":\"icccn\",\"capacity\":{\"scaleType\":\"uexmkttlst\",\"default\":1961670618,\"minimum\":596743052,\"maximum\":1168209336},\"sku\":{\"name\":\"rncsdtclu\"}},{\"resourceType\":\"ypbsfgytguslfead\",\"capacity\":{\"scaleType\":\"qukyhejhzi\",\"default\":2010332970,\"minimum\":1210631874,\"maximum\":843863757},\"sku\":{\"name\":\"p\"}},{\"resourceType\":\"ksrpqv\",\"capacity\":{\"scaleType\":\"raehtwdwrft\",\"default\":767551661,\"minimum\":1720208183,\"maximum\":670463751},\"sku\":{\"name\":\"bhshfwpracstwity\"}}]}")
                .toObject(StreamingEndpointSkuInfoListResultInner.class);
        Assertions.assertEquals("icccn", model.value().get(0).resourceType());
        Assertions.assertEquals(1961670618, model.value().get(0).capacity().defaultProperty());
        Assertions.assertEquals(596743052, model.value().get(0).capacity().minimum());
        Assertions.assertEquals(1168209336, model.value().get(0).capacity().maximum());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        StreamingEndpointSkuInfoListResultInner model =
            new StreamingEndpointSkuInfoListResultInner()
                .withValue(
                    Arrays
                        .asList(
                            new ArmStreamingEndpointSkuInfo()
                                .withResourceType("icccn")
                                .withCapacity(
                                    new ArmStreamingEndpointCapacity()
                                        .withDefaultProperty(1961670618)
                                        .withMinimum(596743052)
                                        .withMaximum(1168209336))
                                .withSku(new ArmStreamingEndpointSku()),
                            new ArmStreamingEndpointSkuInfo()
                                .withResourceType("ypbsfgytguslfead")
                                .withCapacity(
                                    new ArmStreamingEndpointCapacity()
                                        .withDefaultProperty(2010332970)
                                        .withMinimum(1210631874)
                                        .withMaximum(843863757))
                                .withSku(new ArmStreamingEndpointSku()),
                            new ArmStreamingEndpointSkuInfo()
                                .withResourceType("ksrpqv")
                                .withCapacity(
                                    new ArmStreamingEndpointCapacity()
                                        .withDefaultProperty(767551661)
                                        .withMinimum(1720208183)
                                        .withMaximum(670463751))
                                .withSku(new ArmStreamingEndpointSku())));
        model = BinaryData.fromObject(model).toObject(StreamingEndpointSkuInfoListResultInner.class);
        Assertions.assertEquals("icccn", model.value().get(0).resourceType());
        Assertions.assertEquals(1961670618, model.value().get(0).capacity().defaultProperty());
        Assertions.assertEquals(596743052, model.value().get(0).capacity().minimum());
        Assertions.assertEquals(1168209336, model.value().get(0).capacity().maximum());
    }
}
