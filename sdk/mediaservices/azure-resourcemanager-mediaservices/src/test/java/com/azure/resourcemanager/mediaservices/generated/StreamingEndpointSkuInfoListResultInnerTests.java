// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.fluent.models.StreamingEndpointSkuInfoListResultInner;
import com.azure.resourcemanager.mediaservices.models.ArmStreamingEndpointCapacity;
import com.azure.resourcemanager.mediaservices.models.ArmStreamingEndpointSku;
import com.azure.resourcemanager.mediaservices.models.ArmStreamingEndpointSkuInfo;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class StreamingEndpointSkuInfoListResultInnerTests {
    @Test
    public void testDeserialize() {
        StreamingEndpointSkuInfoListResultInner model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"resourceType\":\"mligov\",\"capacity\":{\"scaleType\":\"xk\",\"default\":1244288604,\"minimum\":839136561,\"maximum\":1919581142},\"sku\":{\"name\":\"ocbgoorbteoyb\"}},{\"resourceType\":\"jxakv\",\"capacity\":{\"scaleType\":\"slordilmyww\",\"default\":525599305,\"minimum\":1275088225,\"maximum\":848351974},\"sku\":{\"name\":\"abgyvudt\"}},{\"resourceType\":\"ewbcihxuuw\",\"capacity\":{\"scaleType\":\"yxccyb\",\"default\":436827826,\"minimum\":1093154656,\"maximum\":184122584},\"sku\":{\"name\":\"zp\"}}]}")
                .toObject(StreamingEndpointSkuInfoListResultInner.class);
        Assertions.assertEquals("mligov", model.value().get(0).resourceType());
        Assertions.assertEquals(1244288604, model.value().get(0).capacity().defaultProperty());
        Assertions.assertEquals(839136561, model.value().get(0).capacity().minimum());
        Assertions.assertEquals(1919581142, model.value().get(0).capacity().maximum());
    }

    @Test
    public void testSerialize() {
        StreamingEndpointSkuInfoListResultInner model =
            new StreamingEndpointSkuInfoListResultInner()
                .withValue(
                    Arrays
                        .asList(
                            new ArmStreamingEndpointSkuInfo()
                                .withResourceType("mligov")
                                .withCapacity(
                                    new ArmStreamingEndpointCapacity()
                                        .withDefaultProperty(1244288604)
                                        .withMinimum(839136561)
                                        .withMaximum(1919581142))
                                .withSku(new ArmStreamingEndpointSku()),
                            new ArmStreamingEndpointSkuInfo()
                                .withResourceType("jxakv")
                                .withCapacity(
                                    new ArmStreamingEndpointCapacity()
                                        .withDefaultProperty(525599305)
                                        .withMinimum(1275088225)
                                        .withMaximum(848351974))
                                .withSku(new ArmStreamingEndpointSku()),
                            new ArmStreamingEndpointSkuInfo()
                                .withResourceType("ewbcihxuuw")
                                .withCapacity(
                                    new ArmStreamingEndpointCapacity()
                                        .withDefaultProperty(436827826)
                                        .withMinimum(1093154656)
                                        .withMaximum(184122584))
                                .withSku(new ArmStreamingEndpointSku())));
        model = BinaryData.fromObject(model).toObject(StreamingEndpointSkuInfoListResultInner.class);
        Assertions.assertEquals("mligov", model.value().get(0).resourceType());
        Assertions.assertEquals(1244288604, model.value().get(0).capacity().defaultProperty());
        Assertions.assertEquals(839136561, model.value().get(0).capacity().minimum());
        Assertions.assertEquals(1919581142, model.value().get(0).capacity().maximum());
    }
}
