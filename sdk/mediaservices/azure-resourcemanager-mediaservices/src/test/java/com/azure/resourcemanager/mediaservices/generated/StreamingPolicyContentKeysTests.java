// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.models.DefaultKey;
import com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKey;
import com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKeys;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class StreamingPolicyContentKeysTests {
    @Test
    public void testDeserialize() {
        StreamingPolicyContentKeys model =
            BinaryData
                .fromString(
                    "{\"defaultKey\":{\"label\":\"wdreqnovvqfovl\",\"policyName\":\"ywsuwsy\"},\"keyToTrackMappings\":[{\"label\":\"sytgadgvraea\",\"policyName\":\"e\",\"tracks\":[]},{\"label\":\"rrwlquuijfqkace\",\"policyName\":\"ipfpubji\",\"tracks\":[]},{\"label\":\"f\",\"policyName\":\"hqkvpuvksgplsak\",\"tracks\":[]}]}")
                .toObject(StreamingPolicyContentKeys.class);
        Assertions.assertEquals("wdreqnovvqfovl", model.defaultKey().label());
        Assertions.assertEquals("ywsuwsy", model.defaultKey().policyName());
        Assertions.assertEquals("sytgadgvraea", model.keyToTrackMappings().get(0).label());
        Assertions.assertEquals("e", model.keyToTrackMappings().get(0).policyName());
    }

    @Test
    public void testSerialize() {
        StreamingPolicyContentKeys model =
            new StreamingPolicyContentKeys()
                .withDefaultKey(new DefaultKey().withLabel("wdreqnovvqfovl").withPolicyName("ywsuwsy"))
                .withKeyToTrackMappings(
                    Arrays
                        .asList(
                            new StreamingPolicyContentKey()
                                .withLabel("sytgadgvraea")
                                .withPolicyName("e")
                                .withTracks(Arrays.asList()),
                            new StreamingPolicyContentKey()
                                .withLabel("rrwlquuijfqkace")
                                .withPolicyName("ipfpubji")
                                .withTracks(Arrays.asList()),
                            new StreamingPolicyContentKey()
                                .withLabel("f")
                                .withPolicyName("hqkvpuvksgplsak")
                                .withTracks(Arrays.asList())));
        model = BinaryData.fromObject(model).toObject(StreamingPolicyContentKeys.class);
        Assertions.assertEquals("wdreqnovvqfovl", model.defaultKey().label());
        Assertions.assertEquals("ywsuwsy", model.defaultKey().policyName());
        Assertions.assertEquals("sytgadgvraea", model.keyToTrackMappings().get(0).label());
        Assertions.assertEquals("e", model.keyToTrackMappings().get(0).policyName());
    }
}
