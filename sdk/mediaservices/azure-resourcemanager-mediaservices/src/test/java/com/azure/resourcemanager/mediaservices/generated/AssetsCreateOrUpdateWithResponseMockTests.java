// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.mediaservices.MediaServicesManager;
import com.azure.resourcemanager.mediaservices.models.Asset;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AssetsCreateOrUpdateWithResponseMockTests {
    @Test
    public void testCreateOrUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"assetId\":\"ac58694f-e4ac-4503-ab9a-6d03a0d5d7f9\",\"created\":\"2021-03-20T19:14:36Z\",\"lastModified\":\"2021-06-13T17:23:56Z\",\"alternateId\":\"khnmgbrou\",\"description\":\"dbhfhp\",\"container\":\"azjzo\",\"storageAccountName\":\"jxhpdulontacn\",\"storageEncryptionFormat\":\"None\"},\"id\":\"ehtuevrhr\",\"name\":\"jyoogwxh\",\"type\":\"sd\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MediaServicesManager manager = MediaServicesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Asset response = manager.assets()
            .define("wahzjmucftbyr")
            .withExistingMediaService("bf", "yggagflnlgmt")
            .withAlternateId("gqfu")
            .withDescription("ckzmkwklsnox")
            .withContainer("mqeq")
            .withStorageAccountName("h")
            .create();

        Assertions.assertEquals("khnmgbrou", response.alternateId());
        Assertions.assertEquals("dbhfhp", response.description());
        Assertions.assertEquals("azjzo", response.container());
        Assertions.assertEquals("jxhpdulontacn", response.storageAccountName());
    }
}
