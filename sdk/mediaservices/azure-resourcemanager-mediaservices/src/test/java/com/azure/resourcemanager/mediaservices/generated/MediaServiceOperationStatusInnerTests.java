// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceOperationStatusInner;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class MediaServiceOperationStatusInnerTests {
    @Test
    public void testDeserialize() {
        MediaServiceOperationStatusInner model =
            BinaryData
                .fromString(
                    "{\"name\":\"oxgvclt\",\"id\":\"sncghkjeszz\",\"startTime\":\"2021-12-06T11:52:19Z\",\"endTime\":\"2021-06-19T07:11:27Z\",\"status\":\"txfvgx\"}")
                .toObject(MediaServiceOperationStatusInner.class);
        Assertions.assertEquals("oxgvclt", model.name());
        Assertions.assertEquals("sncghkjeszz", model.id());
        Assertions.assertEquals(OffsetDateTime.parse("2021-12-06T11:52:19Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-19T07:11:27Z"), model.endTime());
        Assertions.assertEquals("txfvgx", model.status());
    }

    @Test
    public void testSerialize() {
        MediaServiceOperationStatusInner model =
            new MediaServiceOperationStatusInner()
                .withName("oxgvclt")
                .withId("sncghkjeszz")
                .withStartTime(OffsetDateTime.parse("2021-12-06T11:52:19Z"))
                .withEndTime(OffsetDateTime.parse("2021-06-19T07:11:27Z"))
                .withStatus("txfvgx");
        model = BinaryData.fromObject(model).toObject(MediaServiceOperationStatusInner.class);
        Assertions.assertEquals("oxgvclt", model.name());
        Assertions.assertEquals("sncghkjeszz", model.id());
        Assertions.assertEquals(OffsetDateTime.parse("2021-12-06T11:52:19Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-19T07:11:27Z"), model.endTime());
        Assertions.assertEquals("txfvgx", model.status());
    }
}
