// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.fluent.models.MediaServiceOperationStatusInner;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class MediaServiceOperationStatusInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MediaServiceOperationStatusInner model =
            BinaryData
                .fromString(
                    "{\"name\":\"azyxoegukg\",\"id\":\"piu\",\"startTime\":\"2021-06-28T11:14:38Z\",\"endTime\":\"2021-08-14T19:48:52Z\",\"status\":\"vqzntypmrbpizcdr\"}")
                .toObject(MediaServiceOperationStatusInner.class);
        Assertions.assertEquals("azyxoegukg", model.name());
        Assertions.assertEquals("piu", model.id());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-28T11:14:38Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-14T19:48:52Z"), model.endTime());
        Assertions.assertEquals("vqzntypmrbpizcdr", model.status());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MediaServiceOperationStatusInner model =
            new MediaServiceOperationStatusInner()
                .withName("azyxoegukg")
                .withId("piu")
                .withStartTime(OffsetDateTime.parse("2021-06-28T11:14:38Z"))
                .withEndTime(OffsetDateTime.parse("2021-08-14T19:48:52Z"))
                .withStatus("vqzntypmrbpizcdr");
        model = BinaryData.fromObject(model).toObject(MediaServiceOperationStatusInner.class);
        Assertions.assertEquals("azyxoegukg", model.name());
        Assertions.assertEquals("piu", model.id());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-28T11:14:38Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-14T19:48:52Z"), model.endTime());
        Assertions.assertEquals("vqzntypmrbpizcdr", model.status());
    }
}
