// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayConfiguration;
import com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayOfflineRentalConfiguration;
import com.azure.resourcemanager.mediaservices.models.ContentKeyPolicyFairPlayRentalAndLeaseKeyType;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class ContentKeyPolicyFairPlayConfigurationTests {
    @Test
    public void testDeserialize() {
        ContentKeyPolicyFairPlayConfiguration model =
            BinaryData
                .fromString(
                    "{\"@odata.type\":\"#Microsoft.Media.ContentKeyPolicyFairPlayConfiguration\",\"fairPlayPfxPassword\":\"wdigumbnraauz\",\"fairPlayPfx\":\"p\",\"rentalAndLeaseKeyType\":\"PersistentUnlimited\",\"rentalDuration\":837193967660191056,\"offlineRentalConfiguration\":{\"playbackDurationSeconds\":8740215687103788004,\"storageDurationSeconds\":1237250995044667846}}")
                .toObject(ContentKeyPolicyFairPlayConfiguration.class);
        Assertions.assertEquals("wdigumbnraauz", model.fairPlayPfxPassword());
        Assertions.assertEquals("p", model.fairPlayPfx());
        Assertions
            .assertEquals(
                ContentKeyPolicyFairPlayRentalAndLeaseKeyType.PERSISTENT_UNLIMITED, model.rentalAndLeaseKeyType());
        Assertions.assertEquals(837193967660191056L, model.rentalDuration());
        Assertions.assertEquals(8740215687103788004L, model.offlineRentalConfiguration().playbackDurationSeconds());
        Assertions.assertEquals(1237250995044667846L, model.offlineRentalConfiguration().storageDurationSeconds());
    }

    @Test
    public void testSerialize() {
        ContentKeyPolicyFairPlayConfiguration model =
            new ContentKeyPolicyFairPlayConfiguration()
                .withFairPlayPfxPassword("wdigumbnraauz")
                .withFairPlayPfx("p")
                .withRentalAndLeaseKeyType(ContentKeyPolicyFairPlayRentalAndLeaseKeyType.PERSISTENT_UNLIMITED)
                .withRentalDuration(837193967660191056L)
                .withOfflineRentalConfiguration(
                    new ContentKeyPolicyFairPlayOfflineRentalConfiguration()
                        .withPlaybackDurationSeconds(8740215687103788004L)
                        .withStorageDurationSeconds(1237250995044667846L));
        model = BinaryData.fromObject(model).toObject(ContentKeyPolicyFairPlayConfiguration.class);
        Assertions.assertEquals("wdigumbnraauz", model.fairPlayPfxPassword());
        Assertions.assertEquals("p", model.fairPlayPfx());
        Assertions
            .assertEquals(
                ContentKeyPolicyFairPlayRentalAndLeaseKeyType.PERSISTENT_UNLIMITED, model.rentalAndLeaseKeyType());
        Assertions.assertEquals(837193967660191056L, model.rentalDuration());
        Assertions.assertEquals(8740215687103788004L, model.offlineRentalConfiguration().playbackDurationSeconds());
        Assertions.assertEquals(1237250995044667846L, model.offlineRentalConfiguration().storageDurationSeconds());
    }
}
