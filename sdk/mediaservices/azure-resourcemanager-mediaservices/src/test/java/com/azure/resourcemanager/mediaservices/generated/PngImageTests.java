// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.models.PngImage;
import com.azure.resourcemanager.mediaservices.models.PngLayer;
import com.azure.resourcemanager.mediaservices.models.StretchMode;
import com.azure.resourcemanager.mediaservices.models.VideoSyncMode;
import java.time.Duration;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class PngImageTests {
    @Test
    public void testDeserialize() {
        PngImage model =
            BinaryData
                .fromString(
                    "{\"@odata.type\":\"#Microsoft.Media.PngImage\",\"layers\":[{\"width\":\"kjq\",\"height\":\"broyla\",\"label\":\"ulcdisdosf\"},{\"width\":\"jsvg\",\"height\":\"whryvycytdcl\",\"label\":\"ccknfnwmbtmvp\"},{\"width\":\"jdhttzaefedxi\",\"height\":\"hrphkmcrjdqn\",\"label\":\"fzpbgtgkyl\"},{\"width\":\"ghrjeuutl\",\"height\":\"ez\",\"label\":\"hokvbwnh\"}],\"start\":\"tqlgehgppi\",\"step\":\"fhpfeoajvgcxtx\",\"range\":\"sheafid\",\"keyFrameInterval\":\"PT62H48M11S\",\"stretchMode\":\"AutoFit\",\"syncMode\":\"Vfr\",\"label\":\"mks\"}")
                .toObject(PngImage.class);
        Assertions.assertEquals("mks", model.label());
        Assertions.assertEquals(Duration.parse("PT62H48M11S"), model.keyFrameInterval());
        Assertions.assertEquals(StretchMode.AUTO_FIT, model.stretchMode());
        Assertions.assertEquals(VideoSyncMode.VFR, model.syncMode());
        Assertions.assertEquals("tqlgehgppi", model.start());
        Assertions.assertEquals("fhpfeoajvgcxtx", model.step());
        Assertions.assertEquals("sheafid", model.range());
        Assertions.assertEquals("kjq", model.layers().get(0).width());
        Assertions.assertEquals("broyla", model.layers().get(0).height());
        Assertions.assertEquals("ulcdisdosf", model.layers().get(0).label());
    }

    @Test
    public void testSerialize() {
        PngImage model =
            new PngImage()
                .withLabel("mks")
                .withKeyFrameInterval(Duration.parse("PT62H48M11S"))
                .withStretchMode(StretchMode.AUTO_FIT)
                .withSyncMode(VideoSyncMode.VFR)
                .withStart("tqlgehgppi")
                .withStep("fhpfeoajvgcxtx")
                .withRange("sheafid")
                .withLayers(
                    Arrays
                        .asList(
                            new PngLayer().withWidth("kjq").withHeight("broyla").withLabel("ulcdisdosf"),
                            new PngLayer().withWidth("jsvg").withHeight("whryvycytdcl").withLabel("ccknfnwmbtmvp"),
                            new PngLayer()
                                .withWidth("jdhttzaefedxi")
                                .withHeight("hrphkmcrjdqn")
                                .withLabel("fzpbgtgkyl"),
                            new PngLayer().withWidth("ghrjeuutl").withHeight("ez").withLabel("hokvbwnh")));
        model = BinaryData.fromObject(model).toObject(PngImage.class);
        Assertions.assertEquals("mks", model.label());
        Assertions.assertEquals(Duration.parse("PT62H48M11S"), model.keyFrameInterval());
        Assertions.assertEquals(StretchMode.AUTO_FIT, model.stretchMode());
        Assertions.assertEquals(VideoSyncMode.VFR, model.syncMode());
        Assertions.assertEquals("tqlgehgppi", model.start());
        Assertions.assertEquals("fhpfeoajvgcxtx", model.step());
        Assertions.assertEquals("sheafid", model.range());
        Assertions.assertEquals("kjq", model.layers().get(0).width());
        Assertions.assertEquals("broyla", model.layers().get(0).height());
        Assertions.assertEquals("ulcdisdosf", model.layers().get(0).label());
    }
}
