// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.models.ClipTime;
import com.azure.resourcemanager.mediaservices.models.InputDefinition;
import com.azure.resourcemanager.mediaservices.models.JobInputAsset;
import com.azure.resourcemanager.mediaservices.models.TrackDescriptor;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class JobInputAssetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        JobInputAsset model = BinaryData.fromString(
            "{\"@odata.type\":\"#Microsoft.Media.JobInputAsset\",\"assetName\":\"bgomfgbegl\",\"files\":[\"eohibet\",\"luan\",\"rrfx\",\"eebtijvacvb\"],\"start\":{\"@odata.type\":\"ClipTime\"},\"end\":{\"@odata.type\":\"ClipTime\"},\"label\":\"qqxlajr\",\"inputDefinitions\":[{\"@odata.type\":\"InputDefinition\",\"includedTracks\":[{\"@odata.type\":\"TrackDescriptor\"},{\"@odata.type\":\"TrackDescriptor\"},{\"@odata.type\":\"TrackDescriptor\"},{\"@odata.type\":\"TrackDescriptor\"}]},{\"@odata.type\":\"InputDefinition\",\"includedTracks\":[{\"@odata.type\":\"TrackDescriptor\"}]}]}")
            .toObject(JobInputAsset.class);
        Assertions.assertEquals("eohibet", model.files().get(0));
        Assertions.assertEquals("qqxlajr", model.label());
        Assertions.assertEquals("bgomfgbegl", model.assetName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        JobInputAsset model = new JobInputAsset().withFiles(Arrays.asList("eohibet", "luan", "rrfx", "eebtijvacvb"))
            .withStart(new ClipTime())
            .withEnd(new ClipTime())
            .withLabel("qqxlajr")
            .withInputDefinitions(Arrays.asList(
                new InputDefinition().withIncludedTracks(Arrays.asList(new TrackDescriptor(), new TrackDescriptor(),
                    new TrackDescriptor(), new TrackDescriptor())),
                new InputDefinition().withIncludedTracks(Arrays.asList(new TrackDescriptor()))))
            .withAssetName("bgomfgbegl");
        model = BinaryData.fromObject(model).toObject(JobInputAsset.class);
        Assertions.assertEquals("eohibet", model.files().get(0));
        Assertions.assertEquals("qqxlajr", model.label());
        Assertions.assertEquals("bgomfgbegl", model.assetName());
    }
}
