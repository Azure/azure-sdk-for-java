// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.models.AkamaiAccessControl;
import com.azure.resourcemanager.mediaservices.models.AkamaiSignatureHeaderAuthenticationKey;
import com.azure.resourcemanager.mediaservices.models.IpAccessControl;
import com.azure.resourcemanager.mediaservices.models.IpRange;
import com.azure.resourcemanager.mediaservices.models.StreamingEndpointAccessControl;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class StreamingEndpointAccessControlTests {
    @Test
    public void testDeserialize() {
        StreamingEndpointAccessControl model =
            BinaryData
                .fromString(
                    "{\"akamai\":{\"akamaiSignatureHeaderAuthenticationKeyList\":[{\"identifier\":\"vutpthjoxo\",\"base64Key\":\"msksbp\",\"expiration\":\"2021-06-19T14:04:44Z\"},{\"identifier\":\"oljxkcgx\",\"base64Key\":\"xsffgcviz\",\"expiration\":\"2021-10-31T10:15:37Z\"},{\"identifier\":\"l\",\"base64Key\":\"lyoupfgfbkju\",\"expiration\":\"2021-04-30T06:19:59Z\"},{\"identifier\":\"gkfmins\",\"base64Key\":\"wzf\",\"expiration\":\"2021-08-27T16:45:57Z\"}]},\"ip\":{\"allow\":[{\"name\":\"lahb\",\"address\":\"ctxtgzukxi\",\"subnetPrefixLength\":179532208},{\"name\":\"tg\",\"address\":\"q\",\"subnetPrefixLength\":2013453223}]}}")
                .toObject(StreamingEndpointAccessControl.class);
        Assertions
            .assertEquals(
                "vutpthjoxo", model.akamai().akamaiSignatureHeaderAuthenticationKeyList().get(0).identifier());
        Assertions
            .assertEquals("msksbp", model.akamai().akamaiSignatureHeaderAuthenticationKeyList().get(0).base64Key());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-06-19T14:04:44Z"),
                model.akamai().akamaiSignatureHeaderAuthenticationKeyList().get(0).expiration());
        Assertions.assertEquals("lahb", model.ip().allow().get(0).name());
        Assertions.assertEquals("ctxtgzukxi", model.ip().allow().get(0).address());
        Assertions.assertEquals(179532208, model.ip().allow().get(0).subnetPrefixLength());
    }

    @Test
    public void testSerialize() {
        StreamingEndpointAccessControl model =
            new StreamingEndpointAccessControl()
                .withAkamai(
                    new AkamaiAccessControl()
                        .withAkamaiSignatureHeaderAuthenticationKeyList(
                            Arrays
                                .asList(
                                    new AkamaiSignatureHeaderAuthenticationKey()
                                        .withIdentifier("vutpthjoxo")
                                        .withBase64Key("msksbp")
                                        .withExpiration(OffsetDateTime.parse("2021-06-19T14:04:44Z")),
                                    new AkamaiSignatureHeaderAuthenticationKey()
                                        .withIdentifier("oljxkcgx")
                                        .withBase64Key("xsffgcviz")
                                        .withExpiration(OffsetDateTime.parse("2021-10-31T10:15:37Z")),
                                    new AkamaiSignatureHeaderAuthenticationKey()
                                        .withIdentifier("l")
                                        .withBase64Key("lyoupfgfbkju")
                                        .withExpiration(OffsetDateTime.parse("2021-04-30T06:19:59Z")),
                                    new AkamaiSignatureHeaderAuthenticationKey()
                                        .withIdentifier("gkfmins")
                                        .withBase64Key("wzf")
                                        .withExpiration(OffsetDateTime.parse("2021-08-27T16:45:57Z")))))
                .withIp(
                    new IpAccessControl()
                        .withAllow(
                            Arrays
                                .asList(
                                    new IpRange()
                                        .withName("lahb")
                                        .withAddress("ctxtgzukxi")
                                        .withSubnetPrefixLength(179532208),
                                    new IpRange().withName("tg").withAddress("q").withSubnetPrefixLength(2013453223))));
        model = BinaryData.fromObject(model).toObject(StreamingEndpointAccessControl.class);
        Assertions
            .assertEquals(
                "vutpthjoxo", model.akamai().akamaiSignatureHeaderAuthenticationKeyList().get(0).identifier());
        Assertions
            .assertEquals("msksbp", model.akamai().akamaiSignatureHeaderAuthenticationKeyList().get(0).base64Key());
        Assertions
            .assertEquals(
                OffsetDateTime.parse("2021-06-19T14:04:44Z"),
                model.akamai().akamaiSignatureHeaderAuthenticationKeyList().get(0).expiration());
        Assertions.assertEquals("lahb", model.ip().allow().get(0).name());
        Assertions.assertEquals("ctxtgzukxi", model.ip().allow().get(0).address());
        Assertions.assertEquals(179532208, model.ip().allow().get(0).subnetPrefixLength());
    }
}
