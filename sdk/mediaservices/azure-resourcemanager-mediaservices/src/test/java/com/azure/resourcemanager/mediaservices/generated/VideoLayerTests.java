// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.models.VideoLayer;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class VideoLayerTests {
    @Test
    public void testDeserialize() {
        VideoLayer model =
            BinaryData
                .fromString(
                    "{\"bitrate\":1170150782,\"maxBitrate\":2131890526,\"bFrames\":1656349594,\"frameRate\":\"lbqvgaqvlgafcqu\",\"slices\":1673938482,\"adaptiveBFrame\":true,\"width\":\"nwsdtutnwlduyc\",\"height\":\"zhyrmewipmve\",\"label\":\"xukuqgsj\"}")
                .toObject(VideoLayer.class);
        Assertions.assertEquals("nwsdtutnwlduyc", model.width());
        Assertions.assertEquals("zhyrmewipmve", model.height());
        Assertions.assertEquals("xukuqgsj", model.label());
        Assertions.assertEquals(1170150782, model.bitrate());
        Assertions.assertEquals(2131890526, model.maxBitrate());
        Assertions.assertEquals(1656349594, model.bFrames());
        Assertions.assertEquals("lbqvgaqvlgafcqu", model.frameRate());
        Assertions.assertEquals(1673938482, model.slices());
        Assertions.assertEquals(true, model.adaptiveBFrame());
    }

    @Test
    public void testSerialize() {
        VideoLayer model =
            new VideoLayer()
                .withWidth("nwsdtutnwlduyc")
                .withHeight("zhyrmewipmve")
                .withLabel("xukuqgsj")
                .withBitrate(1170150782)
                .withMaxBitrate(2131890526)
                .withBFrames(1656349594)
                .withFrameRate("lbqvgaqvlgafcqu")
                .withSlices(1673938482)
                .withAdaptiveBFrame(true);
        model = BinaryData.fromObject(model).toObject(VideoLayer.class);
        Assertions.assertEquals("nwsdtutnwlduyc", model.width());
        Assertions.assertEquals("zhyrmewipmve", model.height());
        Assertions.assertEquals("xukuqgsj", model.label());
        Assertions.assertEquals(1170150782, model.bitrate());
        Assertions.assertEquals(2131890526, model.maxBitrate());
        Assertions.assertEquals(1656349594, model.bFrames());
        Assertions.assertEquals("lbqvgaqvlgafcqu", model.frameRate());
        Assertions.assertEquals(1673938482, model.slices());
        Assertions.assertEquals(true, model.adaptiveBFrame());
    }
}
