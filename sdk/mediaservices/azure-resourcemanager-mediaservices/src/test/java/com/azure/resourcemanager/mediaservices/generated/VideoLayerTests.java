// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.models.VideoLayer;
import org.junit.jupiter.api.Assertions;

public final class VideoLayerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VideoLayer model = BinaryData.fromString(
            "{\"bitrate\":187526121,\"maxBitrate\":759312882,\"bFrames\":957966922,\"frameRate\":\"hnakzyb\",\"slices\":549542779,\"adaptiveBFrame\":false,\"width\":\"ksyxkyxvxevblbje\",\"height\":\"ljlageuaulxu\",\"label\":\"mjbnk\"}")
            .toObject(VideoLayer.class);
        Assertions.assertEquals("ksyxkyxvxevblbje", model.width());
        Assertions.assertEquals("ljlageuaulxu", model.height());
        Assertions.assertEquals("mjbnk", model.label());
        Assertions.assertEquals(187526121, model.bitrate());
        Assertions.assertEquals(759312882, model.maxBitrate());
        Assertions.assertEquals(957966922, model.bFrames());
        Assertions.assertEquals("hnakzyb", model.frameRate());
        Assertions.assertEquals(549542779, model.slices());
        Assertions.assertEquals(false, model.adaptiveBFrame());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VideoLayer model = new VideoLayer().withWidth("ksyxkyxvxevblbje")
            .withHeight("ljlageuaulxu")
            .withLabel("mjbnk")
            .withBitrate(187526121)
            .withMaxBitrate(759312882)
            .withBFrames(957966922)
            .withFrameRate("hnakzyb")
            .withSlices(549542779)
            .withAdaptiveBFrame(false);
        model = BinaryData.fromObject(model).toObject(VideoLayer.class);
        Assertions.assertEquals("ksyxkyxvxevblbje", model.width());
        Assertions.assertEquals("ljlageuaulxu", model.height());
        Assertions.assertEquals("mjbnk", model.label());
        Assertions.assertEquals(187526121, model.bitrate());
        Assertions.assertEquals(759312882, model.maxBitrate());
        Assertions.assertEquals(957966922, model.bFrames());
        Assertions.assertEquals("hnakzyb", model.frameRate());
        Assertions.assertEquals(549542779, model.slices());
        Assertions.assertEquals(false, model.adaptiveBFrame());
    }
}
