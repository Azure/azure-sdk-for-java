// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.models.VideoLayer;
import org.junit.jupiter.api.Assertions;

public final class VideoLayerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VideoLayer model =
            BinaryData
                .fromString(
                    "{\"bitrate\":429689436,\"maxBitrate\":90585391,\"bFrames\":151793614,\"frameRate\":\"pncur\",\"slices\":913086384,\"adaptiveBFrame\":false,\"width\":\"thtywub\",\"height\":\"bihwqknfdnt\",\"label\":\"chrdgoihxumwcto\"}")
                .toObject(VideoLayer.class);
        Assertions.assertEquals("thtywub", model.width());
        Assertions.assertEquals("bihwqknfdnt", model.height());
        Assertions.assertEquals("chrdgoihxumwcto", model.label());
        Assertions.assertEquals(429689436, model.bitrate());
        Assertions.assertEquals(90585391, model.maxBitrate());
        Assertions.assertEquals(151793614, model.bFrames());
        Assertions.assertEquals("pncur", model.frameRate());
        Assertions.assertEquals(913086384, model.slices());
        Assertions.assertEquals(false, model.adaptiveBFrame());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VideoLayer model =
            new VideoLayer()
                .withWidth("thtywub")
                .withHeight("bihwqknfdnt")
                .withLabel("chrdgoihxumwcto")
                .withBitrate(429689436)
                .withMaxBitrate(90585391)
                .withBFrames(151793614)
                .withFrameRate("pncur")
                .withSlices(913086384)
                .withAdaptiveBFrame(false);
        model = BinaryData.fromObject(model).toObject(VideoLayer.class);
        Assertions.assertEquals("thtywub", model.width());
        Assertions.assertEquals("bihwqknfdnt", model.height());
        Assertions.assertEquals("chrdgoihxumwcto", model.label());
        Assertions.assertEquals(429689436, model.bitrate());
        Assertions.assertEquals(90585391, model.maxBitrate());
        Assertions.assertEquals(151793614, model.bFrames());
        Assertions.assertEquals("pncur", model.frameRate());
        Assertions.assertEquals(913086384, model.slices());
        Assertions.assertEquals(false, model.adaptiveBFrame());
    }
}
