// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mediaservices.fluent.models.AssetFilterInner;
import com.azure.resourcemanager.mediaservices.models.FilterTrackSelection;
import com.azure.resourcemanager.mediaservices.models.FirstQuality;
import com.azure.resourcemanager.mediaservices.models.PresentationTimeRange;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class AssetFilterInnerTests {
    @Test
    public void testDeserialize() {
        AssetFilterInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"presentationTimeRange\":{\"startTimestamp\":2907518339137583712,\"endTimestamp\":7509562279905415631,\"presentationWindowDuration\":8609715155580942316,\"liveBackoffDuration\":8208084425090392021,\"timescale\":6701205030763559391,\"forceEndTimestamp\":true},\"firstQuality\":{\"bitrate\":1628145340},\"tracks\":[{\"trackSelections\":[]},{\"trackSelections\":[]},{\"trackSelections\":[]},{\"trackSelections\":[]}]},\"id\":\"rw\",\"name\":\"ueiotwmcdyt\",\"type\":\"x\"}")
                .toObject(AssetFilterInner.class);
        Assertions.assertEquals(2907518339137583712L, model.presentationTimeRange().startTimestamp());
        Assertions.assertEquals(7509562279905415631L, model.presentationTimeRange().endTimestamp());
        Assertions.assertEquals(8609715155580942316L, model.presentationTimeRange().presentationWindowDuration());
        Assertions.assertEquals(8208084425090392021L, model.presentationTimeRange().liveBackoffDuration());
        Assertions.assertEquals(6701205030763559391L, model.presentationTimeRange().timescale());
        Assertions.assertEquals(true, model.presentationTimeRange().forceEndTimestamp());
        Assertions.assertEquals(1628145340, model.firstQuality().bitrate());
    }

    @Test
    public void testSerialize() {
        AssetFilterInner model =
            new AssetFilterInner()
                .withPresentationTimeRange(
                    new PresentationTimeRange()
                        .withStartTimestamp(2907518339137583712L)
                        .withEndTimestamp(7509562279905415631L)
                        .withPresentationWindowDuration(8609715155580942316L)
                        .withLiveBackoffDuration(8208084425090392021L)
                        .withTimescale(6701205030763559391L)
                        .withForceEndTimestamp(true))
                .withFirstQuality(new FirstQuality().withBitrate(1628145340))
                .withTracks(
                    Arrays
                        .asList(
                            new FilterTrackSelection().withTrackSelections(Arrays.asList()),
                            new FilterTrackSelection().withTrackSelections(Arrays.asList()),
                            new FilterTrackSelection().withTrackSelections(Arrays.asList()),
                            new FilterTrackSelection().withTrackSelections(Arrays.asList())));
        model = BinaryData.fromObject(model).toObject(AssetFilterInner.class);
        Assertions.assertEquals(2907518339137583712L, model.presentationTimeRange().startTimestamp());
        Assertions.assertEquals(7509562279905415631L, model.presentationTimeRange().endTimestamp());
        Assertions.assertEquals(8609715155580942316L, model.presentationTimeRange().presentationWindowDuration());
        Assertions.assertEquals(8208084425090392021L, model.presentationTimeRange().liveBackoffDuration());
        Assertions.assertEquals(6701205030763559391L, model.presentationTimeRange().timescale());
        Assertions.assertEquals(true, model.presentationTimeRange().forceEndTimestamp());
        Assertions.assertEquals(1628145340, model.firstQuality().bitrate());
    }
}
