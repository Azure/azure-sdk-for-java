/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.desktopvirtualization.v2020_10_19_preview;

import com.microsoft.azure.arm.collection.SupportsCreating;
import rx.Completable;
import rx.Observable;
import com.microsoft.azure.management.desktopvirtualization.v2020_10_19_preview.implementation.MSIXPackagesInner;
import com.microsoft.azure.arm.model.HasInner;

/**
 * Type representing MSIXPackages.
 */
public interface MSIXPackages extends SupportsCreating<MSIXPackage.DefinitionStages.Blank>, HasInner<MSIXPackagesInner> {
    /**
     * Get a msixpackage.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hostPoolName The name of the host pool within the specified resource group
     * @param msixPackageFullName The version specific package full name of the MSIX package within specified hostpool
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<MSIXPackage> getAsync(String resourceGroupName, String hostPoolName, String msixPackageFullName);

    /**
     * List MSIX packages in hostpool.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hostPoolName The name of the host pool within the specified resource group
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<MSIXPackage> listAsync(final String resourceGroupName, final String hostPoolName);

    /**
     * Remove an MSIX Package.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hostPoolName The name of the host pool within the specified resource group
     * @param msixPackageFullName The version specific package full name of the MSIX package within specified hostpool
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable deleteAsync(String resourceGroupName, String hostPoolName, String msixPackageFullName);

}
