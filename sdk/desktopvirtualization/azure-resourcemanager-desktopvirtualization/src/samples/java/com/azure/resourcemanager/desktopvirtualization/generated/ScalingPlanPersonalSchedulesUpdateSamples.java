// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.generated;

import com.azure.resourcemanager.desktopvirtualization.models.ScalingPlanPersonalSchedule;
import com.azure.resourcemanager.desktopvirtualization.models.SessionHandlingOperation;
import com.azure.resourcemanager.desktopvirtualization.models.SetStartVMOnConnect;
import com.azure.resourcemanager.desktopvirtualization.models.Time;

/**
 * Samples for ScalingPlanPersonalSchedules Update.
 */
public final class ScalingPlanPersonalSchedulesUpdateSamples {
    /*
     * x-ms-original-file:
     * specification/desktopvirtualization/resource-manager/Microsoft.DesktopVirtualization/stable/2024-04-03/examples/
     * ScalingPlanPersonalSchedule_Update.json
     */
    /**
     * Sample code: ScalingPlanPersonalSchedules_Update.
     * 
     * @param manager Entry point to DesktopVirtualizationManager.
     */
    public static void scalingPlanPersonalSchedulesUpdate(
        com.azure.resourcemanager.desktopvirtualization.DesktopVirtualizationManager manager) {
        ScalingPlanPersonalSchedule resource = manager.scalingPlanPersonalSchedules()
            .getWithResponse("resourceGroup1", "scalingPlan1", "scalingPlanScheduleWeekdays1",
                com.azure.core.util.Context.NONE)
            .getValue();
        resource.update()
            .withPeakStartTime(new Time().withHour(8).withMinute(0))
            .withPeakActionOnDisconnect(SessionHandlingOperation.NONE)
            .withPeakMinutesToWaitOnDisconnect(10)
            .withPeakActionOnLogoff(SessionHandlingOperation.DEALLOCATE)
            .withPeakMinutesToWaitOnLogoff(10)
            .withRampDownStartTime(new Time().withHour(18).withMinute(0))
            .withRampDownActionOnDisconnect(SessionHandlingOperation.NONE)
            .withRampDownMinutesToWaitOnDisconnect(10)
            .withRampDownActionOnLogoff(SessionHandlingOperation.DEALLOCATE)
            .withRampDownMinutesToWaitOnLogoff(10)
            .withOffPeakStartTime(new Time().withHour(20).withMinute(0))
            .withOffPeakStartVMOnConnect(SetStartVMOnConnect.DISABLE)
            .withOffPeakActionOnDisconnect(SessionHandlingOperation.NONE)
            .withOffPeakMinutesToWaitOnDisconnect(10)
            .withOffPeakActionOnLogoff(SessionHandlingOperation.DEALLOCATE)
            .withOffPeakMinutesToWaitOnLogoff(10)
            .apply();
    }
}
