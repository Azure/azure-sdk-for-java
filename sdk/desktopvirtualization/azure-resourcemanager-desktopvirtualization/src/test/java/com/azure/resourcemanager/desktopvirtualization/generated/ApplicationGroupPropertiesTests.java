// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.desktopvirtualization.fluent.models.ApplicationGroupProperties;
import com.azure.resourcemanager.desktopvirtualization.models.ApplicationGroupType;
import org.junit.jupiter.api.Assertions;

public final class ApplicationGroupPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ApplicationGroupProperties model =
            BinaryData
                .fromString(
                    "{\"objectId\":\"tppjflcx\",\"description\":\"aokonzmnsik\",\"friendlyName\":\"kqze\",\"hostPoolArmPath\":\"qkdltfz\",\"workspaceArmPath\":\"hhvh\",\"applicationGroupType\":\"RemoteApp\",\"cloudPcResource\":true,\"showInFeed\":true}")
                .toObject(ApplicationGroupProperties.class);
        Assertions.assertEquals("aokonzmnsik", model.description());
        Assertions.assertEquals("kqze", model.friendlyName());
        Assertions.assertEquals("qkdltfz", model.hostPoolArmPath());
        Assertions.assertEquals(ApplicationGroupType.REMOTE_APP, model.applicationGroupType());
        Assertions.assertEquals(true, model.showInFeed());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ApplicationGroupProperties model =
            new ApplicationGroupProperties()
                .withDescription("aokonzmnsik")
                .withFriendlyName("kqze")
                .withHostPoolArmPath("qkdltfz")
                .withApplicationGroupType(ApplicationGroupType.REMOTE_APP)
                .withShowInFeed(true);
        model = BinaryData.fromObject(model).toObject(ApplicationGroupProperties.class);
        Assertions.assertEquals("aokonzmnsik", model.description());
        Assertions.assertEquals("kqze", model.friendlyName());
        Assertions.assertEquals("qkdltfz", model.hostPoolArmPath());
        Assertions.assertEquals(ApplicationGroupType.REMOTE_APP, model.applicationGroupType());
        Assertions.assertEquals(true, model.showInFeed());
    }
}
