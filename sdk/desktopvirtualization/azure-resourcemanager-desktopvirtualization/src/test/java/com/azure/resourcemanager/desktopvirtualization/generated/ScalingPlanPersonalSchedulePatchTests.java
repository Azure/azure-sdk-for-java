// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.desktopvirtualization.models.DayOfWeek;
import com.azure.resourcemanager.desktopvirtualization.models.ScalingPlanPersonalSchedulePatch;
import com.azure.resourcemanager.desktopvirtualization.models.SessionHandlingOperation;
import com.azure.resourcemanager.desktopvirtualization.models.SetStartVMOnConnect;
import com.azure.resourcemanager.desktopvirtualization.models.StartupBehavior;
import com.azure.resourcemanager.desktopvirtualization.models.Time;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ScalingPlanPersonalSchedulePatchTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ScalingPlanPersonalSchedulePatch model = BinaryData.fromString(
            "{\"properties\":{\"daysOfWeek\":[\"Friday\",\"Monday\",\"Saturday\"],\"rampUpStartTime\":{\"hour\":2111014163,\"minute\":716024879},\"rampUpAutoStartHosts\":\"None\",\"rampUpStartVMOnConnect\":\"Enable\",\"rampUpActionOnDisconnect\":\"Hibernate\",\"rampUpMinutesToWaitOnDisconnect\":1365200524,\"rampUpActionOnLogoff\":\"Hibernate\",\"rampUpMinutesToWaitOnLogoff\":1553831435,\"peakStartTime\":{\"hour\":874148827,\"minute\":1616367631},\"peakStartVMOnConnect\":\"Disable\",\"peakActionOnDisconnect\":\"Deallocate\",\"peakMinutesToWaitOnDisconnect\":1579331831,\"peakActionOnLogoff\":\"None\",\"peakMinutesToWaitOnLogoff\":2126872967,\"rampDownStartTime\":{\"hour\":1133541665,\"minute\":956114198},\"rampDownStartVMOnConnect\":\"Enable\",\"rampDownActionOnDisconnect\":\"Deallocate\",\"rampDownMinutesToWaitOnDisconnect\":1787439694,\"rampDownActionOnLogoff\":\"Deallocate\",\"rampDownMinutesToWaitOnLogoff\":477944589,\"offPeakStartTime\":{\"hour\":1477938118,\"minute\":1757000388},\"offPeakStartVMOnConnect\":\"Disable\",\"offPeakActionOnDisconnect\":\"None\",\"offPeakMinutesToWaitOnDisconnect\":1420775781,\"offPeakActionOnLogoff\":\"Hibernate\",\"offPeakMinutesToWaitOnLogoff\":734102755}}")
            .toObject(ScalingPlanPersonalSchedulePatch.class);
        Assertions.assertEquals(DayOfWeek.FRIDAY, model.daysOfWeek().get(0));
        Assertions.assertEquals(2111014163, model.rampUpStartTime().hour());
        Assertions.assertEquals(716024879, model.rampUpStartTime().minute());
        Assertions.assertEquals(StartupBehavior.NONE, model.rampUpAutoStartHosts());
        Assertions.assertEquals(SetStartVMOnConnect.ENABLE, model.rampUpStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.HIBERNATE, model.rampUpActionOnDisconnect());
        Assertions.assertEquals(1365200524, model.rampUpMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.HIBERNATE, model.rampUpActionOnLogoff());
        Assertions.assertEquals(1553831435, model.rampUpMinutesToWaitOnLogoff());
        Assertions.assertEquals(874148827, model.peakStartTime().hour());
        Assertions.assertEquals(1616367631, model.peakStartTime().minute());
        Assertions.assertEquals(SetStartVMOnConnect.DISABLE, model.peakStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.DEALLOCATE, model.peakActionOnDisconnect());
        Assertions.assertEquals(1579331831, model.peakMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.NONE, model.peakActionOnLogoff());
        Assertions.assertEquals(2126872967, model.peakMinutesToWaitOnLogoff());
        Assertions.assertEquals(1133541665, model.rampDownStartTime().hour());
        Assertions.assertEquals(956114198, model.rampDownStartTime().minute());
        Assertions.assertEquals(SetStartVMOnConnect.ENABLE, model.rampDownStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.DEALLOCATE, model.rampDownActionOnDisconnect());
        Assertions.assertEquals(1787439694, model.rampDownMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.DEALLOCATE, model.rampDownActionOnLogoff());
        Assertions.assertEquals(477944589, model.rampDownMinutesToWaitOnLogoff());
        Assertions.assertEquals(1477938118, model.offPeakStartTime().hour());
        Assertions.assertEquals(1757000388, model.offPeakStartTime().minute());
        Assertions.assertEquals(SetStartVMOnConnect.DISABLE, model.offPeakStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.NONE, model.offPeakActionOnDisconnect());
        Assertions.assertEquals(1420775781, model.offPeakMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.HIBERNATE, model.offPeakActionOnLogoff());
        Assertions.assertEquals(734102755, model.offPeakMinutesToWaitOnLogoff());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ScalingPlanPersonalSchedulePatch model = new ScalingPlanPersonalSchedulePatch()
            .withDaysOfWeek(Arrays.asList(DayOfWeek.FRIDAY, DayOfWeek.MONDAY, DayOfWeek.SATURDAY))
            .withRampUpStartTime(new Time().withHour(2111014163).withMinute(716024879))
            .withRampUpAutoStartHosts(StartupBehavior.NONE)
            .withRampUpStartVMOnConnect(SetStartVMOnConnect.ENABLE)
            .withRampUpActionOnDisconnect(SessionHandlingOperation.HIBERNATE)
            .withRampUpMinutesToWaitOnDisconnect(1365200524)
            .withRampUpActionOnLogoff(SessionHandlingOperation.HIBERNATE)
            .withRampUpMinutesToWaitOnLogoff(1553831435)
            .withPeakStartTime(new Time().withHour(874148827).withMinute(1616367631))
            .withPeakStartVMOnConnect(SetStartVMOnConnect.DISABLE)
            .withPeakActionOnDisconnect(SessionHandlingOperation.DEALLOCATE)
            .withPeakMinutesToWaitOnDisconnect(1579331831)
            .withPeakActionOnLogoff(SessionHandlingOperation.NONE)
            .withPeakMinutesToWaitOnLogoff(2126872967)
            .withRampDownStartTime(new Time().withHour(1133541665).withMinute(956114198))
            .withRampDownStartVMOnConnect(SetStartVMOnConnect.ENABLE)
            .withRampDownActionOnDisconnect(SessionHandlingOperation.DEALLOCATE)
            .withRampDownMinutesToWaitOnDisconnect(1787439694)
            .withRampDownActionOnLogoff(SessionHandlingOperation.DEALLOCATE)
            .withRampDownMinutesToWaitOnLogoff(477944589)
            .withOffPeakStartTime(new Time().withHour(1477938118).withMinute(1757000388))
            .withOffPeakStartVMOnConnect(SetStartVMOnConnect.DISABLE)
            .withOffPeakActionOnDisconnect(SessionHandlingOperation.NONE)
            .withOffPeakMinutesToWaitOnDisconnect(1420775781)
            .withOffPeakActionOnLogoff(SessionHandlingOperation.HIBERNATE)
            .withOffPeakMinutesToWaitOnLogoff(734102755);
        model = BinaryData.fromObject(model).toObject(ScalingPlanPersonalSchedulePatch.class);
        Assertions.assertEquals(DayOfWeek.FRIDAY, model.daysOfWeek().get(0));
        Assertions.assertEquals(2111014163, model.rampUpStartTime().hour());
        Assertions.assertEquals(716024879, model.rampUpStartTime().minute());
        Assertions.assertEquals(StartupBehavior.NONE, model.rampUpAutoStartHosts());
        Assertions.assertEquals(SetStartVMOnConnect.ENABLE, model.rampUpStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.HIBERNATE, model.rampUpActionOnDisconnect());
        Assertions.assertEquals(1365200524, model.rampUpMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.HIBERNATE, model.rampUpActionOnLogoff());
        Assertions.assertEquals(1553831435, model.rampUpMinutesToWaitOnLogoff());
        Assertions.assertEquals(874148827, model.peakStartTime().hour());
        Assertions.assertEquals(1616367631, model.peakStartTime().minute());
        Assertions.assertEquals(SetStartVMOnConnect.DISABLE, model.peakStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.DEALLOCATE, model.peakActionOnDisconnect());
        Assertions.assertEquals(1579331831, model.peakMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.NONE, model.peakActionOnLogoff());
        Assertions.assertEquals(2126872967, model.peakMinutesToWaitOnLogoff());
        Assertions.assertEquals(1133541665, model.rampDownStartTime().hour());
        Assertions.assertEquals(956114198, model.rampDownStartTime().minute());
        Assertions.assertEquals(SetStartVMOnConnect.ENABLE, model.rampDownStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.DEALLOCATE, model.rampDownActionOnDisconnect());
        Assertions.assertEquals(1787439694, model.rampDownMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.DEALLOCATE, model.rampDownActionOnLogoff());
        Assertions.assertEquals(477944589, model.rampDownMinutesToWaitOnLogoff());
        Assertions.assertEquals(1477938118, model.offPeakStartTime().hour());
        Assertions.assertEquals(1757000388, model.offPeakStartTime().minute());
        Assertions.assertEquals(SetStartVMOnConnect.DISABLE, model.offPeakStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.NONE, model.offPeakActionOnDisconnect());
        Assertions.assertEquals(1420775781, model.offPeakMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.HIBERNATE, model.offPeakActionOnLogoff());
        Assertions.assertEquals(734102755, model.offPeakMinutesToWaitOnLogoff());
    }
}
