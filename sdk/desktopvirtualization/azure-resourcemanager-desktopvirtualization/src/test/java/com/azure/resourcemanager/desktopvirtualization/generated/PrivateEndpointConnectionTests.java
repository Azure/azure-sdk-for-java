// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.desktopvirtualization.models.PrivateEndpoint;
import com.azure.resourcemanager.desktopvirtualization.models.PrivateEndpointConnection;
import com.azure.resourcemanager.desktopvirtualization.models.PrivateEndpointServiceConnectionStatus;
import com.azure.resourcemanager.desktopvirtualization.models.PrivateLinkServiceConnectionState;
import org.junit.jupiter.api.Assertions;

public final class PrivateEndpointConnectionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateEndpointConnection model = BinaryData.fromString(
            "{\"properties\":{\"groupIds\":[\"qvkoc\",\"cjdkwtnhxbnjbi\",\"sqrglssainq\",\"jwnzlljfmp\"],\"privateEndpoint\":{\"id\":\"bvmgxsabkyqduuji\"},\"privateLinkServiceConnectionState\":{\"status\":\"Approved\",\"description\":\"zdzevndh\",\"actionsRequired\":\"wpdappdsbdkv\"},\"provisioningState\":\"Failed\"},\"id\":\"feusnhut\",\"name\":\"eltmrldhugjzzdat\",\"type\":\"xhocdgeablgphuti\"}")
            .toObject(PrivateEndpointConnection.class);
        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.APPROVED,
            model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("zdzevndh", model.privateLinkServiceConnectionState().description());
        Assertions.assertEquals("wpdappdsbdkv", model.privateLinkServiceConnectionState().actionsRequired());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateEndpointConnection model = new PrivateEndpointConnection().withPrivateEndpoint(new PrivateEndpoint())
            .withPrivateLinkServiceConnectionState(
                new PrivateLinkServiceConnectionState().withStatus(PrivateEndpointServiceConnectionStatus.APPROVED)
                    .withDescription("zdzevndh")
                    .withActionsRequired("wpdappdsbdkv"));
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnection.class);
        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.APPROVED,
            model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("zdzevndh", model.privateLinkServiceConnectionState().description());
        Assertions.assertEquals("wpdappdsbdkv", model.privateLinkServiceConnectionState().actionsRequired());
    }
}
