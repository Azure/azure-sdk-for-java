// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.desktopvirtualization.DesktopVirtualizationManager;
import com.azure.resourcemanager.desktopvirtualization.models.MsixPackage;
import com.azure.resourcemanager.desktopvirtualization.models.MsixPackageApplications;
import com.azure.resourcemanager.desktopvirtualization.models.MsixPackageDependencies;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class MsixPackagesCreateOrUpdateWithResponseMockTests {
    @Test
    public void testCreateOrUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"imagePath\":\"tmvmmagoaqylkjz\",\"packageName\":\"iua\",\"packageFamilyName\":\"cgm\",\"displayName\":\"tpfinzcpdltkr\",\"packageRelativePath\":\"jmtbd\",\"isRegularRegistration\":false,\"isActive\":false,\"packageDependencies\":[{\"dependencyName\":\"zhomp\",\"publisher\":\"qdurelyujlfyoum\",\"minVersion\":\"kyeclcdigpta\"}],\"version\":\"rzmq\",\"lastUpdated\":\"2021-06-01T07:57:22Z\",\"packageApplications\":[{\"appId\":\"joclxiutgjcyzy\",\"description\":\"dnrqjbtxj\",\"appUserModelID\":\"oqa\",\"friendlyName\":\"z\",\"iconImageName\":\"hfw\"}]},\"id\":\"tbwbqamteuli\",\"name\":\"slpkcvmwfauxxep\",\"type\":\"ywbo\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DesktopVirtualizationManager manager = DesktopVirtualizationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        MsixPackage response = manager.msixPackages()
            .define("pkpztrg")
            .withExistingHostPool("dm", "rgjfoknubnoi")
            .withImagePath("x")
            .withPackageName("oqraswugyxpqi")
            .withPackageFamilyName("eialwvskb")
            .withDisplayName("z")
            .withPackageRelativePath("aq")
            .withIsRegularRegistration(false)
            .withIsActive(false)
            .withPackageDependencies(Arrays.asList(
                new MsixPackageDependencies().withDependencyName("ujpdsxzak")
                    .withPublisher("jkmvbi")
                    .withMinVersion("jofqcvovjufycs"),
                new MsixPackageDependencies().withDependencyName("lbemyej")
                    .withPublisher("iuxegth")
                    .withMinVersion("tudaw")))
            .withVersion("jfel")
            .withLastUpdated(OffsetDateTime.parse("2021-04-18T11:59:41Z"))
            .withPackageApplications(Arrays.asList(
                new MsixPackageApplications().withAppId("bgqnz")
                    .withDescription("h")
                    .withAppUserModelId("lialwcjgckbbcccg")
                    .withFriendlyName("raoxnyuff")
                    .withIconImageName("sgftipwc"),
                new MsixPackageApplications().withAppId("bh")
                    .withDescription("dxyurnpnuhza")
                    .withAppUserModelId("cnuhiigbylbuigv")
                    .withFriendlyName("atvcrkdlbnbq")
                    .withIconImageName("h")))
            .create();

        Assertions.assertEquals("tmvmmagoaqylkjz", response.imagePath());
        Assertions.assertEquals("iua", response.packageName());
        Assertions.assertEquals("cgm", response.packageFamilyName());
        Assertions.assertEquals("tpfinzcpdltkr", response.displayName());
        Assertions.assertEquals("jmtbd", response.packageRelativePath());
        Assertions.assertEquals(false, response.isRegularRegistration());
        Assertions.assertEquals(false, response.isActive());
        Assertions.assertEquals("zhomp", response.packageDependencies().get(0).dependencyName());
        Assertions.assertEquals("qdurelyujlfyoum", response.packageDependencies().get(0).publisher());
        Assertions.assertEquals("kyeclcdigpta", response.packageDependencies().get(0).minVersion());
        Assertions.assertEquals("rzmq", response.version());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-01T07:57:22Z"), response.lastUpdated());
        Assertions.assertEquals("joclxiutgjcyzy", response.packageApplications().get(0).appId());
        Assertions.assertEquals("dnrqjbtxj", response.packageApplications().get(0).description());
        Assertions.assertEquals("oqa", response.packageApplications().get(0).appUserModelId());
        Assertions.assertEquals("z", response.packageApplications().get(0).friendlyName());
        Assertions.assertEquals("hfw", response.packageApplications().get(0).iconImageName());
    }
}
