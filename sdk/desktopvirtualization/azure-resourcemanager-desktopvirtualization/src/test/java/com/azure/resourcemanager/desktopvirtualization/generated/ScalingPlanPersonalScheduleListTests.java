// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanPersonalScheduleInner;
import com.azure.resourcemanager.desktopvirtualization.models.DayOfWeek;
import com.azure.resourcemanager.desktopvirtualization.models.ScalingPlanPersonalScheduleList;
import com.azure.resourcemanager.desktopvirtualization.models.SessionHandlingOperation;
import com.azure.resourcemanager.desktopvirtualization.models.SetStartVMOnConnect;
import com.azure.resourcemanager.desktopvirtualization.models.StartupBehavior;
import com.azure.resourcemanager.desktopvirtualization.models.Time;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ScalingPlanPersonalScheduleListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ScalingPlanPersonalScheduleList model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"daysOfWeek\":[\"Tuesday\",\"Saturday\",\"Monday\"],\"rampUpStartTime\":{\"hour\":1130044611,\"minute\":1074784162},\"rampUpAutoStartHosts\":\"None\",\"rampUpStartVMOnConnect\":\"Disable\",\"rampUpActionOnDisconnect\":\"None\",\"rampUpMinutesToWaitOnDisconnect\":432099850,\"rampUpActionOnLogoff\":\"Deallocate\",\"rampUpMinutesToWaitOnLogoff\":1479768723,\"peakStartTime\":{\"hour\":681452902,\"minute\":1729172335},\"peakStartVMOnConnect\":\"Disable\",\"peakActionOnDisconnect\":\"None\",\"peakMinutesToWaitOnDisconnect\":1126761283,\"peakActionOnLogoff\":\"Deallocate\",\"peakMinutesToWaitOnLogoff\":132200951,\"rampDownStartTime\":{\"hour\":1800612686,\"minute\":294736838},\"rampDownStartVMOnConnect\":\"Disable\",\"rampDownActionOnDisconnect\":\"Hibernate\",\"rampDownMinutesToWaitOnDisconnect\":782103033,\"rampDownActionOnLogoff\":\"None\",\"rampDownMinutesToWaitOnLogoff\":1427716289,\"offPeakStartTime\":{\"hour\":1655484798,\"minute\":2047683473},\"offPeakStartVMOnConnect\":\"Disable\",\"offPeakActionOnDisconnect\":\"Hibernate\",\"offPeakMinutesToWaitOnDisconnect\":1924710891,\"offPeakActionOnLogoff\":\"Deallocate\",\"offPeakMinutesToWaitOnLogoff\":1117250592},\"id\":\"qolbgyc\",\"name\":\"uie\",\"type\":\"tgccymvaolpss\"}],\"nextLink\":\"lfmmdnbbglzpswi\"}")
            .toObject(ScalingPlanPersonalScheduleList.class);
        Assertions.assertEquals(DayOfWeek.TUESDAY, model.value().get(0).daysOfWeek().get(0));
        Assertions.assertEquals(1130044611, model.value().get(0).rampUpStartTime().hour());
        Assertions.assertEquals(1074784162, model.value().get(0).rampUpStartTime().minute());
        Assertions.assertEquals(StartupBehavior.NONE, model.value().get(0).rampUpAutoStartHosts());
        Assertions.assertEquals(SetStartVMOnConnect.DISABLE, model.value().get(0).rampUpStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.NONE, model.value().get(0).rampUpActionOnDisconnect());
        Assertions.assertEquals(432099850, model.value().get(0).rampUpMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.DEALLOCATE, model.value().get(0).rampUpActionOnLogoff());
        Assertions.assertEquals(1479768723, model.value().get(0).rampUpMinutesToWaitOnLogoff());
        Assertions.assertEquals(681452902, model.value().get(0).peakStartTime().hour());
        Assertions.assertEquals(1729172335, model.value().get(0).peakStartTime().minute());
        Assertions.assertEquals(SetStartVMOnConnect.DISABLE, model.value().get(0).peakStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.NONE, model.value().get(0).peakActionOnDisconnect());
        Assertions.assertEquals(1126761283, model.value().get(0).peakMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.DEALLOCATE, model.value().get(0).peakActionOnLogoff());
        Assertions.assertEquals(132200951, model.value().get(0).peakMinutesToWaitOnLogoff());
        Assertions.assertEquals(1800612686, model.value().get(0).rampDownStartTime().hour());
        Assertions.assertEquals(294736838, model.value().get(0).rampDownStartTime().minute());
        Assertions.assertEquals(SetStartVMOnConnect.DISABLE, model.value().get(0).rampDownStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.HIBERNATE, model.value().get(0).rampDownActionOnDisconnect());
        Assertions.assertEquals(782103033, model.value().get(0).rampDownMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.NONE, model.value().get(0).rampDownActionOnLogoff());
        Assertions.assertEquals(1427716289, model.value().get(0).rampDownMinutesToWaitOnLogoff());
        Assertions.assertEquals(1655484798, model.value().get(0).offPeakStartTime().hour());
        Assertions.assertEquals(2047683473, model.value().get(0).offPeakStartTime().minute());
        Assertions.assertEquals(SetStartVMOnConnect.DISABLE, model.value().get(0).offPeakStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.HIBERNATE, model.value().get(0).offPeakActionOnDisconnect());
        Assertions.assertEquals(1924710891, model.value().get(0).offPeakMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.DEALLOCATE, model.value().get(0).offPeakActionOnLogoff());
        Assertions.assertEquals(1117250592, model.value().get(0).offPeakMinutesToWaitOnLogoff());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ScalingPlanPersonalScheduleList model
            = new ScalingPlanPersonalScheduleList().withValue(Arrays.asList(new ScalingPlanPersonalScheduleInner()
                .withDaysOfWeek(Arrays.asList(DayOfWeek.TUESDAY, DayOfWeek.SATURDAY, DayOfWeek.MONDAY))
                .withRampUpStartTime(new Time().withHour(1130044611).withMinute(1074784162))
                .withRampUpAutoStartHosts(StartupBehavior.NONE)
                .withRampUpStartVMOnConnect(SetStartVMOnConnect.DISABLE)
                .withRampUpActionOnDisconnect(SessionHandlingOperation.NONE)
                .withRampUpMinutesToWaitOnDisconnect(432099850)
                .withRampUpActionOnLogoff(SessionHandlingOperation.DEALLOCATE)
                .withRampUpMinutesToWaitOnLogoff(1479768723)
                .withPeakStartTime(new Time().withHour(681452902).withMinute(1729172335))
                .withPeakStartVMOnConnect(SetStartVMOnConnect.DISABLE)
                .withPeakActionOnDisconnect(SessionHandlingOperation.NONE)
                .withPeakMinutesToWaitOnDisconnect(1126761283)
                .withPeakActionOnLogoff(SessionHandlingOperation.DEALLOCATE)
                .withPeakMinutesToWaitOnLogoff(132200951)
                .withRampDownStartTime(new Time().withHour(1800612686).withMinute(294736838))
                .withRampDownStartVMOnConnect(SetStartVMOnConnect.DISABLE)
                .withRampDownActionOnDisconnect(SessionHandlingOperation.HIBERNATE)
                .withRampDownMinutesToWaitOnDisconnect(782103033)
                .withRampDownActionOnLogoff(SessionHandlingOperation.NONE)
                .withRampDownMinutesToWaitOnLogoff(1427716289)
                .withOffPeakStartTime(new Time().withHour(1655484798).withMinute(2047683473))
                .withOffPeakStartVMOnConnect(SetStartVMOnConnect.DISABLE)
                .withOffPeakActionOnDisconnect(SessionHandlingOperation.HIBERNATE)
                .withOffPeakMinutesToWaitOnDisconnect(1924710891)
                .withOffPeakActionOnLogoff(SessionHandlingOperation.DEALLOCATE)
                .withOffPeakMinutesToWaitOnLogoff(1117250592)));
        model = BinaryData.fromObject(model).toObject(ScalingPlanPersonalScheduleList.class);
        Assertions.assertEquals(DayOfWeek.TUESDAY, model.value().get(0).daysOfWeek().get(0));
        Assertions.assertEquals(1130044611, model.value().get(0).rampUpStartTime().hour());
        Assertions.assertEquals(1074784162, model.value().get(0).rampUpStartTime().minute());
        Assertions.assertEquals(StartupBehavior.NONE, model.value().get(0).rampUpAutoStartHosts());
        Assertions.assertEquals(SetStartVMOnConnect.DISABLE, model.value().get(0).rampUpStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.NONE, model.value().get(0).rampUpActionOnDisconnect());
        Assertions.assertEquals(432099850, model.value().get(0).rampUpMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.DEALLOCATE, model.value().get(0).rampUpActionOnLogoff());
        Assertions.assertEquals(1479768723, model.value().get(0).rampUpMinutesToWaitOnLogoff());
        Assertions.assertEquals(681452902, model.value().get(0).peakStartTime().hour());
        Assertions.assertEquals(1729172335, model.value().get(0).peakStartTime().minute());
        Assertions.assertEquals(SetStartVMOnConnect.DISABLE, model.value().get(0).peakStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.NONE, model.value().get(0).peakActionOnDisconnect());
        Assertions.assertEquals(1126761283, model.value().get(0).peakMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.DEALLOCATE, model.value().get(0).peakActionOnLogoff());
        Assertions.assertEquals(132200951, model.value().get(0).peakMinutesToWaitOnLogoff());
        Assertions.assertEquals(1800612686, model.value().get(0).rampDownStartTime().hour());
        Assertions.assertEquals(294736838, model.value().get(0).rampDownStartTime().minute());
        Assertions.assertEquals(SetStartVMOnConnect.DISABLE, model.value().get(0).rampDownStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.HIBERNATE, model.value().get(0).rampDownActionOnDisconnect());
        Assertions.assertEquals(782103033, model.value().get(0).rampDownMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.NONE, model.value().get(0).rampDownActionOnLogoff());
        Assertions.assertEquals(1427716289, model.value().get(0).rampDownMinutesToWaitOnLogoff());
        Assertions.assertEquals(1655484798, model.value().get(0).offPeakStartTime().hour());
        Assertions.assertEquals(2047683473, model.value().get(0).offPeakStartTime().minute());
        Assertions.assertEquals(SetStartVMOnConnect.DISABLE, model.value().get(0).offPeakStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.HIBERNATE, model.value().get(0).offPeakActionOnDisconnect());
        Assertions.assertEquals(1924710891, model.value().get(0).offPeakMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.DEALLOCATE, model.value().get(0).offPeakActionOnLogoff());
        Assertions.assertEquals(1117250592, model.value().get(0).offPeakMinutesToWaitOnLogoff());
    }
}
