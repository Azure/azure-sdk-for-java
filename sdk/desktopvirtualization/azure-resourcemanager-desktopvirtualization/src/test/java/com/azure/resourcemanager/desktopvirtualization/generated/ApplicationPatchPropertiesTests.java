// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.desktopvirtualization.fluent.models.ApplicationPatchProperties;
import com.azure.resourcemanager.desktopvirtualization.models.CommandLineSetting;
import com.azure.resourcemanager.desktopvirtualization.models.RemoteApplicationType;
import org.junit.jupiter.api.Assertions;

public final class ApplicationPatchPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ApplicationPatchProperties model = BinaryData.fromString(
            "{\"description\":\"ivx\",\"friendlyName\":\"zel\",\"filePath\":\"irels\",\"commandLineSetting\":\"DoNotAllow\",\"commandLineArguments\":\"nwabfatkldd\",\"showInPortal\":true,\"iconPath\":\"wuaanoz\",\"iconIndex\":1294061553,\"msixPackageFamilyName\":\"hyoulpjr\",\"msixPackageApplicationId\":\"ag\",\"applicationType\":\"InBuilt\"}")
            .toObject(ApplicationPatchProperties.class);
        Assertions.assertEquals("ivx", model.description());
        Assertions.assertEquals("zel", model.friendlyName());
        Assertions.assertEquals("irels", model.filePath());
        Assertions.assertEquals(CommandLineSetting.DO_NOT_ALLOW, model.commandLineSetting());
        Assertions.assertEquals("nwabfatkldd", model.commandLineArguments());
        Assertions.assertEquals(true, model.showInPortal());
        Assertions.assertEquals("wuaanoz", model.iconPath());
        Assertions.assertEquals(1294061553, model.iconIndex());
        Assertions.assertEquals("hyoulpjr", model.msixPackageFamilyName());
        Assertions.assertEquals("ag", model.msixPackageApplicationId());
        Assertions.assertEquals(RemoteApplicationType.IN_BUILT, model.applicationType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ApplicationPatchProperties model = new ApplicationPatchProperties().withDescription("ivx")
            .withFriendlyName("zel")
            .withFilePath("irels")
            .withCommandLineSetting(CommandLineSetting.DO_NOT_ALLOW)
            .withCommandLineArguments("nwabfatkldd")
            .withShowInPortal(true)
            .withIconPath("wuaanoz")
            .withIconIndex(1294061553)
            .withMsixPackageFamilyName("hyoulpjr")
            .withMsixPackageApplicationId("ag")
            .withApplicationType(RemoteApplicationType.IN_BUILT);
        model = BinaryData.fromObject(model).toObject(ApplicationPatchProperties.class);
        Assertions.assertEquals("ivx", model.description());
        Assertions.assertEquals("zel", model.friendlyName());
        Assertions.assertEquals("irels", model.filePath());
        Assertions.assertEquals(CommandLineSetting.DO_NOT_ALLOW, model.commandLineSetting());
        Assertions.assertEquals("nwabfatkldd", model.commandLineArguments());
        Assertions.assertEquals(true, model.showInPortal());
        Assertions.assertEquals("wuaanoz", model.iconPath());
        Assertions.assertEquals(1294061553, model.iconIndex());
        Assertions.assertEquals("hyoulpjr", model.msixPackageFamilyName());
        Assertions.assertEquals("ag", model.msixPackageApplicationId());
        Assertions.assertEquals(RemoteApplicationType.IN_BUILT, model.applicationType());
    }
}
