// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanPersonalScheduleProperties;
import com.azure.resourcemanager.desktopvirtualization.models.DayOfWeek;
import com.azure.resourcemanager.desktopvirtualization.models.SessionHandlingOperation;
import com.azure.resourcemanager.desktopvirtualization.models.SetStartVMOnConnect;
import com.azure.resourcemanager.desktopvirtualization.models.StartupBehavior;
import com.azure.resourcemanager.desktopvirtualization.models.Time;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ScalingPlanPersonalSchedulePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ScalingPlanPersonalScheduleProperties model = BinaryData.fromString(
            "{\"daysOfWeek\":[\"Tuesday\",\"Thursday\"],\"rampUpStartTime\":{\"hour\":97190015,\"minute\":2053949685},\"rampUpAutoStartHosts\":\"None\",\"rampUpStartVMOnConnect\":\"Disable\",\"rampUpActionOnDisconnect\":\"Deallocate\",\"rampUpMinutesToWaitOnDisconnect\":520113589,\"rampUpActionOnLogoff\":\"Hibernate\",\"rampUpMinutesToWaitOnLogoff\":1139203375,\"peakStartTime\":{\"hour\":910036850,\"minute\":237271167},\"peakStartVMOnConnect\":\"Disable\",\"peakActionOnDisconnect\":\"None\",\"peakMinutesToWaitOnDisconnect\":567516658,\"peakActionOnLogoff\":\"None\",\"peakMinutesToWaitOnLogoff\":1216343785,\"rampDownStartTime\":{\"hour\":1861824237,\"minute\":1416358219},\"rampDownStartVMOnConnect\":\"Disable\",\"rampDownActionOnDisconnect\":\"None\",\"rampDownMinutesToWaitOnDisconnect\":1060545026,\"rampDownActionOnLogoff\":\"Hibernate\",\"rampDownMinutesToWaitOnLogoff\":1893739141,\"offPeakStartTime\":{\"hour\":1393923794,\"minute\":818264004},\"offPeakStartVMOnConnect\":\"Enable\",\"offPeakActionOnDisconnect\":\"Hibernate\",\"offPeakMinutesToWaitOnDisconnect\":794984845,\"offPeakActionOnLogoff\":\"Hibernate\",\"offPeakMinutesToWaitOnLogoff\":1379318840}")
            .toObject(ScalingPlanPersonalScheduleProperties.class);
        Assertions.assertEquals(DayOfWeek.TUESDAY, model.daysOfWeek().get(0));
        Assertions.assertEquals(97190015, model.rampUpStartTime().hour());
        Assertions.assertEquals(2053949685, model.rampUpStartTime().minute());
        Assertions.assertEquals(StartupBehavior.NONE, model.rampUpAutoStartHosts());
        Assertions.assertEquals(SetStartVMOnConnect.DISABLE, model.rampUpStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.DEALLOCATE, model.rampUpActionOnDisconnect());
        Assertions.assertEquals(520113589, model.rampUpMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.HIBERNATE, model.rampUpActionOnLogoff());
        Assertions.assertEquals(1139203375, model.rampUpMinutesToWaitOnLogoff());
        Assertions.assertEquals(910036850, model.peakStartTime().hour());
        Assertions.assertEquals(237271167, model.peakStartTime().minute());
        Assertions.assertEquals(SetStartVMOnConnect.DISABLE, model.peakStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.NONE, model.peakActionOnDisconnect());
        Assertions.assertEquals(567516658, model.peakMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.NONE, model.peakActionOnLogoff());
        Assertions.assertEquals(1216343785, model.peakMinutesToWaitOnLogoff());
        Assertions.assertEquals(1861824237, model.rampDownStartTime().hour());
        Assertions.assertEquals(1416358219, model.rampDownStartTime().minute());
        Assertions.assertEquals(SetStartVMOnConnect.DISABLE, model.rampDownStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.NONE, model.rampDownActionOnDisconnect());
        Assertions.assertEquals(1060545026, model.rampDownMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.HIBERNATE, model.rampDownActionOnLogoff());
        Assertions.assertEquals(1893739141, model.rampDownMinutesToWaitOnLogoff());
        Assertions.assertEquals(1393923794, model.offPeakStartTime().hour());
        Assertions.assertEquals(818264004, model.offPeakStartTime().minute());
        Assertions.assertEquals(SetStartVMOnConnect.ENABLE, model.offPeakStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.HIBERNATE, model.offPeakActionOnDisconnect());
        Assertions.assertEquals(794984845, model.offPeakMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.HIBERNATE, model.offPeakActionOnLogoff());
        Assertions.assertEquals(1379318840, model.offPeakMinutesToWaitOnLogoff());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ScalingPlanPersonalScheduleProperties model = new ScalingPlanPersonalScheduleProperties()
            .withDaysOfWeek(Arrays.asList(DayOfWeek.TUESDAY, DayOfWeek.THURSDAY))
            .withRampUpStartTime(new Time().withHour(97190015).withMinute(2053949685))
            .withRampUpAutoStartHosts(StartupBehavior.NONE)
            .withRampUpStartVMOnConnect(SetStartVMOnConnect.DISABLE)
            .withRampUpActionOnDisconnect(SessionHandlingOperation.DEALLOCATE)
            .withRampUpMinutesToWaitOnDisconnect(520113589)
            .withRampUpActionOnLogoff(SessionHandlingOperation.HIBERNATE)
            .withRampUpMinutesToWaitOnLogoff(1139203375)
            .withPeakStartTime(new Time().withHour(910036850).withMinute(237271167))
            .withPeakStartVMOnConnect(SetStartVMOnConnect.DISABLE)
            .withPeakActionOnDisconnect(SessionHandlingOperation.NONE)
            .withPeakMinutesToWaitOnDisconnect(567516658)
            .withPeakActionOnLogoff(SessionHandlingOperation.NONE)
            .withPeakMinutesToWaitOnLogoff(1216343785)
            .withRampDownStartTime(new Time().withHour(1861824237).withMinute(1416358219))
            .withRampDownStartVMOnConnect(SetStartVMOnConnect.DISABLE)
            .withRampDownActionOnDisconnect(SessionHandlingOperation.NONE)
            .withRampDownMinutesToWaitOnDisconnect(1060545026)
            .withRampDownActionOnLogoff(SessionHandlingOperation.HIBERNATE)
            .withRampDownMinutesToWaitOnLogoff(1893739141)
            .withOffPeakStartTime(new Time().withHour(1393923794).withMinute(818264004))
            .withOffPeakStartVMOnConnect(SetStartVMOnConnect.ENABLE)
            .withOffPeakActionOnDisconnect(SessionHandlingOperation.HIBERNATE)
            .withOffPeakMinutesToWaitOnDisconnect(794984845)
            .withOffPeakActionOnLogoff(SessionHandlingOperation.HIBERNATE)
            .withOffPeakMinutesToWaitOnLogoff(1379318840);
        model = BinaryData.fromObject(model).toObject(ScalingPlanPersonalScheduleProperties.class);
        Assertions.assertEquals(DayOfWeek.TUESDAY, model.daysOfWeek().get(0));
        Assertions.assertEquals(97190015, model.rampUpStartTime().hour());
        Assertions.assertEquals(2053949685, model.rampUpStartTime().minute());
        Assertions.assertEquals(StartupBehavior.NONE, model.rampUpAutoStartHosts());
        Assertions.assertEquals(SetStartVMOnConnect.DISABLE, model.rampUpStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.DEALLOCATE, model.rampUpActionOnDisconnect());
        Assertions.assertEquals(520113589, model.rampUpMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.HIBERNATE, model.rampUpActionOnLogoff());
        Assertions.assertEquals(1139203375, model.rampUpMinutesToWaitOnLogoff());
        Assertions.assertEquals(910036850, model.peakStartTime().hour());
        Assertions.assertEquals(237271167, model.peakStartTime().minute());
        Assertions.assertEquals(SetStartVMOnConnect.DISABLE, model.peakStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.NONE, model.peakActionOnDisconnect());
        Assertions.assertEquals(567516658, model.peakMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.NONE, model.peakActionOnLogoff());
        Assertions.assertEquals(1216343785, model.peakMinutesToWaitOnLogoff());
        Assertions.assertEquals(1861824237, model.rampDownStartTime().hour());
        Assertions.assertEquals(1416358219, model.rampDownStartTime().minute());
        Assertions.assertEquals(SetStartVMOnConnect.DISABLE, model.rampDownStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.NONE, model.rampDownActionOnDisconnect());
        Assertions.assertEquals(1060545026, model.rampDownMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.HIBERNATE, model.rampDownActionOnLogoff());
        Assertions.assertEquals(1893739141, model.rampDownMinutesToWaitOnLogoff());
        Assertions.assertEquals(1393923794, model.offPeakStartTime().hour());
        Assertions.assertEquals(818264004, model.offPeakStartTime().minute());
        Assertions.assertEquals(SetStartVMOnConnect.ENABLE, model.offPeakStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.HIBERNATE, model.offPeakActionOnDisconnect());
        Assertions.assertEquals(794984845, model.offPeakMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.HIBERNATE, model.offPeakActionOnLogoff());
        Assertions.assertEquals(1379318840, model.offPeakMinutesToWaitOnLogoff());
    }
}
