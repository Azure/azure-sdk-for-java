// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanPersonalScheduleProperties;
import com.azure.resourcemanager.desktopvirtualization.models.DayOfWeek;
import com.azure.resourcemanager.desktopvirtualization.models.SessionHandlingOperation;
import com.azure.resourcemanager.desktopvirtualization.models.SetStartVMOnConnect;
import com.azure.resourcemanager.desktopvirtualization.models.StartupBehavior;
import com.azure.resourcemanager.desktopvirtualization.models.Time;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ScalingPlanPersonalSchedulePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ScalingPlanPersonalScheduleProperties model = BinaryData.fromString(
            "{\"daysOfWeek\":[\"Saturday\",\"Saturday\",\"Monday\",\"Wednesday\"],\"rampUpStartTime\":{\"hour\":1477938118,\"minute\":1757000388},\"rampUpAutoStartHosts\":\"All\",\"rampUpStartVMOnConnect\":\"Disable\",\"rampUpActionOnDisconnect\":\"Hibernate\",\"rampUpMinutesToWaitOnDisconnect\":1656357002,\"rampUpActionOnLogoff\":\"None\",\"rampUpMinutesToWaitOnLogoff\":151199466,\"peakStartTime\":{\"hour\":395045632,\"minute\":524895743},\"peakStartVMOnConnect\":\"Disable\",\"peakActionOnDisconnect\":\"Deallocate\",\"peakMinutesToWaitOnDisconnect\":948183907,\"peakActionOnLogoff\":\"None\",\"peakMinutesToWaitOnLogoff\":604177419,\"rampDownStartTime\":{\"hour\":1214178064,\"minute\":432099850},\"rampDownStartVMOnConnect\":\"Enable\",\"rampDownActionOnDisconnect\":\"Hibernate\",\"rampDownMinutesToWaitOnDisconnect\":681452902,\"rampDownActionOnLogoff\":\"None\",\"rampDownMinutesToWaitOnLogoff\":412409909,\"offPeakStartTime\":{\"hour\":1627840881,\"minute\":1126761283},\"offPeakStartVMOnConnect\":\"Disable\",\"offPeakActionOnDisconnect\":\"Hibernate\",\"offPeakMinutesToWaitOnDisconnect\":1800612686,\"offPeakActionOnLogoff\":\"Hibernate\",\"offPeakMinutesToWaitOnLogoff\":1279542640}")
            .toObject(ScalingPlanPersonalScheduleProperties.class);
        Assertions.assertEquals(DayOfWeek.SATURDAY, model.daysOfWeek().get(0));
        Assertions.assertEquals(1477938118, model.rampUpStartTime().hour());
        Assertions.assertEquals(1757000388, model.rampUpStartTime().minute());
        Assertions.assertEquals(StartupBehavior.ALL, model.rampUpAutoStartHosts());
        Assertions.assertEquals(SetStartVMOnConnect.DISABLE, model.rampUpStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.HIBERNATE, model.rampUpActionOnDisconnect());
        Assertions.assertEquals(1656357002, model.rampUpMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.NONE, model.rampUpActionOnLogoff());
        Assertions.assertEquals(151199466, model.rampUpMinutesToWaitOnLogoff());
        Assertions.assertEquals(395045632, model.peakStartTime().hour());
        Assertions.assertEquals(524895743, model.peakStartTime().minute());
        Assertions.assertEquals(SetStartVMOnConnect.DISABLE, model.peakStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.DEALLOCATE, model.peakActionOnDisconnect());
        Assertions.assertEquals(948183907, model.peakMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.NONE, model.peakActionOnLogoff());
        Assertions.assertEquals(604177419, model.peakMinutesToWaitOnLogoff());
        Assertions.assertEquals(1214178064, model.rampDownStartTime().hour());
        Assertions.assertEquals(432099850, model.rampDownStartTime().minute());
        Assertions.assertEquals(SetStartVMOnConnect.ENABLE, model.rampDownStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.HIBERNATE, model.rampDownActionOnDisconnect());
        Assertions.assertEquals(681452902, model.rampDownMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.NONE, model.rampDownActionOnLogoff());
        Assertions.assertEquals(412409909, model.rampDownMinutesToWaitOnLogoff());
        Assertions.assertEquals(1627840881, model.offPeakStartTime().hour());
        Assertions.assertEquals(1126761283, model.offPeakStartTime().minute());
        Assertions.assertEquals(SetStartVMOnConnect.DISABLE, model.offPeakStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.HIBERNATE, model.offPeakActionOnDisconnect());
        Assertions.assertEquals(1800612686, model.offPeakMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.HIBERNATE, model.offPeakActionOnLogoff());
        Assertions.assertEquals(1279542640, model.offPeakMinutesToWaitOnLogoff());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ScalingPlanPersonalScheduleProperties model = new ScalingPlanPersonalScheduleProperties()
            .withDaysOfWeek(
                Arrays.asList(DayOfWeek.SATURDAY, DayOfWeek.SATURDAY, DayOfWeek.MONDAY, DayOfWeek.WEDNESDAY))
            .withRampUpStartTime(new Time().withHour(1477938118).withMinute(1757000388))
            .withRampUpAutoStartHosts(StartupBehavior.ALL)
            .withRampUpStartVMOnConnect(SetStartVMOnConnect.DISABLE)
            .withRampUpActionOnDisconnect(SessionHandlingOperation.HIBERNATE)
            .withRampUpMinutesToWaitOnDisconnect(1656357002)
            .withRampUpActionOnLogoff(SessionHandlingOperation.NONE)
            .withRampUpMinutesToWaitOnLogoff(151199466)
            .withPeakStartTime(new Time().withHour(395045632).withMinute(524895743))
            .withPeakStartVMOnConnect(SetStartVMOnConnect.DISABLE)
            .withPeakActionOnDisconnect(SessionHandlingOperation.DEALLOCATE)
            .withPeakMinutesToWaitOnDisconnect(948183907)
            .withPeakActionOnLogoff(SessionHandlingOperation.NONE)
            .withPeakMinutesToWaitOnLogoff(604177419)
            .withRampDownStartTime(new Time().withHour(1214178064).withMinute(432099850))
            .withRampDownStartVMOnConnect(SetStartVMOnConnect.ENABLE)
            .withRampDownActionOnDisconnect(SessionHandlingOperation.HIBERNATE)
            .withRampDownMinutesToWaitOnDisconnect(681452902)
            .withRampDownActionOnLogoff(SessionHandlingOperation.NONE)
            .withRampDownMinutesToWaitOnLogoff(412409909)
            .withOffPeakStartTime(new Time().withHour(1627840881).withMinute(1126761283))
            .withOffPeakStartVMOnConnect(SetStartVMOnConnect.DISABLE)
            .withOffPeakActionOnDisconnect(SessionHandlingOperation.HIBERNATE)
            .withOffPeakMinutesToWaitOnDisconnect(1800612686)
            .withOffPeakActionOnLogoff(SessionHandlingOperation.HIBERNATE)
            .withOffPeakMinutesToWaitOnLogoff(1279542640);
        model = BinaryData.fromObject(model).toObject(ScalingPlanPersonalScheduleProperties.class);
        Assertions.assertEquals(DayOfWeek.SATURDAY, model.daysOfWeek().get(0));
        Assertions.assertEquals(1477938118, model.rampUpStartTime().hour());
        Assertions.assertEquals(1757000388, model.rampUpStartTime().minute());
        Assertions.assertEquals(StartupBehavior.ALL, model.rampUpAutoStartHosts());
        Assertions.assertEquals(SetStartVMOnConnect.DISABLE, model.rampUpStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.HIBERNATE, model.rampUpActionOnDisconnect());
        Assertions.assertEquals(1656357002, model.rampUpMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.NONE, model.rampUpActionOnLogoff());
        Assertions.assertEquals(151199466, model.rampUpMinutesToWaitOnLogoff());
        Assertions.assertEquals(395045632, model.peakStartTime().hour());
        Assertions.assertEquals(524895743, model.peakStartTime().minute());
        Assertions.assertEquals(SetStartVMOnConnect.DISABLE, model.peakStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.DEALLOCATE, model.peakActionOnDisconnect());
        Assertions.assertEquals(948183907, model.peakMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.NONE, model.peakActionOnLogoff());
        Assertions.assertEquals(604177419, model.peakMinutesToWaitOnLogoff());
        Assertions.assertEquals(1214178064, model.rampDownStartTime().hour());
        Assertions.assertEquals(432099850, model.rampDownStartTime().minute());
        Assertions.assertEquals(SetStartVMOnConnect.ENABLE, model.rampDownStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.HIBERNATE, model.rampDownActionOnDisconnect());
        Assertions.assertEquals(681452902, model.rampDownMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.NONE, model.rampDownActionOnLogoff());
        Assertions.assertEquals(412409909, model.rampDownMinutesToWaitOnLogoff());
        Assertions.assertEquals(1627840881, model.offPeakStartTime().hour());
        Assertions.assertEquals(1126761283, model.offPeakStartTime().minute());
        Assertions.assertEquals(SetStartVMOnConnect.DISABLE, model.offPeakStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.HIBERNATE, model.offPeakActionOnDisconnect());
        Assertions.assertEquals(1800612686, model.offPeakMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.HIBERNATE, model.offPeakActionOnLogoff());
        Assertions.assertEquals(1279542640, model.offPeakMinutesToWaitOnLogoff());
    }
}
