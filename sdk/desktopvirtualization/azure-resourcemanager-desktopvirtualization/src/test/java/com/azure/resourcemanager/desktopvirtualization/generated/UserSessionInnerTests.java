// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.desktopvirtualization.fluent.models.UserSessionInner;
import com.azure.resourcemanager.desktopvirtualization.models.ApplicationType;
import com.azure.resourcemanager.desktopvirtualization.models.SessionState;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class UserSessionInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UserSessionInner model = BinaryData.fromString(
            "{\"properties\":{\"objectId\":\"nalghfkvtvsexso\",\"userPrincipalName\":\"el\",\"applicationType\":\"Desktop\",\"sessionState\":\"Pending\",\"activeDirectoryUserName\":\"hxvrhmzkwpjg\",\"createTime\":\"2021-10-11T18:28:46Z\"},\"id\":\"ughftqsx\",\"name\":\"qxujxukndxd\",\"type\":\"grjguufzd\"}")
            .toObject(UserSessionInner.class);
        Assertions.assertEquals("el", model.userPrincipalName());
        Assertions.assertEquals(ApplicationType.DESKTOP, model.applicationType());
        Assertions.assertEquals(SessionState.PENDING, model.sessionState());
        Assertions.assertEquals("hxvrhmzkwpjg", model.activeDirectoryUsername());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-11T18:28:46Z"), model.createTime());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UserSessionInner model = new UserSessionInner().withUserPrincipalName("el")
            .withApplicationType(ApplicationType.DESKTOP)
            .withSessionState(SessionState.PENDING)
            .withActiveDirectoryUsername("hxvrhmzkwpjg")
            .withCreateTime(OffsetDateTime.parse("2021-10-11T18:28:46Z"));
        model = BinaryData.fromObject(model).toObject(UserSessionInner.class);
        Assertions.assertEquals("el", model.userPrincipalName());
        Assertions.assertEquals(ApplicationType.DESKTOP, model.applicationType());
        Assertions.assertEquals(SessionState.PENDING, model.sessionState());
        Assertions.assertEquals("hxvrhmzkwpjg", model.activeDirectoryUsername());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-11T18:28:46Z"), model.createTime());
    }
}
