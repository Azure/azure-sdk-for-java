// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.desktopvirtualization.models.DesktopPatch;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class DesktopPatchTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DesktopPatch model = BinaryData.fromString(
            "{\"tags\":{\"dcpzfoqo\":\"zkoj\",\"ybxarzgszu\":\"i\",\"hkh\":\"oxciqopidoamcio\"},\"properties\":{\"description\":\"khnzbonlw\",\"friendlyName\":\"oegokdwbwh\"}}")
            .toObject(DesktopPatch.class);
        Assertions.assertEquals("zkoj", model.tags().get("dcpzfoqo"));
        Assertions.assertEquals("khnzbonlw", model.description());
        Assertions.assertEquals("oegokdwbwh", model.friendlyName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DesktopPatch model
            = new DesktopPatch().withTags(mapOf("dcpzfoqo", "zkoj", "ybxarzgszu", "i", "hkh", "oxciqopidoamcio"))
                .withDescription("khnzbonlw")
                .withFriendlyName("oegokdwbwh");
        model = BinaryData.fromObject(model).toObject(DesktopPatch.class);
        Assertions.assertEquals("zkoj", model.tags().get("dcpzfoqo"));
        Assertions.assertEquals("khnzbonlw", model.description());
        Assertions.assertEquals("oegokdwbwh", model.friendlyName());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
