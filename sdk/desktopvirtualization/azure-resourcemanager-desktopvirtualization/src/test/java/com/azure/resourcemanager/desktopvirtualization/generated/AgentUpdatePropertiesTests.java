// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.desktopvirtualization.models.AgentUpdateProperties;
import com.azure.resourcemanager.desktopvirtualization.models.DayOfWeek;
import com.azure.resourcemanager.desktopvirtualization.models.MaintenanceWindowProperties;
import com.azure.resourcemanager.desktopvirtualization.models.SessionHostComponentUpdateType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AgentUpdatePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AgentUpdateProperties model = BinaryData.fromString(
            "{\"type\":\"Scheduled\",\"useSessionHostLocalTime\":false,\"maintenanceWindowTimeZone\":\"nwzxltjcv\",\"maintenanceWindows\":[{\"hour\":823307226,\"dayOfWeek\":\"Wednesday\"},{\"hour\":1925543989,\"dayOfWeek\":\"Thursday\"},{\"hour\":1032415559,\"dayOfWeek\":\"Monday\"}]}")
            .toObject(AgentUpdateProperties.class);
        Assertions.assertEquals(SessionHostComponentUpdateType.SCHEDULED, model.type());
        Assertions.assertEquals(false, model.useSessionHostLocalTime());
        Assertions.assertEquals("nwzxltjcv", model.maintenanceWindowTimeZone());
        Assertions.assertEquals(823307226, model.maintenanceWindows().get(0).hour());
        Assertions.assertEquals(DayOfWeek.WEDNESDAY, model.maintenanceWindows().get(0).dayOfWeek());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AgentUpdateProperties model
            = new AgentUpdateProperties().withType(SessionHostComponentUpdateType.SCHEDULED)
                .withUseSessionHostLocalTime(false)
                .withMaintenanceWindowTimeZone("nwzxltjcv")
                .withMaintenanceWindows(Arrays.asList(
                    new MaintenanceWindowProperties().withHour(823307226).withDayOfWeek(DayOfWeek.WEDNESDAY),
                    new MaintenanceWindowProperties().withHour(1925543989).withDayOfWeek(DayOfWeek.THURSDAY),
                    new MaintenanceWindowProperties().withHour(1032415559).withDayOfWeek(DayOfWeek.MONDAY)));
        model = BinaryData.fromObject(model).toObject(AgentUpdateProperties.class);
        Assertions.assertEquals(SessionHostComponentUpdateType.SCHEDULED, model.type());
        Assertions.assertEquals(false, model.useSessionHostLocalTime());
        Assertions.assertEquals("nwzxltjcv", model.maintenanceWindowTimeZone());
        Assertions.assertEquals(823307226, model.maintenanceWindows().get(0).hour());
        Assertions.assertEquals(DayOfWeek.WEDNESDAY, model.maintenanceWindows().get(0).dayOfWeek());
    }
}
