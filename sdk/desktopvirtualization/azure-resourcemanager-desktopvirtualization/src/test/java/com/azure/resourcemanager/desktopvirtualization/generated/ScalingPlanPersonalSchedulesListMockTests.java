// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.desktopvirtualization.DesktopVirtualizationManager;
import com.azure.resourcemanager.desktopvirtualization.models.DayOfWeek;
import com.azure.resourcemanager.desktopvirtualization.models.ScalingPlanPersonalSchedule;
import com.azure.resourcemanager.desktopvirtualization.models.SessionHandlingOperation;
import com.azure.resourcemanager.desktopvirtualization.models.SetStartVMOnConnect;
import com.azure.resourcemanager.desktopvirtualization.models.StartupBehavior;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ScalingPlanPersonalSchedulesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"daysOfWeek\":[\"Saturday\",\"Tuesday\",\"Tuesday\"],\"rampUpStartTime\":{\"hour\":2073233936,\"minute\":1865328530},\"rampUpAutoStartHosts\":\"All\",\"rampUpStartVMOnConnect\":\"Disable\",\"rampUpActionOnDisconnect\":\"Hibernate\",\"rampUpMinutesToWaitOnDisconnect\":794094890,\"rampUpActionOnLogoff\":\"None\",\"rampUpMinutesToWaitOnLogoff\":192074742,\"peakStartTime\":{\"hour\":794571898,\"minute\":1290986457},\"peakStartVMOnConnect\":\"Enable\",\"peakActionOnDisconnect\":\"None\",\"peakMinutesToWaitOnDisconnect\":1598896306,\"peakActionOnLogoff\":\"Hibernate\",\"peakMinutesToWaitOnLogoff\":1282661494,\"rampDownStartTime\":{\"hour\":369643942,\"minute\":1501101823},\"rampDownStartVMOnConnect\":\"Disable\",\"rampDownActionOnDisconnect\":\"Deallocate\",\"rampDownMinutesToWaitOnDisconnect\":257622462,\"rampDownActionOnLogoff\":\"Deallocate\",\"rampDownMinutesToWaitOnLogoff\":457713777,\"offPeakStartTime\":{\"hour\":1945539207,\"minute\":1241650566},\"offPeakStartVMOnConnect\":\"Disable\",\"offPeakActionOnDisconnect\":\"Hibernate\",\"offPeakMinutesToWaitOnDisconnect\":988758793,\"offPeakActionOnLogoff\":\"Deallocate\",\"offPeakMinutesToWaitOnLogoff\":1259722437},\"id\":\"hqvlnnpxybafiqg\",\"name\":\"aarbgjekg\",\"type\":\"klbyulidwcw\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DesktopVirtualizationManager manager = DesktopVirtualizationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<ScalingPlanPersonalSchedule> response = manager.scalingPlanPersonalSchedules()
            .list("gdphtvdula", "vl", 1390786576, false, 748558129, com.azure.core.util.Context.NONE);

        Assertions.assertEquals(DayOfWeek.SATURDAY, response.iterator().next().daysOfWeek().get(0));
        Assertions.assertEquals(2073233936, response.iterator().next().rampUpStartTime().hour());
        Assertions.assertEquals(1865328530, response.iterator().next().rampUpStartTime().minute());
        Assertions.assertEquals(StartupBehavior.ALL, response.iterator().next().rampUpAutoStartHosts());
        Assertions.assertEquals(SetStartVMOnConnect.DISABLE, response.iterator().next().rampUpStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.HIBERNATE,
            response.iterator().next().rampUpActionOnDisconnect());
        Assertions.assertEquals(794094890, response.iterator().next().rampUpMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.NONE, response.iterator().next().rampUpActionOnLogoff());
        Assertions.assertEquals(192074742, response.iterator().next().rampUpMinutesToWaitOnLogoff());
        Assertions.assertEquals(794571898, response.iterator().next().peakStartTime().hour());
        Assertions.assertEquals(1290986457, response.iterator().next().peakStartTime().minute());
        Assertions.assertEquals(SetStartVMOnConnect.ENABLE, response.iterator().next().peakStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.NONE, response.iterator().next().peakActionOnDisconnect());
        Assertions.assertEquals(1598896306, response.iterator().next().peakMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.HIBERNATE, response.iterator().next().peakActionOnLogoff());
        Assertions.assertEquals(1282661494, response.iterator().next().peakMinutesToWaitOnLogoff());
        Assertions.assertEquals(369643942, response.iterator().next().rampDownStartTime().hour());
        Assertions.assertEquals(1501101823, response.iterator().next().rampDownStartTime().minute());
        Assertions.assertEquals(SetStartVMOnConnect.DISABLE, response.iterator().next().rampDownStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.DEALLOCATE,
            response.iterator().next().rampDownActionOnDisconnect());
        Assertions.assertEquals(257622462, response.iterator().next().rampDownMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.DEALLOCATE,
            response.iterator().next().rampDownActionOnLogoff());
        Assertions.assertEquals(457713777, response.iterator().next().rampDownMinutesToWaitOnLogoff());
        Assertions.assertEquals(1945539207, response.iterator().next().offPeakStartTime().hour());
        Assertions.assertEquals(1241650566, response.iterator().next().offPeakStartTime().minute());
        Assertions.assertEquals(SetStartVMOnConnect.DISABLE, response.iterator().next().offPeakStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.HIBERNATE,
            response.iterator().next().offPeakActionOnDisconnect());
        Assertions.assertEquals(988758793, response.iterator().next().offPeakMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.DEALLOCATE,
            response.iterator().next().offPeakActionOnLogoff());
        Assertions.assertEquals(1259722437, response.iterator().next().offPeakMinutesToWaitOnLogoff());
    }
}
