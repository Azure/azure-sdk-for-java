// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanPersonalScheduleInner;
import com.azure.resourcemanager.desktopvirtualization.models.DayOfWeek;
import com.azure.resourcemanager.desktopvirtualization.models.SessionHandlingOperation;
import com.azure.resourcemanager.desktopvirtualization.models.SetStartVMOnConnect;
import com.azure.resourcemanager.desktopvirtualization.models.StartupBehavior;
import com.azure.resourcemanager.desktopvirtualization.models.Time;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ScalingPlanPersonalScheduleInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ScalingPlanPersonalScheduleInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"daysOfWeek\":[\"Monday\",\"Friday\",\"Wednesday\"],\"rampUpStartTime\":{\"hour\":1500766151,\"minute\":1796159221},\"rampUpAutoStartHosts\":\"All\",\"rampUpStartVMOnConnect\":\"Enable\",\"rampUpActionOnDisconnect\":\"None\",\"rampUpMinutesToWaitOnDisconnect\":1230471233,\"rampUpActionOnLogoff\":\"Deallocate\",\"rampUpMinutesToWaitOnLogoff\":2000011197,\"peakStartTime\":{\"hour\":1573909011,\"minute\":2050375248},\"peakStartVMOnConnect\":\"Disable\",\"peakActionOnDisconnect\":\"None\",\"peakMinutesToWaitOnDisconnect\":613009021,\"peakActionOnLogoff\":\"Hibernate\",\"peakMinutesToWaitOnLogoff\":119641642,\"rampDownStartTime\":{\"hour\":939730908,\"minute\":1520557842},\"rampDownStartVMOnConnect\":\"Enable\",\"rampDownActionOnDisconnect\":\"Deallocate\",\"rampDownMinutesToWaitOnDisconnect\":282783230,\"rampDownActionOnLogoff\":\"None\",\"rampDownMinutesToWaitOnLogoff\":538641166,\"offPeakStartTime\":{\"hour\":1437797215,\"minute\":953152084},\"offPeakStartVMOnConnect\":\"Enable\",\"offPeakActionOnDisconnect\":\"None\",\"offPeakMinutesToWaitOnDisconnect\":591532413,\"offPeakActionOnLogoff\":\"None\",\"offPeakMinutesToWaitOnLogoff\":994320059},\"id\":\"t\",\"name\":\"oellwp\",\"type\":\"fdygpfqbuaceopz\"}")
                .toObject(ScalingPlanPersonalScheduleInner.class);
        Assertions.assertEquals(DayOfWeek.MONDAY, model.daysOfWeek().get(0));
        Assertions.assertEquals(1500766151, model.rampUpStartTime().hour());
        Assertions.assertEquals(1796159221, model.rampUpStartTime().minute());
        Assertions.assertEquals(StartupBehavior.ALL, model.rampUpAutoStartHosts());
        Assertions.assertEquals(SetStartVMOnConnect.ENABLE, model.rampUpStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.NONE, model.rampUpActionOnDisconnect());
        Assertions.assertEquals(1230471233, model.rampUpMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.DEALLOCATE, model.rampUpActionOnLogoff());
        Assertions.assertEquals(2000011197, model.rampUpMinutesToWaitOnLogoff());
        Assertions.assertEquals(1573909011, model.peakStartTime().hour());
        Assertions.assertEquals(2050375248, model.peakStartTime().minute());
        Assertions.assertEquals(SetStartVMOnConnect.DISABLE, model.peakStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.NONE, model.peakActionOnDisconnect());
        Assertions.assertEquals(613009021, model.peakMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.HIBERNATE, model.peakActionOnLogoff());
        Assertions.assertEquals(119641642, model.peakMinutesToWaitOnLogoff());
        Assertions.assertEquals(939730908, model.rampDownStartTime().hour());
        Assertions.assertEquals(1520557842, model.rampDownStartTime().minute());
        Assertions.assertEquals(SetStartVMOnConnect.ENABLE, model.rampDownStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.DEALLOCATE, model.rampDownActionOnDisconnect());
        Assertions.assertEquals(282783230, model.rampDownMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.NONE, model.rampDownActionOnLogoff());
        Assertions.assertEquals(538641166, model.rampDownMinutesToWaitOnLogoff());
        Assertions.assertEquals(1437797215, model.offPeakStartTime().hour());
        Assertions.assertEquals(953152084, model.offPeakStartTime().minute());
        Assertions.assertEquals(SetStartVMOnConnect.ENABLE, model.offPeakStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.NONE, model.offPeakActionOnDisconnect());
        Assertions.assertEquals(591532413, model.offPeakMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.NONE, model.offPeakActionOnLogoff());
        Assertions.assertEquals(994320059, model.offPeakMinutesToWaitOnLogoff());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ScalingPlanPersonalScheduleInner model =
            new ScalingPlanPersonalScheduleInner()
                .withDaysOfWeek(Arrays.asList(DayOfWeek.MONDAY, DayOfWeek.FRIDAY, DayOfWeek.WEDNESDAY))
                .withRampUpStartTime(new Time().withHour(1500766151).withMinute(1796159221))
                .withRampUpAutoStartHosts(StartupBehavior.ALL)
                .withRampUpStartVMOnConnect(SetStartVMOnConnect.ENABLE)
                .withRampUpActionOnDisconnect(SessionHandlingOperation.NONE)
                .withRampUpMinutesToWaitOnDisconnect(1230471233)
                .withRampUpActionOnLogoff(SessionHandlingOperation.DEALLOCATE)
                .withRampUpMinutesToWaitOnLogoff(2000011197)
                .withPeakStartTime(new Time().withHour(1573909011).withMinute(2050375248))
                .withPeakStartVMOnConnect(SetStartVMOnConnect.DISABLE)
                .withPeakActionOnDisconnect(SessionHandlingOperation.NONE)
                .withPeakMinutesToWaitOnDisconnect(613009021)
                .withPeakActionOnLogoff(SessionHandlingOperation.HIBERNATE)
                .withPeakMinutesToWaitOnLogoff(119641642)
                .withRampDownStartTime(new Time().withHour(939730908).withMinute(1520557842))
                .withRampDownStartVMOnConnect(SetStartVMOnConnect.ENABLE)
                .withRampDownActionOnDisconnect(SessionHandlingOperation.DEALLOCATE)
                .withRampDownMinutesToWaitOnDisconnect(282783230)
                .withRampDownActionOnLogoff(SessionHandlingOperation.NONE)
                .withRampDownMinutesToWaitOnLogoff(538641166)
                .withOffPeakStartTime(new Time().withHour(1437797215).withMinute(953152084))
                .withOffPeakStartVMOnConnect(SetStartVMOnConnect.ENABLE)
                .withOffPeakActionOnDisconnect(SessionHandlingOperation.NONE)
                .withOffPeakMinutesToWaitOnDisconnect(591532413)
                .withOffPeakActionOnLogoff(SessionHandlingOperation.NONE)
                .withOffPeakMinutesToWaitOnLogoff(994320059);
        model = BinaryData.fromObject(model).toObject(ScalingPlanPersonalScheduleInner.class);
        Assertions.assertEquals(DayOfWeek.MONDAY, model.daysOfWeek().get(0));
        Assertions.assertEquals(1500766151, model.rampUpStartTime().hour());
        Assertions.assertEquals(1796159221, model.rampUpStartTime().minute());
        Assertions.assertEquals(StartupBehavior.ALL, model.rampUpAutoStartHosts());
        Assertions.assertEquals(SetStartVMOnConnect.ENABLE, model.rampUpStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.NONE, model.rampUpActionOnDisconnect());
        Assertions.assertEquals(1230471233, model.rampUpMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.DEALLOCATE, model.rampUpActionOnLogoff());
        Assertions.assertEquals(2000011197, model.rampUpMinutesToWaitOnLogoff());
        Assertions.assertEquals(1573909011, model.peakStartTime().hour());
        Assertions.assertEquals(2050375248, model.peakStartTime().minute());
        Assertions.assertEquals(SetStartVMOnConnect.DISABLE, model.peakStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.NONE, model.peakActionOnDisconnect());
        Assertions.assertEquals(613009021, model.peakMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.HIBERNATE, model.peakActionOnLogoff());
        Assertions.assertEquals(119641642, model.peakMinutesToWaitOnLogoff());
        Assertions.assertEquals(939730908, model.rampDownStartTime().hour());
        Assertions.assertEquals(1520557842, model.rampDownStartTime().minute());
        Assertions.assertEquals(SetStartVMOnConnect.ENABLE, model.rampDownStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.DEALLOCATE, model.rampDownActionOnDisconnect());
        Assertions.assertEquals(282783230, model.rampDownMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.NONE, model.rampDownActionOnLogoff());
        Assertions.assertEquals(538641166, model.rampDownMinutesToWaitOnLogoff());
        Assertions.assertEquals(1437797215, model.offPeakStartTime().hour());
        Assertions.assertEquals(953152084, model.offPeakStartTime().minute());
        Assertions.assertEquals(SetStartVMOnConnect.ENABLE, model.offPeakStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.NONE, model.offPeakActionOnDisconnect());
        Assertions.assertEquals(591532413, model.offPeakMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.NONE, model.offPeakActionOnLogoff());
        Assertions.assertEquals(994320059, model.offPeakMinutesToWaitOnLogoff());
    }
}
