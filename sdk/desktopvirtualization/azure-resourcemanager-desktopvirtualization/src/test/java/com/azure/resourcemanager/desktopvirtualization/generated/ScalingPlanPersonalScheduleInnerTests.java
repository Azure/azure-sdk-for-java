// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanPersonalScheduleInner;
import com.azure.resourcemanager.desktopvirtualization.models.DayOfWeek;
import com.azure.resourcemanager.desktopvirtualization.models.SessionHandlingOperation;
import com.azure.resourcemanager.desktopvirtualization.models.SetStartVMOnConnect;
import com.azure.resourcemanager.desktopvirtualization.models.StartupBehavior;
import com.azure.resourcemanager.desktopvirtualization.models.Time;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ScalingPlanPersonalScheduleInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ScalingPlanPersonalScheduleInner model = BinaryData.fromString(
            "{\"properties\":{\"daysOfWeek\":[\"Thursday\",\"Wednesday\",\"Wednesday\",\"Friday\"],\"rampUpStartTime\":{\"hour\":392993819,\"minute\":1216343785},\"rampUpAutoStartHosts\":\"All\",\"rampUpStartVMOnConnect\":\"Disable\",\"rampUpActionOnDisconnect\":\"Hibernate\",\"rampUpMinutesToWaitOnDisconnect\":172493216,\"rampUpActionOnLogoff\":\"Hibernate\",\"rampUpMinutesToWaitOnLogoff\":94266347,\"peakStartTime\":{\"hour\":2145299291,\"minute\":1393923794},\"peakStartVMOnConnect\":\"Disable\",\"peakActionOnDisconnect\":\"None\",\"peakMinutesToWaitOnDisconnect\":213257698,\"peakActionOnLogoff\":\"None\",\"peakMinutesToWaitOnLogoff\":561759175,\"rampDownStartTime\":{\"hour\":277100703,\"minute\":532379819},\"rampDownStartVMOnConnect\":\"Disable\",\"rampDownActionOnDisconnect\":\"None\",\"rampDownMinutesToWaitOnDisconnect\":2111014163,\"rampDownActionOnLogoff\":\"Hibernate\",\"rampDownMinutesToWaitOnLogoff\":891212878,\"offPeakStartTime\":{\"hour\":157171235,\"minute\":1972509388},\"offPeakStartVMOnConnect\":\"Disable\",\"offPeakActionOnDisconnect\":\"Hibernate\",\"offPeakMinutesToWaitOnDisconnect\":1553831435,\"offPeakActionOnLogoff\":\"Deallocate\",\"offPeakMinutesToWaitOnLogoff\":1235013026},\"id\":\"xilzznf\",\"name\":\"q\",\"type\":\"vwpm\"}")
            .toObject(ScalingPlanPersonalScheduleInner.class);
        Assertions.assertEquals(DayOfWeek.THURSDAY, model.daysOfWeek().get(0));
        Assertions.assertEquals(392993819, model.rampUpStartTime().hour());
        Assertions.assertEquals(1216343785, model.rampUpStartTime().minute());
        Assertions.assertEquals(StartupBehavior.ALL, model.rampUpAutoStartHosts());
        Assertions.assertEquals(SetStartVMOnConnect.DISABLE, model.rampUpStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.HIBERNATE, model.rampUpActionOnDisconnect());
        Assertions.assertEquals(172493216, model.rampUpMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.HIBERNATE, model.rampUpActionOnLogoff());
        Assertions.assertEquals(94266347, model.rampUpMinutesToWaitOnLogoff());
        Assertions.assertEquals(2145299291, model.peakStartTime().hour());
        Assertions.assertEquals(1393923794, model.peakStartTime().minute());
        Assertions.assertEquals(SetStartVMOnConnect.DISABLE, model.peakStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.NONE, model.peakActionOnDisconnect());
        Assertions.assertEquals(213257698, model.peakMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.NONE, model.peakActionOnLogoff());
        Assertions.assertEquals(561759175, model.peakMinutesToWaitOnLogoff());
        Assertions.assertEquals(277100703, model.rampDownStartTime().hour());
        Assertions.assertEquals(532379819, model.rampDownStartTime().minute());
        Assertions.assertEquals(SetStartVMOnConnect.DISABLE, model.rampDownStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.NONE, model.rampDownActionOnDisconnect());
        Assertions.assertEquals(2111014163, model.rampDownMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.HIBERNATE, model.rampDownActionOnLogoff());
        Assertions.assertEquals(891212878, model.rampDownMinutesToWaitOnLogoff());
        Assertions.assertEquals(157171235, model.offPeakStartTime().hour());
        Assertions.assertEquals(1972509388, model.offPeakStartTime().minute());
        Assertions.assertEquals(SetStartVMOnConnect.DISABLE, model.offPeakStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.HIBERNATE, model.offPeakActionOnDisconnect());
        Assertions.assertEquals(1553831435, model.offPeakMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.DEALLOCATE, model.offPeakActionOnLogoff());
        Assertions.assertEquals(1235013026, model.offPeakMinutesToWaitOnLogoff());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ScalingPlanPersonalScheduleInner model = new ScalingPlanPersonalScheduleInner()
            .withDaysOfWeek(
                Arrays.asList(DayOfWeek.THURSDAY, DayOfWeek.WEDNESDAY, DayOfWeek.WEDNESDAY, DayOfWeek.FRIDAY))
            .withRampUpStartTime(new Time().withHour(392993819).withMinute(1216343785))
            .withRampUpAutoStartHosts(StartupBehavior.ALL)
            .withRampUpStartVMOnConnect(SetStartVMOnConnect.DISABLE)
            .withRampUpActionOnDisconnect(SessionHandlingOperation.HIBERNATE)
            .withRampUpMinutesToWaitOnDisconnect(172493216)
            .withRampUpActionOnLogoff(SessionHandlingOperation.HIBERNATE)
            .withRampUpMinutesToWaitOnLogoff(94266347)
            .withPeakStartTime(new Time().withHour(2145299291).withMinute(1393923794))
            .withPeakStartVMOnConnect(SetStartVMOnConnect.DISABLE)
            .withPeakActionOnDisconnect(SessionHandlingOperation.NONE)
            .withPeakMinutesToWaitOnDisconnect(213257698)
            .withPeakActionOnLogoff(SessionHandlingOperation.NONE)
            .withPeakMinutesToWaitOnLogoff(561759175)
            .withRampDownStartTime(new Time().withHour(277100703).withMinute(532379819))
            .withRampDownStartVMOnConnect(SetStartVMOnConnect.DISABLE)
            .withRampDownActionOnDisconnect(SessionHandlingOperation.NONE)
            .withRampDownMinutesToWaitOnDisconnect(2111014163)
            .withRampDownActionOnLogoff(SessionHandlingOperation.HIBERNATE)
            .withRampDownMinutesToWaitOnLogoff(891212878)
            .withOffPeakStartTime(new Time().withHour(157171235).withMinute(1972509388))
            .withOffPeakStartVMOnConnect(SetStartVMOnConnect.DISABLE)
            .withOffPeakActionOnDisconnect(SessionHandlingOperation.HIBERNATE)
            .withOffPeakMinutesToWaitOnDisconnect(1553831435)
            .withOffPeakActionOnLogoff(SessionHandlingOperation.DEALLOCATE)
            .withOffPeakMinutesToWaitOnLogoff(1235013026);
        model = BinaryData.fromObject(model).toObject(ScalingPlanPersonalScheduleInner.class);
        Assertions.assertEquals(DayOfWeek.THURSDAY, model.daysOfWeek().get(0));
        Assertions.assertEquals(392993819, model.rampUpStartTime().hour());
        Assertions.assertEquals(1216343785, model.rampUpStartTime().minute());
        Assertions.assertEquals(StartupBehavior.ALL, model.rampUpAutoStartHosts());
        Assertions.assertEquals(SetStartVMOnConnect.DISABLE, model.rampUpStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.HIBERNATE, model.rampUpActionOnDisconnect());
        Assertions.assertEquals(172493216, model.rampUpMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.HIBERNATE, model.rampUpActionOnLogoff());
        Assertions.assertEquals(94266347, model.rampUpMinutesToWaitOnLogoff());
        Assertions.assertEquals(2145299291, model.peakStartTime().hour());
        Assertions.assertEquals(1393923794, model.peakStartTime().minute());
        Assertions.assertEquals(SetStartVMOnConnect.DISABLE, model.peakStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.NONE, model.peakActionOnDisconnect());
        Assertions.assertEquals(213257698, model.peakMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.NONE, model.peakActionOnLogoff());
        Assertions.assertEquals(561759175, model.peakMinutesToWaitOnLogoff());
        Assertions.assertEquals(277100703, model.rampDownStartTime().hour());
        Assertions.assertEquals(532379819, model.rampDownStartTime().minute());
        Assertions.assertEquals(SetStartVMOnConnect.DISABLE, model.rampDownStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.NONE, model.rampDownActionOnDisconnect());
        Assertions.assertEquals(2111014163, model.rampDownMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.HIBERNATE, model.rampDownActionOnLogoff());
        Assertions.assertEquals(891212878, model.rampDownMinutesToWaitOnLogoff());
        Assertions.assertEquals(157171235, model.offPeakStartTime().hour());
        Assertions.assertEquals(1972509388, model.offPeakStartTime().minute());
        Assertions.assertEquals(SetStartVMOnConnect.DISABLE, model.offPeakStartVMOnConnect());
        Assertions.assertEquals(SessionHandlingOperation.HIBERNATE, model.offPeakActionOnDisconnect());
        Assertions.assertEquals(1553831435, model.offPeakMinutesToWaitOnDisconnect());
        Assertions.assertEquals(SessionHandlingOperation.DEALLOCATE, model.offPeakActionOnLogoff());
        Assertions.assertEquals(1235013026, model.offPeakMinutesToWaitOnLogoff());
    }
}
