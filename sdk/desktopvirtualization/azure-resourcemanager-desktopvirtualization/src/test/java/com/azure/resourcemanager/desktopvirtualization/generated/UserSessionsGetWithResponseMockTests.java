// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.desktopvirtualization.DesktopVirtualizationManager;
import com.azure.resourcemanager.desktopvirtualization.models.ApplicationType;
import com.azure.resourcemanager.desktopvirtualization.models.SessionState;
import com.azure.resourcemanager.desktopvirtualization.models.UserSession;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class UserSessionsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"objectId\":\"oeocnhzqrott\",\"userPrincipalName\":\"cfyjzp\",\"applicationType\":\"RemoteApp\",\"sessionState\":\"Active\",\"activeDirectoryUserName\":\"apqinf\",\"createTime\":\"2021-03-15T02:08:03Z\"},\"id\":\"glqdhm\",\"name\":\"jzralc\",\"type\":\"pjby\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DesktopVirtualizationManager manager = DesktopVirtualizationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        UserSession response = manager.userSessions()
            .getWithResponse("kyewnfnzhhhqo", "mffjkutycyarn", "oohguabzoghkt", "pyc", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("cfyjzp", response.userPrincipalName());
        Assertions.assertEquals(ApplicationType.REMOTE_APP, response.applicationType());
        Assertions.assertEquals(SessionState.ACTIVE, response.sessionState());
        Assertions.assertEquals("apqinf", response.activeDirectoryUsername());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-15T02:08:03Z"), response.createTime());
    }
}
