// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.desktopvirtualization.DesktopVirtualizationManager;
import com.azure.resourcemanager.desktopvirtualization.models.MsixPackage;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class MsixPackagesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"imagePath\":\"awsigrbjbxs\",\"packageName\":\"bvitvqkjya\",\"packageFamilyName\":\"umtggmuwdchozfn\",\"displayName\":\"exlvxnoakiz\",\"packageRelativePath\":\"aikn\",\"isRegularRegistration\":false,\"isActive\":true,\"packageDependencies\":[{\"dependencyName\":\"uyxlykwphvxzcw\",\"publisher\":\"mpe\",\"minVersion\":\"lkexaonwivkcqh\"},{\"dependencyName\":\"hxknlccrmmkyupi\",\"publisher\":\"byqjfkakfqfrkem\",\"minVersion\":\"ldudxjascowv\"},{\"dependencyName\":\"jkpdxphlkksnm\",\"publisher\":\"vyfijdkzuqnw\",\"minVersion\":\"thuqolyahluq\"}],\"version\":\"ulsutrjbhxy\",\"lastUpdated\":\"2021-04-27T08:11:25Z\",\"packageApplications\":[{\"appId\":\"zvqqugdrftbcvexr\",\"description\":\"quowtljvfwhrea\",\"appUserModelID\":\"hyxvrqt\",\"friendlyName\":\"czsulmdggl\",\"iconImageName\":\"pjpfseykgs\"}]},\"id\":\"szngafpgyl\",\"name\":\"vecjujcn\",\"type\":\"oady\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DesktopVirtualizationManager manager = DesktopVirtualizationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<MsixPackage> response
            = manager.msixPackages().list("g", "uuj", 655695841, false, 1503545228, com.azure.core.util.Context.NONE);

        Assertions.assertEquals("awsigrbjbxs", response.iterator().next().imagePath());
        Assertions.assertEquals("bvitvqkjya", response.iterator().next().packageName());
        Assertions.assertEquals("umtggmuwdchozfn", response.iterator().next().packageFamilyName());
        Assertions.assertEquals("exlvxnoakiz", response.iterator().next().displayName());
        Assertions.assertEquals("aikn", response.iterator().next().packageRelativePath());
        Assertions.assertEquals(false, response.iterator().next().isRegularRegistration());
        Assertions.assertEquals(true, response.iterator().next().isActive());
        Assertions.assertEquals("uyxlykwphvxzcw",
            response.iterator().next().packageDependencies().get(0).dependencyName());
        Assertions.assertEquals("mpe", response.iterator().next().packageDependencies().get(0).publisher());
        Assertions.assertEquals("lkexaonwivkcqh", response.iterator().next().packageDependencies().get(0).minVersion());
        Assertions.assertEquals("ulsutrjbhxy", response.iterator().next().version());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-27T08:11:25Z"), response.iterator().next().lastUpdated());
        Assertions.assertEquals("zvqqugdrftbcvexr", response.iterator().next().packageApplications().get(0).appId());
        Assertions.assertEquals("quowtljvfwhrea",
            response.iterator().next().packageApplications().get(0).description());
        Assertions.assertEquals("hyxvrqt", response.iterator().next().packageApplications().get(0).appUserModelId());
        Assertions.assertEquals("czsulmdggl", response.iterator().next().packageApplications().get(0).friendlyName());
        Assertions.assertEquals("pjpfseykgs", response.iterator().next().packageApplications().get(0).iconImageName());
    }
}
