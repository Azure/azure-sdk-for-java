// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of ScalingPlanPooledSchedules. */
public interface ScalingPlanPooledSchedules {
    /**
     * Get a ScalingPlanPooledSchedule.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scalingPlanName The name of the scaling plan.
     * @param scalingPlanScheduleName The name of the ScalingPlanSchedule.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a ScalingPlanPooledSchedule along with {@link Response}.
     */
    Response<ScalingPlanPooledSchedule> getWithResponse(
        String resourceGroupName, String scalingPlanName, String scalingPlanScheduleName, Context context);

    /**
     * Get a ScalingPlanPooledSchedule.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scalingPlanName The name of the scaling plan.
     * @param scalingPlanScheduleName The name of the ScalingPlanSchedule.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a ScalingPlanPooledSchedule.
     */
    ScalingPlanPooledSchedule get(String resourceGroupName, String scalingPlanName, String scalingPlanScheduleName);

    /**
     * Remove a ScalingPlanPooledSchedule.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scalingPlanName The name of the scaling plan.
     * @param scalingPlanScheduleName The name of the ScalingPlanSchedule.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteWithResponse(
        String resourceGroupName, String scalingPlanName, String scalingPlanScheduleName, Context context);

    /**
     * Remove a ScalingPlanPooledSchedule.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scalingPlanName The name of the scaling plan.
     * @param scalingPlanScheduleName The name of the ScalingPlanSchedule.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String scalingPlanName, String scalingPlanScheduleName);

    /**
     * List ScalingPlanPooledSchedules.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scalingPlanName The name of the scaling plan.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return scalingPlanPooledScheduleList as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ScalingPlanPooledSchedule> list(String resourceGroupName, String scalingPlanName);

    /**
     * List ScalingPlanPooledSchedules.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scalingPlanName The name of the scaling plan.
     * @param pageSize Number of items per page.
     * @param isDescending Indicates whether the collection is descending.
     * @param initialSkip Initial number of items to skip.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return scalingPlanPooledScheduleList as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ScalingPlanPooledSchedule> list(
        String resourceGroupName,
        String scalingPlanName,
        Integer pageSize,
        Boolean isDescending,
        Integer initialSkip,
        Context context);

    /**
     * Get a ScalingPlanPooledSchedule.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a ScalingPlanPooledSchedule along with {@link Response}.
     */
    ScalingPlanPooledSchedule getById(String id);

    /**
     * Get a ScalingPlanPooledSchedule.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a ScalingPlanPooledSchedule along with {@link Response}.
     */
    Response<ScalingPlanPooledSchedule> getByIdWithResponse(String id, Context context);

    /**
     * Remove a ScalingPlanPooledSchedule.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Remove a ScalingPlanPooledSchedule.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new ScalingPlanPooledSchedule resource.
     *
     * @param name resource name.
     * @return the first stage of the new ScalingPlanPooledSchedule definition.
     */
    ScalingPlanPooledSchedule.DefinitionStages.Blank define(String name);
}
