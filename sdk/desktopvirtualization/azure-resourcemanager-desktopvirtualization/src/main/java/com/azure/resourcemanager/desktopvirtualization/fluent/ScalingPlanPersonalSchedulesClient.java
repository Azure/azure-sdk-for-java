// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedFlux;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanPersonalScheduleInner;
import com.azure.resourcemanager.desktopvirtualization.models.ScalingPlanPersonalSchedulePatch;
import reactor.core.publisher.Mono;

/**
 * An instance of this class provides access to all the operations defined in ScalingPlanPersonalSchedulesClient.
 */
public interface ScalingPlanPersonalSchedulesClient {
    /**
     * Get a ScalingPlanPersonalSchedule.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scalingPlanName The name of the scaling plan.
     * @param scalingPlanScheduleName The name of the ScalingPlanSchedule.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a ScalingPlanPersonalSchedule along with {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<Response<ScalingPlanPersonalScheduleInner>> getWithResponseAsync(String resourceGroupName,
        String scalingPlanName, String scalingPlanScheduleName);

    /**
     * Get a ScalingPlanPersonalSchedule.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scalingPlanName The name of the scaling plan.
     * @param scalingPlanScheduleName The name of the ScalingPlanSchedule.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a ScalingPlanPersonalSchedule on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<ScalingPlanPersonalScheduleInner> getAsync(String resourceGroupName, String scalingPlanName,
        String scalingPlanScheduleName);

    /**
     * Get a ScalingPlanPersonalSchedule.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scalingPlanName The name of the scaling plan.
     * @param scalingPlanScheduleName The name of the ScalingPlanSchedule.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a ScalingPlanPersonalSchedule along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ScalingPlanPersonalScheduleInner> getWithResponse(String resourceGroupName, String scalingPlanName,
        String scalingPlanScheduleName, Context context);

    /**
     * Get a ScalingPlanPersonalSchedule.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scalingPlanName The name of the scaling plan.
     * @param scalingPlanScheduleName The name of the ScalingPlanSchedule.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a ScalingPlanPersonalSchedule.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ScalingPlanPersonalScheduleInner get(String resourceGroupName, String scalingPlanName,
        String scalingPlanScheduleName);

    /**
     * Create or update a ScalingPlanPersonalSchedule.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scalingPlanName The name of the scaling plan.
     * @param scalingPlanScheduleName The name of the ScalingPlanSchedule.
     * @param scalingPlanSchedule Object containing ScalingPlanPersonalSchedule definitions.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a ScalingPlanPersonalSchedule definition along with {@link Response} on successful completion
     * of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<Response<ScalingPlanPersonalScheduleInner>> createWithResponseAsync(String resourceGroupName,
        String scalingPlanName, String scalingPlanScheduleName, ScalingPlanPersonalScheduleInner scalingPlanSchedule);

    /**
     * Create or update a ScalingPlanPersonalSchedule.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scalingPlanName The name of the scaling plan.
     * @param scalingPlanScheduleName The name of the ScalingPlanSchedule.
     * @param scalingPlanSchedule Object containing ScalingPlanPersonalSchedule definitions.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a ScalingPlanPersonalSchedule definition on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<ScalingPlanPersonalScheduleInner> createAsync(String resourceGroupName, String scalingPlanName,
        String scalingPlanScheduleName, ScalingPlanPersonalScheduleInner scalingPlanSchedule);

    /**
     * Create or update a ScalingPlanPersonalSchedule.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scalingPlanName The name of the scaling plan.
     * @param scalingPlanScheduleName The name of the ScalingPlanSchedule.
     * @param scalingPlanSchedule Object containing ScalingPlanPersonalSchedule definitions.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a ScalingPlanPersonalSchedule definition along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ScalingPlanPersonalScheduleInner> createWithResponse(String resourceGroupName, String scalingPlanName,
        String scalingPlanScheduleName, ScalingPlanPersonalScheduleInner scalingPlanSchedule, Context context);

    /**
     * Create or update a ScalingPlanPersonalSchedule.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scalingPlanName The name of the scaling plan.
     * @param scalingPlanScheduleName The name of the ScalingPlanSchedule.
     * @param scalingPlanSchedule Object containing ScalingPlanPersonalSchedule definitions.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a ScalingPlanPersonalSchedule definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ScalingPlanPersonalScheduleInner create(String resourceGroupName, String scalingPlanName,
        String scalingPlanScheduleName, ScalingPlanPersonalScheduleInner scalingPlanSchedule);

    /**
     * Remove a ScalingPlanPersonalSchedule.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scalingPlanName The name of the scaling plan.
     * @param scalingPlanScheduleName The name of the ScalingPlanSchedule.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<Response<Void>> deleteWithResponseAsync(String resourceGroupName, String scalingPlanName,
        String scalingPlanScheduleName);

    /**
     * Remove a ScalingPlanPersonalSchedule.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scalingPlanName The name of the scaling plan.
     * @param scalingPlanScheduleName The name of the ScalingPlanSchedule.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return A {@link Mono} that completes when a successful response is received.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<Void> deleteAsync(String resourceGroupName, String scalingPlanName, String scalingPlanScheduleName);

    /**
     * Remove a ScalingPlanPersonalSchedule.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scalingPlanName The name of the scaling plan.
     * @param scalingPlanScheduleName The name of the ScalingPlanSchedule.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String resourceGroupName, String scalingPlanName, String scalingPlanScheduleName,
        Context context);

    /**
     * Remove a ScalingPlanPersonalSchedule.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scalingPlanName The name of the scaling plan.
     * @param scalingPlanScheduleName The name of the ScalingPlanSchedule.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String scalingPlanName, String scalingPlanScheduleName);

    /**
     * Update a ScalingPlanPersonalSchedule.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scalingPlanName The name of the scaling plan.
     * @param scalingPlanScheduleName The name of the ScalingPlanSchedule.
     * @param scalingPlanSchedule Object containing ScalingPlanPersonalSchedule definitions.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a ScalingPlanPersonalSchedule definition along with {@link Response} on successful completion
     * of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<Response<ScalingPlanPersonalScheduleInner>> updateWithResponseAsync(String resourceGroupName,
        String scalingPlanName, String scalingPlanScheduleName, ScalingPlanPersonalSchedulePatch scalingPlanSchedule);

    /**
     * Update a ScalingPlanPersonalSchedule.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scalingPlanName The name of the scaling plan.
     * @param scalingPlanScheduleName The name of the ScalingPlanSchedule.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a ScalingPlanPersonalSchedule definition on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<ScalingPlanPersonalScheduleInner> updateAsync(String resourceGroupName, String scalingPlanName,
        String scalingPlanScheduleName);

    /**
     * Update a ScalingPlanPersonalSchedule.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scalingPlanName The name of the scaling plan.
     * @param scalingPlanScheduleName The name of the ScalingPlanSchedule.
     * @param scalingPlanSchedule Object containing ScalingPlanPersonalSchedule definitions.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a ScalingPlanPersonalSchedule definition along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ScalingPlanPersonalScheduleInner> updateWithResponse(String resourceGroupName, String scalingPlanName,
        String scalingPlanScheduleName, ScalingPlanPersonalSchedulePatch scalingPlanSchedule, Context context);

    /**
     * Update a ScalingPlanPersonalSchedule.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scalingPlanName The name of the scaling plan.
     * @param scalingPlanScheduleName The name of the ScalingPlanSchedule.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a ScalingPlanPersonalSchedule definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ScalingPlanPersonalScheduleInner update(String resourceGroupName, String scalingPlanName,
        String scalingPlanScheduleName);

    /**
     * List ScalingPlanPersonalSchedules.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scalingPlanName The name of the scaling plan.
     * @param pageSize Number of items per page.
     * @param isDescending Indicates whether the collection is descending.
     * @param initialSkip Initial number of items to skip.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return scalingPlanPersonalScheduleList as paginated response with {@link PagedFlux}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedFlux<ScalingPlanPersonalScheduleInner> listAsync(String resourceGroupName, String scalingPlanName,
        Integer pageSize, Boolean isDescending, Integer initialSkip);

    /**
     * List ScalingPlanPersonalSchedules.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scalingPlanName The name of the scaling plan.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return scalingPlanPersonalScheduleList as paginated response with {@link PagedFlux}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedFlux<ScalingPlanPersonalScheduleInner> listAsync(String resourceGroupName, String scalingPlanName);

    /**
     * List ScalingPlanPersonalSchedules.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scalingPlanName The name of the scaling plan.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return scalingPlanPersonalScheduleList as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ScalingPlanPersonalScheduleInner> list(String resourceGroupName, String scalingPlanName);

    /**
     * List ScalingPlanPersonalSchedules.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scalingPlanName The name of the scaling plan.
     * @param pageSize Number of items per page.
     * @param isDescending Indicates whether the collection is descending.
     * @param initialSkip Initial number of items to skip.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return scalingPlanPersonalScheduleList as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ScalingPlanPersonalScheduleInner> list(String resourceGroupName, String scalingPlanName,
        Integer pageSize, Boolean isDescending, Integer initialSkip, Context context);
}
