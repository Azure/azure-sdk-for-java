// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Information to import app attach package.
 */
@Fluent
public final class ImportPackageInfoRequest implements JsonSerializable<ImportPackageInfoRequest> {
    /*
     * URI to Image
     */
    private String path;

    /*
     * Possible device architectures that an app attach package can be configured for
     */
    private AppAttachPackageArchitectures packageArchitecture;

    /**
     * Creates an instance of ImportPackageInfoRequest class.
     */
    public ImportPackageInfoRequest() {
    }

    /**
     * Get the path property: URI to Image.
     * 
     * @return the path value.
     */
    public String path() {
        return this.path;
    }

    /**
     * Set the path property: URI to Image.
     * 
     * @param path the path value to set.
     * @return the ImportPackageInfoRequest object itself.
     */
    public ImportPackageInfoRequest withPath(String path) {
        this.path = path;
        return this;
    }

    /**
     * Get the packageArchitecture property: Possible device architectures that an app attach package can be configured
     * for.
     * 
     * @return the packageArchitecture value.
     */
    public AppAttachPackageArchitectures packageArchitecture() {
        return this.packageArchitecture;
    }

    /**
     * Set the packageArchitecture property: Possible device architectures that an app attach package can be configured
     * for.
     * 
     * @param packageArchitecture the packageArchitecture value to set.
     * @return the ImportPackageInfoRequest object itself.
     */
    public ImportPackageInfoRequest withPackageArchitecture(AppAttachPackageArchitectures packageArchitecture) {
        this.packageArchitecture = packageArchitecture;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("path", this.path);
        jsonWriter.writeStringField("packageArchitecture",
            this.packageArchitecture == null ? null : this.packageArchitecture.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ImportPackageInfoRequest from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ImportPackageInfoRequest if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ImportPackageInfoRequest.
     */
    public static ImportPackageInfoRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ImportPackageInfoRequest deserializedImportPackageInfoRequest = new ImportPackageInfoRequest();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("path".equals(fieldName)) {
                    deserializedImportPackageInfoRequest.path = reader.getString();
                } else if ("packageArchitecture".equals(fieldName)) {
                    deserializedImportPackageInfoRequest.packageArchitecture
                        = AppAttachPackageArchitectures.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedImportPackageInfoRequest;
        });
    }
}
