// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Scaling plan reference to hostpool. */
@Fluent
public final class ScalingHostPoolReference {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ScalingHostPoolReference.class);

    /*
     * Arm path of referenced hostpool.
     */
    @JsonProperty(value = "hostPoolArmPath")
    private String hostPoolArmPath;

    /*
     * Is the scaling plan enabled for this hostpool.
     */
    @JsonProperty(value = "scalingPlanEnabled")
    private Boolean scalingPlanEnabled;

    /**
     * Get the hostPoolArmPath property: Arm path of referenced hostpool.
     *
     * @return the hostPoolArmPath value.
     */
    public String hostPoolArmPath() {
        return this.hostPoolArmPath;
    }

    /**
     * Set the hostPoolArmPath property: Arm path of referenced hostpool.
     *
     * @param hostPoolArmPath the hostPoolArmPath value to set.
     * @return the ScalingHostPoolReference object itself.
     */
    public ScalingHostPoolReference withHostPoolArmPath(String hostPoolArmPath) {
        this.hostPoolArmPath = hostPoolArmPath;
        return this;
    }

    /**
     * Get the scalingPlanEnabled property: Is the scaling plan enabled for this hostpool.
     *
     * @return the scalingPlanEnabled value.
     */
    public Boolean scalingPlanEnabled() {
        return this.scalingPlanEnabled;
    }

    /**
     * Set the scalingPlanEnabled property: Is the scaling plan enabled for this hostpool.
     *
     * @param scalingPlanEnabled the scalingPlanEnabled value to set.
     * @return the ScalingHostPoolReference object itself.
     */
    public ScalingHostPoolReference withScalingPlanEnabled(Boolean scalingPlanEnabled) {
        this.scalingPlanEnabled = scalingPlanEnabled;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
