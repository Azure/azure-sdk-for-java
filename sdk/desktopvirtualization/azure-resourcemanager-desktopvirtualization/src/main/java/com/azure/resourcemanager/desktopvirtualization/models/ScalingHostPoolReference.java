// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Scaling plan reference to hostpool.
 */
@Fluent
public final class ScalingHostPoolReference implements JsonSerializable<ScalingHostPoolReference> {
    /*
     * Arm path of referenced hostpool.
     */
    private String hostPoolArmPath;

    /*
     * Is the scaling plan enabled for this hostpool.
     */
    private Boolean scalingPlanEnabled;

    /**
     * Creates an instance of ScalingHostPoolReference class.
     */
    public ScalingHostPoolReference() {
    }

    /**
     * Get the hostPoolArmPath property: Arm path of referenced hostpool.
     * 
     * @return the hostPoolArmPath value.
     */
    public String hostPoolArmPath() {
        return this.hostPoolArmPath;
    }

    /**
     * Set the hostPoolArmPath property: Arm path of referenced hostpool.
     * 
     * @param hostPoolArmPath the hostPoolArmPath value to set.
     * @return the ScalingHostPoolReference object itself.
     */
    public ScalingHostPoolReference withHostPoolArmPath(String hostPoolArmPath) {
        this.hostPoolArmPath = hostPoolArmPath;
        return this;
    }

    /**
     * Get the scalingPlanEnabled property: Is the scaling plan enabled for this hostpool.
     * 
     * @return the scalingPlanEnabled value.
     */
    public Boolean scalingPlanEnabled() {
        return this.scalingPlanEnabled;
    }

    /**
     * Set the scalingPlanEnabled property: Is the scaling plan enabled for this hostpool.
     * 
     * @param scalingPlanEnabled the scalingPlanEnabled value to set.
     * @return the ScalingHostPoolReference object itself.
     */
    public ScalingHostPoolReference withScalingPlanEnabled(Boolean scalingPlanEnabled) {
        this.scalingPlanEnabled = scalingPlanEnabled;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("hostPoolArmPath", this.hostPoolArmPath);
        jsonWriter.writeBooleanField("scalingPlanEnabled", this.scalingPlanEnabled);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ScalingHostPoolReference from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ScalingHostPoolReference if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ScalingHostPoolReference.
     */
    public static ScalingHostPoolReference fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ScalingHostPoolReference deserializedScalingHostPoolReference = new ScalingHostPoolReference();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("hostPoolArmPath".equals(fieldName)) {
                    deserializedScalingHostPoolReference.hostPoolArmPath = reader.getString();
                } else if ("scalingPlanEnabled".equals(fieldName)) {
                    deserializedScalingHostPoolReference.scalingPlanEnabled
                        = reader.getNullable(JsonReader::getBoolean);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedScalingHostPoolReference;
        });
    }
}
