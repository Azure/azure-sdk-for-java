// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.ProxyResource;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.desktopvirtualization.models.ApplicationType;
import com.azure.resourcemanager.desktopvirtualization.models.SessionState;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** Represents a UserSession definition. */
@JsonFlatten
@Fluent
public class UserSessionInner extends ProxyResource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(UserSessionInner.class);

    /*
     * The user principal name.
     */
    @JsonProperty(value = "properties.userPrincipalName")
    private String userPrincipalName;

    /*
     * Application type of application.
     */
    @JsonProperty(value = "properties.applicationType")
    private ApplicationType applicationType;

    /*
     * State of user session.
     */
    @JsonProperty(value = "properties.sessionState")
    private SessionState sessionState;

    /*
     * The active directory user name.
     */
    @JsonProperty(value = "properties.activeDirectoryUserName")
    private String activeDirectoryUsername;

    /*
     * The timestamp of the user session create.
     */
    @JsonProperty(value = "properties.createTime")
    private OffsetDateTime createTime;

    /**
     * Get the userPrincipalName property: The user principal name.
     *
     * @return the userPrincipalName value.
     */
    public String userPrincipalName() {
        return this.userPrincipalName;
    }

    /**
     * Set the userPrincipalName property: The user principal name.
     *
     * @param userPrincipalName the userPrincipalName value to set.
     * @return the UserSessionInner object itself.
     */
    public UserSessionInner withUserPrincipalName(String userPrincipalName) {
        this.userPrincipalName = userPrincipalName;
        return this;
    }

    /**
     * Get the applicationType property: Application type of application.
     *
     * @return the applicationType value.
     */
    public ApplicationType applicationType() {
        return this.applicationType;
    }

    /**
     * Set the applicationType property: Application type of application.
     *
     * @param applicationType the applicationType value to set.
     * @return the UserSessionInner object itself.
     */
    public UserSessionInner withApplicationType(ApplicationType applicationType) {
        this.applicationType = applicationType;
        return this;
    }

    /**
     * Get the sessionState property: State of user session.
     *
     * @return the sessionState value.
     */
    public SessionState sessionState() {
        return this.sessionState;
    }

    /**
     * Set the sessionState property: State of user session.
     *
     * @param sessionState the sessionState value to set.
     * @return the UserSessionInner object itself.
     */
    public UserSessionInner withSessionState(SessionState sessionState) {
        this.sessionState = sessionState;
        return this;
    }

    /**
     * Get the activeDirectoryUsername property: The active directory user name.
     *
     * @return the activeDirectoryUsername value.
     */
    public String activeDirectoryUsername() {
        return this.activeDirectoryUsername;
    }

    /**
     * Set the activeDirectoryUsername property: The active directory user name.
     *
     * @param activeDirectoryUsername the activeDirectoryUsername value to set.
     * @return the UserSessionInner object itself.
     */
    public UserSessionInner withActiveDirectoryUsername(String activeDirectoryUsername) {
        this.activeDirectoryUsername = activeDirectoryUsername;
        return this;
    }

    /**
     * Get the createTime property: The timestamp of the user session create.
     *
     * @return the createTime value.
     */
    public OffsetDateTime createTime() {
        return this.createTime;
    }

    /**
     * Set the createTime property: The timestamp of the user session create.
     *
     * @param createTime the createTime value to set.
     * @return the UserSessionInner object itself.
     */
    public UserSessionInner withCreateTime(OffsetDateTime createTime) {
        this.createTime = createTime;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
