// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.desktopvirtualization.fluent.AppAttachPackageInfoesClient;
import com.azure.resourcemanager.desktopvirtualization.fluent.models.AppAttachPackageInner;
import com.azure.resourcemanager.desktopvirtualization.models.AppAttachPackage;
import com.azure.resourcemanager.desktopvirtualization.models.AppAttachPackageInfoes;
import com.azure.resourcemanager.desktopvirtualization.models.ImportPackageInfoRequest;

public final class AppAttachPackageInfoesImpl implements AppAttachPackageInfoes {
    private static final ClientLogger LOGGER = new ClientLogger(AppAttachPackageInfoesImpl.class);

    private final AppAttachPackageInfoesClient innerClient;

    private final com.azure.resourcemanager.desktopvirtualization.DesktopVirtualizationManager serviceManager;

    public AppAttachPackageInfoesImpl(AppAttachPackageInfoesClient innerClient,
        com.azure.resourcemanager.desktopvirtualization.DesktopVirtualizationManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<AppAttachPackage> importMethod(String resourceGroupName, String hostPoolName,
        ImportPackageInfoRequest importPackageInfoRequest) {
        PagedIterable<AppAttachPackageInner> inner
            = this.serviceClient().importMethod(resourceGroupName, hostPoolName, importPackageInfoRequest);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new AppAttachPackageImpl(inner1, this.manager()));
    }

    public PagedIterable<AppAttachPackage> importMethod(String resourceGroupName, String hostPoolName,
        ImportPackageInfoRequest importPackageInfoRequest, Context context) {
        PagedIterable<AppAttachPackageInner> inner
            = this.serviceClient().importMethod(resourceGroupName, hostPoolName, importPackageInfoRequest, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new AppAttachPackageImpl(inner1, this.manager()));
    }

    private AppAttachPackageInfoesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.desktopvirtualization.DesktopVirtualizationManager manager() {
        return this.serviceManager;
    }
}
