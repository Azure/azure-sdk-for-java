/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.desktopvirtualization.v2020_11-02-preview.implementation;

import com.microsoft.azure.management.desktopvirtualization.v2020_11-02-preview.ExpandMsixImage;
import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import org.joda.time.DateTime;
import java.util.List;
import com.microsoft.azure.management.desktopvirtualization.v2020_11-02-preview.MsixPackageApplications;
import com.microsoft.azure.management.desktopvirtualization.v2020_11-02-preview.MsixPackageDependencies;

class ExpandMsixImageImpl extends WrapperImpl<ExpandMsixImageInner> implements ExpandMsixImage {
    private final DesktopVirtualizationManager manager;
    ExpandMsixImageImpl(ExpandMsixImageInner inner, DesktopVirtualizationManager manager) {
        super(inner);
        this.manager = manager;
    }

    @Override
    public DesktopVirtualizationManager manager() {
        return this.manager;
    }

    @Override
    public String displayName() {
        return this.inner().displayName();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public String imagePath() {
        return this.inner().imagePath();
    }

    @Override
    public boolean isActive() {
        return this.inner().isActive();
    }

    @Override
    public boolean isRegularRegistration() {
        return this.inner().isRegularRegistration();
    }

    @Override
    public DateTime lastUpdated() {
        return this.inner().lastUpdated();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public String packageAlias() {
        return this.inner().packageAlias();
    }

    @Override
    public List<MsixPackageApplications> packageApplications() {
        return this.inner().packageApplications();
    }

    @Override
    public List<MsixPackageDependencies> packageDependencies() {
        return this.inner().packageDependencies();
    }

    @Override
    public String packageFamilyName() {
        return this.inner().packageFamilyName();
    }

    @Override
    public String packageFullName() {
        return this.inner().packageFullName();
    }

    @Override
    public String packageName() {
        return this.inner().packageName();
    }

    @Override
    public String packageRelativePath() {
        return this.inner().packageRelativePath();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

    @Override
    public String version() {
        return this.inner().version();
    }

}
