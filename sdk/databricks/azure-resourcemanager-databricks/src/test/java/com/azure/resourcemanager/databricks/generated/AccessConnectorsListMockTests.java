// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databricks.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.databricks.AzureDatabricksManager;
import com.azure.resourcemanager.databricks.models.AccessConnector;
import com.azure.resourcemanager.databricks.models.ManagedServiceIdentityType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AccessConnectorsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"identity\":{\"principalId\":\"84724bba-b831-4962-9d08-c70e75f32a96\",\"tenantId\":\"15838318-ce67-4d1a-b506-971e706c0977\",\"type\":\"SystemAssigned\",\"userAssignedIdentities\":{\"bjibwwiftohq\":{\"principalId\":\"4bc2055d-78f0-4c3c-af22-6f9ef249dfda\",\"clientId\":\"5e42d2a1-0b72-476e-b2e9-6e96049b7a04\"},\"uvksgplsaknynfsy\":{\"principalId\":\"86b9c61f-8aa8-4847-8310-90c683c94161\",\"clientId\":\"f3632105-e22e-4d4b-a802-bd2bd327a04d\"},\"ph\":{\"principalId\":\"330d7797-b306-4a0a-aa42-ecc5d7624823\",\"clientId\":\"e667275c-dfdc-40b9-8cf9-7f4398fa5a7c\"}}},\"properties\":{\"provisioningState\":\"Accepted\"},\"location\":\"dlqiyntorzih\",\"tags\":{\"yzrpzbchckqqzq\":\"sjswsrms\",\"ysuiizynkedya\":\"ox\"},\"id\":\"rwyhqmibzyhwitsm\",\"name\":\"pyy\",\"type\":\"pcdpumnz\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AzureDatabricksManager manager = AzureDatabricksManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<AccessConnector> response = manager.accessConnectors().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("dlqiyntorzih", response.iterator().next().location());
        Assertions.assertEquals("sjswsrms", response.iterator().next().tags().get("yzrpzbchckqqzq"));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED,
            response.iterator().next().identity().type());
    }
}
