// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databricks.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.databricks.models.AccessConnectorUpdate;
import com.azure.resourcemanager.databricks.models.ManagedServiceIdentity;
import com.azure.resourcemanager.databricks.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.databricks.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class AccessConnectorUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AccessConnectorUpdate model = BinaryData.fromString(
            "{\"tags\":{\"evqzntypmrbp\":\"xoegukgjnpiucgy\",\"eoejzic\":\"zcdrqjsdpydnfyhx\",\"hajdeyeamdpha\":\"ifsjttgzfbishcb\"},\"identity\":{\"principalId\":\"a5db8b98-5261-4c5a-818f-2f84a32e46a8\",\"tenantId\":\"b4652127-d7d4-4ee8-86b2-7e97aad83297\",\"type\":\"SystemAssigned\",\"userAssignedIdentities\":{\"ipwhonowk\":{\"principalId\":\"eddc0675-7d40-4ca0-aba1-cd886ea682e5\",\"clientId\":\"471942e8-84ae-49d0-b849-b96187518c64\"}}}}")
            .toObject(AccessConnectorUpdate.class);
        Assertions.assertEquals("xoegukgjnpiucgy", model.tags().get("evqzntypmrbp"));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED, model.identity().type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AccessConnectorUpdate model = new AccessConnectorUpdate()
            .withTags(mapOf("evqzntypmrbp", "xoegukgjnpiucgy", "eoejzic", "zcdrqjsdpydnfyhx", "hajdeyeamdpha",
                "ifsjttgzfbishcb"))
            .withIdentity(new ManagedServiceIdentity().withType(ManagedServiceIdentityType.SYSTEM_ASSIGNED)
                .withUserAssignedIdentities(mapOf("ipwhonowk", new UserAssignedIdentity())));
        model = BinaryData.fromObject(model).toObject(AccessConnectorUpdate.class);
        Assertions.assertEquals("xoegukgjnpiucgy", model.tags().get("evqzntypmrbp"));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED, model.identity().type());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
