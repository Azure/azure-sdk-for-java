// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databricks.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner;
import com.azure.resourcemanager.databricks.models.AddressSpace;
import com.azure.resourcemanager.databricks.models.VirtualNetworkPeeringPropertiesFormatDatabricksVirtualNetwork;
import com.azure.resourcemanager.databricks.models.VirtualNetworkPeeringPropertiesFormatRemoteVirtualNetwork;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class VirtualNetworkPeeringInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VirtualNetworkPeeringInner model = BinaryData.fromString(
            "{\"properties\":{\"allowVirtualNetworkAccess\":false,\"allowForwardedTraffic\":true,\"allowGatewayTransit\":true,\"useRemoteGateways\":true,\"databricksVirtualNetwork\":{\"id\":\"ase\"},\"databricksAddressSpace\":{\"addressPrefixes\":[\"oflokey\"]},\"remoteVirtualNetwork\":{\"id\":\"enjbdlwtgrhp\"},\"remoteAddressSpace\":{\"addressPrefixes\":[\"umasxazjpq\",\"e\"]},\"peeringState\":\"Disconnected\",\"provisioningState\":\"Succeeded\"},\"id\":\"b\",\"name\":\"xhejjzzvdud\",\"type\":\"wdslfhotwmcy\"}")
            .toObject(VirtualNetworkPeeringInner.class);
        Assertions.assertEquals(false, model.allowVirtualNetworkAccess());
        Assertions.assertEquals(true, model.allowForwardedTraffic());
        Assertions.assertEquals(true, model.allowGatewayTransit());
        Assertions.assertEquals(true, model.useRemoteGateways());
        Assertions.assertEquals("ase", model.databricksVirtualNetwork().id());
        Assertions.assertEquals("oflokey", model.databricksAddressSpace().addressPrefixes().get(0));
        Assertions.assertEquals("enjbdlwtgrhp", model.remoteVirtualNetwork().id());
        Assertions.assertEquals("umasxazjpq", model.remoteAddressSpace().addressPrefixes().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VirtualNetworkPeeringInner model = new VirtualNetworkPeeringInner().withAllowVirtualNetworkAccess(false)
            .withAllowForwardedTraffic(true)
            .withAllowGatewayTransit(true)
            .withUseRemoteGateways(true)
            .withDatabricksVirtualNetwork(
                new VirtualNetworkPeeringPropertiesFormatDatabricksVirtualNetwork().withId("ase"))
            .withDatabricksAddressSpace(new AddressSpace().withAddressPrefixes(Arrays.asList("oflokey")))
            .withRemoteVirtualNetwork(
                new VirtualNetworkPeeringPropertiesFormatRemoteVirtualNetwork().withId("enjbdlwtgrhp"))
            .withRemoteAddressSpace(new AddressSpace().withAddressPrefixes(Arrays.asList("umasxazjpq", "e")));
        model = BinaryData.fromObject(model).toObject(VirtualNetworkPeeringInner.class);
        Assertions.assertEquals(false, model.allowVirtualNetworkAccess());
        Assertions.assertEquals(true, model.allowForwardedTraffic());
        Assertions.assertEquals(true, model.allowGatewayTransit());
        Assertions.assertEquals(true, model.useRemoteGateways());
        Assertions.assertEquals("ase", model.databricksVirtualNetwork().id());
        Assertions.assertEquals("oflokey", model.databricksAddressSpace().addressPrefixes().get(0));
        Assertions.assertEquals("enjbdlwtgrhp", model.remoteVirtualNetwork().id());
        Assertions.assertEquals("umasxazjpq", model.remoteAddressSpace().addressPrefixes().get(0));
    }
}
