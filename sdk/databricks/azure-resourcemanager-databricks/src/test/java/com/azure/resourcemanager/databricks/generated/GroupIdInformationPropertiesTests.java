// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databricks.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.databricks.models.GroupIdInformationProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class GroupIdInformationPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GroupIdInformationProperties model = BinaryData.fromString(
            "{\"groupId\":\"kbfkg\",\"requiredMembers\":[\"kexxppof\",\"xaxcfjpgddtocjjx\",\"vpmouexhdzxib\"],\"requiredZoneNames\":[\"jnxqbzvddntwn\",\"eic\",\"twnpzaoqvuhrhcf\"]}")
            .toObject(GroupIdInformationProperties.class);
        Assertions.assertEquals("kbfkg", model.groupId());
        Assertions.assertEquals("kexxppof", model.requiredMembers().get(0));
        Assertions.assertEquals("jnxqbzvddntwn", model.requiredZoneNames().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GroupIdInformationProperties model = new GroupIdInformationProperties().withGroupId("kbfkg")
            .withRequiredMembers(Arrays.asList("kexxppof", "xaxcfjpgddtocjjx", "vpmouexhdzxib"))
            .withRequiredZoneNames(Arrays.asList("jnxqbzvddntwn", "eic", "twnpzaoqvuhrhcf"));
        model = BinaryData.fromObject(model).toObject(GroupIdInformationProperties.class);
        Assertions.assertEquals("kbfkg", model.groupId());
        Assertions.assertEquals("kexxppof", model.requiredMembers().get(0));
        Assertions.assertEquals("jnxqbzvddntwn", model.requiredZoneNames().get(0));
    }
}
