// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databricks.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.databricks.fluent.models.OutboundEnvironmentEndpointInner;
import com.azure.resourcemanager.databricks.models.EndpointDependency;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class OutboundEnvironmentEndpointInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OutboundEnvironmentEndpointInner model =
            BinaryData
                .fromString(
                    "{\"category\":\"dg\",\"endpoints\":[{\"domainName\":\"r\",\"endpointDetails\":[]},{\"domainName\":\"wzrlovmclwhij\",\"endpointDetails\":[]},{\"domainName\":\"ctbzaq\",\"endpointDetails\":[]},{\"domainName\":\"cbkbfkg\",\"endpointDetails\":[]}]}")
                .toObject(OutboundEnvironmentEndpointInner.class);
        Assertions.assertEquals("dg", model.category());
        Assertions.assertEquals("r", model.endpoints().get(0).domainName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OutboundEnvironmentEndpointInner model =
            new OutboundEnvironmentEndpointInner()
                .withCategory("dg")
                .withEndpoints(
                    Arrays
                        .asList(
                            new EndpointDependency().withDomainName("r").withEndpointDetails(Arrays.asList()),
                            new EndpointDependency()
                                .withDomainName("wzrlovmclwhij")
                                .withEndpointDetails(Arrays.asList()),
                            new EndpointDependency().withDomainName("ctbzaq").withEndpointDetails(Arrays.asList()),
                            new EndpointDependency().withDomainName("cbkbfkg").withEndpointDetails(Arrays.asList())));
        model = BinaryData.fromObject(model).toObject(OutboundEnvironmentEndpointInner.class);
        Assertions.assertEquals("dg", model.category());
        Assertions.assertEquals("r", model.endpoints().get(0).domainName());
    }
}
