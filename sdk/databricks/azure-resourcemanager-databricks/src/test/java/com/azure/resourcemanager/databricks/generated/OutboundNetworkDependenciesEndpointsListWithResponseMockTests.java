// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databricks.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.databricks.AzureDatabricksManager;
import com.azure.resourcemanager.databricks.models.OutboundEnvironmentEndpoint;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class OutboundNetworkDependenciesEndpointsListWithResponseMockTests {
    @Test
    public void testListWithResponse() throws Exception {
        String responseStr
            = "[{\"category\":\"gnayqigynduh\",\"endpoints\":[{\"domainName\":\"lkthu\",\"endpointDetails\":[{},{}]},{\"domainName\":\"lbg\",\"endpointDetails\":[{},{},{}]},{\"domainName\":\"iertgccymvaolp\",\"endpointDetails\":[{},{}]}]}]";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AzureDatabricksManager manager = AzureDatabricksManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        List<OutboundEnvironmentEndpoint> response = manager.outboundNetworkDependenciesEndpoints()
            .listWithResponse("pehindoygm", "fthnzdn", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("gnayqigynduh", response.get(0).category());
        Assertions.assertEquals("lkthu", response.get(0).endpoints().get(0).domainName());
    }
}
