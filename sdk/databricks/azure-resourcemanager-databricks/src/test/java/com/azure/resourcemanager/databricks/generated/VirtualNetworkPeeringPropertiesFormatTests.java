// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databricks.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringPropertiesFormat;
import com.azure.resourcemanager.databricks.models.AddressSpace;
import com.azure.resourcemanager.databricks.models.VirtualNetworkPeeringPropertiesFormatDatabricksVirtualNetwork;
import com.azure.resourcemanager.databricks.models.VirtualNetworkPeeringPropertiesFormatRemoteVirtualNetwork;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class VirtualNetworkPeeringPropertiesFormatTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VirtualNetworkPeeringPropertiesFormat model = BinaryData.fromString(
            "{\"allowVirtualNetworkAccess\":true,\"allowForwardedTraffic\":false,\"allowGatewayTransit\":true,\"useRemoteGateways\":true,\"databricksVirtualNetwork\":{\"id\":\"ftadehxnltyfs\"},\"databricksAddressSpace\":{\"addressPrefixes\":[\"suesnzw\"]},\"remoteVirtualNetwork\":{\"id\":\"jbavorxzdm\"},\"remoteAddressSpace\":{\"addressPrefixes\":[\"bqvudwxdndn\",\"owgujjugwdkcglhs\"]},\"peeringState\":\"Disconnected\",\"provisioningState\":\"Failed\"}")
            .toObject(VirtualNetworkPeeringPropertiesFormat.class);
        Assertions.assertEquals(true, model.allowVirtualNetworkAccess());
        Assertions.assertEquals(false, model.allowForwardedTraffic());
        Assertions.assertEquals(true, model.allowGatewayTransit());
        Assertions.assertEquals(true, model.useRemoteGateways());
        Assertions.assertEquals("ftadehxnltyfs", model.databricksVirtualNetwork().id());
        Assertions.assertEquals("suesnzw", model.databricksAddressSpace().addressPrefixes().get(0));
        Assertions.assertEquals("jbavorxzdm", model.remoteVirtualNetwork().id());
        Assertions.assertEquals("bqvudwxdndn", model.remoteAddressSpace().addressPrefixes().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VirtualNetworkPeeringPropertiesFormat model
            = new VirtualNetworkPeeringPropertiesFormat().withAllowVirtualNetworkAccess(true)
                .withAllowForwardedTraffic(false)
                .withAllowGatewayTransit(true)
                .withUseRemoteGateways(true)
                .withDatabricksVirtualNetwork(
                    new VirtualNetworkPeeringPropertiesFormatDatabricksVirtualNetwork().withId("ftadehxnltyfs"))
                .withDatabricksAddressSpace(new AddressSpace().withAddressPrefixes(Arrays.asList("suesnzw")))
                .withRemoteVirtualNetwork(
                    new VirtualNetworkPeeringPropertiesFormatRemoteVirtualNetwork().withId("jbavorxzdm"))
                .withRemoteAddressSpace(
                    new AddressSpace().withAddressPrefixes(Arrays.asList("bqvudwxdndn", "owgujjugwdkcglhs")));
        model = BinaryData.fromObject(model).toObject(VirtualNetworkPeeringPropertiesFormat.class);
        Assertions.assertEquals(true, model.allowVirtualNetworkAccess());
        Assertions.assertEquals(false, model.allowForwardedTraffic());
        Assertions.assertEquals(true, model.allowGatewayTransit());
        Assertions.assertEquals(true, model.useRemoteGateways());
        Assertions.assertEquals("ftadehxnltyfs", model.databricksVirtualNetwork().id());
        Assertions.assertEquals("suesnzw", model.databricksAddressSpace().addressPrefixes().get(0));
        Assertions.assertEquals("jbavorxzdm", model.remoteVirtualNetwork().id());
        Assertions.assertEquals("bqvudwxdndn", model.remoteAddressSpace().addressPrefixes().get(0));
    }
}
