// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databricks.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.UUID;

/**
 * Provides details of the entity that created/updated the workspace.
 */
@Immutable
public final class CreatedBy implements JsonSerializable<CreatedBy> {
    /*
     * The Object ID that created the workspace.
     */
    private UUID oid;

    /*
     * The Personal Object ID corresponding to the object ID above
     */
    private String puid;

    /*
     * The application ID of the application that initiated the creation of the workspace. For example, Azure Portal.
     */
    private UUID applicationId;

    /**
     * Creates an instance of CreatedBy class.
     */
    public CreatedBy() {
    }

    /**
     * Get the oid property: The Object ID that created the workspace.
     * 
     * @return the oid value.
     */
    public UUID oid() {
        return this.oid;
    }

    /**
     * Get the puid property: The Personal Object ID corresponding to the object ID above.
     * 
     * @return the puid value.
     */
    public String puid() {
        return this.puid;
    }

    /**
     * Get the applicationId property: The application ID of the application that initiated the creation of the
     * workspace. For example, Azure Portal.
     * 
     * @return the applicationId value.
     */
    public UUID applicationId() {
        return this.applicationId;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CreatedBy from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CreatedBy if the JsonReader was pointing to an instance of it, or null if it was pointing
     * to JSON null.
     * @throws IOException If an error occurs while reading the CreatedBy.
     */
    public static CreatedBy fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CreatedBy deserializedCreatedBy = new CreatedBy();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("oid".equals(fieldName)) {
                    deserializedCreatedBy.oid
                        = reader.getNullable(nonNullReader -> UUID.fromString(nonNullReader.getString()));
                } else if ("puid".equals(fieldName)) {
                    deserializedCreatedBy.puid = reader.getString();
                } else if ("applicationId".equals(fieldName)) {
                    deserializedCreatedBy.applicationId
                        = reader.getNullable(nonNullReader -> UUID.fromString(nonNullReader.getString()));
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCreatedBy;
        });
    }
}
