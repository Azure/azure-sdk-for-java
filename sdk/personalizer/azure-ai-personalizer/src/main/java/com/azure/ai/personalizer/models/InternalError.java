// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.ai.personalizer.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;

import java.io.IOException;

/** An object containing more specific information than the parent object about the error. */
@Fluent
public final class InternalError implements JsonSerializable<InternalError> {
    /*
     * Detailed error code.
     */
    private String code;

    /*
     * An object containing more specific information than the parent object
     * about the error.
     */
    private InternalError innererror;

    /**
     * Creates a new instance of {@link InternalError}.
     */
    public InternalError() {
    }

    /**
     * Get the code property: Detailed error code.
     *
     * @return the code value.
     */
    public String getCode() {
        return this.code;
    }

    /**
     * Set the code property: Detailed error code.
     *
     * @param code the code value to set.
     * @return the InternalError object itself.
     */
    public InternalError setCode(String code) {
        this.code = code;
        return this;
    }

    /**
     * Get the innererror property: An object containing more specific information than the parent object about the
     * error.
     *
     * @return the innererror value.
     */
    public InternalError getInnererror() {
        return this.innererror;
    }

    /**
     * Set the innererror property: An object containing more specific information than the parent object about the
     * error.
     *
     * @param innererror the innererror value to set.
     * @return the InternalError object itself.
     */
    public InternalError setInnererror(InternalError innererror) {
        this.innererror = innererror;
        return this;
    }

    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        return jsonWriter.writeStartObject()
            .writeStringField("code", code)
            .writeJsonField("innererror", innererror)
            .writeEndObject();
    }

    /**
     * Deserializes an instance of {@link InternalError} from the {@link JsonReader}.
     *
     * @param jsonReader The {@link JsonReader} to read.
     * @return An instance of {@link InternalError}, or null if {@link JsonReader} is pointing to
     * {@link JsonToken#NULL}.
     * @throws IOException If an error occurs while reading the {@link JsonReader}.
     */
    public static InternalError fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            InternalError internalError = new InternalError();

            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("code".equals(fieldName)) {
                    internalError.code = reader.getString();
                } else if ("innererror".equals(fieldName)) {
                    internalError.innererror = InternalError.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return internalError;
        });
    }
}
