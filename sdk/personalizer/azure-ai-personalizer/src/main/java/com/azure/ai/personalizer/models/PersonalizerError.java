// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.ai.personalizer.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;

import java.io.IOException;
import java.util.List;
import java.util.Objects;

/** The error object. */
@Fluent
public final class PersonalizerError implements JsonSerializable<PersonalizerError> {
    /*
     * Error Codes returned by Personalizer
     */
    private PersonalizerErrorCode code;

    /*
     * A message explaining the error reported by the service.
     */
    private String message;

    /*
     * Error source element.
     */
    private String target;

    /*
     * An array of details about specific errors that led to this reported
     * error.
     */
    private List<PersonalizerError> details;

    /*
     * An object containing more specific information than the parent object
     * about the error.
     */
    private InternalError innerError;

    /**
     * Creates a new instance of {@link PersonalizerError}.
     */
    public PersonalizerError() {
    }

    /**
     * Get the code property: Error Codes returned by Personalizer.
     *
     * @return the code value.
     */
    public PersonalizerErrorCode getCode() {
        return this.code;
    }

    /**
     * Set the code property: Error Codes returned by Personalizer.
     *
     * @param code the code value to set.
     * @return the PersonalizerError object itself.
     */
    PersonalizerError setCode(PersonalizerErrorCode code) {
        this.code = code;
        return this;
    }

    /**
     * Get the message property: A message explaining the error reported by the service.
     *
     * @return the message value.
     */
    public String getMessage() {
        return this.message;
    }

    /**
     * Set the message property: A message explaining the error reported by the service.
     *
     * @param message the message value to set.
     * @return the PersonalizerError object itself.
     */
    PersonalizerError setMessage(String message) {
        this.message = message;
        return this;
    }

    /**
     * Get the target property: Error source element.
     *
     * @return the target value.
     */
    public String getTarget() {
        return this.target;
    }

    /**
     * Set the target property: Error source element.
     *
     * @param target the target value to set.
     * @return the PersonalizerError object itself.
     */
    PersonalizerError setTarget(String target) {
        this.target = target;
        return this;
    }

    /**
     * Get the details property: An array of details about specific errors that led to this reported error.
     *
     * @return the details value.
     */
    public List<PersonalizerError> getDetails() {
        return this.details;
    }

    /**
     * Set the details property: An array of details about specific errors that led to this reported error.
     *
     * @param details the details value to set.
     * @return the PersonalizerError object itself.
     */
    PersonalizerError setDetails(List<PersonalizerError> details) {
        this.details = details;
        return this;
    }

    /**
     * Get the innerError property: An object containing more specific information than the parent object about the
     * error.
     *
     * @return the innerError value.
     */
    public InternalError getInnerError() {
        return this.innerError;
    }

    /**
     * Set the innerError property: An object containing more specific information than the parent object about the
     * error.
     *
     * @param innerError the innerError value to set.
     * @return the PersonalizerError object itself.
     */
    public PersonalizerError setInnerError(InternalError innerError) {
        this.innerError = innerError;
        return this;
    }

    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        return jsonWriter.writeStartObject()
            .writeStringField("code", Objects.toString(code, null))
            .writeStringField("message", message)
            .writeStringField("target", target)
            .writeArrayField("details", details, JsonWriter::writeJson)
            .writeJsonField("innerError", innerError)
            .writeEndObject();
    }

    /**
     * Deserializes an instance of {@link PersonalizerError} from the {@link JsonReader}.
     *
     * @param jsonReader The {@link JsonReader} to read.
     * @return An instance of {@link PersonalizerError}, or null if {@link JsonReader} is pointing to
     * {@link JsonToken#NULL}.
     * @throws IOException If an error occurs while reading the {@link JsonReader}.
     */
    public static PersonalizerError fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            PersonalizerError personalizerError = new PersonalizerError();

            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("code".equals(fieldName)) {
                    personalizerError.code = PersonalizerErrorCode.fromString(reader.getString());
                } else if ("message".equals(fieldName)) {
                    personalizerError.message = reader.getString();
                } else if ("target".equals(fieldName)) {
                    personalizerError.target = reader.getString();
                } else if ("details".equals(fieldName)) {
                    personalizerError.details = reader.readArray(PersonalizerError::fromJson);
                } else if ("innerError".equals(fieldName)) {
                    personalizerError.innerError = InternalError.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return personalizerError;
        });
    }
}
