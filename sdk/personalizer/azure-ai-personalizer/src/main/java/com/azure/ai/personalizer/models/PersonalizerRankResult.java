// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.ai.personalizer.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Returns which action to use as rewardActionId, and additional information about each action as a result of a Rank
 * request.
 */
@Immutable
public final class PersonalizerRankResult implements JsonSerializable<PersonalizerRankResult> {
    /*
     * The calculated ranking for the current request.
     */
    private List<PersonalizerRankedAction> ranking;

    /*
     * The eventId for the round trip from request to response.
     */
    private String eventId;

    /*
     * The action chosen by the Personalizer service.
     * This is the action your application should display, and for which to report the reward.
     * This might not be the first found in 'ranking'.
     */
    private String rewardActionId;

    /**
     * Creates an instance of PersonalizerRankResult class.
     */
    public PersonalizerRankResult() {
    }

    /**
     * Get the ranking property: The calculated ranking for the current request.
     * 
     * @return the ranking value.
     */
    public List<PersonalizerRankedAction> getRanking() {
        return this.ranking;
    }

    /**
     * Get the eventId property: The eventId for the round trip from request to response.
     * 
     * @return the eventId value.
     */
    public String getEventId() {
        return this.eventId;
    }

    /**
     * Get the rewardActionId property: The action chosen by the Personalizer service.
     * This is the action your application should display, and for which to report the reward.
     * This might not be the first found in 'ranking'.
     * 
     * @return the rewardActionId value.
     */
    public String getRewardActionId() {
        return this.rewardActionId;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of PersonalizerRankResult from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of PersonalizerRankResult if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the PersonalizerRankResult.
     */
    public static PersonalizerRankResult fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            PersonalizerRankResult deserializedPersonalizerRankResult = new PersonalizerRankResult();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("ranking".equals(fieldName)) {
                    List<PersonalizerRankedAction> ranking
                        = reader.readArray(reader1 -> PersonalizerRankedAction.fromJson(reader1));
                    deserializedPersonalizerRankResult.ranking = ranking;
                } else if ("eventId".equals(fieldName)) {
                    deserializedPersonalizerRankResult.eventId = reader.getString();
                } else if ("rewardActionId".equals(fieldName)) {
                    deserializedPersonalizerRankResult.rewardActionId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedPersonalizerRankResult;
        });
    }
}
