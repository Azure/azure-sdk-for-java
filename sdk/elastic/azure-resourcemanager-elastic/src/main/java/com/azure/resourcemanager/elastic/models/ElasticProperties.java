// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elastic.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Elastic Resource Properties.
 */
@Fluent
public final class ElasticProperties implements JsonSerializable<ElasticProperties> {
    /*
     * Details of the user's elastic account.
     */
    private ElasticCloudUser elasticCloudUser;

    /*
     * Details of the elastic cloud deployment.
     */
    private ElasticCloudDeployment elasticCloudDeployment;

    /**
     * Creates an instance of ElasticProperties class.
     */
    public ElasticProperties() {
    }

    /**
     * Get the elasticCloudUser property: Details of the user's elastic account.
     * 
     * @return the elasticCloudUser value.
     */
    public ElasticCloudUser elasticCloudUser() {
        return this.elasticCloudUser;
    }

    /**
     * Set the elasticCloudUser property: Details of the user's elastic account.
     * 
     * @param elasticCloudUser the elasticCloudUser value to set.
     * @return the ElasticProperties object itself.
     */
    public ElasticProperties withElasticCloudUser(ElasticCloudUser elasticCloudUser) {
        this.elasticCloudUser = elasticCloudUser;
        return this;
    }

    /**
     * Get the elasticCloudDeployment property: Details of the elastic cloud deployment.
     * 
     * @return the elasticCloudDeployment value.
     */
    public ElasticCloudDeployment elasticCloudDeployment() {
        return this.elasticCloudDeployment;
    }

    /**
     * Set the elasticCloudDeployment property: Details of the elastic cloud deployment.
     * 
     * @param elasticCloudDeployment the elasticCloudDeployment value to set.
     * @return the ElasticProperties object itself.
     */
    public ElasticProperties withElasticCloudDeployment(ElasticCloudDeployment elasticCloudDeployment) {
        this.elasticCloudDeployment = elasticCloudDeployment;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (elasticCloudUser() != null) {
            elasticCloudUser().validate();
        }
        if (elasticCloudDeployment() != null) {
            elasticCloudDeployment().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("elasticCloudUser", this.elasticCloudUser);
        jsonWriter.writeJsonField("elasticCloudDeployment", this.elasticCloudDeployment);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ElasticProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ElasticProperties if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the ElasticProperties.
     */
    public static ElasticProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ElasticProperties deserializedElasticProperties = new ElasticProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("elasticCloudUser".equals(fieldName)) {
                    deserializedElasticProperties.elasticCloudUser = ElasticCloudUser.fromJson(reader);
                } else if ("elasticCloudDeployment".equals(fieldName)) {
                    deserializedElasticProperties.elasticCloudDeployment = ElasticCloudDeployment.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedElasticProperties;
        });
    }
}
