// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elastic.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Partner Billing details associated with the resource.
 */
@Fluent
public final class PartnerBillingEntity implements JsonSerializable<PartnerBillingEntity> {
    /*
     * The Elastic Organization Id.
     */
    private String id;

    /*
     * The Elastic Organization Name.
     */
    private String name;

    /*
     * Link to the elastic organization page
     */
    private String partnerEntityUri;

    /**
     * Creates an instance of PartnerBillingEntity class.
     */
    public PartnerBillingEntity() {
    }

    /**
     * Get the id property: The Elastic Organization Id.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: The Elastic Organization Id.
     * 
     * @param id the id value to set.
     * @return the PartnerBillingEntity object itself.
     */
    public PartnerBillingEntity withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the name property: The Elastic Organization Name.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: The Elastic Organization Name.
     * 
     * @param name the name value to set.
     * @return the PartnerBillingEntity object itself.
     */
    public PartnerBillingEntity withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the partnerEntityUri property: Link to the elastic organization page.
     * 
     * @return the partnerEntityUri value.
     */
    public String partnerEntityUri() {
        return this.partnerEntityUri;
    }

    /**
     * Set the partnerEntityUri property: Link to the elastic organization page.
     * 
     * @param partnerEntityUri the partnerEntityUri value to set.
     * @return the PartnerBillingEntity object itself.
     */
    public PartnerBillingEntity withPartnerEntityUri(String partnerEntityUri) {
        this.partnerEntityUri = partnerEntityUri;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("id", this.id);
        jsonWriter.writeStringField("name", this.name);
        jsonWriter.writeStringField("partnerEntityUri", this.partnerEntityUri);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of PartnerBillingEntity from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of PartnerBillingEntity if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the PartnerBillingEntity.
     */
    public static PartnerBillingEntity fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            PartnerBillingEntity deserializedPartnerBillingEntity = new PartnerBillingEntity();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedPartnerBillingEntity.id = reader.getString();
                } else if ("name".equals(fieldName)) {
                    deserializedPartnerBillingEntity.name = reader.getString();
                } else if ("partnerEntityUri".equals(fieldName)) {
                    deserializedPartnerBillingEntity.partnerEntityUri = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedPartnerBillingEntity;
        });
    }
}
