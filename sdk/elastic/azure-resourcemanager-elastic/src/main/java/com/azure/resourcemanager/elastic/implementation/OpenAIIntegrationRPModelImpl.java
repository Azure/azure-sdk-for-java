// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elastic.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.elastic.fluent.models.OpenAIIntegrationRPModelInner;
import com.azure.resourcemanager.elastic.models.OpenAIIntegrationProperties;
import com.azure.resourcemanager.elastic.models.OpenAIIntegrationRPModel;
import com.azure.resourcemanager.elastic.models.OpenAIIntegrationStatusResponse;

public final class OpenAIIntegrationRPModelImpl
    implements OpenAIIntegrationRPModel, OpenAIIntegrationRPModel.Definition, OpenAIIntegrationRPModel.Update {
    private OpenAIIntegrationRPModelInner innerObject;

    private final com.azure.resourcemanager.elastic.ElasticManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public OpenAIIntegrationProperties properties() {
        return this.innerModel().properties();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public OpenAIIntegrationRPModelInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.elastic.ElasticManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String monitorName;

    private String integrationName;

    public OpenAIIntegrationRPModelImpl withExistingMonitor(String resourceGroupName, String monitorName) {
        this.resourceGroupName = resourceGroupName;
        this.monitorName = monitorName;
        return this;
    }

    public OpenAIIntegrationRPModel create() {
        this.innerObject = serviceManager.serviceClient()
            .getOpenAIs()
            .createOrUpdateWithResponse(resourceGroupName, monitorName, integrationName, this.innerModel(),
                Context.NONE)
            .getValue();
        return this;
    }

    public OpenAIIntegrationRPModel create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getOpenAIs()
            .createOrUpdateWithResponse(resourceGroupName, monitorName, integrationName, this.innerModel(), context)
            .getValue();
        return this;
    }

    OpenAIIntegrationRPModelImpl(String name, com.azure.resourcemanager.elastic.ElasticManager serviceManager) {
        this.innerObject = new OpenAIIntegrationRPModelInner();
        this.serviceManager = serviceManager;
        this.integrationName = name;
    }

    public OpenAIIntegrationRPModelImpl update() {
        return this;
    }

    public OpenAIIntegrationRPModel apply() {
        this.innerObject = serviceManager.serviceClient()
            .getOpenAIs()
            .createOrUpdateWithResponse(resourceGroupName, monitorName, integrationName, this.innerModel(),
                Context.NONE)
            .getValue();
        return this;
    }

    public OpenAIIntegrationRPModel apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getOpenAIs()
            .createOrUpdateWithResponse(resourceGroupName, monitorName, integrationName, this.innerModel(), context)
            .getValue();
        return this;
    }

    OpenAIIntegrationRPModelImpl(OpenAIIntegrationRPModelInner innerObject,
        com.azure.resourcemanager.elastic.ElasticManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.monitorName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "monitors");
        this.integrationName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "openAIIntegrations");
    }

    public OpenAIIntegrationRPModel refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getOpenAIs()
            .getWithResponse(resourceGroupName, monitorName, integrationName, Context.NONE)
            .getValue();
        return this;
    }

    public OpenAIIntegrationRPModel refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getOpenAIs()
            .getWithResponse(resourceGroupName, monitorName, integrationName, context)
            .getValue();
        return this;
    }

    public Response<OpenAIIntegrationStatusResponse> getStatusWithResponse(Context context) {
        return serviceManager.openAIs().getStatusWithResponse(resourceGroupName, monitorName, integrationName, context);
    }

    public OpenAIIntegrationStatusResponse getStatus() {
        return serviceManager.openAIs().getStatus(resourceGroupName, monitorName, integrationName);
    }

    public OpenAIIntegrationRPModelImpl withProperties(OpenAIIntegrationProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}
