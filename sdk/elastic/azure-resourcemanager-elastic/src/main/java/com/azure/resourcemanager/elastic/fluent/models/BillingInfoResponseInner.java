// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elastic.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.elastic.models.MarketplaceSaaSInfo;
import com.azure.resourcemanager.elastic.models.PartnerBillingEntity;
import java.io.IOException;

/**
 * Marketplace Subscription and Organization details to which resource gets billed into.
 */
@Fluent
public final class BillingInfoResponseInner implements JsonSerializable<BillingInfoResponseInner> {
    /*
     * Marketplace Subscription details
     */
    private MarketplaceSaaSInfo marketplaceSaasInfo;

    /*
     * Partner Billing Entity details: Organization Info
     */
    private PartnerBillingEntity partnerBillingEntity;

    /**
     * Creates an instance of BillingInfoResponseInner class.
     */
    public BillingInfoResponseInner() {
    }

    /**
     * Get the marketplaceSaasInfo property: Marketplace Subscription details.
     * 
     * @return the marketplaceSaasInfo value.
     */
    public MarketplaceSaaSInfo marketplaceSaasInfo() {
        return this.marketplaceSaasInfo;
    }

    /**
     * Set the marketplaceSaasInfo property: Marketplace Subscription details.
     * 
     * @param marketplaceSaasInfo the marketplaceSaasInfo value to set.
     * @return the BillingInfoResponseInner object itself.
     */
    public BillingInfoResponseInner withMarketplaceSaasInfo(MarketplaceSaaSInfo marketplaceSaasInfo) {
        this.marketplaceSaasInfo = marketplaceSaasInfo;
        return this;
    }

    /**
     * Get the partnerBillingEntity property: Partner Billing Entity details: Organization Info.
     * 
     * @return the partnerBillingEntity value.
     */
    public PartnerBillingEntity partnerBillingEntity() {
        return this.partnerBillingEntity;
    }

    /**
     * Set the partnerBillingEntity property: Partner Billing Entity details: Organization Info.
     * 
     * @param partnerBillingEntity the partnerBillingEntity value to set.
     * @return the BillingInfoResponseInner object itself.
     */
    public BillingInfoResponseInner withPartnerBillingEntity(PartnerBillingEntity partnerBillingEntity) {
        this.partnerBillingEntity = partnerBillingEntity;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (marketplaceSaasInfo() != null) {
            marketplaceSaasInfo().validate();
        }
        if (partnerBillingEntity() != null) {
            partnerBillingEntity().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("marketplaceSaasInfo", this.marketplaceSaasInfo);
        jsonWriter.writeJsonField("partnerBillingEntity", this.partnerBillingEntity);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of BillingInfoResponseInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of BillingInfoResponseInner if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the BillingInfoResponseInner.
     */
    public static BillingInfoResponseInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            BillingInfoResponseInner deserializedBillingInfoResponseInner = new BillingInfoResponseInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("marketplaceSaasInfo".equals(fieldName)) {
                    deserializedBillingInfoResponseInner.marketplaceSaasInfo = MarketplaceSaaSInfo.fromJson(reader);
                } else if ("partnerBillingEntity".equals(fieldName)) {
                    deserializedBillingInfoResponseInner.partnerBillingEntity = PartnerBillingEntity.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedBillingInfoResponseInner;
        });
    }
}
