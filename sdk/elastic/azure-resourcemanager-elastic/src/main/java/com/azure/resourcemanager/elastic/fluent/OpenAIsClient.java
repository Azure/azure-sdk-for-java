// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elastic.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.elastic.fluent.models.OpenAIIntegrationRPModelInner;
import com.azure.resourcemanager.elastic.fluent.models.OpenAIIntegrationStatusResponseInner;

/**
 * An instance of this class provides access to all the operations defined in OpenAIsClient.
 */
public interface OpenAIsClient {
    /**
     * List OpenAI integration rule for a given monitor resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response of a list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<OpenAIIntegrationRPModelInner> list(String resourceGroupName, String monitorName);

    /**
     * List OpenAI integration rule for a given monitor resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response of a list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<OpenAIIntegrationRPModelInner> list(String resourceGroupName, String monitorName, Context context);

    /**
     * Get OpenAI integration rule for a given monitor resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name.
     * @param integrationName OpenAI Integration name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return openAI integration rule for a given monitor resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<OpenAIIntegrationRPModelInner> getWithResponse(String resourceGroupName, String monitorName,
        String integrationName, Context context);

    /**
     * Get OpenAI integration rule for a given monitor resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name.
     * @param integrationName OpenAI Integration name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return openAI integration rule for a given monitor resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    OpenAIIntegrationRPModelInner get(String resourceGroupName, String monitorName, String integrationName);

    /**
     * Create or update a OpenAI integration rule for a given monitor resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name.
     * @param integrationName OpenAI Integration name.
     * @param body The body parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return capture properties of Open AI resource Integration along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<OpenAIIntegrationRPModelInner> createOrUpdateWithResponse(String resourceGroupName, String monitorName,
        String integrationName, OpenAIIntegrationRPModelInner body, Context context);

    /**
     * Create or update a OpenAI integration rule for a given monitor resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name.
     * @param integrationName OpenAI Integration name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return capture properties of Open AI resource Integration.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    OpenAIIntegrationRPModelInner createOrUpdate(String resourceGroupName, String monitorName, String integrationName);

    /**
     * Delete OpenAI integration rule for a given monitor resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name.
     * @param integrationName OpenAI Integration name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String resourceGroupName, String monitorName, String integrationName,
        Context context);

    /**
     * Delete OpenAI integration rule for a given monitor resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name.
     * @param integrationName OpenAI Integration name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String monitorName, String integrationName);

    /**
     * Get OpenAI integration status for a given integration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name.
     * @param integrationName OpenAI Integration name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return openAI integration status for a given integration along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<OpenAIIntegrationStatusResponseInner> getStatusWithResponse(String resourceGroupName, String monitorName,
        String integrationName, Context context);

    /**
     * Get OpenAI integration status for a given integration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name.
     * @param integrationName OpenAI Integration name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return openAI integration status for a given integration.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    OpenAIIntegrationStatusResponseInner getStatus(String resourceGroupName, String monitorName,
        String integrationName);
}
