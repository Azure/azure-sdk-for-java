// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elastic.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The properties of Azure Subscription ID to which the Organization of the logged in user belongs and gets billed into.
 */
@Fluent
public final class ElasticOrganizationToAzureSubscriptionMappingResponseProperties
    implements JsonSerializable<ElasticOrganizationToAzureSubscriptionMappingResponseProperties> {
    /*
     * The Azure Subscription ID to which the Organization belongs and gets billed into. This is empty for a new user OR
     * a user without an Elastic Organization.
     */
    private String billedAzureSubscriptionId;

    /*
     * Marketplace SaaS Info of the resource.
     */
    private MarketplaceSaaSInfo marketplaceSaasInfo;

    /*
     * The Elastic Organization Id.
     */
    private String elasticOrganizationId;

    /*
     * The Elastic Organization Name.
     */
    private String elasticOrganizationName;

    /**
     * Creates an instance of ElasticOrganizationToAzureSubscriptionMappingResponseProperties class.
     */
    public ElasticOrganizationToAzureSubscriptionMappingResponseProperties() {
    }

    /**
     * Get the billedAzureSubscriptionId property: The Azure Subscription ID to which the Organization belongs and gets
     * billed into. This is empty for a new user OR a user without an Elastic Organization.
     * 
     * @return the billedAzureSubscriptionId value.
     */
    public String billedAzureSubscriptionId() {
        return this.billedAzureSubscriptionId;
    }

    /**
     * Set the billedAzureSubscriptionId property: The Azure Subscription ID to which the Organization belongs and gets
     * billed into. This is empty for a new user OR a user without an Elastic Organization.
     * 
     * @param billedAzureSubscriptionId the billedAzureSubscriptionId value to set.
     * @return the ElasticOrganizationToAzureSubscriptionMappingResponseProperties object itself.
     */
    public ElasticOrganizationToAzureSubscriptionMappingResponseProperties
        withBilledAzureSubscriptionId(String billedAzureSubscriptionId) {
        this.billedAzureSubscriptionId = billedAzureSubscriptionId;
        return this;
    }

    /**
     * Get the marketplaceSaasInfo property: Marketplace SaaS Info of the resource.
     * 
     * @return the marketplaceSaasInfo value.
     */
    public MarketplaceSaaSInfo marketplaceSaasInfo() {
        return this.marketplaceSaasInfo;
    }

    /**
     * Get the elasticOrganizationId property: The Elastic Organization Id.
     * 
     * @return the elasticOrganizationId value.
     */
    public String elasticOrganizationId() {
        return this.elasticOrganizationId;
    }

    /**
     * Set the elasticOrganizationId property: The Elastic Organization Id.
     * 
     * @param elasticOrganizationId the elasticOrganizationId value to set.
     * @return the ElasticOrganizationToAzureSubscriptionMappingResponseProperties object itself.
     */
    public ElasticOrganizationToAzureSubscriptionMappingResponseProperties
        withElasticOrganizationId(String elasticOrganizationId) {
        this.elasticOrganizationId = elasticOrganizationId;
        return this;
    }

    /**
     * Get the elasticOrganizationName property: The Elastic Organization Name.
     * 
     * @return the elasticOrganizationName value.
     */
    public String elasticOrganizationName() {
        return this.elasticOrganizationName;
    }

    /**
     * Set the elasticOrganizationName property: The Elastic Organization Name.
     * 
     * @param elasticOrganizationName the elasticOrganizationName value to set.
     * @return the ElasticOrganizationToAzureSubscriptionMappingResponseProperties object itself.
     */
    public ElasticOrganizationToAzureSubscriptionMappingResponseProperties
        withElasticOrganizationName(String elasticOrganizationName) {
        this.elasticOrganizationName = elasticOrganizationName;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (marketplaceSaasInfo() != null) {
            marketplaceSaasInfo().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("billedAzureSubscriptionId", this.billedAzureSubscriptionId);
        jsonWriter.writeStringField("elasticOrganizationId", this.elasticOrganizationId);
        jsonWriter.writeStringField("elasticOrganizationName", this.elasticOrganizationName);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ElasticOrganizationToAzureSubscriptionMappingResponseProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ElasticOrganizationToAzureSubscriptionMappingResponseProperties if the JsonReader was
     * pointing to an instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the
     * ElasticOrganizationToAzureSubscriptionMappingResponseProperties.
     */
    public static ElasticOrganizationToAzureSubscriptionMappingResponseProperties fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            ElasticOrganizationToAzureSubscriptionMappingResponseProperties deserializedElasticOrganizationToAzureSubscriptionMappingResponseProperties
                = new ElasticOrganizationToAzureSubscriptionMappingResponseProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("billedAzureSubscriptionId".equals(fieldName)) {
                    deserializedElasticOrganizationToAzureSubscriptionMappingResponseProperties.billedAzureSubscriptionId
                        = reader.getString();
                } else if ("marketplaceSaasInfo".equals(fieldName)) {
                    deserializedElasticOrganizationToAzureSubscriptionMappingResponseProperties.marketplaceSaasInfo
                        = MarketplaceSaaSInfo.fromJson(reader);
                } else if ("elasticOrganizationId".equals(fieldName)) {
                    deserializedElasticOrganizationToAzureSubscriptionMappingResponseProperties.elasticOrganizationId
                        = reader.getString();
                } else if ("elasticOrganizationName".equals(fieldName)) {
                    deserializedElasticOrganizationToAzureSubscriptionMappingResponseProperties.elasticOrganizationName
                        = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedElasticOrganizationToAzureSubscriptionMappingResponseProperties;
        });
    }
}
