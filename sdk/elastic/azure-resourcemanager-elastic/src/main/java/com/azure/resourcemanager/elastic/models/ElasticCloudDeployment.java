// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elastic.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Details of the user's elastic deployment associated with the monitor resource.
 */
@Immutable
public final class ElasticCloudDeployment implements JsonSerializable<ElasticCloudDeployment> {
    /*
     * Elastic deployment name
     */
    private String name;

    /*
     * Elastic deployment Id
     */
    private String deploymentId;

    /*
     * Associated Azure subscription Id for the elastic deployment.
     */
    private String azureSubscriptionId;

    /*
     * Region where Deployment at Elastic side took place.
     */
    private String elasticsearchRegion;

    /*
     * Elasticsearch ingestion endpoint of the Elastic deployment.
     */
    private String elasticsearchServiceUrl;

    /*
     * Kibana endpoint of the Elastic deployment.
     */
    private String kibanaServiceUrl;

    /*
     * Kibana dashboard sso URL of the Elastic deployment.
     */
    private String kibanaSsoUrl;

    /**
     * Creates an instance of ElasticCloudDeployment class.
     */
    public ElasticCloudDeployment() {
    }

    /**
     * Get the name property: Elastic deployment name.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the deploymentId property: Elastic deployment Id.
     * 
     * @return the deploymentId value.
     */
    public String deploymentId() {
        return this.deploymentId;
    }

    /**
     * Get the azureSubscriptionId property: Associated Azure subscription Id for the elastic deployment.
     * 
     * @return the azureSubscriptionId value.
     */
    public String azureSubscriptionId() {
        return this.azureSubscriptionId;
    }

    /**
     * Get the elasticsearchRegion property: Region where Deployment at Elastic side took place.
     * 
     * @return the elasticsearchRegion value.
     */
    public String elasticsearchRegion() {
        return this.elasticsearchRegion;
    }

    /**
     * Get the elasticsearchServiceUrl property: Elasticsearch ingestion endpoint of the Elastic deployment.
     * 
     * @return the elasticsearchServiceUrl value.
     */
    public String elasticsearchServiceUrl() {
        return this.elasticsearchServiceUrl;
    }

    /**
     * Get the kibanaServiceUrl property: Kibana endpoint of the Elastic deployment.
     * 
     * @return the kibanaServiceUrl value.
     */
    public String kibanaServiceUrl() {
        return this.kibanaServiceUrl;
    }

    /**
     * Get the kibanaSsoUrl property: Kibana dashboard sso URL of the Elastic deployment.
     * 
     * @return the kibanaSsoUrl value.
     */
    public String kibanaSsoUrl() {
        return this.kibanaSsoUrl;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ElasticCloudDeployment from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ElasticCloudDeployment if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ElasticCloudDeployment.
     */
    public static ElasticCloudDeployment fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ElasticCloudDeployment deserializedElasticCloudDeployment = new ElasticCloudDeployment();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("name".equals(fieldName)) {
                    deserializedElasticCloudDeployment.name = reader.getString();
                } else if ("deploymentId".equals(fieldName)) {
                    deserializedElasticCloudDeployment.deploymentId = reader.getString();
                } else if ("azureSubscriptionId".equals(fieldName)) {
                    deserializedElasticCloudDeployment.azureSubscriptionId = reader.getString();
                } else if ("elasticsearchRegion".equals(fieldName)) {
                    deserializedElasticCloudDeployment.elasticsearchRegion = reader.getString();
                } else if ("elasticsearchServiceUrl".equals(fieldName)) {
                    deserializedElasticCloudDeployment.elasticsearchServiceUrl = reader.getString();
                } else if ("kibanaServiceUrl".equals(fieldName)) {
                    deserializedElasticCloudDeployment.kibanaServiceUrl = reader.getString();
                } else if ("kibanaSsoUrl".equals(fieldName)) {
                    deserializedElasticCloudDeployment.kibanaSsoUrl = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedElasticCloudDeployment;
        });
    }
}
