// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elastic.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Elastic traffic filter rule object. */
@Fluent
public final class ElasticTrafficFilterRule {
    /*
     * IP of the elastic filter rule
     */
    @JsonProperty(value = "source")
    private String source;

    /*
     * Description of the elastic filter rule
     */
    @JsonProperty(value = "description")
    private String description;

    /*
     * Guid of Private Endpoint in the elastic filter rule
     */
    @JsonProperty(value = "azureEndpointGuid")
    private String azureEndpointGuid;

    /*
     * Name of the Private Endpoint in the elastic filter rule
     */
    @JsonProperty(value = "azureEndpointName")
    private String azureEndpointName;

    /*
     * Id of the elastic filter rule
     */
    @JsonProperty(value = "id")
    private String id;

    /** Creates an instance of ElasticTrafficFilterRule class. */
    public ElasticTrafficFilterRule() {
    }

    /**
     * Get the source property: IP of the elastic filter rule.
     *
     * @return the source value.
     */
    public String source() {
        return this.source;
    }

    /**
     * Set the source property: IP of the elastic filter rule.
     *
     * @param source the source value to set.
     * @return the ElasticTrafficFilterRule object itself.
     */
    public ElasticTrafficFilterRule withSource(String source) {
        this.source = source;
        return this;
    }

    /**
     * Get the description property: Description of the elastic filter rule.
     *
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: Description of the elastic filter rule.
     *
     * @param description the description value to set.
     * @return the ElasticTrafficFilterRule object itself.
     */
    public ElasticTrafficFilterRule withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the azureEndpointGuid property: Guid of Private Endpoint in the elastic filter rule.
     *
     * @return the azureEndpointGuid value.
     */
    public String azureEndpointGuid() {
        return this.azureEndpointGuid;
    }

    /**
     * Set the azureEndpointGuid property: Guid of Private Endpoint in the elastic filter rule.
     *
     * @param azureEndpointGuid the azureEndpointGuid value to set.
     * @return the ElasticTrafficFilterRule object itself.
     */
    public ElasticTrafficFilterRule withAzureEndpointGuid(String azureEndpointGuid) {
        this.azureEndpointGuid = azureEndpointGuid;
        return this;
    }

    /**
     * Get the azureEndpointName property: Name of the Private Endpoint in the elastic filter rule.
     *
     * @return the azureEndpointName value.
     */
    public String azureEndpointName() {
        return this.azureEndpointName;
    }

    /**
     * Set the azureEndpointName property: Name of the Private Endpoint in the elastic filter rule.
     *
     * @param azureEndpointName the azureEndpointName value to set.
     * @return the ElasticTrafficFilterRule object itself.
     */
    public ElasticTrafficFilterRule withAzureEndpointName(String azureEndpointName) {
        this.azureEndpointName = azureEndpointName;
        return this;
    }

    /**
     * Get the id property: Id of the elastic filter rule.
     *
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: Id of the elastic filter rule.
     *
     * @param id the id value to set.
     * @return the ElasticTrafficFilterRule object itself.
     */
    public ElasticTrafficFilterRule withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
