// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elastic.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Elastic traffic filter rule object.
 */
@Fluent
public final class ElasticTrafficFilterRule implements JsonSerializable<ElasticTrafficFilterRule> {
    /*
     * IP of the elastic filter rule
     */
    private String source;

    /*
     * Description of the elastic filter rule
     */
    private String description;

    /*
     * Guid of Private Endpoint in the elastic filter rule
     */
    private String azureEndpointGuid;

    /*
     * Name of the Private Endpoint in the elastic filter rule
     */
    private String azureEndpointName;

    /*
     * Id of the elastic filter rule
     */
    private String id;

    /**
     * Creates an instance of ElasticTrafficFilterRule class.
     */
    public ElasticTrafficFilterRule() {
    }

    /**
     * Get the source property: IP of the elastic filter rule.
     * 
     * @return the source value.
     */
    public String source() {
        return this.source;
    }

    /**
     * Set the source property: IP of the elastic filter rule.
     * 
     * @param source the source value to set.
     * @return the ElasticTrafficFilterRule object itself.
     */
    public ElasticTrafficFilterRule withSource(String source) {
        this.source = source;
        return this;
    }

    /**
     * Get the description property: Description of the elastic filter rule.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: Description of the elastic filter rule.
     * 
     * @param description the description value to set.
     * @return the ElasticTrafficFilterRule object itself.
     */
    public ElasticTrafficFilterRule withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the azureEndpointGuid property: Guid of Private Endpoint in the elastic filter rule.
     * 
     * @return the azureEndpointGuid value.
     */
    public String azureEndpointGuid() {
        return this.azureEndpointGuid;
    }

    /**
     * Set the azureEndpointGuid property: Guid of Private Endpoint in the elastic filter rule.
     * 
     * @param azureEndpointGuid the azureEndpointGuid value to set.
     * @return the ElasticTrafficFilterRule object itself.
     */
    public ElasticTrafficFilterRule withAzureEndpointGuid(String azureEndpointGuid) {
        this.azureEndpointGuid = azureEndpointGuid;
        return this;
    }

    /**
     * Get the azureEndpointName property: Name of the Private Endpoint in the elastic filter rule.
     * 
     * @return the azureEndpointName value.
     */
    public String azureEndpointName() {
        return this.azureEndpointName;
    }

    /**
     * Set the azureEndpointName property: Name of the Private Endpoint in the elastic filter rule.
     * 
     * @param azureEndpointName the azureEndpointName value to set.
     * @return the ElasticTrafficFilterRule object itself.
     */
    public ElasticTrafficFilterRule withAzureEndpointName(String azureEndpointName) {
        this.azureEndpointName = azureEndpointName;
        return this;
    }

    /**
     * Get the id property: Id of the elastic filter rule.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: Id of the elastic filter rule.
     * 
     * @param id the id value to set.
     * @return the ElasticTrafficFilterRule object itself.
     */
    public ElasticTrafficFilterRule withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("source", this.source);
        jsonWriter.writeStringField("description", this.description);
        jsonWriter.writeStringField("azureEndpointGuid", this.azureEndpointGuid);
        jsonWriter.writeStringField("azureEndpointName", this.azureEndpointName);
        jsonWriter.writeStringField("id", this.id);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ElasticTrafficFilterRule from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ElasticTrafficFilterRule if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ElasticTrafficFilterRule.
     */
    public static ElasticTrafficFilterRule fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ElasticTrafficFilterRule deserializedElasticTrafficFilterRule = new ElasticTrafficFilterRule();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("source".equals(fieldName)) {
                    deserializedElasticTrafficFilterRule.source = reader.getString();
                } else if ("description".equals(fieldName)) {
                    deserializedElasticTrafficFilterRule.description = reader.getString();
                } else if ("azureEndpointGuid".equals(fieldName)) {
                    deserializedElasticTrafficFilterRule.azureEndpointGuid = reader.getString();
                } else if ("azureEndpointName".equals(fieldName)) {
                    deserializedElasticTrafficFilterRule.azureEndpointName = reader.getString();
                } else if ("id".equals(fieldName)) {
                    deserializedElasticTrafficFilterRule.id = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedElasticTrafficFilterRule;
        });
    }
}
