// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elastic.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Details of the user's elastic account.
 */
@Immutable
public final class ElasticCloudUser implements JsonSerializable<ElasticCloudUser> {
    /*
     * Email of the Elastic User Account.
     */
    private String emailAddress;

    /*
     * User Id of the elastic account of the User.
     */
    private String id;

    /*
     * Elastic cloud default dashboard sso URL of the Elastic user account.
     */
    private String elasticCloudSsoDefaultUrl;

    /**
     * Creates an instance of ElasticCloudUser class.
     */
    public ElasticCloudUser() {
    }

    /**
     * Get the emailAddress property: Email of the Elastic User Account.
     * 
     * @return the emailAddress value.
     */
    public String emailAddress() {
        return this.emailAddress;
    }

    /**
     * Get the id property: User Id of the elastic account of the User.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Get the elasticCloudSsoDefaultUrl property: Elastic cloud default dashboard sso URL of the Elastic user account.
     * 
     * @return the elasticCloudSsoDefaultUrl value.
     */
    public String elasticCloudSsoDefaultUrl() {
        return this.elasticCloudSsoDefaultUrl;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ElasticCloudUser from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ElasticCloudUser if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the ElasticCloudUser.
     */
    public static ElasticCloudUser fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ElasticCloudUser deserializedElasticCloudUser = new ElasticCloudUser();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("emailAddress".equals(fieldName)) {
                    deserializedElasticCloudUser.emailAddress = reader.getString();
                } else if ("id".equals(fieldName)) {
                    deserializedElasticCloudUser.id = reader.getString();
                } else if ("elasticCloudSsoDefaultUrl".equals(fieldName)) {
                    deserializedElasticCloudUser.elasticCloudSsoDefaultUrl = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedElasticCloudUser;
        });
    }
}
