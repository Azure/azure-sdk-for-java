// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elastic.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.elastic.models.ConnectedPartnerResourceProperties;
import java.io.IOException;

/**
 * Connected Partner Resources List Format.
 */
@Fluent
public final class ConnectedPartnerResourcesListFormatInner
    implements JsonSerializable<ConnectedPartnerResourcesListFormatInner> {
    /*
     * Connected Partner Resource Properties
     */
    private ConnectedPartnerResourceProperties properties;

    /**
     * Creates an instance of ConnectedPartnerResourcesListFormatInner class.
     */
    public ConnectedPartnerResourcesListFormatInner() {
    }

    /**
     * Get the properties property: Connected Partner Resource Properties.
     * 
     * @return the properties value.
     */
    public ConnectedPartnerResourceProperties properties() {
        return this.properties;
    }

    /**
     * Set the properties property: Connected Partner Resource Properties.
     * 
     * @param properties the properties value to set.
     * @return the ConnectedPartnerResourcesListFormatInner object itself.
     */
    public ConnectedPartnerResourcesListFormatInner withProperties(ConnectedPartnerResourceProperties properties) {
        this.properties = properties;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (properties() != null) {
            properties().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("properties", this.properties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ConnectedPartnerResourcesListFormatInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ConnectedPartnerResourcesListFormatInner if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ConnectedPartnerResourcesListFormatInner.
     */
    public static ConnectedPartnerResourcesListFormatInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ConnectedPartnerResourcesListFormatInner deserializedConnectedPartnerResourcesListFormatInner
                = new ConnectedPartnerResourcesListFormatInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("properties".equals(fieldName)) {
                    deserializedConnectedPartnerResourcesListFormatInner.properties
                        = ConnectedPartnerResourceProperties.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedConnectedPartnerResourcesListFormatInner;
        });
    }
}
