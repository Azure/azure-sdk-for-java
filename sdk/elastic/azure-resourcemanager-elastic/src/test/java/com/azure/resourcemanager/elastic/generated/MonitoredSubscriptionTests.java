// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elastic.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.elastic.models.FilteringTag;
import com.azure.resourcemanager.elastic.models.LogRules;
import com.azure.resourcemanager.elastic.models.MonitoredSubscription;
import com.azure.resourcemanager.elastic.models.MonitoringTagRulesProperties;
import com.azure.resourcemanager.elastic.models.Status;
import com.azure.resourcemanager.elastic.models.TagAction;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class MonitoredSubscriptionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MonitoredSubscription model = BinaryData.fromString(
            "{\"subscriptionId\":\"wey\",\"status\":\"Failed\",\"error\":\"n\",\"tagRules\":{\"provisioningState\":\"Updating\",\"logRules\":{\"sendAadLogs\":true,\"sendSubscriptionLogs\":false,\"sendActivityLogs\":true,\"filteringTags\":[{\"name\":\"vyvdcs\",\"value\":\"ynnaam\",\"action\":\"Exclude\"}]}}}")
            .toObject(MonitoredSubscription.class);
        Assertions.assertEquals("wey", model.subscriptionId());
        Assertions.assertEquals(Status.FAILED, model.status());
        Assertions.assertEquals("n", model.error());
        Assertions.assertTrue(model.tagRules().logRules().sendAadLogs());
        Assertions.assertFalse(model.tagRules().logRules().sendSubscriptionLogs());
        Assertions.assertTrue(model.tagRules().logRules().sendActivityLogs());
        Assertions.assertEquals("vyvdcs", model.tagRules().logRules().filteringTags().get(0).name());
        Assertions.assertEquals("ynnaam", model.tagRules().logRules().filteringTags().get(0).value());
        Assertions.assertEquals(TagAction.EXCLUDE, model.tagRules().logRules().filteringTags().get(0).action());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MonitoredSubscription model = new MonitoredSubscription().withSubscriptionId("wey")
            .withStatus(Status.FAILED)
            .withError("n")
            .withTagRules(new MonitoringTagRulesProperties().withLogRules(new LogRules().withSendAadLogs(true)
                .withSendSubscriptionLogs(false)
                .withSendActivityLogs(true)
                .withFilteringTags(Arrays
                    .asList(new FilteringTag().withName("vyvdcs").withValue("ynnaam").withAction(TagAction.EXCLUDE)))));
        model = BinaryData.fromObject(model).toObject(MonitoredSubscription.class);
        Assertions.assertEquals("wey", model.subscriptionId());
        Assertions.assertEquals(Status.FAILED, model.status());
        Assertions.assertEquals("n", model.error());
        Assertions.assertTrue(model.tagRules().logRules().sendAadLogs());
        Assertions.assertFalse(model.tagRules().logRules().sendSubscriptionLogs());
        Assertions.assertTrue(model.tagRules().logRules().sendActivityLogs());
        Assertions.assertEquals("vyvdcs", model.tagRules().logRules().filteringTags().get(0).name());
        Assertions.assertEquals("ynnaam", model.tagRules().logRules().filteringTags().get(0).value());
        Assertions.assertEquals(TagAction.EXCLUDE, model.tagRules().logRules().filteringTags().get(0).action());
    }
}
