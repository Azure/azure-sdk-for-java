// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elastic.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.elastic.models.ElasticTrafficFilterRule;
import org.junit.jupiter.api.Assertions;

public final class ElasticTrafficFilterRuleTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ElasticTrafficFilterRule model = BinaryData.fromString(
            "{\"source\":\"hsfxoblytkb\",\"description\":\"pe\",\"azureEndpointGuid\":\"wfbkrvrns\",\"azureEndpointName\":\"hqjohxcrsbfova\",\"id\":\"ruvw\"}")
            .toObject(ElasticTrafficFilterRule.class);
        Assertions.assertEquals("hsfxoblytkb", model.source());
        Assertions.assertEquals("pe", model.description());
        Assertions.assertEquals("wfbkrvrns", model.azureEndpointGuid());
        Assertions.assertEquals("hqjohxcrsbfova", model.azureEndpointName());
        Assertions.assertEquals("ruvw", model.id());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ElasticTrafficFilterRule model = new ElasticTrafficFilterRule().withSource("hsfxoblytkb")
            .withDescription("pe")
            .withAzureEndpointGuid("wfbkrvrns")
            .withAzureEndpointName("hqjohxcrsbfova")
            .withId("ruvw");
        model = BinaryData.fromObject(model).toObject(ElasticTrafficFilterRule.class);
        Assertions.assertEquals("hsfxoblytkb", model.source());
        Assertions.assertEquals("pe", model.description());
        Assertions.assertEquals("wfbkrvrns", model.azureEndpointGuid());
        Assertions.assertEquals("hqjohxcrsbfova", model.azureEndpointName());
        Assertions.assertEquals("ruvw", model.id());
    }
}
