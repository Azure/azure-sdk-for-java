// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elastic.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.elastic.fluent.models.ElasticTrafficFilterResponseInner;
import com.azure.resourcemanager.elastic.models.ElasticTrafficFilter;
import com.azure.resourcemanager.elastic.models.Type;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ElasticTrafficFilterResponseInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ElasticTrafficFilterResponseInner model =
            BinaryData
                .fromString(
                    "{\"rulesets\":[{\"id\":\"ddntwndei\",\"name\":\"twnpzaoqvuhrhcf\",\"description\":\"yd\",\"region\":\"lmjthjq\",\"type\":\"ip\",\"includeByDefault\":true,\"rules\":[]},{\"id\":\"mqc\",\"name\":\"q\",\"description\":\"khixuigdtopbo\",\"region\":\"og\",\"type\":\"ip\",\"includeByDefault\":false,\"rules\":[]},{\"id\":\"uhrzayvvt\",\"name\":\"vdfgiotk\",\"description\":\"utqxlngx\",\"region\":\"fgugnxkrxdqmid\",\"type\":\"ip\",\"includeByDefault\":false,\"rules\":[]},{\"id\":\"rabhjybigeho\",\"name\":\"bowsk\",\"description\":\"yktz\",\"region\":\"u\",\"type\":\"ip\",\"includeByDefault\":false,\"rules\":[]}]}")
                .toObject(ElasticTrafficFilterResponseInner.class);
        Assertions.assertEquals("ddntwndei", model.rulesets().get(0).id());
        Assertions.assertEquals("twnpzaoqvuhrhcf", model.rulesets().get(0).name());
        Assertions.assertEquals("yd", model.rulesets().get(0).description());
        Assertions.assertEquals("lmjthjq", model.rulesets().get(0).region());
        Assertions.assertEquals(Type.IP, model.rulesets().get(0).type());
        Assertions.assertEquals(true, model.rulesets().get(0).includeByDefault());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ElasticTrafficFilterResponseInner model =
            new ElasticTrafficFilterResponseInner()
                .withRulesets(
                    Arrays
                        .asList(
                            new ElasticTrafficFilter()
                                .withId("ddntwndei")
                                .withName("twnpzaoqvuhrhcf")
                                .withDescription("yd")
                                .withRegion("lmjthjq")
                                .withType(Type.IP)
                                .withIncludeByDefault(true)
                                .withRules(Arrays.asList()),
                            new ElasticTrafficFilter()
                                .withId("mqc")
                                .withName("q")
                                .withDescription("khixuigdtopbo")
                                .withRegion("og")
                                .withType(Type.IP)
                                .withIncludeByDefault(false)
                                .withRules(Arrays.asList()),
                            new ElasticTrafficFilter()
                                .withId("uhrzayvvt")
                                .withName("vdfgiotk")
                                .withDescription("utqxlngx")
                                .withRegion("fgugnxkrxdqmid")
                                .withType(Type.IP)
                                .withIncludeByDefault(false)
                                .withRules(Arrays.asList()),
                            new ElasticTrafficFilter()
                                .withId("rabhjybigeho")
                                .withName("bowsk")
                                .withDescription("yktz")
                                .withRegion("u")
                                .withType(Type.IP)
                                .withIncludeByDefault(false)
                                .withRules(Arrays.asList())));
        model = BinaryData.fromObject(model).toObject(ElasticTrafficFilterResponseInner.class);
        Assertions.assertEquals("ddntwndei", model.rulesets().get(0).id());
        Assertions.assertEquals("twnpzaoqvuhrhcf", model.rulesets().get(0).name());
        Assertions.assertEquals("yd", model.rulesets().get(0).description());
        Assertions.assertEquals("lmjthjq", model.rulesets().get(0).region());
        Assertions.assertEquals(Type.IP, model.rulesets().get(0).type());
        Assertions.assertEquals(true, model.rulesets().get(0).includeByDefault());
    }
}
