// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elastic.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.elastic.ElasticManager;
import com.azure.resourcemanager.elastic.models.ElasticTrafficFilterResponse;
import com.azure.resourcemanager.elastic.models.Type;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ListAssociatedTrafficFiltersListWithResponseMockTests {
    @Test
    public void testListWithResponse() throws Exception {
        String responseStr
            = "{\"rulesets\":[{\"id\":\"p\",\"name\":\"cstwity\",\"description\":\"evxccedcp\",\"region\":\"dyodnwzxltj\",\"type\":\"azure_private_endpoint\",\"includeByDefault\":true,\"rules\":[{\"source\":\"gcxn\",\"description\":\"vwxqibyqunyo\",\"azureEndpointGuid\":\"wlmdjrkv\",\"azureEndpointName\":\"bvfvpdbod\",\"id\":\"izsjqlhkrr\"},{\"source\":\"deibqip\",\"description\":\"ghvxndzwmkrefa\",\"azureEndpointGuid\":\"jorwkqnyhgbij\",\"azureEndpointName\":\"ivfxzsjabibsyst\",\"id\":\"fsdjpvkvp\"},{\"source\":\"xbkzbzkdvncj\",\"description\":\"udurgkakmokz\",\"azureEndpointGuid\":\"jk\",\"azureEndpointName\":\"fhmouwq\",\"id\":\"zrfze\"}]},{\"id\":\"ebizikayuh\",\"name\":\"bjbsybb\",\"description\":\"r\",\"region\":\"ldgmfpgvmpip\",\"type\":\"ip\",\"includeByDefault\":false,\"rules\":[{\"source\":\"x\",\"description\":\"mwutwbdsre\",\"azureEndpointGuid\":\"drhneuyow\",\"azureEndpointName\":\"d\",\"id\":\"t\"},{\"source\":\"ib\",\"description\":\"cgpik\",\"azureEndpointGuid\":\"imejzanl\",\"azureEndpointName\":\"xi\",\"id\":\"rmbzo\"},{\"source\":\"kixrj\",\"description\":\"irgzp\",\"azureEndpointGuid\":\"lazszrn\",\"azureEndpointName\":\"iin\",\"id\":\"pwp\"}]},{\"id\":\"lwbtlhf\",\"name\":\"jcdh\",\"description\":\"fjvfbgofeljagr\",\"region\":\"qhl\",\"type\":\"azure_private_endpoint\",\"includeByDefault\":false,\"rules\":[{\"source\":\"nalghfkvtvsexso\",\"description\":\"el\",\"azureEndpointGuid\":\"hhahhxvrhmzkwpjg\",\"azureEndpointName\":\"spughftqsxhq\",\"id\":\"j\"},{\"source\":\"kndxdigrjgu\",\"description\":\"zdmsyqtfi\",\"azureEndpointGuid\":\"hbotzingamvppho\",\"azureEndpointName\":\"qzudphq\",\"id\":\"vdkfwynwcvtbvk\"}]}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ElasticManager manager = ElasticManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ElasticTrafficFilterResponse response = manager.listAssociatedTrafficFilters()
            .listWithResponse("cdl", "h", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("p", response.rulesets().get(0).id());
        Assertions.assertEquals("cstwity", response.rulesets().get(0).name());
        Assertions.assertEquals("evxccedcp", response.rulesets().get(0).description());
        Assertions.assertEquals("dyodnwzxltj", response.rulesets().get(0).region());
        Assertions.assertEquals(Type.AZURE_PRIVATE_ENDPOINT, response.rulesets().get(0).type());
        Assertions.assertEquals(true, response.rulesets().get(0).includeByDefault());
        Assertions.assertEquals("gcxn", response.rulesets().get(0).rules().get(0).source());
        Assertions.assertEquals("vwxqibyqunyo", response.rulesets().get(0).rules().get(0).description());
        Assertions.assertEquals("wlmdjrkv", response.rulesets().get(0).rules().get(0).azureEndpointGuid());
        Assertions.assertEquals("bvfvpdbod", response.rulesets().get(0).rules().get(0).azureEndpointName());
        Assertions.assertEquals("izsjqlhkrr", response.rulesets().get(0).rules().get(0).id());
    }
}
