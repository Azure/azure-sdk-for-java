// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elastic.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.elastic.models.FilteringTag;
import com.azure.resourcemanager.elastic.models.LogRules;
import com.azure.resourcemanager.elastic.models.MonitoringTagRulesProperties;
import com.azure.resourcemanager.elastic.models.ProvisioningState;
import com.azure.resourcemanager.elastic.models.TagAction;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class MonitoringTagRulesPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MonitoringTagRulesProperties model = BinaryData.fromString(
            "{\"provisioningState\":\"Deleting\",\"logRules\":{\"sendAadLogs\":false,\"sendSubscriptionLogs\":true,\"sendActivityLogs\":true,\"filteringTags\":[{\"name\":\"eamdp\",\"value\":\"g\",\"action\":\"Exclude\"},{\"name\":\"uxwgipwho\",\"value\":\"wkgshwa\",\"action\":\"Exclude\"}]}}")
            .toObject(MonitoringTagRulesProperties.class);
        Assertions.assertEquals(ProvisioningState.DELETING, model.provisioningState());
        Assertions.assertEquals(false, model.logRules().sendAadLogs());
        Assertions.assertEquals(true, model.logRules().sendSubscriptionLogs());
        Assertions.assertEquals(true, model.logRules().sendActivityLogs());
        Assertions.assertEquals("eamdp", model.logRules().filteringTags().get(0).name());
        Assertions.assertEquals("g", model.logRules().filteringTags().get(0).value());
        Assertions.assertEquals(TagAction.EXCLUDE, model.logRules().filteringTags().get(0).action());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MonitoringTagRulesProperties model
            = new MonitoringTagRulesProperties().withProvisioningState(ProvisioningState.DELETING)
                .withLogRules(new LogRules().withSendAadLogs(false)
                    .withSendSubscriptionLogs(true)
                    .withSendActivityLogs(true)
                    .withFilteringTags(Arrays.asList(
                        new FilteringTag().withName("eamdp").withValue("g").withAction(TagAction.EXCLUDE),
                        new FilteringTag().withName("uxwgipwho").withValue("wkgshwa").withAction(TagAction.EXCLUDE))));
        model = BinaryData.fromObject(model).toObject(MonitoringTagRulesProperties.class);
        Assertions.assertEquals(ProvisioningState.DELETING, model.provisioningState());
        Assertions.assertEquals(false, model.logRules().sendAadLogs());
        Assertions.assertEquals(true, model.logRules().sendSubscriptionLogs());
        Assertions.assertEquals(true, model.logRules().sendActivityLogs());
        Assertions.assertEquals("eamdp", model.logRules().filteringTags().get(0).name());
        Assertions.assertEquals("g", model.logRules().filteringTags().get(0).value());
        Assertions.assertEquals(TagAction.EXCLUDE, model.logRules().filteringTags().get(0).action());
    }
}
