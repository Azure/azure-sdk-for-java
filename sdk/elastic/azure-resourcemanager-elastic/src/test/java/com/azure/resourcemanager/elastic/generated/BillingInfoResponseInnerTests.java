// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elastic.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.elastic.fluent.models.BillingInfoResponseInner;
import com.azure.resourcemanager.elastic.models.MarketplaceSaaSInfo;
import com.azure.resourcemanager.elastic.models.MarketplaceSaaSInfoMarketplaceSubscription;
import com.azure.resourcemanager.elastic.models.PartnerBillingEntity;
import org.junit.jupiter.api.Assertions;

public final class BillingInfoResponseInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BillingInfoResponseInner model = BinaryData.fromString(
            "{\"marketplaceSaasInfo\":{\"marketplaceSubscription\":{\"id\":\"mmqhgyxzkonocuk\",\"publisherId\":\"lyaxuc\",\"offerId\":\"uqszfk\"},\"marketplaceName\":\"ypewrmjmwvvjekt\",\"marketplaceResourceId\":\"senhwlrs\",\"marketplaceStatus\":\"rzpwvlqdqgbiq\",\"billedAzureSubscriptionId\":\"ihkaetcktvfc\",\"subscribed\":true},\"partnerBillingEntity\":{\"id\":\"kymuctqhjfbebr\",\"name\":\"xerf\",\"partnerEntityUri\":\"utttxfvjrbirp\"}}")
            .toObject(BillingInfoResponseInner.class);
        Assertions.assertEquals("mmqhgyxzkonocuk", model.marketplaceSaasInfo().marketplaceSubscription().id());
        Assertions.assertEquals("lyaxuc", model.marketplaceSaasInfo().marketplaceSubscription().publisherId());
        Assertions.assertEquals("uqszfk", model.marketplaceSaasInfo().marketplaceSubscription().offerId());
        Assertions.assertEquals("ypewrmjmwvvjekt", model.marketplaceSaasInfo().marketplaceName());
        Assertions.assertEquals("senhwlrs", model.marketplaceSaasInfo().marketplaceResourceId());
        Assertions.assertEquals("rzpwvlqdqgbiq", model.marketplaceSaasInfo().marketplaceStatus());
        Assertions.assertEquals("ihkaetcktvfc", model.marketplaceSaasInfo().billedAzureSubscriptionId());
        Assertions.assertTrue(model.marketplaceSaasInfo().subscribed());
        Assertions.assertEquals("kymuctqhjfbebr", model.partnerBillingEntity().id());
        Assertions.assertEquals("xerf", model.partnerBillingEntity().name());
        Assertions.assertEquals("utttxfvjrbirp", model.partnerBillingEntity().partnerEntityUri());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BillingInfoResponseInner model = new BillingInfoResponseInner()
            .withMarketplaceSaasInfo(new MarketplaceSaaSInfo()
                .withMarketplaceSubscription(new MarketplaceSaaSInfoMarketplaceSubscription().withId("mmqhgyxzkonocuk")
                    .withPublisherId("lyaxuc")
                    .withOfferId("uqszfk"))
                .withMarketplaceName("ypewrmjmwvvjekt")
                .withMarketplaceResourceId("senhwlrs")
                .withMarketplaceStatus("rzpwvlqdqgbiq")
                .withBilledAzureSubscriptionId("ihkaetcktvfc")
                .withSubscribed(true))
            .withPartnerBillingEntity(new PartnerBillingEntity().withId("kymuctqhjfbebr")
                .withName("xerf")
                .withPartnerEntityUri("utttxfvjrbirp"));
        model = BinaryData.fromObject(model).toObject(BillingInfoResponseInner.class);
        Assertions.assertEquals("mmqhgyxzkonocuk", model.marketplaceSaasInfo().marketplaceSubscription().id());
        Assertions.assertEquals("lyaxuc", model.marketplaceSaasInfo().marketplaceSubscription().publisherId());
        Assertions.assertEquals("uqszfk", model.marketplaceSaasInfo().marketplaceSubscription().offerId());
        Assertions.assertEquals("ypewrmjmwvvjekt", model.marketplaceSaasInfo().marketplaceName());
        Assertions.assertEquals("senhwlrs", model.marketplaceSaasInfo().marketplaceResourceId());
        Assertions.assertEquals("rzpwvlqdqgbiq", model.marketplaceSaasInfo().marketplaceStatus());
        Assertions.assertEquals("ihkaetcktvfc", model.marketplaceSaasInfo().billedAzureSubscriptionId());
        Assertions.assertTrue(model.marketplaceSaasInfo().subscribed());
        Assertions.assertEquals("kymuctqhjfbebr", model.partnerBillingEntity().id());
        Assertions.assertEquals("xerf", model.partnerBillingEntity().name());
        Assertions.assertEquals("utttxfvjrbirp", model.partnerBillingEntity().partnerEntityUri());
    }
}
