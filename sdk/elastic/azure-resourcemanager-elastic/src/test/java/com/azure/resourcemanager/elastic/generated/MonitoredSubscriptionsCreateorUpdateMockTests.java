// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elastic.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.elastic.ElasticManager;
import com.azure.resourcemanager.elastic.models.LogRules;
import com.azure.resourcemanager.elastic.models.MonitoredSubscription;
import com.azure.resourcemanager.elastic.models.MonitoredSubscriptionProperties;
import com.azure.resourcemanager.elastic.models.MonitoringTagRulesProperties;
import com.azure.resourcemanager.elastic.models.Operation;
import com.azure.resourcemanager.elastic.models.Status;
import com.azure.resourcemanager.elastic.models.SubscriptionList;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class MonitoredSubscriptionsCreateorUpdateMockTests {
    @Test
    public void testCreateorUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"operation\":\"AddBegin\",\"monitoredSubscriptionList\":[{\"subscriptionId\":\"kojvd\",\"status\":\"Deleting\",\"error\":\"oqouicybxarzgszu\",\"tagRules\":{\"provisioningState\":\"Deleting\",\"logRules\":{}}},{\"subscriptionId\":\"opidoamciodh\",\"status\":\"Deleting\",\"error\":\"xkhnzbonlwnto\",\"tagRules\":{\"provisioningState\":\"Canceled\",\"logRules\":{}}},{\"subscriptionId\":\"bwh\",\"status\":\"InProgress\",\"error\":\"cmrvexzt\",\"tagRules\":{\"provisioningState\":\"Updating\",\"logRules\":{}}}],\"provisioningState\":\"Succeeded\"},\"id\":\"ra\",\"name\":\"yzkoowtlmngu\",\"type\":\"aw\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ElasticManager manager = ElasticManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        MonitoredSubscriptionProperties response = manager.monitoredSubscriptions()
            .define("s")
            .withExistingMonitor("sgsahmkycgr", "uwjuetaeburuvdmo")
            .withProperties(new SubscriptionList().withOperation(Operation.ADD_COMPLETE)
                .withMonitoredSubscriptionList(
                    Arrays.asList(new MonitoredSubscription().withSubscriptionId("mqoefkifrvtpuqu")
                        .withStatus(Status.ACTIVE)
                        .withError("gkfbtndoaong")
                        .withTagRules(new MonitoringTagRulesProperties().withLogRules(new LogRules())))))
            .create();

        Assertions.assertEquals(Operation.ADD_BEGIN, response.properties().operation());
        Assertions.assertEquals("kojvd", response.properties().monitoredSubscriptionList().get(0).subscriptionId());
        Assertions.assertEquals(Status.DELETING, response.properties().monitoredSubscriptionList().get(0).status());
        Assertions.assertEquals("oqouicybxarzgszu", response.properties().monitoredSubscriptionList().get(0).error());
    }
}
