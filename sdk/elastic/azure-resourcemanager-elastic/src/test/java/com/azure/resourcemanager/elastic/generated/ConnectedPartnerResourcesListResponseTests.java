// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elastic.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.elastic.fluent.models.ConnectedPartnerResourcesListFormatInner;
import com.azure.resourcemanager.elastic.models.ConnectedPartnerResourceProperties;
import com.azure.resourcemanager.elastic.models.ConnectedPartnerResourcesListResponse;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ConnectedPartnerResourcesListResponseTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ConnectedPartnerResourcesListResponse model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"partnerDeploymentName\":\"oxgvclt\",\"partnerDeploymentUri\":\"sncghkjeszz\",\"azureResourceId\":\"ijhtxf\",\"location\":\"xbf\",\"type\":\"xnehmpvec\"}},{\"properties\":{\"partnerDeploymentName\":\"debfqkkrbmpukgri\",\"partnerDeploymentUri\":\"lzlfbxzpuz\",\"azureResourceId\":\"ispnqzahmgkbrp\",\"location\":\"dhibnuq\",\"type\":\"pikad\"}},{\"properties\":{\"partnerDeploymentName\":\"tqagnbuynh\",\"partnerDeploymentUri\":\"gg\",\"azureResourceId\":\"bfs\",\"location\":\"rbu\",\"type\":\"cvpnazzmhjrunmpx\"}}],\"nextLink\":\"dbhrbnlankxm\"}")
            .toObject(ConnectedPartnerResourcesListResponse.class);
        Assertions.assertEquals("oxgvclt", model.value().get(0).properties().partnerDeploymentName());
        Assertions.assertEquals("sncghkjeszz", model.value().get(0).properties().partnerDeploymentUri());
        Assertions.assertEquals("ijhtxf", model.value().get(0).properties().azureResourceId());
        Assertions.assertEquals("xbf", model.value().get(0).properties().location());
        Assertions.assertEquals("xnehmpvec", model.value().get(0).properties().type());
        Assertions.assertEquals("dbhrbnlankxm", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ConnectedPartnerResourcesListResponse model
            = new ConnectedPartnerResourcesListResponse().withValue(Arrays.asList(
                new ConnectedPartnerResourcesListFormatInner()
                    .withProperties(new ConnectedPartnerResourceProperties().withPartnerDeploymentName("oxgvclt")
                        .withPartnerDeploymentUri("sncghkjeszz")
                        .withAzureResourceId("ijhtxf")
                        .withLocation("xbf")
                        .withType("xnehmpvec")),
                new ConnectedPartnerResourcesListFormatInner().withProperties(
                    new ConnectedPartnerResourceProperties().withPartnerDeploymentName("debfqkkrbmpukgri")
                        .withPartnerDeploymentUri("lzlfbxzpuz")
                        .withAzureResourceId("ispnqzahmgkbrp")
                        .withLocation("dhibnuq")
                        .withType("pikad")),
                new ConnectedPartnerResourcesListFormatInner()
                    .withProperties(new ConnectedPartnerResourceProperties().withPartnerDeploymentName("tqagnbuynh")
                        .withPartnerDeploymentUri("gg")
                        .withAzureResourceId("bfs")
                        .withLocation("rbu")
                        .withType("cvpnazzmhjrunmpx"))))
                .withNextLink("dbhrbnlankxm");
        model = BinaryData.fromObject(model).toObject(ConnectedPartnerResourcesListResponse.class);
        Assertions.assertEquals("oxgvclt", model.value().get(0).properties().partnerDeploymentName());
        Assertions.assertEquals("sncghkjeszz", model.value().get(0).properties().partnerDeploymentUri());
        Assertions.assertEquals("ijhtxf", model.value().get(0).properties().azureResourceId());
        Assertions.assertEquals("xbf", model.value().get(0).properties().location());
        Assertions.assertEquals("xnehmpvec", model.value().get(0).properties().type());
        Assertions.assertEquals("dbhrbnlankxm", model.nextLink());
    }
}
