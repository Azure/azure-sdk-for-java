// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elastic.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.elastic.models.ElasticTrafficFilter;
import com.azure.resourcemanager.elastic.models.ElasticTrafficFilterRule;
import com.azure.resourcemanager.elastic.models.Type;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ElasticTrafficFilterTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ElasticTrafficFilter model =
            BinaryData
                .fromString(
                    "{\"id\":\"ndrvynhzg\",\"name\":\"hrc\",\"description\":\"nc\",\"region\":\"pec\",\"type\":\"ip\",\"includeByDefault\":true,\"rules\":[{\"source\":\"sxlzevgbmqj\",\"description\":\"bcypmi\",\"azureEndpointGuid\":\"w\",\"azureEndpointName\":\"uvcc\",\"id\":\"nfnbacfionlebxe\"}]}")
                .toObject(ElasticTrafficFilter.class);
        Assertions.assertEquals("ndrvynhzg", model.id());
        Assertions.assertEquals("hrc", model.name());
        Assertions.assertEquals("nc", model.description());
        Assertions.assertEquals("pec", model.region());
        Assertions.assertEquals(Type.IP, model.type());
        Assertions.assertEquals(true, model.includeByDefault());
        Assertions.assertEquals("sxlzevgbmqj", model.rules().get(0).source());
        Assertions.assertEquals("bcypmi", model.rules().get(0).description());
        Assertions.assertEquals("w", model.rules().get(0).azureEndpointGuid());
        Assertions.assertEquals("uvcc", model.rules().get(0).azureEndpointName());
        Assertions.assertEquals("nfnbacfionlebxe", model.rules().get(0).id());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ElasticTrafficFilter model =
            new ElasticTrafficFilter()
                .withId("ndrvynhzg")
                .withName("hrc")
                .withDescription("nc")
                .withRegion("pec")
                .withType(Type.IP)
                .withIncludeByDefault(true)
                .withRules(
                    Arrays
                        .asList(
                            new ElasticTrafficFilterRule()
                                .withSource("sxlzevgbmqj")
                                .withDescription("bcypmi")
                                .withAzureEndpointGuid("w")
                                .withAzureEndpointName("uvcc")
                                .withId("nfnbacfionlebxe")));
        model = BinaryData.fromObject(model).toObject(ElasticTrafficFilter.class);
        Assertions.assertEquals("ndrvynhzg", model.id());
        Assertions.assertEquals("hrc", model.name());
        Assertions.assertEquals("nc", model.description());
        Assertions.assertEquals("pec", model.region());
        Assertions.assertEquals(Type.IP, model.type());
        Assertions.assertEquals(true, model.includeByDefault());
        Assertions.assertEquals("sxlzevgbmqj", model.rules().get(0).source());
        Assertions.assertEquals("bcypmi", model.rules().get(0).description());
        Assertions.assertEquals("w", model.rules().get(0).azureEndpointGuid());
        Assertions.assertEquals("uvcc", model.rules().get(0).azureEndpointName());
        Assertions.assertEquals("nfnbacfionlebxe", model.rules().get(0).id());
    }
}
