// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elastic.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.elastic.models.ElasticTrafficFilter;
import com.azure.resourcemanager.elastic.models.ElasticTrafficFilterRule;
import com.azure.resourcemanager.elastic.models.Type;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class ElasticTrafficFilterTests {
    @Test
    public void testDeserialize() {
        ElasticTrafficFilter model =
            BinaryData
                .fromString(
                    "{\"id\":\"oppusuesnzw\",\"name\":\"jbavorxzdm\",\"description\":\"ctbqvudwx\",\"region\":\"dnvowg\",\"type\":\"azure_private_endpoint\",\"includeByDefault\":true,\"rules\":[{\"source\":\"cglhslazjdyggdt\",\"description\":\"xhbkuofq\",\"azureEndpointGuid\":\"yk\",\"azureEndpointName\":\"enevfyexfwhybci\",\"id\":\"yvdcsitynnaa\"},{\"source\":\"ectehf\",\"description\":\"scjeypv\",\"azureEndpointGuid\":\"zrkgqhcjrefovg\",\"azureEndpointName\":\"qsl\",\"id\":\"yvxyqjp\"}]}")
                .toObject(ElasticTrafficFilter.class);
        Assertions.assertEquals("oppusuesnzw", model.id());
        Assertions.assertEquals("jbavorxzdm", model.name());
        Assertions.assertEquals("ctbqvudwx", model.description());
        Assertions.assertEquals("dnvowg", model.region());
        Assertions.assertEquals(Type.AZURE_PRIVATE_ENDPOINT, model.type());
        Assertions.assertEquals(true, model.includeByDefault());
        Assertions.assertEquals("cglhslazjdyggdt", model.rules().get(0).source());
        Assertions.assertEquals("xhbkuofq", model.rules().get(0).description());
        Assertions.assertEquals("yk", model.rules().get(0).azureEndpointGuid());
        Assertions.assertEquals("enevfyexfwhybci", model.rules().get(0).azureEndpointName());
        Assertions.assertEquals("yvdcsitynnaa", model.rules().get(0).id());
    }

    @Test
    public void testSerialize() {
        ElasticTrafficFilter model =
            new ElasticTrafficFilter()
                .withId("oppusuesnzw")
                .withName("jbavorxzdm")
                .withDescription("ctbqvudwx")
                .withRegion("dnvowg")
                .withType(Type.AZURE_PRIVATE_ENDPOINT)
                .withIncludeByDefault(true)
                .withRules(
                    Arrays
                        .asList(
                            new ElasticTrafficFilterRule()
                                .withSource("cglhslazjdyggdt")
                                .withDescription("xhbkuofq")
                                .withAzureEndpointGuid("yk")
                                .withAzureEndpointName("enevfyexfwhybci")
                                .withId("yvdcsitynnaa"),
                            new ElasticTrafficFilterRule()
                                .withSource("ectehf")
                                .withDescription("scjeypv")
                                .withAzureEndpointGuid("zrkgqhcjrefovg")
                                .withAzureEndpointName("qsl")
                                .withId("yvxyqjp")));
        model = BinaryData.fromObject(model).toObject(ElasticTrafficFilter.class);
        Assertions.assertEquals("oppusuesnzw", model.id());
        Assertions.assertEquals("jbavorxzdm", model.name());
        Assertions.assertEquals("ctbqvudwx", model.description());
        Assertions.assertEquals("dnvowg", model.region());
        Assertions.assertEquals(Type.AZURE_PRIVATE_ENDPOINT, model.type());
        Assertions.assertEquals(true, model.includeByDefault());
        Assertions.assertEquals("cglhslazjdyggdt", model.rules().get(0).source());
        Assertions.assertEquals("xhbkuofq", model.rules().get(0).description());
        Assertions.assertEquals("yk", model.rules().get(0).azureEndpointGuid());
        Assertions.assertEquals("enevfyexfwhybci", model.rules().get(0).azureEndpointName());
        Assertions.assertEquals("yvdcsitynnaa", model.rules().get(0).id());
    }
}
