// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elastic.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.elastic.models.ElasticTrafficFilter;
import com.azure.resourcemanager.elastic.models.ElasticTrafficFilterRule;
import com.azure.resourcemanager.elastic.models.Type;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ElasticTrafficFilterTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ElasticTrafficFilter model = BinaryData.fromString(
            "{\"id\":\"klbb\",\"name\":\"plwzbhvgyugu\",\"description\":\"vmkfssxqu\",\"region\":\"fpl\",\"type\":\"azure_private_endpoint\",\"includeByDefault\":true,\"rules\":[{\"source\":\"zkd\",\"description\":\"lpvlopw\",\"azureEndpointGuid\":\"ighxpk\",\"azureEndpointName\":\"zb\",\"id\":\"uebbaumnyqup\"}]}")
            .toObject(ElasticTrafficFilter.class);
        Assertions.assertEquals("klbb", model.id());
        Assertions.assertEquals("plwzbhvgyugu", model.name());
        Assertions.assertEquals("vmkfssxqu", model.description());
        Assertions.assertEquals("fpl", model.region());
        Assertions.assertEquals(Type.AZURE_PRIVATE_ENDPOINT, model.type());
        Assertions.assertEquals(true, model.includeByDefault());
        Assertions.assertEquals("zkd", model.rules().get(0).source());
        Assertions.assertEquals("lpvlopw", model.rules().get(0).description());
        Assertions.assertEquals("ighxpk", model.rules().get(0).azureEndpointGuid());
        Assertions.assertEquals("zb", model.rules().get(0).azureEndpointName());
        Assertions.assertEquals("uebbaumnyqup", model.rules().get(0).id());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ElasticTrafficFilter model = new ElasticTrafficFilter().withId("klbb")
            .withName("plwzbhvgyugu")
            .withDescription("vmkfssxqu")
            .withRegion("fpl")
            .withType(Type.AZURE_PRIVATE_ENDPOINT)
            .withIncludeByDefault(true)
            .withRules(Arrays.asList(new ElasticTrafficFilterRule().withSource("zkd")
                .withDescription("lpvlopw")
                .withAzureEndpointGuid("ighxpk")
                .withAzureEndpointName("zb")
                .withId("uebbaumnyqup")));
        model = BinaryData.fromObject(model).toObject(ElasticTrafficFilter.class);
        Assertions.assertEquals("klbb", model.id());
        Assertions.assertEquals("plwzbhvgyugu", model.name());
        Assertions.assertEquals("vmkfssxqu", model.description());
        Assertions.assertEquals("fpl", model.region());
        Assertions.assertEquals(Type.AZURE_PRIVATE_ENDPOINT, model.type());
        Assertions.assertEquals(true, model.includeByDefault());
        Assertions.assertEquals("zkd", model.rules().get(0).source());
        Assertions.assertEquals("lpvlopw", model.rules().get(0).description());
        Assertions.assertEquals("ighxpk", model.rules().get(0).azureEndpointGuid());
        Assertions.assertEquals("zb", model.rules().get(0).azureEndpointName());
        Assertions.assertEquals("uebbaumnyqup", model.rules().get(0).id());
    }
}
