// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elastic.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.elastic.ElasticManager;
import com.azure.resourcemanager.elastic.models.BillingInfoResponse;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class BillingInfoesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"marketplaceSaasInfo\":{\"marketplaceSubscription\":{\"id\":\"ondjmq\"},\"marketplaceName\":\"vypomgkopkwho\",\"marketplaceResourceId\":\"pajqgxysm\",\"marketplaceStatus\":\"mbqfqvmk\",\"billedAzureSubscriptionId\":\"oz\",\"subscribed\":true},\"partnerBillingEntity\":{\"id\":\"lxprglyatddckcbc\",\"name\":\"jrjxgciqibrhosx\",\"partnerEntityUri\":\"qrhzoymibmrqyib\"}}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ElasticManager manager = ElasticManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        BillingInfoResponse response = manager.billingInfoes()
            .getWithResponse("aakc", "wiyzvqtmnubexkp", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("ondjmq", response.marketplaceSaasInfo().marketplaceSubscription().id());
        Assertions.assertEquals("vypomgkopkwho", response.marketplaceSaasInfo().marketplaceName());
        Assertions.assertEquals("pajqgxysm", response.marketplaceSaasInfo().marketplaceResourceId());
        Assertions.assertEquals("mbqfqvmk", response.marketplaceSaasInfo().marketplaceStatus());
        Assertions.assertEquals("oz", response.marketplaceSaasInfo().billedAzureSubscriptionId());
        Assertions.assertEquals(true, response.marketplaceSaasInfo().subscribed());
        Assertions.assertEquals("lxprglyatddckcbc", response.partnerBillingEntity().id());
        Assertions.assertEquals("jrjxgciqibrhosx", response.partnerBillingEntity().name());
        Assertions.assertEquals("qrhzoymibmrqyib", response.partnerBillingEntity().partnerEntityUri());
    }
}
