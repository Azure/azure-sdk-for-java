// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Artifact profile properties.
 */
@Fluent
public final class NsdArtifactProfile implements JsonSerializable<NsdArtifactProfile> {
    /*
     * The artifact store resource id
     */
    private ReferencedResource artifactStoreReference;

    /*
     * Artifact name.
     */
    private String artifactName;

    /*
     * Artifact version.
     */
    private String artifactVersion;

    /**
     * Creates an instance of NsdArtifactProfile class.
     */
    public NsdArtifactProfile() {
    }

    /**
     * Get the artifactStoreReference property: The artifact store resource id.
     * 
     * @return the artifactStoreReference value.
     */
    public ReferencedResource artifactStoreReference() {
        return this.artifactStoreReference;
    }

    /**
     * Set the artifactStoreReference property: The artifact store resource id.
     * 
     * @param artifactStoreReference the artifactStoreReference value to set.
     * @return the NsdArtifactProfile object itself.
     */
    public NsdArtifactProfile withArtifactStoreReference(ReferencedResource artifactStoreReference) {
        this.artifactStoreReference = artifactStoreReference;
        return this;
    }

    /**
     * Get the artifactName property: Artifact name.
     * 
     * @return the artifactName value.
     */
    public String artifactName() {
        return this.artifactName;
    }

    /**
     * Set the artifactName property: Artifact name.
     * 
     * @param artifactName the artifactName value to set.
     * @return the NsdArtifactProfile object itself.
     */
    public NsdArtifactProfile withArtifactName(String artifactName) {
        this.artifactName = artifactName;
        return this;
    }

    /**
     * Get the artifactVersion property: Artifact version.
     * 
     * @return the artifactVersion value.
     */
    public String artifactVersion() {
        return this.artifactVersion;
    }

    /**
     * Set the artifactVersion property: Artifact version.
     * 
     * @param artifactVersion the artifactVersion value to set.
     * @return the NsdArtifactProfile object itself.
     */
    public NsdArtifactProfile withArtifactVersion(String artifactVersion) {
        this.artifactVersion = artifactVersion;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (artifactStoreReference() != null) {
            artifactStoreReference().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("artifactStoreReference", this.artifactStoreReference);
        jsonWriter.writeStringField("artifactName", this.artifactName);
        jsonWriter.writeStringField("artifactVersion", this.artifactVersion);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of NsdArtifactProfile from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of NsdArtifactProfile if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the NsdArtifactProfile.
     */
    public static NsdArtifactProfile fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            NsdArtifactProfile deserializedNsdArtifactProfile = new NsdArtifactProfile();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("artifactStoreReference".equals(fieldName)) {
                    deserializedNsdArtifactProfile.artifactStoreReference = ReferencedResource.fromJson(reader);
                } else if ("artifactName".equals(fieldName)) {
                    deserializedNsdArtifactProfile.artifactName = reader.getString();
                } else if ("artifactVersion".equals(fieldName)) {
                    deserializedNsdArtifactProfile.artifactVersion = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedNsdArtifactProfile;
        });
    }
}
