// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;

/**
 * NetworkFunction with no secrets.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "configurationType")
@JsonTypeName("Open")
@Fluent
public final class NetworkFunctionValueWithoutSecrets extends NetworkFunctionPropertiesFormat {
    /*
     * The JSON-serialized deployment values from the user.
     */
    @JsonProperty(value = "deploymentValues")
    private String deploymentValues;

    /**
     * Creates an instance of NetworkFunctionValueWithoutSecrets class.
     */
    public NetworkFunctionValueWithoutSecrets() {
    }

    /**
     * Get the deploymentValues property: The JSON-serialized deployment values from the user.
     * 
     * @return the deploymentValues value.
     */
    public String deploymentValues() {
        return this.deploymentValues;
    }

    /**
     * Set the deploymentValues property: The JSON-serialized deployment values from the user.
     * 
     * @param deploymentValues the deploymentValues value to set.
     * @return the NetworkFunctionValueWithoutSecrets object itself.
     */
    public NetworkFunctionValueWithoutSecrets withDeploymentValues(String deploymentValues) {
        this.deploymentValues = deploymentValues;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NetworkFunctionValueWithoutSecrets withNetworkFunctionDefinitionVersionResourceReference(
        DeploymentResourceIdReference networkFunctionDefinitionVersionResourceReference) {
        super.withNetworkFunctionDefinitionVersionResourceReference(networkFunctionDefinitionVersionResourceReference);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NetworkFunctionValueWithoutSecrets withNfviType(NfviType nfviType) {
        super.withNfviType(nfviType);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NetworkFunctionValueWithoutSecrets withNfviId(String nfviId) {
        super.withNfviId(nfviId);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NetworkFunctionValueWithoutSecrets withAllowSoftwareUpdate(Boolean allowSoftwareUpdate) {
        super.withAllowSoftwareUpdate(allowSoftwareUpdate);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NetworkFunctionValueWithoutSecrets withRoleOverrideValues(List<String> roleOverrideValues) {
        super.withRoleOverrideValues(roleOverrideValues);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
