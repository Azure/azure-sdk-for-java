// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Azure Operator Distributed Services network function image application definition.
 */
@Fluent
public final class AzureOperatorNexusNetworkFunctionImageApplication
    extends AzureOperatorNexusNetworkFunctionApplication {
    /*
     * The artifact type.
     */
    private AzureOperatorNexusArtifactType artifactType = AzureOperatorNexusArtifactType.IMAGE_FILE;

    /*
     * Azure Operator Distributed Services image artifact profile.
     */
    private AzureOperatorNexusImageArtifactProfile artifactProfile;

    /*
     * Deploy mapping rule profile.
     */
    private AzureOperatorNexusImageDeployMappingRuleProfile deployParametersMappingRuleProfile;

    /**
     * Creates an instance of AzureOperatorNexusNetworkFunctionImageApplication class.
     */
    public AzureOperatorNexusNetworkFunctionImageApplication() {
    }

    /**
     * Get the artifactType property: The artifact type.
     * 
     * @return the artifactType value.
     */
    @Override
    public AzureOperatorNexusArtifactType artifactType() {
        return this.artifactType;
    }

    /**
     * Get the artifactProfile property: Azure Operator Distributed Services image artifact profile.
     * 
     * @return the artifactProfile value.
     */
    public AzureOperatorNexusImageArtifactProfile artifactProfile() {
        return this.artifactProfile;
    }

    /**
     * Set the artifactProfile property: Azure Operator Distributed Services image artifact profile.
     * 
     * @param artifactProfile the artifactProfile value to set.
     * @return the AzureOperatorNexusNetworkFunctionImageApplication object itself.
     */
    public AzureOperatorNexusNetworkFunctionImageApplication
        withArtifactProfile(AzureOperatorNexusImageArtifactProfile artifactProfile) {
        this.artifactProfile = artifactProfile;
        return this;
    }

    /**
     * Get the deployParametersMappingRuleProfile property: Deploy mapping rule profile.
     * 
     * @return the deployParametersMappingRuleProfile value.
     */
    public AzureOperatorNexusImageDeployMappingRuleProfile deployParametersMappingRuleProfile() {
        return this.deployParametersMappingRuleProfile;
    }

    /**
     * Set the deployParametersMappingRuleProfile property: Deploy mapping rule profile.
     * 
     * @param deployParametersMappingRuleProfile the deployParametersMappingRuleProfile value to set.
     * @return the AzureOperatorNexusNetworkFunctionImageApplication object itself.
     */
    public AzureOperatorNexusNetworkFunctionImageApplication withDeployParametersMappingRuleProfile(
        AzureOperatorNexusImageDeployMappingRuleProfile deployParametersMappingRuleProfile) {
        this.deployParametersMappingRuleProfile = deployParametersMappingRuleProfile;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AzureOperatorNexusNetworkFunctionImageApplication withName(String name) {
        super.withName(name);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AzureOperatorNexusNetworkFunctionImageApplication withDependsOnProfile(DependsOnProfile dependsOnProfile) {
        super.withDependsOnProfile(dependsOnProfile);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        if (artifactProfile() != null) {
            artifactProfile().validate();
        }
        if (deployParametersMappingRuleProfile() != null) {
            deployParametersMappingRuleProfile().validate();
        }
        if (dependsOnProfile() != null) {
            dependsOnProfile().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("name", name());
        jsonWriter.writeJsonField("dependsOnProfile", dependsOnProfile());
        jsonWriter.writeStringField("artifactType", this.artifactType == null ? null : this.artifactType.toString());
        jsonWriter.writeJsonField("artifactProfile", this.artifactProfile);
        jsonWriter.writeJsonField("deployParametersMappingRuleProfile", this.deployParametersMappingRuleProfile);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureOperatorNexusNetworkFunctionImageApplication from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureOperatorNexusNetworkFunctionImageApplication if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AzureOperatorNexusNetworkFunctionImageApplication.
     */
    public static AzureOperatorNexusNetworkFunctionImageApplication fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AzureOperatorNexusNetworkFunctionImageApplication deserializedAzureOperatorNexusNetworkFunctionImageApplication
                = new AzureOperatorNexusNetworkFunctionImageApplication();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("name".equals(fieldName)) {
                    deserializedAzureOperatorNexusNetworkFunctionImageApplication.withName(reader.getString());
                } else if ("dependsOnProfile".equals(fieldName)) {
                    deserializedAzureOperatorNexusNetworkFunctionImageApplication
                        .withDependsOnProfile(DependsOnProfile.fromJson(reader));
                } else if ("artifactType".equals(fieldName)) {
                    deserializedAzureOperatorNexusNetworkFunctionImageApplication.artifactType
                        = AzureOperatorNexusArtifactType.fromString(reader.getString());
                } else if ("artifactProfile".equals(fieldName)) {
                    deserializedAzureOperatorNexusNetworkFunctionImageApplication.artifactProfile
                        = AzureOperatorNexusImageArtifactProfile.fromJson(reader);
                } else if ("deployParametersMappingRuleProfile".equals(fieldName)) {
                    deserializedAzureOperatorNexusNetworkFunctionImageApplication.deployParametersMappingRuleProfile
                        = AzureOperatorNexusImageDeployMappingRuleProfile.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAzureOperatorNexusNetworkFunctionImageApplication;
        });
    }
}
