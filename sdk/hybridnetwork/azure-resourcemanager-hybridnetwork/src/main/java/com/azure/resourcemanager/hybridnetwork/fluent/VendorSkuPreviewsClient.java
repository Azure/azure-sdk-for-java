// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.hybridnetwork.fluent.models.PreviewSubscriptionInner;

/** An instance of this class provides access to all the operations defined in VendorSkuPreviewsClient. */
public interface VendorSkuPreviewsClient {
    /**
     * Lists all the preview information of a vendor sku.
     *
     * @param vendorName The name of the vendor.
     * @param skuName The name of the sku.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of customer subscriptions which can use a sku.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<PreviewSubscriptionInner> list(String vendorName, String skuName);

    /**
     * Lists all the preview information of a vendor sku.
     *
     * @param vendorName The name of the vendor.
     * @param skuName The name of the sku.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of customer subscriptions which can use a sku.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<PreviewSubscriptionInner> list(String vendorName, String skuName, Context context);

    /**
     * Creates or updates preview information of a vendor sku.
     *
     * @param vendorName The name of the vendor.
     * @param skuName The name of the vendor sku.
     * @param previewSubscription Preview subscription ID.
     * @param parameters Parameters supplied to the create or update vendor preview subscription operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return customer subscription which can use a sku.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<PreviewSubscriptionInner>, PreviewSubscriptionInner> beginCreateOrUpdate(
        String vendorName, String skuName, String previewSubscription, PreviewSubscriptionInner parameters);

    /**
     * Creates or updates preview information of a vendor sku.
     *
     * @param vendorName The name of the vendor.
     * @param skuName The name of the vendor sku.
     * @param previewSubscription Preview subscription ID.
     * @param parameters Parameters supplied to the create or update vendor preview subscription operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return customer subscription which can use a sku.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<PreviewSubscriptionInner>, PreviewSubscriptionInner> beginCreateOrUpdate(
        String vendorName,
        String skuName,
        String previewSubscription,
        PreviewSubscriptionInner parameters,
        Context context);

    /**
     * Creates or updates preview information of a vendor sku.
     *
     * @param vendorName The name of the vendor.
     * @param skuName The name of the vendor sku.
     * @param previewSubscription Preview subscription ID.
     * @param parameters Parameters supplied to the create or update vendor preview subscription operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return customer subscription which can use a sku.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    PreviewSubscriptionInner createOrUpdate(
        String vendorName, String skuName, String previewSubscription, PreviewSubscriptionInner parameters);

    /**
     * Creates or updates preview information of a vendor sku.
     *
     * @param vendorName The name of the vendor.
     * @param skuName The name of the vendor sku.
     * @param previewSubscription Preview subscription ID.
     * @param parameters Parameters supplied to the create or update vendor preview subscription operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return customer subscription which can use a sku.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    PreviewSubscriptionInner createOrUpdate(
        String vendorName,
        String skuName,
        String previewSubscription,
        PreviewSubscriptionInner parameters,
        Context context);

    /**
     * Gets the preview information of a vendor sku.
     *
     * @param vendorName The name of the vendor.
     * @param skuName The name of the vendor sku.
     * @param previewSubscription Preview subscription ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the preview information of a vendor sku.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    PreviewSubscriptionInner get(String vendorName, String skuName, String previewSubscription);

    /**
     * Gets the preview information of a vendor sku.
     *
     * @param vendorName The name of the vendor.
     * @param skuName The name of the vendor sku.
     * @param previewSubscription Preview subscription ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the preview information of a vendor sku.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<PreviewSubscriptionInner> getWithResponse(
        String vendorName, String skuName, String previewSubscription, Context context);

    /**
     * Deletes the preview information of a vendor sku.
     *
     * @param vendorName The name of the vendor.
     * @param skuName The name of the vendor sku.
     * @param previewSubscription Preview subscription ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<Void>, Void> beginDelete(String vendorName, String skuName, String previewSubscription);

    /**
     * Deletes the preview information of a vendor sku.
     *
     * @param vendorName The name of the vendor.
     * @param skuName The name of the vendor sku.
     * @param previewSubscription Preview subscription ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<Void>, Void> beginDelete(
        String vendorName, String skuName, String previewSubscription, Context context);

    /**
     * Deletes the preview information of a vendor sku.
     *
     * @param vendorName The name of the vendor.
     * @param skuName The name of the vendor sku.
     * @param previewSubscription Preview subscription ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String vendorName, String skuName, String previewSubscription);

    /**
     * Deletes the preview information of a vendor sku.
     *
     * @param vendorName The name of the vendor.
     * @param skuName The name of the vendor sku.
     * @param previewSubscription Preview subscription ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String vendorName, String skuName, String previewSubscription, Context context);
}
