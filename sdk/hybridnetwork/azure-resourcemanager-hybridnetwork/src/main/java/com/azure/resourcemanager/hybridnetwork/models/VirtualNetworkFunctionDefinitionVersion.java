// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Virtual network function network function definition version properties.
 */
@Fluent
public final class VirtualNetworkFunctionDefinitionVersion extends NetworkFunctionDefinitionVersionPropertiesFormat {
    /*
     * The network function type.
     */
    private NetworkFunctionType networkFunctionType = NetworkFunctionType.VIRTUAL_NETWORK_FUNCTION;

    /*
     * Virtual network function template.
     */
    private VirtualNetworkFunctionTemplate networkFunctionTemplate;

    /**
     * Creates an instance of VirtualNetworkFunctionDefinitionVersion class.
     */
    public VirtualNetworkFunctionDefinitionVersion() {
    }

    /**
     * Get the networkFunctionType property: The network function type.
     * 
     * @return the networkFunctionType value.
     */
    @Override
    public NetworkFunctionType networkFunctionType() {
        return this.networkFunctionType;
    }

    /**
     * Get the networkFunctionTemplate property: Virtual network function template.
     * 
     * @return the networkFunctionTemplate value.
     */
    public VirtualNetworkFunctionTemplate networkFunctionTemplate() {
        return this.networkFunctionTemplate;
    }

    /**
     * Set the networkFunctionTemplate property: Virtual network function template.
     * 
     * @param networkFunctionTemplate the networkFunctionTemplate value to set.
     * @return the VirtualNetworkFunctionDefinitionVersion object itself.
     */
    public VirtualNetworkFunctionDefinitionVersion
        withNetworkFunctionTemplate(VirtualNetworkFunctionTemplate networkFunctionTemplate) {
        this.networkFunctionTemplate = networkFunctionTemplate;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VirtualNetworkFunctionDefinitionVersion withDescription(String description) {
        super.withDescription(description);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VirtualNetworkFunctionDefinitionVersion withDeployParameters(String deployParameters) {
        super.withDeployParameters(deployParameters);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        if (networkFunctionTemplate() != null) {
            networkFunctionTemplate().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("description", description());
        jsonWriter.writeStringField("deployParameters", deployParameters());
        jsonWriter.writeStringField("networkFunctionType",
            this.networkFunctionType == null ? null : this.networkFunctionType.toString());
        jsonWriter.writeJsonField("networkFunctionTemplate", this.networkFunctionTemplate);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of VirtualNetworkFunctionDefinitionVersion from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of VirtualNetworkFunctionDefinitionVersion if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the VirtualNetworkFunctionDefinitionVersion.
     */
    public static VirtualNetworkFunctionDefinitionVersion fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            VirtualNetworkFunctionDefinitionVersion deserializedVirtualNetworkFunctionDefinitionVersion
                = new VirtualNetworkFunctionDefinitionVersion();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("provisioningState".equals(fieldName)) {
                    deserializedVirtualNetworkFunctionDefinitionVersion
                        .withProvisioningState(ProvisioningState.fromString(reader.getString()));
                } else if ("versionState".equals(fieldName)) {
                    deserializedVirtualNetworkFunctionDefinitionVersion
                        .withVersionState(VersionState.fromString(reader.getString()));
                } else if ("description".equals(fieldName)) {
                    deserializedVirtualNetworkFunctionDefinitionVersion.withDescription(reader.getString());
                } else if ("deployParameters".equals(fieldName)) {
                    deserializedVirtualNetworkFunctionDefinitionVersion.withDeployParameters(reader.getString());
                } else if ("networkFunctionType".equals(fieldName)) {
                    deserializedVirtualNetworkFunctionDefinitionVersion.networkFunctionType
                        = NetworkFunctionType.fromString(reader.getString());
                } else if ("networkFunctionTemplate".equals(fieldName)) {
                    deserializedVirtualNetworkFunctionDefinitionVersion.networkFunctionTemplate
                        = VirtualNetworkFunctionTemplate.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedVirtualNetworkFunctionDefinitionVersion;
        });
    }
}
