// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Request metadata of execute request post call payload. */
@Fluent
public final class RequestMetadata {
    /*
     * The relative path of the request.
     */
    @JsonProperty(value = "relativePath", required = true)
    private String relativePath;

    /*
     * The http method of the request.
     */
    @JsonProperty(value = "httpMethod", required = true)
    private HttpMethod httpMethod;

    /*
     * The serialized body of the request.
     */
    @JsonProperty(value = "serializedBody", required = true)
    private String serializedBody;

    /*
     * The api version of the request.
     */
    @JsonProperty(value = "apiVersion")
    private String apiVersion;

    /**
     * Get the relativePath property: The relative path of the request.
     *
     * @return the relativePath value.
     */
    public String relativePath() {
        return this.relativePath;
    }

    /**
     * Set the relativePath property: The relative path of the request.
     *
     * @param relativePath the relativePath value to set.
     * @return the RequestMetadata object itself.
     */
    public RequestMetadata withRelativePath(String relativePath) {
        this.relativePath = relativePath;
        return this;
    }

    /**
     * Get the httpMethod property: The http method of the request.
     *
     * @return the httpMethod value.
     */
    public HttpMethod httpMethod() {
        return this.httpMethod;
    }

    /**
     * Set the httpMethod property: The http method of the request.
     *
     * @param httpMethod the httpMethod value to set.
     * @return the RequestMetadata object itself.
     */
    public RequestMetadata withHttpMethod(HttpMethod httpMethod) {
        this.httpMethod = httpMethod;
        return this;
    }

    /**
     * Get the serializedBody property: The serialized body of the request.
     *
     * @return the serializedBody value.
     */
    public String serializedBody() {
        return this.serializedBody;
    }

    /**
     * Set the serializedBody property: The serialized body of the request.
     *
     * @param serializedBody the serializedBody value to set.
     * @return the RequestMetadata object itself.
     */
    public RequestMetadata withSerializedBody(String serializedBody) {
        this.serializedBody = serializedBody;
        return this;
    }

    /**
     * Get the apiVersion property: The api version of the request.
     *
     * @return the apiVersion value.
     */
    public String apiVersion() {
        return this.apiVersion;
    }

    /**
     * Set the apiVersion property: The api version of the request.
     *
     * @param apiVersion the apiVersion value to set.
     * @return the RequestMetadata object itself.
     */
    public RequestMetadata withApiVersion(String apiVersion) {
        this.apiVersion = apiVersion;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (relativePath() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property relativePath in model RequestMetadata"));
        }
        if (httpMethod() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property httpMethod in model RequestMetadata"));
        }
        if (serializedBody() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property serializedBody in model RequestMetadata"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(RequestMetadata.class);
}
