// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Configuration group schema properties.
 */
@Fluent
public final class ConfigurationGroupSchemaPropertiesFormat {
    /*
     * The provisioning state of the Configuration group schema resource.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /*
     * The configuration group schema version state.
     */
    @JsonProperty(value = "versionState", access = JsonProperty.Access.WRITE_ONLY)
    private VersionState versionState;

    /*
     * Description of what schema can contain.
     */
    @JsonProperty(value = "description")
    private String description;

    /*
     * Name and value pairs that define the configuration value. It can be a well formed escaped JSON string.
     */
    @JsonProperty(value = "schemaDefinition")
    private String schemaDefinition;

    /**
     * Creates an instance of ConfigurationGroupSchemaPropertiesFormat class.
     */
    public ConfigurationGroupSchemaPropertiesFormat() {
    }

    /**
     * Get the provisioningState property: The provisioning state of the Configuration group schema resource.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the versionState property: The configuration group schema version state.
     * 
     * @return the versionState value.
     */
    public VersionState versionState() {
        return this.versionState;
    }

    /**
     * Get the description property: Description of what schema can contain.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: Description of what schema can contain.
     * 
     * @param description the description value to set.
     * @return the ConfigurationGroupSchemaPropertiesFormat object itself.
     */
    public ConfigurationGroupSchemaPropertiesFormat withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the schemaDefinition property: Name and value pairs that define the configuration value. It can be a well
     * formed escaped JSON string.
     * 
     * @return the schemaDefinition value.
     */
    public String schemaDefinition() {
        return this.schemaDefinition;
    }

    /**
     * Set the schemaDefinition property: Name and value pairs that define the configuration value. It can be a well
     * formed escaped JSON string.
     * 
     * @param schemaDefinition the schemaDefinition value to set.
     * @return the ConfigurationGroupSchemaPropertiesFormat object itself.
     */
    public ConfigurationGroupSchemaPropertiesFormat withSchemaDefinition(String schemaDefinition) {
        this.schemaDefinition = schemaDefinition;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
