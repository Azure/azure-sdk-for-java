// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The resource element template object.
 */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    include = JsonTypeInfo.As.PROPERTY,
    property = "type",
    defaultImpl = ResourceElementTemplate.class)
@JsonTypeName("ResourceElementTemplate")
@JsonSubTypes({
    @JsonSubTypes.Type(
        name = "ArmResourceDefinition",
        value = ArmResourceDefinitionResourceElementTemplateDetails.class),
    @JsonSubTypes.Type(
        name = "NetworkFunctionDefinition",
        value = NetworkFunctionDefinitionResourceElementTemplateDetails.class) })
@Fluent
public class ResourceElementTemplate {
    /*
     * Name of the resource element template.
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * The depends on profile.
     */
    @JsonProperty(value = "dependsOnProfile")
    private DependsOnProfile dependsOnProfile;

    /**
     * Creates an instance of ResourceElementTemplate class.
     */
    public ResourceElementTemplate() {
    }

    /**
     * Get the name property: Name of the resource element template.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Name of the resource element template.
     * 
     * @param name the name value to set.
     * @return the ResourceElementTemplate object itself.
     */
    public ResourceElementTemplate withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the dependsOnProfile property: The depends on profile.
     * 
     * @return the dependsOnProfile value.
     */
    public DependsOnProfile dependsOnProfile() {
        return this.dependsOnProfile;
    }

    /**
     * Set the dependsOnProfile property: The depends on profile.
     * 
     * @param dependsOnProfile the dependsOnProfile value to set.
     * @return the ResourceElementTemplate object itself.
     */
    public ResourceElementTemplate withDependsOnProfile(DependsOnProfile dependsOnProfile) {
        this.dependsOnProfile = dependsOnProfile;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (dependsOnProfile() != null) {
            dependsOnProfile().validate();
        }
    }
}
