// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Azure Operator Distributed Services network function template.
 */
@Fluent
public final class AzureOperatorNexusNetworkFunctionTemplate extends VirtualNetworkFunctionTemplate {
    /*
     * The network function type.
     */
    private VirtualNetworkFunctionNfviType nfviType = VirtualNetworkFunctionNfviType.AZURE_OPERATOR_NEXUS;

    /*
     * Network function applications.
     */
    private List<AzureOperatorNexusNetworkFunctionApplication> networkFunctionApplications;

    /**
     * Creates an instance of AzureOperatorNexusNetworkFunctionTemplate class.
     */
    public AzureOperatorNexusNetworkFunctionTemplate() {
    }

    /**
     * Get the nfviType property: The network function type.
     * 
     * @return the nfviType value.
     */
    @Override
    public VirtualNetworkFunctionNfviType nfviType() {
        return this.nfviType;
    }

    /**
     * Get the networkFunctionApplications property: Network function applications.
     * 
     * @return the networkFunctionApplications value.
     */
    public List<AzureOperatorNexusNetworkFunctionApplication> networkFunctionApplications() {
        return this.networkFunctionApplications;
    }

    /**
     * Set the networkFunctionApplications property: Network function applications.
     * 
     * @param networkFunctionApplications the networkFunctionApplications value to set.
     * @return the AzureOperatorNexusNetworkFunctionTemplate object itself.
     */
    public AzureOperatorNexusNetworkFunctionTemplate withNetworkFunctionApplications(
        List<AzureOperatorNexusNetworkFunctionApplication> networkFunctionApplications) {
        this.networkFunctionApplications = networkFunctionApplications;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        if (networkFunctionApplications() != null) {
            networkFunctionApplications().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("nfviType", this.nfviType == null ? null : this.nfviType.toString());
        jsonWriter.writeArrayField("networkFunctionApplications", this.networkFunctionApplications,
            (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureOperatorNexusNetworkFunctionTemplate from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureOperatorNexusNetworkFunctionTemplate if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AzureOperatorNexusNetworkFunctionTemplate.
     */
    public static AzureOperatorNexusNetworkFunctionTemplate fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AzureOperatorNexusNetworkFunctionTemplate deserializedAzureOperatorNexusNetworkFunctionTemplate
                = new AzureOperatorNexusNetworkFunctionTemplate();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("nfviType".equals(fieldName)) {
                    deserializedAzureOperatorNexusNetworkFunctionTemplate.nfviType
                        = VirtualNetworkFunctionNfviType.fromString(reader.getString());
                } else if ("networkFunctionApplications".equals(fieldName)) {
                    List<AzureOperatorNexusNetworkFunctionApplication> networkFunctionApplications
                        = reader.readArray(reader1 -> AzureOperatorNexusNetworkFunctionApplication.fromJson(reader1));
                    deserializedAzureOperatorNexusNetworkFunctionTemplate.networkFunctionApplications
                        = networkFunctionApplications;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAzureOperatorNexusNetworkFunctionTemplate;
        });
    }
}
