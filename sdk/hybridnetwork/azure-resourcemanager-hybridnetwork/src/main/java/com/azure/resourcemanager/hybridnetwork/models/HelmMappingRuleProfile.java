// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Helm mapping rule profile.
 */
@Fluent
public final class HelmMappingRuleProfile {
    /*
     * Helm release namespace.
     */
    @JsonProperty(value = "releaseNamespace")
    private String releaseNamespace;

    /*
     * Helm release name.
     */
    @JsonProperty(value = "releaseName")
    private String releaseName;

    /*
     * Helm package version.
     */
    @JsonProperty(value = "helmPackageVersion")
    private String helmPackageVersion;

    /*
     * Helm release values.
     */
    @JsonProperty(value = "values")
    private String values;

    /*
     * The helm deployment options
     */
    @JsonProperty(value = "options")
    private HelmMappingRuleProfileOptions options;

    /**
     * Creates an instance of HelmMappingRuleProfile class.
     */
    public HelmMappingRuleProfile() {
    }

    /**
     * Get the releaseNamespace property: Helm release namespace.
     * 
     * @return the releaseNamespace value.
     */
    public String releaseNamespace() {
        return this.releaseNamespace;
    }

    /**
     * Set the releaseNamespace property: Helm release namespace.
     * 
     * @param releaseNamespace the releaseNamespace value to set.
     * @return the HelmMappingRuleProfile object itself.
     */
    public HelmMappingRuleProfile withReleaseNamespace(String releaseNamespace) {
        this.releaseNamespace = releaseNamespace;
        return this;
    }

    /**
     * Get the releaseName property: Helm release name.
     * 
     * @return the releaseName value.
     */
    public String releaseName() {
        return this.releaseName;
    }

    /**
     * Set the releaseName property: Helm release name.
     * 
     * @param releaseName the releaseName value to set.
     * @return the HelmMappingRuleProfile object itself.
     */
    public HelmMappingRuleProfile withReleaseName(String releaseName) {
        this.releaseName = releaseName;
        return this;
    }

    /**
     * Get the helmPackageVersion property: Helm package version.
     * 
     * @return the helmPackageVersion value.
     */
    public String helmPackageVersion() {
        return this.helmPackageVersion;
    }

    /**
     * Set the helmPackageVersion property: Helm package version.
     * 
     * @param helmPackageVersion the helmPackageVersion value to set.
     * @return the HelmMappingRuleProfile object itself.
     */
    public HelmMappingRuleProfile withHelmPackageVersion(String helmPackageVersion) {
        this.helmPackageVersion = helmPackageVersion;
        return this;
    }

    /**
     * Get the values property: Helm release values.
     * 
     * @return the values value.
     */
    public String values() {
        return this.values;
    }

    /**
     * Set the values property: Helm release values.
     * 
     * @param values the values value to set.
     * @return the HelmMappingRuleProfile object itself.
     */
    public HelmMappingRuleProfile withValues(String values) {
        this.values = values;
        return this;
    }

    /**
     * Get the options property: The helm deployment options.
     * 
     * @return the options value.
     */
    public HelmMappingRuleProfileOptions options() {
        return this.options;
    }

    /**
     * Set the options property: The helm deployment options.
     * 
     * @param options the options value to set.
     * @return the HelmMappingRuleProfile object itself.
     */
    public HelmMappingRuleProfile withOptions(HelmMappingRuleProfileOptions options) {
        this.options = options;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (options() != null) {
            options().validate();
        }
    }
}
