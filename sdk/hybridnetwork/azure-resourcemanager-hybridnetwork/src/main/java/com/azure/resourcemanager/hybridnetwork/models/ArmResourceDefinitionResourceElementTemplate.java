// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The arm template RE.
 */
@Fluent
public final class ArmResourceDefinitionResourceElementTemplate
    implements JsonSerializable<ArmResourceDefinitionResourceElementTemplate> {
    /*
     * The template type.
     */
    private TemplateType templateType;

    /*
     * Name and value pairs that define the parameter values. It can be a well formed escaped JSON string.
     */
    private String parameterValues;

    /*
     * Artifact profile properties.
     */
    private NsdArtifactProfile artifactProfile;

    /**
     * Creates an instance of ArmResourceDefinitionResourceElementTemplate class.
     */
    public ArmResourceDefinitionResourceElementTemplate() {
    }

    /**
     * Get the templateType property: The template type.
     * 
     * @return the templateType value.
     */
    public TemplateType templateType() {
        return this.templateType;
    }

    /**
     * Set the templateType property: The template type.
     * 
     * @param templateType the templateType value to set.
     * @return the ArmResourceDefinitionResourceElementTemplate object itself.
     */
    public ArmResourceDefinitionResourceElementTemplate withTemplateType(TemplateType templateType) {
        this.templateType = templateType;
        return this;
    }

    /**
     * Get the parameterValues property: Name and value pairs that define the parameter values. It can be a well formed
     * escaped JSON string.
     * 
     * @return the parameterValues value.
     */
    public String parameterValues() {
        return this.parameterValues;
    }

    /**
     * Set the parameterValues property: Name and value pairs that define the parameter values. It can be a well formed
     * escaped JSON string.
     * 
     * @param parameterValues the parameterValues value to set.
     * @return the ArmResourceDefinitionResourceElementTemplate object itself.
     */
    public ArmResourceDefinitionResourceElementTemplate withParameterValues(String parameterValues) {
        this.parameterValues = parameterValues;
        return this;
    }

    /**
     * Get the artifactProfile property: Artifact profile properties.
     * 
     * @return the artifactProfile value.
     */
    public NsdArtifactProfile artifactProfile() {
        return this.artifactProfile;
    }

    /**
     * Set the artifactProfile property: Artifact profile properties.
     * 
     * @param artifactProfile the artifactProfile value to set.
     * @return the ArmResourceDefinitionResourceElementTemplate object itself.
     */
    public ArmResourceDefinitionResourceElementTemplate withArtifactProfile(NsdArtifactProfile artifactProfile) {
        this.artifactProfile = artifactProfile;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (artifactProfile() != null) {
            artifactProfile().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("templateType", this.templateType == null ? null : this.templateType.toString());
        jsonWriter.writeStringField("parameterValues", this.parameterValues);
        jsonWriter.writeJsonField("artifactProfile", this.artifactProfile);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ArmResourceDefinitionResourceElementTemplate from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ArmResourceDefinitionResourceElementTemplate if the JsonReader was pointing to an instance
     * of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ArmResourceDefinitionResourceElementTemplate.
     */
    public static ArmResourceDefinitionResourceElementTemplate fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ArmResourceDefinitionResourceElementTemplate deserializedArmResourceDefinitionResourceElementTemplate
                = new ArmResourceDefinitionResourceElementTemplate();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("templateType".equals(fieldName)) {
                    deserializedArmResourceDefinitionResourceElementTemplate.templateType
                        = TemplateType.fromString(reader.getString());
                } else if ("parameterValues".equals(fieldName)) {
                    deserializedArmResourceDefinitionResourceElementTemplate.parameterValues = reader.getString();
                } else if ("artifactProfile".equals(fieldName)) {
                    deserializedArmResourceDefinitionResourceElementTemplate.artifactProfile
                        = NsdArtifactProfile.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedArmResourceDefinitionResourceElementTemplate;
        });
    }
}
