// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.hybridnetwork.fluent.ComponentsClient;
import com.azure.resourcemanager.hybridnetwork.fluent.models.ComponentInner;
import com.azure.resourcemanager.hybridnetwork.models.Component;
import com.azure.resourcemanager.hybridnetwork.models.Components;

public final class ComponentsImpl implements Components {
    private static final ClientLogger LOGGER = new ClientLogger(ComponentsImpl.class);

    private final ComponentsClient innerClient;

    private final com.azure.resourcemanager.hybridnetwork.HybridNetworkManager serviceManager;

    public ComponentsImpl(ComponentsClient innerClient,
        com.azure.resourcemanager.hybridnetwork.HybridNetworkManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<Component> getWithResponse(String resourceGroupName, String networkFunctionName,
        String componentName, Context context) {
        Response<ComponentInner> inner
            = this.serviceClient().getWithResponse(resourceGroupName, networkFunctionName, componentName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new ComponentImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public Component get(String resourceGroupName, String networkFunctionName, String componentName) {
        ComponentInner inner = this.serviceClient().get(resourceGroupName, networkFunctionName, componentName);
        if (inner != null) {
            return new ComponentImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public PagedIterable<Component> listByNetworkFunction(String resourceGroupName, String networkFunctionName) {
        PagedIterable<ComponentInner> inner
            = this.serviceClient().listByNetworkFunction(resourceGroupName, networkFunctionName);
        return Utils.mapPage(inner, inner1 -> new ComponentImpl(inner1, this.manager()));
    }

    public PagedIterable<Component> listByNetworkFunction(String resourceGroupName, String networkFunctionName,
        Context context) {
        PagedIterable<ComponentInner> inner
            = this.serviceClient().listByNetworkFunction(resourceGroupName, networkFunctionName, context);
        return Utils.mapPage(inner, inner1 -> new ComponentImpl(inner1, this.manager()));
    }

    private ComponentsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.hybridnetwork.HybridNetworkManager manager() {
        return this.serviceManager;
    }
}
