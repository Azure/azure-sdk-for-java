// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Template artifact profile.
 */
@Fluent
public final class ArmTemplateArtifactProfile implements JsonSerializable<ArmTemplateArtifactProfile> {
    /*
     * Template name.
     */
    private String templateName;

    /*
     * Template version.
     */
    private String templateVersion;

    /**
     * Creates an instance of ArmTemplateArtifactProfile class.
     */
    public ArmTemplateArtifactProfile() {
    }

    /**
     * Get the templateName property: Template name.
     * 
     * @return the templateName value.
     */
    public String templateName() {
        return this.templateName;
    }

    /**
     * Set the templateName property: Template name.
     * 
     * @param templateName the templateName value to set.
     * @return the ArmTemplateArtifactProfile object itself.
     */
    public ArmTemplateArtifactProfile withTemplateName(String templateName) {
        this.templateName = templateName;
        return this;
    }

    /**
     * Get the templateVersion property: Template version.
     * 
     * @return the templateVersion value.
     */
    public String templateVersion() {
        return this.templateVersion;
    }

    /**
     * Set the templateVersion property: Template version.
     * 
     * @param templateVersion the templateVersion value to set.
     * @return the ArmTemplateArtifactProfile object itself.
     */
    public ArmTemplateArtifactProfile withTemplateVersion(String templateVersion) {
        this.templateVersion = templateVersion;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("templateName", this.templateName);
        jsonWriter.writeStringField("templateVersion", this.templateVersion);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ArmTemplateArtifactProfile from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ArmTemplateArtifactProfile if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ArmTemplateArtifactProfile.
     */
    public static ArmTemplateArtifactProfile fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ArmTemplateArtifactProfile deserializedArmTemplateArtifactProfile = new ArmTemplateArtifactProfile();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("templateName".equals(fieldName)) {
                    deserializedArmTemplateArtifactProfile.templateName = reader.getString();
                } else if ("templateVersion".equals(fieldName)) {
                    deserializedArmTemplateArtifactProfile.templateVersion = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedArmTemplateArtifactProfile;
        });
    }
}
