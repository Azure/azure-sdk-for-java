// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Helm artifact profile.
 */
@Fluent
public final class HelmArtifactProfile implements JsonSerializable<HelmArtifactProfile> {
    /*
     * Helm package name.
     */
    private String helmPackageName;

    /*
     * Helm package version range.
     */
    private String helmPackageVersionRange;

    /*
     * The registry values path list.
     */
    private List<String> registryValuesPaths;

    /*
     * The image pull secrets values path list.
     */
    private List<String> imagePullSecretsValuesPaths;

    /**
     * Creates an instance of HelmArtifactProfile class.
     */
    public HelmArtifactProfile() {
    }

    /**
     * Get the helmPackageName property: Helm package name.
     * 
     * @return the helmPackageName value.
     */
    public String helmPackageName() {
        return this.helmPackageName;
    }

    /**
     * Set the helmPackageName property: Helm package name.
     * 
     * @param helmPackageName the helmPackageName value to set.
     * @return the HelmArtifactProfile object itself.
     */
    public HelmArtifactProfile withHelmPackageName(String helmPackageName) {
        this.helmPackageName = helmPackageName;
        return this;
    }

    /**
     * Get the helmPackageVersionRange property: Helm package version range.
     * 
     * @return the helmPackageVersionRange value.
     */
    public String helmPackageVersionRange() {
        return this.helmPackageVersionRange;
    }

    /**
     * Set the helmPackageVersionRange property: Helm package version range.
     * 
     * @param helmPackageVersionRange the helmPackageVersionRange value to set.
     * @return the HelmArtifactProfile object itself.
     */
    public HelmArtifactProfile withHelmPackageVersionRange(String helmPackageVersionRange) {
        this.helmPackageVersionRange = helmPackageVersionRange;
        return this;
    }

    /**
     * Get the registryValuesPaths property: The registry values path list.
     * 
     * @return the registryValuesPaths value.
     */
    public List<String> registryValuesPaths() {
        return this.registryValuesPaths;
    }

    /**
     * Set the registryValuesPaths property: The registry values path list.
     * 
     * @param registryValuesPaths the registryValuesPaths value to set.
     * @return the HelmArtifactProfile object itself.
     */
    public HelmArtifactProfile withRegistryValuesPaths(List<String> registryValuesPaths) {
        this.registryValuesPaths = registryValuesPaths;
        return this;
    }

    /**
     * Get the imagePullSecretsValuesPaths property: The image pull secrets values path list.
     * 
     * @return the imagePullSecretsValuesPaths value.
     */
    public List<String> imagePullSecretsValuesPaths() {
        return this.imagePullSecretsValuesPaths;
    }

    /**
     * Set the imagePullSecretsValuesPaths property: The image pull secrets values path list.
     * 
     * @param imagePullSecretsValuesPaths the imagePullSecretsValuesPaths value to set.
     * @return the HelmArtifactProfile object itself.
     */
    public HelmArtifactProfile withImagePullSecretsValuesPaths(List<String> imagePullSecretsValuesPaths) {
        this.imagePullSecretsValuesPaths = imagePullSecretsValuesPaths;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("helmPackageName", this.helmPackageName);
        jsonWriter.writeStringField("helmPackageVersionRange", this.helmPackageVersionRange);
        jsonWriter.writeArrayField("registryValuesPaths", this.registryValuesPaths,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeArrayField("imagePullSecretsValuesPaths", this.imagePullSecretsValuesPaths,
            (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of HelmArtifactProfile from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of HelmArtifactProfile if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the HelmArtifactProfile.
     */
    public static HelmArtifactProfile fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            HelmArtifactProfile deserializedHelmArtifactProfile = new HelmArtifactProfile();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("helmPackageName".equals(fieldName)) {
                    deserializedHelmArtifactProfile.helmPackageName = reader.getString();
                } else if ("helmPackageVersionRange".equals(fieldName)) {
                    deserializedHelmArtifactProfile.helmPackageVersionRange = reader.getString();
                } else if ("registryValuesPaths".equals(fieldName)) {
                    List<String> registryValuesPaths = reader.readArray(reader1 -> reader1.getString());
                    deserializedHelmArtifactProfile.registryValuesPaths = registryValuesPaths;
                } else if ("imagePullSecretsValuesPaths".equals(fieldName)) {
                    List<String> imagePullSecretsValuesPaths = reader.readArray(reader1 -> reader1.getString());
                    deserializedHelmArtifactProfile.imagePullSecretsValuesPaths = imagePullSecretsValuesPaths;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedHelmArtifactProfile;
        });
    }
}
