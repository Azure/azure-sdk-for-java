// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.hybridnetwork.fluent.models.ConfigurationGroupSchemaVersionUpdateStateInner;

/**
 * Resource collection API of ConfigurationGroupSchemas.
 */
public interface ConfigurationGroupSchemas {
    /**
     * Gets information of the configuration group schemas under a publisher.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information of the configuration group schemas under a publisher as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<ConfigurationGroupSchema> listByPublisher(String resourceGroupName, String publisherName);

    /**
     * Gets information of the configuration group schemas under a publisher.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information of the configuration group schemas under a publisher as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<ConfigurationGroupSchema> listByPublisher(String resourceGroupName, String publisherName,
        Context context);

    /**
     * Deletes a specified configuration group schema.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param configurationGroupSchemaName The name of the configuration group schema.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String publisherName, String configurationGroupSchemaName);

    /**
     * Deletes a specified configuration group schema.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param configurationGroupSchemaName The name of the configuration group schema.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String publisherName, String configurationGroupSchemaName, Context context);

    /**
     * Gets information about the specified configuration group schema.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param configurationGroupSchemaName The name of the configuration group schema.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the specified configuration group schema along with {@link Response}.
     */
    Response<ConfigurationGroupSchema> getWithResponse(String resourceGroupName, String publisherName,
        String configurationGroupSchemaName, Context context);

    /**
     * Gets information about the specified configuration group schema.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param configurationGroupSchemaName The name of the configuration group schema.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the specified configuration group schema.
     */
    ConfigurationGroupSchema get(String resourceGroupName, String publisherName, String configurationGroupSchemaName);

    /**
     * Update configuration group schema state.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param configurationGroupSchemaName The name of the configuration group schema.
     * @param parameters Parameters supplied to update the state of configuration group schema.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return publisher configuration group schema update request definition.
     */
    ConfigurationGroupSchemaVersionUpdateState updateState(String resourceGroupName, String publisherName,
        String configurationGroupSchemaName, ConfigurationGroupSchemaVersionUpdateStateInner parameters);

    /**
     * Update configuration group schema state.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param configurationGroupSchemaName The name of the configuration group schema.
     * @param parameters Parameters supplied to update the state of configuration group schema.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return publisher configuration group schema update request definition.
     */
    ConfigurationGroupSchemaVersionUpdateState updateState(String resourceGroupName, String publisherName,
        String configurationGroupSchemaName, ConfigurationGroupSchemaVersionUpdateStateInner parameters,
        Context context);

    /**
     * Gets information about the specified configuration group schema.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the specified configuration group schema along with {@link Response}.
     */
    ConfigurationGroupSchema getById(String id);

    /**
     * Gets information about the specified configuration group schema.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the specified configuration group schema along with {@link Response}.
     */
    Response<ConfigurationGroupSchema> getByIdWithResponse(String id, Context context);

    /**
     * Deletes a specified configuration group schema.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes a specified configuration group schema.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new ConfigurationGroupSchema resource.
     * 
     * @param name resource name.
     * @return the first stage of the new ConfigurationGroupSchema definition.
     */
    ConfigurationGroupSchema.DefinitionStages.Blank define(String name);
}
