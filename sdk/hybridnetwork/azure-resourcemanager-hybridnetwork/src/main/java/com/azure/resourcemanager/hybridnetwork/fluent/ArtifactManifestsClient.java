// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.hybridnetwork.fluent.models.ArtifactAccessCredentialInner;
import com.azure.resourcemanager.hybridnetwork.fluent.models.ArtifactManifestInner;
import com.azure.resourcemanager.hybridnetwork.fluent.models.ArtifactManifestUpdateStateInner;
import com.azure.resourcemanager.hybridnetwork.models.TagsObject;

/**
 * An instance of this class provides access to all the operations defined in ArtifactManifestsClient.
 */
public interface ArtifactManifestsClient {
    /**
     * Gets information about the artifact manifest.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param artifactStoreName The name of the artifact store.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the artifact manifest as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ArtifactManifestInner> listByArtifactStore(String resourceGroupName, String publisherName,
        String artifactStoreName);

    /**
     * Gets information about the artifact manifest.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param artifactStoreName The name of the artifact store.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the artifact manifest as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ArtifactManifestInner> listByArtifactStore(String resourceGroupName, String publisherName,
        String artifactStoreName, Context context);

    /**
     * Deletes the specified artifact manifest.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param artifactStoreName The name of the artifact store.
     * @param artifactManifestName The name of the artifact manifest.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String publisherName,
        String artifactStoreName, String artifactManifestName);

    /**
     * Deletes the specified artifact manifest.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param artifactStoreName The name of the artifact store.
     * @param artifactManifestName The name of the artifact manifest.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String publisherName,
        String artifactStoreName, String artifactManifestName, Context context);

    /**
     * Deletes the specified artifact manifest.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param artifactStoreName The name of the artifact store.
     * @param artifactManifestName The name of the artifact manifest.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String publisherName, String artifactStoreName, String artifactManifestName);

    /**
     * Deletes the specified artifact manifest.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param artifactStoreName The name of the artifact store.
     * @param artifactManifestName The name of the artifact manifest.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String publisherName, String artifactStoreName, String artifactManifestName,
        Context context);

    /**
     * Creates or updates a artifact manifest.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param artifactStoreName The name of the artifact store.
     * @param artifactManifestName The name of the artifact manifest.
     * @param parameters Parameters supplied to the create or update artifact manifest operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of artifact manifest properties.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ArtifactManifestInner>, ArtifactManifestInner> beginCreateOrUpdate(String resourceGroupName,
        String publisherName, String artifactStoreName, String artifactManifestName, ArtifactManifestInner parameters);

    /**
     * Creates or updates a artifact manifest.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param artifactStoreName The name of the artifact store.
     * @param artifactManifestName The name of the artifact manifest.
     * @param parameters Parameters supplied to the create or update artifact manifest operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of artifact manifest properties.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ArtifactManifestInner>, ArtifactManifestInner> beginCreateOrUpdate(String resourceGroupName,
        String publisherName, String artifactStoreName, String artifactManifestName, ArtifactManifestInner parameters,
        Context context);

    /**
     * Creates or updates a artifact manifest.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param artifactStoreName The name of the artifact store.
     * @param artifactManifestName The name of the artifact manifest.
     * @param parameters Parameters supplied to the create or update artifact manifest operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return artifact manifest properties.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ArtifactManifestInner createOrUpdate(String resourceGroupName, String publisherName, String artifactStoreName,
        String artifactManifestName, ArtifactManifestInner parameters);

    /**
     * Creates or updates a artifact manifest.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param artifactStoreName The name of the artifact store.
     * @param artifactManifestName The name of the artifact manifest.
     * @param parameters Parameters supplied to the create or update artifact manifest operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return artifact manifest properties.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ArtifactManifestInner createOrUpdate(String resourceGroupName, String publisherName, String artifactStoreName,
        String artifactManifestName, ArtifactManifestInner parameters, Context context);

    /**
     * Gets information about a artifact manifest resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param artifactStoreName The name of the artifact store.
     * @param artifactManifestName The name of the artifact manifest.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about a artifact manifest resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ArtifactManifestInner> getWithResponse(String resourceGroupName, String publisherName,
        String artifactStoreName, String artifactManifestName, Context context);

    /**
     * Gets information about a artifact manifest resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param artifactStoreName The name of the artifact store.
     * @param artifactManifestName The name of the artifact manifest.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about a artifact manifest resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ArtifactManifestInner get(String resourceGroupName, String publisherName, String artifactStoreName,
        String artifactManifestName);

    /**
     * Updates a artifact manifest resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param artifactStoreName The name of the artifact store.
     * @param artifactManifestName The name of the artifact manifest.
     * @param parameters Parameters supplied to the create or update artifact manifest operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return artifact manifest properties along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ArtifactManifestInner> updateWithResponse(String resourceGroupName, String publisherName,
        String artifactStoreName, String artifactManifestName, TagsObject parameters, Context context);

    /**
     * Updates a artifact manifest resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param artifactStoreName The name of the artifact store.
     * @param artifactManifestName The name of the artifact manifest.
     * @param parameters Parameters supplied to the create or update artifact manifest operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return artifact manifest properties.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ArtifactManifestInner update(String resourceGroupName, String publisherName, String artifactStoreName,
        String artifactManifestName, TagsObject parameters);

    /**
     * List credential for publishing artifacts defined in artifact manifest.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param artifactStoreName The name of the artifact store.
     * @param artifactManifestName The name of the artifact manifest.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the artifact manifest credential definition along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ArtifactAccessCredentialInner> listCredentialWithResponse(String resourceGroupName, String publisherName,
        String artifactStoreName, String artifactManifestName, Context context);

    /**
     * List credential for publishing artifacts defined in artifact manifest.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param artifactStoreName The name of the artifact store.
     * @param artifactManifestName The name of the artifact manifest.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the artifact manifest credential definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ArtifactAccessCredentialInner listCredential(String resourceGroupName, String publisherName,
        String artifactStoreName, String artifactManifestName);

    /**
     * Update state for artifact manifest.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param artifactStoreName The name of the artifact store.
     * @param artifactManifestName The name of the artifact manifest.
     * @param parameters Parameters supplied to update the state of artifact manifest.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the artifact manifest updating request payload.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ArtifactManifestUpdateStateInner>, ArtifactManifestUpdateStateInner> beginUpdateState(
        String resourceGroupName, String publisherName, String artifactStoreName, String artifactManifestName,
        ArtifactManifestUpdateStateInner parameters);

    /**
     * Update state for artifact manifest.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param artifactStoreName The name of the artifact store.
     * @param artifactManifestName The name of the artifact manifest.
     * @param parameters Parameters supplied to update the state of artifact manifest.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the artifact manifest updating request payload.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ArtifactManifestUpdateStateInner>, ArtifactManifestUpdateStateInner> beginUpdateState(
        String resourceGroupName, String publisherName, String artifactStoreName, String artifactManifestName,
        ArtifactManifestUpdateStateInner parameters, Context context);

    /**
     * Update state for artifact manifest.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param artifactStoreName The name of the artifact store.
     * @param artifactManifestName The name of the artifact manifest.
     * @param parameters Parameters supplied to update the state of artifact manifest.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the artifact manifest updating request payload.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ArtifactManifestUpdateStateInner updateState(String resourceGroupName, String publisherName,
        String artifactStoreName, String artifactManifestName, ArtifactManifestUpdateStateInner parameters);

    /**
     * Update state for artifact manifest.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param artifactStoreName The name of the artifact store.
     * @param artifactManifestName The name of the artifact manifest.
     * @param parameters Parameters supplied to update the state of artifact manifest.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the artifact manifest updating request payload.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ArtifactManifestUpdateStateInner updateState(String resourceGroupName, String publisherName,
        String artifactStoreName, String artifactManifestName, ArtifactManifestUpdateStateInner parameters,
        Context context);
}
