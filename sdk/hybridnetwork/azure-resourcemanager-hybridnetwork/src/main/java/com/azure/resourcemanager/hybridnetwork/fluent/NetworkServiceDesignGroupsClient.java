// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.hybridnetwork.fluent.models.NetworkServiceDesignGroupInner;
import com.azure.resourcemanager.hybridnetwork.models.TagsObject;

/**
 * An instance of this class provides access to all the operations defined in NetworkServiceDesignGroupsClient.
 */
public interface NetworkServiceDesignGroupsClient {
    /**
     * Gets information of the network service design groups under a publisher.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information of the network service design groups under a publisher as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<NetworkServiceDesignGroupInner> listByPublisher(String resourceGroupName, String publisherName);

    /**
     * Gets information of the network service design groups under a publisher.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information of the network service design groups under a publisher as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<NetworkServiceDesignGroupInner> listByPublisher(String resourceGroupName, String publisherName,
        Context context);

    /**
     * Deletes a specified network service design group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param networkServiceDesignGroupName The name of the network service design group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String publisherName,
        String networkServiceDesignGroupName);

    /**
     * Deletes a specified network service design group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param networkServiceDesignGroupName The name of the network service design group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String publisherName,
        String networkServiceDesignGroupName, Context context);

    /**
     * Deletes a specified network service design group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param networkServiceDesignGroupName The name of the network service design group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String publisherName, String networkServiceDesignGroupName);

    /**
     * Deletes a specified network service design group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param networkServiceDesignGroupName The name of the network service design group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String publisherName, String networkServiceDesignGroupName, Context context);

    /**
     * Creates or updates a network service design group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param networkServiceDesignGroupName The name of the network service design group.
     * @param parameters Parameters supplied to the create or update publisher network service design group operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of network service design group resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<NetworkServiceDesignGroupInner>, NetworkServiceDesignGroupInner> beginCreateOrUpdate(
        String resourceGroupName, String publisherName, String networkServiceDesignGroupName,
        NetworkServiceDesignGroupInner parameters);

    /**
     * Creates or updates a network service design group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param networkServiceDesignGroupName The name of the network service design group.
     * @param parameters Parameters supplied to the create or update publisher network service design group operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of network service design group resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<NetworkServiceDesignGroupInner>, NetworkServiceDesignGroupInner> beginCreateOrUpdate(
        String resourceGroupName, String publisherName, String networkServiceDesignGroupName,
        NetworkServiceDesignGroupInner parameters, Context context);

    /**
     * Creates or updates a network service design group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param networkServiceDesignGroupName The name of the network service design group.
     * @param parameters Parameters supplied to the create or update publisher network service design group operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return network service design group resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    NetworkServiceDesignGroupInner createOrUpdate(String resourceGroupName, String publisherName,
        String networkServiceDesignGroupName, NetworkServiceDesignGroupInner parameters);

    /**
     * Creates or updates a network service design group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param networkServiceDesignGroupName The name of the network service design group.
     * @param parameters Parameters supplied to the create or update publisher network service design group operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return network service design group resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    NetworkServiceDesignGroupInner createOrUpdate(String resourceGroupName, String publisherName,
        String networkServiceDesignGroupName, NetworkServiceDesignGroupInner parameters, Context context);

    /**
     * Gets information about the specified networkServiceDesign group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param networkServiceDesignGroupName The name of the network service design group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the specified networkServiceDesign group along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<NetworkServiceDesignGroupInner> getWithResponse(String resourceGroupName, String publisherName,
        String networkServiceDesignGroupName, Context context);

    /**
     * Gets information about the specified networkServiceDesign group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param networkServiceDesignGroupName The name of the network service design group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the specified networkServiceDesign group.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    NetworkServiceDesignGroupInner get(String resourceGroupName, String publisherName,
        String networkServiceDesignGroupName);

    /**
     * Updates a network service design groups resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param networkServiceDesignGroupName The name of the network service design group.
     * @param parameters Parameters supplied to the create or update publisher network service design group operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return network service design group resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<NetworkServiceDesignGroupInner> updateWithResponse(String resourceGroupName, String publisherName,
        String networkServiceDesignGroupName, TagsObject parameters, Context context);

    /**
     * Updates a network service design groups resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param networkServiceDesignGroupName The name of the network service design group.
     * @param parameters Parameters supplied to the create or update publisher network service design group operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return network service design group resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    NetworkServiceDesignGroupInner update(String resourceGroupName, String publisherName,
        String networkServiceDesignGroupName, TagsObject parameters);
}
