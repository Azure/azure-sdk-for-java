// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Image artifact profile.
 */
@Fluent
public final class ImageArtifactProfile implements JsonSerializable<ImageArtifactProfile> {
    /*
     * Image name.
     */
    private String imageName;

    /*
     * Image version.
     */
    private String imageVersion;

    /**
     * Creates an instance of ImageArtifactProfile class.
     */
    public ImageArtifactProfile() {
    }

    /**
     * Get the imageName property: Image name.
     * 
     * @return the imageName value.
     */
    public String imageName() {
        return this.imageName;
    }

    /**
     * Set the imageName property: Image name.
     * 
     * @param imageName the imageName value to set.
     * @return the ImageArtifactProfile object itself.
     */
    public ImageArtifactProfile withImageName(String imageName) {
        this.imageName = imageName;
        return this;
    }

    /**
     * Get the imageVersion property: Image version.
     * 
     * @return the imageVersion value.
     */
    public String imageVersion() {
        return this.imageVersion;
    }

    /**
     * Set the imageVersion property: Image version.
     * 
     * @param imageVersion the imageVersion value to set.
     * @return the ImageArtifactProfile object itself.
     */
    public ImageArtifactProfile withImageVersion(String imageVersion) {
        this.imageVersion = imageVersion;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("imageName", this.imageName);
        jsonWriter.writeStringField("imageVersion", this.imageVersion);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ImageArtifactProfile from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ImageArtifactProfile if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ImageArtifactProfile.
     */
    public static ImageArtifactProfile fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ImageArtifactProfile deserializedImageArtifactProfile = new ImageArtifactProfile();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("imageName".equals(fieldName)) {
                    deserializedImageArtifactProfile.imageName = reader.getString();
                } else if ("imageVersion".equals(fieldName)) {
                    deserializedImageArtifactProfile.imageVersion = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedImageArtifactProfile;
        });
    }
}
