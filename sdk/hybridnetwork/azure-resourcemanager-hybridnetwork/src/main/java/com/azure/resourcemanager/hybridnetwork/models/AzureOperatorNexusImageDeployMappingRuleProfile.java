// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Azure Operator Distributed Services image deploy mapping rule profile.
 */
@Fluent
public final class AzureOperatorNexusImageDeployMappingRuleProfile extends MappingRuleProfile {
    /*
     * The vhd mapping rule profile.
     */
    @JsonProperty(value = "imageMappingRuleProfile")
    private ImageMappingRuleProfile imageMappingRuleProfile;

    /**
     * Creates an instance of AzureOperatorNexusImageDeployMappingRuleProfile class.
     */
    public AzureOperatorNexusImageDeployMappingRuleProfile() {
    }

    /**
     * Get the imageMappingRuleProfile property: The vhd mapping rule profile.
     * 
     * @return the imageMappingRuleProfile value.
     */
    public ImageMappingRuleProfile imageMappingRuleProfile() {
        return this.imageMappingRuleProfile;
    }

    /**
     * Set the imageMappingRuleProfile property: The vhd mapping rule profile.
     * 
     * @param imageMappingRuleProfile the imageMappingRuleProfile value to set.
     * @return the AzureOperatorNexusImageDeployMappingRuleProfile object itself.
     */
    public AzureOperatorNexusImageDeployMappingRuleProfile
        withImageMappingRuleProfile(ImageMappingRuleProfile imageMappingRuleProfile) {
        this.imageMappingRuleProfile = imageMappingRuleProfile;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AzureOperatorNexusImageDeployMappingRuleProfile
        withApplicationEnablement(ApplicationEnablement applicationEnablement) {
        super.withApplicationEnablement(applicationEnablement);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (imageMappingRuleProfile() != null) {
            imageMappingRuleProfile().validate();
        }
    }
}
