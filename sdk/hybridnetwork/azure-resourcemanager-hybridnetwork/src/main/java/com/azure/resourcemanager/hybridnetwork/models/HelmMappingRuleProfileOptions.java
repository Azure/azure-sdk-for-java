// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The helm deployment options.
 */
@Fluent
public final class HelmMappingRuleProfileOptions {
    /*
     * The helm deployment install options
     */
    @JsonProperty(value = "installOptions")
    private HelmInstallOptions installOptions;

    /*
     * The helm deployment upgrade options
     */
    @JsonProperty(value = "upgradeOptions")
    private HelmUpgradeOptions upgradeOptions;

    /**
     * Creates an instance of HelmMappingRuleProfileOptions class.
     */
    public HelmMappingRuleProfileOptions() {
    }

    /**
     * Get the installOptions property: The helm deployment install options.
     * 
     * @return the installOptions value.
     */
    public HelmInstallOptions installOptions() {
        return this.installOptions;
    }

    /**
     * Set the installOptions property: The helm deployment install options.
     * 
     * @param installOptions the installOptions value to set.
     * @return the HelmMappingRuleProfileOptions object itself.
     */
    public HelmMappingRuleProfileOptions withInstallOptions(HelmInstallOptions installOptions) {
        this.installOptions = installOptions;
        return this;
    }

    /**
     * Get the upgradeOptions property: The helm deployment upgrade options.
     * 
     * @return the upgradeOptions value.
     */
    public HelmUpgradeOptions upgradeOptions() {
        return this.upgradeOptions;
    }

    /**
     * Set the upgradeOptions property: The helm deployment upgrade options.
     * 
     * @param upgradeOptions the upgradeOptions value to set.
     * @return the HelmMappingRuleProfileOptions object itself.
     */
    public HelmMappingRuleProfileOptions withUpgradeOptions(HelmUpgradeOptions upgradeOptions) {
        this.upgradeOptions = upgradeOptions;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (installOptions() != null) {
            installOptions().validate();
        }
        if (upgradeOptions() != null) {
            upgradeOptions().validate();
        }
    }
}
