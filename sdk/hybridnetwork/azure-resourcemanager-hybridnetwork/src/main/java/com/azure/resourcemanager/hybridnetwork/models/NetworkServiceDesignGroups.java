// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of NetworkServiceDesignGroups.
 */
public interface NetworkServiceDesignGroups {
    /**
     * Gets information of the network service design groups under a publisher.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information of the network service design groups under a publisher as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<NetworkServiceDesignGroup> listByPublisher(String resourceGroupName, String publisherName);

    /**
     * Gets information of the network service design groups under a publisher.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information of the network service design groups under a publisher as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<NetworkServiceDesignGroup> listByPublisher(String resourceGroupName, String publisherName,
        Context context);

    /**
     * Deletes a specified network service design group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param networkServiceDesignGroupName The name of the network service design group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String publisherName, String networkServiceDesignGroupName);

    /**
     * Deletes a specified network service design group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param networkServiceDesignGroupName The name of the network service design group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String publisherName, String networkServiceDesignGroupName, Context context);

    /**
     * Gets information about the specified networkServiceDesign group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param networkServiceDesignGroupName The name of the network service design group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the specified networkServiceDesign group along with {@link Response}.
     */
    Response<NetworkServiceDesignGroup> getWithResponse(String resourceGroupName, String publisherName,
        String networkServiceDesignGroupName, Context context);

    /**
     * Gets information about the specified networkServiceDesign group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param networkServiceDesignGroupName The name of the network service design group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the specified networkServiceDesign group.
     */
    NetworkServiceDesignGroup get(String resourceGroupName, String publisherName, String networkServiceDesignGroupName);

    /**
     * Gets information about the specified networkServiceDesign group.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the specified networkServiceDesign group along with {@link Response}.
     */
    NetworkServiceDesignGroup getById(String id);

    /**
     * Gets information about the specified networkServiceDesign group.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the specified networkServiceDesign group along with {@link Response}.
     */
    Response<NetworkServiceDesignGroup> getByIdWithResponse(String id, Context context);

    /**
     * Deletes a specified network service design group.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes a specified network service design group.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new NetworkServiceDesignGroup resource.
     * 
     * @param name resource name.
     * @return the first stage of the new NetworkServiceDesignGroup definition.
     */
    NetworkServiceDesignGroup.DefinitionStages.Blank define(String name);
}
