// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/**
 * Site network service properties.
 */
@Fluent
public final class SiteNetworkServicePropertiesFormat {
    /*
     * The provisioning state of the site network service resource.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /*
     * Managed resource group configuration.
     */
    @JsonProperty(value = "managedResourceGroupConfiguration")
    private ManagedResourceGroupConfiguration managedResourceGroupConfiguration;

    /*
     * The site details
     */
    @JsonProperty(value = "siteReference")
    private ReferencedResource siteReference;

    /*
     * The publisher name for the site network service.
     */
    @JsonProperty(value = "publisherName", access = JsonProperty.Access.WRITE_ONLY)
    private String publisherName;

    /*
     * The scope of the publisher.
     */
    @JsonProperty(value = "publisherScope", access = JsonProperty.Access.WRITE_ONLY)
    private PublisherScope publisherScope;

    /*
     * The network service design group name for the site network service.
     */
    @JsonProperty(value = "networkServiceDesignGroupName", access = JsonProperty.Access.WRITE_ONLY)
    private String networkServiceDesignGroupName;

    /*
     * The network service design version for the site network service.
     */
    @JsonProperty(value = "networkServiceDesignVersionName", access = JsonProperty.Access.WRITE_ONLY)
    private String networkServiceDesignVersionName;

    /*
     * The location of the network service design offering.
     */
    @JsonProperty(value = "networkServiceDesignVersionOfferingLocation", access = JsonProperty.Access.WRITE_ONLY)
    private String networkServiceDesignVersionOfferingLocation;

    /*
     * The network service design version resource reference.
     */
    @JsonProperty(value = "networkServiceDesignVersionResourceReference")
    private DeploymentResourceIdReference networkServiceDesignVersionResourceReference;

    /*
     * The goal state of the site network service resource. This has references to the configuration group value
     * objects that describe the desired state of the site network service.
     */
    @JsonProperty(value = "desiredStateConfigurationGroupValueReferences")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, ReferencedResource> desiredStateConfigurationGroupValueReferences;

    /*
     * The network service design version for the site network service.
     */
    @JsonProperty(value = "lastStateNetworkServiceDesignVersionName", access = JsonProperty.Access.WRITE_ONLY)
    private String lastStateNetworkServiceDesignVersionName;

    /*
     * The last state of the site network service resource.
     */
    @JsonProperty(value = "lastStateConfigurationGroupValueReferences", access = JsonProperty.Access.WRITE_ONLY)
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, ReferencedResource> lastStateConfigurationGroupValueReferences;

    /**
     * Creates an instance of SiteNetworkServicePropertiesFormat class.
     */
    public SiteNetworkServicePropertiesFormat() {
    }

    /**
     * Get the provisioningState property: The provisioning state of the site network service resource.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the managedResourceGroupConfiguration property: Managed resource group configuration.
     * 
     * @return the managedResourceGroupConfiguration value.
     */
    public ManagedResourceGroupConfiguration managedResourceGroupConfiguration() {
        return this.managedResourceGroupConfiguration;
    }

    /**
     * Set the managedResourceGroupConfiguration property: Managed resource group configuration.
     * 
     * @param managedResourceGroupConfiguration the managedResourceGroupConfiguration value to set.
     * @return the SiteNetworkServicePropertiesFormat object itself.
     */
    public SiteNetworkServicePropertiesFormat
        withManagedResourceGroupConfiguration(ManagedResourceGroupConfiguration managedResourceGroupConfiguration) {
        this.managedResourceGroupConfiguration = managedResourceGroupConfiguration;
        return this;
    }

    /**
     * Get the siteReference property: The site details.
     * 
     * @return the siteReference value.
     */
    public ReferencedResource siteReference() {
        return this.siteReference;
    }

    /**
     * Set the siteReference property: The site details.
     * 
     * @param siteReference the siteReference value to set.
     * @return the SiteNetworkServicePropertiesFormat object itself.
     */
    public SiteNetworkServicePropertiesFormat withSiteReference(ReferencedResource siteReference) {
        this.siteReference = siteReference;
        return this;
    }

    /**
     * Get the publisherName property: The publisher name for the site network service.
     * 
     * @return the publisherName value.
     */
    public String publisherName() {
        return this.publisherName;
    }

    /**
     * Get the publisherScope property: The scope of the publisher.
     * 
     * @return the publisherScope value.
     */
    public PublisherScope publisherScope() {
        return this.publisherScope;
    }

    /**
     * Get the networkServiceDesignGroupName property: The network service design group name for the site network
     * service.
     * 
     * @return the networkServiceDesignGroupName value.
     */
    public String networkServiceDesignGroupName() {
        return this.networkServiceDesignGroupName;
    }

    /**
     * Get the networkServiceDesignVersionName property: The network service design version for the site network
     * service.
     * 
     * @return the networkServiceDesignVersionName value.
     */
    public String networkServiceDesignVersionName() {
        return this.networkServiceDesignVersionName;
    }

    /**
     * Get the networkServiceDesignVersionOfferingLocation property: The location of the network service design
     * offering.
     * 
     * @return the networkServiceDesignVersionOfferingLocation value.
     */
    public String networkServiceDesignVersionOfferingLocation() {
        return this.networkServiceDesignVersionOfferingLocation;
    }

    /**
     * Get the networkServiceDesignVersionResourceReference property: The network service design version resource
     * reference.
     * 
     * @return the networkServiceDesignVersionResourceReference value.
     */
    public DeploymentResourceIdReference networkServiceDesignVersionResourceReference() {
        return this.networkServiceDesignVersionResourceReference;
    }

    /**
     * Set the networkServiceDesignVersionResourceReference property: The network service design version resource
     * reference.
     * 
     * @param networkServiceDesignVersionResourceReference the networkServiceDesignVersionResourceReference value to
     * set.
     * @return the SiteNetworkServicePropertiesFormat object itself.
     */
    public SiteNetworkServicePropertiesFormat withNetworkServiceDesignVersionResourceReference(
        DeploymentResourceIdReference networkServiceDesignVersionResourceReference) {
        this.networkServiceDesignVersionResourceReference = networkServiceDesignVersionResourceReference;
        return this;
    }

    /**
     * Get the desiredStateConfigurationGroupValueReferences property: The goal state of the site network service
     * resource. This has references to the configuration group value objects that describe the desired state of the
     * site network service.
     * 
     * @return the desiredStateConfigurationGroupValueReferences value.
     */
    public Map<String, ReferencedResource> desiredStateConfigurationGroupValueReferences() {
        return this.desiredStateConfigurationGroupValueReferences;
    }

    /**
     * Set the desiredStateConfigurationGroupValueReferences property: The goal state of the site network service
     * resource. This has references to the configuration group value objects that describe the desired state of the
     * site network service.
     * 
     * @param desiredStateConfigurationGroupValueReferences the desiredStateConfigurationGroupValueReferences value to
     * set.
     * @return the SiteNetworkServicePropertiesFormat object itself.
     */
    public SiteNetworkServicePropertiesFormat withDesiredStateConfigurationGroupValueReferences(
        Map<String, ReferencedResource> desiredStateConfigurationGroupValueReferences) {
        this.desiredStateConfigurationGroupValueReferences = desiredStateConfigurationGroupValueReferences;
        return this;
    }

    /**
     * Get the lastStateNetworkServiceDesignVersionName property: The network service design version for the site
     * network service.
     * 
     * @return the lastStateNetworkServiceDesignVersionName value.
     */
    public String lastStateNetworkServiceDesignVersionName() {
        return this.lastStateNetworkServiceDesignVersionName;
    }

    /**
     * Get the lastStateConfigurationGroupValueReferences property: The last state of the site network service
     * resource.
     * 
     * @return the lastStateConfigurationGroupValueReferences value.
     */
    public Map<String, ReferencedResource> lastStateConfigurationGroupValueReferences() {
        return this.lastStateConfigurationGroupValueReferences;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (managedResourceGroupConfiguration() != null) {
            managedResourceGroupConfiguration().validate();
        }
        if (siteReference() != null) {
            siteReference().validate();
        }
        if (networkServiceDesignVersionResourceReference() != null) {
            networkServiceDesignVersionResourceReference().validate();
        }
        if (desiredStateConfigurationGroupValueReferences() != null) {
            desiredStateConfigurationGroupValueReferences().values().forEach(e -> {
                if (e != null) {
                    e.validate();
                }
            });
        }
        if (lastStateConfigurationGroupValueReferences() != null) {
            lastStateConfigurationGroupValueReferences().values().forEach(e -> {
                if (e != null) {
                    e.validate();
                }
            });
        }
    }
}
