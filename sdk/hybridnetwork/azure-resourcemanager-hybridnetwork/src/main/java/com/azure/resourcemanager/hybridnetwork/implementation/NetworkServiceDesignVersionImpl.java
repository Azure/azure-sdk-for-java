// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.hybridnetwork.fluent.models.NetworkServiceDesignVersionInner;
import com.azure.resourcemanager.hybridnetwork.fluent.models.NetworkServiceDesignVersionUpdateStateInner;
import com.azure.resourcemanager.hybridnetwork.models.NetworkServiceDesignVersion;
import com.azure.resourcemanager.hybridnetwork.models.NetworkServiceDesignVersionPropertiesFormat;
import com.azure.resourcemanager.hybridnetwork.models.NetworkServiceDesignVersionUpdateState;
import com.azure.resourcemanager.hybridnetwork.models.TagsObject;
import java.util.Collections;
import java.util.Map;

public final class NetworkServiceDesignVersionImpl
    implements NetworkServiceDesignVersion, NetworkServiceDesignVersion.Definition, NetworkServiceDesignVersion.Update {
    private NetworkServiceDesignVersionInner innerObject;

    private final com.azure.resourcemanager.hybridnetwork.HybridNetworkManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public NetworkServiceDesignVersionPropertiesFormat properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public NetworkServiceDesignVersionInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.hybridnetwork.HybridNetworkManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String publisherName;

    private String networkServiceDesignGroupName;

    private String networkServiceDesignVersionName;

    private TagsObject updateParameters;

    public NetworkServiceDesignVersionImpl withExistingNetworkServiceDesignGroup(String resourceGroupName,
        String publisherName, String networkServiceDesignGroupName) {
        this.resourceGroupName = resourceGroupName;
        this.publisherName = publisherName;
        this.networkServiceDesignGroupName = networkServiceDesignGroupName;
        return this;
    }

    public NetworkServiceDesignVersion create() {
        this.innerObject = serviceManager.serviceClient().getNetworkServiceDesignVersions().createOrUpdate(
            resourceGroupName, publisherName, networkServiceDesignGroupName, networkServiceDesignVersionName,
            this.innerModel(), Context.NONE);
        return this;
    }

    public NetworkServiceDesignVersion create(Context context) {
        this.innerObject = serviceManager.serviceClient().getNetworkServiceDesignVersions().createOrUpdate(
            resourceGroupName, publisherName, networkServiceDesignGroupName, networkServiceDesignVersionName,
            this.innerModel(), context);
        return this;
    }

    NetworkServiceDesignVersionImpl(String name,
        com.azure.resourcemanager.hybridnetwork.HybridNetworkManager serviceManager) {
        this.innerObject = new NetworkServiceDesignVersionInner();
        this.serviceManager = serviceManager;
        this.networkServiceDesignVersionName = name;
    }

    public NetworkServiceDesignVersionImpl update() {
        this.updateParameters = new TagsObject();
        return this;
    }

    public NetworkServiceDesignVersion apply() {
        this.innerObject = serviceManager
            .serviceClient().getNetworkServiceDesignVersions().updateWithResponse(resourceGroupName, publisherName,
                networkServiceDesignGroupName, networkServiceDesignVersionName, updateParameters, Context.NONE)
            .getValue();
        return this;
    }

    public NetworkServiceDesignVersion apply(Context context) {
        this.innerObject
            = serviceManager
                .serviceClient().getNetworkServiceDesignVersions().updateWithResponse(resourceGroupName, publisherName,
                    networkServiceDesignGroupName, networkServiceDesignVersionName, updateParameters, context)
                .getValue();
        return this;
    }

    NetworkServiceDesignVersionImpl(NetworkServiceDesignVersionInner innerObject,
        com.azure.resourcemanager.hybridnetwork.HybridNetworkManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.publisherName = Utils.getValueFromIdByName(innerObject.id(), "publishers");
        this.networkServiceDesignGroupName = Utils.getValueFromIdByName(innerObject.id(), "networkServiceDesignGroups");
        this.networkServiceDesignVersionName
            = Utils.getValueFromIdByName(innerObject.id(), "networkServiceDesignVersions");
    }

    public NetworkServiceDesignVersion refresh() {
        this.innerObject
            = serviceManager.serviceClient().getNetworkServiceDesignVersions().getWithResponse(resourceGroupName,
                publisherName, networkServiceDesignGroupName, networkServiceDesignVersionName, Context.NONE).getValue();
        return this;
    }

    public NetworkServiceDesignVersion refresh(Context context) {
        this.innerObject
            = serviceManager.serviceClient().getNetworkServiceDesignVersions().getWithResponse(resourceGroupName,
                publisherName, networkServiceDesignGroupName, networkServiceDesignVersionName, context).getValue();
        return this;
    }

    public NetworkServiceDesignVersionUpdateState updateState(NetworkServiceDesignVersionUpdateStateInner parameters) {
        return serviceManager.networkServiceDesignVersions().updateState(resourceGroupName, publisherName,
            networkServiceDesignGroupName, networkServiceDesignVersionName, parameters);
    }

    public NetworkServiceDesignVersionUpdateState updateState(NetworkServiceDesignVersionUpdateStateInner parameters,
        Context context) {
        return serviceManager.networkServiceDesignVersions().updateState(resourceGroupName, publisherName,
            networkServiceDesignGroupName, networkServiceDesignVersionName, parameters, context);
    }

    public NetworkServiceDesignVersionImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public NetworkServiceDesignVersionImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public NetworkServiceDesignVersionImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateParameters.withTags(tags);
            return this;
        }
    }

    public NetworkServiceDesignVersionImpl withProperties(NetworkServiceDesignVersionPropertiesFormat properties) {
        this.innerModel().withProperties(properties);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
