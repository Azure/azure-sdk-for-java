// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of Sites.
 */
public interface Sites {
    /**
     * Deletes the specified network site.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param siteName The name of the network service site.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String siteName);

    /**
     * Deletes the specified network site.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param siteName The name of the network service site.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String siteName, Context context);

    /**
     * Gets information about the specified network site.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param siteName The name of the network service site.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the specified network site along with {@link Response}.
     */
    Response<Site> getByResourceGroupWithResponse(String resourceGroupName, String siteName, Context context);

    /**
     * Gets information about the specified network site.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param siteName The name of the network service site.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the specified network site.
     */
    Site getByResourceGroup(String resourceGroupName, String siteName);

    /**
     * Lists all sites in the network service in a subscription.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response for sites API service call as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Site> list();

    /**
     * Lists all sites in the network service in a subscription.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response for sites API service call as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Site> list(Context context);

    /**
     * Lists all sites in the network service.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response for sites API service call as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Site> listByResourceGroup(String resourceGroupName);

    /**
     * Lists all sites in the network service.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response for sites API service call as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Site> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Gets information about the specified network site.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the specified network site along with {@link Response}.
     */
    Site getById(String id);

    /**
     * Gets information about the specified network site.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the specified network site along with {@link Response}.
     */
    Response<Site> getByIdWithResponse(String id, Context context);

    /**
     * Deletes the specified network site.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes the specified network site.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new Site resource.
     * 
     * @param name resource name.
     * @return the first stage of the new Site definition.
     */
    Site.DefinitionStages.Blank define(String name);
}
