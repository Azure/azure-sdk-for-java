// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.management.SubResource;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;

/** Device properties. */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    include = JsonTypeInfo.As.PROPERTY,
    property = "deviceType",
    defaultImpl = DevicePropertiesFormat.class)
@JsonTypeName("DevicePropertiesFormat")
@JsonSubTypes({@JsonSubTypes.Type(name = "AzureStackEdge", value = AzureStackEdgeFormat.class)})
@Immutable
public class DevicePropertiesFormat {
    /*
     * The current device status.
     */
    @JsonProperty(value = "status", access = JsonProperty.Access.WRITE_ONLY)
    private Status status;

    /*
     * The provisioning state of the device resource.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /*
     * The list of network functions deployed on the device.
     */
    @JsonProperty(value = "networkFunctions", access = JsonProperty.Access.WRITE_ONLY)
    private List<SubResource> networkFunctions;

    /** Creates an instance of DevicePropertiesFormat class. */
    public DevicePropertiesFormat() {
    }

    /**
     * Get the status property: The current device status.
     *
     * @return the status value.
     */
    public Status status() {
        return this.status;
    }

    /**
     * Get the provisioningState property: The provisioning state of the device resource.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the networkFunctions property: The list of network functions deployed on the device.
     *
     * @return the networkFunctions value.
     */
    public List<SubResource> networkFunctions() {
        return this.networkFunctions;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
