// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.hybridnetwork.fluent.models.NetworkFunctionDefinitionGroupInner;
import com.azure.resourcemanager.hybridnetwork.models.NetworkFunctionDefinitionGroup;
import com.azure.resourcemanager.hybridnetwork.models.NetworkFunctionDefinitionGroupPropertiesFormat;
import com.azure.resourcemanager.hybridnetwork.models.TagsObject;
import java.util.Collections;
import java.util.Map;

public final class NetworkFunctionDefinitionGroupImpl implements NetworkFunctionDefinitionGroup,
    NetworkFunctionDefinitionGroup.Definition, NetworkFunctionDefinitionGroup.Update {
    private NetworkFunctionDefinitionGroupInner innerObject;

    private final com.azure.resourcemanager.hybridnetwork.HybridNetworkManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public NetworkFunctionDefinitionGroupPropertiesFormat properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public NetworkFunctionDefinitionGroupInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.hybridnetwork.HybridNetworkManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String publisherName;

    private String networkFunctionDefinitionGroupName;

    private TagsObject updateParameters;

    public NetworkFunctionDefinitionGroupImpl withExistingPublisher(String resourceGroupName, String publisherName) {
        this.resourceGroupName = resourceGroupName;
        this.publisherName = publisherName;
        return this;
    }

    public NetworkFunctionDefinitionGroup create() {
        this.innerObject = serviceManager.serviceClient().getNetworkFunctionDefinitionGroups().createOrUpdate(
            resourceGroupName, publisherName, networkFunctionDefinitionGroupName, this.innerModel(), Context.NONE);
        return this;
    }

    public NetworkFunctionDefinitionGroup create(Context context) {
        this.innerObject = serviceManager.serviceClient().getNetworkFunctionDefinitionGroups().createOrUpdate(
            resourceGroupName, publisherName, networkFunctionDefinitionGroupName, this.innerModel(), context);
        return this;
    }

    NetworkFunctionDefinitionGroupImpl(String name,
        com.azure.resourcemanager.hybridnetwork.HybridNetworkManager serviceManager) {
        this.innerObject = new NetworkFunctionDefinitionGroupInner();
        this.serviceManager = serviceManager;
        this.networkFunctionDefinitionGroupName = name;
    }

    public NetworkFunctionDefinitionGroupImpl update() {
        this.updateParameters = new TagsObject();
        return this;
    }

    public NetworkFunctionDefinitionGroup apply() {
        this.innerObject
            = serviceManager.serviceClient().getNetworkFunctionDefinitionGroups().updateWithResponse(resourceGroupName,
                publisherName, networkFunctionDefinitionGroupName, updateParameters, Context.NONE).getValue();
        return this;
    }

    public NetworkFunctionDefinitionGroup apply(Context context) {
        this.innerObject
            = serviceManager.serviceClient().getNetworkFunctionDefinitionGroups().updateWithResponse(resourceGroupName,
                publisherName, networkFunctionDefinitionGroupName, updateParameters, context).getValue();
        return this;
    }

    NetworkFunctionDefinitionGroupImpl(NetworkFunctionDefinitionGroupInner innerObject,
        com.azure.resourcemanager.hybridnetwork.HybridNetworkManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.publisherName = Utils.getValueFromIdByName(innerObject.id(), "publishers");
        this.networkFunctionDefinitionGroupName
            = Utils.getValueFromIdByName(innerObject.id(), "networkFunctionDefinitionGroups");
    }

    public NetworkFunctionDefinitionGroup refresh() {
        this.innerObject = serviceManager.serviceClient().getNetworkFunctionDefinitionGroups()
            .getWithResponse(resourceGroupName, publisherName, networkFunctionDefinitionGroupName, Context.NONE)
            .getValue();
        return this;
    }

    public NetworkFunctionDefinitionGroup refresh(Context context) {
        this.innerObject = serviceManager.serviceClient().getNetworkFunctionDefinitionGroups()
            .getWithResponse(resourceGroupName, publisherName, networkFunctionDefinitionGroupName, context).getValue();
        return this;
    }

    public NetworkFunctionDefinitionGroupImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public NetworkFunctionDefinitionGroupImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public NetworkFunctionDefinitionGroupImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateParameters.withTags(tags);
            return this;
        }
    }

    public NetworkFunctionDefinitionGroupImpl
        withProperties(NetworkFunctionDefinitionGroupPropertiesFormat properties) {
        this.innerModel().withProperties(properties);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
