// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.hybridnetwork.fluent.models.ConfigurationGroupValueInner;
import com.azure.resourcemanager.hybridnetwork.models.ConfigurationGroupValue;
import com.azure.resourcemanager.hybridnetwork.models.ConfigurationGroupValuePropertiesFormat;
import com.azure.resourcemanager.hybridnetwork.models.TagsObject;
import java.util.Collections;
import java.util.Map;

public final class ConfigurationGroupValueImpl
    implements ConfigurationGroupValue, ConfigurationGroupValue.Definition, ConfigurationGroupValue.Update {
    private ConfigurationGroupValueInner innerObject;

    private final com.azure.resourcemanager.hybridnetwork.HybridNetworkManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public ConfigurationGroupValuePropertiesFormat properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public ConfigurationGroupValueInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.hybridnetwork.HybridNetworkManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String configurationGroupValueName;

    private TagsObject updateParameters;

    public ConfigurationGroupValueImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public ConfigurationGroupValue create() {
        this.innerObject = serviceManager.serviceClient().getConfigurationGroupValues()
            .createOrUpdate(resourceGroupName, configurationGroupValueName, this.innerModel(), Context.NONE);
        return this;
    }

    public ConfigurationGroupValue create(Context context) {
        this.innerObject = serviceManager.serviceClient().getConfigurationGroupValues()
            .createOrUpdate(resourceGroupName, configurationGroupValueName, this.innerModel(), context);
        return this;
    }

    ConfigurationGroupValueImpl(String name,
        com.azure.resourcemanager.hybridnetwork.HybridNetworkManager serviceManager) {
        this.innerObject = new ConfigurationGroupValueInner();
        this.serviceManager = serviceManager;
        this.configurationGroupValueName = name;
    }

    public ConfigurationGroupValueImpl update() {
        this.updateParameters = new TagsObject();
        return this;
    }

    public ConfigurationGroupValue apply() {
        this.innerObject = serviceManager.serviceClient().getConfigurationGroupValues()
            .updateTagsWithResponse(resourceGroupName, configurationGroupValueName, updateParameters, Context.NONE)
            .getValue();
        return this;
    }

    public ConfigurationGroupValue apply(Context context) {
        this.innerObject = serviceManager.serviceClient().getConfigurationGroupValues()
            .updateTagsWithResponse(resourceGroupName, configurationGroupValueName, updateParameters, context)
            .getValue();
        return this;
    }

    ConfigurationGroupValueImpl(ConfigurationGroupValueInner innerObject,
        com.azure.resourcemanager.hybridnetwork.HybridNetworkManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.configurationGroupValueName = Utils.getValueFromIdByName(innerObject.id(), "configurationGroupValues");
    }

    public ConfigurationGroupValue refresh() {
        this.innerObject = serviceManager.serviceClient().getConfigurationGroupValues()
            .getByResourceGroupWithResponse(resourceGroupName, configurationGroupValueName, Context.NONE).getValue();
        return this;
    }

    public ConfigurationGroupValue refresh(Context context) {
        this.innerObject = serviceManager.serviceClient().getConfigurationGroupValues()
            .getByResourceGroupWithResponse(resourceGroupName, configurationGroupValueName, context).getValue();
        return this;
    }

    public ConfigurationGroupValueImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public ConfigurationGroupValueImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public ConfigurationGroupValueImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateParameters.withTags(tags);
            return this;
        }
    }

    public ConfigurationGroupValueImpl withProperties(ConfigurationGroupValuePropertiesFormat properties) {
        this.innerModel().withProperties(properties);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
