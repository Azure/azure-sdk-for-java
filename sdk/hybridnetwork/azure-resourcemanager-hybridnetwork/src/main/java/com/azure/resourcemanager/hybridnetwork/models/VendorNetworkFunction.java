// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.hybridnetwork.fluent.models.VendorNetworkFunctionInner;
import java.util.List;

/** An immutable client-side representation of VendorNetworkFunction. */
public interface VendorNetworkFunction {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the provisioningState property: The provisioning state of the vendor network function sub resource.
     *
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the vendorProvisioningState property: The vendor controlled provisioning state of the vendor network
     * function.
     *
     * @return the vendorProvisioningState value.
     */
    VendorProvisioningState vendorProvisioningState();

    /**
     * Gets the skuName property: The name of the sku.
     *
     * @return the skuName value.
     */
    String skuName();

    /**
     * Gets the skuType property: The sku type.
     *
     * @return the skuType value.
     */
    SkuType skuType();

    /**
     * Gets the networkFunctionVendorConfigurations property: An array of network function vendor configurations.
     *
     * @return the networkFunctionVendorConfigurations value.
     */
    List<NetworkFunctionVendorConfiguration> networkFunctionVendorConfigurations();

    /**
     * Gets the inner com.azure.resourcemanager.hybridnetwork.fluent.models.VendorNetworkFunctionInner object.
     *
     * @return the inner object.
     */
    VendorNetworkFunctionInner innerModel();

    /** The entirety of the VendorNetworkFunction definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The VendorNetworkFunction definition stages. */
    interface DefinitionStages {
        /** The first stage of the VendorNetworkFunction definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the VendorNetworkFunction definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies locationName, vendorName.
             *
             * @param locationName The Azure region where the network function resource was created by the customer.
             * @param vendorName The name of the vendor.
             * @return the next definition stage.
             */
            WithCreate withExistingVendor(String locationName, String vendorName);
        }
        /**
         * The stage of the VendorNetworkFunction definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithVendorProvisioningState,
                DefinitionStages.WithNetworkFunctionVendorConfigurations {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            VendorNetworkFunction create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            VendorNetworkFunction create(Context context);
        }
        /** The stage of the VendorNetworkFunction definition allowing to specify vendorProvisioningState. */
        interface WithVendorProvisioningState {
            /**
             * Specifies the vendorProvisioningState property: The vendor controlled provisioning state of the vendor
             * network function..
             *
             * @param vendorProvisioningState The vendor controlled provisioning state of the vendor network function.
             * @return the next definition stage.
             */
            WithCreate withVendorProvisioningState(VendorProvisioningState vendorProvisioningState);
        }
        /**
         * The stage of the VendorNetworkFunction definition allowing to specify networkFunctionVendorConfigurations.
         */
        interface WithNetworkFunctionVendorConfigurations {
            /**
             * Specifies the networkFunctionVendorConfigurations property: An array of network function vendor
             * configurations..
             *
             * @param networkFunctionVendorConfigurations An array of network function vendor configurations.
             * @return the next definition stage.
             */
            WithCreate withNetworkFunctionVendorConfigurations(
                List<NetworkFunctionVendorConfiguration> networkFunctionVendorConfigurations);
        }
    }
    /**
     * Begins update for the VendorNetworkFunction resource.
     *
     * @return the stage of resource update.
     */
    VendorNetworkFunction.Update update();

    /** The template for VendorNetworkFunction update. */
    interface Update
        extends UpdateStages.WithVendorProvisioningState, UpdateStages.WithNetworkFunctionVendorConfigurations {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        VendorNetworkFunction apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        VendorNetworkFunction apply(Context context);
    }
    /** The VendorNetworkFunction update stages. */
    interface UpdateStages {
        /** The stage of the VendorNetworkFunction update allowing to specify vendorProvisioningState. */
        interface WithVendorProvisioningState {
            /**
             * Specifies the vendorProvisioningState property: The vendor controlled provisioning state of the vendor
             * network function..
             *
             * @param vendorProvisioningState The vendor controlled provisioning state of the vendor network function.
             * @return the next definition stage.
             */
            Update withVendorProvisioningState(VendorProvisioningState vendorProvisioningState);
        }
        /** The stage of the VendorNetworkFunction update allowing to specify networkFunctionVendorConfigurations. */
        interface WithNetworkFunctionVendorConfigurations {
            /**
             * Specifies the networkFunctionVendorConfigurations property: An array of network function vendor
             * configurations..
             *
             * @param networkFunctionVendorConfigurations An array of network function vendor configurations.
             * @return the next definition stage.
             */
            Update withNetworkFunctionVendorConfigurations(
                List<NetworkFunctionVendorConfiguration> networkFunctionVendorConfigurations);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    VendorNetworkFunction refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    VendorNetworkFunction refresh(Context context);
}
