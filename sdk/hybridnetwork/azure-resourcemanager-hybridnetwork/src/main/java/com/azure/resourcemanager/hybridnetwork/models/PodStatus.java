// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.models;

import com.azure.core.util.ExpandableStringEnum;
import com.fasterxml.jackson.annotation.JsonCreator;
import java.util.Collection;

/**
 * The status of a Pod.
 */
public final class PodStatus extends ExpandableStringEnum<PodStatus> {
    /**
     * Static value Unknown for PodStatus.
     */
    public static final PodStatus UNKNOWN = fromString("Unknown");

    /**
     * Static value Succeeded for PodStatus.
     */
    public static final PodStatus SUCCEEDED = fromString("Succeeded");

    /**
     * Static value Failed for PodStatus.
     */
    public static final PodStatus FAILED = fromString("Failed");

    /**
     * Static value Running for PodStatus.
     */
    public static final PodStatus RUNNING = fromString("Running");

    /**
     * Static value Pending for PodStatus.
     */
    public static final PodStatus PENDING = fromString("Pending");

    /**
     * Static value Terminating for PodStatus.
     */
    public static final PodStatus TERMINATING = fromString("Terminating");

    /**
     * Static value NotReady for PodStatus.
     */
    public static final PodStatus NOT_READY = fromString("NotReady");

    /**
     * Creates a new instance of PodStatus value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public PodStatus() {
    }

    /**
     * Creates or finds a PodStatus from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding PodStatus.
     */
    @JsonCreator
    public static PodStatus fromString(String name) {
        return fromString(name, PodStatus.class);
    }

    /**
     * Gets known PodStatus values.
     * 
     * @return known PodStatus values.
     */
    public static Collection<PodStatus> values() {
        return values(PodStatus.class);
    }
}
