// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.hybridnetwork.models.ArtifactManifestState;
import java.io.IOException;

/**
 * The artifact manifest updating request payload. Only the 'Uploaded' state is allowed for updates. Other states are
 * used for internal state transitioning.
 */
@Fluent
public final class ArtifactManifestUpdateStateInner implements JsonSerializable<ArtifactManifestUpdateStateInner> {
    /*
     * The artifact manifest state.
     */
    private ArtifactManifestState artifactManifestState;

    /**
     * Creates an instance of ArtifactManifestUpdateStateInner class.
     */
    public ArtifactManifestUpdateStateInner() {
    }

    /**
     * Get the artifactManifestState property: The artifact manifest state.
     * 
     * @return the artifactManifestState value.
     */
    public ArtifactManifestState artifactManifestState() {
        return this.artifactManifestState;
    }

    /**
     * Set the artifactManifestState property: The artifact manifest state.
     * 
     * @param artifactManifestState the artifactManifestState value to set.
     * @return the ArtifactManifestUpdateStateInner object itself.
     */
    public ArtifactManifestUpdateStateInner withArtifactManifestState(ArtifactManifestState artifactManifestState) {
        this.artifactManifestState = artifactManifestState;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("artifactManifestState",
            this.artifactManifestState == null ? null : this.artifactManifestState.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ArtifactManifestUpdateStateInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ArtifactManifestUpdateStateInner if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ArtifactManifestUpdateStateInner.
     */
    public static ArtifactManifestUpdateStateInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ArtifactManifestUpdateStateInner deserializedArtifactManifestUpdateStateInner
                = new ArtifactManifestUpdateStateInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("artifactManifestState".equals(fieldName)) {
                    deserializedArtifactManifestUpdateStateInner.artifactManifestState
                        = ArtifactManifestState.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedArtifactManifestUpdateStateInner;
        });
    }
}
