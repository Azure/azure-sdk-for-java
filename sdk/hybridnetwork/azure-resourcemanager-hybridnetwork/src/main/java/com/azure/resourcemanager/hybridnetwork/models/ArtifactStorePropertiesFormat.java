// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Artifact store properties.
 */
@Fluent
public final class ArtifactStorePropertiesFormat {
    /*
     * The provisioning state of the application groups resource.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /*
     * The artifact store type.
     */
    @JsonProperty(value = "storeType")
    private ArtifactStoreType storeType;

    /*
     * The replication strategy.
     */
    @JsonProperty(value = "replicationStrategy")
    private ArtifactReplicationStrategy replicationStrategy;

    /*
     * The managedResourceGroupConfiguration property.
     */
    @JsonProperty(value = "managedResourceGroupConfiguration")
    private ArtifactStorePropertiesFormatManagedResourceGroupConfiguration managedResourceGroupConfiguration;

    /*
     * The created storage resource id
     */
    @JsonProperty(value = "storageResourceId", access = JsonProperty.Access.WRITE_ONLY)
    private String storageResourceId;

    /**
     * Creates an instance of ArtifactStorePropertiesFormat class.
     */
    public ArtifactStorePropertiesFormat() {
    }

    /**
     * Get the provisioningState property: The provisioning state of the application groups resource.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the storeType property: The artifact store type.
     * 
     * @return the storeType value.
     */
    public ArtifactStoreType storeType() {
        return this.storeType;
    }

    /**
     * Set the storeType property: The artifact store type.
     * 
     * @param storeType the storeType value to set.
     * @return the ArtifactStorePropertiesFormat object itself.
     */
    public ArtifactStorePropertiesFormat withStoreType(ArtifactStoreType storeType) {
        this.storeType = storeType;
        return this;
    }

    /**
     * Get the replicationStrategy property: The replication strategy.
     * 
     * @return the replicationStrategy value.
     */
    public ArtifactReplicationStrategy replicationStrategy() {
        return this.replicationStrategy;
    }

    /**
     * Set the replicationStrategy property: The replication strategy.
     * 
     * @param replicationStrategy the replicationStrategy value to set.
     * @return the ArtifactStorePropertiesFormat object itself.
     */
    public ArtifactStorePropertiesFormat withReplicationStrategy(ArtifactReplicationStrategy replicationStrategy) {
        this.replicationStrategy = replicationStrategy;
        return this;
    }

    /**
     * Get the managedResourceGroupConfiguration property: The managedResourceGroupConfiguration property.
     * 
     * @return the managedResourceGroupConfiguration value.
     */
    public ArtifactStorePropertiesFormatManagedResourceGroupConfiguration managedResourceGroupConfiguration() {
        return this.managedResourceGroupConfiguration;
    }

    /**
     * Set the managedResourceGroupConfiguration property: The managedResourceGroupConfiguration property.
     * 
     * @param managedResourceGroupConfiguration the managedResourceGroupConfiguration value to set.
     * @return the ArtifactStorePropertiesFormat object itself.
     */
    public ArtifactStorePropertiesFormat withManagedResourceGroupConfiguration(
        ArtifactStorePropertiesFormatManagedResourceGroupConfiguration managedResourceGroupConfiguration) {
        this.managedResourceGroupConfiguration = managedResourceGroupConfiguration;
        return this;
    }

    /**
     * Get the storageResourceId property: The created storage resource id.
     * 
     * @return the storageResourceId value.
     */
    public String storageResourceId() {
        return this.storageResourceId;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (managedResourceGroupConfiguration() != null) {
            managedResourceGroupConfiguration().validate();
        }
    }
}
