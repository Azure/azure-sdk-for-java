// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.hybridnetwork.fluent.models.ArtifactManifestUpdateStateInner;

/**
 * Resource collection API of ArtifactManifests.
 */
public interface ArtifactManifests {
    /**
     * Gets information about the artifact manifest.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param artifactStoreName The name of the artifact store.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the artifact manifest as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ArtifactManifest> listByArtifactStore(String resourceGroupName, String publisherName,
        String artifactStoreName);

    /**
     * Gets information about the artifact manifest.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param artifactStoreName The name of the artifact store.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the artifact manifest as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ArtifactManifest> listByArtifactStore(String resourceGroupName, String publisherName,
        String artifactStoreName, Context context);

    /**
     * Deletes the specified artifact manifest.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param artifactStoreName The name of the artifact store.
     * @param artifactManifestName The name of the artifact manifest.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String publisherName, String artifactStoreName, String artifactManifestName);

    /**
     * Deletes the specified artifact manifest.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param artifactStoreName The name of the artifact store.
     * @param artifactManifestName The name of the artifact manifest.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String publisherName, String artifactStoreName, String artifactManifestName,
        Context context);

    /**
     * Gets information about a artifact manifest resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param artifactStoreName The name of the artifact store.
     * @param artifactManifestName The name of the artifact manifest.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about a artifact manifest resource along with {@link Response}.
     */
    Response<ArtifactManifest> getWithResponse(String resourceGroupName, String publisherName, String artifactStoreName,
        String artifactManifestName, Context context);

    /**
     * Gets information about a artifact manifest resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param artifactStoreName The name of the artifact store.
     * @param artifactManifestName The name of the artifact manifest.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about a artifact manifest resource.
     */
    ArtifactManifest get(String resourceGroupName, String publisherName, String artifactStoreName,
        String artifactManifestName);

    /**
     * List credential for publishing artifacts defined in artifact manifest.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param artifactStoreName The name of the artifact store.
     * @param artifactManifestName The name of the artifact manifest.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the artifact manifest credential definition along with {@link Response}.
     */
    Response<ArtifactAccessCredential> listCredentialWithResponse(String resourceGroupName, String publisherName,
        String artifactStoreName, String artifactManifestName, Context context);

    /**
     * List credential for publishing artifacts defined in artifact manifest.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param artifactStoreName The name of the artifact store.
     * @param artifactManifestName The name of the artifact manifest.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the artifact manifest credential definition.
     */
    ArtifactAccessCredential listCredential(String resourceGroupName, String publisherName, String artifactStoreName,
        String artifactManifestName);

    /**
     * Update state for artifact manifest.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param artifactStoreName The name of the artifact store.
     * @param artifactManifestName The name of the artifact manifest.
     * @param parameters Parameters supplied to update the state of artifact manifest.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the artifact manifest updating request payload.
     */
    ArtifactManifestUpdateState updateState(String resourceGroupName, String publisherName, String artifactStoreName,
        String artifactManifestName, ArtifactManifestUpdateStateInner parameters);

    /**
     * Update state for artifact manifest.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param artifactStoreName The name of the artifact store.
     * @param artifactManifestName The name of the artifact manifest.
     * @param parameters Parameters supplied to update the state of artifact manifest.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the artifact manifest updating request payload.
     */
    ArtifactManifestUpdateState updateState(String resourceGroupName, String publisherName, String artifactStoreName,
        String artifactManifestName, ArtifactManifestUpdateStateInner parameters, Context context);

    /**
     * Gets information about a artifact manifest resource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about a artifact manifest resource along with {@link Response}.
     */
    ArtifactManifest getById(String id);

    /**
     * Gets information about a artifact manifest resource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about a artifact manifest resource along with {@link Response}.
     */
    Response<ArtifactManifest> getByIdWithResponse(String id, Context context);

    /**
     * Deletes the specified artifact manifest.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes the specified artifact manifest.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new ArtifactManifest resource.
     * 
     * @param name resource name.
     * @return the first stage of the new ArtifactManifest definition.
     */
    ArtifactManifest.DefinitionStages.Blank define(String name);
}
