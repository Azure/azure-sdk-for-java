// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Artifact manifest properties.
 */
@Fluent
public final class ArtifactManifestPropertiesFormat {
    /*
     * The provisioning state of the ArtifactManifest resource.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /*
     * The artifact manifest state.
     */
    @JsonProperty(value = "artifactManifestState", access = JsonProperty.Access.WRITE_ONLY)
    private ArtifactManifestState artifactManifestState;

    /*
     * The artifacts list.
     */
    @JsonProperty(value = "artifacts")
    private List<ManifestArtifactFormat> artifacts;

    /**
     * Creates an instance of ArtifactManifestPropertiesFormat class.
     */
    public ArtifactManifestPropertiesFormat() {
    }

    /**
     * Get the provisioningState property: The provisioning state of the ArtifactManifest resource.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the artifactManifestState property: The artifact manifest state.
     * 
     * @return the artifactManifestState value.
     */
    public ArtifactManifestState artifactManifestState() {
        return this.artifactManifestState;
    }

    /**
     * Get the artifacts property: The artifacts list.
     * 
     * @return the artifacts value.
     */
    public List<ManifestArtifactFormat> artifacts() {
        return this.artifacts;
    }

    /**
     * Set the artifacts property: The artifacts list.
     * 
     * @param artifacts the artifacts value to set.
     * @return the ArtifactManifestPropertiesFormat object itself.
     */
    public ArtifactManifestPropertiesFormat withArtifacts(List<ManifestArtifactFormat> artifacts) {
        this.artifacts = artifacts;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (artifacts() != null) {
            artifacts().forEach(e -> e.validate());
        }
    }
}
