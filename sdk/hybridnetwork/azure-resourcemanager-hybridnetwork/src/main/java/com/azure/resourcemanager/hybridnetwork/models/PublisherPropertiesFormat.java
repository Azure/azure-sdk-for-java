// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * publisher properties.
 */
@Fluent
public final class PublisherPropertiesFormat {
    /*
     * The provisioning state of the publisher resource.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /*
     * The publisher scope.
     */
    @JsonProperty(value = "scope")
    private PublisherScope scope;

    /**
     * Creates an instance of PublisherPropertiesFormat class.
     */
    public PublisherPropertiesFormat() {
    }

    /**
     * Get the provisioningState property: The provisioning state of the publisher resource.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the scope property: The publisher scope.
     * 
     * @return the scope value.
     */
    public PublisherScope scope() {
        return this.scope;
    }

    /**
     * Set the scope property: The publisher scope.
     * 
     * @param scope the scope value to set.
     * @return the PublisherPropertiesFormat object itself.
     */
    public PublisherPropertiesFormat withScope(PublisherScope scope) {
        this.scope = scope;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
