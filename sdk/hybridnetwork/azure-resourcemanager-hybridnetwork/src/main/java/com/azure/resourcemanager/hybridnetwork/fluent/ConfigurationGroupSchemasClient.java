// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.hybridnetwork.fluent.models.ConfigurationGroupSchemaInner;
import com.azure.resourcemanager.hybridnetwork.fluent.models.ConfigurationGroupSchemaVersionUpdateStateInner;
import com.azure.resourcemanager.hybridnetwork.models.TagsObject;

/**
 * An instance of this class provides access to all the operations defined in ConfigurationGroupSchemasClient.
 */
public interface ConfigurationGroupSchemasClient {
    /**
     * Gets information of the configuration group schemas under a publisher.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information of the configuration group schemas under a publisher as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ConfigurationGroupSchemaInner> listByPublisher(String resourceGroupName, String publisherName);

    /**
     * Gets information of the configuration group schemas under a publisher.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information of the configuration group schemas under a publisher as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ConfigurationGroupSchemaInner> listByPublisher(String resourceGroupName, String publisherName,
        Context context);

    /**
     * Deletes a specified configuration group schema.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param configurationGroupSchemaName The name of the configuration group schema.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String publisherName,
        String configurationGroupSchemaName);

    /**
     * Deletes a specified configuration group schema.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param configurationGroupSchemaName The name of the configuration group schema.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String publisherName,
        String configurationGroupSchemaName, Context context);

    /**
     * Deletes a specified configuration group schema.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param configurationGroupSchemaName The name of the configuration group schema.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String publisherName, String configurationGroupSchemaName);

    /**
     * Deletes a specified configuration group schema.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param configurationGroupSchemaName The name of the configuration group schema.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String publisherName, String configurationGroupSchemaName, Context context);

    /**
     * Creates or updates a configuration group schema.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param configurationGroupSchemaName The name of the configuration group schema.
     * @param parameters Parameters supplied to the create or update configuration group schema resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of configuration group schema resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ConfigurationGroupSchemaInner>, ConfigurationGroupSchemaInner> beginCreateOrUpdate(
        String resourceGroupName, String publisherName, String configurationGroupSchemaName,
        ConfigurationGroupSchemaInner parameters);

    /**
     * Creates or updates a configuration group schema.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param configurationGroupSchemaName The name of the configuration group schema.
     * @param parameters Parameters supplied to the create or update configuration group schema resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of configuration group schema resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ConfigurationGroupSchemaInner>, ConfigurationGroupSchemaInner> beginCreateOrUpdate(
        String resourceGroupName, String publisherName, String configurationGroupSchemaName,
        ConfigurationGroupSchemaInner parameters, Context context);

    /**
     * Creates or updates a configuration group schema.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param configurationGroupSchemaName The name of the configuration group schema.
     * @param parameters Parameters supplied to the create or update configuration group schema resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration group schema resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ConfigurationGroupSchemaInner createOrUpdate(String resourceGroupName, String publisherName,
        String configurationGroupSchemaName, ConfigurationGroupSchemaInner parameters);

    /**
     * Creates or updates a configuration group schema.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param configurationGroupSchemaName The name of the configuration group schema.
     * @param parameters Parameters supplied to the create or update configuration group schema resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration group schema resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ConfigurationGroupSchemaInner createOrUpdate(String resourceGroupName, String publisherName,
        String configurationGroupSchemaName, ConfigurationGroupSchemaInner parameters, Context context);

    /**
     * Gets information about the specified configuration group schema.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param configurationGroupSchemaName The name of the configuration group schema.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the specified configuration group schema along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ConfigurationGroupSchemaInner> getWithResponse(String resourceGroupName, String publisherName,
        String configurationGroupSchemaName, Context context);

    /**
     * Gets information about the specified configuration group schema.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param configurationGroupSchemaName The name of the configuration group schema.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the specified configuration group schema.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ConfigurationGroupSchemaInner get(String resourceGroupName, String publisherName,
        String configurationGroupSchemaName);

    /**
     * Updates a configuration group schema resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param configurationGroupSchemaName The name of the configuration group schema.
     * @param parameters Parameters supplied to the create or update network service design version operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration group schema resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ConfigurationGroupSchemaInner> updateWithResponse(String resourceGroupName, String publisherName,
        String configurationGroupSchemaName, TagsObject parameters, Context context);

    /**
     * Updates a configuration group schema resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param configurationGroupSchemaName The name of the configuration group schema.
     * @param parameters Parameters supplied to the create or update network service design version operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration group schema resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ConfigurationGroupSchemaInner update(String resourceGroupName, String publisherName,
        String configurationGroupSchemaName, TagsObject parameters);

    /**
     * Update configuration group schema state.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param configurationGroupSchemaName The name of the configuration group schema.
     * @param parameters Parameters supplied to update the state of configuration group schema.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of publisher configuration group schema update request definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ConfigurationGroupSchemaVersionUpdateStateInner>, ConfigurationGroupSchemaVersionUpdateStateInner>
        beginUpdateState(String resourceGroupName, String publisherName, String configurationGroupSchemaName,
            ConfigurationGroupSchemaVersionUpdateStateInner parameters);

    /**
     * Update configuration group schema state.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param configurationGroupSchemaName The name of the configuration group schema.
     * @param parameters Parameters supplied to update the state of configuration group schema.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of publisher configuration group schema update request definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ConfigurationGroupSchemaVersionUpdateStateInner>, ConfigurationGroupSchemaVersionUpdateStateInner>
        beginUpdateState(String resourceGroupName, String publisherName, String configurationGroupSchemaName,
            ConfigurationGroupSchemaVersionUpdateStateInner parameters, Context context);

    /**
     * Update configuration group schema state.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param configurationGroupSchemaName The name of the configuration group schema.
     * @param parameters Parameters supplied to update the state of configuration group schema.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return publisher configuration group schema update request definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ConfigurationGroupSchemaVersionUpdateStateInner updateState(String resourceGroupName, String publisherName,
        String configurationGroupSchemaName, ConfigurationGroupSchemaVersionUpdateStateInner parameters);

    /**
     * Update configuration group schema state.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publisherName The name of the publisher.
     * @param configurationGroupSchemaName The name of the configuration group schema.
     * @param parameters Parameters supplied to update the state of configuration group schema.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return publisher configuration group schema update request definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ConfigurationGroupSchemaVersionUpdateStateInner updateState(String resourceGroupName, String publisherName,
        String configurationGroupSchemaName, ConfigurationGroupSchemaVersionUpdateStateInner parameters,
        Context context);
}
