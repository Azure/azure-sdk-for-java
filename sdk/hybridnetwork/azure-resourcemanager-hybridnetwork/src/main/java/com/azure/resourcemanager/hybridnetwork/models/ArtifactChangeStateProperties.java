// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The artifact update state properties.
 */
@Fluent
public final class ArtifactChangeStateProperties implements JsonSerializable<ArtifactChangeStateProperties> {
    /*
     * The artifact state
     */
    private ArtifactState artifactState;

    /**
     * Creates an instance of ArtifactChangeStateProperties class.
     */
    public ArtifactChangeStateProperties() {
    }

    /**
     * Get the artifactState property: The artifact state.
     * 
     * @return the artifactState value.
     */
    public ArtifactState artifactState() {
        return this.artifactState;
    }

    /**
     * Set the artifactState property: The artifact state.
     * 
     * @param artifactState the artifactState value to set.
     * @return the ArtifactChangeStateProperties object itself.
     */
    public ArtifactChangeStateProperties withArtifactState(ArtifactState artifactState) {
        this.artifactState = artifactState;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("artifactState", this.artifactState == null ? null : this.artifactState.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ArtifactChangeStateProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ArtifactChangeStateProperties if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ArtifactChangeStateProperties.
     */
    public static ArtifactChangeStateProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ArtifactChangeStateProperties deserializedArtifactChangeStateProperties
                = new ArtifactChangeStateProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("artifactState".equals(fieldName)) {
                    deserializedArtifactChangeStateProperties.artifactState
                        = ArtifactState.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedArtifactChangeStateProperties;
        });
    }
}
