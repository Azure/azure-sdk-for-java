// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Azure vhd deploy mapping rule profile.
 */
@Fluent
public final class AzureCoreVhdImageDeployMappingRuleProfile extends MappingRuleProfile {
    /*
     * The vhd mapping rule profile.
     */
    @JsonProperty(value = "vhdImageMappingRuleProfile")
    private VhdImageMappingRuleProfile vhdImageMappingRuleProfile;

    /**
     * Creates an instance of AzureCoreVhdImageDeployMappingRuleProfile class.
     */
    public AzureCoreVhdImageDeployMappingRuleProfile() {
    }

    /**
     * Get the vhdImageMappingRuleProfile property: The vhd mapping rule profile.
     * 
     * @return the vhdImageMappingRuleProfile value.
     */
    public VhdImageMappingRuleProfile vhdImageMappingRuleProfile() {
        return this.vhdImageMappingRuleProfile;
    }

    /**
     * Set the vhdImageMappingRuleProfile property: The vhd mapping rule profile.
     * 
     * @param vhdImageMappingRuleProfile the vhdImageMappingRuleProfile value to set.
     * @return the AzureCoreVhdImageDeployMappingRuleProfile object itself.
     */
    public AzureCoreVhdImageDeployMappingRuleProfile
        withVhdImageMappingRuleProfile(VhdImageMappingRuleProfile vhdImageMappingRuleProfile) {
        this.vhdImageMappingRuleProfile = vhdImageMappingRuleProfile;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AzureCoreVhdImageDeployMappingRuleProfile
        withApplicationEnablement(ApplicationEnablement applicationEnablement) {
        super.withApplicationEnablement(applicationEnablement);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (vhdImageMappingRuleProfile() != null) {
            vhdImageMappingRuleProfile().validate();
        }
    }
}
