// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Vhd artifact profile.
 */
@Fluent
public final class VhdImageArtifactProfile implements JsonSerializable<VhdImageArtifactProfile> {
    /*
     * Vhd name.
     */
    private String vhdName;

    /*
     * Vhd version.
     */
    private String vhdVersion;

    /**
     * Creates an instance of VhdImageArtifactProfile class.
     */
    public VhdImageArtifactProfile() {
    }

    /**
     * Get the vhdName property: Vhd name.
     * 
     * @return the vhdName value.
     */
    public String vhdName() {
        return this.vhdName;
    }

    /**
     * Set the vhdName property: Vhd name.
     * 
     * @param vhdName the vhdName value to set.
     * @return the VhdImageArtifactProfile object itself.
     */
    public VhdImageArtifactProfile withVhdName(String vhdName) {
        this.vhdName = vhdName;
        return this;
    }

    /**
     * Get the vhdVersion property: Vhd version.
     * 
     * @return the vhdVersion value.
     */
    public String vhdVersion() {
        return this.vhdVersion;
    }

    /**
     * Set the vhdVersion property: Vhd version.
     * 
     * @param vhdVersion the vhdVersion value to set.
     * @return the VhdImageArtifactProfile object itself.
     */
    public VhdImageArtifactProfile withVhdVersion(String vhdVersion) {
        this.vhdVersion = vhdVersion;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("vhdName", this.vhdName);
        jsonWriter.writeStringField("vhdVersion", this.vhdVersion);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of VhdImageArtifactProfile from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of VhdImageArtifactProfile if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the VhdImageArtifactProfile.
     */
    public static VhdImageArtifactProfile fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            VhdImageArtifactProfile deserializedVhdImageArtifactProfile = new VhdImageArtifactProfile();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("vhdName".equals(fieldName)) {
                    deserializedVhdImageArtifactProfile.vhdName = reader.getString();
                } else if ("vhdVersion".equals(fieldName)) {
                    deserializedVhdImageArtifactProfile.vhdVersion = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedVhdImageArtifactProfile;
        });
    }
}
