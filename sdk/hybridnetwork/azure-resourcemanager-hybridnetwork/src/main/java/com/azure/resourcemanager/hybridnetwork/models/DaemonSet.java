// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/**
 * Helm DaemonSet status properties.
 */
@Fluent
public final class DaemonSet {
    /*
     * The name of the daemonSet.
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * The namespace of the daemonSet.
     */
    @JsonProperty(value = "namespace")
    private String namespace;

    /*
     * Desired number of pods
     */
    @JsonProperty(value = "desired")
    private Integer desired;

    /*
     * Current number of pods
     */
    @JsonProperty(value = "current")
    private Integer current;

    /*
     * Number of Ready pods
     */
    @JsonProperty(value = "ready")
    private Integer ready;

    /*
     * Number of upto date pods
     */
    @JsonProperty(value = "upToDate")
    private Integer upToDate;

    /*
     * Number of available pods.
     */
    @JsonProperty(value = "available")
    private Integer available;

    /*
     * Creation Time of daemonSet.
     */
    @JsonProperty(value = "creationTime")
    private OffsetDateTime creationTime;

    /**
     * Creates an instance of DaemonSet class.
     */
    public DaemonSet() {
    }

    /**
     * Get the name property: The name of the daemonSet.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: The name of the daemonSet.
     * 
     * @param name the name value to set.
     * @return the DaemonSet object itself.
     */
    public DaemonSet withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the namespace property: The namespace of the daemonSet.
     * 
     * @return the namespace value.
     */
    public String namespace() {
        return this.namespace;
    }

    /**
     * Set the namespace property: The namespace of the daemonSet.
     * 
     * @param namespace the namespace value to set.
     * @return the DaemonSet object itself.
     */
    public DaemonSet withNamespace(String namespace) {
        this.namespace = namespace;
        return this;
    }

    /**
     * Get the desired property: Desired number of pods.
     * 
     * @return the desired value.
     */
    public Integer desired() {
        return this.desired;
    }

    /**
     * Set the desired property: Desired number of pods.
     * 
     * @param desired the desired value to set.
     * @return the DaemonSet object itself.
     */
    public DaemonSet withDesired(Integer desired) {
        this.desired = desired;
        return this;
    }

    /**
     * Get the current property: Current number of pods.
     * 
     * @return the current value.
     */
    public Integer current() {
        return this.current;
    }

    /**
     * Set the current property: Current number of pods.
     * 
     * @param current the current value to set.
     * @return the DaemonSet object itself.
     */
    public DaemonSet withCurrent(Integer current) {
        this.current = current;
        return this;
    }

    /**
     * Get the ready property: Number of Ready pods.
     * 
     * @return the ready value.
     */
    public Integer ready() {
        return this.ready;
    }

    /**
     * Set the ready property: Number of Ready pods.
     * 
     * @param ready the ready value to set.
     * @return the DaemonSet object itself.
     */
    public DaemonSet withReady(Integer ready) {
        this.ready = ready;
        return this;
    }

    /**
     * Get the upToDate property: Number of upto date pods.
     * 
     * @return the upToDate value.
     */
    public Integer upToDate() {
        return this.upToDate;
    }

    /**
     * Set the upToDate property: Number of upto date pods.
     * 
     * @param upToDate the upToDate value to set.
     * @return the DaemonSet object itself.
     */
    public DaemonSet withUpToDate(Integer upToDate) {
        this.upToDate = upToDate;
        return this;
    }

    /**
     * Get the available property: Number of available pods.
     * 
     * @return the available value.
     */
    public Integer available() {
        return this.available;
    }

    /**
     * Set the available property: Number of available pods.
     * 
     * @param available the available value to set.
     * @return the DaemonSet object itself.
     */
    public DaemonSet withAvailable(Integer available) {
        this.available = available;
        return this;
    }

    /**
     * Get the creationTime property: Creation Time of daemonSet.
     * 
     * @return the creationTime value.
     */
    public OffsetDateTime creationTime() {
        return this.creationTime;
    }

    /**
     * Set the creationTime property: Creation Time of daemonSet.
     * 
     * @param creationTime the creationTime value to set.
     * @return the DaemonSet object itself.
     */
    public DaemonSet withCreationTime(OffsetDateTime creationTime) {
        this.creationTime = creationTime;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
