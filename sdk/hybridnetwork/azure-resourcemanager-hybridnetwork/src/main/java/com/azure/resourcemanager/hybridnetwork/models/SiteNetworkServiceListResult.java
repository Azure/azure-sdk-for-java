// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.hybridnetwork.fluent.models.SiteNetworkServiceInner;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Response for site network services API service call.
 */
@Fluent
public final class SiteNetworkServiceListResult {
    /*
     * A list of site network services in a resource group.
     */
    @JsonProperty(value = "value")
    private List<SiteNetworkServiceInner> value;

    /*
     * The URL to get the next set of results.
     */
    @JsonProperty(value = "nextLink", access = JsonProperty.Access.WRITE_ONLY)
    private String nextLink;

    /**
     * Creates an instance of SiteNetworkServiceListResult class.
     */
    public SiteNetworkServiceListResult() {
    }

    /**
     * Get the value property: A list of site network services in a resource group.
     * 
     * @return the value value.
     */
    public List<SiteNetworkServiceInner> value() {
        return this.value;
    }

    /**
     * Set the value property: A list of site network services in a resource group.
     * 
     * @param value the value value to set.
     * @return the SiteNetworkServiceListResult object itself.
     */
    public SiteNetworkServiceListResult withValue(List<SiteNetworkServiceInner> value) {
        this.value = value;
        return this;
    }

    /**
     * Get the nextLink property: The URL to get the next set of results.
     * 
     * @return the nextLink value.
     */
    public String nextLink() {
        return this.nextLink;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (value() != null) {
            value().forEach(e -> e.validate());
        }
    }
}
