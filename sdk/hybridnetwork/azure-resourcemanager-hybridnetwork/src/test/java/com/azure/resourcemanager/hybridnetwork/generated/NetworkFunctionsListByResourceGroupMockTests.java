// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.hybridnetwork.HybridNetworkManager;
import com.azure.resourcemanager.hybridnetwork.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.hybridnetwork.models.NetworkFunction;
import com.azure.resourcemanager.hybridnetwork.models.NfviType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class NetworkFunctionsListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"configurationType\":\"NetworkFunctionPropertiesFormat\",\"provisioningState\":\"Succeeded\",\"publisherName\":\"idvmfqhppubo\",\"publisherScope\":\"Private\",\"networkFunctionDefinitionGroupName\":\"dfgkmtdh\",\"networkFunctionDefinitionVersion\":\"ngb\",\"networkFunctionDefinitionOfferingLocation\":\"juahokqto\",\"networkFunctionDefinitionVersionResourceReference\":{\"idType\":\"DeploymentResourceIdReference\"},\"nfviType\":\"AzureOperatorNexus\",\"nfviId\":\"ofshfphwpnulaiyw\",\"allowSoftwareUpdate\":false,\"roleOverrideValues\":[\"hs\",\"wkojpllndnpd\"]},\"etag\":\"pqafgfugsnnfhy\",\"identity\":{\"principalId\":\"9beb550d-3710-4f2e-ad1d-4c1b25153ead\",\"tenantId\":\"29510671-1960-4f30-b1ce-44516471a633\",\"type\":\"SystemAssigned,UserAssigned\",\"userAssignedIdentities\":{\"ctfjgtixr\":{\"principalId\":\"6a4b844e-823d-4d9b-b9a6-f962f6b3eff8\",\"clientId\":\"9be305d1-50cb-4764-8813-332ab3dadc40\"}}},\"location\":\"zuyt\",\"tags\":{\"bauiropi\":\"lmuowo\",\"n\":\"nszonwpngaj\"},\"id\":\"ixjawrtm\",\"name\":\"fjmyccxlzhco\",\"type\":\"ovne\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HybridNetworkManager manager = HybridNetworkManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<NetworkFunction> response
            = manager.networkFunctions().listByResourceGroup("hsycxhxzgaz", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("zuyt", response.iterator().next().location());
        Assertions.assertEquals("lmuowo", response.iterator().next().tags().get("bauiropi"));
        Assertions.assertEquals(NfviType.AZURE_OPERATOR_NEXUS, response.iterator().next().properties().nfviType());
        Assertions.assertEquals("ofshfphwpnulaiyw", response.iterator().next().properties().nfviId());
        Assertions.assertEquals(false, response.iterator().next().properties().allowSoftwareUpdate());
        Assertions.assertEquals("hs", response.iterator().next().properties().roleOverrideValues().get(0));
        Assertions.assertEquals("pqafgfugsnnfhy", response.iterator().next().etag());
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED,
            response.iterator().next().identity().type());
    }
}
