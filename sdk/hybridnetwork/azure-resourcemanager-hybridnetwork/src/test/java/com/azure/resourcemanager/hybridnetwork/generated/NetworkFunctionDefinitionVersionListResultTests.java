// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridnetwork.fluent.models.NetworkFunctionDefinitionVersionInner;
import com.azure.resourcemanager.hybridnetwork.models.NetworkFunctionDefinitionVersionListResult;
import com.azure.resourcemanager.hybridnetwork.models.NetworkFunctionDefinitionVersionPropertiesFormat;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class NetworkFunctionDefinitionVersionListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkFunctionDefinitionVersionListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"networkFunctionType\":\"NetworkFunctionDefinitionVersionPropertiesFormat\",\"provisioningState\":\"Succeeded\",\"versionState\":\"ValidationFailed\",\"description\":\"oegrpkhjwn\",\"deployParameters\":\"qsluicp\"},\"location\":\"gk\",\"tags\":{\"xmodf\":\"vmbmp\",\"rfouyftaakcpw\":\"uefywsbpfvmwy\",\"nubexk\":\"yzvqt\",\"quxvypomgkop\":\"zksmondj\"},\"id\":\"whojvp\",\"name\":\"jqg\",\"type\":\"ysmocmbqfqvmkcxo\"},{\"properties\":{\"networkFunctionType\":\"NetworkFunctionDefinitionVersionPropertiesFormat\",\"provisioningState\":\"Deleted\",\"versionState\":\"Deprecated\",\"description\":\"xprglyatddc\",\"deployParameters\":\"bcuejrjxgci\"},\"location\":\"brh\",\"tags\":{\"ibahwflus\":\"sdqrhzoymibmrq\",\"piexpbtgiw\":\"dtmhrkwofyyvoqa\",\"nwashrtd\":\"wo\",\"ulpiuj\":\"kcnqxwbpo\"},\"id\":\"aasipqi\",\"name\":\"obyu\",\"type\":\"erpqlpqwcciuqg\"},{\"properties\":{\"networkFunctionType\":\"NetworkFunctionDefinitionVersionPropertiesFormat\",\"provisioningState\":\"Accepted\",\"versionState\":\"Deprecated\",\"description\":\"vfbtkuwh\",\"deployParameters\":\"hykojoxafnndlpic\"},\"location\":\"o\",\"tags\":{\"vvqfovljxyws\":\"cdyhbpkkpwdreqn\",\"yrs\":\"w\"},\"id\":\"dsytgadgvr\",\"name\":\"ea\",\"type\":\"neqn\"},{\"properties\":{\"networkFunctionType\":\"NetworkFunctionDefinitionVersionPropertiesFormat\",\"provisioningState\":\"Accepted\",\"versionState\":\"Unknown\",\"description\":\"uu\",\"deployParameters\":\"fqka\"},\"location\":\"wiipfpub\",\"tags\":{\"sgplsakn\":\"wwiftohqkvpuv\",\"synljphuopxodl\":\"n\"},\"id\":\"iyntorzihle\",\"name\":\"sjswsrms\",\"type\":\"yzrpzbchckqqzq\"}],\"nextLink\":\"xiy\"}")
            .toObject(NetworkFunctionDefinitionVersionListResult.class);
        Assertions.assertEquals("gk", model.value().get(0).location());
        Assertions.assertEquals("vmbmp", model.value().get(0).tags().get("xmodf"));
        Assertions.assertEquals("oegrpkhjwn", model.value().get(0).properties().description());
        Assertions.assertEquals("qsluicp", model.value().get(0).properties().deployParameters());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkFunctionDefinitionVersionListResult model
            = new NetworkFunctionDefinitionVersionListResult().withValue(Arrays.asList(
                new NetworkFunctionDefinitionVersionInner().withLocation("gk")
                    .withTags(mapOf("xmodf", "vmbmp", "rfouyftaakcpw", "uefywsbpfvmwy", "nubexk", "yzvqt",
                        "quxvypomgkop", "zksmondj"))
                    .withProperties(new NetworkFunctionDefinitionVersionPropertiesFormat().withDescription("oegrpkhjwn")
                        .withDeployParameters("qsluicp")),
                new NetworkFunctionDefinitionVersionInner().withLocation("brh")
                    .withTags(mapOf("ibahwflus", "sdqrhzoymibmrq", "piexpbtgiw", "dtmhrkwofyyvoqa", "nwashrtd", "wo",
                        "ulpiuj", "kcnqxwbpo"))
                    .withProperties(new NetworkFunctionDefinitionVersionPropertiesFormat()
                        .withDescription("xprglyatddc").withDeployParameters("bcuejrjxgci")),
                new NetworkFunctionDefinitionVersionInner().withLocation("o")
                    .withTags(mapOf("vvqfovljxyws", "cdyhbpkkpwdreqn", "yrs", "w"))
                    .withProperties(new NetworkFunctionDefinitionVersionPropertiesFormat().withDescription("vfbtkuwh")
                        .withDeployParameters("hykojoxafnndlpic")),
                new NetworkFunctionDefinitionVersionInner().withLocation("wiipfpub")
                    .withTags(mapOf("sgplsakn", "wwiftohqkvpuv", "synljphuopxodl", "n"))
                    .withProperties(new NetworkFunctionDefinitionVersionPropertiesFormat().withDescription("uu")
                        .withDeployParameters("fqka"))));
        model = BinaryData.fromObject(model).toObject(NetworkFunctionDefinitionVersionListResult.class);
        Assertions.assertEquals("gk", model.value().get(0).location());
        Assertions.assertEquals("vmbmp", model.value().get(0).tags().get("xmodf"));
        Assertions.assertEquals("oegrpkhjwn", model.value().get(0).properties().description());
        Assertions.assertEquals("qsluicp", model.value().get(0).properties().deployParameters());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
