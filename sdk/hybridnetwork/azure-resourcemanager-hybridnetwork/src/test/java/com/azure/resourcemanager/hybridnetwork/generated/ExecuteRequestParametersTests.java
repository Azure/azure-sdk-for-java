// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridnetwork.models.ExecuteRequestParameters;
import com.azure.resourcemanager.hybridnetwork.models.HttpMethod;
import com.azure.resourcemanager.hybridnetwork.models.RequestMetadata;
import org.junit.jupiter.api.Assertions;

public final class ExecuteRequestParametersTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ExecuteRequestParameters model = BinaryData.fromString(
            "{\"serviceEndpoint\":\"ishc\",\"requestMetadata\":{\"relativePath\":\"khaj\",\"httpMethod\":\"Delete\",\"serializedBody\":\"yeamdphagalpb\",\"apiVersion\":\"wgipwhono\"}}")
            .toObject(ExecuteRequestParameters.class);
        Assertions.assertEquals("ishc", model.serviceEndpoint());
        Assertions.assertEquals("khaj", model.requestMetadata().relativePath());
        Assertions.assertEquals(HttpMethod.DELETE, model.requestMetadata().httpMethod());
        Assertions.assertEquals("yeamdphagalpb", model.requestMetadata().serializedBody());
        Assertions.assertEquals("wgipwhono", model.requestMetadata().apiVersion());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ExecuteRequestParameters model = new ExecuteRequestParameters().withServiceEndpoint("ishc")
            .withRequestMetadata(new RequestMetadata().withRelativePath("khaj").withHttpMethod(HttpMethod.DELETE)
                .withSerializedBody("yeamdphagalpb").withApiVersion("wgipwhono"));
        model = BinaryData.fromObject(model).toObject(ExecuteRequestParameters.class);
        Assertions.assertEquals("ishc", model.serviceEndpoint());
        Assertions.assertEquals("khaj", model.requestMetadata().relativePath());
        Assertions.assertEquals(HttpMethod.DELETE, model.requestMetadata().httpMethod());
        Assertions.assertEquals("yeamdphagalpb", model.requestMetadata().serializedBody());
        Assertions.assertEquals("wgipwhono", model.requestMetadata().apiVersion());
    }
}
