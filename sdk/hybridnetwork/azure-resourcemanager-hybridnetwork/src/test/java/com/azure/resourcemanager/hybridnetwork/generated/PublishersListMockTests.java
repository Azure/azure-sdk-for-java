// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.hybridnetwork.HybridNetworkManager;
import com.azure.resourcemanager.hybridnetwork.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.hybridnetwork.models.Publisher;
import com.azure.resourcemanager.hybridnetwork.models.PublisherScope;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PublishersListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Failed\",\"scope\":\"Private\"},\"identity\":{\"principalId\":\"7cede3ed-d9ca-4f89-a803-bea216a3f17a\",\"tenantId\":\"f240d480-b494-4b56-bb46-1a428abf6e0e\",\"type\":\"None\",\"userAssignedIdentities\":{\"ulpzealb\":{\"principalId\":\"c426be31-9d4a-4af1-ad27-558cae12b393\",\"clientId\":\"ca0c7912-e86d-4678-9c7d-ea77be4f66b8\"}}},\"location\":\"kyojwyvfk\",\"tags\":{\"sgxjc\":\"suah\"},\"id\":\"mzrrscubiwsdrn\",\"name\":\"xqw\",\"type\":\"diffjxcjrmmuab\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HybridNetworkManager manager = HybridNetworkManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Publisher> response = manager.publishers().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("kyojwyvfk", response.iterator().next().location());
        Assertions.assertEquals("suah", response.iterator().next().tags().get("sgxjc"));
        Assertions.assertEquals(PublisherScope.PRIVATE, response.iterator().next().properties().scope());
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, response.iterator().next().identity().type());
    }
}
