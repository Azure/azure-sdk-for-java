// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridnetwork.fluent.models.ArtifactStoreInner;
import com.azure.resourcemanager.hybridnetwork.models.ArtifactReplicationStrategy;
import com.azure.resourcemanager.hybridnetwork.models.ArtifactStorePropertiesFormat;
import com.azure.resourcemanager.hybridnetwork.models.ArtifactStorePropertiesFormatManagedResourceGroupConfiguration;
import com.azure.resourcemanager.hybridnetwork.models.ArtifactStoreType;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ArtifactStoreInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ArtifactStoreInner model = BinaryData.fromString(
            "{\"properties\":{\"provisioningState\":\"Accepted\",\"storeType\":\"AzureContainerRegistry\",\"replicationStrategy\":\"Unknown\",\"managedResourceGroupConfiguration\":{\"name\":\"elfk\",\"location\":\"plcrpwjxeznoig\"},\"storageResourceId\":\"njwmwkpnbsazejj\"},\"location\":\"kagfhsxtt\",\"tags\":{\"xdtnkdmkqjjlw\":\"zxnfaaz\",\"aysjkixqtnqttez\":\"envrkpyouaibrebq\",\"akpjpqqmtedlt\":\"wfff\",\"auyqncygupkv\":\"mjihyeozphv\"},\"id\":\"p\",\"name\":\"dscwxqupevzhf\",\"type\":\"totxhojujb\"}")
            .toObject(ArtifactStoreInner.class);
        Assertions.assertEquals("kagfhsxtt", model.location());
        Assertions.assertEquals("zxnfaaz", model.tags().get("xdtnkdmkqjjlw"));
        Assertions.assertEquals(ArtifactStoreType.AZURE_CONTAINER_REGISTRY, model.properties().storeType());
        Assertions.assertEquals(ArtifactReplicationStrategy.UNKNOWN, model.properties().replicationStrategy());
        Assertions.assertEquals("elfk", model.properties().managedResourceGroupConfiguration().name());
        Assertions.assertEquals("plcrpwjxeznoig", model.properties().managedResourceGroupConfiguration().location());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ArtifactStoreInner model = new ArtifactStoreInner().withLocation("kagfhsxtt")
            .withTags(mapOf("xdtnkdmkqjjlw", "zxnfaaz", "aysjkixqtnqttez", "envrkpyouaibrebq", "akpjpqqmtedlt", "wfff",
                "auyqncygupkv", "mjihyeozphv"))
            .withProperties(
                new ArtifactStorePropertiesFormat().withStoreType(ArtifactStoreType.AZURE_CONTAINER_REGISTRY)
                    .withReplicationStrategy(ArtifactReplicationStrategy.UNKNOWN).withManagedResourceGroupConfiguration(
                        new ArtifactStorePropertiesFormatManagedResourceGroupConfiguration().withName("elfk")
                            .withLocation("plcrpwjxeznoig")));
        model = BinaryData.fromObject(model).toObject(ArtifactStoreInner.class);
        Assertions.assertEquals("kagfhsxtt", model.location());
        Assertions.assertEquals("zxnfaaz", model.tags().get("xdtnkdmkqjjlw"));
        Assertions.assertEquals(ArtifactStoreType.AZURE_CONTAINER_REGISTRY, model.properties().storeType());
        Assertions.assertEquals(ArtifactReplicationStrategy.UNKNOWN, model.properties().replicationStrategy());
        Assertions.assertEquals("elfk", model.properties().managedResourceGroupConfiguration().name());
        Assertions.assertEquals("plcrpwjxeznoig", model.properties().managedResourceGroupConfiguration().location());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
