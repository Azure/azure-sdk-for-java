// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridnetwork.fluent.models.ConfigurationGroupValueInner;
import com.azure.resourcemanager.hybridnetwork.models.ConfigurationGroupValuePropertiesFormat;
import com.azure.resourcemanager.hybridnetwork.models.DeploymentResourceIdReference;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ConfigurationGroupValueInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ConfigurationGroupValueInner model = BinaryData.fromString(
            "{\"properties\":{\"configurationType\":\"ConfigurationGroupValuePropertiesFormat\",\"provisioningState\":\"Canceled\",\"publisherName\":\"jbp\",\"publisherScope\":\"Private\",\"configurationGroupSchemaName\":\"inzgvfcj\",\"configurationGroupSchemaOfferingLocation\":\"zoxxjtf\",\"configurationGroupSchemaResourceReference\":{\"idType\":\"DeploymentResourceIdReference\"}},\"location\":\"uwfzitonpe\",\"tags\":{\"ypininm\":\"jkjlxofpdvhpfx\",\"po\":\"yhuybbkpod\",\"ognarxzxtheotus\":\"ginuvamih\"},\"id\":\"vyevcciqi\",\"name\":\"nhungbw\",\"type\":\"zrnf\"}")
            .toObject(ConfigurationGroupValueInner.class);
        Assertions.assertEquals("uwfzitonpe", model.location());
        Assertions.assertEquals("jkjlxofpdvhpfx", model.tags().get("ypininm"));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ConfigurationGroupValueInner model = new ConfigurationGroupValueInner().withLocation("uwfzitonpe")
            .withTags(mapOf("ypininm", "jkjlxofpdvhpfx", "po", "yhuybbkpod", "ognarxzxtheotus", "ginuvamih"))
            .withProperties(new ConfigurationGroupValuePropertiesFormat()
                .withConfigurationGroupSchemaResourceReference(new DeploymentResourceIdReference()));
        model = BinaryData.fromObject(model).toObject(ConfigurationGroupValueInner.class);
        Assertions.assertEquals("uwfzitonpe", model.location());
        Assertions.assertEquals("jkjlxofpdvhpfx", model.tags().get("ypininm"));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
