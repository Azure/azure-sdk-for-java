// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.hybridnetwork.HybridNetworkManager;
import com.azure.resourcemanager.hybridnetwork.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.hybridnetwork.models.NetworkFunction;
import com.azure.resourcemanager.hybridnetwork.models.NfviType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class NetworkFunctionsGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"configurationType\":\"NetworkFunctionPropertiesFormat\",\"provisioningState\":\"Deleting\",\"publisherName\":\"ov\",\"publisherScope\":\"Unknown\",\"networkFunctionDefinitionGroupName\":\"kqmhhaowjr\",\"networkFunctionDefinitionVersion\":\"vuporqzdfuydzv\",\"networkFunctionDefinitionOfferingLocation\":\"vxcnqmxqps\",\"networkFunctionDefinitionVersionResourceReference\":{\"idType\":\"DeploymentResourceIdReference\"},\"nfviType\":\"AzureArcKubernetes\",\"nfviId\":\"khlg\",\"allowSoftwareUpdate\":false,\"roleOverrideValues\":[\"mzqkz\"]},\"etag\":\"uwiwtglxxhljfpg\",\"identity\":{\"principalId\":\"12114fd7-1539-4afa-a8be-275949b928a1\",\"tenantId\":\"36d041aa-5ab9-46b4-a654-b2d12161939a\",\"type\":\"UserAssigned\",\"userAssignedIdentities\":{\"gmqgjs\":{\"principalId\":\"62295b9b-dda4-4933-baaf-935946c69180\",\"clientId\":\"e1626f47-1a32-4195-b83e-4ff2feec62c0\"},\"qcbfrmbodths\":{\"principalId\":\"6191a679-355c-4396-a0e2-03ca967aa724\",\"clientId\":\"56191fe6-1b22-4fee-850c-3501243153e8\"},\"vriibakclacjfr\":{\"principalId\":\"0afe2cef-2680-4c98-93aa-ebb23e3ee1e4\",\"clientId\":\"751db222-2b32-4ce9-b93f-cf5003d0f074\"},\"usx\":{\"principalId\":\"1808fc2b-5954-4d05-817f-8c4b57fb6239\",\"clientId\":\"652c0da3-ba2f-4e17-a24b-898e32b494e0\"}}},\"location\":\"zlwvsgmwohqfz\",\"tags\":{\"tekovmri\":\"uxmmkjsvthnwp\"},\"id\":\"iattgplu\",\"name\":\"fotang\",\"type\":\"fhnykzcugs\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HybridNetworkManager manager = HybridNetworkManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        NetworkFunction response = manager.networkFunctions()
            .getByResourceGroupWithResponse("j", "nidibgqjxg", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("zlwvsgmwohqfz", response.location());
        Assertions.assertEquals("uxmmkjsvthnwp", response.tags().get("tekovmri"));
        Assertions.assertEquals(NfviType.AZURE_ARC_KUBERNETES, response.properties().nfviType());
        Assertions.assertEquals("khlg", response.properties().nfviId());
        Assertions.assertEquals(false, response.properties().allowSoftwareUpdate());
        Assertions.assertEquals("mzqkz", response.properties().roleOverrideValues().get(0));
        Assertions.assertEquals("uwiwtglxxhljfpg", response.etag());
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, response.identity().type());
    }
}
