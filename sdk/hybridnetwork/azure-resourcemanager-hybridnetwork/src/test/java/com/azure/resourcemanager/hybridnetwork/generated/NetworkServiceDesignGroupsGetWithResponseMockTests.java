// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.hybridnetwork.HybridNetworkManager;
import com.azure.resourcemanager.hybridnetwork.models.NetworkServiceDesignGroup;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class NetworkServiceDesignGroupsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Unknown\",\"description\":\"qwjksghudgz\"},\"location\":\"ogjggsvoujkxibda\",\"tags\":{\"y\":\"kmdyomkxfbvfbh\",\"gddeimaw\":\"rhpw\"},\"id\":\"o\",\"name\":\"gkkumuikjcj\",\"type\":\"aztb\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HybridNetworkManager manager = HybridNetworkManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        NetworkServiceDesignGroup response = manager.networkServiceDesignGroups()
            .getWithResponse("tljqobbpih", "hcecybmrqbr", "bbmpxdlvykfre", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("ogjggsvoujkxibda", response.location());
        Assertions.assertEquals("kmdyomkxfbvfbh", response.tags().get("y"));
        Assertions.assertEquals("qwjksghudgz", response.properties().description());
    }
}
