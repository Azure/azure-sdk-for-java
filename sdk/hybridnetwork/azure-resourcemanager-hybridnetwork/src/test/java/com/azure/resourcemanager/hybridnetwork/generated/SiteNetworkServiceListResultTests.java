// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridnetwork.fluent.models.SiteNetworkServiceInner;
import com.azure.resourcemanager.hybridnetwork.models.DeploymentResourceIdReference;
import com.azure.resourcemanager.hybridnetwork.models.ManagedResourceGroupConfiguration;
import com.azure.resourcemanager.hybridnetwork.models.ManagedServiceIdentity;
import com.azure.resourcemanager.hybridnetwork.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.hybridnetwork.models.ReferencedResource;
import com.azure.resourcemanager.hybridnetwork.models.SiteNetworkServiceListResult;
import com.azure.resourcemanager.hybridnetwork.models.SiteNetworkServicePropertiesFormat;
import com.azure.resourcemanager.hybridnetwork.models.Sku;
import com.azure.resourcemanager.hybridnetwork.models.SkuName;
import com.azure.resourcemanager.hybridnetwork.models.UserAssignedIdentity;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class SiteNetworkServiceListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SiteNetworkServiceListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"provisioningState\":\"Unknown\",\"managedResourceGroupConfiguration\":{\"name\":\"wzqa\",\"location\":\"lgzurig\"},\"siteReference\":{\"id\":\"cx\"},\"publisherName\":\"t\",\"publisherScope\":\"Unknown\",\"networkServiceDesignGroupName\":\"pvz\",\"networkServiceDesignVersionName\":\"qtmldgxo\",\"networkServiceDesignVersionOfferingLocation\":\"irclnpk\",\"networkServiceDesignVersionResourceReference\":{\"idType\":\"DeploymentResourceIdReference\"},\"desiredStateConfigurationGroupValueReferences\":{\"vkjlmxhom\":{\"id\":\"riykhyawfvjlbox\"},\"uzzptjazysdz\":{\"id\":\"nhdwdigumbnra\"}},\"lastStateNetworkServiceDesignVersionName\":\"zwwva\",\"lastStateConfigurationGroupValueReferences\":{\"onkp\":{\"id\":\"vv\"},\"auy\":{\"id\":\"qyikvy\"},\"ijf\":{\"id\":\"luwmncst\"}}},\"identity\":{\"principalId\":\"792395bf-283c-4bcf-b77b-5c9dcf8e8d9e\",\"tenantId\":\"486cadd5-d18c-41e9-975f-1e94ad9016e9\",\"type\":\"None\",\"userAssignedIdentities\":{\"gsgbdhuzq\":{\"principalId\":\"96edbb6e-597d-403e-bab9-b32c650a3a9b\",\"clientId\":\"098f6630-4597-4e58-9901-e9dc6871d39c\"},\"dgkynscliqhzvhxn\":{\"principalId\":\"51e1ed28-2a34-4fad-878c-8365ccbe5c54\",\"clientId\":\"777fe985-9f5f-40bc-b153-45bd88dce2bf\"}}},\"sku\":{\"name\":\"Basic\",\"tier\":\"Standard\"},\"location\":\"bo\",\"tags\":{\"vqagtltdhlf\":\"nvdxzxhihfrbbc\",\"vgtrdcnifmzzs\":\"qojpy\"},\"id\":\"ymbrnysuxmpraf\",\"name\":\"g\",\"type\":\"khocxvdfffwaf\"},{\"properties\":{\"provisioningState\":\"Failed\",\"managedResourceGroupConfiguration\":{\"name\":\"spave\",\"location\":\"r\"},\"siteReference\":{\"id\":\"unzo\"},\"publisherName\":\"dhcxgkmoy\",\"publisherScope\":\"Unknown\",\"networkServiceDesignGroupName\":\"uibhmfdnbzydvfv\",\"networkServiceDesignVersionName\":\"jnaeois\",\"networkServiceDesignVersionOfferingLocation\":\"hmgorffukiscv\",\"networkServiceDesignVersionResourceReference\":{\"idType\":\"DeploymentResourceIdReference\"},\"desiredStateConfigurationGroupValueReferences\":{\"xvxilcbtg\":{\"id\":\"plef\"},\"zqlqhyc\":{\"id\":\"nzeyqxtjj\"},\"beesmieknlra\":{\"id\":\"odggx\"}},\"lastStateNetworkServiceDesignVersionName\":\"aawiuagydwqfb\",\"lastStateConfigurationGroupValueReferences\":{\"fnzjvusfzldm\":{\"id\":\"fgiagtcojocqwo\"}}},\"identity\":{\"principalId\":\"31a9718f-5726-4b36-bb70-ea401c557289\",\"tenantId\":\"e6fe6811-55da-48be-bd01-4f440fb89d7e\",\"type\":\"SystemAssigned\",\"userAssignedIdentities\":{\"tkad\":{\"principalId\":\"3cb628aa-157f-40df-9ad9-c3c56a0521f1\",\"clientId\":\"f748b1ae-1769-4678-bf95-a4f10365267c\"},\"own\":{\"principalId\":\"5bead87a-a0a7-48e0-ba68-190327adf53e\",\"clientId\":\"cd4c50b0-e65d-4f8f-b259-a0c82de77313\"}}},\"sku\":{\"name\":\"Standard\",\"tier\":\"Basic\"},\"location\":\"grjqctojcmi\",\"tags\":{\"jy\":\"ieypef\",\"u\":\"dh\",\"khihihlhzds\":\"lcplc\",\"mvec\":\"tzbsrgnowcjhf\"},\"id\":\"ctxmwoteyowcluq\",\"name\":\"vekqvgqo\",\"type\":\"wifzmp\"}],\"nextLink\":\"yivqikfxcvhrfsp\"}")
            .toObject(SiteNetworkServiceListResult.class);
        Assertions.assertEquals("bo", model.value().get(0).location());
        Assertions.assertEquals("nvdxzxhihfrbbc", model.value().get(0).tags().get("vqagtltdhlf"));
        Assertions.assertEquals("wzqa", model.value().get(0).properties().managedResourceGroupConfiguration().name());
        Assertions.assertEquals("lgzurig",
            model.value().get(0).properties().managedResourceGroupConfiguration().location());
        Assertions.assertEquals("cx", model.value().get(0).properties().siteReference().id());
        Assertions.assertEquals("riykhyawfvjlbox",
            model.value().get(0).properties().desiredStateConfigurationGroupValueReferences().get("vkjlmxhom").id());
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.value().get(0).identity().type());
        Assertions.assertEquals(SkuName.BASIC, model.value().get(0).sku().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SiteNetworkServiceListResult model
            = new SiteNetworkServiceListResult()
                .withValue(
                    Arrays
                        .asList(
                            new SiteNetworkServiceInner().withLocation("bo")
                                .withTags(mapOf("vqagtltdhlf", "nvdxzxhihfrbbc", "vgtrdcnifmzzs", "qojpy"))
                                .withProperties(new SiteNetworkServicePropertiesFormat()
                                    .withManagedResourceGroupConfiguration(new ManagedResourceGroupConfiguration()
                                        .withName("wzqa").withLocation("lgzurig"))
                                    .withSiteReference(new ReferencedResource().withId("cx"))
                                    .withNetworkServiceDesignVersionResourceReference(
                                        new DeploymentResourceIdReference())
                                    .withDesiredStateConfigurationGroupValueReferences(
                                        mapOf("vkjlmxhom", new ReferencedResource().withId("riykhyawfvjlbox"),
                                            "uzzptjazysdz", new ReferencedResource().withId("nhdwdigumbnra"))))
                                .withIdentity(new ManagedServiceIdentity()
                                    .withType(ManagedServiceIdentityType.NONE)
                                    .withUserAssignedIdentities(
                                        mapOf(
                                            "gsgbdhuzq", new UserAssignedIdentity(), "dgkynscliqhzvhxn",
                                            new UserAssignedIdentity())))
                                .withSku(new Sku().withName(SkuName.BASIC)),
                            new SiteNetworkServiceInner()
                                .withLocation("grjqctojcmi")
                                .withTags(
                                    mapOf("jy", "ieypef", "u", "dh", "khihihlhzds", "lcplc", "mvec", "tzbsrgnowcjhf"))
                                .withProperties(new SiteNetworkServicePropertiesFormat()
                                    .withManagedResourceGroupConfiguration(
                                        new ManagedResourceGroupConfiguration().withName("spave").withLocation("r"))
                                    .withSiteReference(new ReferencedResource().withId("unzo"))
                                    .withNetworkServiceDesignVersionResourceReference(
                                        new DeploymentResourceIdReference())
                                    .withDesiredStateConfigurationGroupValueReferences(
                                        mapOf("xvxilcbtg", new ReferencedResource().withId("plef"), "zqlqhyc",
                                            new ReferencedResource().withId("nzeyqxtjj"), "beesmieknlra",
                                            new ReferencedResource().withId("odggx"))))
                                .withIdentity(
                                    new ManagedServiceIdentity().withType(ManagedServiceIdentityType.SYSTEM_ASSIGNED)
                                        .withUserAssignedIdentities(mapOf("tkad", new UserAssignedIdentity(), "own",
                                            new UserAssignedIdentity())))
                                .withSku(new Sku().withName(SkuName.STANDARD))));
        model = BinaryData.fromObject(model).toObject(SiteNetworkServiceListResult.class);
        Assertions.assertEquals("bo", model.value().get(0).location());
        Assertions.assertEquals("nvdxzxhihfrbbc", model.value().get(0).tags().get("vqagtltdhlf"));
        Assertions.assertEquals("wzqa", model.value().get(0).properties().managedResourceGroupConfiguration().name());
        Assertions.assertEquals("lgzurig",
            model.value().get(0).properties().managedResourceGroupConfiguration().location());
        Assertions.assertEquals("cx", model.value().get(0).properties().siteReference().id());
        Assertions.assertEquals("riykhyawfvjlbox",
            model.value().get(0).properties().desiredStateConfigurationGroupValueReferences().get("vkjlmxhom").id());
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.value().get(0).identity().type());
        Assertions.assertEquals(SkuName.BASIC, model.value().get(0).sku().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
