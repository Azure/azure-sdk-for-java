// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridnetwork.models.DaemonSet;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class DaemonSetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DaemonSet model = BinaryData.fromString(
            "{\"name\":\"umaq\",\"namespace\":\"bgycduiertgccym\",\"desired\":50940581,\"current\":76010479,\"ready\":10940345,\"upToDate\":245335843,\"available\":1979529158,\"creationTime\":\"2021-08-20T01:14:48Z\"}")
            .toObject(DaemonSet.class);
        Assertions.assertEquals("umaq", model.name());
        Assertions.assertEquals("bgycduiertgccym", model.namespace());
        Assertions.assertEquals(50940581, model.desired());
        Assertions.assertEquals(76010479, model.current());
        Assertions.assertEquals(10940345, model.ready());
        Assertions.assertEquals(245335843, model.upToDate());
        Assertions.assertEquals(1979529158, model.available());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-20T01:14:48Z"), model.creationTime());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DaemonSet model = new DaemonSet().withName("umaq").withNamespace("bgycduiertgccym").withDesired(50940581)
            .withCurrent(76010479).withReady(10940345).withUpToDate(245335843).withAvailable(1979529158)
            .withCreationTime(OffsetDateTime.parse("2021-08-20T01:14:48Z"));
        model = BinaryData.fromObject(model).toObject(DaemonSet.class);
        Assertions.assertEquals("umaq", model.name());
        Assertions.assertEquals("bgycduiertgccym", model.namespace());
        Assertions.assertEquals(50940581, model.desired());
        Assertions.assertEquals(76010479, model.current());
        Assertions.assertEquals(10940345, model.ready());
        Assertions.assertEquals(245335843, model.upToDate());
        Assertions.assertEquals(1979529158, model.available());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-20T01:14:48Z"), model.creationTime());
    }
}
