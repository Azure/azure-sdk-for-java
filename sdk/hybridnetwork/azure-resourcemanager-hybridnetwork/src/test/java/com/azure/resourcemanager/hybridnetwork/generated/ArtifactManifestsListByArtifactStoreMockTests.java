// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.hybridnetwork.HybridNetworkManager;
import com.azure.resourcemanager.hybridnetwork.models.ArtifactManifest;
import com.azure.resourcemanager.hybridnetwork.models.ArtifactType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ArtifactManifestsListByArtifactStoreMockTests {
    @Test
    public void testListByArtifactStore() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Failed\",\"artifactManifestState\":\"Unknown\",\"artifacts\":[{\"artifactName\":\"vjsaqwotm\",\"artifactType\":\"OCIArtifact\",\"artifactVersion\":\"colsrsxaptefhex\"},{\"artifactName\":\"jokjl\",\"artifactType\":\"ArmTemplate\",\"artifactVersion\":\"lqjbekpeek\"},{\"artifactName\":\"bksdqhjvyklxesl\",\"artifactType\":\"VhdImageFile\",\"artifactVersion\":\"stcpoqmavnwqjw\"},{\"artifactName\":\"knlejjjkxybwfd\",\"artifactType\":\"ImageFile\",\"artifactVersion\":\"ztensvkzykjtj\"}]},\"location\":\"sxfwushcdp\",\"tags\":{\"mgjfbpkuwxeoio\":\"nq\"},\"id\":\"fiz\",\"name\":\"av\",\"type\":\"jzwfb\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HybridNetworkManager manager = HybridNetworkManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<ArtifactManifest> response = manager.artifactManifests()
            .listByArtifactStore("wtbbaedorvvmqf", "oygbdgwumgxd", "dhp", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("sxfwushcdp", response.iterator().next().location());
        Assertions.assertEquals("nq", response.iterator().next().tags().get("mgjfbpkuwxeoio"));
        Assertions.assertEquals("vjsaqwotm", response.iterator().next().properties().artifacts().get(0).artifactName());
        Assertions.assertEquals(ArtifactType.OCIARTIFACT,
            response.iterator().next().properties().artifacts().get(0).artifactType());
        Assertions.assertEquals("colsrsxaptefhex",
            response.iterator().next().properties().artifacts().get(0).artifactVersion());
    }
}
