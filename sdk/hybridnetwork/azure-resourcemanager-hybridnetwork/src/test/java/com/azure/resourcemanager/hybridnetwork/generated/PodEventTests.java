// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridnetwork.models.PodEvent;
import com.azure.resourcemanager.hybridnetwork.models.PodEventType;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class PodEventTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PodEvent model = BinaryData.fromString(
            "{\"type\":\"Normal\",\"reason\":\"otftpvjzbexilz\",\"message\":\"fqqnvwpmqtaruo\",\"lastSeenTime\":\"2021-11-17T10:48:03Z\"}")
            .toObject(PodEvent.class);
        Assertions.assertEquals(PodEventType.NORMAL, model.type());
        Assertions.assertEquals("otftpvjzbexilz", model.reason());
        Assertions.assertEquals("fqqnvwpmqtaruo", model.message());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-17T10:48:03Z"), model.lastSeenTime());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PodEvent model = new PodEvent().withType(PodEventType.NORMAL).withReason("otftpvjzbexilz")
            .withMessage("fqqnvwpmqtaruo").withLastSeenTime(OffsetDateTime.parse("2021-11-17T10:48:03Z"));
        model = BinaryData.fromObject(model).toObject(PodEvent.class);
        Assertions.assertEquals(PodEventType.NORMAL, model.type());
        Assertions.assertEquals("otftpvjzbexilz", model.reason());
        Assertions.assertEquals("fqqnvwpmqtaruo", model.message());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-17T10:48:03Z"), model.lastSeenTime());
    }
}
