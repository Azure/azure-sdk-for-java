// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.hybridnetwork.HybridNetworkManager;
import com.azure.resourcemanager.hybridnetwork.models.Site;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SitesGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Deleted\",\"nfvis\":[{\"nfviType\":\"NfvIs\",\"name\":\"uatbwbqamteuliy\"}],\"siteNetworkServiceReferences\":[{\"id\":\"cvmwfauxxepmy\"},{\"id\":\"ormcqmic\"}]},\"location\":\"jqpkzfbo\",\"tags\":{\"nkwywzwofa\":\"mcsmyqwixvcp\",\"t\":\"ickduoiqta\",\"bcfhzagxnv\":\"vsknxrwzawnv\",\"zregzgyufutrwpw\":\"ycvdimw\"},\"id\":\"ryekzkd\",\"name\":\"meottawj\",\"type\":\"osxw\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HybridNetworkManager manager = HybridNetworkManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Site response = manager.sites()
            .getByResourceGroupWithResponse("yzjdnrqjbt", "jeaoqaqbz", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("jqpkzfbo", response.location());
        Assertions.assertEquals("mcsmyqwixvcp", response.tags().get("nkwywzwofa"));
        Assertions.assertEquals("uatbwbqamteuliy", response.properties().nfvis().get(0).name());
    }
}
