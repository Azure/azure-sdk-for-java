// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.hybridnetwork.HybridNetworkManager;
import com.azure.resourcemanager.hybridnetwork.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.hybridnetwork.models.NetworkFunction;
import com.azure.resourcemanager.hybridnetwork.models.NfviType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class NetworkFunctionsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"configurationType\":\"NetworkFunctionPropertiesFormat\",\"provisioningState\":\"Converging\",\"publisherName\":\"mzqwmvtxnjmxmcu\",\"publisherScope\":\"Unknown\",\"networkFunctionDefinitionGroupName\":\"cvclxynpdk\",\"networkFunctionDefinitionVersion\":\"fabuiyjibu\",\"networkFunctionDefinitionOfferingLocation\":\"hdugneiknpg\",\"networkFunctionDefinitionVersionResourceReference\":{\"idType\":\"DeploymentResourceIdReference\"},\"nfviType\":\"AzureCore\",\"nfviId\":\"uqh\",\"allowSoftwareUpdate\":false,\"roleOverrideValues\":[\"ipq\"]},\"etag\":\"edmurrxxge\",\"identity\":{\"principalId\":\"440dfc6c-25eb-42ce-aac1-ee8c853d2be0\",\"tenantId\":\"e5b915a4-31c6-45fe-a28b-e098beaab3a9\",\"type\":\"SystemAssigned,UserAssigned\",\"userAssignedIdentities\":{\"mqpzoyhlfbcgw\":{\"principalId\":\"dc390fbd-463f-4a9d-bd93-b9e38c8ac770\",\"clientId\":\"bf1c4d3a-832e-4c5d-a035-620dcf9b4166\"},\"oxoebqi\":{\"principalId\":\"038253fc-ed58-4be3-9d47-9f5a4acd14a9\",\"clientId\":\"cf315ec8-0406-46d7-925e-149368a8af4c\"}}},\"location\":\"ipnwj\",\"tags\":{\"jwpfilkm\":\"qlafcbahhpzpofoi\",\"dviauogp\":\"kholvd\",\"kyefchnmnahmnxhk\":\"uartvti\",\"ooxf\":\"jqirwrw\"},\"id\":\"i\",\"name\":\"hx\",\"type\":\"rsnewmozqvbubqma\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HybridNetworkManager manager = HybridNetworkManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<NetworkFunction> response = manager.networkFunctions().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("ipnwj", response.iterator().next().location());
        Assertions.assertEquals("qlafcbahhpzpofoi", response.iterator().next().tags().get("jwpfilkm"));
        Assertions.assertEquals(NfviType.AZURE_CORE, response.iterator().next().properties().nfviType());
        Assertions.assertEquals("uqh", response.iterator().next().properties().nfviId());
        Assertions.assertEquals(false, response.iterator().next().properties().allowSoftwareUpdate());
        Assertions.assertEquals("ipq", response.iterator().next().properties().roleOverrideValues().get(0));
        Assertions.assertEquals("edmurrxxge", response.iterator().next().etag());
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED,
            response.iterator().next().identity().type());
    }
}
