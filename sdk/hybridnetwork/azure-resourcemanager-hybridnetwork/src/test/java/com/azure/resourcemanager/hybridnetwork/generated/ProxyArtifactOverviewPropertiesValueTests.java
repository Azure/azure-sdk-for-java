// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridnetwork.models.ArtifactState;
import com.azure.resourcemanager.hybridnetwork.models.ArtifactType;
import com.azure.resourcemanager.hybridnetwork.models.ProxyArtifactOverviewPropertiesValue;
import org.junit.jupiter.api.Assertions;

public final class ProxyArtifactOverviewPropertiesValueTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ProxyArtifactOverviewPropertiesValue model = BinaryData
            .fromString(
                "{\"artifactType\":\"Unknown\",\"artifactVersion\":\"acoebj\",\"artifactState\":\"Deprecated\"}")
            .toObject(ProxyArtifactOverviewPropertiesValue.class);
        Assertions.assertEquals(ArtifactType.UNKNOWN, model.artifactType());
        Assertions.assertEquals("acoebj", model.artifactVersion());
        Assertions.assertEquals(ArtifactState.DEPRECATED, model.artifactState());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ProxyArtifactOverviewPropertiesValue model
            = new ProxyArtifactOverviewPropertiesValue().withArtifactType(ArtifactType.UNKNOWN)
                .withArtifactVersion("acoebj").withArtifactState(ArtifactState.DEPRECATED);
        model = BinaryData.fromObject(model).toObject(ProxyArtifactOverviewPropertiesValue.class);
        Assertions.assertEquals(ArtifactType.UNKNOWN, model.artifactType());
        Assertions.assertEquals("acoebj", model.artifactVersion());
        Assertions.assertEquals(ArtifactState.DEPRECATED, model.artifactState());
    }
}
