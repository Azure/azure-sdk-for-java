// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.hybridnetwork.HybridNetworkManager;
import com.azure.resourcemanager.hybridnetwork.models.ArtifactReplicationStrategy;
import com.azure.resourcemanager.hybridnetwork.models.ArtifactStore;
import com.azure.resourcemanager.hybridnetwork.models.ArtifactStoreType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ArtifactStoresListByPublisherMockTests {
    @Test
    public void testListByPublisher() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Converging\",\"storeType\":\"AzureStorageAccount\",\"replicationStrategy\":\"Unknown\",\"managedResourceGroupConfiguration\":{\"name\":\"txptlghw\",\"location\":\"omew\"},\"storageResourceId\":\"s\"},\"location\":\"iuh\",\"tags\":{\"vodrrslblxydkxr\":\"moaiancz\",\"hychocokuleh\":\"vvbxiwkgfbqljnq\",\"urkphyjdxravju\":\"rqlrqffawe\",\"bapxkiyfjjkb\":\"dbrxmrgc\"},\"id\":\"jbuscg\",\"name\":\"uusioycblev\",\"type\":\"mclujyxkyxlzgs\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HybridNetworkManager manager = HybridNetworkManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<ArtifactStore> response
            = manager.artifactStores().listByPublisher("xhqf", "qnvzoqgyipemch", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("iuh", response.iterator().next().location());
        Assertions.assertEquals("moaiancz", response.iterator().next().tags().get("vodrrslblxydkxr"));
        Assertions.assertEquals(ArtifactStoreType.AZURE_STORAGE_ACCOUNT,
            response.iterator().next().properties().storeType());
        Assertions.assertEquals(ArtifactReplicationStrategy.UNKNOWN,
            response.iterator().next().properties().replicationStrategy());
        Assertions.assertEquals("txptlghw",
            response.iterator().next().properties().managedResourceGroupConfiguration().name());
        Assertions.assertEquals("omew",
            response.iterator().next().properties().managedResourceGroupConfiguration().location());
    }
}
