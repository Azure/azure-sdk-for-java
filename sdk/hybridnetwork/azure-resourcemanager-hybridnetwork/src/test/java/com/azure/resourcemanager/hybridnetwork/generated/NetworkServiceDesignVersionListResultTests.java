// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridnetwork.fluent.models.NetworkServiceDesignVersionInner;
import com.azure.resourcemanager.hybridnetwork.models.DependsOnProfile;
import com.azure.resourcemanager.hybridnetwork.models.NetworkServiceDesignVersionListResult;
import com.azure.resourcemanager.hybridnetwork.models.NetworkServiceDesignVersionPropertiesFormat;
import com.azure.resourcemanager.hybridnetwork.models.NfviDetails;
import com.azure.resourcemanager.hybridnetwork.models.ReferencedResource;
import com.azure.resourcemanager.hybridnetwork.models.ResourceElementTemplate;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class NetworkServiceDesignVersionListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkServiceDesignVersionListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"provisioningState\":\"Unknown\",\"versionState\":\"Deprecated\",\"description\":\"waezkojvd\",\"configurationGroupSchemaReferences\":{\"oxciqopidoamcio\":{\"id\":\"oqouicybxarzgszu\"},\"oegokdwbwh\":{\"id\":\"khazxkhnzbonlwn\"},\"cmrvexzt\":{\"id\":\"z\"},\"gsfraoyzkoow\":{\"id\":\"t\"}},\"nfvisFromSite\":{\"bw\":{\"name\":\"guxawqaldsyuuxi\",\"type\":\"rqf\"},\"r\":{\"name\":\"nkbykutwpfhp\",\"type\":\"m\"},\"twvogvbbe\":{\"name\":\"dsnfdsdoakgtdl\",\"type\":\"kzevdlhewpusds\"},\"enuuzkopbm\":{\"name\":\"cngqqmoakufgmjz\",\"type\":\"rdgrtw\"}},\"resourceElementTemplates\":[{\"type\":\"ResourceElementTemplate\",\"name\":\"dwoyuhhziuiefoz\",\"dependsOnProfile\":{}},{\"type\":\"ResourceElementTemplate\",\"name\":\"msmlmzq\",\"dependsOnProfile\":{}}]},\"location\":\"trmaequiahxicslf\",\"tags\":{\"iyylhalnswhccsp\":\"z\",\"scywuggwoluhc\":\"kaivwit\"},\"id\":\"bwemhairs\",\"name\":\"rgzdwmsweyp\",\"type\":\"w\"}],\"nextLink\":\"ggicccnxqhue\"}")
            .toObject(NetworkServiceDesignVersionListResult.class);
        Assertions.assertEquals("trmaequiahxicslf", model.value().get(0).location());
        Assertions.assertEquals("z", model.value().get(0).tags().get("iyylhalnswhccsp"));
        Assertions.assertEquals("waezkojvd", model.value().get(0).properties().description());
        Assertions.assertEquals("oqouicybxarzgszu",
            model.value().get(0).properties().configurationGroupSchemaReferences().get("oxciqopidoamcio").id());
        Assertions.assertEquals("guxawqaldsyuuxi", model.value().get(0).properties().nfvisFromSite().get("bw").name());
        Assertions.assertEquals("rqf", model.value().get(0).properties().nfvisFromSite().get("bw").type());
        Assertions.assertEquals("dwoyuhhziuiefoz",
            model.value().get(0).properties().resourceElementTemplates().get(0).name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkServiceDesignVersionListResult model
            = new NetworkServiceDesignVersionListResult()
                .withValue(Arrays.asList(new NetworkServiceDesignVersionInner().withLocation("trmaequiahxicslf")
                    .withTags(mapOf("iyylhalnswhccsp", "z", "scywuggwoluhc", "kaivwit"))
                    .withProperties(new NetworkServiceDesignVersionPropertiesFormat().withDescription("waezkojvd")
                        .withConfigurationGroupSchemaReferences(mapOf("oxciqopidoamcio",
                            new ReferencedResource().withId("oqouicybxarzgszu"), "oegokdwbwh",
                            new ReferencedResource().withId("khazxkhnzbonlwn"), "cmrvexzt",
                            new ReferencedResource().withId("z"), "gsfraoyzkoow", new ReferencedResource().withId("t")))
                        .withNfvisFromSite(mapOf("bw", new NfviDetails().withName("guxawqaldsyuuxi").withType("rqf"),
                            "r", new NfviDetails().withName("nkbykutwpfhp").withType("m"), "twvogvbbe",
                            new NfviDetails().withName("dsnfdsdoakgtdl").withType("kzevdlhewpusds"), "enuuzkopbm",
                            new NfviDetails().withName("cngqqmoakufgmjz").withType("rdgrtw")))
                        .withResourceElementTemplates(Arrays.asList(
                            new ResourceElementTemplate().withName("dwoyuhhziuiefoz")
                                .withDependsOnProfile(new DependsOnProfile()),
                            new ResourceElementTemplate().withName("msmlmzq")
                                .withDependsOnProfile(new DependsOnProfile()))))));
        model = BinaryData.fromObject(model).toObject(NetworkServiceDesignVersionListResult.class);
        Assertions.assertEquals("trmaequiahxicslf", model.value().get(0).location());
        Assertions.assertEquals("z", model.value().get(0).tags().get("iyylhalnswhccsp"));
        Assertions.assertEquals("waezkojvd", model.value().get(0).properties().description());
        Assertions.assertEquals("oqouicybxarzgszu",
            model.value().get(0).properties().configurationGroupSchemaReferences().get("oxciqopidoamcio").id());
        Assertions.assertEquals("guxawqaldsyuuxi", model.value().get(0).properties().nfvisFromSite().get("bw").name());
        Assertions.assertEquals("rqf", model.value().get(0).properties().nfvisFromSite().get("bw").type());
        Assertions.assertEquals("dwoyuhhziuiefoz",
            model.value().get(0).properties().resourceElementTemplates().get(0).name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
