// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridnetwork.models.HelmInstallOptions;
import com.azure.resourcemanager.hybridnetwork.models.HelmMappingRuleProfile;
import com.azure.resourcemanager.hybridnetwork.models.HelmMappingRuleProfileOptions;
import com.azure.resourcemanager.hybridnetwork.models.HelmUpgradeOptions;
import org.junit.jupiter.api.Assertions;

public final class HelmMappingRuleProfileTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HelmMappingRuleProfile model = BinaryData.fromString(
            "{\"releaseNamespace\":\"dxasicddyvv\",\"releaseName\":\"kgfmocwahpq\",\"helmPackageVersion\":\"tjeaahhvjhh\",\"values\":\"kzyb\",\"options\":{\"installOptions\":{\"atomic\":\"dj\",\"wait\":\"yxkyxvx\",\"timeout\":\"blbjedn\"},\"upgradeOptions\":{\"atomic\":\"age\",\"wait\":\"ulxunsmjbnkpp\",\"timeout\":\"nenlsvxeizzg\"}}}")
            .toObject(HelmMappingRuleProfile.class);
        Assertions.assertEquals("dxasicddyvv", model.releaseNamespace());
        Assertions.assertEquals("kgfmocwahpq", model.releaseName());
        Assertions.assertEquals("tjeaahhvjhh", model.helmPackageVersion());
        Assertions.assertEquals("kzyb", model.values());
        Assertions.assertEquals("dj", model.options().installOptions().atomic());
        Assertions.assertEquals("yxkyxvx", model.options().installOptions().waitOption());
        Assertions.assertEquals("blbjedn", model.options().installOptions().timeout());
        Assertions.assertEquals("age", model.options().upgradeOptions().atomic());
        Assertions.assertEquals("ulxunsmjbnkpp", model.options().upgradeOptions().waitOption());
        Assertions.assertEquals("nenlsvxeizzg", model.options().upgradeOptions().timeout());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HelmMappingRuleProfile model = new HelmMappingRuleProfile().withReleaseNamespace("dxasicddyvv")
            .withReleaseName("kgfmocwahpq").withHelmPackageVersion("tjeaahhvjhh").withValues("kzyb")
            .withOptions(new HelmMappingRuleProfileOptions()
                .withInstallOptions(
                    new HelmInstallOptions().withAtomic("dj").withWaitOption("yxkyxvx").withTimeout("blbjedn"))
                .withUpgradeOptions(new HelmUpgradeOptions().withAtomic("age").withWaitOption("ulxunsmjbnkpp")
                    .withTimeout("nenlsvxeizzg")));
        model = BinaryData.fromObject(model).toObject(HelmMappingRuleProfile.class);
        Assertions.assertEquals("dxasicddyvv", model.releaseNamespace());
        Assertions.assertEquals("kgfmocwahpq", model.releaseName());
        Assertions.assertEquals("tjeaahhvjhh", model.helmPackageVersion());
        Assertions.assertEquals("kzyb", model.values());
        Assertions.assertEquals("dj", model.options().installOptions().atomic());
        Assertions.assertEquals("yxkyxvx", model.options().installOptions().waitOption());
        Assertions.assertEquals("blbjedn", model.options().installOptions().timeout());
        Assertions.assertEquals("age", model.options().upgradeOptions().atomic());
        Assertions.assertEquals("ulxunsmjbnkpp", model.options().upgradeOptions().waitOption());
        Assertions.assertEquals("nenlsvxeizzg", model.options().upgradeOptions().timeout());
    }
}
