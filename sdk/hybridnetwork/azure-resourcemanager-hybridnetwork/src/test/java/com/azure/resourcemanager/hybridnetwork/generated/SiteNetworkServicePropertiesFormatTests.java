// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridnetwork.models.DeploymentResourceIdReference;
import com.azure.resourcemanager.hybridnetwork.models.ManagedResourceGroupConfiguration;
import com.azure.resourcemanager.hybridnetwork.models.ReferencedResource;
import com.azure.resourcemanager.hybridnetwork.models.SiteNetworkServicePropertiesFormat;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class SiteNetworkServicePropertiesFormatTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SiteNetworkServicePropertiesFormat model = BinaryData.fromString(
            "{\"provisioningState\":\"Deleting\",\"managedResourceGroupConfiguration\":{\"name\":\"ivsiy\",\"location\":\"kdncj\"},\"siteReference\":{\"id\":\"nbzoggcu\"},\"publisherName\":\"p\",\"publisherScope\":\"Unknown\",\"networkServiceDesignGroupName\":\"pgogtqxepny\",\"networkServiceDesignVersionName\":\"fuajly\",\"networkServiceDesignVersionOfferingLocation\":\"lvofqzhvfcibyfmo\",\"networkServiceDesignVersionResourceReference\":{\"idType\":\"DeploymentResourceIdReference\"},\"desiredStateConfigurationGroupValueReferences\":{\"xfzwi\":{\"id\":\"jpvd\"},\"zsxjrkambtrneg\":{\"id\":\"wzjbh\"},\"tjb\":{\"id\":\"nvuqeqvldspa\"},\"stmjlxrri\":{\"id\":\"dmflv\"}},\"lastStateNetworkServiceDesignVersionName\":\"zapeewchpx\",\"lastStateConfigurationGroupValueReferences\":{\"ufuztcktyhjtq\":{\"id\":\"kuziycsle\"},\"jvpglydzgk\":{\"id\":\"cgzulwmmrqzzr\"},\"epr\":{\"id\":\"qeevt\"}}}")
            .toObject(SiteNetworkServicePropertiesFormat.class);
        Assertions.assertEquals("ivsiy", model.managedResourceGroupConfiguration().name());
        Assertions.assertEquals("kdncj", model.managedResourceGroupConfiguration().location());
        Assertions.assertEquals("nbzoggcu", model.siteReference().id());
        Assertions.assertEquals("jpvd", model.desiredStateConfigurationGroupValueReferences().get("xfzwi").id());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SiteNetworkServicePropertiesFormat model
            = new SiteNetworkServicePropertiesFormat()
                .withManagedResourceGroupConfiguration(
                    new ManagedResourceGroupConfiguration().withName("ivsiy").withLocation("kdncj"))
                .withSiteReference(new ReferencedResource().withId("nbzoggcu"))
                .withNetworkServiceDesignVersionResourceReference(new DeploymentResourceIdReference())
                .withDesiredStateConfigurationGroupValueReferences(mapOf("xfzwi",
                    new ReferencedResource().withId("jpvd"), "zsxjrkambtrneg", new ReferencedResource().withId("wzjbh"),
                    "tjb", new ReferencedResource().withId("nvuqeqvldspa"), "stmjlxrri",
                    new ReferencedResource().withId("dmflv")));
        model = BinaryData.fromObject(model).toObject(SiteNetworkServicePropertiesFormat.class);
        Assertions.assertEquals("ivsiy", model.managedResourceGroupConfiguration().name());
        Assertions.assertEquals("kdncj", model.managedResourceGroupConfiguration().location());
        Assertions.assertEquals("nbzoggcu", model.siteReference().id());
        Assertions.assertEquals("jpvd", model.desiredStateConfigurationGroupValueReferences().get("xfzwi").id());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
