// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridnetwork.models.ApplicationEnablement;
import com.azure.resourcemanager.hybridnetwork.models.AzureArcKubernetesDeployMappingRuleProfile;
import com.azure.resourcemanager.hybridnetwork.models.HelmInstallOptions;
import com.azure.resourcemanager.hybridnetwork.models.HelmMappingRuleProfile;
import com.azure.resourcemanager.hybridnetwork.models.HelmMappingRuleProfileOptions;
import com.azure.resourcemanager.hybridnetwork.models.HelmUpgradeOptions;
import org.junit.jupiter.api.Assertions;

public final class AzureArcKubernetesDeployMappingRuleProfileTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureArcKubernetesDeployMappingRuleProfile model = BinaryData.fromString(
            "{\"helmMappingRuleProfile\":{\"releaseNamespace\":\"ao\",\"releaseName\":\"mmbnpqfrtql\",\"helmPackageVersion\":\"megni\",\"values\":\"vkxlz\",\"options\":{\"installOptions\":{\"atomic\":\"fegcea\",\"wait\":\"xwh\",\"timeout\":\"nsymoyqhlwigd\"},\"upgradeOptions\":{\"atomic\":\"kbxgom\",\"wait\":\"juwasqvdaeyyguxa\",\"timeout\":\"sqzhzbezkg\"}}},\"applicationEnablement\":\"Unknown\"}")
            .toObject(AzureArcKubernetesDeployMappingRuleProfile.class);
        Assertions.assertEquals(ApplicationEnablement.UNKNOWN, model.applicationEnablement());
        Assertions.assertEquals("ao", model.helmMappingRuleProfile().releaseNamespace());
        Assertions.assertEquals("mmbnpqfrtql", model.helmMappingRuleProfile().releaseName());
        Assertions.assertEquals("megni", model.helmMappingRuleProfile().helmPackageVersion());
        Assertions.assertEquals("vkxlz", model.helmMappingRuleProfile().values());
        Assertions.assertEquals("fegcea", model.helmMappingRuleProfile().options().installOptions().atomic());
        Assertions.assertEquals("xwh", model.helmMappingRuleProfile().options().installOptions().waitOption());
        Assertions.assertEquals("nsymoyqhlwigd", model.helmMappingRuleProfile().options().installOptions().timeout());
        Assertions.assertEquals("kbxgom", model.helmMappingRuleProfile().options().upgradeOptions().atomic());
        Assertions.assertEquals("juwasqvdaeyyguxa",
            model.helmMappingRuleProfile().options().upgradeOptions().waitOption());
        Assertions.assertEquals("sqzhzbezkg", model.helmMappingRuleProfile().options().upgradeOptions().timeout());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureArcKubernetesDeployMappingRuleProfile model
            = new AzureArcKubernetesDeployMappingRuleProfile().withApplicationEnablement(ApplicationEnablement.UNKNOWN)
                .withHelmMappingRuleProfile(new HelmMappingRuleProfile().withReleaseNamespace("ao")
                    .withReleaseName("mmbnpqfrtql").withHelmPackageVersion("megni").withValues("vkxlz")
                    .withOptions(new HelmMappingRuleProfileOptions()
                        .withInstallOptions(new HelmInstallOptions().withAtomic("fegcea").withWaitOption("xwh")
                            .withTimeout("nsymoyqhlwigd"))
                        .withUpgradeOptions(new HelmUpgradeOptions().withAtomic("kbxgom")
                            .withWaitOption("juwasqvdaeyyguxa").withTimeout("sqzhzbezkg"))));
        model = BinaryData.fromObject(model).toObject(AzureArcKubernetesDeployMappingRuleProfile.class);
        Assertions.assertEquals(ApplicationEnablement.UNKNOWN, model.applicationEnablement());
        Assertions.assertEquals("ao", model.helmMappingRuleProfile().releaseNamespace());
        Assertions.assertEquals("mmbnpqfrtql", model.helmMappingRuleProfile().releaseName());
        Assertions.assertEquals("megni", model.helmMappingRuleProfile().helmPackageVersion());
        Assertions.assertEquals("vkxlz", model.helmMappingRuleProfile().values());
        Assertions.assertEquals("fegcea", model.helmMappingRuleProfile().options().installOptions().atomic());
        Assertions.assertEquals("xwh", model.helmMappingRuleProfile().options().installOptions().waitOption());
        Assertions.assertEquals("nsymoyqhlwigd", model.helmMappingRuleProfile().options().installOptions().timeout());
        Assertions.assertEquals("kbxgom", model.helmMappingRuleProfile().options().upgradeOptions().atomic());
        Assertions.assertEquals("juwasqvdaeyyguxa",
            model.helmMappingRuleProfile().options().upgradeOptions().waitOption());
        Assertions.assertEquals("sqzhzbezkg", model.helmMappingRuleProfile().options().upgradeOptions().timeout());
    }
}
