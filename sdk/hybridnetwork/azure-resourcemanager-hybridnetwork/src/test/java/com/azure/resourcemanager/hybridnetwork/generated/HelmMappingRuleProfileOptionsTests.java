// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridnetwork.models.HelmInstallOptions;
import com.azure.resourcemanager.hybridnetwork.models.HelmMappingRuleProfileOptions;
import com.azure.resourcemanager.hybridnetwork.models.HelmUpgradeOptions;
import org.junit.jupiter.api.Assertions;

public final class HelmMappingRuleProfileOptionsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HelmMappingRuleProfileOptions model = BinaryData.fromString(
            "{\"installOptions\":{\"atomic\":\"nsrmffeycx\",\"wait\":\"tpiymerteea\",\"timeout\":\"xqiekkkzddrtk\"},\"upgradeOptions\":{\"atomic\":\"jbmxvavre\",\"wait\":\"eesvecu\",\"timeout\":\"pxtxsuwp\"}}")
            .toObject(HelmMappingRuleProfileOptions.class);
        Assertions.assertEquals("nsrmffeycx", model.installOptions().atomic());
        Assertions.assertEquals("tpiymerteea", model.installOptions().waitOption());
        Assertions.assertEquals("xqiekkkzddrtk", model.installOptions().timeout());
        Assertions.assertEquals("jbmxvavre", model.upgradeOptions().atomic());
        Assertions.assertEquals("eesvecu", model.upgradeOptions().waitOption());
        Assertions.assertEquals("pxtxsuwp", model.upgradeOptions().timeout());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HelmMappingRuleProfileOptions model
            = new HelmMappingRuleProfileOptions()
                .withInstallOptions(new HelmInstallOptions().withAtomic("nsrmffeycx").withWaitOption("tpiymerteea")
                    .withTimeout("xqiekkkzddrtk"))
                .withUpgradeOptions(
                    new HelmUpgradeOptions().withAtomic("jbmxvavre").withWaitOption("eesvecu").withTimeout("pxtxsuwp"));
        model = BinaryData.fromObject(model).toObject(HelmMappingRuleProfileOptions.class);
        Assertions.assertEquals("nsrmffeycx", model.installOptions().atomic());
        Assertions.assertEquals("tpiymerteea", model.installOptions().waitOption());
        Assertions.assertEquals("xqiekkkzddrtk", model.installOptions().timeout());
        Assertions.assertEquals("jbmxvavre", model.upgradeOptions().atomic());
        Assertions.assertEquals("eesvecu", model.upgradeOptions().waitOption());
        Assertions.assertEquals("pxtxsuwp", model.upgradeOptions().timeout());
    }
}
