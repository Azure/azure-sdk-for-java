// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.hybridnetwork.HybridNetworkManager;
import com.azure.resourcemanager.hybridnetwork.models.Component;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ComponentsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Deleting\",\"deploymentProfile\":\"agfl\",\"deploymentStatus\":{\"status\":\"Pending-Install\",\"resources\":{\"deployments\":[{},{},{},{}],\"pods\":[{},{},{}],\"replicaSets\":[{},{}],\"statefulSets\":[{},{}],\"daemonSets\":[{},{},{}]},\"nextExpectedUpdateAt\":\"2021-03-30T23:09:01Z\"}},\"id\":\"r\",\"name\":\"lrohkpig\",\"type\":\"fusuckzmkwklsno\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HybridNetworkManager manager = HybridNetworkManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Component response = manager.components()
            .getWithResponse("y", "ruuuybnch", "szizoyuelyetndnb", com.azure.core.util.Context.NONE)
            .getValue();

    }
}
