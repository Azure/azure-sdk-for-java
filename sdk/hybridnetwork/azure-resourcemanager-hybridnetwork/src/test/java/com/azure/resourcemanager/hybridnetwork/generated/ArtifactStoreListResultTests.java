// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridnetwork.fluent.models.ArtifactStoreInner;
import com.azure.resourcemanager.hybridnetwork.models.ArtifactReplicationStrategy;
import com.azure.resourcemanager.hybridnetwork.models.ArtifactStoreListResult;
import com.azure.resourcemanager.hybridnetwork.models.ArtifactStorePropertiesFormat;
import com.azure.resourcemanager.hybridnetwork.models.ArtifactStorePropertiesFormatManagedResourceGroupConfiguration;
import com.azure.resourcemanager.hybridnetwork.models.ArtifactStoreType;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ArtifactStoreListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ArtifactStoreListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"provisioningState\":\"Converging\",\"storeType\":\"Unknown\",\"replicationStrategy\":\"Unknown\",\"managedResourceGroupConfiguration\":{\"name\":\"gamv\",\"location\":\"ho\"},\"storageResourceId\":\"qzudphq\"},\"location\":\"vdkfwynwcvtbvk\",\"tags\":{\"atkzwpcnpw\":\"mtnvyq\",\"cyajguqf\":\"cjaesgvvs\"},\"id\":\"wygzlvdnkfxusem\",\"name\":\"wzrmuh\",\"type\":\"pfcqdp\"},{\"properties\":{\"provisioningState\":\"Failed\",\"storeType\":\"AzureContainerRegistry\",\"replicationStrategy\":\"Unknown\",\"managedResourceGroupConfiguration\":{\"name\":\"ymgc\",\"location\":\"lvez\"},\"storageResourceId\":\"pqlmfe\"},\"location\":\"erqwkyhkobopg\",\"tags\":{\"wep\":\"k\"},\"id\":\"qpcrf\",\"name\":\"bwccsnjvcdwxlpqe\",\"type\":\"ftnkhtj\"},{\"properties\":{\"provisioningState\":\"Deleting\",\"storeType\":\"AzureStorageAccount\",\"replicationStrategy\":\"SingleReplication\",\"managedResourceGroupConfiguration\":{\"name\":\"mtdh\",\"location\":\"dvypgikdgsz\"},\"storageResourceId\":\"kbir\"},\"location\":\"uzhlhkjoqrv\",\"tags\":{\"ggjioolvr\":\"atjinrvgoupmfiib\",\"v\":\"x\",\"wjygvjayvblmhvk\":\"kkgll\",\"gsopbyrqufegxu\":\"uhbxvvy\"},\"id\":\"wz\",\"name\":\"bnhlmc\",\"type\":\"l\"},{\"properties\":{\"provisioningState\":\"Accepted\",\"storeType\":\"AzureContainerRegistry\",\"replicationStrategy\":\"SingleReplication\",\"managedResourceGroupConfiguration\":{\"name\":\"hrixkwmy\",\"location\":\"ejvegrhbpnaixex\"},\"storageResourceId\":\"b\"},\"location\":\"eaxhcexdrrvqahqk\",\"tags\":{\"svfycxzbfv\":\"pwijnhy\",\"ronzmyhgfip\":\"owvrvmtgjqppyos\"},\"id\":\"sxkm\",\"name\":\"waekrrjreafxtsgu\",\"type\":\"hjglikk\"}],\"nextLink\":\"slol\"}")
            .toObject(ArtifactStoreListResult.class);
        Assertions.assertEquals("vdkfwynwcvtbvk", model.value().get(0).location());
        Assertions.assertEquals("mtnvyq", model.value().get(0).tags().get("atkzwpcnpw"));
        Assertions.assertEquals(ArtifactStoreType.UNKNOWN, model.value().get(0).properties().storeType());
        Assertions.assertEquals(ArtifactReplicationStrategy.UNKNOWN,
            model.value().get(0).properties().replicationStrategy());
        Assertions.assertEquals("gamv", model.value().get(0).properties().managedResourceGroupConfiguration().name());
        Assertions.assertEquals("ho", model.value().get(0).properties().managedResourceGroupConfiguration().location());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ArtifactStoreListResult model = new ArtifactStoreListResult().withValue(Arrays.asList(
            new ArtifactStoreInner().withLocation("vdkfwynwcvtbvk")
                .withTags(mapOf("atkzwpcnpw", "mtnvyq", "cyajguqf", "cjaesgvvs"))
                .withProperties(new ArtifactStorePropertiesFormat().withStoreType(ArtifactStoreType.UNKNOWN)
                    .withReplicationStrategy(ArtifactReplicationStrategy.UNKNOWN).withManagedResourceGroupConfiguration(
                        new ArtifactStorePropertiesFormatManagedResourceGroupConfiguration().withName("gamv")
                            .withLocation("ho"))),
            new ArtifactStoreInner().withLocation("erqwkyhkobopg").withTags(mapOf("wep", "k"))
                .withProperties(new ArtifactStorePropertiesFormat()
                    .withStoreType(ArtifactStoreType.AZURE_CONTAINER_REGISTRY)
                    .withReplicationStrategy(ArtifactReplicationStrategy.UNKNOWN).withManagedResourceGroupConfiguration(
                        new ArtifactStorePropertiesFormatManagedResourceGroupConfiguration().withName("ymgc")
                            .withLocation("lvez"))),
            new ArtifactStoreInner().withLocation("uzhlhkjoqrv")
                .withTags(mapOf("ggjioolvr", "atjinrvgoupmfiib", "v", "x", "wjygvjayvblmhvk", "kkgll", "gsopbyrqufegxu",
                    "uhbxvvy"))
                .withProperties(
                    new ArtifactStorePropertiesFormat().withStoreType(ArtifactStoreType.AZURE_STORAGE_ACCOUNT)
                        .withReplicationStrategy(ArtifactReplicationStrategy.SINGLE_REPLICATION)
                        .withManagedResourceGroupConfiguration(
                            new ArtifactStorePropertiesFormatManagedResourceGroupConfiguration().withName("mtdh")
                                .withLocation("dvypgikdgsz"))),
            new ArtifactStoreInner().withLocation("eaxhcexdrrvqahqk")
                .withTags(mapOf("svfycxzbfv", "pwijnhy", "ronzmyhgfip", "owvrvmtgjqppyos")).withProperties(
                    new ArtifactStorePropertiesFormat().withStoreType(ArtifactStoreType.AZURE_CONTAINER_REGISTRY)
                        .withReplicationStrategy(ArtifactReplicationStrategy.SINGLE_REPLICATION)
                        .withManagedResourceGroupConfiguration(
                            new ArtifactStorePropertiesFormatManagedResourceGroupConfiguration().withName("hrixkwmy")
                                .withLocation("ejvegrhbpnaixex")))));
        model = BinaryData.fromObject(model).toObject(ArtifactStoreListResult.class);
        Assertions.assertEquals("vdkfwynwcvtbvk", model.value().get(0).location());
        Assertions.assertEquals("mtnvyq", model.value().get(0).tags().get("atkzwpcnpw"));
        Assertions.assertEquals(ArtifactStoreType.UNKNOWN, model.value().get(0).properties().storeType());
        Assertions.assertEquals(ArtifactReplicationStrategy.UNKNOWN,
            model.value().get(0).properties().replicationStrategy());
        Assertions.assertEquals("gamv", model.value().get(0).properties().managedResourceGroupConfiguration().name());
        Assertions.assertEquals("ho", model.value().get(0).properties().managedResourceGroupConfiguration().location());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
