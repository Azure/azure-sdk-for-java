// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.hybridnetwork.HybridNetworkManager;
import com.azure.resourcemanager.hybridnetwork.models.NetworkServiceDesignVersion;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class NetworkServiceDesignVersionsListByNetworkServiceDesignGroupMockTests {
    @Test
    public void testListByNetworkServiceDesignGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Accepted\",\"versionState\":\"Preview\",\"description\":\"wjjkh\",\"configurationGroupSchemaReferences\":{\"u\":{\"id\":\"ac\"},\"oi\":{\"id\":\"xnqmhrpqpdfwm\"},\"fxuifmcsypobk\":{\"id\":\"css\"},\"zsylollgt\":{\"id\":\"zr\"}},\"nfvisFromSite\":{\"uaurkihcir\":{\"name\":\"ydmxzj\",\"type\":\"p\"},\"q\":{\"name\":\"efxrdcoxnbk\",\"type\":\"anurnnqb\"},\"bfihw\":{\"name\":\"izxqltgrd\",\"type\":\"ypxrx\"},\"owxih\":{\"name\":\"vctafsrb\",\"type\":\"blml\"}},\"resourceElementTemplates\":[{\"type\":\"ResourceElementTemplate\",\"name\":\"wqagnepzwa\",\"dependsOnProfile\":{\"installDependsOn\":[\"sbq\",\"qagwwrxaomz\"],\"uninstallDependsOn\":[\"lrrcz\",\"zkhhltnjadhqo\"],\"updateDependsOn\":[\"qoyueayfbpcmsplb\",\"rrueqthwmg\",\"mbscbbx\",\"gdhxi\"]}}]},\"location\":\"lopedbwdpyqyyb\",\"tags\":{\"afcbqw\":\"md\",\"jelaqacigele\":\"e\",\"beonrlkwzdq\":\"hdbvqvwzkjop\"},\"id\":\"bxcea\",\"name\":\"xcptsoqfyiaseqc\",\"type\":\"krtt\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HybridNetworkManager manager = HybridNetworkManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<NetworkServiceDesignVersion> response = manager.networkServiceDesignVersions()
            .listByNetworkServiceDesignGroup("xtwbta", "ypnyghshxc", "lhkgmnsghp", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("lopedbwdpyqyyb", response.iterator().next().location());
        Assertions.assertEquals("md", response.iterator().next().tags().get("afcbqw"));
        Assertions.assertEquals("wjjkh", response.iterator().next().properties().description());
        Assertions.assertEquals("ac",
            response.iterator().next().properties().configurationGroupSchemaReferences().get("u").id());
        Assertions.assertEquals("ydmxzj",
            response.iterator().next().properties().nfvisFromSite().get("uaurkihcir").name());
        Assertions.assertEquals("p", response.iterator().next().properties().nfvisFromSite().get("uaurkihcir").type());
        Assertions.assertEquals("wqagnepzwa",
            response.iterator().next().properties().resourceElementTemplates().get(0).name());
        Assertions.assertEquals("sbq",
            response.iterator()
                .next()
                .properties()
                .resourceElementTemplates()
                .get(0)
                .dependsOnProfile()
                .installDependsOn()
                .get(0));
        Assertions.assertEquals("lrrcz",
            response.iterator()
                .next()
                .properties()
                .resourceElementTemplates()
                .get(0)
                .dependsOnProfile()
                .uninstallDependsOn()
                .get(0));
        Assertions.assertEquals("qoyueayfbpcmsplb",
            response.iterator()
                .next()
                .properties()
                .resourceElementTemplates()
                .get(0)
                .dependsOnProfile()
                .updateDependsOn()
                .get(0));
    }
}
