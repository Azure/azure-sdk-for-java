// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devops.generated;

import com.azure.resourcemanager.devops.models.BootstrapConfiguration;
import com.azure.resourcemanager.devops.models.OrganizationReference;
import com.azure.resourcemanager.devops.models.PipelineTemplate;
import com.azure.resourcemanager.devops.models.ProjectReference;
import java.util.HashMap;
import java.util.Map;

/** Samples for Pipelines CreateOrUpdate. */
public final class PipelinesCreateOrUpdateSamples {
    /*
     * x-ms-original-file: specification/devops/resource-manager/Microsoft.DevOps/preview/2019-07-01-preview/examples/CreateAzurePipeline-Sample-AspNet-WindowsWebApp.json
     */
    /**
     * Sample code: Create an Azure pipeline to deploy a sample ASP.Net application to Azure web-app.
     *
     * @param manager Entry point to DevopsManager.
     */
    public static void createAnAzurePipelineToDeployASampleASPNetApplicationToAzureWebApp(
        com.azure.resourcemanager.devops.DevopsManager manager) {
        manager
            .pipelines()
            .define("myAspNetWebAppPipeline")
            .withRegion("South India")
            .withExistingResourceGroup("myAspNetWebAppPipeline-rg")
            .withOrganization(new OrganizationReference().withName("myAspNetWebAppPipeline-org"))
            .withProject(new ProjectReference().withName("myAspNetWebAppPipeline-project"))
            .withBootstrapConfiguration(
                new BootstrapConfiguration()
                    .withTemplate(
                        new PipelineTemplate()
                            .withId("ms.vss-continuous-delivery-pipeline-templates.aspnet-windowswebapp")
                            .withParameters(
                                mapOf(
                                    "appInsightLocation",
                                    "South India",
                                    "appServicePlan",
                                    "S1 Standard",
                                    "azureAuth",
                                    "{\"scheme\":\"ServicePrincipal\",\"parameters\":{\"tenantid\":\"{subscriptionTenantId}\",\"objectid\":\"{appObjectId}\",\"serviceprincipalid\":\"{appId}\",\"serviceprincipalkey\":\"{appSecret}\"}}",
                                    "location",
                                    "South India",
                                    "resourceGroup",
                                    "myAspNetWebAppPipeline-rg",
                                    "subscriptionId",
                                    "{subscriptionId}",
                                    "webAppName",
                                    "myAspNetWebApp"))))
            .withTags(mapOf())
            .create();
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
