// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devops.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** Authorization info used to access a resource (like code repository). */
@Fluent
public final class Authorization {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(Authorization.class);

    /*
     * Type of authorization.
     */
    @JsonProperty(value = "authorizationType", required = true)
    private AuthorizationType authorizationType;

    /*
     * Authorization parameters corresponding to the authorization type.
     */
    @JsonProperty(value = "parameters")
    private Map<String, String> parameters;

    /**
     * Get the authorizationType property: Type of authorization.
     *
     * @return the authorizationType value.
     */
    public AuthorizationType authorizationType() {
        return this.authorizationType;
    }

    /**
     * Set the authorizationType property: Type of authorization.
     *
     * @param authorizationType the authorizationType value to set.
     * @return the Authorization object itself.
     */
    public Authorization withAuthorizationType(AuthorizationType authorizationType) {
        this.authorizationType = authorizationType;
        return this;
    }

    /**
     * Get the parameters property: Authorization parameters corresponding to the authorization type.
     *
     * @return the parameters value.
     */
    public Map<String, String> parameters() {
        return this.parameters;
    }

    /**
     * Set the parameters property: Authorization parameters corresponding to the authorization type.
     *
     * @param parameters the parameters value to set.
     * @return the Authorization object itself.
     */
    public Authorization withParameters(Map<String, String> parameters) {
        this.parameters = parameters;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (authorizationType() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property authorizationType in model Authorization"));
        }
    }
}
