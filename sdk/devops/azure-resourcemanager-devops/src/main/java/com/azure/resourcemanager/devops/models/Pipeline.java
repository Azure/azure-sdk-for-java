// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devops.models;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.devops.fluent.models.PipelineInner;
import java.util.Map;

/** An immutable client-side representation of Pipeline. */
public interface Pipeline {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the pipelineId property: Unique identifier of the Azure Pipeline within the Azure DevOps Project.
     *
     * @return the pipelineId value.
     */
    Integer pipelineId();

    /**
     * Gets the organization property: Reference to the Azure DevOps Organization containing the Pipeline.
     *
     * @return the organization value.
     */
    OrganizationReference organization();

    /**
     * Gets the project property: Reference to the Azure DevOps Project containing the Pipeline.
     *
     * @return the project value.
     */
    ProjectReference project();

    /**
     * Gets the bootstrapConfiguration property: Configuration used to bootstrap the Pipeline.
     *
     * @return the bootstrapConfiguration value.
     */
    BootstrapConfiguration bootstrapConfiguration();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.devops.fluent.models.PipelineInner object.
     *
     * @return the inner object.
     */
    PipelineInner innerModel();

    /** The entirety of the Pipeline definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithResourceGroup,
            DefinitionStages.WithOrganization,
            DefinitionStages.WithProject,
            DefinitionStages.WithBootstrapConfiguration,
            DefinitionStages.WithCreate {
    }
    /** The Pipeline definition stages. */
    interface DefinitionStages {
        /** The first stage of the Pipeline definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the Pipeline definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }
        /** The stage of the Pipeline definition allowing to specify parent resource. */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             *
             * @param resourceGroupName Name of the resource group within the Azure subscription.
             * @return the next definition stage.
             */
            WithOrganization withExistingResourceGroup(String resourceGroupName);
        }
        /** The stage of the Pipeline definition allowing to specify organization. */
        interface WithOrganization {
            /**
             * Specifies the organization property: Reference to the Azure DevOps Organization containing the Pipeline..
             *
             * @param organization Reference to the Azure DevOps Organization containing the Pipeline.
             * @return the next definition stage.
             */
            WithProject withOrganization(OrganizationReference organization);
        }
        /** The stage of the Pipeline definition allowing to specify project. */
        interface WithProject {
            /**
             * Specifies the project property: Reference to the Azure DevOps Project containing the Pipeline..
             *
             * @param project Reference to the Azure DevOps Project containing the Pipeline.
             * @return the next definition stage.
             */
            WithBootstrapConfiguration withProject(ProjectReference project);
        }
        /** The stage of the Pipeline definition allowing to specify bootstrapConfiguration. */
        interface WithBootstrapConfiguration {
            /**
             * Specifies the bootstrapConfiguration property: Configuration used to bootstrap the Pipeline..
             *
             * @param bootstrapConfiguration Configuration used to bootstrap the Pipeline.
             * @return the next definition stage.
             */
            WithCreate withBootstrapConfiguration(BootstrapConfiguration bootstrapConfiguration);
        }
        /**
         * The stage of the Pipeline definition which contains all the minimum required properties for the resource to
         * be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithTags {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            Pipeline create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            Pipeline create(Context context);
        }
        /** The stage of the Pipeline definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
    }
    /**
     * Begins update for the Pipeline resource.
     *
     * @return the stage of resource update.
     */
    Pipeline.Update update();

    /** The template for Pipeline update. */
    interface Update extends UpdateStages.WithTags {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        Pipeline apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        Pipeline apply(Context context);
    }
    /** The Pipeline update stages. */
    interface UpdateStages {
        /** The stage of the Pipeline update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Dictionary of key-value pairs to be set as tags on the Azure Pipeline. This
             * will overwrite any existing tags..
             *
             * @param tags Dictionary of key-value pairs to be set as tags on the Azure Pipeline. This will overwrite
             *     any existing tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    Pipeline refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    Pipeline refresh(Context context);
}
