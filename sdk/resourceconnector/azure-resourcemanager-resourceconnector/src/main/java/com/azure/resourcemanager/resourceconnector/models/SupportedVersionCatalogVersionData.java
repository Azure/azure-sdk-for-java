// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.resourceconnector.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The SupportedVersionCatalogVersionData object for appliance.
 */
@Immutable
public final class SupportedVersionCatalogVersionData implements JsonSerializable<SupportedVersionCatalogVersionData> {
    /*
     * The image audience name for the version available for upgrade.
     */
    private String audience;

    /*
     * The image catalog name for the version available for upgrade.
     */
    private String catalog;

    /*
     * The image offer name for the version available for upgrade.
     */
    private String offer;

    /*
     * The image version for the version available for upgrade.
     */
    private String version;

    /**
     * Creates an instance of SupportedVersionCatalogVersionData class.
     */
    public SupportedVersionCatalogVersionData() {
    }

    /**
     * Get the audience property: The image audience name for the version available for upgrade.
     * 
     * @return the audience value.
     */
    public String audience() {
        return this.audience;
    }

    /**
     * Get the catalog property: The image catalog name for the version available for upgrade.
     * 
     * @return the catalog value.
     */
    public String catalog() {
        return this.catalog;
    }

    /**
     * Get the offer property: The image offer name for the version available for upgrade.
     * 
     * @return the offer value.
     */
    public String offer() {
        return this.offer;
    }

    /**
     * Get the version property: The image version for the version available for upgrade.
     * 
     * @return the version value.
     */
    public String version() {
        return this.version;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SupportedVersionCatalogVersionData from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SupportedVersionCatalogVersionData if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SupportedVersionCatalogVersionData.
     */
    public static SupportedVersionCatalogVersionData fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SupportedVersionCatalogVersionData deserializedSupportedVersionCatalogVersionData
                = new SupportedVersionCatalogVersionData();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("audience".equals(fieldName)) {
                    deserializedSupportedVersionCatalogVersionData.audience = reader.getString();
                } else if ("catalog".equals(fieldName)) {
                    deserializedSupportedVersionCatalogVersionData.catalog = reader.getString();
                } else if ("offer".equals(fieldName)) {
                    deserializedSupportedVersionCatalogVersionData.offer = reader.getString();
                } else if ("version".equals(fieldName)) {
                    deserializedSupportedVersionCatalogVersionData.version = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSupportedVersionCatalogVersionData;
        });
    }
}
