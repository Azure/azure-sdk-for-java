// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.resourceconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.resourceconnector.fluent.models.ApplianceOperationInner;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Lists of Appliances operations. */
@Fluent
public final class ApplianceOperationsList {
    /*
     * Next page of operations.
     */
    @JsonProperty(value = "nextLink")
    private String nextLink;

    /*
     * Array of applianceOperation
     */
    @JsonProperty(value = "value", required = true)
    private List<ApplianceOperationInner> value;

    /** Creates an instance of ApplianceOperationsList class. */
    public ApplianceOperationsList() {
    }

    /**
     * Get the nextLink property: Next page of operations.
     *
     * @return the nextLink value.
     */
    public String nextLink() {
        return this.nextLink;
    }

    /**
     * Set the nextLink property: Next page of operations.
     *
     * @param nextLink the nextLink value to set.
     * @return the ApplianceOperationsList object itself.
     */
    public ApplianceOperationsList withNextLink(String nextLink) {
        this.nextLink = nextLink;
        return this;
    }

    /**
     * Get the value property: Array of applianceOperation.
     *
     * @return the value value.
     */
    public List<ApplianceOperationInner> value() {
        return this.value;
    }

    /**
     * Set the value property: Array of applianceOperation.
     *
     * @param value the value value to set.
     * @return the ApplianceOperationsList object itself.
     */
    public ApplianceOperationsList withValue(List<ApplianceOperationInner> value) {
        this.value = value;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (value() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property value in model ApplianceOperationsList"));
        } else {
            value().forEach(e -> e.validate());
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ApplianceOperationsList.class);
}
