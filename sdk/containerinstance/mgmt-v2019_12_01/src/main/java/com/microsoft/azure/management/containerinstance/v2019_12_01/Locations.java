/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.containerinstance.v2019_12_01;

import com.microsoft.azure.management.containerinstance.v2019_12_01.implementation.LocationsInner;
import com.microsoft.azure.arm.model.HasInner;
import rx.Observable;
import com.microsoft.azure.management.containerinstance.v2019_12_01.Capabilities;
import com.microsoft.azure.management.containerinstance.v2019_12_01.Usage;
import com.microsoft.azure.management.containerinstance.v2019_12_01.CachedImages;

/**
 * Type representing Locations.
 */
public interface Locations extends HasInner<LocationsInner> {
    /**
     * Get the list of capabilities of the location.
     * Get the list of CPU/memory/GPU capabilities of a region.
     *
     * @param location The identifier for the physical azure location.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<Capabilities> listCapabilitiesAsync(final String location);

    /**
     * Get the usage for a subscription.
     *
     * @param location The identifier for the physical azure location.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<Usage> listUsageAsync(String location);

    /**
     * Get the list of cached images.
     * Get the list of cached images on specific OS type for a subscription in a region.
     *
     * @param location The identifier for the physical azure location.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<CachedImages> listCachedImagesAsync(final String location);

}
