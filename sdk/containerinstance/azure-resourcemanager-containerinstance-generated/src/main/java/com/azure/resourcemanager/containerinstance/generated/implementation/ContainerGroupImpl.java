// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerinstance.generated.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.containerinstance.generated.fluent.models.ContainerGroupInner;
import com.azure.resourcemanager.containerinstance.generated.models.Container;
import com.azure.resourcemanager.containerinstance.generated.models.ContainerGroup;
import com.azure.resourcemanager.containerinstance.generated.models.ContainerGroupDiagnostics;
import com.azure.resourcemanager.containerinstance.generated.models.ContainerGroupIdentity;
import com.azure.resourcemanager.containerinstance.generated.models.ContainerGroupNetworkProfile;
import com.azure.resourcemanager.containerinstance.generated.models.ContainerGroupPropertiesInstanceView;
import com.azure.resourcemanager.containerinstance.generated.models.ContainerGroupRestartPolicy;
import com.azure.resourcemanager.containerinstance.generated.models.ContainerGroupSku;
import com.azure.resourcemanager.containerinstance.generated.models.DnsConfiguration;
import com.azure.resourcemanager.containerinstance.generated.models.EncryptionProperties;
import com.azure.resourcemanager.containerinstance.generated.models.ImageRegistryCredential;
import com.azure.resourcemanager.containerinstance.generated.models.InitContainerDefinition;
import com.azure.resourcemanager.containerinstance.generated.models.IpAddress;
import com.azure.resourcemanager.containerinstance.generated.models.OperatingSystemTypes;
import com.azure.resourcemanager.containerinstance.generated.models.Volume;
import java.util.Collections;
import java.util.List;
import java.util.Map;

public final class ContainerGroupImpl implements ContainerGroup, ContainerGroup.Definition {
    private ContainerGroupInner innerObject;

    private final com.azure.resourcemanager.containerinstance.generated.ContainerInstanceManager serviceManager;

    ContainerGroupImpl(
        ContainerGroupInner innerObject,
        com.azure.resourcemanager.containerinstance.generated.ContainerInstanceManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public ContainerGroupIdentity identity() {
        return this.innerModel().identity();
    }

    public String provisioningState() {
        return this.innerModel().provisioningState();
    }

    public List<Container> containers() {
        List<Container> inner = this.innerModel().containers();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<ImageRegistryCredential> imageRegistryCredentials() {
        List<ImageRegistryCredential> inner = this.innerModel().imageRegistryCredentials();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public ContainerGroupRestartPolicy restartPolicy() {
        return this.innerModel().restartPolicy();
    }

    public IpAddress ipAddress() {
        return this.innerModel().ipAddress();
    }

    public OperatingSystemTypes osType() {
        return this.innerModel().osType();
    }

    public List<Volume> volumes() {
        List<Volume> inner = this.innerModel().volumes();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public ContainerGroupPropertiesInstanceView instanceView() {
        return this.innerModel().instanceView();
    }

    public ContainerGroupDiagnostics diagnostics() {
        return this.innerModel().diagnostics();
    }

    public ContainerGroupNetworkProfile networkProfile() {
        return this.innerModel().networkProfile();
    }

    public DnsConfiguration dnsConfig() {
        return this.innerModel().dnsConfig();
    }

    public ContainerGroupSku sku() {
        return this.innerModel().sku();
    }

    public EncryptionProperties encryptionProperties() {
        return this.innerModel().encryptionProperties();
    }

    public List<InitContainerDefinition> initContainers() {
        List<InitContainerDefinition> inner = this.innerModel().initContainers();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public ContainerGroupInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.containerinstance.generated.ContainerInstanceManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String containerGroupName;

    public ContainerGroupImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public ContainerGroup create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getContainerGroups()
                .createOrUpdate(resourceGroupName, containerGroupName, this.innerModel(), Context.NONE);
        return this;
    }

    public ContainerGroup create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getContainerGroups()
                .createOrUpdate(resourceGroupName, containerGroupName, this.innerModel(), context);
        return this;
    }

    ContainerGroupImpl(
        String name, com.azure.resourcemanager.containerinstance.generated.ContainerInstanceManager serviceManager) {
        this.innerObject = new ContainerGroupInner();
        this.serviceManager = serviceManager;
        this.containerGroupName = name;
    }

    public ContainerGroup refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getContainerGroups()
                .getByResourceGroupWithResponse(resourceGroupName, containerGroupName, Context.NONE)
                .getValue();
        return this;
    }

    public ContainerGroup refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getContainerGroups()
                .getByResourceGroupWithResponse(resourceGroupName, containerGroupName, context)
                .getValue();
        return this;
    }

    public void restart() {
        serviceManager.containerGroups().restart(resourceGroupName, containerGroupName);
    }

    public void restart(Context context) {
        serviceManager.containerGroups().restart(resourceGroupName, containerGroupName, context);
    }

    public void stop() {
        serviceManager.containerGroups().stop(resourceGroupName, containerGroupName);
    }

    public Response<Void> stopWithResponse(Context context) {
        return serviceManager.containerGroups().stopWithResponse(resourceGroupName, containerGroupName, context);
    }

    public void start() {
        serviceManager.containerGroups().start(resourceGroupName, containerGroupName);
    }

    public void start(Context context) {
        serviceManager.containerGroups().start(resourceGroupName, containerGroupName, context);
    }

    public ContainerGroupImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public ContainerGroupImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public ContainerGroupImpl withContainers(List<Container> containers) {
        this.innerModel().withContainers(containers);
        return this;
    }

    public ContainerGroupImpl withOsType(OperatingSystemTypes osType) {
        this.innerModel().withOsType(osType);
        return this;
    }

    public ContainerGroupImpl withTags(Map<String, String> tags) {
        this.innerModel().withTags(tags);
        return this;
    }

    public ContainerGroupImpl withIdentity(ContainerGroupIdentity identity) {
        this.innerModel().withIdentity(identity);
        return this;
    }

    public ContainerGroupImpl withImageRegistryCredentials(List<ImageRegistryCredential> imageRegistryCredentials) {
        this.innerModel().withImageRegistryCredentials(imageRegistryCredentials);
        return this;
    }

    public ContainerGroupImpl withRestartPolicy(ContainerGroupRestartPolicy restartPolicy) {
        this.innerModel().withRestartPolicy(restartPolicy);
        return this;
    }

    public ContainerGroupImpl withIpAddress(IpAddress ipAddress) {
        this.innerModel().withIpAddress(ipAddress);
        return this;
    }

    public ContainerGroupImpl withVolumes(List<Volume> volumes) {
        this.innerModel().withVolumes(volumes);
        return this;
    }

    public ContainerGroupImpl withDiagnostics(ContainerGroupDiagnostics diagnostics) {
        this.innerModel().withDiagnostics(diagnostics);
        return this;
    }

    public ContainerGroupImpl withNetworkProfile(ContainerGroupNetworkProfile networkProfile) {
        this.innerModel().withNetworkProfile(networkProfile);
        return this;
    }

    public ContainerGroupImpl withDnsConfig(DnsConfiguration dnsConfig) {
        this.innerModel().withDnsConfig(dnsConfig);
        return this;
    }

    public ContainerGroupImpl withSku(ContainerGroupSku sku) {
        this.innerModel().withSku(sku);
        return this;
    }

    public ContainerGroupImpl withEncryptionProperties(EncryptionProperties encryptionProperties) {
        this.innerModel().withEncryptionProperties(encryptionProperties);
        return this;
    }

    public ContainerGroupImpl withInitContainers(List<InitContainerDefinition> initContainers) {
        this.innerModel().withInitContainers(initContainers);
        return this;
    }
}
