// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerinstance.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.containerinstance.generated.ContainerInstanceManager;
import com.azure.resourcemanager.containerinstance.generated.fluent.LocationsClient;
import com.azure.resourcemanager.containerinstance.generated.fluent.models.CachedImagesInner;
import com.azure.resourcemanager.containerinstance.generated.fluent.models.CapabilitiesInner;
import com.azure.resourcemanager.containerinstance.generated.fluent.models.UsageInner;
import com.azure.resourcemanager.containerinstance.generated.models.CachedImages;
import com.azure.resourcemanager.containerinstance.generated.models.Capabilities;
import com.azure.resourcemanager.containerinstance.generated.models.Locations;
import com.azure.resourcemanager.containerinstance.generated.models.Usage;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class LocationsImpl implements Locations {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(LocationsImpl.class);

    private final LocationsClient innerClient;

    private final ContainerInstanceManager serviceManager;

    public LocationsImpl(LocationsClient innerClient, ContainerInstanceManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<Usage> listUsage(String location) {
        PagedIterable<UsageInner> inner = this.serviceClient().listUsage(location);
        return inner.mapPage(inner1 -> new UsageImpl(inner1, this.manager()));
    }

    public PagedIterable<Usage> listUsage(String location, Context context) {
        PagedIterable<UsageInner> inner = this.serviceClient().listUsage(location, context);
        return inner.mapPage(inner1 -> new UsageImpl(inner1, this.manager()));
    }

    public PagedIterable<CachedImages> listCachedImages(String location) {
        PagedIterable<CachedImagesInner> inner = this.serviceClient().listCachedImages(location);
        return inner.mapPage(inner1 -> new CachedImagesImpl(inner1, this.manager()));
    }

    public PagedIterable<CachedImages> listCachedImages(String location, Context context) {
        PagedIterable<CachedImagesInner> inner = this.serviceClient().listCachedImages(location, context);
        return inner.mapPage(inner1 -> new CachedImagesImpl(inner1, this.manager()));
    }

    public PagedIterable<Capabilities> listCapabilities(String location) {
        PagedIterable<CapabilitiesInner> inner = this.serviceClient().listCapabilities(location);
        return inner.mapPage(inner1 -> new CapabilitiesImpl(inner1, this.manager()));
    }

    public PagedIterable<Capabilities> listCapabilities(String location, Context context) {
        PagedIterable<CapabilitiesInner> inner = this.serviceClient().listCapabilities(location, context);
        return inner.mapPage(inner1 -> new CapabilitiesImpl(inner1, this.manager()));
    }

    private LocationsClient serviceClient() {
        return this.innerClient;
    }

    private ContainerInstanceManager manager() {
        return this.serviceManager;
    }
}
