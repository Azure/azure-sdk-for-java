// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.softwareplan.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.softwareplan.models.ProvisioningState;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** Hybrid use benefit properties. */
@Immutable
public final class HybridUseBenefitProperties {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(HybridUseBenefitProperties.class);

    /*
     * Provisioning state
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /*
     * Created date
     */
    @JsonProperty(value = "createdDate", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime createdDate;

    /*
     * Last updated date
     */
    @JsonProperty(value = "lastUpdatedDate", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime lastUpdatedDate;

    /**
     * Get the provisioningState property: Provisioning state.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the createdDate property: Created date.
     *
     * @return the createdDate value.
     */
    public OffsetDateTime createdDate() {
        return this.createdDate;
    }

    /**
     * Get the lastUpdatedDate property: Last updated date.
     *
     * @return the lastUpdatedDate value.
     */
    public OffsetDateTime lastUpdatedDate() {
        return this.lastUpdatedDate;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
