// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.softwareplan.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.softwareplan.models.ProvisioningState;
import com.azure.resourcemanager.softwareplan.models.Sku;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** Response on GET of a hybrid use benefit. */
@Fluent
public final class HybridUseBenefitModelInner extends ProxyResource {
    /*
     * Hybrid use benefit SKU
     */
    @JsonProperty(value = "sku", required = true)
    private Sku sku;

    /*
     * Indicates the revision of the hybrid use benefit
     */
    @JsonProperty(value = "etag", access = JsonProperty.Access.WRITE_ONLY)
    private Integer etag;

    /*
     * Property bag for a hybrid use benefit response
     */
    @JsonProperty(value = "properties")
    private HybridUseBenefitProperties innerProperties;

    /** Creates an instance of HybridUseBenefitModelInner class. */
    public HybridUseBenefitModelInner() {
    }

    /**
     * Get the sku property: Hybrid use benefit SKU.
     *
     * @return the sku value.
     */
    public Sku sku() {
        return this.sku;
    }

    /**
     * Set the sku property: Hybrid use benefit SKU.
     *
     * @param sku the sku value to set.
     * @return the HybridUseBenefitModelInner object itself.
     */
    public HybridUseBenefitModelInner withSku(Sku sku) {
        this.sku = sku;
        return this;
    }

    /**
     * Get the etag property: Indicates the revision of the hybrid use benefit.
     *
     * @return the etag value.
     */
    public Integer etag() {
        return this.etag;
    }

    /**
     * Get the innerProperties property: Property bag for a hybrid use benefit response.
     *
     * @return the innerProperties value.
     */
    private HybridUseBenefitProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the provisioningState property: Provisioning state.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Get the createdDate property: Created date.
     *
     * @return the createdDate value.
     */
    public OffsetDateTime createdDate() {
        return this.innerProperties() == null ? null : this.innerProperties().createdDate();
    }

    /**
     * Get the lastUpdatedDate property: Last updated date.
     *
     * @return the lastUpdatedDate value.
     */
    public OffsetDateTime lastUpdatedDate() {
        return this.innerProperties() == null ? null : this.innerProperties().lastUpdatedDate();
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (sku() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property sku in model HybridUseBenefitModelInner"));
        } else {
            sku().validate();
        }
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(HybridUseBenefitModelInner.class);
}
