// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.softwareplan.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.softwareplan.fluent.models.HybridUseBenefitModelInner;
import java.time.OffsetDateTime;

/** An immutable client-side representation of HybridUseBenefitModel. */
public interface HybridUseBenefitModel {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the sku property: Hybrid use benefit SKU.
     *
     * @return the sku value.
     */
    Sku sku();

    /**
     * Gets the etag property: Indicates the revision of the hybrid use benefit.
     *
     * @return the etag value.
     */
    Integer etag();

    /**
     * Gets the provisioningState property: Provisioning state.
     *
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the createdDate property: Created date.
     *
     * @return the createdDate value.
     */
    OffsetDateTime createdDate();

    /**
     * Gets the lastUpdatedDate property: Last updated date.
     *
     * @return the lastUpdatedDate value.
     */
    OffsetDateTime lastUpdatedDate();

    /**
     * Gets the inner com.azure.resourcemanager.softwareplan.fluent.models.HybridUseBenefitModelInner object.
     *
     * @return the inner object.
     */
    HybridUseBenefitModelInner innerModel();

    /** The entirety of the HybridUseBenefitModel definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithScope,
            DefinitionStages.WithSku,
            DefinitionStages.WithCreate {
    }
    /** The HybridUseBenefitModel definition stages. */
    interface DefinitionStages {
        /** The first stage of the HybridUseBenefitModel definition. */
        interface Blank extends WithScope {
        }
        /** The stage of the HybridUseBenefitModel definition allowing to specify parent resource. */
        interface WithScope {
            /**
             * Specifies scope.
             *
             * @param scope The scope at which the operation is performed. This is limited to
             *     Microsoft.Compute/virtualMachines and Microsoft.Compute/hostGroups/hosts for now.
             * @return the next definition stage.
             */
            WithSku withExistingScope(String scope);
        }
        /** The stage of the HybridUseBenefitModel definition allowing to specify sku. */
        interface WithSku {
            /**
             * Specifies the sku property: Hybrid use benefit SKU.
             *
             * @param sku Hybrid use benefit SKU.
             * @return the next definition stage.
             */
            WithCreate withSku(Sku sku);
        }
        /**
         * The stage of the HybridUseBenefitModel definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            HybridUseBenefitModel create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            HybridUseBenefitModel create(Context context);
        }
    }
    /**
     * Begins update for the HybridUseBenefitModel resource.
     *
     * @return the stage of resource update.
     */
    HybridUseBenefitModel.Update update();

    /** The template for HybridUseBenefitModel update. */
    interface Update extends UpdateStages.WithSku {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        HybridUseBenefitModel apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        HybridUseBenefitModel apply(Context context);
    }
    /** The HybridUseBenefitModel update stages. */
    interface UpdateStages {
        /** The stage of the HybridUseBenefitModel update allowing to specify sku. */
        interface WithSku {
            /**
             * Specifies the sku property: Hybrid use benefit SKU.
             *
             * @param sku Hybrid use benefit SKU.
             * @return the next definition stage.
             */
            Update withSku(Sku sku);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    HybridUseBenefitModel refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    HybridUseBenefitModel refresh(Context context);
}
