// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.batchai.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** An environment variable with secret value definition. */
@Fluent
public final class EnvironmentVariableWithSecretValue {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(EnvironmentVariableWithSecretValue.class);

    /*
     * The name of the environment variable to store the secret value.
     */
    @JsonProperty(value = "name", required = true)
    private String name;

    /*
     * The value of the environment variable. This value will never be reported
     * back by Batch AI.
     */
    @JsonProperty(value = "value")
    private String value;

    /*
     * KeyVault store and secret which contains the value for the environment
     * variable. One of value or valueSecretReference must be provided.
     */
    @JsonProperty(value = "valueSecretReference")
    private KeyVaultSecretReference valueSecretReference;

    /**
     * Get the name property: The name of the environment variable to store the secret value.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: The name of the environment variable to store the secret value.
     *
     * @param name the name value to set.
     * @return the EnvironmentVariableWithSecretValue object itself.
     */
    public EnvironmentVariableWithSecretValue withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the value property: The value of the environment variable. This value will never be reported back by Batch
     * AI.
     *
     * @return the value value.
     */
    public String value() {
        return this.value;
    }

    /**
     * Set the value property: The value of the environment variable. This value will never be reported back by Batch
     * AI.
     *
     * @param value the value value to set.
     * @return the EnvironmentVariableWithSecretValue object itself.
     */
    public EnvironmentVariableWithSecretValue withValue(String value) {
        this.value = value;
        return this;
    }

    /**
     * Get the valueSecretReference property: KeyVault store and secret which contains the value for the environment
     * variable. One of value or valueSecretReference must be provided.
     *
     * @return the valueSecretReference value.
     */
    public KeyVaultSecretReference valueSecretReference() {
        return this.valueSecretReference;
    }

    /**
     * Set the valueSecretReference property: KeyVault store and secret which contains the value for the environment
     * variable. One of value or valueSecretReference must be provided.
     *
     * @param valueSecretReference the valueSecretReference value to set.
     * @return the EnvironmentVariableWithSecretValue object itself.
     */
    public EnvironmentVariableWithSecretValue withValueSecretReference(KeyVaultSecretReference valueSecretReference) {
        this.valueSecretReference = valueSecretReference;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (name() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property name in model EnvironmentVariableWithSecretValue"));
        }
        if (valueSecretReference() != null) {
            valueSecretReference().validate();
        }
    }
}
