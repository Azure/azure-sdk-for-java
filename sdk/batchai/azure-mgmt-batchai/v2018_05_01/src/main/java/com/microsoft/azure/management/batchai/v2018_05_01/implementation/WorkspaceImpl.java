/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.batchai.v2018_05_01.implementation;

import com.microsoft.azure.arm.resources.models.implementation.GroupableResourceCoreImpl;
import com.microsoft.azure.management.batchai.v2018_05_01.Workspace;
import rx.Observable;
import com.microsoft.azure.management.batchai.v2018_05_01.WorkspaceCreateParameters;
import org.joda.time.DateTime;
import com.microsoft.azure.management.batchai.v2018_05_01.ProvisioningState;
import rx.functions.Func1;

class WorkspaceImpl extends GroupableResourceCoreImpl<Workspace, WorkspaceInner, WorkspaceImpl, BatchAIManager> implements Workspace, Workspace.Definition, Workspace.Update {
    private WorkspaceCreateParameters createOrUpdateParameter;
    WorkspaceImpl(String name, WorkspaceInner inner, BatchAIManager manager) {
        super(name, inner, manager);
        this.createOrUpdateParameter = new WorkspaceCreateParameters();
    }

    @Override
    public Observable<Workspace> createResourceAsync() {
        WorkspacesInner client = this.manager().inner().workspaces();
        this.createOrUpdateParameter.withLocation(inner().location());
        this.createOrUpdateParameter.withTags(inner().getTags());
        return client.createAsync(this.resourceGroupName(), this.name(), this.createOrUpdateParameter)
            .map(new Func1<WorkspaceInner, WorkspaceInner>() {
               @Override
               public WorkspaceInner call(WorkspaceInner resource) {
                   resetCreateUpdateParameters();
                   return resource;
               }
            })
            .map(innerToFluentMap(this));
    }

    @Override
    public Observable<Workspace> updateResourceAsync() {
        WorkspacesInner client = this.manager().inner().workspaces();
        return client.createAsync(this.resourceGroupName(), this.name(), this.createOrUpdateParameter)
            .map(new Func1<WorkspaceInner, WorkspaceInner>() {
               @Override
               public WorkspaceInner call(WorkspaceInner resource) {
                   resetCreateUpdateParameters();
                   return resource;
               }
            })
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<WorkspaceInner> getInnerAsync() {
        WorkspacesInner client = this.manager().inner().workspaces();
        return client.getByResourceGroupAsync(this.resourceGroupName(), this.name());
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }

    private void resetCreateUpdateParameters() {
        this.createOrUpdateParameter = new WorkspaceCreateParameters();
    }

    @Override
    public DateTime creationTime() {
        return this.inner().creationTime();
    }

    @Override
    public ProvisioningState provisioningState() {
        return this.inner().provisioningState();
    }

    @Override
    public DateTime provisioningStateTransitionTime() {
        return this.inner().provisioningStateTransitionTime();
    }

}
