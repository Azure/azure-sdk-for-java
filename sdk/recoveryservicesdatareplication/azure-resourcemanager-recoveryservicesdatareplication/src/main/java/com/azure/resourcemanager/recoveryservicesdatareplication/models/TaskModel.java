// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.recoveryservicesdatareplication.fluent.models.WorkflowModelInner;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;

/** Task model. */
@Fluent
public final class TaskModel {
    /*
     * Gets or sets the task name.
     */
    @JsonProperty(value = "taskName", access = JsonProperty.Access.WRITE_ONLY)
    private String taskName;

    /*
     * Gets or sets the task state.
     */
    @JsonProperty(value = "state", access = JsonProperty.Access.WRITE_ONLY)
    private TaskState state;

    /*
     * Gets or sets the start time.
     */
    @JsonProperty(value = "startTime", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime startTime;

    /*
     * Gets or sets the end time.
     */
    @JsonProperty(value = "endTime", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime endTime;

    /*
     * Task model custom properties.
     */
    @JsonProperty(value = "customProperties")
    private TaskModelCustomProperties customProperties;

    /*
     * Gets or sets the list of children workflow models.
     */
    @JsonProperty(value = "childrenWorkflows")
    private List<WorkflowModelInner> childrenWorkflows;

    /** Creates an instance of TaskModel class. */
    public TaskModel() {
    }

    /**
     * Get the taskName property: Gets or sets the task name.
     *
     * @return the taskName value.
     */
    public String taskName() {
        return this.taskName;
    }

    /**
     * Get the state property: Gets or sets the task state.
     *
     * @return the state value.
     */
    public TaskState state() {
        return this.state;
    }

    /**
     * Get the startTime property: Gets or sets the start time.
     *
     * @return the startTime value.
     */
    public OffsetDateTime startTime() {
        return this.startTime;
    }

    /**
     * Get the endTime property: Gets or sets the end time.
     *
     * @return the endTime value.
     */
    public OffsetDateTime endTime() {
        return this.endTime;
    }

    /**
     * Get the customProperties property: Task model custom properties.
     *
     * @return the customProperties value.
     */
    public TaskModelCustomProperties customProperties() {
        return this.customProperties;
    }

    /**
     * Set the customProperties property: Task model custom properties.
     *
     * @param customProperties the customProperties value to set.
     * @return the TaskModel object itself.
     */
    public TaskModel withCustomProperties(TaskModelCustomProperties customProperties) {
        this.customProperties = customProperties;
        return this;
    }

    /**
     * Get the childrenWorkflows property: Gets or sets the list of children workflow models.
     *
     * @return the childrenWorkflows value.
     */
    public List<WorkflowModelInner> childrenWorkflows() {
        return this.childrenWorkflows;
    }

    /**
     * Set the childrenWorkflows property: Gets or sets the list of children workflow models.
     *
     * @param childrenWorkflows the childrenWorkflows value to set.
     * @return the TaskModel object itself.
     */
    public TaskModel withChildrenWorkflows(List<WorkflowModelInner> childrenWorkflows) {
        this.childrenWorkflows = childrenWorkflows;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (customProperties() != null) {
            customProperties().validate();
        }
        if (childrenWorkflows() != null) {
            childrenWorkflows().forEach(e -> e.validate());
        }
    }
}
