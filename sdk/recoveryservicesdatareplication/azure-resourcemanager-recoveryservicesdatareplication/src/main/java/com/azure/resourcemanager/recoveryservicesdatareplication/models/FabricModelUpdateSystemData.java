// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;

/**
 * The FabricModelUpdateSystemData model.
 */
@Fluent
public final class FabricModelUpdateSystemData extends SystemDataModel {
    /**
     * Creates an instance of FabricModelUpdateSystemData class.
     */
    public FabricModelUpdateSystemData() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FabricModelUpdateSystemData withCreatedBy(String createdBy) {
        super.withCreatedBy(createdBy);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FabricModelUpdateSystemData withCreatedByType(String createdByType) {
        super.withCreatedByType(createdByType);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FabricModelUpdateSystemData withCreatedAt(OffsetDateTime createdAt) {
        super.withCreatedAt(createdAt);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FabricModelUpdateSystemData withLastModifiedBy(String lastModifiedBy) {
        super.withLastModifiedBy(lastModifiedBy);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FabricModelUpdateSystemData withLastModifiedByType(String lastModifiedByType) {
        super.withLastModifiedByType(lastModifiedByType);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FabricModelUpdateSystemData withLastModifiedAt(OffsetDateTime lastModifiedAt) {
        super.withLastModifiedAt(lastModifiedAt);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("createdBy", createdBy());
        jsonWriter.writeStringField("createdByType", createdByType());
        jsonWriter.writeStringField("createdAt",
            createdAt() == null ? null : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(createdAt()));
        jsonWriter.writeStringField("lastModifiedBy", lastModifiedBy());
        jsonWriter.writeStringField("lastModifiedByType", lastModifiedByType());
        jsonWriter.writeStringField("lastModifiedAt",
            lastModifiedAt() == null ? null : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(lastModifiedAt()));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of FabricModelUpdateSystemData from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of FabricModelUpdateSystemData if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the FabricModelUpdateSystemData.
     */
    public static FabricModelUpdateSystemData fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            FabricModelUpdateSystemData deserializedFabricModelUpdateSystemData = new FabricModelUpdateSystemData();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("createdBy".equals(fieldName)) {
                    deserializedFabricModelUpdateSystemData.withCreatedBy(reader.getString());
                } else if ("createdByType".equals(fieldName)) {
                    deserializedFabricModelUpdateSystemData.withCreatedByType(reader.getString());
                } else if ("createdAt".equals(fieldName)) {
                    deserializedFabricModelUpdateSystemData.withCreatedAt(reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString())));
                } else if ("lastModifiedBy".equals(fieldName)) {
                    deserializedFabricModelUpdateSystemData.withLastModifiedBy(reader.getString());
                } else if ("lastModifiedByType".equals(fieldName)) {
                    deserializedFabricModelUpdateSystemData.withLastModifiedByType(reader.getString());
                } else if ("lastModifiedAt".equals(fieldName)) {
                    deserializedFabricModelUpdateSystemData.withLastModifiedAt(reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString())));
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedFabricModelUpdateSystemData;
        });
    }
}
