// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Represents private endpoint connection proxy request.
 */
@Fluent
public final class PrivateEndpointConnectionProxyProperties
    implements JsonSerializable<PrivateEndpointConnectionProxyProperties> {
    /*
     * Gets or sets the provisioning state of the private endpoint connection proxy.
     */
    private ProvisioningState provisioningState;

    /*
     * Represent remote private endpoint information for the private endpoint connection proxy.
     */
    private RemotePrivateEndpoint remotePrivateEndpoint;

    /**
     * Creates an instance of PrivateEndpointConnectionProxyProperties class.
     */
    public PrivateEndpointConnectionProxyProperties() {
    }

    /**
     * Get the provisioningState property: Gets or sets the provisioning state of the private endpoint connection proxy.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the remotePrivateEndpoint property: Represent remote private endpoint information for the private endpoint
     * connection proxy.
     * 
     * @return the remotePrivateEndpoint value.
     */
    public RemotePrivateEndpoint remotePrivateEndpoint() {
        return this.remotePrivateEndpoint;
    }

    /**
     * Set the remotePrivateEndpoint property: Represent remote private endpoint information for the private endpoint
     * connection proxy.
     * 
     * @param remotePrivateEndpoint the remotePrivateEndpoint value to set.
     * @return the PrivateEndpointConnectionProxyProperties object itself.
     */
    public PrivateEndpointConnectionProxyProperties
        withRemotePrivateEndpoint(RemotePrivateEndpoint remotePrivateEndpoint) {
        this.remotePrivateEndpoint = remotePrivateEndpoint;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (remotePrivateEndpoint() != null) {
            remotePrivateEndpoint().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("remotePrivateEndpoint", this.remotePrivateEndpoint);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of PrivateEndpointConnectionProxyProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of PrivateEndpointConnectionProxyProperties if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the PrivateEndpointConnectionProxyProperties.
     */
    public static PrivateEndpointConnectionProxyProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            PrivateEndpointConnectionProxyProperties deserializedPrivateEndpointConnectionProxyProperties
                = new PrivateEndpointConnectionProxyProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("provisioningState".equals(fieldName)) {
                    deserializedPrivateEndpointConnectionProxyProperties.provisioningState
                        = ProvisioningState.fromString(reader.getString());
                } else if ("remotePrivateEndpoint".equals(fieldName)) {
                    deserializedPrivateEndpointConnectionProxyProperties.remotePrivateEndpoint
                        = RemotePrivateEndpoint.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedPrivateEndpointConnectionProxyProperties;
        });
    }
}
