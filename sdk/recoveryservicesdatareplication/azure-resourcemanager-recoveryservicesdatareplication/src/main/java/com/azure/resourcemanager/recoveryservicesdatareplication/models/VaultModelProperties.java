// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Vault properties. */
@Fluent
public final class VaultModelProperties {
    /*
     * Gets or sets the provisioning state of the vault.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /*
     * Gets or sets the service resource Id.
     */
    @JsonProperty(value = "serviceResourceId", access = JsonProperty.Access.WRITE_ONLY)
    private String serviceResourceId;

    /*
     * Gets or sets the type of vault.
     */
    @JsonProperty(value = "vaultType")
    private ReplicationVaultType vaultType;

    /** Creates an instance of VaultModelProperties class. */
    public VaultModelProperties() {
    }

    /**
     * Get the provisioningState property: Gets or sets the provisioning state of the vault.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the serviceResourceId property: Gets or sets the service resource Id.
     *
     * @return the serviceResourceId value.
     */
    public String serviceResourceId() {
        return this.serviceResourceId;
    }

    /**
     * Get the vaultType property: Gets or sets the type of vault.
     *
     * @return the vaultType value.
     */
    public ReplicationVaultType vaultType() {
        return this.vaultType;
    }

    /**
     * Set the vaultType property: Gets or sets the type of vault.
     *
     * @param vaultType the vaultType value to set.
     * @return the VaultModelProperties object itself.
     */
    public VaultModelProperties withVaultType(ReplicationVaultType vaultType) {
        this.vaultType = vaultType;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
