// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * VMware DRA model custom properties.
 */
@Fluent
public final class VMwareDraModelCustomProperties extends DraModelCustomProperties {
    /*
     * Gets or sets the instance type.
     */
    private String instanceType = "VMware";

    /*
     * Gets or sets the BIOS Id of the DRA machine.
     */
    private String biosId;

    /*
     * Identity model.
     */
    private IdentityModel marsAuthenticationIdentity;

    /**
     * Creates an instance of VMwareDraModelCustomProperties class.
     */
    public VMwareDraModelCustomProperties() {
    }

    /**
     * Get the instanceType property: Gets or sets the instance type.
     * 
     * @return the instanceType value.
     */
    @Override
    public String instanceType() {
        return this.instanceType;
    }

    /**
     * Get the biosId property: Gets or sets the BIOS Id of the DRA machine.
     * 
     * @return the biosId value.
     */
    public String biosId() {
        return this.biosId;
    }

    /**
     * Set the biosId property: Gets or sets the BIOS Id of the DRA machine.
     * 
     * @param biosId the biosId value to set.
     * @return the VMwareDraModelCustomProperties object itself.
     */
    public VMwareDraModelCustomProperties withBiosId(String biosId) {
        this.biosId = biosId;
        return this;
    }

    /**
     * Get the marsAuthenticationIdentity property: Identity model.
     * 
     * @return the marsAuthenticationIdentity value.
     */
    public IdentityModel marsAuthenticationIdentity() {
        return this.marsAuthenticationIdentity;
    }

    /**
     * Set the marsAuthenticationIdentity property: Identity model.
     * 
     * @param marsAuthenticationIdentity the marsAuthenticationIdentity value to set.
     * @return the VMwareDraModelCustomProperties object itself.
     */
    public VMwareDraModelCustomProperties withMarsAuthenticationIdentity(IdentityModel marsAuthenticationIdentity) {
        this.marsAuthenticationIdentity = marsAuthenticationIdentity;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        if (biosId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property biosId in model VMwareDraModelCustomProperties"));
        }
        if (marsAuthenticationIdentity() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property marsAuthenticationIdentity in model VMwareDraModelCustomProperties"));
        } else {
            marsAuthenticationIdentity().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(VMwareDraModelCustomProperties.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("biosId", this.biosId);
        jsonWriter.writeJsonField("marsAuthenticationIdentity", this.marsAuthenticationIdentity);
        jsonWriter.writeStringField("instanceType", this.instanceType);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of VMwareDraModelCustomProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of VMwareDraModelCustomProperties if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the VMwareDraModelCustomProperties.
     */
    public static VMwareDraModelCustomProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            VMwareDraModelCustomProperties deserializedVMwareDraModelCustomProperties
                = new VMwareDraModelCustomProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("biosId".equals(fieldName)) {
                    deserializedVMwareDraModelCustomProperties.biosId = reader.getString();
                } else if ("marsAuthenticationIdentity".equals(fieldName)) {
                    deserializedVMwareDraModelCustomProperties.marsAuthenticationIdentity
                        = IdentityModel.fromJson(reader);
                } else if ("instanceType".equals(fieldName)) {
                    deserializedVMwareDraModelCustomProperties.instanceType = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedVMwareDraModelCustomProperties;
        });
    }
}
