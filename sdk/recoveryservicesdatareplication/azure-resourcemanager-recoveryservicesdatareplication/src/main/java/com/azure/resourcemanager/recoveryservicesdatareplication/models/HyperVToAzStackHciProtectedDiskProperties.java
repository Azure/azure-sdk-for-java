// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;

/** HyperVToAzStackHCI protected disk properties. */
@Immutable
public final class HyperVToAzStackHciProtectedDiskProperties {
    /*
     * Gets or sets the ARM Id of the storage container.
     */
    @JsonProperty(value = "storageContainerId", access = JsonProperty.Access.WRITE_ONLY)
    private String storageContainerId;

    /*
     * Gets or sets the local path of the storage container.
     */
    @JsonProperty(value = "storageContainerLocalPath", access = JsonProperty.Access.WRITE_ONLY)
    private String storageContainerLocalPath;

    /*
     * Gets or sets the source disk Id.
     */
    @JsonProperty(value = "sourceDiskId", access = JsonProperty.Access.WRITE_ONLY)
    private String sourceDiskId;

    /*
     * Gets or sets the source disk Name.
     */
    @JsonProperty(value = "sourceDiskName", access = JsonProperty.Access.WRITE_ONLY)
    private String sourceDiskName;

    /*
     * Gets or sets the seed disk name.
     */
    @JsonProperty(value = "seedDiskName", access = JsonProperty.Access.WRITE_ONLY)
    private String seedDiskName;

    /*
     * Gets or sets the test failover clone disk.
     */
    @JsonProperty(value = "testMigrateDiskName", access = JsonProperty.Access.WRITE_ONLY)
    private String testMigrateDiskName;

    /*
     * Gets or sets the failover clone disk.
     */
    @JsonProperty(value = "migrateDiskName", access = JsonProperty.Access.WRITE_ONLY)
    private String migrateDiskName;

    /*
     * Gets or sets a value indicating whether the disk is the OS disk.
     */
    @JsonProperty(value = "isOsDisk", access = JsonProperty.Access.WRITE_ONLY)
    private Boolean isOsDisk;

    /*
     * Gets or sets the disk capacity in bytes.
     */
    @JsonProperty(value = "capacityInBytes", access = JsonProperty.Access.WRITE_ONLY)
    private Long capacityInBytes;

    /*
     * Gets or sets a value indicating whether dynamic sizing is enabled on the virtual hard
     * disk.
     */
    @JsonProperty(value = "isDynamic", access = JsonProperty.Access.WRITE_ONLY)
    private Boolean isDynamic;

    /*
     * Gets or sets the disk type.
     */
    @JsonProperty(value = "diskType", access = JsonProperty.Access.WRITE_ONLY)
    private String diskType;

    /** Creates an instance of HyperVToAzStackHciProtectedDiskProperties class. */
    public HyperVToAzStackHciProtectedDiskProperties() {
    }

    /**
     * Get the storageContainerId property: Gets or sets the ARM Id of the storage container.
     *
     * @return the storageContainerId value.
     */
    public String storageContainerId() {
        return this.storageContainerId;
    }

    /**
     * Get the storageContainerLocalPath property: Gets or sets the local path of the storage container.
     *
     * @return the storageContainerLocalPath value.
     */
    public String storageContainerLocalPath() {
        return this.storageContainerLocalPath;
    }

    /**
     * Get the sourceDiskId property: Gets or sets the source disk Id.
     *
     * @return the sourceDiskId value.
     */
    public String sourceDiskId() {
        return this.sourceDiskId;
    }

    /**
     * Get the sourceDiskName property: Gets or sets the source disk Name.
     *
     * @return the sourceDiskName value.
     */
    public String sourceDiskName() {
        return this.sourceDiskName;
    }

    /**
     * Get the seedDiskName property: Gets or sets the seed disk name.
     *
     * @return the seedDiskName value.
     */
    public String seedDiskName() {
        return this.seedDiskName;
    }

    /**
     * Get the testMigrateDiskName property: Gets or sets the test failover clone disk.
     *
     * @return the testMigrateDiskName value.
     */
    public String testMigrateDiskName() {
        return this.testMigrateDiskName;
    }

    /**
     * Get the migrateDiskName property: Gets or sets the failover clone disk.
     *
     * @return the migrateDiskName value.
     */
    public String migrateDiskName() {
        return this.migrateDiskName;
    }

    /**
     * Get the isOsDisk property: Gets or sets a value indicating whether the disk is the OS disk.
     *
     * @return the isOsDisk value.
     */
    public Boolean isOsDisk() {
        return this.isOsDisk;
    }

    /**
     * Get the capacityInBytes property: Gets or sets the disk capacity in bytes.
     *
     * @return the capacityInBytes value.
     */
    public Long capacityInBytes() {
        return this.capacityInBytes;
    }

    /**
     * Get the isDynamic property: Gets or sets a value indicating whether dynamic sizing is enabled on the virtual hard
     * disk.
     *
     * @return the isDynamic value.
     */
    public Boolean isDynamic() {
        return this.isDynamic;
    }

    /**
     * Get the diskType property: Gets or sets the disk type.
     *
     * @return the diskType value.
     */
    public String diskType() {
        return this.diskType;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
