// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/** HyperV migrate fabric model custom properties. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "instanceType")
@JsonTypeName("HyperVMigrate")
@Fluent
public final class HyperVMigrateFabricModelCustomProperties extends FabricModelCustomProperties {
    /*
     * Gets or sets the ARM Id of the HyperV site.
     */
    @JsonProperty(value = "hyperVSiteId", required = true)
    private String hyperVSiteId;

    /*
     * Gets or sets the fabric resource Id.
     */
    @JsonProperty(value = "fabricResourceId", access = JsonProperty.Access.WRITE_ONLY)
    private String fabricResourceId;

    /*
     * Gets or sets the fabric container Id.
     */
    @JsonProperty(value = "fabricContainerId", access = JsonProperty.Access.WRITE_ONLY)
    private String fabricContainerId;

    /*
     * Gets or sets the migration solution ARM Id.
     */
    @JsonProperty(value = "migrationSolutionId", required = true)
    private String migrationSolutionId;

    /*
     * Gets or sets the migration hub Uri.
     */
    @JsonProperty(value = "migrationHubUri", access = JsonProperty.Access.WRITE_ONLY)
    private String migrationHubUri;

    /** Creates an instance of HyperVMigrateFabricModelCustomProperties class. */
    public HyperVMigrateFabricModelCustomProperties() {
    }

    /**
     * Get the hyperVSiteId property: Gets or sets the ARM Id of the HyperV site.
     *
     * @return the hyperVSiteId value.
     */
    public String hyperVSiteId() {
        return this.hyperVSiteId;
    }

    /**
     * Set the hyperVSiteId property: Gets or sets the ARM Id of the HyperV site.
     *
     * @param hyperVSiteId the hyperVSiteId value to set.
     * @return the HyperVMigrateFabricModelCustomProperties object itself.
     */
    public HyperVMigrateFabricModelCustomProperties withHyperVSiteId(String hyperVSiteId) {
        this.hyperVSiteId = hyperVSiteId;
        return this;
    }

    /**
     * Get the fabricResourceId property: Gets or sets the fabric resource Id.
     *
     * @return the fabricResourceId value.
     */
    public String fabricResourceId() {
        return this.fabricResourceId;
    }

    /**
     * Get the fabricContainerId property: Gets or sets the fabric container Id.
     *
     * @return the fabricContainerId value.
     */
    public String fabricContainerId() {
        return this.fabricContainerId;
    }

    /**
     * Get the migrationSolutionId property: Gets or sets the migration solution ARM Id.
     *
     * @return the migrationSolutionId value.
     */
    public String migrationSolutionId() {
        return this.migrationSolutionId;
    }

    /**
     * Set the migrationSolutionId property: Gets or sets the migration solution ARM Id.
     *
     * @param migrationSolutionId the migrationSolutionId value to set.
     * @return the HyperVMigrateFabricModelCustomProperties object itself.
     */
    public HyperVMigrateFabricModelCustomProperties withMigrationSolutionId(String migrationSolutionId) {
        this.migrationSolutionId = migrationSolutionId;
        return this;
    }

    /**
     * Get the migrationHubUri property: Gets or sets the migration hub Uri.
     *
     * @return the migrationHubUri value.
     */
    public String migrationHubUri() {
        return this.migrationHubUri;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (hyperVSiteId() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property hyperVSiteId in model HyperVMigrateFabricModelCustomProperties"));
        }
        if (migrationSolutionId() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property migrationSolutionId in model"
                            + " HyperVMigrateFabricModelCustomProperties"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(HyperVMigrateFabricModelCustomProperties.class);
}
