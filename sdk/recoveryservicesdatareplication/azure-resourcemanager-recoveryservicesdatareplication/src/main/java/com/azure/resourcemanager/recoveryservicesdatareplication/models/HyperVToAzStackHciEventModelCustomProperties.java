// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * HyperV to AzStackHCI event model custom properties. This class provides provider specific
 * details for events of type DataContract.HealthEvents.HealthEventType.ProtectedItemHealth and
 * DataContract.HealthEvents.HealthEventType.AgentHealth.
 */
@Immutable
public final class HyperVToAzStackHciEventModelCustomProperties extends EventModelCustomProperties {
    /*
     * Gets or sets the instance type.
     */
    private String instanceType = "HyperVToAzStackHCI";

    /*
     * Gets or sets the friendly name of the source which has raised this health event.
     */
    private String eventSourceFriendlyName;

    /*
     * Gets or sets the protected item friendly name.
     */
    private String protectedItemFriendlyName;

    /*
     * Gets or sets the source appliance name.
     */
    private String sourceApplianceName;

    /*
     * Gets or sets the source target name.
     */
    private String targetApplianceName;

    /*
     * Gets or sets the server type.
     */
    private String serverType;

    /**
     * Creates an instance of HyperVToAzStackHciEventModelCustomProperties class.
     */
    public HyperVToAzStackHciEventModelCustomProperties() {
    }

    /**
     * Get the instanceType property: Gets or sets the instance type.
     * 
     * @return the instanceType value.
     */
    @Override
    public String instanceType() {
        return this.instanceType;
    }

    /**
     * Get the eventSourceFriendlyName property: Gets or sets the friendly name of the source which has raised this
     * health event.
     * 
     * @return the eventSourceFriendlyName value.
     */
    public String eventSourceFriendlyName() {
        return this.eventSourceFriendlyName;
    }

    /**
     * Get the protectedItemFriendlyName property: Gets or sets the protected item friendly name.
     * 
     * @return the protectedItemFriendlyName value.
     */
    public String protectedItemFriendlyName() {
        return this.protectedItemFriendlyName;
    }

    /**
     * Get the sourceApplianceName property: Gets or sets the source appliance name.
     * 
     * @return the sourceApplianceName value.
     */
    public String sourceApplianceName() {
        return this.sourceApplianceName;
    }

    /**
     * Get the targetApplianceName property: Gets or sets the source target name.
     * 
     * @return the targetApplianceName value.
     */
    public String targetApplianceName() {
        return this.targetApplianceName;
    }

    /**
     * Get the serverType property: Gets or sets the server type.
     * 
     * @return the serverType value.
     */
    public String serverType() {
        return this.serverType;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("instanceType", this.instanceType);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of HyperVToAzStackHciEventModelCustomProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of HyperVToAzStackHciEventModelCustomProperties if the JsonReader was pointing to an instance
     * of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the HyperVToAzStackHciEventModelCustomProperties.
     */
    public static HyperVToAzStackHciEventModelCustomProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            HyperVToAzStackHciEventModelCustomProperties deserializedHyperVToAzStackHciEventModelCustomProperties
                = new HyperVToAzStackHciEventModelCustomProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("instanceType".equals(fieldName)) {
                    deserializedHyperVToAzStackHciEventModelCustomProperties.instanceType = reader.getString();
                } else if ("eventSourceFriendlyName".equals(fieldName)) {
                    deserializedHyperVToAzStackHciEventModelCustomProperties.eventSourceFriendlyName
                        = reader.getString();
                } else if ("protectedItemFriendlyName".equals(fieldName)) {
                    deserializedHyperVToAzStackHciEventModelCustomProperties.protectedItemFriendlyName
                        = reader.getString();
                } else if ("sourceApplianceName".equals(fieldName)) {
                    deserializedHyperVToAzStackHciEventModelCustomProperties.sourceApplianceName = reader.getString();
                } else if ("targetApplianceName".equals(fieldName)) {
                    deserializedHyperVToAzStackHciEventModelCustomProperties.targetApplianceName = reader.getString();
                } else if ("serverType".equals(fieldName)) {
                    deserializedHyperVToAzStackHciEventModelCustomProperties.serverType = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedHyperVToAzStackHciEventModelCustomProperties;
        });
    }
}
