// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;

/** Health error model. */
@Fluent
public final class HealthErrorModel {
    /*
     * Gets or sets the type of affected resource type.
     */
    @JsonProperty(value = "affectedResourceType")
    private String affectedResourceType;

    /*
     * Gets or sets the list of affected resource correlation Ids. This can be used to
     * uniquely identify the count of items affected by a specific category and severity
     * as well as count of item affected by an specific issue.
     */
    @JsonProperty(value = "affectedResourceCorrelationIds")
    private List<String> affectedResourceCorrelationIds;

    /*
     * Gets or sets a list of child health errors associated with this error.
     */
    @JsonProperty(value = "childErrors")
    private List<InnerHealthErrorModel> childErrors;

    /*
     * Gets or sets the error code.
     */
    @JsonProperty(value = "code", access = JsonProperty.Access.WRITE_ONLY)
    private String code;

    /*
     * Gets or sets the health category.
     */
    @JsonProperty(value = "healthCategory", access = JsonProperty.Access.WRITE_ONLY)
    private String healthCategory;

    /*
     * Gets or sets the error category.
     */
    @JsonProperty(value = "category", access = JsonProperty.Access.WRITE_ONLY)
    private String category;

    /*
     * Gets or sets the error severity.
     */
    @JsonProperty(value = "severity", access = JsonProperty.Access.WRITE_ONLY)
    private String severity;

    /*
     * Gets or sets the error source.
     */
    @JsonProperty(value = "source", access = JsonProperty.Access.WRITE_ONLY)
    private String source;

    /*
     * Gets or sets the error creation time.
     */
    @JsonProperty(value = "creationTime", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime creationTime;

    /*
     * Gets or sets a value indicating whether the error is customer resolvable.
     */
    @JsonProperty(value = "isCustomerResolvable", access = JsonProperty.Access.WRITE_ONLY)
    private Boolean isCustomerResolvable;

    /*
     * Gets or sets the error summary.
     */
    @JsonProperty(value = "summary", access = JsonProperty.Access.WRITE_ONLY)
    private String summary;

    /*
     * Gets or sets the error message.
     */
    @JsonProperty(value = "message", access = JsonProperty.Access.WRITE_ONLY)
    private String message;

    /*
     * Gets or sets possible causes of the error.
     */
    @JsonProperty(value = "causes", access = JsonProperty.Access.WRITE_ONLY)
    private String causes;

    /*
     * Gets or sets recommended action to resolve the error.
     */
    @JsonProperty(value = "recommendation", access = JsonProperty.Access.WRITE_ONLY)
    private String recommendation;

    /** Creates an instance of HealthErrorModel class. */
    public HealthErrorModel() {
    }

    /**
     * Get the affectedResourceType property: Gets or sets the type of affected resource type.
     *
     * @return the affectedResourceType value.
     */
    public String affectedResourceType() {
        return this.affectedResourceType;
    }

    /**
     * Set the affectedResourceType property: Gets or sets the type of affected resource type.
     *
     * @param affectedResourceType the affectedResourceType value to set.
     * @return the HealthErrorModel object itself.
     */
    public HealthErrorModel withAffectedResourceType(String affectedResourceType) {
        this.affectedResourceType = affectedResourceType;
        return this;
    }

    /**
     * Get the affectedResourceCorrelationIds property: Gets or sets the list of affected resource correlation Ids. This
     * can be used to uniquely identify the count of items affected by a specific category and severity as well as count
     * of item affected by an specific issue.
     *
     * @return the affectedResourceCorrelationIds value.
     */
    public List<String> affectedResourceCorrelationIds() {
        return this.affectedResourceCorrelationIds;
    }

    /**
     * Set the affectedResourceCorrelationIds property: Gets or sets the list of affected resource correlation Ids. This
     * can be used to uniquely identify the count of items affected by a specific category and severity as well as count
     * of item affected by an specific issue.
     *
     * @param affectedResourceCorrelationIds the affectedResourceCorrelationIds value to set.
     * @return the HealthErrorModel object itself.
     */
    public HealthErrorModel withAffectedResourceCorrelationIds(List<String> affectedResourceCorrelationIds) {
        this.affectedResourceCorrelationIds = affectedResourceCorrelationIds;
        return this;
    }

    /**
     * Get the childErrors property: Gets or sets a list of child health errors associated with this error.
     *
     * @return the childErrors value.
     */
    public List<InnerHealthErrorModel> childErrors() {
        return this.childErrors;
    }

    /**
     * Set the childErrors property: Gets or sets a list of child health errors associated with this error.
     *
     * @param childErrors the childErrors value to set.
     * @return the HealthErrorModel object itself.
     */
    public HealthErrorModel withChildErrors(List<InnerHealthErrorModel> childErrors) {
        this.childErrors = childErrors;
        return this;
    }

    /**
     * Get the code property: Gets or sets the error code.
     *
     * @return the code value.
     */
    public String code() {
        return this.code;
    }

    /**
     * Get the healthCategory property: Gets or sets the health category.
     *
     * @return the healthCategory value.
     */
    public String healthCategory() {
        return this.healthCategory;
    }

    /**
     * Get the category property: Gets or sets the error category.
     *
     * @return the category value.
     */
    public String category() {
        return this.category;
    }

    /**
     * Get the severity property: Gets or sets the error severity.
     *
     * @return the severity value.
     */
    public String severity() {
        return this.severity;
    }

    /**
     * Get the source property: Gets or sets the error source.
     *
     * @return the source value.
     */
    public String source() {
        return this.source;
    }

    /**
     * Get the creationTime property: Gets or sets the error creation time.
     *
     * @return the creationTime value.
     */
    public OffsetDateTime creationTime() {
        return this.creationTime;
    }

    /**
     * Get the isCustomerResolvable property: Gets or sets a value indicating whether the error is customer resolvable.
     *
     * @return the isCustomerResolvable value.
     */
    public Boolean isCustomerResolvable() {
        return this.isCustomerResolvable;
    }

    /**
     * Get the summary property: Gets or sets the error summary.
     *
     * @return the summary value.
     */
    public String summary() {
        return this.summary;
    }

    /**
     * Get the message property: Gets or sets the error message.
     *
     * @return the message value.
     */
    public String message() {
        return this.message;
    }

    /**
     * Get the causes property: Gets or sets possible causes of the error.
     *
     * @return the causes value.
     */
    public String causes() {
        return this.causes;
    }

    /**
     * Get the recommendation property: Gets or sets recommended action to resolve the error.
     *
     * @return the recommendation value.
     */
    public String recommendation() {
        return this.recommendation;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (childErrors() != null) {
            childErrors().forEach(e -> e.validate());
        }
    }
}
