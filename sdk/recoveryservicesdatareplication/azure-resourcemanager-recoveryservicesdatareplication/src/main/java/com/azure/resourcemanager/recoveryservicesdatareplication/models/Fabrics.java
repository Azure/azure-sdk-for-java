// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of Fabrics. */
public interface Fabrics {
    /**
     * Gets the fabric.
     *
     * <p>Gets the details of the fabric.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param fabricName The fabric name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the details of the fabric along with {@link Response}.
     */
    Response<FabricModel> getByResourceGroupWithResponse(String resourceGroupName, String fabricName, Context context);

    /**
     * Gets the fabric.
     *
     * <p>Gets the details of the fabric.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param fabricName The fabric name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the details of the fabric.
     */
    FabricModel getByResourceGroup(String resourceGroupName, String fabricName);

    /**
     * Deletes the fabric.
     *
     * <p>Removes the fabric.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param fabricName The fabric name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String fabricName);

    /**
     * Deletes the fabric.
     *
     * <p>Removes the fabric.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param fabricName The fabric name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String fabricName, Context context);

    /**
     * Lists the fabrics.
     *
     * <p>Gets the list of fabrics in the given subscription.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of fabrics in the given subscription as paginated response with {@link PagedIterable}.
     */
    PagedIterable<FabricModel> list();

    /**
     * Lists the fabrics.
     *
     * <p>Gets the list of fabrics in the given subscription.
     *
     * @param continuationToken Continuation token from the previous call.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of fabrics in the given subscription as paginated response with {@link PagedIterable}.
     */
    PagedIterable<FabricModel> list(String continuationToken, Context context);

    /**
     * Lists the fabrics.
     *
     * <p>Gets the list of fabrics in the given subscription and resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of fabrics in the given subscription and resource group as paginated response with {@link
     *     PagedIterable}.
     */
    PagedIterable<FabricModel> listByResourceGroup(String resourceGroupName);

    /**
     * Lists the fabrics.
     *
     * <p>Gets the list of fabrics in the given subscription and resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param continuationToken Continuation token from the previous call.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of fabrics in the given subscription and resource group as paginated response with {@link
     *     PagedIterable}.
     */
    PagedIterable<FabricModel> listByResourceGroup(String resourceGroupName, String continuationToken, Context context);

    /**
     * Gets the fabric.
     *
     * <p>Gets the details of the fabric.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the details of the fabric along with {@link Response}.
     */
    FabricModel getById(String id);

    /**
     * Gets the fabric.
     *
     * <p>Gets the details of the fabric.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the details of the fabric along with {@link Response}.
     */
    Response<FabricModel> getByIdWithResponse(String id, Context context);

    /**
     * Deletes the fabric.
     *
     * <p>Removes the fabric.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes the fabric.
     *
     * <p>Removes the fabric.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new FabricModel resource.
     *
     * @param name resource name.
     * @return the first stage of the new FabricModel definition.
     */
    FabricModel.DefinitionStages.Blank define(String name);
}
