// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.RecoveryPointModelProperties;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.RecoveryPointModelSystemData;
import java.io.IOException;

/**
 * Recovery point model.
 */
@Fluent
public final class RecoveryPointModelInner implements JsonSerializable<RecoveryPointModelInner> {
    /*
     * Recovery point model properties.
     */
    private RecoveryPointModelProperties properties;

    /*
     * Gets or sets the Id of the resource.
     */
    private String id;

    /*
     * Gets or sets the name of the resource.
     */
    private String name;

    /*
     * Gets or sets the type of the resource.
     */
    private String type;

    /*
     * The systemData property.
     */
    private RecoveryPointModelSystemData systemData;

    /**
     * Creates an instance of RecoveryPointModelInner class.
     */
    public RecoveryPointModelInner() {
    }

    /**
     * Get the properties property: Recovery point model properties.
     * 
     * @return the properties value.
     */
    public RecoveryPointModelProperties properties() {
        return this.properties;
    }

    /**
     * Set the properties property: Recovery point model properties.
     * 
     * @param properties the properties value to set.
     * @return the RecoveryPointModelInner object itself.
     */
    public RecoveryPointModelInner withProperties(RecoveryPointModelProperties properties) {
        this.properties = properties;
        return this;
    }

    /**
     * Get the id property: Gets or sets the Id of the resource.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Get the name property: Gets or sets the name of the resource.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the type property: Gets or sets the type of the resource.
     * 
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Get the systemData property: The systemData property.
     * 
     * @return the systemData value.
     */
    public RecoveryPointModelSystemData systemData() {
        return this.systemData;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (properties() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property properties in model RecoveryPointModelInner"));
        } else {
            properties().validate();
        }
        if (systemData() != null) {
            systemData().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(RecoveryPointModelInner.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("properties", this.properties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RecoveryPointModelInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RecoveryPointModelInner if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the RecoveryPointModelInner.
     */
    public static RecoveryPointModelInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RecoveryPointModelInner deserializedRecoveryPointModelInner = new RecoveryPointModelInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("properties".equals(fieldName)) {
                    deserializedRecoveryPointModelInner.properties = RecoveryPointModelProperties.fromJson(reader);
                } else if ("id".equals(fieldName)) {
                    deserializedRecoveryPointModelInner.id = reader.getString();
                } else if ("name".equals(fieldName)) {
                    deserializedRecoveryPointModelInner.name = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedRecoveryPointModelInner.type = reader.getString();
                } else if ("systemData".equals(fieldName)) {
                    deserializedRecoveryPointModelInner.systemData = RecoveryPointModelSystemData.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRecoveryPointModelInner;
        });
    }
}
