// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The JobModelCustomPropertiesAffectedObjectDetails model.
 */
@Immutable
public final class JobModelCustomPropertiesAffectedObjectDetails
    implements JsonSerializable<JobModelCustomPropertiesAffectedObjectDetails> {
    /*
     * The description property.
     */
    private String description;

    /*
     * The type property.
     */
    private JobModelCustomPropertiesAffectedObjectDetailsType type;

    /**
     * Creates an instance of JobModelCustomPropertiesAffectedObjectDetails class.
     */
    private JobModelCustomPropertiesAffectedObjectDetails() {
    }

    /**
     * Get the description property: The description property.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Get the type property: The type property.
     * 
     * @return the type value.
     */
    public JobModelCustomPropertiesAffectedObjectDetailsType type() {
        return this.type;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("description", this.description);
        jsonWriter.writeStringField("type", this.type == null ? null : this.type.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of JobModelCustomPropertiesAffectedObjectDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of JobModelCustomPropertiesAffectedObjectDetails if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the JobModelCustomPropertiesAffectedObjectDetails.
     */
    public static JobModelCustomPropertiesAffectedObjectDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            JobModelCustomPropertiesAffectedObjectDetails deserializedJobModelCustomPropertiesAffectedObjectDetails
                = new JobModelCustomPropertiesAffectedObjectDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("description".equals(fieldName)) {
                    deserializedJobModelCustomPropertiesAffectedObjectDetails.description = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedJobModelCustomPropertiesAffectedObjectDetails.type
                        = JobModelCustomPropertiesAffectedObjectDetailsType.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedJobModelCustomPropertiesAffectedObjectDetails;
        });
    }
}
