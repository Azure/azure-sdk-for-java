// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.recoveryservicesdatareplication.fluent.models.PrivateEndpointConnectionProxyInner;

/**
 * Resource collection API of PrivateEndpointConnProxies.
 */
public interface PrivateEndpointConnProxies {
    /**
     * Gets the private endpoint connection proxy details.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The vault name.
     * @param privateEndpointConnectionProxyName The private endpoint connection proxy name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the private endpoint connection proxy details along with {@link Response}.
     */
    Response<PrivateEndpointConnectionProxy> getWithResponse(String resourceGroupName, String vaultName,
        String privateEndpointConnectionProxyName, Context context);

    /**
     * Gets the private endpoint connection proxy details.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The vault name.
     * @param privateEndpointConnectionProxyName The private endpoint connection proxy name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the private endpoint connection proxy details.
     */
    PrivateEndpointConnectionProxy get(String resourceGroupName, String vaultName,
        String privateEndpointConnectionProxyName);

    /**
     * Returns the operation to track the deletion of private endpoint connection proxy.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The vault name.
     * @param privateEndpointConnectionProxyName The private endpoint connection proxy name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String vaultName, String privateEndpointConnectionProxyName);

    /**
     * Returns the operation to track the deletion of private endpoint connection proxy.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The vault name.
     * @param privateEndpointConnectionProxyName The private endpoint connection proxy name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String vaultName, String privateEndpointConnectionProxyName, Context context);

    /**
     * Gets the all private endpoint connections proxies.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The vault name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the all private endpoint connections proxies as paginated response with {@link PagedIterable}.
     */
    PagedIterable<PrivateEndpointConnectionProxy> list(String resourceGroupName, String vaultName);

    /**
     * Gets the all private endpoint connections proxies.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The vault name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the all private endpoint connections proxies as paginated response with {@link PagedIterable}.
     */
    PagedIterable<PrivateEndpointConnectionProxy> list(String resourceGroupName, String vaultName, Context context);

    /**
     * Returns remote private endpoint connection information after validation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The vault name.
     * @param privateEndpointConnectionProxyName The private endpoint connection proxy name.
     * @param body The private endpoint connection proxy input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents private endpoint connection proxy request along with {@link Response}.
     */
    Response<PrivateEndpointConnectionProxy> validateWithResponse(String resourceGroupName, String vaultName,
        String privateEndpointConnectionProxyName, PrivateEndpointConnectionProxyInner body, Context context);

    /**
     * Returns remote private endpoint connection information after validation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The vault name.
     * @param privateEndpointConnectionProxyName The private endpoint connection proxy name.
     * @param body The private endpoint connection proxy input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents private endpoint connection proxy request.
     */
    PrivateEndpointConnectionProxy validate(String resourceGroupName, String vaultName,
        String privateEndpointConnectionProxyName, PrivateEndpointConnectionProxyInner body);

    /**
     * Gets the private endpoint connection proxy details.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the private endpoint connection proxy details along with {@link Response}.
     */
    PrivateEndpointConnectionProxy getById(String id);

    /**
     * Gets the private endpoint connection proxy details.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the private endpoint connection proxy details along with {@link Response}.
     */
    Response<PrivateEndpointConnectionProxy> getByIdWithResponse(String id, Context context);

    /**
     * Returns the operation to track the deletion of private endpoint connection proxy.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Returns the operation to track the deletion of private endpoint connection proxy.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new PrivateEndpointConnectionProxy resource.
     * 
     * @param name resource name.
     * @return the first stage of the new PrivateEndpointConnectionProxy definition.
     */
    PrivateEndpointConnectionProxy.DefinitionStages.Blank define(String name);
}
