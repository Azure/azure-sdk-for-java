// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.CoreUtils;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;

/**
 * Recovery point model properties.
 */
@Immutable
public final class RecoveryPointModelProperties implements JsonSerializable<RecoveryPointModelProperties> {
    /*
     * Gets or sets the recovery point time.
     */
    private OffsetDateTime recoveryPointTime;

    /*
     * Gets or sets the recovery point type.
     */
    private RecoveryPointType recoveryPointType;

    /*
     * Recovery point model custom properties.
     */
    private RecoveryPointModelCustomProperties customProperties;

    /*
     * Gets or sets the provisioning state of the recovery point item.
     */
    private ProvisioningState provisioningState;

    /**
     * Creates an instance of RecoveryPointModelProperties class.
     */
    private RecoveryPointModelProperties() {
    }

    /**
     * Get the recoveryPointTime property: Gets or sets the recovery point time.
     * 
     * @return the recoveryPointTime value.
     */
    public OffsetDateTime recoveryPointTime() {
        return this.recoveryPointTime;
    }

    /**
     * Get the recoveryPointType property: Gets or sets the recovery point type.
     * 
     * @return the recoveryPointType value.
     */
    public RecoveryPointType recoveryPointType() {
        return this.recoveryPointType;
    }

    /**
     * Get the customProperties property: Recovery point model custom properties.
     * 
     * @return the customProperties value.
     */
    public RecoveryPointModelCustomProperties customProperties() {
        return this.customProperties;
    }

    /**
     * Get the provisioningState property: Gets or sets the provisioning state of the recovery point item.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (recoveryPointTime() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property recoveryPointTime in model RecoveryPointModelProperties"));
        }
        if (recoveryPointType() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property recoveryPointType in model RecoveryPointModelProperties"));
        }
        if (customProperties() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property customProperties in model RecoveryPointModelProperties"));
        } else {
            customProperties().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(RecoveryPointModelProperties.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("recoveryPointTime",
            this.recoveryPointTime == null
                ? null
                : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.recoveryPointTime));
        jsonWriter.writeStringField("recoveryPointType",
            this.recoveryPointType == null ? null : this.recoveryPointType.toString());
        jsonWriter.writeJsonField("customProperties", this.customProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RecoveryPointModelProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RecoveryPointModelProperties if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the RecoveryPointModelProperties.
     */
    public static RecoveryPointModelProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RecoveryPointModelProperties deserializedRecoveryPointModelProperties = new RecoveryPointModelProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("recoveryPointTime".equals(fieldName)) {
                    deserializedRecoveryPointModelProperties.recoveryPointTime = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("recoveryPointType".equals(fieldName)) {
                    deserializedRecoveryPointModelProperties.recoveryPointType
                        = RecoveryPointType.fromString(reader.getString());
                } else if ("customProperties".equals(fieldName)) {
                    deserializedRecoveryPointModelProperties.customProperties
                        = RecoveryPointModelCustomProperties.fromJson(reader);
                } else if ("provisioningState".equals(fieldName)) {
                    deserializedRecoveryPointModelProperties.provisioningState
                        = ProvisioningState.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRecoveryPointModelProperties;
        });
    }
}
