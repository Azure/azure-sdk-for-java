// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;
import java.util.Map;

/**
 * Test failover workflow model custom properties.
 */
@Immutable
public final class TestFailoverWorkflowModelCustomProperties extends WorkflowModelCustomProperties {
    /*
     * Gets or sets the instance type.
     */
    private String instanceType = "TestFailoverWorkflowDetails";

    /*
     * Gets or sets the test VM details.
     */
    private List<FailoverProtectedItemProperties> protectedItemDetails;

    /*
     * Gets or sets any custom properties of the affected object.
     */
    private Map<String, String> affectedObjectDetails;

    /**
     * Creates an instance of TestFailoverWorkflowModelCustomProperties class.
     */
    public TestFailoverWorkflowModelCustomProperties() {
    }

    /**
     * Get the instanceType property: Gets or sets the instance type.
     * 
     * @return the instanceType value.
     */
    @Override
    public String instanceType() {
        return this.instanceType;
    }

    /**
     * Get the protectedItemDetails property: Gets or sets the test VM details.
     * 
     * @return the protectedItemDetails value.
     */
    public List<FailoverProtectedItemProperties> protectedItemDetails() {
        return this.protectedItemDetails;
    }

    /**
     * Get the affectedObjectDetails property: Gets or sets any custom properties of the affected object.
     * 
     * @return the affectedObjectDetails value.
     */
    @Override
    public Map<String, String> affectedObjectDetails() {
        return this.affectedObjectDetails;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        if (protectedItemDetails() != null) {
            protectedItemDetails().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("instanceType", this.instanceType);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of TestFailoverWorkflowModelCustomProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of TestFailoverWorkflowModelCustomProperties if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the TestFailoverWorkflowModelCustomProperties.
     */
    public static TestFailoverWorkflowModelCustomProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            TestFailoverWorkflowModelCustomProperties deserializedTestFailoverWorkflowModelCustomProperties
                = new TestFailoverWorkflowModelCustomProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("affectedObjectDetails".equals(fieldName)) {
                    Map<String, String> affectedObjectDetails = reader.readMap(reader1 -> reader1.getString());
                    deserializedTestFailoverWorkflowModelCustomProperties.affectedObjectDetails = affectedObjectDetails;
                } else if ("instanceType".equals(fieldName)) {
                    deserializedTestFailoverWorkflowModelCustomProperties.instanceType = reader.getString();
                } else if ("protectedItemDetails".equals(fieldName)) {
                    List<FailoverProtectedItemProperties> protectedItemDetails
                        = reader.readArray(reader1 -> FailoverProtectedItemProperties.fromJson(reader1));
                    deserializedTestFailoverWorkflowModelCustomProperties.protectedItemDetails = protectedItemDetails;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedTestFailoverWorkflowModelCustomProperties;
        });
    }
}
