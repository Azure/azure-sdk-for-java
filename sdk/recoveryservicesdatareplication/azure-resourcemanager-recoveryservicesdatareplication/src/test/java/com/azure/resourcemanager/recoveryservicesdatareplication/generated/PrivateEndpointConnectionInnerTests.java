// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesdatareplication.fluent.models.PrivateEndpointConnectionInner;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.PrivateEndpoint;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.PrivateEndpointConnectionResponseProperties;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.PrivateEndpointConnectionStatus;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.PrivateLinkServiceConnectionState;
import org.junit.jupiter.api.Assertions;

public final class PrivateEndpointConnectionInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateEndpointConnectionInner model = BinaryData.fromString(
            "{\"properties\":{\"provisioningState\":\"Canceled\",\"privateEndpoint\":{\"id\":\"wlquuijfqkace\"},\"privateLinkServiceConnectionState\":{\"status\":\"Pending\",\"description\":\"pubjibw\",\"actionsRequired\":\"f\"}},\"id\":\"hqkvpuvksgplsak\",\"name\":\"ynfs\",\"type\":\"n\"}")
            .toObject(PrivateEndpointConnectionInner.class);
        Assertions.assertEquals("wlquuijfqkace", model.properties().privateEndpoint().id());
        Assertions.assertEquals(PrivateEndpointConnectionStatus.PENDING,
            model.properties().privateLinkServiceConnectionState().status());
        Assertions.assertEquals("pubjibw", model.properties().privateLinkServiceConnectionState().description());
        Assertions.assertEquals("f", model.properties().privateLinkServiceConnectionState().actionsRequired());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateEndpointConnectionInner model
            = new PrivateEndpointConnectionInner().withProperties(new PrivateEndpointConnectionResponseProperties()
                .withPrivateEndpoint(new PrivateEndpoint().withId("wlquuijfqkace"))
                .withPrivateLinkServiceConnectionState(
                    new PrivateLinkServiceConnectionState().withStatus(PrivateEndpointConnectionStatus.PENDING)
                        .withDescription("pubjibw")
                        .withActionsRequired("f")));
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnectionInner.class);
        Assertions.assertEquals("wlquuijfqkace", model.properties().privateEndpoint().id());
        Assertions.assertEquals(PrivateEndpointConnectionStatus.PENDING,
            model.properties().privateLinkServiceConnectionState().status());
        Assertions.assertEquals("pubjibw", model.properties().privateLinkServiceConnectionState().description());
        Assertions.assertEquals("f", model.properties().privateLinkServiceConnectionState().actionsRequired());
    }
}
