// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.AzStackHciClusterProperties;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.StorageContainerProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AzStackHciClusterPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzStackHciClusterProperties model = BinaryData.fromString(
            "{\"clusterName\":\"ymgc\",\"resourceName\":\"elvezrypq\",\"storageAccountName\":\"mfe\",\"storageContainers\":[{\"name\":\"erqwkyhkobopg\",\"clusterSharedVolumePath\":\"edkowepbqpcrfk\"},{\"name\":\"wccsnjvcdwxlpqek\",\"clusterSharedVolumePath\":\"tn\"}]}")
            .toObject(AzStackHciClusterProperties.class);
        Assertions.assertEquals("ymgc", model.clusterName());
        Assertions.assertEquals("elvezrypq", model.resourceName());
        Assertions.assertEquals("mfe", model.storageAccountName());
        Assertions.assertEquals("erqwkyhkobopg", model.storageContainers().get(0).name());
        Assertions.assertEquals("edkowepbqpcrfk", model.storageContainers().get(0).clusterSharedVolumePath());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzStackHciClusterProperties model = new AzStackHciClusterProperties().withClusterName("ymgc")
            .withResourceName("elvezrypq")
            .withStorageAccountName("mfe")
            .withStorageContainers(Arrays.asList(
                new StorageContainerProperties().withName("erqwkyhkobopg")
                    .withClusterSharedVolumePath("edkowepbqpcrfk"),
                new StorageContainerProperties().withName("wccsnjvcdwxlpqek").withClusterSharedVolumePath("tn")));
        model = BinaryData.fromObject(model).toObject(AzStackHciClusterProperties.class);
        Assertions.assertEquals("ymgc", model.clusterName());
        Assertions.assertEquals("elvezrypq", model.resourceName());
        Assertions.assertEquals("mfe", model.storageAccountName());
        Assertions.assertEquals("erqwkyhkobopg", model.storageContainers().get(0).name());
        Assertions.assertEquals("edkowepbqpcrfk", model.storageContainers().get(0).clusterSharedVolumePath());
    }
}
