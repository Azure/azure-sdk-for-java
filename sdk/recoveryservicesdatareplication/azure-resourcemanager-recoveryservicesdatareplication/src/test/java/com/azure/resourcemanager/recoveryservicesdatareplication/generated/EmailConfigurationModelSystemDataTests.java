// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.EmailConfigurationModelSystemData;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class EmailConfigurationModelSystemDataTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        EmailConfigurationModelSystemData model = BinaryData.fromString(
            "{\"createdBy\":\"koty\",\"createdByType\":\"gou\",\"createdAt\":\"2021-01-30T20:47:53Z\",\"lastModifiedBy\":\"likwyqkgfgib\",\"lastModifiedByType\":\"dgak\",\"lastModifiedAt\":\"2021-01-01T02:28:26Z\"}")
            .toObject(EmailConfigurationModelSystemData.class);
        Assertions.assertEquals("koty", model.createdBy());
        Assertions.assertEquals("gou", model.createdByType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-30T20:47:53Z"), model.createdAt());
        Assertions.assertEquals("likwyqkgfgib", model.lastModifiedBy());
        Assertions.assertEquals("dgak", model.lastModifiedByType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-01T02:28:26Z"), model.lastModifiedAt());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        EmailConfigurationModelSystemData model = new EmailConfigurationModelSystemData().withCreatedBy("koty")
            .withCreatedByType("gou")
            .withCreatedAt(OffsetDateTime.parse("2021-01-30T20:47:53Z"))
            .withLastModifiedBy("likwyqkgfgib")
            .withLastModifiedByType("dgak")
            .withLastModifiedAt(OffsetDateTime.parse("2021-01-01T02:28:26Z"));
        model = BinaryData.fromObject(model).toObject(EmailConfigurationModelSystemData.class);
        Assertions.assertEquals("koty", model.createdBy());
        Assertions.assertEquals("gou", model.createdByType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-30T20:47:53Z"), model.createdAt());
        Assertions.assertEquals("likwyqkgfgib", model.lastModifiedBy());
        Assertions.assertEquals("dgak", model.lastModifiedByType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-01T02:28:26Z"), model.lastModifiedAt());
    }
}
