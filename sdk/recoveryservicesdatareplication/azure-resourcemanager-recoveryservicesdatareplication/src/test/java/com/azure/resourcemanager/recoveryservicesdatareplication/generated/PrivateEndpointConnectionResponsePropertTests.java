// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.PrivateEndpoint;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.PrivateEndpointConnectionResponseProperties;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.PrivateEndpointConnectionStatus;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.PrivateLinkServiceConnectionState;
import org.junit.jupiter.api.Assertions;

public final class PrivateEndpointConnectionResponsePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateEndpointConnectionResponseProperties model = BinaryData.fromString(
            "{\"provisioningState\":\"Deleted\",\"privateEndpoint\":{\"id\":\"op\"},\"privateLinkServiceConnectionState\":{\"status\":\"Pending\",\"description\":\"iyntorzihle\",\"actionsRequired\":\"jswsrmslyz\"}}")
            .toObject(PrivateEndpointConnectionResponseProperties.class);
        Assertions.assertEquals("op", model.privateEndpoint().id());
        Assertions.assertEquals(PrivateEndpointConnectionStatus.PENDING,
            model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("iyntorzihle", model.privateLinkServiceConnectionState().description());
        Assertions.assertEquals("jswsrmslyz", model.privateLinkServiceConnectionState().actionsRequired());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateEndpointConnectionResponseProperties model
            = new PrivateEndpointConnectionResponseProperties().withPrivateEndpoint(new PrivateEndpoint().withId("op"))
                .withPrivateLinkServiceConnectionState(
                    new PrivateLinkServiceConnectionState().withStatus(PrivateEndpointConnectionStatus.PENDING)
                        .withDescription("iyntorzihle")
                        .withActionsRequired("jswsrmslyz"));
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnectionResponseProperties.class);
        Assertions.assertEquals("op", model.privateEndpoint().id());
        Assertions.assertEquals(PrivateEndpointConnectionStatus.PENDING,
            model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("iyntorzihle", model.privateLinkServiceConnectionState().description());
        Assertions.assertEquals("jswsrmslyz", model.privateLinkServiceConnectionState().actionsRequired());
    }
}
