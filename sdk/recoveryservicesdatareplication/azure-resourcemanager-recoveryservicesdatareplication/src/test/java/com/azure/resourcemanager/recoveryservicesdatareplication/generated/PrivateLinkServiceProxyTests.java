// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.GroupConnectivityInformation;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.PrivateEndpointConnectionStatus;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.PrivateLinkServiceConnectionState;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.PrivateLinkServiceProxy;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.RemotePrivateEndpointConnection;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PrivateLinkServiceProxyTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateLinkServiceProxy model = BinaryData.fromString(
            "{\"id\":\"sb\",\"remotePrivateLinkServiceConnectionState\":{\"status\":\"Approved\",\"description\":\"tgseinqfiufxqkn\",\"actionsRequired\":\"rgnepttwqmsniffc\"},\"remotePrivateEndpointConnection\":{\"id\":\"nrojlpijnkr\"},\"groupConnectivityInformation\":[{\"groupId\":\"dhcrati\",\"memberName\":\"ronasxift\",\"customerVisibleFqdns\":[\"yzhftwesgogczh\",\"nnxk\"],\"internalFqdn\":\"gnyhmossxkkg\",\"redirectMapId\":\"rrghxjbdhqxvcxgf\",\"privateLinkServiceArmRegion\":\"dsofbshrns\"}]}")
            .toObject(PrivateLinkServiceProxy.class);
        Assertions.assertEquals("sb", model.id());
        Assertions.assertEquals(PrivateEndpointConnectionStatus.APPROVED,
            model.remotePrivateLinkServiceConnectionState().status());
        Assertions.assertEquals("tgseinqfiufxqkn", model.remotePrivateLinkServiceConnectionState().description());
        Assertions.assertEquals("rgnepttwqmsniffc", model.remotePrivateLinkServiceConnectionState().actionsRequired());
        Assertions.assertEquals("nrojlpijnkr", model.remotePrivateEndpointConnection().id());
        Assertions.assertEquals("dhcrati", model.groupConnectivityInformation().get(0).groupId());
        Assertions.assertEquals("ronasxift", model.groupConnectivityInformation().get(0).memberName());
        Assertions.assertEquals("yzhftwesgogczh",
            model.groupConnectivityInformation().get(0).customerVisibleFqdns().get(0));
        Assertions.assertEquals("gnyhmossxkkg", model.groupConnectivityInformation().get(0).internalFqdn());
        Assertions.assertEquals("rrghxjbdhqxvcxgf", model.groupConnectivityInformation().get(0).redirectMapId());
        Assertions.assertEquals("dsofbshrns",
            model.groupConnectivityInformation().get(0).privateLinkServiceArmRegion());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateLinkServiceProxy model = new PrivateLinkServiceProxy().withId("sb")
            .withRemotePrivateLinkServiceConnectionState(
                new PrivateLinkServiceConnectionState().withStatus(PrivateEndpointConnectionStatus.APPROVED)
                    .withDescription("tgseinqfiufxqkn")
                    .withActionsRequired("rgnepttwqmsniffc"))
            .withRemotePrivateEndpointConnection(new RemotePrivateEndpointConnection().withId("nrojlpijnkr"))
            .withGroupConnectivityInformation(Arrays.asList(new GroupConnectivityInformation().withGroupId("dhcrati")
                .withMemberName("ronasxift")
                .withCustomerVisibleFqdns(Arrays.asList("yzhftwesgogczh", "nnxk"))
                .withInternalFqdn("gnyhmossxkkg")
                .withRedirectMapId("rrghxjbdhqxvcxgf")
                .withPrivateLinkServiceArmRegion("dsofbshrns")));
        model = BinaryData.fromObject(model).toObject(PrivateLinkServiceProxy.class);
        Assertions.assertEquals("sb", model.id());
        Assertions.assertEquals(PrivateEndpointConnectionStatus.APPROVED,
            model.remotePrivateLinkServiceConnectionState().status());
        Assertions.assertEquals("tgseinqfiufxqkn", model.remotePrivateLinkServiceConnectionState().description());
        Assertions.assertEquals("rgnepttwqmsniffc", model.remotePrivateLinkServiceConnectionState().actionsRequired());
        Assertions.assertEquals("nrojlpijnkr", model.remotePrivateEndpointConnection().id());
        Assertions.assertEquals("dhcrati", model.groupConnectivityInformation().get(0).groupId());
        Assertions.assertEquals("ronasxift", model.groupConnectivityInformation().get(0).memberName());
        Assertions.assertEquals("yzhftwesgogczh",
            model.groupConnectivityInformation().get(0).customerVisibleFqdns().get(0));
        Assertions.assertEquals("gnyhmossxkkg", model.groupConnectivityInformation().get(0).internalFqdn());
        Assertions.assertEquals("rrghxjbdhqxvcxgf", model.groupConnectivityInformation().get(0).redirectMapId());
        Assertions.assertEquals("dsofbshrns",
            model.groupConnectivityInformation().get(0).privateLinkServiceArmRegion());
    }
}
