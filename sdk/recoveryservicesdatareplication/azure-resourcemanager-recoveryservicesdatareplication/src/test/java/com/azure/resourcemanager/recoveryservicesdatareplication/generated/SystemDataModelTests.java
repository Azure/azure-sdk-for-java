// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.SystemDataModel;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class SystemDataModelTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SystemDataModel model = BinaryData.fromString(
            "{\"createdBy\":\"yffdfdos\",\"createdByType\":\"expa\",\"createdAt\":\"2021-04-29T11:27:29Z\",\"lastModifiedBy\":\"hmsbzjhcrzevdp\",\"lastModifiedByType\":\"xaolth\",\"lastModifiedAt\":\"2021-03-26T21:15:35Z\"}")
            .toObject(SystemDataModel.class);
        Assertions.assertEquals("yffdfdos", model.createdBy());
        Assertions.assertEquals("expa", model.createdByType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-29T11:27:29Z"), model.createdAt());
        Assertions.assertEquals("hmsbzjhcrzevdp", model.lastModifiedBy());
        Assertions.assertEquals("xaolth", model.lastModifiedByType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-26T21:15:35Z"), model.lastModifiedAt());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SystemDataModel model = new SystemDataModel().withCreatedBy("yffdfdos")
            .withCreatedByType("expa")
            .withCreatedAt(OffsetDateTime.parse("2021-04-29T11:27:29Z"))
            .withLastModifiedBy("hmsbzjhcrzevdp")
            .withLastModifiedByType("xaolth")
            .withLastModifiedAt(OffsetDateTime.parse("2021-03-26T21:15:35Z"));
        model = BinaryData.fromObject(model).toObject(SystemDataModel.class);
        Assertions.assertEquals("yffdfdos", model.createdBy());
        Assertions.assertEquals("expa", model.createdByType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-29T11:27:29Z"), model.createdAt());
        Assertions.assertEquals("hmsbzjhcrzevdp", model.lastModifiedBy());
        Assertions.assertEquals("xaolth", model.lastModifiedByType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-26T21:15:35Z"), model.lastModifiedAt());
    }
}
