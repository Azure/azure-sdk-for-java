// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.VaultModelSystemData;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class VaultModelSystemDataTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VaultModelSystemData model = BinaryData.fromString(
            "{\"createdBy\":\"lkdmtncvokotllxd\",\"createdByType\":\"gsyocogj\",\"createdAt\":\"2021-06-06T21:20:51Z\",\"lastModifiedBy\":\"bnnhadoocrkvcik\",\"lastModifiedByType\":\"vpa\",\"lastModifiedAt\":\"2021-01-08T00:37:46Z\"}")
            .toObject(VaultModelSystemData.class);
        Assertions.assertEquals("lkdmtncvokotllxd", model.createdBy());
        Assertions.assertEquals("gsyocogj", model.createdByType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-06T21:20:51Z"), model.createdAt());
        Assertions.assertEquals("bnnhadoocrkvcik", model.lastModifiedBy());
        Assertions.assertEquals("vpa", model.lastModifiedByType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-08T00:37:46Z"), model.lastModifiedAt());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VaultModelSystemData model = new VaultModelSystemData().withCreatedBy("lkdmtncvokotllxd")
            .withCreatedByType("gsyocogj")
            .withCreatedAt(OffsetDateTime.parse("2021-06-06T21:20:51Z"))
            .withLastModifiedBy("bnnhadoocrkvcik")
            .withLastModifiedByType("vpa")
            .withLastModifiedAt(OffsetDateTime.parse("2021-01-08T00:37:46Z"));
        model = BinaryData.fromObject(model).toObject(VaultModelSystemData.class);
        Assertions.assertEquals("lkdmtncvokotllxd", model.createdBy());
        Assertions.assertEquals("gsyocogj", model.createdByType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-06T21:20:51Z"), model.createdAt());
        Assertions.assertEquals("bnnhadoocrkvcik", model.lastModifiedBy());
        Assertions.assertEquals("vpa", model.lastModifiedByType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-08T00:37:46Z"), model.lastModifiedAt());
    }
}
