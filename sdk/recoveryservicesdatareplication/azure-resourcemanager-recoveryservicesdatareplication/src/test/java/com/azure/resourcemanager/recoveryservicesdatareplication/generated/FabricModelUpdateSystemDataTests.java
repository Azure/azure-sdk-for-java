// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.FabricModelUpdateSystemData;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class FabricModelUpdateSystemDataTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FabricModelUpdateSystemData model = BinaryData.fromString(
            "{\"createdBy\":\"bisnja\",\"createdByType\":\"mngnzscxaqw\",\"createdAt\":\"2021-10-06T06:26:18Z\",\"lastModifiedBy\":\"cbonqvpk\",\"lastModifiedByType\":\"rxnjeaseipheofl\",\"lastModifiedAt\":\"2021-05-08T17:02:16Z\"}")
            .toObject(FabricModelUpdateSystemData.class);
        Assertions.assertEquals("bisnja", model.createdBy());
        Assertions.assertEquals("mngnzscxaqw", model.createdByType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-06T06:26:18Z"), model.createdAt());
        Assertions.assertEquals("cbonqvpk", model.lastModifiedBy());
        Assertions.assertEquals("rxnjeaseipheofl", model.lastModifiedByType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-08T17:02:16Z"), model.lastModifiedAt());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FabricModelUpdateSystemData model = new FabricModelUpdateSystemData().withCreatedBy("bisnja")
            .withCreatedByType("mngnzscxaqw")
            .withCreatedAt(OffsetDateTime.parse("2021-10-06T06:26:18Z"))
            .withLastModifiedBy("cbonqvpk")
            .withLastModifiedByType("rxnjeaseipheofl")
            .withLastModifiedAt(OffsetDateTime.parse("2021-05-08T17:02:16Z"));
        model = BinaryData.fromObject(model).toObject(FabricModelUpdateSystemData.class);
        Assertions.assertEquals("bisnja", model.createdBy());
        Assertions.assertEquals("mngnzscxaqw", model.createdByType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-06T06:26:18Z"), model.createdAt());
        Assertions.assertEquals("cbonqvpk", model.lastModifiedBy());
        Assertions.assertEquals("rxnjeaseipheofl", model.lastModifiedByType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-08T17:02:16Z"), model.lastModifiedAt());
    }
}
