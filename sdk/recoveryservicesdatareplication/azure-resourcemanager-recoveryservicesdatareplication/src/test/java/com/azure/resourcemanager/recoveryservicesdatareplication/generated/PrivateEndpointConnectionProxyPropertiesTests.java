// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.ConnectionDetails;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.GroupConnectivityInformation;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.PrivateEndpointConnectionProxyProperties;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.PrivateEndpointConnectionStatus;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.PrivateLinkServiceConnection;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.PrivateLinkServiceConnectionState;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.PrivateLinkServiceProxy;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.RemotePrivateEndpoint;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.RemotePrivateEndpointConnection;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PrivateEndpointConnectionProxyPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateEndpointConnectionProxyProperties model = BinaryData.fromString(
            "{\"provisioningState\":\"Canceled\",\"remotePrivateEndpoint\":{\"id\":\"cvydypatdoo\",\"privateLinkServiceConnections\":[{\"name\":\"niodkooeb\",\"groupIds\":[\"jhemms\",\"vdkcrodtj\",\"nfwjlfltkacjvefk\",\"lfoakg\"],\"requestMessage\":\"fpagaowpulp\"},{\"name\":\"lyls\",\"groupIds\":[\"qjnsjervtia\"],\"requestMessage\":\"sdszue\"}],\"manualPrivateLinkServiceConnections\":[{\"name\":\"zkfzbeyv\",\"groupIds\":[\"icvi\"],\"requestMessage\":\"kjj\"},{\"name\":\"xrbuukzclew\",\"groupIds\":[\"lw\",\"aztz\"],\"requestMessage\":\"fn\"}],\"privateLinkServiceProxies\":[{\"id\":\"yfzqwhxxbu\",\"remotePrivateLinkServiceConnectionState\":{\"status\":\"Approved\",\"description\":\"feqztppriol\",\"actionsRequired\":\"rjaltolmncw\"},\"remotePrivateEndpointConnection\":{\"id\":\"qwcsdbnwdcfhuc\"},\"groupConnectivityInformation\":[{\"groupId\":\"uvglsbjjcanvx\",\"memberName\":\"t\",\"customerVisibleFqdns\":[\"utncorm\"],\"internalFqdn\":\"xqtvcofu\",\"redirectMapId\":\"lvkgju\",\"privateLinkServiceArmRegion\":\"dknnqvsazn\"},{\"groupId\":\"tor\",\"memberName\":\"sgsahmkycgr\",\"customerVisibleFqdns\":[\"juetaebur\"],\"internalFqdn\":\"dmovsm\",\"redirectMapId\":\"xwabmqoe\",\"privateLinkServiceArmRegion\":\"ifrvtpu\"},{\"groupId\":\"jmqlgkfb\",\"memberName\":\"doaon\",\"customerVisibleFqdns\":[\"cn\",\"ujitcjedftww\"],\"internalFqdn\":\"zkoj\",\"redirectMapId\":\"c\",\"privateLinkServiceArmRegion\":\"foqouicybx\"}]},{\"id\":\"zg\",\"remotePrivateLinkServiceConnectionState\":{\"status\":\"Disconnected\",\"description\":\"x\",\"actionsRequired\":\"q\"},\"remotePrivateEndpointConnection\":{\"id\":\"doamciodhkha\"},\"groupConnectivityInformation\":[{\"groupId\":\"nz\",\"memberName\":\"nlwntoe\",\"customerVisibleFqdns\":[\"dwbwhkszzcmrvexz\",\"vbtqgsfraoyzk\",\"owtlmnguxawqald\"],\"internalFqdn\":\"uuximerq\",\"redirectMapId\":\"bw\",\"privateLinkServiceArmRegion\":\"nkbykutwpfhp\"},{\"groupId\":\"m\",\"memberName\":\"skdsnfdsdoakg\",\"customerVisibleFqdns\":[\"mkkzevdlhe\"],\"internalFqdn\":\"usdsttwv\",\"redirectMapId\":\"vbbejdcng\",\"privateLinkServiceArmRegion\":\"m\"},{\"groupId\":\"kufgmj\",\"memberName\":\"wr\",\"customerVisibleFqdns\":[\"twaenuuzko\",\"bminrfdwoyuhhzi\",\"iefozbhdmsml\"],\"internalFqdn\":\"qhoftrmaequiah\",\"redirectMapId\":\"cslfaoqzpiyylha\",\"privateLinkServiceArmRegion\":\"swhccsphk\"}]},{\"id\":\"vwitqscyw\",\"remotePrivateLinkServiceConnectionState\":{\"status\":\"Rejected\",\"description\":\"luhczbw\",\"actionsRequired\":\"hairsbrgzdwms\"},\"remotePrivateEndpointConnection\":{\"id\":\"pqwd\"},\"groupConnectivityInformation\":[{\"groupId\":\"cccnxqhuexmktt\",\"memberName\":\"tvlz\",\"customerVisibleFqdns\":[\"mhzrn\",\"sdtclusiypbs\",\"gytguslfead\"],\"internalFqdn\":\"gq\",\"redirectMapId\":\"yhejhzisxgfp\",\"privateLinkServiceArmRegion\":\"olppvksrpqvujz\"},{\"groupId\":\"ehtwdwrft\",\"memberName\":\"iby\",\"customerVisibleFqdns\":[\"l\"],\"internalFqdn\":\"shfwpracstwity\",\"redirectMapId\":\"evxccedcp\",\"privateLinkServiceArmRegion\":\"dyodnwzxltj\"},{\"groupId\":\"nhltiugcxn\",\"memberName\":\"vwxqibyqunyo\",\"customerVisibleFqdns\":[\"lmdjrkvfgbvfvpdb\",\"daciz\"],\"internalFqdn\":\"q\",\"redirectMapId\":\"krribdeibqi\",\"privateLinkServiceArmRegion\":\"kghv\"}]},{\"id\":\"dzwmkrefajpj\",\"remotePrivateLinkServiceConnectionState\":{\"status\":\"Disconnected\",\"description\":\"nyhgbijtji\",\"actionsRequired\":\"xzsjabib\"},\"remotePrivateEndpointConnection\":{\"id\":\"tawfsdjpvkvp\"},\"groupConnectivityInformation\":[{\"groupId\":\"kzbzkdvncjabudu\",\"memberName\":\"kakmokzh\",\"customerVisibleFqdns\":[\"lffhmouwqlg\"],\"internalFqdn\":\"fzeeyebizik\",\"redirectMapId\":\"uhqlbjbsybbqwrvt\",\"privateLinkServiceArmRegion\":\"gmfpgvmp\"},{\"groupId\":\"as\",\"memberName\":\"haq\",\"customerVisibleFqdns\":[\"smwutwbdsrezpd\"],\"internalFqdn\":\"neuyow\",\"redirectMapId\":\"d\",\"privateLinkServiceArmRegion\":\"t\"},{\"groupId\":\"ib\",\"memberName\":\"cgpik\",\"customerVisibleFqdns\":[\"mejzanlfzxia\",\"rmbzo\"],\"internalFqdn\":\"kixrj\",\"redirectMapId\":\"irgzp\",\"privateLinkServiceArmRegion\":\"lazszrn\"}]}],\"connectionDetails\":[{\"id\":\"ndfpwpj\",\"privateIpAddress\":\"wbtlhflsjcdh\",\"linkIdentifier\":\"fjvfbgofeljagr\",\"groupId\":\"qhl\",\"memberName\":\"riiiojnalghfkv\"}]}}")
            .toObject(PrivateEndpointConnectionProxyProperties.class);
        Assertions.assertEquals("cvydypatdoo", model.remotePrivateEndpoint().id());
        Assertions.assertEquals("niodkooeb",
            model.remotePrivateEndpoint().privateLinkServiceConnections().get(0).name());
        Assertions.assertEquals("jhemms",
            model.remotePrivateEndpoint().privateLinkServiceConnections().get(0).groupIds().get(0));
        Assertions.assertEquals("fpagaowpulp",
            model.remotePrivateEndpoint().privateLinkServiceConnections().get(0).requestMessage());
        Assertions.assertEquals("zkfzbeyv",
            model.remotePrivateEndpoint().manualPrivateLinkServiceConnections().get(0).name());
        Assertions.assertEquals("icvi",
            model.remotePrivateEndpoint().manualPrivateLinkServiceConnections().get(0).groupIds().get(0));
        Assertions.assertEquals("kjj",
            model.remotePrivateEndpoint().manualPrivateLinkServiceConnections().get(0).requestMessage());
        Assertions.assertEquals("yfzqwhxxbu", model.remotePrivateEndpoint().privateLinkServiceProxies().get(0).id());
        Assertions.assertEquals(PrivateEndpointConnectionStatus.APPROVED,
            model.remotePrivateEndpoint()
                .privateLinkServiceProxies()
                .get(0)
                .remotePrivateLinkServiceConnectionState()
                .status());
        Assertions.assertEquals("feqztppriol",
            model.remotePrivateEndpoint()
                .privateLinkServiceProxies()
                .get(0)
                .remotePrivateLinkServiceConnectionState()
                .description());
        Assertions.assertEquals("rjaltolmncw",
            model.remotePrivateEndpoint()
                .privateLinkServiceProxies()
                .get(0)
                .remotePrivateLinkServiceConnectionState()
                .actionsRequired());
        Assertions.assertEquals("qwcsdbnwdcfhuc",
            model.remotePrivateEndpoint().privateLinkServiceProxies().get(0).remotePrivateEndpointConnection().id());
        Assertions.assertEquals("uvglsbjjcanvx",
            model.remotePrivateEndpoint()
                .privateLinkServiceProxies()
                .get(0)
                .groupConnectivityInformation()
                .get(0)
                .groupId());
        Assertions.assertEquals("t",
            model.remotePrivateEndpoint()
                .privateLinkServiceProxies()
                .get(0)
                .groupConnectivityInformation()
                .get(0)
                .memberName());
        Assertions.assertEquals("utncorm",
            model.remotePrivateEndpoint()
                .privateLinkServiceProxies()
                .get(0)
                .groupConnectivityInformation()
                .get(0)
                .customerVisibleFqdns()
                .get(0));
        Assertions.assertEquals("xqtvcofu",
            model.remotePrivateEndpoint()
                .privateLinkServiceProxies()
                .get(0)
                .groupConnectivityInformation()
                .get(0)
                .internalFqdn());
        Assertions.assertEquals("lvkgju",
            model.remotePrivateEndpoint()
                .privateLinkServiceProxies()
                .get(0)
                .groupConnectivityInformation()
                .get(0)
                .redirectMapId());
        Assertions.assertEquals("dknnqvsazn",
            model.remotePrivateEndpoint()
                .privateLinkServiceProxies()
                .get(0)
                .groupConnectivityInformation()
                .get(0)
                .privateLinkServiceArmRegion());
        Assertions.assertEquals("ndfpwpj", model.remotePrivateEndpoint().connectionDetails().get(0).id());
        Assertions.assertEquals("wbtlhflsjcdh",
            model.remotePrivateEndpoint().connectionDetails().get(0).privateIpAddress());
        Assertions.assertEquals("fjvfbgofeljagr",
            model.remotePrivateEndpoint().connectionDetails().get(0).linkIdentifier());
        Assertions.assertEquals("qhl", model.remotePrivateEndpoint().connectionDetails().get(0).groupId());
        Assertions.assertEquals("riiiojnalghfkv",
            model.remotePrivateEndpoint().connectionDetails().get(0).memberName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateEndpointConnectionProxyProperties model
            = new PrivateEndpointConnectionProxyProperties()
                .withRemotePrivateEndpoint(
                    new RemotePrivateEndpoint().withId("cvydypatdoo")
                        .withPrivateLinkServiceConnections(
                            Arrays
                                .asList(
                                    new PrivateLinkServiceConnection().withName("niodkooeb")
                                        .withGroupIds(
                                            Arrays.asList("jhemms", "vdkcrodtj", "nfwjlfltkacjvefk", "lfoakg"))
                                        .withRequestMessage("fpagaowpulp"),
                                    new PrivateLinkServiceConnection().withName("lyls")
                                        .withGroupIds(Arrays.asList("qjnsjervtia"))
                                        .withRequestMessage("sdszue")))
                        .withManualPrivateLinkServiceConnections(Arrays.asList(
                            new PrivateLinkServiceConnection()
                                .withName("zkfzbeyv")
                                .withGroupIds(Arrays.asList("icvi"))
                                .withRequestMessage("kjj"),
                            new PrivateLinkServiceConnection()
                                .withName("xrbuukzclew")
                                .withGroupIds(Arrays.asList("lw", "aztz"))
                                .withRequestMessage("fn")))
                        .withPrivateLinkServiceProxies(
                            Arrays.asList(
                                new PrivateLinkServiceProxy().withId("yfzqwhxxbu")
                                    .withRemotePrivateLinkServiceConnectionState(new PrivateLinkServiceConnectionState()
                                        .withStatus(PrivateEndpointConnectionStatus.APPROVED)
                                        .withDescription("feqztppriol")
                                        .withActionsRequired("rjaltolmncw"))
                                    .withRemotePrivateEndpointConnection(
                                        new RemotePrivateEndpointConnection().withId("qwcsdbnwdcfhuc"))
                                    .withGroupConnectivityInformation(Arrays.asList(
                                        new GroupConnectivityInformation().withGroupId("uvglsbjjcanvx")
                                            .withMemberName("t")
                                            .withCustomerVisibleFqdns(Arrays.asList("utncorm"))
                                            .withInternalFqdn("xqtvcofu")
                                            .withRedirectMapId("lvkgju")
                                            .withPrivateLinkServiceArmRegion("dknnqvsazn"),
                                        new GroupConnectivityInformation().withGroupId("tor")
                                            .withMemberName("sgsahmkycgr")
                                            .withCustomerVisibleFqdns(Arrays.asList("juetaebur"))
                                            .withInternalFqdn("dmovsm")
                                            .withRedirectMapId("xwabmqoe")
                                            .withPrivateLinkServiceArmRegion("ifrvtpu"),
                                        new GroupConnectivityInformation().withGroupId("jmqlgkfb")
                                            .withMemberName("doaon")
                                            .withCustomerVisibleFqdns(Arrays.asList("cn", "ujitcjedftww"))
                                            .withInternalFqdn("zkoj")
                                            .withRedirectMapId("c")
                                            .withPrivateLinkServiceArmRegion("foqouicybx"))),
                                new PrivateLinkServiceProxy().withId("zg")
                                    .withRemotePrivateLinkServiceConnectionState(new PrivateLinkServiceConnectionState()
                                        .withStatus(PrivateEndpointConnectionStatus.DISCONNECTED)
                                        .withDescription("x")
                                        .withActionsRequired("q"))
                                    .withRemotePrivateEndpointConnection(
                                        new RemotePrivateEndpointConnection().withId("doamciodhkha"))
                                    .withGroupConnectivityInformation(
                                        Arrays.asList(
                                            new GroupConnectivityInformation().withGroupId("nz")
                                                .withMemberName("nlwntoe")
                                                .withCustomerVisibleFqdns(Arrays.asList("dwbwhkszzcmrvexz",
                                                    "vbtqgsfraoyzk", "owtlmnguxawqald"))
                                                .withInternalFqdn("uuximerq")
                                                .withRedirectMapId("bw")
                                                .withPrivateLinkServiceArmRegion("nkbykutwpfhp"),
                                            new GroupConnectivityInformation().withGroupId("m")
                                                .withMemberName("skdsnfdsdoakg")
                                                .withCustomerVisibleFqdns(Arrays.asList("mkkzevdlhe"))
                                                .withInternalFqdn("usdsttwv")
                                                .withRedirectMapId("vbbejdcng")
                                                .withPrivateLinkServiceArmRegion("m"),
                                            new GroupConnectivityInformation().withGroupId("kufgmj")
                                                .withMemberName("wr")
                                                .withCustomerVisibleFqdns(
                                                    Arrays.asList("twaenuuzko", "bminrfdwoyuhhzi", "iefozbhdmsml"))
                                                .withInternalFqdn("qhoftrmaequiah")
                                                .withRedirectMapId("cslfaoqzpiyylha")
                                                .withPrivateLinkServiceArmRegion("swhccsphk"))),
                                new PrivateLinkServiceProxy().withId("vwitqscyw")
                                    .withRemotePrivateLinkServiceConnectionState(new PrivateLinkServiceConnectionState()
                                        .withStatus(PrivateEndpointConnectionStatus.REJECTED)
                                        .withDescription("luhczbw")
                                        .withActionsRequired("hairsbrgzdwms"))
                                    .withRemotePrivateEndpointConnection(
                                        new RemotePrivateEndpointConnection().withId("pqwd"))
                                    .withGroupConnectivityInformation(Arrays.asList(
                                        new GroupConnectivityInformation().withGroupId("cccnxqhuexmktt")
                                            .withMemberName("tvlz")
                                            .withCustomerVisibleFqdns(
                                                Arrays.asList("mhzrn", "sdtclusiypbs", "gytguslfead"))
                                            .withInternalFqdn("gq")
                                            .withRedirectMapId("yhejhzisxgfp")
                                            .withPrivateLinkServiceArmRegion("olppvksrpqvujz"),
                                        new GroupConnectivityInformation().withGroupId("ehtwdwrft")
                                            .withMemberName("iby")
                                            .withCustomerVisibleFqdns(Arrays.asList("l"))
                                            .withInternalFqdn("shfwpracstwity")
                                            .withRedirectMapId("evxccedcp")
                                            .withPrivateLinkServiceArmRegion("dyodnwzxltj"),
                                        new GroupConnectivityInformation().withGroupId("nhltiugcxn")
                                            .withMemberName("vwxqibyqunyo")
                                            .withCustomerVisibleFqdns(Arrays.asList("lmdjrkvfgbvfvpdb", "daciz"))
                                            .withInternalFqdn("q")
                                            .withRedirectMapId("krribdeibqi")
                                            .withPrivateLinkServiceArmRegion("kghv"))),
                                new PrivateLinkServiceProxy().withId("dzwmkrefajpj")
                                    .withRemotePrivateLinkServiceConnectionState(new PrivateLinkServiceConnectionState()
                                        .withStatus(PrivateEndpointConnectionStatus.DISCONNECTED)
                                        .withDescription("nyhgbijtji")
                                        .withActionsRequired("xzsjabib"))
                                    .withRemotePrivateEndpointConnection(
                                        new RemotePrivateEndpointConnection().withId("tawfsdjpvkvp"))
                                    .withGroupConnectivityInformation(Arrays.asList(
                                        new GroupConnectivityInformation().withGroupId("kzbzkdvncjabudu")
                                            .withMemberName("kakmokzh")
                                            .withCustomerVisibleFqdns(Arrays.asList("lffhmouwqlg"))
                                            .withInternalFqdn("fzeeyebizik")
                                            .withRedirectMapId("uhqlbjbsybbqwrvt")
                                            .withPrivateLinkServiceArmRegion("gmfpgvmp"),
                                        new GroupConnectivityInformation().withGroupId("as")
                                            .withMemberName("haq")
                                            .withCustomerVisibleFqdns(Arrays.asList("smwutwbdsrezpd"))
                                            .withInternalFqdn("neuyow")
                                            .withRedirectMapId("d")
                                            .withPrivateLinkServiceArmRegion("t"),
                                        new GroupConnectivityInformation().withGroupId("ib")
                                            .withMemberName("cgpik")
                                            .withCustomerVisibleFqdns(Arrays.asList("mejzanlfzxia", "rmbzo"))
                                            .withInternalFqdn("kixrj")
                                            .withRedirectMapId("irgzp")
                                            .withPrivateLinkServiceArmRegion("lazszrn")))))
                        .withConnectionDetails(Arrays.asList(new ConnectionDetails().withId("ndfpwpj")
                            .withPrivateIpAddress("wbtlhflsjcdh")
                            .withLinkIdentifier("fjvfbgofeljagr")
                            .withGroupId("qhl")
                            .withMemberName("riiiojnalghfkv"))));
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnectionProxyProperties.class);
        Assertions.assertEquals("cvydypatdoo", model.remotePrivateEndpoint().id());
        Assertions.assertEquals("niodkooeb",
            model.remotePrivateEndpoint().privateLinkServiceConnections().get(0).name());
        Assertions.assertEquals("jhemms",
            model.remotePrivateEndpoint().privateLinkServiceConnections().get(0).groupIds().get(0));
        Assertions.assertEquals("fpagaowpulp",
            model.remotePrivateEndpoint().privateLinkServiceConnections().get(0).requestMessage());
        Assertions.assertEquals("zkfzbeyv",
            model.remotePrivateEndpoint().manualPrivateLinkServiceConnections().get(0).name());
        Assertions.assertEquals("icvi",
            model.remotePrivateEndpoint().manualPrivateLinkServiceConnections().get(0).groupIds().get(0));
        Assertions.assertEquals("kjj",
            model.remotePrivateEndpoint().manualPrivateLinkServiceConnections().get(0).requestMessage());
        Assertions.assertEquals("yfzqwhxxbu", model.remotePrivateEndpoint().privateLinkServiceProxies().get(0).id());
        Assertions.assertEquals(PrivateEndpointConnectionStatus.APPROVED,
            model.remotePrivateEndpoint()
                .privateLinkServiceProxies()
                .get(0)
                .remotePrivateLinkServiceConnectionState()
                .status());
        Assertions.assertEquals("feqztppriol",
            model.remotePrivateEndpoint()
                .privateLinkServiceProxies()
                .get(0)
                .remotePrivateLinkServiceConnectionState()
                .description());
        Assertions.assertEquals("rjaltolmncw",
            model.remotePrivateEndpoint()
                .privateLinkServiceProxies()
                .get(0)
                .remotePrivateLinkServiceConnectionState()
                .actionsRequired());
        Assertions.assertEquals("qwcsdbnwdcfhuc",
            model.remotePrivateEndpoint().privateLinkServiceProxies().get(0).remotePrivateEndpointConnection().id());
        Assertions.assertEquals("uvglsbjjcanvx",
            model.remotePrivateEndpoint()
                .privateLinkServiceProxies()
                .get(0)
                .groupConnectivityInformation()
                .get(0)
                .groupId());
        Assertions.assertEquals("t",
            model.remotePrivateEndpoint()
                .privateLinkServiceProxies()
                .get(0)
                .groupConnectivityInformation()
                .get(0)
                .memberName());
        Assertions.assertEquals("utncorm",
            model.remotePrivateEndpoint()
                .privateLinkServiceProxies()
                .get(0)
                .groupConnectivityInformation()
                .get(0)
                .customerVisibleFqdns()
                .get(0));
        Assertions.assertEquals("xqtvcofu",
            model.remotePrivateEndpoint()
                .privateLinkServiceProxies()
                .get(0)
                .groupConnectivityInformation()
                .get(0)
                .internalFqdn());
        Assertions.assertEquals("lvkgju",
            model.remotePrivateEndpoint()
                .privateLinkServiceProxies()
                .get(0)
                .groupConnectivityInformation()
                .get(0)
                .redirectMapId());
        Assertions.assertEquals("dknnqvsazn",
            model.remotePrivateEndpoint()
                .privateLinkServiceProxies()
                .get(0)
                .groupConnectivityInformation()
                .get(0)
                .privateLinkServiceArmRegion());
        Assertions.assertEquals("ndfpwpj", model.remotePrivateEndpoint().connectionDetails().get(0).id());
        Assertions.assertEquals("wbtlhflsjcdh",
            model.remotePrivateEndpoint().connectionDetails().get(0).privateIpAddress());
        Assertions.assertEquals("fjvfbgofeljagr",
            model.remotePrivateEndpoint().connectionDetails().get(0).linkIdentifier());
        Assertions.assertEquals("qhl", model.remotePrivateEndpoint().connectionDetails().get(0).groupId());
        Assertions.assertEquals("riiiojnalghfkv",
            model.remotePrivateEndpoint().connectionDetails().get(0).memberName());
    }
}
