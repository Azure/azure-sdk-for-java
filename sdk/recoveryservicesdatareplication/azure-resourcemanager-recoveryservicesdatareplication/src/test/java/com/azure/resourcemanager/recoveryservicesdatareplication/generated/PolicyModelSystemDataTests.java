// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.PolicyModelSystemData;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class PolicyModelSystemDataTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PolicyModelSystemData model = BinaryData.fromString(
            "{\"createdBy\":\"yggdtjixh\",\"createdByType\":\"uofqwe\",\"createdAt\":\"2021-10-20T00:24:32Z\",\"lastModifiedBy\":\"enevfyexfwhybci\",\"lastModifiedByType\":\"yvdcsitynnaa\",\"lastModifiedAt\":\"2021-03-17T15:40:41Z\"}")
            .toObject(PolicyModelSystemData.class);
        Assertions.assertEquals("yggdtjixh", model.createdBy());
        Assertions.assertEquals("uofqwe", model.createdByType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-20T00:24:32Z"), model.createdAt());
        Assertions.assertEquals("enevfyexfwhybci", model.lastModifiedBy());
        Assertions.assertEquals("yvdcsitynnaa", model.lastModifiedByType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-17T15:40:41Z"), model.lastModifiedAt());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PolicyModelSystemData model = new PolicyModelSystemData().withCreatedBy("yggdtjixh")
            .withCreatedByType("uofqwe")
            .withCreatedAt(OffsetDateTime.parse("2021-10-20T00:24:32Z"))
            .withLastModifiedBy("enevfyexfwhybci")
            .withLastModifiedByType("yvdcsitynnaa")
            .withLastModifiedAt(OffsetDateTime.parse("2021-03-17T15:40:41Z"));
        model = BinaryData.fromObject(model).toObject(PolicyModelSystemData.class);
        Assertions.assertEquals("yggdtjixh", model.createdBy());
        Assertions.assertEquals("uofqwe", model.createdByType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-20T00:24:32Z"), model.createdAt());
        Assertions.assertEquals("enevfyexfwhybci", model.lastModifiedBy());
        Assertions.assertEquals("yvdcsitynnaa", model.lastModifiedByType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-17T15:40:41Z"), model.lastModifiedAt());
    }
}
