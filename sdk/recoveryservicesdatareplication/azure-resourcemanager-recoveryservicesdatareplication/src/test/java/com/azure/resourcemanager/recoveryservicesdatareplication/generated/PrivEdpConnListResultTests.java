// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesdatareplication.implementation.models.PrivEdpConnListResult;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.PrivateEndpointConnectionStatus;
import org.junit.jupiter.api.Assertions;

public final class PrivEdpConnListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivEdpConnListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"provisioningState\":\"Succeeded\",\"privateEndpoint\":{\"id\":\"cdpu\"},\"privateLinkServiceConnectionState\":{\"status\":\"Approved\",\"description\":\"wznm\",\"actionsRequired\":\"iknsorgjh\"}},\"id\":\"ldtlwwr\",\"name\":\"kdmtncvokotll\",\"type\":\"d\"},{\"properties\":{\"provisioningState\":\"Deleted\",\"privateEndpoint\":{\"id\":\"cogjltdtbn\"},\"privateLinkServiceConnectionState\":{\"status\":\"Approved\",\"description\":\"ocrkvcikh\",\"actionsRequired\":\"p\"}},\"id\":\"qgxqquezikyw\",\"name\":\"gxk\",\"type\":\"lla\"},{\"properties\":{\"provisioningState\":\"Creating\",\"privateEndpoint\":{\"id\":\"ipicc\"},\"privateLinkServiceConnectionState\":{\"status\":\"Approved\",\"description\":\"v\",\"actionsRequired\":\"vc\"}},\"id\":\"y\",\"name\":\"hyrnxxmu\",\"type\":\"edndr\"},{\"properties\":{\"provisioningState\":\"Succeeded\",\"privateEndpoint\":{\"id\":\"qqtch\"},\"privateLinkServiceConnectionState\":{\"status\":\"Pending\",\"description\":\"mtdaa\",\"actionsRequired\":\"dvwvgpio\"}},\"id\":\"wxrt\",\"name\":\"udxepxgyqagv\",\"type\":\"vmnpkukghimdblx\"}],\"nextLink\":\"imfnjhfjx\"}")
            .toObject(PrivEdpConnListResult.class);
        Assertions.assertEquals("cdpu", model.value().get(0).properties().privateEndpoint().id());
        Assertions.assertEquals(PrivateEndpointConnectionStatus.APPROVED,
            model.value().get(0).properties().privateLinkServiceConnectionState().status());
        Assertions.assertEquals("wznm",
            model.value().get(0).properties().privateLinkServiceConnectionState().description());
        Assertions.assertEquals("iknsorgjh",
            model.value().get(0).properties().privateLinkServiceConnectionState().actionsRequired());
        Assertions.assertEquals("imfnjhfjx", model.nextLink());
    }
}
