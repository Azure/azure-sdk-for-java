// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesdatareplication.fluent.models.DeploymentPreflightModelInner;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.DeploymentPreflightResource;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DeploymentPreflightModelInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DeploymentPreflightModelInner model = BinaryData.fromString(
            "{\"resources\":[{\"name\":\"kuwhh\",\"type\":\"ykojoxafnndlpic\",\"location\":\"o\",\"apiVersion\":\"kcdyhbpk\"},{\"name\":\"wdreqnovvqfovl\",\"type\":\"ywsuwsy\",\"location\":\"ndsytgadg\",\"apiVersion\":\"aeaeneqnzarrw\"}]}")
            .toObject(DeploymentPreflightModelInner.class);
        Assertions.assertEquals("kuwhh", model.resources().get(0).name());
        Assertions.assertEquals("ykojoxafnndlpic", model.resources().get(0).type());
        Assertions.assertEquals("o", model.resources().get(0).location());
        Assertions.assertEquals("kcdyhbpk", model.resources().get(0).apiVersion());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DeploymentPreflightModelInner model = new DeploymentPreflightModelInner().withResources(Arrays.asList(
            new DeploymentPreflightResource().withName("kuwhh")
                .withType("ykojoxafnndlpic")
                .withLocation("o")
                .withApiVersion("kcdyhbpk"),
            new DeploymentPreflightResource().withName("wdreqnovvqfovl")
                .withType("ywsuwsy")
                .withLocation("ndsytgadg")
                .withApiVersion("aeaeneqnzarrw")));
        model = BinaryData.fromObject(model).toObject(DeploymentPreflightModelInner.class);
        Assertions.assertEquals("kuwhh", model.resources().get(0).name());
        Assertions.assertEquals("ykojoxafnndlpic", model.resources().get(0).type());
        Assertions.assertEquals("o", model.resources().get(0).location());
        Assertions.assertEquals("kcdyhbpk", model.resources().get(0).apiVersion());
    }
}
