// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.FabricModelSystemData;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class FabricModelSystemDataTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FabricModelSystemData model = BinaryData.fromString(
            "{\"createdBy\":\"hrzayvvtpgvdf\",\"createdByType\":\"otkftutqxlngx\",\"createdAt\":\"2021-12-03T02:20:16Z\",\"lastModifiedBy\":\"ugnxkrxdqmi\",\"lastModifiedByType\":\"thz\",\"lastModifiedAt\":\"2021-03-17T16:24:31Z\"}")
            .toObject(FabricModelSystemData.class);
        Assertions.assertEquals("hrzayvvtpgvdf", model.createdBy());
        Assertions.assertEquals("otkftutqxlngx", model.createdByType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-12-03T02:20:16Z"), model.createdAt());
        Assertions.assertEquals("ugnxkrxdqmi", model.lastModifiedBy());
        Assertions.assertEquals("thz", model.lastModifiedByType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-17T16:24:31Z"), model.lastModifiedAt());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FabricModelSystemData model = new FabricModelSystemData().withCreatedBy("hrzayvvtpgvdf")
            .withCreatedByType("otkftutqxlngx")
            .withCreatedAt(OffsetDateTime.parse("2021-12-03T02:20:16Z"))
            .withLastModifiedBy("ugnxkrxdqmi")
            .withLastModifiedByType("thz")
            .withLastModifiedAt(OffsetDateTime.parse("2021-03-17T16:24:31Z"));
        model = BinaryData.fromObject(model).toObject(FabricModelSystemData.class);
        Assertions.assertEquals("hrzayvvtpgvdf", model.createdBy());
        Assertions.assertEquals("otkftutqxlngx", model.createdByType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-12-03T02:20:16Z"), model.createdAt());
        Assertions.assertEquals("ugnxkrxdqmi", model.lastModifiedBy());
        Assertions.assertEquals("thz", model.lastModifiedByType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-17T16:24:31Z"), model.lastModifiedAt());
    }
}
