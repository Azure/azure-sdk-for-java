// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.recoveryservicesdatareplication.RecoveryServicesDataReplicationManager;
import com.azure.resourcemanager.recoveryservicesdatareplication.fluent.models.DeploymentPreflightModelInner;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.DeploymentPreflightModel;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.DeploymentPreflightResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ResourceProvidersDeploymentPrefMockTests {
    @Test
    public void testDeploymentPreflightWithResponse() throws Exception {
        String responseStr
            = "{\"resources\":[{\"name\":\"dfvclglxnfu\",\"type\":\"tkbu\",\"location\":\"ogsf\",\"apiVersion\":\"ayiansharujtji\"},{\"name\":\"fzyjqt\",\"type\":\"wkpqhjpenuygbq\",\"location\":\"qekewvnqvcd\",\"apiVersion\":\"uaucmf\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        RecoveryServicesDataReplicationManager manager = RecoveryServicesDataReplicationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        DeploymentPreflightModel response = manager.resourceProviders()
            .deploymentPreflightWithResponse("qbctqha", "zjrwdkqze",
                new DeploymentPreflightModelInner().withResources(Arrays.asList(
                    new DeploymentPreflightResource().withName("eziunjxdfzant")
                        .withType("cegyamlbnseqacj")
                        .withLocation("pilguooqjag")
                        .withApiVersion("itgueiookjbs"),
                    new DeploymentPreflightResource().withName("rtdtpdelq")
                        .withType("slmot")
                        .withLocation("bnfxofvc")
                        .withApiVersion("gdirazf"),
                    new DeploymentPreflightResource().withName("ejwabmdujtmvco")
                        .withType("xcmjurbu")
                        .withLocation("lkyqltqsrog")
                        .withApiVersion("wkffdjkt"))),
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("dfvclglxnfu", response.resources().get(0).name());
        Assertions.assertEquals("tkbu", response.resources().get(0).type());
        Assertions.assertEquals("ogsf", response.resources().get(0).location());
        Assertions.assertEquals("ayiansharujtji", response.resources().get(0).apiVersion());
    }
}
