// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.VaultModelUpdateSystemData;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class VaultModelUpdateSystemDataTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VaultModelUpdateSystemData model = BinaryData.fromString(
            "{\"createdBy\":\"wi\",\"createdByType\":\"njhf\",\"createdAt\":\"2021-07-29T00:37:17Z\",\"lastModifiedBy\":\"szkkfoqre\",\"lastModifiedByType\":\"kzikfjawneaivxwc\",\"lastModifiedAt\":\"2021-06-13T02:43:50Z\"}")
            .toObject(VaultModelUpdateSystemData.class);
        Assertions.assertEquals("wi", model.createdBy());
        Assertions.assertEquals("njhf", model.createdByType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-29T00:37:17Z"), model.createdAt());
        Assertions.assertEquals("szkkfoqre", model.lastModifiedBy());
        Assertions.assertEquals("kzikfjawneaivxwc", model.lastModifiedByType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-13T02:43:50Z"), model.lastModifiedAt());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VaultModelUpdateSystemData model = new VaultModelUpdateSystemData().withCreatedBy("wi")
            .withCreatedByType("njhf")
            .withCreatedAt(OffsetDateTime.parse("2021-07-29T00:37:17Z"))
            .withLastModifiedBy("szkkfoqre")
            .withLastModifiedByType("kzikfjawneaivxwc")
            .withLastModifiedAt(OffsetDateTime.parse("2021-06-13T02:43:50Z"));
        model = BinaryData.fromObject(model).toObject(VaultModelUpdateSystemData.class);
        Assertions.assertEquals("wi", model.createdBy());
        Assertions.assertEquals("njhf", model.createdByType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-29T00:37:17Z"), model.createdAt());
        Assertions.assertEquals("szkkfoqre", model.lastModifiedBy());
        Assertions.assertEquals("kzikfjawneaivxwc", model.lastModifiedByType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-13T02:43:50Z"), model.lastModifiedAt());
    }
}
