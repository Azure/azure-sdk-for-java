// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesdatareplication.fluent.models.VaultModelInner;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.ReplicationVaultType;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.VaultModelProperties;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class VaultModelInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VaultModelInner model = BinaryData.fromString(
            "{\"properties\":{\"provisioningState\":\"Creating\",\"serviceResourceId\":\"puvks\",\"vaultType\":\"DisasterRecovery\"},\"systemData\":{\"createdBy\":\"kn\",\"createdByType\":\"fsynljphuop\",\"createdAt\":\"2021-05-14T18:56:32Z\",\"lastModifiedBy\":\"qiy\",\"lastModifiedByType\":\"orzihle\",\"lastModifiedAt\":\"2021-07-15T08:30:28Z\"},\"location\":\"swsrms\",\"tags\":{\"xiy\":\"rpzbchckqqzqi\",\"yatrwy\":\"uiizynke\"},\"id\":\"q\",\"name\":\"ibzyhwitsmyp\",\"type\":\"ynpcdpumnzgmwznm\"}")
            .toObject(VaultModelInner.class);
        Assertions.assertEquals("swsrms", model.location());
        Assertions.assertEquals("rpzbchckqqzqi", model.tags().get("xiy"));
        Assertions.assertEquals(ReplicationVaultType.DISASTER_RECOVERY, model.properties().vaultType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VaultModelInner model = new VaultModelInner().withLocation("swsrms")
            .withTags(mapOf("xiy", "rpzbchckqqzqi", "yatrwy", "uiizynke"))
            .withProperties(new VaultModelProperties().withVaultType(ReplicationVaultType.DISASTER_RECOVERY));
        model = BinaryData.fromObject(model).toObject(VaultModelInner.class);
        Assertions.assertEquals("swsrms", model.location());
        Assertions.assertEquals("rpzbchckqqzqi", model.tags().get("xiy"));
        Assertions.assertEquals(ReplicationVaultType.DISASTER_RECOVERY, model.properties().vaultType());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
