// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.recoveryservicesdatareplication.RecoveryServicesDataReplicationManager;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.ConnectionDetails;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.GroupConnectivityInformation;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.PrivateEndpointConnectionProxy;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.PrivateEndpointConnectionProxyProperties;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.PrivateLinkServiceConnection;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.PrivateLinkServiceConnectionState;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.PrivateLinkServiceProxy;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.RemotePrivateEndpoint;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.RemotePrivateEndpointConnection;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PrivateEndpointConnProxiesCreateWithMockTests {
    @Test
    public void testCreateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Updating\",\"remotePrivateEndpoint\":{\"id\":\"d\",\"privateLinkServiceConnections\":[{\"name\":\"zralcxpjbyyps\",\"groupIds\":[\"cjenkyhfqzvsqxf\",\"jelgcmpzqjhhhq\",\"uwyvcacoyvi\"],\"requestMessage\":\"s\"},{\"name\":\"usjszlbscm\",\"groupIds\":[\"ijiufehgmvfln\",\"yvqkxr\",\"rlniyl\"],\"requestMessage\":\"yfw\"}],\"manualPrivateLinkServiceConnections\":[{\"name\":\"gqztwhghmupgx\",\"groupIds\":[\"cdxa\",\"bujftaben\",\"bklqpxz\",\"cafeddw\"],\"requestMessage\":\"lzafwxu\"},{\"name\":\"nhgookrtalvnbw\",\"groupIds\":[\"emeluclv\",\"jjukyrdnqodxah\",\"xhqf\"],\"requestMessage\":\"nvzoqgyipemch\"}],\"privateLinkServiceProxies\":[{\"id\":\"czuejdtxptl\",\"remotePrivateLinkServiceConnectionState\":{},\"remotePrivateEndpointConnection\":{},\"groupConnectivityInformation\":[{},{},{}]}],\"connectionDetails\":[{\"id\":\"wjjstliuhqa\",\"privateIpAddress\":\"oaiancznvodrrs\",\"linkIdentifier\":\"lxydkxrxv\",\"groupId\":\"xiwkgfbql\",\"memberName\":\"qkhychocok\"},{\"id\":\"ehurqlr\",\"privateIpAddress\":\"fawey\",\"linkIdentifier\":\"kphyjdxrav\",\"groupId\":\"qdbrxmrgc\",\"memberName\":\"apx\"},{\"id\":\"y\",\"privateIpAddress\":\"j\",\"linkIdentifier\":\"ajb\",\"groupId\":\"cgduusio\",\"memberName\":\"blevpmcluj\"}]}},\"etag\":\"kyxl\",\"id\":\"sjgkzzltafh\",\"name\":\"zffovwmbjl\",\"type\":\"qsczpgvdwnapfdqw\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        RecoveryServicesDataReplicationManager manager = RecoveryServicesDataReplicationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PrivateEndpointConnectionProxy response
            = manager.privateEndpointConnProxies()
                .define("upeuknijduyye")
                .withExistingReplicationVault("wqejpmvsse", "aepwamcxtcz")
                .withProperties(
                    new PrivateEndpointConnectionProxyProperties()
                        .withRemotePrivateEndpoint(
                            new RemotePrivateEndpoint().withId("fbocyvhh")
                                .withPrivateLinkServiceConnections(
                                    Arrays.asList(
                                        new PrivateLinkServiceConnection().withName("ywikd")
                                            .withGroupIds(Arrays.asList("akuflgbhgauacdix", "xufrsryjqgdk", "nozoeoq",
                                                "vjhvefgwbm"))
                                            .withRequestMessage("c"),
                                        new PrivateLinkServiceConnection().withName("tasfaymxbulpzeal")
                                            .withGroupIds(Arrays.asList("kyojwyvfk", "btsuahxs", "xjcmmzrrsc"))
                                            .withRequestMessage("i")))
                                .withManualPrivateLinkServiceConnections(
                                    Arrays.asList(
                                        new PrivateLinkServiceConnection().withName("npxqwodi")
                                            .withGroupIds(
                                                Arrays.asList("xcjr", "muabwibvjogjonmc", "e", "oyzbamwineofvf"))
                                            .withRequestMessage("kpoldtvevboc"),
                                        new PrivateLinkServiceConnection().withName("hzjkn")
                                            .withGroupIds(Arrays.asList("gvttx", "nrup"))
                                            .withRequestMessage("amrdixtrekidswys"),
                                        new PrivateLinkServiceConnection().withName("ruffgllukk")
                                            .withGroupIds(
                                                Arrays.asList("lxhrp", "hvmblcouqehbhbc", "sziryrandoyp", "blto"))
                                            .withRequestMessage("mkfqlwxldy")))
                                .withPrivateLinkServiceProxies(Arrays.asList(
                                    new PrivateLinkServiceProxy()
                                        .withId("ygaolnjpnnb")
                                        .withRemotePrivateLinkServiceConnectionState(
                                            new PrivateLinkServiceConnectionState())
                                        .withRemotePrivateEndpointConnection(new RemotePrivateEndpointConnection())
                                        .withGroupConnectivityInformation(
                                            Arrays.asList(
                                                new GroupConnectivityInformation(), new GroupConnectivityInformation(),
                                                new GroupConnectivityInformation())),
                                    new PrivateLinkServiceProxy().withId("jgsjjxxahmrn")
                                        .withRemotePrivateLinkServiceConnectionState(
                                            new PrivateLinkServiceConnectionState())
                                        .withRemotePrivateEndpointConnection(new RemotePrivateEndpointConnection())
                                        .withGroupConnectivityInformation(Arrays.asList(
                                            new GroupConnectivityInformation(), new GroupConnectivityInformation(),
                                            new GroupConnectivityInformation()))))
                                .withConnectionDetails(Arrays.asList(
                                    new ConnectionDetails().withId("yi")
                                        .withPrivateIpAddress("inbmh")
                                        .withLinkIdentifier("jijkgqxnhmbke")
                                        .withGroupId("jauj")
                                        .withMemberName("annggiy"),
                                    new ConnectionDetails().withId("kdtaaw")
                                        .withPrivateIpAddress("fe")
                                        .withLinkIdentifier("umrrqmbzm")
                                        .withGroupId("ratbnxwbjs")
                                        .withMemberName("birkfpksokdg"),
                                    new ConnectionDetails().withId("ewijymrhbguz")
                                        .withPrivateIpAddress("kyewnfnzhhhqo")
                                        .withLinkIdentifier("ffjkutycyarnroo")
                                        .withGroupId("uabzoghkt")
                                        .withMemberName("yczhco")))))
                .withEtag("cnhz")
                .create();

        Assertions.assertEquals("d", response.properties().remotePrivateEndpoint().id());
        Assertions.assertEquals("zralcxpjbyyps",
            response.properties().remotePrivateEndpoint().privateLinkServiceConnections().get(0).name());
        Assertions.assertEquals("cjenkyhfqzvsqxf",
            response.properties().remotePrivateEndpoint().privateLinkServiceConnections().get(0).groupIds().get(0));
        Assertions.assertEquals("s",
            response.properties().remotePrivateEndpoint().privateLinkServiceConnections().get(0).requestMessage());
        Assertions.assertEquals("gqztwhghmupgx",
            response.properties().remotePrivateEndpoint().manualPrivateLinkServiceConnections().get(0).name());
        Assertions.assertEquals("cdxa",
            response.properties()
                .remotePrivateEndpoint()
                .manualPrivateLinkServiceConnections()
                .get(0)
                .groupIds()
                .get(0));
        Assertions.assertEquals("lzafwxu",
            response.properties()
                .remotePrivateEndpoint()
                .manualPrivateLinkServiceConnections()
                .get(0)
                .requestMessage());
        Assertions.assertEquals("czuejdtxptl",
            response.properties().remotePrivateEndpoint().privateLinkServiceProxies().get(0).id());
        Assertions.assertEquals("wjjstliuhqa",
            response.properties().remotePrivateEndpoint().connectionDetails().get(0).id());
        Assertions.assertEquals("oaiancznvodrrs",
            response.properties().remotePrivateEndpoint().connectionDetails().get(0).privateIpAddress());
        Assertions.assertEquals("lxydkxrxv",
            response.properties().remotePrivateEndpoint().connectionDetails().get(0).linkIdentifier());
        Assertions.assertEquals("xiwkgfbql",
            response.properties().remotePrivateEndpoint().connectionDetails().get(0).groupId());
        Assertions.assertEquals("qkhychocok",
            response.properties().remotePrivateEndpoint().connectionDetails().get(0).memberName());
        Assertions.assertEquals("kyxl", response.etag());
    }
}
