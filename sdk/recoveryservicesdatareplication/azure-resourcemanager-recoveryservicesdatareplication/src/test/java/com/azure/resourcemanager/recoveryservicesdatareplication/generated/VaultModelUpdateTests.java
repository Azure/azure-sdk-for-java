// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.ReplicationVaultType;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.VaultIdentityModel;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.VaultIdentityType;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.VaultModelProperties;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.VaultModelUpdate;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class VaultModelUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VaultModelUpdate model = BinaryData.fromString(
            "{\"tags\":{\"yhxhu\":\"uticndvkaozwyif\",\"fkgiawxk\":\"okftyxolniwpwcuk\",\"dhsgcba\":\"ryplwckbasyypn\"},\"properties\":{\"provisioningState\":\"Deleting\",\"serviceResourceId\":\"koty\",\"vaultType\":\"DisasterRecovery\"},\"identity\":{\"type\":\"SystemAssigned\",\"principalId\":\"zndlikwy\",\"tenantId\":\"gfgibm\"},\"id\":\"gakeqsr\",\"name\":\"bzqqedqytbciq\",\"type\":\"uflmm\"}")
            .toObject(VaultModelUpdate.class);
        Assertions.assertEquals("uticndvkaozwyif", model.tags().get("yhxhu"));
        Assertions.assertEquals(ReplicationVaultType.DISASTER_RECOVERY, model.properties().vaultType());
        Assertions.assertEquals(VaultIdentityType.SYSTEM_ASSIGNED, model.identity().type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VaultModelUpdate model = new VaultModelUpdate()
            .withTags(mapOf("yhxhu", "uticndvkaozwyif", "fkgiawxk", "okftyxolniwpwcuk", "dhsgcba", "ryplwckbasyypn"))
            .withProperties(new VaultModelProperties().withVaultType(ReplicationVaultType.DISASTER_RECOVERY))
            .withIdentity(new VaultIdentityModel().withType(VaultIdentityType.SYSTEM_ASSIGNED));
        model = BinaryData.fromObject(model).toObject(VaultModelUpdate.class);
        Assertions.assertEquals("uticndvkaozwyif", model.tags().get("yhxhu"));
        Assertions.assertEquals(ReplicationVaultType.DISASTER_RECOVERY, model.properties().vaultType());
        Assertions.assertEquals(VaultIdentityType.SYSTEM_ASSIGNED, model.identity().type());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
