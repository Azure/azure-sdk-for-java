// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.HyperVToAzStackHciDiskInput;
import org.junit.jupiter.api.Assertions;

public final class HyperVToAzStackHciDiskInputTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HyperVToAzStackHciDiskInput model = BinaryData.fromString(
            "{\"diskId\":\"rd\",\"storageContainerId\":\"wiithtywub\",\"isDynamic\":true,\"diskSizeGB\":7181747560236426784,\"diskFileFormat\":\"wqknfdn\",\"isOsDisk\":false}")
            .toObject(HyperVToAzStackHciDiskInput.class);
        Assertions.assertEquals("rd", model.diskId());
        Assertions.assertEquals("wiithtywub", model.storageContainerId());
        Assertions.assertEquals(true, model.isDynamic());
        Assertions.assertEquals(7181747560236426784L, model.diskSizeGB());
        Assertions.assertEquals("wqknfdn", model.diskFileFormat());
        Assertions.assertEquals(false, model.isOsDisk());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HyperVToAzStackHciDiskInput model = new HyperVToAzStackHciDiskInput().withDiskId("rd")
            .withStorageContainerId("wiithtywub")
            .withIsDynamic(true)
            .withDiskSizeGB(7181747560236426784L)
            .withDiskFileFormat("wqknfdn")
            .withIsOsDisk(false);
        model = BinaryData.fromObject(model).toObject(HyperVToAzStackHciDiskInput.class);
        Assertions.assertEquals("rd", model.diskId());
        Assertions.assertEquals("wiithtywub", model.storageContainerId());
        Assertions.assertEquals(true, model.isDynamic());
        Assertions.assertEquals(7181747560236426784L, model.diskSizeGB());
        Assertions.assertEquals("wqknfdn", model.diskFileFormat());
        Assertions.assertEquals(false, model.isOsDisk());
    }
}
