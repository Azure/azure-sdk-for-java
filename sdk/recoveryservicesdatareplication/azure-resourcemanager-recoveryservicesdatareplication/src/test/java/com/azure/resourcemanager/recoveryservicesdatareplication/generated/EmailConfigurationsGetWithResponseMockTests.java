// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.recoveryservicesdatareplication.RecoveryServicesDataReplicationManager;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.EmailConfigurationModel;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class EmailConfigurationsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"sendToOwners\":false,\"customEmailAddresses\":[\"yjede\",\"xm\"],\"locale\":\"mkqscaz\",\"provisioningState\":\"Creating\"},\"id\":\"tzxpuamwabzxrv\",\"name\":\"cush\",\"type\":\"phai\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        RecoveryServicesDataReplicationManager manager = RecoveryServicesDataReplicationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        EmailConfigurationModel response = manager.emailConfigurations()
            .getWithResponse("juj", "ickpz", "cpopmxel", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertFalse(response.properties().sendToOwners());
        Assertions.assertEquals("yjede", response.properties().customEmailAddresses().get(0));
        Assertions.assertEquals("mkqscaz", response.properties().locale());
    }
}
