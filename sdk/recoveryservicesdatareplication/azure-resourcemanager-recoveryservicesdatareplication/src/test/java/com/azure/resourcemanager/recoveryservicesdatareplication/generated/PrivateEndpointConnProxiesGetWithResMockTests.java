// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.recoveryservicesdatareplication.RecoveryServicesDataReplicationManager;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.PrivateEndpointConnectionProxy;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PrivateEndpointConnProxiesGetWithResMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Creating\",\"remotePrivateEndpoint\":{\"id\":\"cdoewbidyv\",\"privateLinkServiceConnections\":[{\"name\":\"xvgpiude\",\"groupIds\":[\"sxze\",\"paxwkufyk\"],\"requestMessage\":\"uhxep\"}],\"manualPrivateLinkServiceConnections\":[{\"name\":\"znabaobns\",\"groupIds\":[\"djltymkm\",\"guihywar\",\"spphk\",\"xkykxdssjp\"],\"requestMessage\":\"mucfxhikkf\"},{\"name\":\"mymyincqlhri\",\"groupIds\":[\"lmiiiovg\"],\"requestMessage\":\"gxuugqkctotio\"},{\"name\":\"xteqdptjgwdtg\",\"groupIds\":[\"anblwphqlkccu\",\"gygqwah\",\"iul\",\"gniiprglvaw\"],\"requestMessage\":\"z\"}],\"privateLinkServiceProxies\":[{\"id\":\"pivlsbbjpm\",\"remotePrivateLinkServiceConnectionState\":{},\"remotePrivateEndpointConnection\":{},\"groupConnectivityInformation\":[{},{},{}]},{\"id\":\"foxx\",\"remotePrivateLinkServiceConnectionState\":{},\"remotePrivateEndpointConnection\":{},\"groupConnectivityInformation\":[{},{},{}]}],\"connectionDetails\":[{\"id\":\"pmhbrbq\",\"privateIpAddress\":\"govpbbtte\",\"linkIdentifier\":\"oknssqyzqedikdf\",\"groupId\":\"biqmrjgei\",\"memberName\":\"qlggwfi\"}]}},\"etag\":\"cxmjpbyephmg\",\"id\":\"ljvrcmyfqipgxhnp\",\"name\":\"myqwcab\",\"type\":\"nuilee\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        RecoveryServicesDataReplicationManager manager = RecoveryServicesDataReplicationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PrivateEndpointConnectionProxy response = manager.privateEndpointConnProxies()
            .getWithResponse("ycsxzu", "ksrl", "mdesqp", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("cdoewbidyv", response.properties().remotePrivateEndpoint().id());
        Assertions.assertEquals("xvgpiude",
            response.properties().remotePrivateEndpoint().privateLinkServiceConnections().get(0).name());
        Assertions.assertEquals("sxze",
            response.properties().remotePrivateEndpoint().privateLinkServiceConnections().get(0).groupIds().get(0));
        Assertions.assertEquals("uhxep",
            response.properties().remotePrivateEndpoint().privateLinkServiceConnections().get(0).requestMessage());
        Assertions.assertEquals("znabaobns",
            response.properties().remotePrivateEndpoint().manualPrivateLinkServiceConnections().get(0).name());
        Assertions.assertEquals("djltymkm",
            response.properties()
                .remotePrivateEndpoint()
                .manualPrivateLinkServiceConnections()
                .get(0)
                .groupIds()
                .get(0));
        Assertions.assertEquals("mucfxhikkf",
            response.properties()
                .remotePrivateEndpoint()
                .manualPrivateLinkServiceConnections()
                .get(0)
                .requestMessage());
        Assertions.assertEquals("pivlsbbjpm",
            response.properties().remotePrivateEndpoint().privateLinkServiceProxies().get(0).id());
        Assertions.assertEquals("pmhbrbq",
            response.properties().remotePrivateEndpoint().connectionDetails().get(0).id());
        Assertions.assertEquals("govpbbtte",
            response.properties().remotePrivateEndpoint().connectionDetails().get(0).privateIpAddress());
        Assertions.assertEquals("oknssqyzqedikdf",
            response.properties().remotePrivateEndpoint().connectionDetails().get(0).linkIdentifier());
        Assertions.assertEquals("biqmrjgei",
            response.properties().remotePrivateEndpoint().connectionDetails().get(0).groupId());
        Assertions.assertEquals("qlggwfi",
            response.properties().remotePrivateEndpoint().connectionDetails().get(0).memberName());
        Assertions.assertEquals("cxmjpbyephmg", response.etag());
    }
}
