// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.HyperVToAzStackHciDiskInput;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.HyperVToAzStackHciNicInput;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.HyperVToAzStackHciProtectedItemCustomProps;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.ProtectedItemDynamicMemoryConfig;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.VMNicSelection;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class HyperVToAzStackHciProtectedItemCustomPropsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HyperVToAzStackHciProtectedItemCustomProps model = BinaryData.fromString(
            "{\"instanceType\":\"HyperVToAzStackHCI\",\"activeLocation\":\"Primary\",\"targetHciClusterId\":\"ybycnunvj\",\"targetArcClusterCustomLocationId\":\"rtkfawnopq\",\"targetAzStackHciClusterName\":\"kyzirtxdyux\",\"fabricDiscoveryMachineId\":\"ejnt\",\"disksToInclude\":[{\"diskId\":\"ewgioilqukrydxt\",\"storageContainerId\":\"ieoxorggufhyaomt\",\"isDynamic\":true,\"diskSizeGB\":7692661990763768834,\"diskFileFormat\":\"vgrvkffo\",\"isOsDisk\":true},{\"diskId\":\"zh\",\"storageContainerId\":\"bibgjmfxumv\",\"isDynamic\":true,\"diskSizeGB\":5212517454826993693,\"diskFileFormat\":\"ovwxnbkfezzxsc\",\"isOsDisk\":true},{\"diskId\":\"wzdgirujbzbo\",\"storageContainerId\":\"zzbtdcqvpniyujvi\",\"isDynamic\":false,\"diskSizeGB\":3489136275028271698,\"diskFileFormat\":\"hfssnrb\",\"isOsDisk\":false}],\"nicsToInclude\":[{\"nicId\":\"frymsgaojfmwnc\",\"networkName\":\"mrfhirctymox\",\"targetNetworkId\":\"ftpipiwyczu\",\"testNetworkId\":\"xacpqjli\",\"selectionTypeForFailover\":\"NotSelected\"}],\"sourceVmName\":\"usps\",\"sourceCpuCores\":2005898157,\"sourceMemoryInMegaBytes\":82.3775641522288,\"targetVmName\":\"fwdgzxulucvp\",\"targetResourceGroupId\":\"mrsreuzvxurisjnh\",\"storageContainerId\":\"ytxifqjzgxmrh\",\"hyperVGeneration\":\"blwpcesutrgj\",\"targetNetworkId\":\"auutpwoqhihe\",\"testNetworkId\":\"g\",\"targetCpuCores\":172969394,\"isDynamicRam\":false,\"dynamicMemoryConfig\":{\"maximumMemoryInMegaBytes\":958728478433643843,\"minimumMemoryInMegaBytes\":7466469526219153540,\"targetMemoryBufferPercentage\":1562895669},\"targetMemoryInMegaBytes\":613728557,\"runAsAccountId\":\"jv\",\"sourceDraName\":\"oimwkslirc\",\"targetDraName\":\"zjxvydfcea\",\"sourceApplianceName\":\"lhvygdyftu\",\"targetApplianceName\":\"twnawjslbiwkojgc\",\"osType\":\"tsf\",\"osName\":\"nbaeqphchqn\",\"firmwareType\":\"rpxeh\",\"targetLocation\":\"rykqgaifmvikl\",\"customLocationRegion\":\"ydv\",\"failoverRecoveryPointId\":\"bejdznxcv\",\"lastRecoveryPointReceived\":\"2021-01-28T16:24:30Z\",\"lastRecoveryPointId\":\"njivolvtnovq\",\"initialReplicationProgressPercentage\":1468249043,\"resyncProgressPercentage\":1600023368,\"protectedDisks\":[{\"storageContainerId\":\"tul\",\"storageContainerLocalPath\":\"tduceamt\",\"sourceDiskId\":\"zuo\",\"sourceDiskName\":\"jw\",\"seedDiskName\":\"wqiok\",\"testMigrateDiskName\":\"sx\",\"migrateDiskName\":\"jmsvpkjp\",\"isOsDisk\":false,\"capacityInBytes\":4105155786723163157,\"isDynamic\":false,\"diskType\":\"jyxgtczh\"},{\"storageContainerId\":\"dbsdshm\",\"storageContainerLocalPath\":\"maehvbbxurip\",\"sourceDiskId\":\"fnhtbaxkgxyw\",\"sourceDiskName\":\"kpyklyhp\",\"seedDiskName\":\"odpvruudlgzib\",\"testMigrateDiskName\":\"ostgkts\",\"migrateDiskName\":\"dxeclzedqbcvh\",\"isOsDisk\":false,\"capacityInBytes\":4935668791818517430,\"isDynamic\":false,\"diskType\":\"dlwwqfbumlkxt\"},{\"storageContainerId\":\"jfsmlmbtxhwgfwsr\",\"storageContainerLocalPath\":\"wcoezbrhub\",\"sourceDiskId\":\"hud\",\"sourceDiskName\":\"oookkqfq\",\"seedDiskName\":\"vleo\",\"testMigrateDiskName\":\"ml\",\"migrateDiskName\":\"qtqzfavyv\",\"isOsDisk\":true,\"capacityInBytes\":3285042382273237059,\"isDynamic\":false,\"diskType\":\"uayjkqa\"}],\"protectedNics\":[{\"nicId\":\"slesjcbhernnt\",\"macAddress\":\"w\",\"networkName\":\"cv\",\"targetNetworkId\":\"uwrbehwagoh\",\"testNetworkId\":\"f\",\"selectionTypeForFailover\":\"SelectedByDefault\"},{\"nicId\":\"qem\",\"macAddress\":\"hmxtdr\",\"networkName\":\"utacoe\",\"targetNetworkId\":\"vewzcj\",\"testNetworkId\":\"m\",\"selectionTypeForFailover\":\"SelectedByUserOverride\"},{\"nicId\":\"guaadraufactkahz\",\"macAddress\":\"ajjziuxxpshne\",\"networkName\":\"ulfgslqu\",\"targetNetworkId\":\"wdlenrdsut\",\"testNetworkId\":\"bazpjuohmi\",\"selectionTypeForFailover\":\"SelectedByDefault\"},{\"nicId\":\"norwmduvwpklvx\",\"macAddress\":\"ygdxpgpqchis\",\"networkName\":\"pnnbjc\",\"targetNetworkId\":\"gibbdaxc\",\"testNetworkId\":\"fozauorsuk\",\"selectionTypeForFailover\":\"SelectedByUser\"}],\"targetVmBiosId\":\"qplhlvnu\",\"lastReplicationUpdateTime\":\"2021-08-29T14:02:44Z\"}")
            .toObject(HyperVToAzStackHciProtectedItemCustomProps.class);
        Assertions.assertEquals("ybycnunvj", model.targetHciClusterId());
        Assertions.assertEquals("rtkfawnopq", model.targetArcClusterCustomLocationId());
        Assertions.assertEquals("ejnt", model.fabricDiscoveryMachineId());
        Assertions.assertEquals("ewgioilqukrydxt", model.disksToInclude().get(0).diskId());
        Assertions.assertEquals("ieoxorggufhyaomt", model.disksToInclude().get(0).storageContainerId());
        Assertions.assertEquals(true, model.disksToInclude().get(0).isDynamic());
        Assertions.assertEquals(7692661990763768834L, model.disksToInclude().get(0).diskSizeGB());
        Assertions.assertEquals("vgrvkffo", model.disksToInclude().get(0).diskFileFormat());
        Assertions.assertEquals(true, model.disksToInclude().get(0).isOsDisk());
        Assertions.assertEquals("frymsgaojfmwnc", model.nicsToInclude().get(0).nicId());
        Assertions.assertEquals("ftpipiwyczu", model.nicsToInclude().get(0).targetNetworkId());
        Assertions.assertEquals("xacpqjli", model.nicsToInclude().get(0).testNetworkId());
        Assertions.assertEquals(VMNicSelection.NOT_SELECTED, model.nicsToInclude().get(0).selectionTypeForFailover());
        Assertions.assertEquals("fwdgzxulucvp", model.targetVmName());
        Assertions.assertEquals("mrsreuzvxurisjnh", model.targetResourceGroupId());
        Assertions.assertEquals("ytxifqjzgxmrh", model.storageContainerId());
        Assertions.assertEquals("blwpcesutrgj", model.hyperVGeneration());
        Assertions.assertEquals("auutpwoqhihe", model.targetNetworkId());
        Assertions.assertEquals("g", model.testNetworkId());
        Assertions.assertEquals(172969394, model.targetCpuCores());
        Assertions.assertEquals(false, model.isDynamicRam());
        Assertions.assertEquals(958728478433643843L, model.dynamicMemoryConfig().maximumMemoryInMegaBytes());
        Assertions.assertEquals(7466469526219153540L, model.dynamicMemoryConfig().minimumMemoryInMegaBytes());
        Assertions.assertEquals(1562895669, model.dynamicMemoryConfig().targetMemoryBufferPercentage());
        Assertions.assertEquals(613728557, model.targetMemoryInMegaBytes());
        Assertions.assertEquals("jv", model.runAsAccountId());
        Assertions.assertEquals("oimwkslirc", model.sourceDraName());
        Assertions.assertEquals("zjxvydfcea", model.targetDraName());
        Assertions.assertEquals("ydv", model.customLocationRegion());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HyperVToAzStackHciProtectedItemCustomProps model
            = new HyperVToAzStackHciProtectedItemCustomProps().withTargetHciClusterId("ybycnunvj")
                .withTargetArcClusterCustomLocationId("rtkfawnopq")
                .withFabricDiscoveryMachineId("ejnt")
                .withDisksToInclude(Arrays.asList(
                    new HyperVToAzStackHciDiskInput().withDiskId("ewgioilqukrydxt")
                        .withStorageContainerId("ieoxorggufhyaomt")
                        .withIsDynamic(true)
                        .withDiskSizeGB(7692661990763768834L)
                        .withDiskFileFormat("vgrvkffo")
                        .withIsOsDisk(true),
                    new HyperVToAzStackHciDiskInput().withDiskId("zh")
                        .withStorageContainerId("bibgjmfxumv")
                        .withIsDynamic(true)
                        .withDiskSizeGB(5212517454826993693L)
                        .withDiskFileFormat("ovwxnbkfezzxsc")
                        .withIsOsDisk(true),
                    new HyperVToAzStackHciDiskInput().withDiskId("wzdgirujbzbo")
                        .withStorageContainerId("zzbtdcqvpniyujvi")
                        .withIsDynamic(false)
                        .withDiskSizeGB(3489136275028271698L)
                        .withDiskFileFormat("hfssnrb")
                        .withIsOsDisk(false)))
                .withNicsToInclude(Arrays.asList(new HyperVToAzStackHciNicInput().withNicId("frymsgaojfmwnc")
                    .withTargetNetworkId("ftpipiwyczu")
                    .withTestNetworkId("xacpqjli")
                    .withSelectionTypeForFailover(VMNicSelection.NOT_SELECTED)))
                .withTargetVmName("fwdgzxulucvp")
                .withTargetResourceGroupId("mrsreuzvxurisjnh")
                .withStorageContainerId("ytxifqjzgxmrh")
                .withHyperVGeneration("blwpcesutrgj")
                .withTargetNetworkId("auutpwoqhihe")
                .withTestNetworkId("g")
                .withTargetCpuCores(172969394)
                .withIsDynamicRam(false)
                .withDynamicMemoryConfig(
                    new ProtectedItemDynamicMemoryConfig().withMaximumMemoryInMegaBytes(958728478433643843L)
                        .withMinimumMemoryInMegaBytes(7466469526219153540L)
                        .withTargetMemoryBufferPercentage(1562895669))
                .withTargetMemoryInMegaBytes(613728557)
                .withRunAsAccountId("jv")
                .withSourceDraName("oimwkslirc")
                .withTargetDraName("zjxvydfcea")
                .withCustomLocationRegion("ydv");
        model = BinaryData.fromObject(model).toObject(HyperVToAzStackHciProtectedItemCustomProps.class);
        Assertions.assertEquals("ybycnunvj", model.targetHciClusterId());
        Assertions.assertEquals("rtkfawnopq", model.targetArcClusterCustomLocationId());
        Assertions.assertEquals("ejnt", model.fabricDiscoveryMachineId());
        Assertions.assertEquals("ewgioilqukrydxt", model.disksToInclude().get(0).diskId());
        Assertions.assertEquals("ieoxorggufhyaomt", model.disksToInclude().get(0).storageContainerId());
        Assertions.assertEquals(true, model.disksToInclude().get(0).isDynamic());
        Assertions.assertEquals(7692661990763768834L, model.disksToInclude().get(0).diskSizeGB());
        Assertions.assertEquals("vgrvkffo", model.disksToInclude().get(0).diskFileFormat());
        Assertions.assertEquals(true, model.disksToInclude().get(0).isOsDisk());
        Assertions.assertEquals("frymsgaojfmwnc", model.nicsToInclude().get(0).nicId());
        Assertions.assertEquals("ftpipiwyczu", model.nicsToInclude().get(0).targetNetworkId());
        Assertions.assertEquals("xacpqjli", model.nicsToInclude().get(0).testNetworkId());
        Assertions.assertEquals(VMNicSelection.NOT_SELECTED, model.nicsToInclude().get(0).selectionTypeForFailover());
        Assertions.assertEquals("fwdgzxulucvp", model.targetVmName());
        Assertions.assertEquals("mrsreuzvxurisjnh", model.targetResourceGroupId());
        Assertions.assertEquals("ytxifqjzgxmrh", model.storageContainerId());
        Assertions.assertEquals("blwpcesutrgj", model.hyperVGeneration());
        Assertions.assertEquals("auutpwoqhihe", model.targetNetworkId());
        Assertions.assertEquals("g", model.testNetworkId());
        Assertions.assertEquals(172969394, model.targetCpuCores());
        Assertions.assertEquals(false, model.isDynamicRam());
        Assertions.assertEquals(958728478433643843L, model.dynamicMemoryConfig().maximumMemoryInMegaBytes());
        Assertions.assertEquals(7466469526219153540L, model.dynamicMemoryConfig().minimumMemoryInMegaBytes());
        Assertions.assertEquals(1562895669, model.dynamicMemoryConfig().targetMemoryBufferPercentage());
        Assertions.assertEquals(613728557, model.targetMemoryInMegaBytes());
        Assertions.assertEquals("jv", model.runAsAccountId());
        Assertions.assertEquals("oimwkslirc", model.sourceDraName());
        Assertions.assertEquals("zjxvydfcea", model.targetDraName());
        Assertions.assertEquals("ydv", model.customLocationRegion());
    }
}
