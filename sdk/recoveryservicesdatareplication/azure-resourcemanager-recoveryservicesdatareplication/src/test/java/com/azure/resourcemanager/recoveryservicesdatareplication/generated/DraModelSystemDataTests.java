// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.DraModelSystemData;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class DraModelSystemDataTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DraModelSystemData model = BinaryData.fromString(
            "{\"createdBy\":\"zkrwfn\",\"createdByType\":\"odjpslwejd\",\"createdAt\":\"2021-02-19T06:09:33Z\",\"lastModifiedBy\":\"yoqpsoaccta\",\"lastModifiedByType\":\"kljla\",\"lastModifiedAt\":\"2021-06-15T07:28:27Z\"}")
            .toObject(DraModelSystemData.class);
        Assertions.assertEquals("zkrwfn", model.createdBy());
        Assertions.assertEquals("odjpslwejd", model.createdByType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-19T06:09:33Z"), model.createdAt());
        Assertions.assertEquals("yoqpsoaccta", model.lastModifiedBy());
        Assertions.assertEquals("kljla", model.lastModifiedByType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-15T07:28:27Z"), model.lastModifiedAt());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DraModelSystemData model = new DraModelSystemData().withCreatedBy("zkrwfn")
            .withCreatedByType("odjpslwejd")
            .withCreatedAt(OffsetDateTime.parse("2021-02-19T06:09:33Z"))
            .withLastModifiedBy("yoqpsoaccta")
            .withLastModifiedByType("kljla")
            .withLastModifiedAt(OffsetDateTime.parse("2021-06-15T07:28:27Z"));
        model = BinaryData.fromObject(model).toObject(DraModelSystemData.class);
        Assertions.assertEquals("zkrwfn", model.createdBy());
        Assertions.assertEquals("odjpslwejd", model.createdByType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-19T06:09:33Z"), model.createdAt());
        Assertions.assertEquals("yoqpsoaccta", model.lastModifiedBy());
        Assertions.assertEquals("kljla", model.lastModifiedByType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-15T07:28:27Z"), model.lastModifiedAt());
    }
}
