// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.deviceprovisioning.implementation.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** The CertificateMetadata model. */
@Immutable
public final class CertificateMetadata {
    /*
     * The subjectName property.
     */
    @JsonProperty(value = "subjectName", access = JsonProperty.Access.WRITE_ONLY)
    private String subjectName;

    /*
     * The sha1Thumbprint property.
     */
    @JsonProperty(value = "sha1Thumbprint", access = JsonProperty.Access.WRITE_ONLY)
    private String sha1Thumbprint;

    /*
     * The sha256Thumbprint property.
     */
    @JsonProperty(value = "sha256Thumbprint", access = JsonProperty.Access.WRITE_ONLY)
    private String sha256Thumbprint;

    /*
     * The issuerName property.
     */
    @JsonProperty(value = "issuerName", access = JsonProperty.Access.WRITE_ONLY)
    private String issuerName;

    /*
     * The notBeforeUtc property.
     */
    @JsonProperty(value = "notBeforeUtc", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime notBeforeUtc;

    /*
     * The notAfterUtc property.
     */
    @JsonProperty(value = "notAfterUtc", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime notAfterUtc;

    /*
     * The serialNumber property.
     */
    @JsonProperty(value = "serialNumber", access = JsonProperty.Access.WRITE_ONLY)
    private String serialNumber;

    /*
     * The version property.
     */
    @JsonProperty(value = "version", access = JsonProperty.Access.WRITE_ONLY)
    private Integer version;

    /**
     * Get the subjectName property: The subjectName property.
     *
     * @return the subjectName value.
     */
    public String getSubjectName() {
        return this.subjectName;
    }

    /**
     * Get the sha1Thumbprint property: The sha1Thumbprint property.
     *
     * @return the sha1Thumbprint value.
     */
    public String getSha1Thumbprint() {
        return this.sha1Thumbprint;
    }

    /**
     * Get the sha256Thumbprint property: The sha256Thumbprint property.
     *
     * @return the sha256Thumbprint value.
     */
    public String getSha256Thumbprint() {
        return this.sha256Thumbprint;
    }

    /**
     * Get the issuerName property: The issuerName property.
     *
     * @return the issuerName value.
     */
    public String getIssuerName() {
        return this.issuerName;
    }

    /**
     * Get the notBeforeUtc property: The notBeforeUtc property.
     *
     * @return the notBeforeUtc value.
     */
    public OffsetDateTime getNotBeforeUtc() {
        return this.notBeforeUtc;
    }

    /**
     * Get the notAfterUtc property: The notAfterUtc property.
     *
     * @return the notAfterUtc value.
     */
    public OffsetDateTime getNotAfterUtc() {
        return this.notAfterUtc;
    }

    /**
     * Get the serialNumber property: The serialNumber property.
     *
     * @return the serialNumber value.
     */
    public String getSerialNumber() {
        return this.serialNumber;
    }

    /**
     * Get the version property: The version property.
     *
     * @return the version value.
     */
    public Integer getVersion() {
        return this.version;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {}
}
