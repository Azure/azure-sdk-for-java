// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.deviceprovisioning.implementation.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The behavior of the service when a device is re-provisioned to an IoT hub. */
@Fluent
public final class ReprovisioningSettings {
    /*
     * When set to true (default), the Device Provisioning Service will
     * evaluate the device's IoT Hub assignment and update it if necessary for
     * any provisioning requests beyond the first from a given device. If set
     * to false, the device will stay assigned to its current IoT hub.
     */
    @JsonProperty(value = "updateHubAssignment")
    private Boolean updateHubAssignment;

    /*
     * When set to true (default), the Device Provisioning Service will migrate
     * the device's data (twin, device capabilities, and device ID) from one
     * IoT hub to another during an IoT hub assignment update. If set to false,
     * the Device Provisioning Service will reset the device's data to the
     * initial desired configuration stored in the corresponding enrollment
     * list.
     */
    @JsonProperty(value = "migrateDeviceData")
    private Boolean migrateDeviceData;

    /**
     * Get the updateHubAssignment property: When set to true (default), the Device Provisioning Service will evaluate
     * the device's IoT Hub assignment and update it if necessary for any provisioning requests beyond the first from a
     * given device. If set to false, the device will stay assigned to its current IoT hub.
     *
     * @return the updateHubAssignment value.
     */
    public Boolean isUpdateHubAssignment() {
        return this.updateHubAssignment;
    }

    /**
     * Set the updateHubAssignment property: When set to true (default), the Device Provisioning Service will evaluate
     * the device's IoT Hub assignment and update it if necessary for any provisioning requests beyond the first from a
     * given device. If set to false, the device will stay assigned to its current IoT hub.
     *
     * @param updateHubAssignment the updateHubAssignment value to set.
     * @return the ReprovisioningSettings object itself.
     */
    public ReprovisioningSettings setUpdateHubAssignment(Boolean updateHubAssignment) {
        this.updateHubAssignment = updateHubAssignment;
        return this;
    }

    /**
     * Get the migrateDeviceData property: When set to true (default), the Device Provisioning Service will migrate the
     * device's data (twin, device capabilities, and device ID) from one IoT hub to another during an IoT hub assignment
     * update. If set to false, the Device Provisioning Service will reset the device's data to the initial desired
     * configuration stored in the corresponding enrollment list.
     *
     * @return the migrateDeviceData value.
     */
    public Boolean isMigrateDeviceData() {
        return this.migrateDeviceData;
    }

    /**
     * Set the migrateDeviceData property: When set to true (default), the Device Provisioning Service will migrate the
     * device's data (twin, device capabilities, and device ID) from one IoT hub to another during an IoT hub assignment
     * update. If set to false, the Device Provisioning Service will reset the device's data to the initial desired
     * configuration stored in the corresponding enrollment list.
     *
     * @param migrateDeviceData the migrateDeviceData value to set.
     * @return the ReprovisioningSettings object itself.
     */
    public ReprovisioningSettings setMigrateDeviceData(Boolean migrateDeviceData) {
        this.migrateDeviceData = migrateDeviceData;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {}
}
