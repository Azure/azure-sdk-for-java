// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.deviceprovisioning.implementation.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** The ProvisioningRecord model. */
@Immutable
public final class ProvisioningRecord {
    /*
     * Device Id.
     */
    @JsonProperty(value = "deviceId", access = JsonProperty.Access.WRITE_ONLY)
    private String deviceId;

    /*
     * Assigned IoT Hub.
     */
    @JsonProperty(value = "assignedHub", access = JsonProperty.Access.WRITE_ONLY)
    private String assignedHub;

    /*
     * The ID of provisioning settings used to assign this device to an IoT
     * hub.
     */
    @JsonProperty(value = "assignedFromProvisioningSettings", access = JsonProperty.Access.WRITE_ONLY)
    private String assignedFromProvisioningSettings;

    /*
     * Provisioning status.
     */
    @JsonProperty(value = "provisioningStatus", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningRecordProvisioningStatus provisioningStatus;

    /*
     * Sub status for 'Assigned' devices. Possible values include -
     * 'initialAssignment': Device has been assigned to an IoT hub for the
     * first time, 'deviceDataMigrated': Device has been assigned to a
     * different IoT hub and its device data was migrated from the previously
     * assigned IoT hub. Device data was removed from the previously assigned
     * IoT hub, 'deviceDataReset':  Device has been assigned to a different IoT
     * hub and its device data was populated from the initial state stored in
     * the enrollment. Device data was removed from the previously assigned IoT
     * hub, 'reprovisionedToInitialAssignment': Device has been re-provisioned
     * to a previously assigned IoT hub.
     */
    @JsonProperty(value = "provisioningSubstatus", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningRecordProvisioningSubstatus provisioningSubstatus;

    /*
     * Custom data returned from the web hook to the device.
     */
    @JsonProperty(value = "payload", access = JsonProperty.Access.WRITE_ONLY)
    private Object payload;

    /*
     * Authentication metadata.
     */
    @JsonProperty(value = "authenticationMetadata", access = JsonProperty.Access.WRITE_ONLY)
    private AuthenticationMetadata authenticationMetadata;

    /*
     * Error code.
     */
    @JsonProperty(value = "errorCode", access = JsonProperty.Access.WRITE_ONLY)
    private Integer errorCode;

    /*
     * Error message.
     */
    @JsonProperty(value = "errorMessage", access = JsonProperty.Access.WRITE_ONLY)
    private String errorMessage;

    /*
     * The DateTime this resource was created in UTC.
     */
    @JsonProperty(value = "createdOn", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime createdOn;

    /*
     * The DateTime this resource was last updated in UTC.
     */
    @JsonProperty(value = "lastUpdatedOn", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime lastUpdatedOn;

    /**
     * Get the deviceId property: Device Id.
     *
     * @return the deviceId value.
     */
    public String getDeviceId() {
        return this.deviceId;
    }

    /**
     * Get the assignedHub property: Assigned IoT Hub.
     *
     * @return the assignedHub value.
     */
    public String getAssignedHub() {
        return this.assignedHub;
    }

    /**
     * Get the assignedFromProvisioningSettings property: The ID of provisioning settings used to assign this device to
     * an IoT hub.
     *
     * @return the assignedFromProvisioningSettings value.
     */
    public String getAssignedFromProvisioningSettings() {
        return this.assignedFromProvisioningSettings;
    }

    /**
     * Get the provisioningStatus property: Provisioning status.
     *
     * @return the provisioningStatus value.
     */
    public ProvisioningRecordProvisioningStatus getProvisioningStatus() {
        return this.provisioningStatus;
    }

    /**
     * Get the provisioningSubstatus property: Sub status for 'Assigned' devices. Possible values include -
     * 'initialAssignment': Device has been assigned to an IoT hub for the first time, 'deviceDataMigrated': Device has
     * been assigned to a different IoT hub and its device data was migrated from the previously assigned IoT hub.
     * Device data was removed from the previously assigned IoT hub, 'deviceDataReset': Device has been assigned to a
     * different IoT hub and its device data was populated from the initial state stored in the enrollment. Device data
     * was removed from the previously assigned IoT hub, 'reprovisionedToInitialAssignment': Device has been
     * re-provisioned to a previously assigned IoT hub.
     *
     * @return the provisioningSubstatus value.
     */
    public ProvisioningRecordProvisioningSubstatus getProvisioningSubstatus() {
        return this.provisioningSubstatus;
    }

    /**
     * Get the payload property: Custom data returned from the web hook to the device.
     *
     * @return the payload value.
     */
    public Object getPayload() {
        return this.payload;
    }

    /**
     * Get the authenticationMetadata property: Authentication metadata.
     *
     * @return the authenticationMetadata value.
     */
    public AuthenticationMetadata getAuthenticationMetadata() {
        return this.authenticationMetadata;
    }

    /**
     * Get the errorCode property: Error code.
     *
     * @return the errorCode value.
     */
    public Integer getErrorCode() {
        return this.errorCode;
    }

    /**
     * Get the errorMessage property: Error message.
     *
     * @return the errorMessage value.
     */
    public String getErrorMessage() {
        return this.errorMessage;
    }

    /**
     * Get the createdOn property: The DateTime this resource was created in UTC.
     *
     * @return the createdOn value.
     */
    public OffsetDateTime getCreatedOn() {
        return this.createdOn;
    }

    /**
     * Get the lastUpdatedOn property: The DateTime this resource was last updated in UTC.
     *
     * @return the lastUpdatedOn value.
     */
    public OffsetDateTime getLastUpdatedOn() {
        return this.lastUpdatedOn;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (getAuthenticationMetadata() != null) {
            getAuthenticationMetadata().validate();
        }
    }
}
