// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.deviceprovisioning.implementation.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.HashMap;
import java.util.Map;

/** Represents a collection of properties within a Twin. */
@Fluent
public final class TwinCollection {
    /*
     * Version of the TwinCollection
     */
    @JsonProperty(value = "version")
    private Long version;

    /*
     * Number of properties in the TwinCollection
     */
    @JsonProperty(value = "count")
    private Integer count;

    /*
     * Metadata for the TwinCollection
     */
    @JsonProperty(value = "metadata")
    private Metadata metadata;

    /*
     * Represents a collection of properties within a Twin
     */
    @JsonIgnore private Map<String, Object> additionalProperties;

    /**
     * Get the version property: Version of the TwinCollection.
     *
     * @return the version value.
     */
    public Long getVersion() {
        return this.version;
    }

    /**
     * Set the version property: Version of the TwinCollection.
     *
     * @param version the version value to set.
     * @return the TwinCollection object itself.
     */
    public TwinCollection setVersion(Long version) {
        this.version = version;
        return this;
    }

    /**
     * Get the count property: Number of properties in the TwinCollection.
     *
     * @return the count value.
     */
    public Integer getCount() {
        return this.count;
    }

    /**
     * Set the count property: Number of properties in the TwinCollection.
     *
     * @param count the count value to set.
     * @return the TwinCollection object itself.
     */
    public TwinCollection setCount(Integer count) {
        this.count = count;
        return this;
    }

    /**
     * Get the metadata property: Metadata for the TwinCollection.
     *
     * @return the metadata value.
     */
    public Metadata getMetadata() {
        return this.metadata;
    }

    /**
     * Set the metadata property: Metadata for the TwinCollection.
     *
     * @param metadata the metadata value to set.
     * @return the TwinCollection object itself.
     */
    public TwinCollection setMetadata(Metadata metadata) {
        this.metadata = metadata;
        return this;
    }

    /**
     * Get the additionalProperties property: Represents a collection of properties within a Twin.
     *
     * @return the additionalProperties value.
     */
    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    /**
     * Set the additionalProperties property: Represents a collection of properties within a Twin.
     *
     * @param additionalProperties the additionalProperties value to set.
     * @return the TwinCollection object itself.
     */
    public TwinCollection setAdditionalProperties(Map<String, Object> additionalProperties) {
        this.additionalProperties = additionalProperties;
        return this;
    }

    @JsonAnySetter
    void setAdditionalProperties(String key, Object value) {
        if (additionalProperties == null) {
            additionalProperties = new HashMap<>();
        }
        additionalProperties.put(key, value);
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (getMetadata() != null) {
            getMetadata().validate();
        }
    }
}
