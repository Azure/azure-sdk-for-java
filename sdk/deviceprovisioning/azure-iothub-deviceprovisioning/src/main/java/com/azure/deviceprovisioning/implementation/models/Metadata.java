// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.deviceprovisioning.implementation.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** Metadata for the TwinCollection. */
@Fluent
public final class Metadata {
    /*
     * Last time the TwinCollection was updated
     */
    @JsonProperty(value = "lastUpdated")
    private OffsetDateTime lastUpdated;

    /*
     * This is null for Reported properties metadata and is not null for
     * Desired properties metadata.
     */
    @JsonProperty(value = "lastUpdatedVersion")
    private Long lastUpdatedVersion;

    /**
     * Get the lastUpdated property: Last time the TwinCollection was updated.
     *
     * @return the lastUpdated value.
     */
    public OffsetDateTime getLastUpdated() {
        return this.lastUpdated;
    }

    /**
     * Set the lastUpdated property: Last time the TwinCollection was updated.
     *
     * @param lastUpdated the lastUpdated value to set.
     * @return the Metadata object itself.
     */
    public Metadata setLastUpdated(OffsetDateTime lastUpdated) {
        this.lastUpdated = lastUpdated;
        return this;
    }

    /**
     * Get the lastUpdatedVersion property: This is null for Reported properties metadata and is not null for Desired
     * properties metadata.
     *
     * @return the lastUpdatedVersion value.
     */
    public Long getLastUpdatedVersion() {
        return this.lastUpdatedVersion;
    }

    /**
     * Set the lastUpdatedVersion property: This is null for Reported properties metadata and is not null for Desired
     * properties metadata.
     *
     * @param lastUpdatedVersion the lastUpdatedVersion value to set.
     * @return the Metadata object itself.
     */
    public Metadata setLastUpdatedVersion(Long lastUpdatedVersion) {
        this.lastUpdatedVersion = lastUpdatedVersion;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {}
}
