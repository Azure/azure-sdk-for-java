// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.deviceprovisioning.implementation.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/** The linked hub. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "linkedHubKind")
@JsonTypeName("ConnectionStringLinkedHub")
@Fluent
public final class ConnectionStringLinkedHub extends LinkedHub {
    /*
     * The string used to connect to the IoT hub.
     */
    @JsonProperty(value = "connectionString", required = true)
    private String connectionString;

    /*
     * Location of the IoT hub.
     */
    @JsonProperty(value = "location", required = true)
    private String location;

    /**
     * Creates an instance of ConnectionStringLinkedHub class.
     *
     * @param connectionString the connectionString value to set.
     * @param location the location value to set.
     */
    @JsonCreator
    public ConnectionStringLinkedHub(
            @JsonProperty(value = "connectionString", required = true) String connectionString,
            @JsonProperty(value = "location", required = true) String location) {
        this.connectionString = connectionString;
        this.location = location;
    }

    /**
     * Get the connectionString property: The string used to connect to the IoT hub.
     *
     * @return the connectionString value.
     */
    public String getConnectionString() {
        return this.connectionString;
    }

    /**
     * Get the location property: Location of the IoT hub.
     *
     * @return the location value.
     */
    public String getLocation() {
        return this.location;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (getConnectionString() == null) {
            throw new IllegalArgumentException(
                    "Missing required property connectionString in model ConnectionStringLinkedHub");
        }
        if (getLocation() == null) {
            throw new IllegalArgumentException("Missing required property location in model ConnectionStringLinkedHub");
        }
    }
}
