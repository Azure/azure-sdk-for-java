// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.deviceprovisioning.implementation.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;

/** The DeviceRecord model. */
@Fluent
public final class DeviceRecord {
    /*
     * The individual device ID. A case-insensitive string (up to 128
     * characters long) of alphanumeric characters plus certain special
     * characters : . _ -. No special characters allowed at start or end.
     */
    @JsonProperty(value = "deviceId", access = JsonProperty.Access.WRITE_ONLY)
    private String deviceId;

    /*
     * IdScope of the origin DPS. This is a readonly property and will only be
     * set when the device is transferred from another DPS resource.
     */
    @JsonProperty(value = "originDpsIdScope", access = JsonProperty.Access.WRITE_ONLY)
    private String originDpsIdScope;

    /*
     * If set to {True} will provision the device as edge device.
     */
    @JsonProperty(value = "isEdge")
    private Boolean isEdge;

    /*
     * The status for this device. Setting to {DeviceStatus.Disabled} will
     * block provisioning the device with this authentication.
     */
    @JsonProperty(value = "deviceStatus")
    private DeviceRecordDeviceStatus deviceStatus;

    /*
     * Authentication mechanism used by the device to provision.
     */
    @JsonProperty(value = "authenticationMechanisms", required = true)
    private List<DeviceAuthenticationMechanism> authenticationMechanisms;

    /*
     * Name of the device group of which this device is a member.
     */
    @JsonProperty(value = "deviceGroupId", access = JsonProperty.Access.WRITE_ONLY)
    private String deviceGroupId;

    /*
     * The DateTime this resource was created in UTC.
     */
    @JsonProperty(value = "createdOn", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime createdOn;

    /*
     * The DateTime this resource was last updated in UTC.
     */
    @JsonProperty(value = "lastUpdatedOn", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime lastUpdatedOn;

    /*
     * The ETag of the device record.
     */
    @JsonProperty(value = "etag", access = JsonProperty.Access.WRITE_ONLY)
    private String etag;

    /*
     * The additional information about this device. This is an optional
     * property.
     */
    @JsonProperty(value = "optionalDeviceInformation")
    private TwinCollection optionalDeviceInformation;

    /**
     * Creates an instance of DeviceRecord class.
     *
     * @param authenticationMechanisms the authenticationMechanisms value to set.
     */
    @JsonCreator
    public DeviceRecord(
            @JsonProperty(value = "authenticationMechanisms", required = true)
                    List<DeviceAuthenticationMechanism> authenticationMechanisms) {
        this.authenticationMechanisms = authenticationMechanisms;
    }

    /**
     * Get the deviceId property: The individual device ID. A case-insensitive string (up to 128 characters long) of
     * alphanumeric characters plus certain special characters : . _ -. No special characters allowed at start or end.
     *
     * @return the deviceId value.
     */
    public String getDeviceId() {
        return this.deviceId;
    }

    /**
     * Get the originDpsIdScope property: IdScope of the origin DPS. This is a readonly property and will only be set
     * when the device is transferred from another DPS resource.
     *
     * @return the originDpsIdScope value.
     */
    public String getOriginDpsIdScope() {
        return this.originDpsIdScope;
    }

    /**
     * Get the isEdge property: If set to {True} will provision the device as edge device.
     *
     * @return the isEdge value.
     */
    public Boolean isEdge() {
        return this.isEdge;
    }

    /**
     * Set the isEdge property: If set to {True} will provision the device as edge device.
     *
     * @param isEdge the isEdge value to set.
     * @return the DeviceRecord object itself.
     */
    public DeviceRecord setIsEdge(Boolean isEdge) {
        this.isEdge = isEdge;
        return this;
    }

    /**
     * Get the deviceStatus property: The status for this device. Setting to {DeviceStatus.Disabled} will block
     * provisioning the device with this authentication.
     *
     * @return the deviceStatus value.
     */
    public DeviceRecordDeviceStatus getDeviceStatus() {
        return this.deviceStatus;
    }

    /**
     * Set the deviceStatus property: The status for this device. Setting to {DeviceStatus.Disabled} will block
     * provisioning the device with this authentication.
     *
     * @param deviceStatus the deviceStatus value to set.
     * @return the DeviceRecord object itself.
     */
    public DeviceRecord setDeviceStatus(DeviceRecordDeviceStatus deviceStatus) {
        this.deviceStatus = deviceStatus;
        return this;
    }

    /**
     * Get the authenticationMechanisms property: Authentication mechanism used by the device to provision.
     *
     * @return the authenticationMechanisms value.
     */
    public List<DeviceAuthenticationMechanism> getAuthenticationMechanisms() {
        return this.authenticationMechanisms;
    }

    /**
     * Get the deviceGroupId property: Name of the device group of which this device is a member.
     *
     * @return the deviceGroupId value.
     */
    public String getDeviceGroupId() {
        return this.deviceGroupId;
    }

    /**
     * Get the createdOn property: The DateTime this resource was created in UTC.
     *
     * @return the createdOn value.
     */
    public OffsetDateTime getCreatedOn() {
        return this.createdOn;
    }

    /**
     * Get the lastUpdatedOn property: The DateTime this resource was last updated in UTC.
     *
     * @return the lastUpdatedOn value.
     */
    public OffsetDateTime getLastUpdatedOn() {
        return this.lastUpdatedOn;
    }

    /**
     * Get the etag property: The ETag of the device record.
     *
     * @return the etag value.
     */
    public String getEtag() {
        return this.etag;
    }

    /**
     * Get the optionalDeviceInformation property: The additional information about this device. This is an optional
     * property.
     *
     * @return the optionalDeviceInformation value.
     */
    public TwinCollection getOptionalDeviceInformation() {
        return this.optionalDeviceInformation;
    }

    /**
     * Set the optionalDeviceInformation property: The additional information about this device. This is an optional
     * property.
     *
     * @param optionalDeviceInformation the optionalDeviceInformation value to set.
     * @return the DeviceRecord object itself.
     */
    public DeviceRecord setOptionalDeviceInformation(TwinCollection optionalDeviceInformation) {
        this.optionalDeviceInformation = optionalDeviceInformation;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (getAuthenticationMechanisms() == null) {
            throw new IllegalArgumentException(
                    "Missing required property authenticationMechanisms in model DeviceRecord");
        } else {
            getAuthenticationMechanisms().forEach(e -> e.validate());
        }
        if (getOptionalDeviceInformation() != null) {
            getOptionalDeviceInformation().validate();
        }
    }
}
