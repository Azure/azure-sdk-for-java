// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.deviceregistry.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The x509 certificate for authentication mode Certificate.
 */
@Fluent
public final class X509Credentials {
    /*
     * A reference to secret containing the certificate and private key (e.g. stored as .der/.pem or .der/.pfx).
     */
    @JsonProperty(value = "certificateReference", required = true)
    private String certificateReference;

    /**
     * Creates an instance of X509Credentials class.
     */
    public X509Credentials() {
    }

    /**
     * Get the certificateReference property: A reference to secret containing the certificate and private key (e.g.
     * stored as .der/.pem or .der/.pfx).
     * 
     * @return the certificateReference value.
     */
    public String certificateReference() {
        return this.certificateReference;
    }

    /**
     * Set the certificateReference property: A reference to secret containing the certificate and private key (e.g.
     * stored as .der/.pem or .der/.pfx).
     * 
     * @param certificateReference the certificateReference value to set.
     * @return the X509Credentials object itself.
     */
    public X509Credentials withCertificateReference(String certificateReference) {
        this.certificateReference = certificateReference;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (certificateReference() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property certificateReference in model X509Credentials"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(X509Credentials.class);
}
