// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.deviceregistry.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Defines the asset status properties.
 */
@Fluent
public final class AssetStatus {
    /*
     * Array object to transfer and persist errors that originate from the Edge.
     */
    @JsonProperty(value = "errors")
    private List<AssetStatusError> errors;

    /*
     * A read only incremental counter indicating the number of times the configuration has been modified from the perspective of the current actual (Edge) state of the Asset. Edge would be the only writer of this value and would sync back up to the cloud. In steady state, this should equal version.
     */
    @JsonProperty(value = "version")
    private Integer version;

    /**
     * Creates an instance of AssetStatus class.
     */
    public AssetStatus() {
    }

    /**
     * Get the errors property: Array object to transfer and persist errors that originate from the Edge.
     * 
     * @return the errors value.
     */
    public List<AssetStatusError> errors() {
        return this.errors;
    }

    /**
     * Set the errors property: Array object to transfer and persist errors that originate from the Edge.
     * 
     * @param errors the errors value to set.
     * @return the AssetStatus object itself.
     */
    public AssetStatus withErrors(List<AssetStatusError> errors) {
        this.errors = errors;
        return this;
    }

    /**
     * Get the version property: A read only incremental counter indicating the number of times the configuration has
     * been modified from the perspective of the current actual (Edge) state of the Asset. Edge would be the only writer
     * of this value and would sync back up to the cloud. In steady state, this should equal version.
     * 
     * @return the version value.
     */
    public Integer version() {
        return this.version;
    }

    /**
     * Set the version property: A read only incremental counter indicating the number of times the configuration has
     * been modified from the perspective of the current actual (Edge) state of the Asset. Edge would be the only writer
     * of this value and would sync back up to the cloud. In steady state, this should equal version.
     * 
     * @param version the version value to set.
     * @return the AssetStatus object itself.
     */
    public AssetStatus withVersion(Integer version) {
        this.version = version;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (errors() != null) {
            errors().forEach(e -> e.validate());
        }
    }
}
