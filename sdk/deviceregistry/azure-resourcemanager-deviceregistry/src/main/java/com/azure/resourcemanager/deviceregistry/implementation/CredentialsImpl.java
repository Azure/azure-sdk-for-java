// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.deviceregistry.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.deviceregistry.fluent.CredentialsClient;
import com.azure.resourcemanager.deviceregistry.fluent.models.CredentialInner;
import com.azure.resourcemanager.deviceregistry.models.Credential;
import com.azure.resourcemanager.deviceregistry.models.CredentialUpdate;
import com.azure.resourcemanager.deviceregistry.models.Credentials;

public final class CredentialsImpl implements Credentials {
    private static final ClientLogger LOGGER = new ClientLogger(CredentialsImpl.class);

    private final CredentialsClient innerClient;

    private final com.azure.resourcemanager.deviceregistry.DeviceRegistryManager serviceManager;

    public CredentialsImpl(CredentialsClient innerClient,
        com.azure.resourcemanager.deviceregistry.DeviceRegistryManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<Credential> getWithResponse(String resourceGroupName, String namespaceName, Context context) {
        Response<CredentialInner> inner
            = this.serviceClient().getWithResponse(resourceGroupName, namespaceName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new CredentialImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public Credential get(String resourceGroupName, String namespaceName) {
        CredentialInner inner = this.serviceClient().get(resourceGroupName, namespaceName);
        if (inner != null) {
            return new CredentialImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Credential createOrUpdate(String resourceGroupName, String namespaceName, CredentialInner resource) {
        CredentialInner inner = this.serviceClient().createOrUpdate(resourceGroupName, namespaceName, resource);
        if (inner != null) {
            return new CredentialImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Credential createOrUpdate(String resourceGroupName, String namespaceName, CredentialInner resource,
        Context context) {
        CredentialInner inner
            = this.serviceClient().createOrUpdate(resourceGroupName, namespaceName, resource, context);
        if (inner != null) {
            return new CredentialImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public void deleteByResourceGroup(String resourceGroupName, String namespaceName) {
        this.serviceClient().delete(resourceGroupName, namespaceName);
    }

    public void delete(String resourceGroupName, String namespaceName, Context context) {
        this.serviceClient().delete(resourceGroupName, namespaceName, context);
    }

    public Credential update(String resourceGroupName, String namespaceName, CredentialUpdate properties) {
        CredentialInner inner = this.serviceClient().update(resourceGroupName, namespaceName, properties);
        if (inner != null) {
            return new CredentialImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Credential update(String resourceGroupName, String namespaceName, CredentialUpdate properties,
        Context context) {
        CredentialInner inner = this.serviceClient().update(resourceGroupName, namespaceName, properties, context);
        if (inner != null) {
            return new CredentialImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public PagedIterable<Credential> listByResourceGroup(String resourceGroupName, String namespaceName) {
        PagedIterable<CredentialInner> inner
            = this.serviceClient().listByResourceGroup(resourceGroupName, namespaceName);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new CredentialImpl(inner1, this.manager()));
    }

    public PagedIterable<Credential> listByResourceGroup(String resourceGroupName, String namespaceName,
        Context context) {
        PagedIterable<CredentialInner> inner
            = this.serviceClient().listByResourceGroup(resourceGroupName, namespaceName, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new CredentialImpl(inner1, this.manager()));
    }

    public void synchronize(String resourceGroupName, String namespaceName) {
        this.serviceClient().synchronize(resourceGroupName, namespaceName);
    }

    public void synchronize(String resourceGroupName, String namespaceName, Context context) {
        this.serviceClient().synchronize(resourceGroupName, namespaceName, context);
    }

    private CredentialsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.deviceregistry.DeviceRegistryManager manager() {
        return this.serviceManager;
    }
}
