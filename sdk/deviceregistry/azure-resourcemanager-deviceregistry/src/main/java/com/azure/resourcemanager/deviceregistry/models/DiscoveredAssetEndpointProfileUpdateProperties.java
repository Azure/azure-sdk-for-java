// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.deviceregistry.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The updatable properties of the DiscoveredAssetEndpointProfile.
 */
@Fluent
public final class DiscoveredAssetEndpointProfileUpdateProperties
    implements JsonSerializable<DiscoveredAssetEndpointProfileUpdateProperties> {
    /*
     * The local valid URI specifying the network address/DNS name of a southbound device. The scheme part of the
     * targetAddress URI specifies the type of the device. The additionalConfiguration field holds further connector
     * type specific configuration.
     */
    private String targetAddress;

    /*
     * Stringified JSON that contains connectivity type specific further configuration (e.g. OPC UA, Modbus, ONVIF).
     */
    private String additionalConfiguration;

    /*
     * List of supported authentication methods supported by the target server.
     */
    private List<AuthenticationMethod> supportedAuthenticationMethods;

    /*
     * Defines the configuration for the connector type that is being used with the endpoint profile.
     */
    private String endpointProfileType;

    /*
     * Identifier used to detect changes in the asset endpoint profile.
     */
    private String discoveryId;

    /*
     * An integer that is incremented each time the resource is modified.
     */
    private Long version;

    /**
     * Creates an instance of DiscoveredAssetEndpointProfileUpdateProperties class.
     */
    public DiscoveredAssetEndpointProfileUpdateProperties() {
    }

    /**
     * Get the targetAddress property: The local valid URI specifying the network address/DNS name of a southbound
     * device. The scheme part of the targetAddress URI specifies the type of the device. The additionalConfiguration
     * field holds further connector type specific configuration.
     * 
     * @return the targetAddress value.
     */
    public String targetAddress() {
        return this.targetAddress;
    }

    /**
     * Set the targetAddress property: The local valid URI specifying the network address/DNS name of a southbound
     * device. The scheme part of the targetAddress URI specifies the type of the device. The additionalConfiguration
     * field holds further connector type specific configuration.
     * 
     * @param targetAddress the targetAddress value to set.
     * @return the DiscoveredAssetEndpointProfileUpdateProperties object itself.
     */
    public DiscoveredAssetEndpointProfileUpdateProperties withTargetAddress(String targetAddress) {
        this.targetAddress = targetAddress;
        return this;
    }

    /**
     * Get the additionalConfiguration property: Stringified JSON that contains connectivity type specific further
     * configuration (e.g. OPC UA, Modbus, ONVIF).
     * 
     * @return the additionalConfiguration value.
     */
    public String additionalConfiguration() {
        return this.additionalConfiguration;
    }

    /**
     * Set the additionalConfiguration property: Stringified JSON that contains connectivity type specific further
     * configuration (e.g. OPC UA, Modbus, ONVIF).
     * 
     * @param additionalConfiguration the additionalConfiguration value to set.
     * @return the DiscoveredAssetEndpointProfileUpdateProperties object itself.
     */
    public DiscoveredAssetEndpointProfileUpdateProperties withAdditionalConfiguration(String additionalConfiguration) {
        this.additionalConfiguration = additionalConfiguration;
        return this;
    }

    /**
     * Get the supportedAuthenticationMethods property: List of supported authentication methods supported by the target
     * server.
     * 
     * @return the supportedAuthenticationMethods value.
     */
    public List<AuthenticationMethod> supportedAuthenticationMethods() {
        return this.supportedAuthenticationMethods;
    }

    /**
     * Set the supportedAuthenticationMethods property: List of supported authentication methods supported by the target
     * server.
     * 
     * @param supportedAuthenticationMethods the supportedAuthenticationMethods value to set.
     * @return the DiscoveredAssetEndpointProfileUpdateProperties object itself.
     */
    public DiscoveredAssetEndpointProfileUpdateProperties
        withSupportedAuthenticationMethods(List<AuthenticationMethod> supportedAuthenticationMethods) {
        this.supportedAuthenticationMethods = supportedAuthenticationMethods;
        return this;
    }

    /**
     * Get the endpointProfileType property: Defines the configuration for the connector type that is being used with
     * the endpoint profile.
     * 
     * @return the endpointProfileType value.
     */
    public String endpointProfileType() {
        return this.endpointProfileType;
    }

    /**
     * Set the endpointProfileType property: Defines the configuration for the connector type that is being used with
     * the endpoint profile.
     * 
     * @param endpointProfileType the endpointProfileType value to set.
     * @return the DiscoveredAssetEndpointProfileUpdateProperties object itself.
     */
    public DiscoveredAssetEndpointProfileUpdateProperties withEndpointProfileType(String endpointProfileType) {
        this.endpointProfileType = endpointProfileType;
        return this;
    }

    /**
     * Get the discoveryId property: Identifier used to detect changes in the asset endpoint profile.
     * 
     * @return the discoveryId value.
     */
    public String discoveryId() {
        return this.discoveryId;
    }

    /**
     * Set the discoveryId property: Identifier used to detect changes in the asset endpoint profile.
     * 
     * @param discoveryId the discoveryId value to set.
     * @return the DiscoveredAssetEndpointProfileUpdateProperties object itself.
     */
    public DiscoveredAssetEndpointProfileUpdateProperties withDiscoveryId(String discoveryId) {
        this.discoveryId = discoveryId;
        return this;
    }

    /**
     * Get the version property: An integer that is incremented each time the resource is modified.
     * 
     * @return the version value.
     */
    public Long version() {
        return this.version;
    }

    /**
     * Set the version property: An integer that is incremented each time the resource is modified.
     * 
     * @param version the version value to set.
     * @return the DiscoveredAssetEndpointProfileUpdateProperties object itself.
     */
    public DiscoveredAssetEndpointProfileUpdateProperties withVersion(Long version) {
        this.version = version;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("targetAddress", this.targetAddress);
        jsonWriter.writeStringField("additionalConfiguration", this.additionalConfiguration);
        jsonWriter.writeArrayField("supportedAuthenticationMethods", this.supportedAuthenticationMethods,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeStringField("endpointProfileType", this.endpointProfileType);
        jsonWriter.writeStringField("discoveryId", this.discoveryId);
        jsonWriter.writeNumberField("version", this.version);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DiscoveredAssetEndpointProfileUpdateProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DiscoveredAssetEndpointProfileUpdateProperties if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the DiscoveredAssetEndpointProfileUpdateProperties.
     */
    public static DiscoveredAssetEndpointProfileUpdateProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            DiscoveredAssetEndpointProfileUpdateProperties deserializedDiscoveredAssetEndpointProfileUpdateProperties
                = new DiscoveredAssetEndpointProfileUpdateProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("targetAddress".equals(fieldName)) {
                    deserializedDiscoveredAssetEndpointProfileUpdateProperties.targetAddress = reader.getString();
                } else if ("additionalConfiguration".equals(fieldName)) {
                    deserializedDiscoveredAssetEndpointProfileUpdateProperties.additionalConfiguration
                        = reader.getString();
                } else if ("supportedAuthenticationMethods".equals(fieldName)) {
                    List<AuthenticationMethod> supportedAuthenticationMethods
                        = reader.readArray(reader1 -> AuthenticationMethod.fromString(reader1.getString()));
                    deserializedDiscoveredAssetEndpointProfileUpdateProperties.supportedAuthenticationMethods
                        = supportedAuthenticationMethods;
                } else if ("endpointProfileType".equals(fieldName)) {
                    deserializedDiscoveredAssetEndpointProfileUpdateProperties.endpointProfileType = reader.getString();
                } else if ("discoveryId".equals(fieldName)) {
                    deserializedDiscoveredAssetEndpointProfileUpdateProperties.discoveryId = reader.getString();
                } else if ("version".equals(fieldName)) {
                    deserializedDiscoveredAssetEndpointProfileUpdateProperties.version
                        = reader.getNullable(JsonReader::getLong);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedDiscoveredAssetEndpointProfileUpdateProperties;
        });
    }
}
