// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.deviceregistry.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The credentials for authentication mode UsernamePassword.
 */
@Fluent
public final class UsernamePasswordCredentials {
    /*
     * A reference to secret containing the username.
     */
    @JsonProperty(value = "usernameReference", required = true)
    private String usernameReference;

    /*
     * A reference to secret containing the password.
     */
    @JsonProperty(value = "passwordReference", required = true)
    private String passwordReference;

    /**
     * Creates an instance of UsernamePasswordCredentials class.
     */
    public UsernamePasswordCredentials() {
    }

    /**
     * Get the usernameReference property: A reference to secret containing the username.
     * 
     * @return the usernameReference value.
     */
    public String usernameReference() {
        return this.usernameReference;
    }

    /**
     * Set the usernameReference property: A reference to secret containing the username.
     * 
     * @param usernameReference the usernameReference value to set.
     * @return the UsernamePasswordCredentials object itself.
     */
    public UsernamePasswordCredentials withUsernameReference(String usernameReference) {
        this.usernameReference = usernameReference;
        return this;
    }

    /**
     * Get the passwordReference property: A reference to secret containing the password.
     * 
     * @return the passwordReference value.
     */
    public String passwordReference() {
        return this.passwordReference;
    }

    /**
     * Set the passwordReference property: A reference to secret containing the password.
     * 
     * @param passwordReference the passwordReference value to set.
     * @return the UsernamePasswordCredentials object itself.
     */
    public UsernamePasswordCredentials withPasswordReference(String passwordReference) {
        this.passwordReference = passwordReference;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (usernameReference() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property usernameReference in model UsernamePasswordCredentials"));
        }
        if (passwordReference() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property passwordReference in model UsernamePasswordCredentials"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(UsernamePasswordCredentials.class);
}
