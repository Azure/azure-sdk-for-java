// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.deviceregistry.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.deviceregistry.fluent.models.NamespaceDeviceInner;
import com.azure.resourcemanager.deviceregistry.models.ExtendedLocation;
import com.azure.resourcemanager.deviceregistry.models.NamespaceDevice;
import com.azure.resourcemanager.deviceregistry.models.NamespaceDeviceProperties;
import com.azure.resourcemanager.deviceregistry.models.NamespaceDeviceUpdate;
import com.azure.resourcemanager.deviceregistry.models.NamespaceDeviceUpdateProperties;
import java.util.Collections;
import java.util.Map;

public final class NamespaceDeviceImpl implements NamespaceDevice, NamespaceDevice.Definition, NamespaceDevice.Update {
    private NamespaceDeviceInner innerObject;

    private final com.azure.resourcemanager.deviceregistry.DeviceRegistryManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public NamespaceDeviceProperties properties() {
        return this.innerModel().properties();
    }

    public String etag() {
        return this.innerModel().etag();
    }

    public ExtendedLocation extendedLocation() {
        return this.innerModel().extendedLocation();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public NamespaceDeviceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.deviceregistry.DeviceRegistryManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String namespaceName;

    private String deviceName;

    private NamespaceDeviceUpdate updateProperties;

    public NamespaceDeviceImpl withExistingNamespace(String resourceGroupName, String namespaceName) {
        this.resourceGroupName = resourceGroupName;
        this.namespaceName = namespaceName;
        return this;
    }

    public NamespaceDevice create() {
        this.innerObject = serviceManager.serviceClient()
            .getNamespaceDevices()
            .createOrReplace(resourceGroupName, namespaceName, deviceName, this.innerModel(), Context.NONE);
        return this;
    }

    public NamespaceDevice create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getNamespaceDevices()
            .createOrReplace(resourceGroupName, namespaceName, deviceName, this.innerModel(), context);
        return this;
    }

    NamespaceDeviceImpl(String name, com.azure.resourcemanager.deviceregistry.DeviceRegistryManager serviceManager) {
        this.innerObject = new NamespaceDeviceInner();
        this.serviceManager = serviceManager;
        this.deviceName = name;
    }

    public NamespaceDeviceImpl update() {
        this.updateProperties = new NamespaceDeviceUpdate();
        return this;
    }

    public NamespaceDevice apply() {
        this.innerObject = serviceManager.serviceClient()
            .getNamespaceDevices()
            .update(resourceGroupName, namespaceName, deviceName, updateProperties, Context.NONE);
        return this;
    }

    public NamespaceDevice apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getNamespaceDevices()
            .update(resourceGroupName, namespaceName, deviceName, updateProperties, context);
        return this;
    }

    NamespaceDeviceImpl(NamespaceDeviceInner innerObject,
        com.azure.resourcemanager.deviceregistry.DeviceRegistryManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.namespaceName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "namespaces");
        this.deviceName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "devices");
    }

    public NamespaceDevice refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getNamespaceDevices()
            .getWithResponse(resourceGroupName, namespaceName, deviceName, Context.NONE)
            .getValue();
        return this;
    }

    public NamespaceDevice refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getNamespaceDevices()
            .getWithResponse(resourceGroupName, namespaceName, deviceName, context)
            .getValue();
        return this;
    }

    public NamespaceDeviceImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public NamespaceDeviceImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public NamespaceDeviceImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateProperties.withTags(tags);
            return this;
        }
    }

    public NamespaceDeviceImpl withProperties(NamespaceDeviceProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }

    public NamespaceDeviceImpl withExtendedLocation(ExtendedLocation extendedLocation) {
        this.innerModel().withExtendedLocation(extendedLocation);
        return this;
    }

    public NamespaceDeviceImpl withProperties(NamespaceDeviceUpdateProperties properties) {
        this.updateProperties.withProperties(properties);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel() == null || this.innerModel().id() == null;
    }
}
