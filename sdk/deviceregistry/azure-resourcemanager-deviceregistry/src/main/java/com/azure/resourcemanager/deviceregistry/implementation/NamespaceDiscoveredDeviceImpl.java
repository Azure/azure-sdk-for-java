// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.deviceregistry.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.deviceregistry.fluent.models.NamespaceDiscoveredDeviceInner;
import com.azure.resourcemanager.deviceregistry.models.ExtendedLocation;
import com.azure.resourcemanager.deviceregistry.models.NamespaceDiscoveredDevice;
import com.azure.resourcemanager.deviceregistry.models.NamespaceDiscoveredDeviceProperties;
import com.azure.resourcemanager.deviceregistry.models.NamespaceDiscoveredDeviceUpdate;
import com.azure.resourcemanager.deviceregistry.models.NamespaceDiscoveredDeviceUpdateProperties;
import java.util.Collections;
import java.util.Map;

public final class NamespaceDiscoveredDeviceImpl
    implements NamespaceDiscoveredDevice, NamespaceDiscoveredDevice.Definition, NamespaceDiscoveredDevice.Update {
    private NamespaceDiscoveredDeviceInner innerObject;

    private final com.azure.resourcemanager.deviceregistry.DeviceRegistryManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public NamespaceDiscoveredDeviceProperties properties() {
        return this.innerModel().properties();
    }

    public ExtendedLocation extendedLocation() {
        return this.innerModel().extendedLocation();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public NamespaceDiscoveredDeviceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.deviceregistry.DeviceRegistryManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String namespaceName;

    private String discoveredDeviceName;

    private NamespaceDiscoveredDeviceUpdate updateProperties;

    public NamespaceDiscoveredDeviceImpl withExistingNamespace(String resourceGroupName, String namespaceName) {
        this.resourceGroupName = resourceGroupName;
        this.namespaceName = namespaceName;
        return this;
    }

    public NamespaceDiscoveredDevice create() {
        this.innerObject = serviceManager.serviceClient()
            .getNamespaceDiscoveredDevices()
            .createOrReplace(resourceGroupName, namespaceName, discoveredDeviceName, this.innerModel(), Context.NONE);
        return this;
    }

    public NamespaceDiscoveredDevice create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getNamespaceDiscoveredDevices()
            .createOrReplace(resourceGroupName, namespaceName, discoveredDeviceName, this.innerModel(), context);
        return this;
    }

    NamespaceDiscoveredDeviceImpl(String name,
        com.azure.resourcemanager.deviceregistry.DeviceRegistryManager serviceManager) {
        this.innerObject = new NamespaceDiscoveredDeviceInner();
        this.serviceManager = serviceManager;
        this.discoveredDeviceName = name;
    }

    public NamespaceDiscoveredDeviceImpl update() {
        this.updateProperties = new NamespaceDiscoveredDeviceUpdate();
        return this;
    }

    public NamespaceDiscoveredDevice apply() {
        this.innerObject = serviceManager.serviceClient()
            .getNamespaceDiscoveredDevices()
            .update(resourceGroupName, namespaceName, discoveredDeviceName, updateProperties, Context.NONE);
        return this;
    }

    public NamespaceDiscoveredDevice apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getNamespaceDiscoveredDevices()
            .update(resourceGroupName, namespaceName, discoveredDeviceName, updateProperties, context);
        return this;
    }

    NamespaceDiscoveredDeviceImpl(NamespaceDiscoveredDeviceInner innerObject,
        com.azure.resourcemanager.deviceregistry.DeviceRegistryManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.namespaceName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "namespaces");
        this.discoveredDeviceName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "discoveredDevices");
    }

    public NamespaceDiscoveredDevice refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getNamespaceDiscoveredDevices()
            .getWithResponse(resourceGroupName, namespaceName, discoveredDeviceName, Context.NONE)
            .getValue();
        return this;
    }

    public NamespaceDiscoveredDevice refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getNamespaceDiscoveredDevices()
            .getWithResponse(resourceGroupName, namespaceName, discoveredDeviceName, context)
            .getValue();
        return this;
    }

    public NamespaceDiscoveredDeviceImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public NamespaceDiscoveredDeviceImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public NamespaceDiscoveredDeviceImpl withExtendedLocation(ExtendedLocation extendedLocation) {
        this.innerModel().withExtendedLocation(extendedLocation);
        return this;
    }

    public NamespaceDiscoveredDeviceImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateProperties.withTags(tags);
            return this;
        }
    }

    public NamespaceDiscoveredDeviceImpl withProperties(NamespaceDiscoveredDeviceProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }

    public NamespaceDiscoveredDeviceImpl withProperties(NamespaceDiscoveredDeviceUpdateProperties properties) {
        this.updateProperties.withProperties(properties);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel() == null || this.innerModel().id() == null;
    }
}
