// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.deviceregistry.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Defines the asset status dataset properties.
 */
@Immutable
public final class NamespaceAssetStatusDataset implements JsonSerializable<NamespaceAssetStatusDataset> {
    /*
     * The name of the dataset. Must be unique within the status.datasets array. This name is used to correlate between
     * the spec and status dataset information.
     */
    private String name;

    /*
     * The message schema reference object.
     */
    private NamespaceMessageSchemaReference messageSchemaReference;

    /*
     * Object to transfer and persist errors that originate from the edge.
     */
    private StatusError error;

    /**
     * Creates an instance of NamespaceAssetStatusDataset class.
     */
    private NamespaceAssetStatusDataset() {
    }

    /**
     * Get the name property: The name of the dataset. Must be unique within the status.datasets array. This name is
     * used to correlate between the spec and status dataset information.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the messageSchemaReference property: The message schema reference object.
     * 
     * @return the messageSchemaReference value.
     */
    public NamespaceMessageSchemaReference messageSchemaReference() {
        return this.messageSchemaReference;
    }

    /**
     * Get the error property: Object to transfer and persist errors that originate from the edge.
     * 
     * @return the error value.
     */
    public StatusError error() {
        return this.error;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (messageSchemaReference() != null) {
            messageSchemaReference().validate();
        }
        if (error() != null) {
            error().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of NamespaceAssetStatusDataset from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of NamespaceAssetStatusDataset if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the NamespaceAssetStatusDataset.
     */
    public static NamespaceAssetStatusDataset fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            NamespaceAssetStatusDataset deserializedNamespaceAssetStatusDataset = new NamespaceAssetStatusDataset();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("name".equals(fieldName)) {
                    deserializedNamespaceAssetStatusDataset.name = reader.getString();
                } else if ("messageSchemaReference".equals(fieldName)) {
                    deserializedNamespaceAssetStatusDataset.messageSchemaReference
                        = NamespaceMessageSchemaReference.fromJson(reader);
                } else if ("error".equals(fieldName)) {
                    deserializedNamespaceAssetStatusDataset.error = StatusError.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedNamespaceAssetStatusDataset;
        });
    }
}
