// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.deviceregistry.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.deviceregistry.fluent.models.SchemaInner;

/**
 * An instance of this class provides access to all the operations defined in SchemasClient.
 */
public interface SchemasClient {
    /**
     * Get a Schema.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param schemaRegistryName Schema registry name parameter.
     * @param schemaName Schema name parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Schema along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<SchemaInner> getWithResponse(String resourceGroupName, String schemaRegistryName, String schemaName,
        Context context);

    /**
     * Get a Schema.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param schemaRegistryName Schema registry name parameter.
     * @param schemaName Schema name parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Schema.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SchemaInner get(String resourceGroupName, String schemaRegistryName, String schemaName);

    /**
     * Create a Schema.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param schemaRegistryName Schema registry name parameter.
     * @param schemaName Schema name parameter.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return schema definition along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<SchemaInner> createOrReplaceWithResponse(String resourceGroupName, String schemaRegistryName,
        String schemaName, SchemaInner resource, Context context);

    /**
     * Create a Schema.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param schemaRegistryName Schema registry name parameter.
     * @param schemaName Schema name parameter.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return schema definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SchemaInner createOrReplace(String resourceGroupName, String schemaRegistryName, String schemaName,
        SchemaInner resource);

    /**
     * Delete a Schema.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param schemaRegistryName Schema registry name parameter.
     * @param schemaName Schema name parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String resourceGroupName, String schemaRegistryName, String schemaName,
        Context context);

    /**
     * Delete a Schema.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param schemaRegistryName Schema registry name parameter.
     * @param schemaName Schema name parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String schemaRegistryName, String schemaName);

    /**
     * List Schema resources by SchemaRegistry.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param schemaRegistryName Schema registry name parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Schema list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SchemaInner> listBySchemaRegistry(String resourceGroupName, String schemaRegistryName);

    /**
     * List Schema resources by SchemaRegistry.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param schemaRegistryName Schema registry name parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Schema list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SchemaInner> listBySchemaRegistry(String resourceGroupName, String schemaRegistryName,
        Context context);
}
