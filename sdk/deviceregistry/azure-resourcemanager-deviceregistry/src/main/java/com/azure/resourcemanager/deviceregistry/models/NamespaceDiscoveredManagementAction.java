// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.deviceregistry.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;

/**
 * Defines the action properties.
 */
@Fluent
public final class NamespaceDiscoveredManagementAction
    implements JsonSerializable<NamespaceDiscoveredManagementAction> {
    /*
     * Name of the action.
     */
    private String name;

    /*
     * Stringified JSON that contains connector-specific configuration for the action.
     */
    private String actionConfiguration;

    /*
     * The target URI on which a client can invoke the specific action.
     */
    private String targetUri;

    /*
     * URI or type definition ID.
     */
    private String typeRef;

    /*
     * The MQTT topic path on which a client will receive the request for the action.
     */
    private String topic;

    /*
     * The type of the action.
     */
    private NamespaceDiscoveredManagementActionType actionType;

    /*
     * Response timeout for the action.
     */
    private Integer timeoutInSeconds;

    /*
     * Timestamp (in UTC) indicating when the management action was added or modified.
     */
    private OffsetDateTime lastUpdatedOn;

    /**
     * Creates an instance of NamespaceDiscoveredManagementAction class.
     */
    public NamespaceDiscoveredManagementAction() {
    }

    /**
     * Get the name property: Name of the action.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Name of the action.
     * 
     * @param name the name value to set.
     * @return the NamespaceDiscoveredManagementAction object itself.
     */
    public NamespaceDiscoveredManagementAction withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the actionConfiguration property: Stringified JSON that contains connector-specific configuration for the
     * action.
     * 
     * @return the actionConfiguration value.
     */
    public String actionConfiguration() {
        return this.actionConfiguration;
    }

    /**
     * Set the actionConfiguration property: Stringified JSON that contains connector-specific configuration for the
     * action.
     * 
     * @param actionConfiguration the actionConfiguration value to set.
     * @return the NamespaceDiscoveredManagementAction object itself.
     */
    public NamespaceDiscoveredManagementAction withActionConfiguration(String actionConfiguration) {
        this.actionConfiguration = actionConfiguration;
        return this;
    }

    /**
     * Get the targetUri property: The target URI on which a client can invoke the specific action.
     * 
     * @return the targetUri value.
     */
    public String targetUri() {
        return this.targetUri;
    }

    /**
     * Set the targetUri property: The target URI on which a client can invoke the specific action.
     * 
     * @param targetUri the targetUri value to set.
     * @return the NamespaceDiscoveredManagementAction object itself.
     */
    public NamespaceDiscoveredManagementAction withTargetUri(String targetUri) {
        this.targetUri = targetUri;
        return this;
    }

    /**
     * Get the typeRef property: URI or type definition ID.
     * 
     * @return the typeRef value.
     */
    public String typeRef() {
        return this.typeRef;
    }

    /**
     * Set the typeRef property: URI or type definition ID.
     * 
     * @param typeRef the typeRef value to set.
     * @return the NamespaceDiscoveredManagementAction object itself.
     */
    public NamespaceDiscoveredManagementAction withTypeRef(String typeRef) {
        this.typeRef = typeRef;
        return this;
    }

    /**
     * Get the topic property: The MQTT topic path on which a client will receive the request for the action.
     * 
     * @return the topic value.
     */
    public String topic() {
        return this.topic;
    }

    /**
     * Set the topic property: The MQTT topic path on which a client will receive the request for the action.
     * 
     * @param topic the topic value to set.
     * @return the NamespaceDiscoveredManagementAction object itself.
     */
    public NamespaceDiscoveredManagementAction withTopic(String topic) {
        this.topic = topic;
        return this;
    }

    /**
     * Get the actionType property: The type of the action.
     * 
     * @return the actionType value.
     */
    public NamespaceDiscoveredManagementActionType actionType() {
        return this.actionType;
    }

    /**
     * Set the actionType property: The type of the action.
     * 
     * @param actionType the actionType value to set.
     * @return the NamespaceDiscoveredManagementAction object itself.
     */
    public NamespaceDiscoveredManagementAction withActionType(NamespaceDiscoveredManagementActionType actionType) {
        this.actionType = actionType;
        return this;
    }

    /**
     * Get the timeoutInSeconds property: Response timeout for the action.
     * 
     * @return the timeoutInSeconds value.
     */
    public Integer timeoutInSeconds() {
        return this.timeoutInSeconds;
    }

    /**
     * Set the timeoutInSeconds property: Response timeout for the action.
     * 
     * @param timeoutInSeconds the timeoutInSeconds value to set.
     * @return the NamespaceDiscoveredManagementAction object itself.
     */
    public NamespaceDiscoveredManagementAction withTimeoutInSeconds(Integer timeoutInSeconds) {
        this.timeoutInSeconds = timeoutInSeconds;
        return this;
    }

    /**
     * Get the lastUpdatedOn property: Timestamp (in UTC) indicating when the management action was added or modified.
     * 
     * @return the lastUpdatedOn value.
     */
    public OffsetDateTime lastUpdatedOn() {
        return this.lastUpdatedOn;
    }

    /**
     * Set the lastUpdatedOn property: Timestamp (in UTC) indicating when the management action was added or modified.
     * 
     * @param lastUpdatedOn the lastUpdatedOn value to set.
     * @return the NamespaceDiscoveredManagementAction object itself.
     */
    public NamespaceDiscoveredManagementAction withLastUpdatedOn(OffsetDateTime lastUpdatedOn) {
        this.lastUpdatedOn = lastUpdatedOn;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("name", this.name);
        jsonWriter.writeStringField("targetUri", this.targetUri);
        jsonWriter.writeStringField("actionConfiguration", this.actionConfiguration);
        jsonWriter.writeStringField("typeRef", this.typeRef);
        jsonWriter.writeStringField("topic", this.topic);
        jsonWriter.writeStringField("actionType", this.actionType == null ? null : this.actionType.toString());
        jsonWriter.writeNumberField("timeoutInSeconds", this.timeoutInSeconds);
        jsonWriter.writeStringField("lastUpdatedOn",
            this.lastUpdatedOn == null ? null : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.lastUpdatedOn));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of NamespaceDiscoveredManagementAction from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of NamespaceDiscoveredManagementAction if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the NamespaceDiscoveredManagementAction.
     */
    public static NamespaceDiscoveredManagementAction fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            NamespaceDiscoveredManagementAction deserializedNamespaceDiscoveredManagementAction
                = new NamespaceDiscoveredManagementAction();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("name".equals(fieldName)) {
                    deserializedNamespaceDiscoveredManagementAction.name = reader.getString();
                } else if ("targetUri".equals(fieldName)) {
                    deserializedNamespaceDiscoveredManagementAction.targetUri = reader.getString();
                } else if ("actionConfiguration".equals(fieldName)) {
                    deserializedNamespaceDiscoveredManagementAction.actionConfiguration = reader.getString();
                } else if ("typeRef".equals(fieldName)) {
                    deserializedNamespaceDiscoveredManagementAction.typeRef = reader.getString();
                } else if ("topic".equals(fieldName)) {
                    deserializedNamespaceDiscoveredManagementAction.topic = reader.getString();
                } else if ("actionType".equals(fieldName)) {
                    deserializedNamespaceDiscoveredManagementAction.actionType
                        = NamespaceDiscoveredManagementActionType.fromString(reader.getString());
                } else if ("timeoutInSeconds".equals(fieldName)) {
                    deserializedNamespaceDiscoveredManagementAction.timeoutInSeconds
                        = reader.getNullable(JsonReader::getInt);
                } else if ("lastUpdatedOn".equals(fieldName)) {
                    deserializedNamespaceDiscoveredManagementAction.lastUpdatedOn = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedNamespaceDiscoveredManagementAction;
        });
    }
}
