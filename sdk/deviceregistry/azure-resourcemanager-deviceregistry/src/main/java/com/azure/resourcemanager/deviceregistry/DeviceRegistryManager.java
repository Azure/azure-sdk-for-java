// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.deviceregistry;

import com.azure.core.credential.TokenCredential;
import com.azure.core.http.HttpPipeline;
import com.azure.core.management.profile.AzureProfile;
import com.azure.resourcemanager.deviceregistry.fluent.DeviceRegistryClient;
import com.azure.resourcemanager.deviceregistry.implementation.AssetEndpointProfilesImpl;
import com.azure.resourcemanager.deviceregistry.implementation.AssetsImpl;
import com.azure.resourcemanager.deviceregistry.implementation.DeviceRegistryClientBuilder;
import com.azure.resourcemanager.deviceregistry.implementation.OperationsImpl;
import com.azure.resourcemanager.deviceregistry.implementation.OperationStatusImpl;
import com.azure.resourcemanager.deviceregistry.models.AssetEndpointProfiles;
import com.azure.resourcemanager.deviceregistry.models.Assets;
import com.azure.resourcemanager.deviceregistry.models.Operations;
import com.azure.resourcemanager.deviceregistry.models.OperationStatus;
import java.time.Duration;
import java.util.Objects;

/**
 * Entry point to DeviceRegistryManager.
 * Microsoft.DeviceRegistry Resource Provider management API.
 */
public final class DeviceRegistryManager {
    private Operations operations;

    private OperationStatus operationStatus;

    private Assets assets;

    private AssetEndpointProfiles assetEndpointProfiles;

    private final DeviceRegistryClient clientObject;

    private DeviceRegistryManager(HttpPipeline httpPipeline, AzureProfile profile, Duration defaultPollInterval) {
        Objects.requireNonNull(httpPipeline, "'httpPipeline' cannot be null.");
        Objects.requireNonNull(profile, "'profile' cannot be null.");
        this.clientObject = new DeviceRegistryClientBuilder().pipeline(httpPipeline)
            .endpoint(profile.getEnvironment().getResourceManagerEndpoint())
            .subscriptionId(profile.getSubscriptionId())
            .defaultPollInterval(defaultPollInterval)
            .buildClient();
    }

    /**
     * Creates an instance of Device Registry service API entry point.
     * 
     * @param credential the credential to use.
     * @param profile the Azure profile for client.
     * @return the Device Registry service API instance.
     */
    public static DeviceRegistryManager authenticate(TokenCredential credential, AzureProfile profile) {
        Objects.requireNonNull(credential, "'credential' cannot be null.");
        Objects.requireNonNull(profile, "'profile' cannot be null.");
        return configure().authenticate(credential, profile);
    }

    /**
     * Creates an instance of Device Registry service API entry point.
     * 
     * @param httpPipeline the {@link HttpPipeline} configured with Azure authentication credential.
     * @param profile the Azure profile for client.
     * @return the Device Registry service API instance.
     */
    public static DeviceRegistryManager authenticate(HttpPipeline httpPipeline, AzureProfile profile) {
        Objects.requireNonNull(httpPipeline, "'httpPipeline' cannot be null.");
        Objects.requireNonNull(profile, "'profile' cannot be null.");
        return new DeviceRegistryManager(httpPipeline, profile, null);
    }

    /**
     * Gets a Configurable instance that can be used to create DeviceRegistryManager with optional configuration.
     * 
     * @return the Configurable instance allowing configurations.
     */
    public static Configurable configure() {
        return new DeviceRegistryManager.Configurable();
    }

    /**
     * Gets the resource collection API of Operations.
     * 
     * @return Resource collection API of Operations.
     */
    public Operations operations() {
        if (this.operations == null) {
            this.operations = new OperationsImpl(clientObject.getOperations(), this);
        }
        return operations;
    }

    /**
     * Gets the resource collection API of OperationStatus.
     * 
     * @return Resource collection API of OperationStatus.
     */
    public OperationStatus operationStatus() {
        if (this.operationStatus == null) {
            this.operationStatus = new OperationStatusImpl(clientObject.getOperationStatus(), this);
        }
        return operationStatus;
    }

    /**
     * Gets the resource collection API of Assets. It manages Asset.
     * 
     * @return Resource collection API of Assets.
     */
    public Assets assets() {
        if (this.assets == null) {
            this.assets = new AssetsImpl(clientObject.getAssets(), this);
        }
        return assets;
    }

    /**
     * Gets the resource collection API of AssetEndpointProfiles. It manages AssetEndpointProfile.
     * 
     * @return Resource collection API of AssetEndpointProfiles.
     */
    public AssetEndpointProfiles assetEndpointProfiles() {
        if (this.assetEndpointProfiles == null) {
            this.assetEndpointProfiles = new AssetEndpointProfilesImpl(clientObject.getAssetEndpointProfiles(), this);
        }
        return assetEndpointProfiles;
    }

    /**
     * Gets wrapped service client DeviceRegistryClient providing direct access to the underlying auto-generated API
     * implementation, based on Azure REST API.
     * 
     * @return Wrapped service client DeviceRegistryClient.
     */
    public DeviceRegistryClient serviceClient() {
        return this.clientObject;
    }
}
