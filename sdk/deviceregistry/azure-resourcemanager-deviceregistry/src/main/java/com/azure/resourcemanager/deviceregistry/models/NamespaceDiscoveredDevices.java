// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.deviceregistry.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of NamespaceDiscoveredDevices.
 */
public interface NamespaceDiscoveredDevices {
    /**
     * Get a NamespaceDiscoveredDevice.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param namespaceName The name of the namespace.
     * @param discoveredDeviceName The name of the discovered device.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a NamespaceDiscoveredDevice along with {@link Response}.
     */
    Response<NamespaceDiscoveredDevice> getWithResponse(String resourceGroupName, String namespaceName,
        String discoveredDeviceName, Context context);

    /**
     * Get a NamespaceDiscoveredDevice.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param namespaceName The name of the namespace.
     * @param discoveredDeviceName The name of the discovered device.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a NamespaceDiscoveredDevice.
     */
    NamespaceDiscoveredDevice get(String resourceGroupName, String namespaceName, String discoveredDeviceName);

    /**
     * Delete a NamespaceDiscoveredDevice.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param namespaceName The name of the namespace.
     * @param discoveredDeviceName The name of the discovered device.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String namespaceName, String discoveredDeviceName);

    /**
     * Delete a NamespaceDiscoveredDevice.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param namespaceName The name of the namespace.
     * @param discoveredDeviceName The name of the discovered device.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String namespaceName, String discoveredDeviceName, Context context);

    /**
     * List NamespaceDiscoveredDevice resources by Namespace.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param namespaceName The name of the namespace.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a NamespaceDiscoveredDevice list operation as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<NamespaceDiscoveredDevice> listByResourceGroup(String resourceGroupName, String namespaceName);

    /**
     * List NamespaceDiscoveredDevice resources by Namespace.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param namespaceName The name of the namespace.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a NamespaceDiscoveredDevice list operation as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<NamespaceDiscoveredDevice> listByResourceGroup(String resourceGroupName, String namespaceName,
        Context context);

    /**
     * Get a NamespaceDiscoveredDevice.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a NamespaceDiscoveredDevice along with {@link Response}.
     */
    NamespaceDiscoveredDevice getById(String id);

    /**
     * Get a NamespaceDiscoveredDevice.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a NamespaceDiscoveredDevice along with {@link Response}.
     */
    Response<NamespaceDiscoveredDevice> getByIdWithResponse(String id, Context context);

    /**
     * Delete a NamespaceDiscoveredDevice.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete a NamespaceDiscoveredDevice.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new NamespaceDiscoveredDevice resource.
     * 
     * @param name resource name.
     * @return the first stage of the new NamespaceDiscoveredDevice definition.
     */
    NamespaceDiscoveredDevice.DefinitionStages.Blank define(String name);
}
