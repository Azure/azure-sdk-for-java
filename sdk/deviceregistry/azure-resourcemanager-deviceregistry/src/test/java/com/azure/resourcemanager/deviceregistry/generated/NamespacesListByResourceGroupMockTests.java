// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.deviceregistry.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.deviceregistry.DeviceRegistryManager;
import com.azure.resourcemanager.deviceregistry.models.Namespace;
import com.azure.resourcemanager.deviceregistry.models.SystemAssignedServiceIdentityType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class NamespacesListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"uuid\":\"mqt\",\"messaging\":{\"endpoints\":{\"igpibud\":{\"endpointType\":\"jddtvqct\",\"address\":\"adijaeukmrsie\",\"resourceId\":\"pndzaapmudqmeq\"},\"ioqaqhvs\":{\"endpointType\":\"yxeb\",\"address\":\"ybpmzznrtffyaq\",\"resourceId\":\"mhh\"},\"xzhczexrxz\":{\"endpointType\":\"fuqyrxpdlcgqlsi\",\"address\":\"mjqfrddgamquhio\",\"resourceId\":\"sjuivfcdisyir\"},\"i\":{\"endpointType\":\"jrtrhqvwrevk\",\"address\":\"gnl\",\"resourceId\":\"onzlr\"}}},\"provisioningState\":\"Accepted\"},\"identity\":{\"principalId\":\"vjtszcofize\",\"tenantId\":\"dhgbjkvre\",\"type\":\"None\"},\"location\":\"amurvzmlovuan\",\"tags\":{\"kelvidizozsdb\":\"cxlpmjerb\",\"uwwltvuqjctz\":\"cxjmonfdgnwncyp\"},\"id\":\"nkeifz\",\"name\":\"hmkdasvfl\",\"type\":\"hbxcu\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DeviceRegistryManager manager = DeviceRegistryManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<Namespace> response
            = manager.namespaces().listByResourceGroup("lxveabfqx", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("amurvzmlovuan", response.iterator().next().location());
        Assertions.assertEquals("cxlpmjerb", response.iterator().next().tags().get("kelvidizozsdb"));
        Assertions.assertEquals("jddtvqct",
            response.iterator().next().properties().messaging().endpoints().get("igpibud").endpointType());
        Assertions.assertEquals("adijaeukmrsie",
            response.iterator().next().properties().messaging().endpoints().get("igpibud").address());
        Assertions.assertEquals("pndzaapmudqmeq",
            response.iterator().next().properties().messaging().endpoints().get("igpibud").resourceId());
        Assertions.assertEquals(SystemAssignedServiceIdentityType.NONE, response.iterator().next().identity().type());
    }
}
