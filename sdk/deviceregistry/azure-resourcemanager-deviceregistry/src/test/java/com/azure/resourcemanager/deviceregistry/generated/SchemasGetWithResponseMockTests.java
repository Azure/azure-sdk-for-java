// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.deviceregistry.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.deviceregistry.DeviceRegistryManager;
import com.azure.resourcemanager.deviceregistry.models.Format;
import com.azure.resourcemanager.deviceregistry.models.Schema;
import com.azure.resourcemanager.deviceregistry.models.SchemaType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SchemasGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"uuid\":\"znabaobns\",\"displayName\":\"jdjltymkmvgui\",\"description\":\"wartspphkixkykxd\",\"format\":\"JsonSchema/draft-07\",\"schemaType\":\"MessageSchema\",\"provisioningState\":\"Failed\",\"tags\":{\"i\":\"ucfx\",\"nc\":\"kflrmymy\",\"lmiiiovg\":\"lhrisw\"}},\"id\":\"gxuugqkctotio\",\"name\":\"l\",\"type\":\"teqdptj\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DeviceRegistryManager manager = DeviceRegistryManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Schema response = manager.schemas()
            .getWithResponse("ewbidyvteowxv", "piudeugfsxzecpa", "wkufykhvuhxepm", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("jdjltymkmvgui", response.properties().displayName());
        Assertions.assertEquals("wartspphkixkykxd", response.properties().description());
        Assertions.assertEquals(Format.JSON_SCHEMA_DRAFT7, response.properties().format());
        Assertions.assertEquals(SchemaType.MESSAGE_SCHEMA, response.properties().schemaType());
        Assertions.assertEquals("ucfx", response.properties().tags().get("i"));
    }
}
