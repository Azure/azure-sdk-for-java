// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.deviceregistry.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.deviceregistry.models.NamespaceDiscoveredStream;
import com.azure.resourcemanager.deviceregistry.models.StreamDestination;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NamespaceDiscoveredStreamTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NamespaceDiscoveredStream model = BinaryData.fromString(
            "{\"name\":\"yodnwzxltj\",\"streamConfiguration\":\"nhltiugcxn\",\"typeRef\":\"vwxqibyqunyo\",\"destinations\":[{\"target\":\"StreamDestination\"},{\"target\":\"StreamDestination\"}],\"lastUpdatedOn\":\"2021-08-06T01:52:09Z\"}")
            .toObject(NamespaceDiscoveredStream.class);
        Assertions.assertEquals("yodnwzxltj", model.name());
        Assertions.assertEquals("nhltiugcxn", model.streamConfiguration());
        Assertions.assertEquals("vwxqibyqunyo", model.typeRef());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-06T01:52:09Z"), model.lastUpdatedOn());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NamespaceDiscoveredStream model = new NamespaceDiscoveredStream().withName("yodnwzxltj")
            .withStreamConfiguration("nhltiugcxn")
            .withTypeRef("vwxqibyqunyo")
            .withDestinations(Arrays.asList(new StreamDestination(), new StreamDestination()))
            .withLastUpdatedOn(OffsetDateTime.parse("2021-08-06T01:52:09Z"));
        model = BinaryData.fromObject(model).toObject(NamespaceDiscoveredStream.class);
        Assertions.assertEquals("yodnwzxltj", model.name());
        Assertions.assertEquals("nhltiugcxn", model.streamConfiguration());
        Assertions.assertEquals("vwxqibyqunyo", model.typeRef());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-06T01:52:09Z"), model.lastUpdatedOn());
    }
}
