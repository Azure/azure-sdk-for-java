// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.deviceregistry.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.deviceregistry.DeviceRegistryManager;
import com.azure.resourcemanager.deviceregistry.models.Namespace;
import com.azure.resourcemanager.deviceregistry.models.SystemAssignedServiceIdentityType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class NamespacesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"uuid\":\"xgsrboldforobw\",\"messaging\":{\"endpoints\":{\"lzkwrrwoy\":{\"endpointType\":\"bfhfovvacqp\",\"address\":\"tuodxeszabbelaw\",\"resourceId\":\"ua\"},\"xzsrzpge\":{\"endpointType\":\"ucwyhahno\",\"address\":\"drkywuhps\",\"resourceId\":\"uurutlwexxwlalni\"},\"vl\":{\"endpointType\":\"tybbwwpgda\",\"address\":\"chzyvlixqnrk\",\"resourceId\":\"kjibnxmysuxswqrn\"}}},\"provisioningState\":\"Deleting\"},\"identity\":{\"principalId\":\"ttexoqqpwcyyufmh\",\"tenantId\":\"nc\",\"type\":\"None\"},\"location\":\"qspkcdqzhlctd\",\"tags\":{\"yfp\":\"qn\",\"gydcw\":\"hrqbnjjrcg\",\"ihrraiouaub\":\"oxjumvqqo\",\"xfuojrn\":\"jtlo\"},\"id\":\"iflrzpasccbiu\",\"name\":\"mzdlyjdfqwmkyo\",\"type\":\"ufdvruz\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DeviceRegistryManager manager = DeviceRegistryManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<Namespace> response = manager.namespaces().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("qspkcdqzhlctd", response.iterator().next().location());
        Assertions.assertEquals("qn", response.iterator().next().tags().get("yfp"));
        Assertions.assertEquals("bfhfovvacqp",
            response.iterator().next().properties().messaging().endpoints().get("lzkwrrwoy").endpointType());
        Assertions.assertEquals("tuodxeszabbelaw",
            response.iterator().next().properties().messaging().endpoints().get("lzkwrrwoy").address());
        Assertions.assertEquals("ua",
            response.iterator().next().properties().messaging().endpoints().get("lzkwrrwoy").resourceId());
        Assertions.assertEquals(SystemAssignedServiceIdentityType.NONE, response.iterator().next().identity().type());
    }
}
