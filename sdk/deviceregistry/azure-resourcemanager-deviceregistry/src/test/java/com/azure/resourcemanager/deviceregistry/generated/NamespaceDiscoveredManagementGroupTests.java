// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.deviceregistry.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.deviceregistry.models.NamespaceDiscoveredManagementAction;
import com.azure.resourcemanager.deviceregistry.models.NamespaceDiscoveredManagementActionType;
import com.azure.resourcemanager.deviceregistry.models.NamespaceDiscoveredManagementGroup;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NamespaceDiscoveredManagementGroupTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NamespaceDiscoveredManagementGroup model = BinaryData.fromString(
            "{\"name\":\"djrkvfgbvfvpd\",\"managementGroupConfiguration\":\"daciz\",\"typeRef\":\"q\",\"defaultTopic\":\"krribdeibqi\",\"defaultTimeoutInSeconds\":840101476,\"actions\":[{\"name\":\"vxndz\",\"actionConfiguration\":\"krefajpjo\",\"targetUri\":\"wkqnyhg\",\"typeRef\":\"j\",\"topic\":\"ivfxzsjabibsyst\",\"actionType\":\"Read\",\"timeoutInSeconds\":1095825236,\"lastUpdatedOn\":\"2021-04-01T03:56:35Z\"},{\"name\":\"vkvp\",\"actionConfiguration\":\"xbkzbzkdvncj\",\"targetUri\":\"budurgkakmo\",\"typeRef\":\"hjjklff\",\"topic\":\"ouw\",\"actionType\":\"Read\",\"timeoutInSeconds\":1358338018,\"lastUpdatedOn\":\"2021-01-25T05:55:11Z\"},{\"name\":\"eeyebi\",\"actionConfiguration\":\"kayuhqlbjbs\",\"targetUri\":\"bbqwrvtldg\",\"typeRef\":\"pgvmpipaslthaqfx\",\"topic\":\"mwutwbdsre\",\"actionType\":\"Call\",\"timeoutInSeconds\":481709550,\"lastUpdatedOn\":\"2021-08-18T10:27:03Z\"},{\"name\":\"uyowqkdwy\",\"actionConfiguration\":\"sibircgpi\",\"targetUri\":\"pzimejzanlfzxi\",\"typeRef\":\"rmbzo\",\"topic\":\"kixrj\",\"actionType\":\"Write\",\"timeoutInSeconds\":1711524187,\"lastUpdatedOn\":\"2021-02-12T14:44:45Z\"}],\"lastUpdatedOn\":\"2021-01-31T15:02:11Z\"}")
            .toObject(NamespaceDiscoveredManagementGroup.class);
        Assertions.assertEquals("djrkvfgbvfvpd", model.name());
        Assertions.assertEquals("daciz", model.managementGroupConfiguration());
        Assertions.assertEquals("q", model.typeRef());
        Assertions.assertEquals("krribdeibqi", model.defaultTopic());
        Assertions.assertEquals(840101476, model.defaultTimeoutInSeconds());
        Assertions.assertEquals("vxndz", model.actions().get(0).name());
        Assertions.assertEquals("krefajpjo", model.actions().get(0).actionConfiguration());
        Assertions.assertEquals("wkqnyhg", model.actions().get(0).targetUri());
        Assertions.assertEquals("j", model.actions().get(0).typeRef());
        Assertions.assertEquals("ivfxzsjabibsyst", model.actions().get(0).topic());
        Assertions.assertEquals(NamespaceDiscoveredManagementActionType.READ, model.actions().get(0).actionType());
        Assertions.assertEquals(1095825236, model.actions().get(0).timeoutInSeconds());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-01T03:56:35Z"), model.actions().get(0).lastUpdatedOn());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-31T15:02:11Z"), model.lastUpdatedOn());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NamespaceDiscoveredManagementGroup model = new NamespaceDiscoveredManagementGroup().withName("djrkvfgbvfvpd")
            .withManagementGroupConfiguration("daciz")
            .withTypeRef("q")
            .withDefaultTopic("krribdeibqi")
            .withDefaultTimeoutInSeconds(840101476)
            .withActions(Arrays.asList(
                new NamespaceDiscoveredManagementAction().withName("vxndz")
                    .withActionConfiguration("krefajpjo")
                    .withTargetUri("wkqnyhg")
                    .withTypeRef("j")
                    .withTopic("ivfxzsjabibsyst")
                    .withActionType(NamespaceDiscoveredManagementActionType.READ)
                    .withTimeoutInSeconds(1095825236)
                    .withLastUpdatedOn(OffsetDateTime.parse("2021-04-01T03:56:35Z")),
                new NamespaceDiscoveredManagementAction().withName("vkvp")
                    .withActionConfiguration("xbkzbzkdvncj")
                    .withTargetUri("budurgkakmo")
                    .withTypeRef("hjjklff")
                    .withTopic("ouw")
                    .withActionType(NamespaceDiscoveredManagementActionType.READ)
                    .withTimeoutInSeconds(1358338018)
                    .withLastUpdatedOn(OffsetDateTime.parse("2021-01-25T05:55:11Z")),
                new NamespaceDiscoveredManagementAction().withName("eeyebi")
                    .withActionConfiguration("kayuhqlbjbs")
                    .withTargetUri("bbqwrvtldg")
                    .withTypeRef("pgvmpipaslthaqfx")
                    .withTopic("mwutwbdsre")
                    .withActionType(NamespaceDiscoveredManagementActionType.CALL)
                    .withTimeoutInSeconds(481709550)
                    .withLastUpdatedOn(OffsetDateTime.parse("2021-08-18T10:27:03Z")),
                new NamespaceDiscoveredManagementAction().withName("uyowqkdwy")
                    .withActionConfiguration("sibircgpi")
                    .withTargetUri("pzimejzanlfzxi")
                    .withTypeRef("rmbzo")
                    .withTopic("kixrj")
                    .withActionType(NamespaceDiscoveredManagementActionType.WRITE)
                    .withTimeoutInSeconds(1711524187)
                    .withLastUpdatedOn(OffsetDateTime.parse("2021-02-12T14:44:45Z"))))
            .withLastUpdatedOn(OffsetDateTime.parse("2021-01-31T15:02:11Z"));
        model = BinaryData.fromObject(model).toObject(NamespaceDiscoveredManagementGroup.class);
        Assertions.assertEquals("djrkvfgbvfvpd", model.name());
        Assertions.assertEquals("daciz", model.managementGroupConfiguration());
        Assertions.assertEquals("q", model.typeRef());
        Assertions.assertEquals("krribdeibqi", model.defaultTopic());
        Assertions.assertEquals(840101476, model.defaultTimeoutInSeconds());
        Assertions.assertEquals("vxndz", model.actions().get(0).name());
        Assertions.assertEquals("krefajpjo", model.actions().get(0).actionConfiguration());
        Assertions.assertEquals("wkqnyhg", model.actions().get(0).targetUri());
        Assertions.assertEquals("j", model.actions().get(0).typeRef());
        Assertions.assertEquals("ivfxzsjabibsyst", model.actions().get(0).topic());
        Assertions.assertEquals(NamespaceDiscoveredManagementActionType.READ, model.actions().get(0).actionType());
        Assertions.assertEquals(1095825236, model.actions().get(0).timeoutInSeconds());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-01T03:56:35Z"), model.actions().get(0).lastUpdatedOn());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-31T15:02:11Z"), model.lastUpdatedOn());
    }
}
