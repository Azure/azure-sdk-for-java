// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.deviceregistry.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.deviceregistry.models.SchemaRegistryUpdate;
import com.azure.resourcemanager.deviceregistry.models.SchemaRegistryUpdateProperties;
import com.azure.resourcemanager.deviceregistry.models.SystemAssignedServiceIdentity;
import com.azure.resourcemanager.deviceregistry.models.SystemAssignedServiceIdentityType;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class SchemaRegistryUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SchemaRegistryUpdate model = BinaryData.fromString(
            "{\"identity\":{\"principalId\":\"xuuwhcj\",\"tenantId\":\"ccybvp\",\"type\":\"None\"},\"tags\":{\"lma\":\"kudzpxgwj\",\"iogsjkmnwq\":\"stcyohpfkyrkdbd\"},\"properties\":{\"displayName\":\"baiyhddviaceg\",\"description\":\"m\"}}")
            .toObject(SchemaRegistryUpdate.class);
        Assertions.assertEquals(SystemAssignedServiceIdentityType.NONE, model.identity().type());
        Assertions.assertEquals("kudzpxgwj", model.tags().get("lma"));
        Assertions.assertEquals("baiyhddviaceg", model.properties().displayName());
        Assertions.assertEquals("m", model.properties().description());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SchemaRegistryUpdate model = new SchemaRegistryUpdate()
            .withIdentity(new SystemAssignedServiceIdentity().withType(SystemAssignedServiceIdentityType.NONE))
            .withTags(mapOf("lma", "kudzpxgwj", "iogsjkmnwq", "stcyohpfkyrkdbd"))
            .withProperties(new SchemaRegistryUpdateProperties().withDisplayName("baiyhddviaceg").withDescription("m"));
        model = BinaryData.fromObject(model).toObject(SchemaRegistryUpdate.class);
        Assertions.assertEquals(SystemAssignedServiceIdentityType.NONE, model.identity().type());
        Assertions.assertEquals("kudzpxgwj", model.tags().get("lma"));
        Assertions.assertEquals("baiyhddviaceg", model.properties().displayName());
        Assertions.assertEquals("m", model.properties().description());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
