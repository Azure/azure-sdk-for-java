// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.deviceregistry.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.deviceregistry.models.EventBase;
import com.azure.resourcemanager.deviceregistry.models.Topic;
import com.azure.resourcemanager.deviceregistry.models.TopicRetainType;
import org.junit.jupiter.api.Assertions;

public final class EventBaseTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        EventBase model = BinaryData.fromString(
            "{\"name\":\"eusnhutj\",\"eventNotifier\":\"ltmrldh\",\"eventConfiguration\":\"jzzd\",\"topic\":{\"path\":\"qxhocdgeablgphut\",\"retain\":\"Keep\"}}")
            .toObject(EventBase.class);
        Assertions.assertEquals("eusnhutj", model.name());
        Assertions.assertEquals("ltmrldh", model.eventNotifier());
        Assertions.assertEquals("jzzd", model.eventConfiguration());
        Assertions.assertEquals("qxhocdgeablgphut", model.topic().path());
        Assertions.assertEquals(TopicRetainType.KEEP, model.topic().retain());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        EventBase model = new EventBase().withName("eusnhutj")
            .withEventNotifier("ltmrldh")
            .withEventConfiguration("jzzd")
            .withTopic(new Topic().withPath("qxhocdgeablgphut").withRetain(TopicRetainType.KEEP));
        model = BinaryData.fromObject(model).toObject(EventBase.class);
        Assertions.assertEquals("eusnhutj", model.name());
        Assertions.assertEquals("ltmrldh", model.eventNotifier());
        Assertions.assertEquals("jzzd", model.eventConfiguration());
        Assertions.assertEquals("qxhocdgeablgphut", model.topic().path());
        Assertions.assertEquals(TopicRetainType.KEEP, model.topic().retain());
    }
}
