// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.deviceregistry.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.deviceregistry.models.DiscoveredDataPoint;
import com.azure.resourcemanager.deviceregistry.models.DiscoveredDataset;
import com.azure.resourcemanager.deviceregistry.models.Topic;
import com.azure.resourcemanager.deviceregistry.models.TopicRetainType;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DiscoveredDatasetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DiscoveredDataset model = BinaryData.fromString(
            "{\"name\":\"bonqvpkvlrxnjeas\",\"datasetConfiguration\":\"pheoflokeyy\",\"topic\":{\"path\":\"nj\",\"retain\":\"Never\"},\"dataPoints\":[{\"name\":\"grhpdjpju\",\"dataSource\":\"asxazjpqyegualhb\",\"dataPointConfiguration\":\"hejjz\",\"lastUpdatedOn\":\"2021-01-27T02:51:11Z\"},{\"name\":\"udgwdslfho\",\"dataSource\":\"wmc\",\"dataPointConfiguration\":\"pwlbjnpg\",\"lastUpdatedOn\":\"2021-06-30T18:10:14Z\"},{\"name\":\"tadehxnltyfsopp\",\"dataSource\":\"suesnzw\",\"dataPointConfiguration\":\"jbavorxzdm\",\"lastUpdatedOn\":\"2021-07-20T12:25:55Z\"},{\"name\":\"tbqvudw\",\"dataSource\":\"dndnvow\",\"dataPointConfiguration\":\"jjugwdkcglhslaz\",\"lastUpdatedOn\":\"2021-04-05T17:23:15Z\"}]}")
            .toObject(DiscoveredDataset.class);
        Assertions.assertEquals("bonqvpkvlrxnjeas", model.name());
        Assertions.assertEquals("pheoflokeyy", model.datasetConfiguration());
        Assertions.assertEquals("nj", model.topic().path());
        Assertions.assertEquals(TopicRetainType.NEVER, model.topic().retain());
        Assertions.assertEquals("grhpdjpju", model.dataPoints().get(0).name());
        Assertions.assertEquals("asxazjpqyegualhb", model.dataPoints().get(0).dataSource());
        Assertions.assertEquals("hejjz", model.dataPoints().get(0).dataPointConfiguration());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-27T02:51:11Z"),
            model.dataPoints().get(0).lastUpdatedOn());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DiscoveredDataset model = new DiscoveredDataset().withName("bonqvpkvlrxnjeas")
            .withDatasetConfiguration("pheoflokeyy")
            .withTopic(new Topic().withPath("nj").withRetain(TopicRetainType.NEVER))
            .withDataPoints(Arrays.asList(
                new DiscoveredDataPoint().withName("grhpdjpju")
                    .withDataSource("asxazjpqyegualhb")
                    .withDataPointConfiguration("hejjz")
                    .withLastUpdatedOn(OffsetDateTime.parse("2021-01-27T02:51:11Z")),
                new DiscoveredDataPoint().withName("udgwdslfho")
                    .withDataSource("wmc")
                    .withDataPointConfiguration("pwlbjnpg")
                    .withLastUpdatedOn(OffsetDateTime.parse("2021-06-30T18:10:14Z")),
                new DiscoveredDataPoint().withName("tadehxnltyfsopp")
                    .withDataSource("suesnzw")
                    .withDataPointConfiguration("jbavorxzdm")
                    .withLastUpdatedOn(OffsetDateTime.parse("2021-07-20T12:25:55Z")),
                new DiscoveredDataPoint().withName("tbqvudw")
                    .withDataSource("dndnvow")
                    .withDataPointConfiguration("jjugwdkcglhslaz")
                    .withLastUpdatedOn(OffsetDateTime.parse("2021-04-05T17:23:15Z"))));
        model = BinaryData.fromObject(model).toObject(DiscoveredDataset.class);
        Assertions.assertEquals("bonqvpkvlrxnjeas", model.name());
        Assertions.assertEquals("pheoflokeyy", model.datasetConfiguration());
        Assertions.assertEquals("nj", model.topic().path());
        Assertions.assertEquals(TopicRetainType.NEVER, model.topic().retain());
        Assertions.assertEquals("grhpdjpju", model.dataPoints().get(0).name());
        Assertions.assertEquals("asxazjpqyegualhb", model.dataPoints().get(0).dataSource());
        Assertions.assertEquals("hejjz", model.dataPoints().get(0).dataPointConfiguration());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-27T02:51:11Z"),
            model.dataPoints().get(0).lastUpdatedOn());
    }
}
