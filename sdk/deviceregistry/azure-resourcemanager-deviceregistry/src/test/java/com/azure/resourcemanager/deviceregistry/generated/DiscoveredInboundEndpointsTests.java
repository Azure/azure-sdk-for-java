// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.deviceregistry.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.deviceregistry.models.AuthenticationMethod;
import com.azure.resourcemanager.deviceregistry.models.DiscoveredInboundEndpoints;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DiscoveredInboundEndpointsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DiscoveredInboundEndpoints model = BinaryData.fromString(
            "{\"endpointType\":\"lw\",\"address\":\"cesutrgjupauut\",\"version\":\"oqh\",\"supportedAuthenticationMethods\":[\"UsernamePassword\",\"Anonymous\"],\"additionalConfiguration\":\"w\",\"lastUpdatedOn\":\"2021-03-21T20:16:43Z\"}")
            .toObject(DiscoveredInboundEndpoints.class);
        Assertions.assertEquals("lw", model.endpointType());
        Assertions.assertEquals("cesutrgjupauut", model.address());
        Assertions.assertEquals("oqh", model.version());
        Assertions.assertEquals(AuthenticationMethod.USERNAME_PASSWORD, model.supportedAuthenticationMethods().get(0));
        Assertions.assertEquals("w", model.additionalConfiguration());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-21T20:16:43Z"), model.lastUpdatedOn());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DiscoveredInboundEndpoints model = new DiscoveredInboundEndpoints().withEndpointType("lw")
            .withAddress("cesutrgjupauut")
            .withVersion("oqh")
            .withSupportedAuthenticationMethods(
                Arrays.asList(AuthenticationMethod.USERNAME_PASSWORD, AuthenticationMethod.ANONYMOUS))
            .withAdditionalConfiguration("w")
            .withLastUpdatedOn(OffsetDateTime.parse("2021-03-21T20:16:43Z"));
        model = BinaryData.fromObject(model).toObject(DiscoveredInboundEndpoints.class);
        Assertions.assertEquals("lw", model.endpointType());
        Assertions.assertEquals("cesutrgjupauut", model.address());
        Assertions.assertEquals("oqh", model.version());
        Assertions.assertEquals(AuthenticationMethod.USERNAME_PASSWORD, model.supportedAuthenticationMethods().get(0));
        Assertions.assertEquals("w", model.additionalConfiguration());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-21T20:16:43Z"), model.lastUpdatedOn());
    }
}
