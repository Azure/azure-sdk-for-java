// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.deviceregistry.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.deviceregistry.fluent.models.SchemaRegistryInner;
import com.azure.resourcemanager.deviceregistry.models.SchemaRegistryProperties;
import com.azure.resourcemanager.deviceregistry.models.SystemAssignedServiceIdentity;
import com.azure.resourcemanager.deviceregistry.models.SystemAssignedServiceIdentityType;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class SchemaRegistryInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SchemaRegistryInner model = BinaryData.fromString(
            "{\"properties\":{\"uuid\":\"jhtxfvgxbfsmxne\",\"namespace\":\"mpvecxgodebfqk\",\"displayName\":\"bmpukgriwflz\",\"description\":\"bxzpuzycisp\",\"storageAccountContainerUrl\":\"qzahmgkbrp\",\"provisioningState\":\"Canceled\"},\"identity\":{\"principalId\":\"bnuqqkpik\",\"tenantId\":\"rgvtqag\",\"type\":\"SystemAssigned\"},\"location\":\"ynhijggme\",\"tags\":{\"zmhjrunmp\":\"iarbutrcvpna\",\"nkxmyskpbhenbtk\":\"ttdbhrbnl\",\"yxczfclh\":\"xywnytnrsynlqidy\"},\"id\":\"axdbabph\",\"name\":\"wrqlfktsthsuco\",\"type\":\"mnyyazt\"}")
            .toObject(SchemaRegistryInner.class);
        Assertions.assertEquals("ynhijggme", model.location());
        Assertions.assertEquals("iarbutrcvpna", model.tags().get("zmhjrunmp"));
        Assertions.assertEquals("mpvecxgodebfqk", model.properties().namespace());
        Assertions.assertEquals("bmpukgriwflz", model.properties().displayName());
        Assertions.assertEquals("bxzpuzycisp", model.properties().description());
        Assertions.assertEquals("qzahmgkbrp", model.properties().storageAccountContainerUrl());
        Assertions.assertEquals(SystemAssignedServiceIdentityType.SYSTEM_ASSIGNED, model.identity().type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SchemaRegistryInner model = new SchemaRegistryInner().withLocation("ynhijggme")
            .withTags(
                mapOf("zmhjrunmp", "iarbutrcvpna", "nkxmyskpbhenbtk", "ttdbhrbnl", "yxczfclh", "xywnytnrsynlqidy"))
            .withProperties(new SchemaRegistryProperties().withNamespace("mpvecxgodebfqk")
                .withDisplayName("bmpukgriwflz")
                .withDescription("bxzpuzycisp")
                .withStorageAccountContainerUrl("qzahmgkbrp"))
            .withIdentity(
                new SystemAssignedServiceIdentity().withType(SystemAssignedServiceIdentityType.SYSTEM_ASSIGNED));
        model = BinaryData.fromObject(model).toObject(SchemaRegistryInner.class);
        Assertions.assertEquals("ynhijggme", model.location());
        Assertions.assertEquals("iarbutrcvpna", model.tags().get("zmhjrunmp"));
        Assertions.assertEquals("mpvecxgodebfqk", model.properties().namespace());
        Assertions.assertEquals("bmpukgriwflz", model.properties().displayName());
        Assertions.assertEquals("bxzpuzycisp", model.properties().description());
        Assertions.assertEquals("qzahmgkbrp", model.properties().storageAccountContainerUrl());
        Assertions.assertEquals(SystemAssignedServiceIdentityType.SYSTEM_ASSIGNED, model.identity().type());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
