// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.deviceregistry.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.deviceregistry.DeviceRegistryManager;
import com.azure.resourcemanager.deviceregistry.models.Namespace;
import com.azure.resourcemanager.deviceregistry.models.SystemAssignedServiceIdentityType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class NamespacesGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"uuid\":\"xjumvq\",\"messaging\":{\"endpoints\":{\"rzpasccbiuimzdly\":{\"endpointType\":\"r\",\"address\":\"aiouaubrjt\",\"resourceId\":\"qxfuojrngif\"},\"eyzihgrky\":{\"endpointType\":\"fqwmkyoquf\",\"address\":\"vruzslzojhpctfnm\",\"resourceId\":\"otngfdgu\"},\"yhsgz\":{\"endpointType\":\"zabs\",\"address\":\"mfp\",\"resourceId\":\"ojeevy\"}}},\"provisioningState\":\"Accepted\"},\"identity\":{\"principalId\":\"omfgbeglqgleohib\",\"tenantId\":\"nlu\",\"type\":\"None\"},\"location\":\"rrfx\",\"tags\":{\"z\":\"btijvacvbm\",\"wxacevehj\":\"qqxlajr\",\"aoqltfaey\":\"uyxoaf\",\"hriypoqeyhlqhy\":\"inmfgvxirp\"},\"id\":\"prlpy\",\"name\":\"nuciqdsmexiit\",\"type\":\"fuxtyasiibmiybnn\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DeviceRegistryManager manager = DeviceRegistryManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Namespace response = manager.namespaces()
            .getByResourceGroupWithResponse("unqndyfpchrqb", "jjrcgegydc", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("rrfx", response.location());
        Assertions.assertEquals("btijvacvbm", response.tags().get("z"));
        Assertions.assertEquals("r",
            response.properties().messaging().endpoints().get("rzpasccbiuimzdly").endpointType());
        Assertions.assertEquals("aiouaubrjt",
            response.properties().messaging().endpoints().get("rzpasccbiuimzdly").address());
        Assertions.assertEquals("qxfuojrngif",
            response.properties().messaging().endpoints().get("rzpasccbiuimzdly").resourceId());
        Assertions.assertEquals(SystemAssignedServiceIdentityType.NONE, response.identity().type());
    }
}
