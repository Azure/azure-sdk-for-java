// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.deviceregistry.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.deviceregistry.models.MqttDestinationConfiguration;
import com.azure.resourcemanager.deviceregistry.models.MqttDestinationQos;
import com.azure.resourcemanager.deviceregistry.models.StreamMqttDestination;
import com.azure.resourcemanager.deviceregistry.models.TopicRetainType;
import org.junit.jupiter.api.Assertions;

public final class StreamMqttDestinationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        StreamMqttDestination model = BinaryData.fromString(
            "{\"target\":\"Mqtt\",\"configuration\":{\"topic\":\"yfjfcnjbkcn\",\"retain\":\"Never\",\"qos\":\"Qos1\",\"ttl\":2825151831912713640}}")
            .toObject(StreamMqttDestination.class);
        Assertions.assertEquals("yfjfcnjbkcn", model.configuration().topic());
        Assertions.assertEquals(TopicRetainType.NEVER, model.configuration().retain());
        Assertions.assertEquals(MqttDestinationQos.QOS1, model.configuration().qos());
        Assertions.assertEquals(2825151831912713640L, model.configuration().ttl());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        StreamMqttDestination model
            = new StreamMqttDestination().withConfiguration(new MqttDestinationConfiguration().withTopic("yfjfcnjbkcn")
                .withRetain(TopicRetainType.NEVER)
                .withQos(MqttDestinationQos.QOS1)
                .withTtl(2825151831912713640L));
        model = BinaryData.fromObject(model).toObject(StreamMqttDestination.class);
        Assertions.assertEquals("yfjfcnjbkcn", model.configuration().topic());
        Assertions.assertEquals(TopicRetainType.NEVER, model.configuration().retain());
        Assertions.assertEquals(MqttDestinationQos.QOS1, model.configuration().qos());
        Assertions.assertEquals(2825151831912713640L, model.configuration().ttl());
    }
}
