// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.deviceregistry.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.deviceregistry.models.NamespaceDiscoveredManagementAction;
import com.azure.resourcemanager.deviceregistry.models.NamespaceDiscoveredManagementActionType;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class NamespaceDiscoveredManagementActionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NamespaceDiscoveredManagementAction model = BinaryData.fromString(
            "{\"name\":\"dvncjabudurgk\",\"actionConfiguration\":\"mokzhjjklf\",\"targetUri\":\"hmouwqlgzrfze\",\"typeRef\":\"ebizikayuh\",\"topic\":\"bjbsybb\",\"actionType\":\"Write\",\"timeoutInSeconds\":146564330,\"lastUpdatedOn\":\"2021-08-07T02:44:31Z\"}")
            .toObject(NamespaceDiscoveredManagementAction.class);
        Assertions.assertEquals("dvncjabudurgk", model.name());
        Assertions.assertEquals("mokzhjjklf", model.actionConfiguration());
        Assertions.assertEquals("hmouwqlgzrfze", model.targetUri());
        Assertions.assertEquals("ebizikayuh", model.typeRef());
        Assertions.assertEquals("bjbsybb", model.topic());
        Assertions.assertEquals(NamespaceDiscoveredManagementActionType.WRITE, model.actionType());
        Assertions.assertEquals(146564330, model.timeoutInSeconds());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-07T02:44:31Z"), model.lastUpdatedOn());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NamespaceDiscoveredManagementAction model = new NamespaceDiscoveredManagementAction().withName("dvncjabudurgk")
            .withActionConfiguration("mokzhjjklf")
            .withTargetUri("hmouwqlgzrfze")
            .withTypeRef("ebizikayuh")
            .withTopic("bjbsybb")
            .withActionType(NamespaceDiscoveredManagementActionType.WRITE)
            .withTimeoutInSeconds(146564330)
            .withLastUpdatedOn(OffsetDateTime.parse("2021-08-07T02:44:31Z"));
        model = BinaryData.fromObject(model).toObject(NamespaceDiscoveredManagementAction.class);
        Assertions.assertEquals("dvncjabudurgk", model.name());
        Assertions.assertEquals("mokzhjjklf", model.actionConfiguration());
        Assertions.assertEquals("hmouwqlgzrfze", model.targetUri());
        Assertions.assertEquals("ebizikayuh", model.typeRef());
        Assertions.assertEquals("bjbsybb", model.topic());
        Assertions.assertEquals(NamespaceDiscoveredManagementActionType.WRITE, model.actionType());
        Assertions.assertEquals(146564330, model.timeoutInSeconds());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-07T02:44:31Z"), model.lastUpdatedOn());
    }
}
