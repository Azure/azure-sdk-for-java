// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.deviceregistry.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.deviceregistry.DeviceRegistryManager;
import com.azure.resourcemanager.deviceregistry.models.AuthenticationMethod;
import com.azure.resourcemanager.deviceregistry.models.NamespaceDiscoveredDevice;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class NamespaceDiscoveredDevicesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"externalDeviceId\":\"ttvwkpqh\",\"endpoints\":{\"inbound\":{\"njqikcz\":{\"endpointType\":\"uygb\",\"address\":\"eqqe\",\"version\":\"wv\",\"supportedAuthenticationMethods\":[\"Anonymous\",\"UsernamePassword\"],\"additionalConfiguration\":\"guaucmfdjwnla\",\"lastUpdatedOn\":\"2021-11-24T18:23:37Z\"},\"chrszi\":{\"endpointType\":\"vitac\",\"address\":\"xmfcsserxhtv\",\"version\":\"xhlw\",\"supportedAuthenticationMethods\":[\"Certificate\",\"Anonymous\",\"Anonymous\"],\"additionalConfiguration\":\"sxypruuu\",\"lastUpdatedOn\":\"2021-03-03T11:10:41Z\"},\"hkpigqfusuckzmkw\":{\"endpointType\":\"oyuelyetn\",\"address\":\"nb\",\"version\":\"yggagflnlgmt\",\"supportedAuthenticationMethods\":[\"Certificate\",\"Anonymous\",\"Certificate\"],\"additionalConfiguration\":\"ucftbyrp\",\"lastUpdatedOn\":\"2020-12-22T05:32:19Z\"},\"hp\":{\"endpointType\":\"lsnoxaxmqeqalh\",\"address\":\"jnhgwydyyn\",\"version\":\"vkh\",\"supportedAuthenticationMethods\":[\"Certificate\",\"Anonymous\",\"Certificate\",\"UsernamePassword\"],\"additionalConfiguration\":\"rfdl\",\"lastUpdatedOn\":\"2021-05-07T13:36:52Z\"}},\"outbound\":{\"assigned\":{\"ro\":{\"address\":\"eizjcpeogkhnmg\"},\"zoyw\":{\"address\":\"xddbhfhpfpaz\"}}}},\"manufacturer\":\"hpdulon\",\"model\":\"cnpqwteht\",\"operatingSystem\":\"vrh\",\"operatingSystemVersion\":\"jyoogwxh\",\"attributes\":{},\"discoveryId\":\"uug\",\"version\":4498449621335160642,\"provisioningState\":\"Deleting\"},\"extendedLocation\":{\"type\":\"urfqkfuare\",\"name\":\"lvhhtklnvn\"},\"location\":\"vvkyfedevjboslcq\",\"tags\":{\"ymc\":\"okkhminq\"},\"id\":\"ngnbdxxew\",\"name\":\"ninvudbchaqdt\",\"type\":\"qecrqctmxx\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DeviceRegistryManager manager = DeviceRegistryManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        NamespaceDiscoveredDevice response = manager.namespaceDiscoveredDevices()
            .getWithResponse("sfikayiansharuj", "ji", "xfz", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("vvkyfedevjboslcq", response.location());
        Assertions.assertEquals("okkhminq", response.tags().get("ymc"));
        Assertions.assertEquals("ttvwkpqh", response.properties().externalDeviceId());
        Assertions.assertEquals("uygb", response.properties().endpoints().inbound().get("njqikcz").endpointType());
        Assertions.assertEquals("eqqe", response.properties().endpoints().inbound().get("njqikcz").address());
        Assertions.assertEquals("wv", response.properties().endpoints().inbound().get("njqikcz").version());
        Assertions.assertEquals(AuthenticationMethod.ANONYMOUS,
            response.properties().endpoints().inbound().get("njqikcz").supportedAuthenticationMethods().get(0));
        Assertions.assertEquals("guaucmfdjwnla",
            response.properties().endpoints().inbound().get("njqikcz").additionalConfiguration());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-24T18:23:37Z"),
            response.properties().endpoints().inbound().get("njqikcz").lastUpdatedOn());
        Assertions.assertEquals("eizjcpeogkhnmg",
            response.properties().endpoints().outbound().assigned().get("ro").address());
        Assertions.assertEquals("hpdulon", response.properties().manufacturer());
        Assertions.assertEquals("cnpqwteht", response.properties().model());
        Assertions.assertEquals("vrh", response.properties().operatingSystem());
        Assertions.assertEquals("jyoogwxh", response.properties().operatingSystemVersion());
        Assertions.assertEquals("uug", response.properties().discoveryId());
        Assertions.assertEquals(4498449621335160642L, response.properties().version());
        Assertions.assertEquals("urfqkfuare", response.extendedLocation().type());
        Assertions.assertEquals("lvhhtklnvn", response.extendedLocation().name());
    }
}
