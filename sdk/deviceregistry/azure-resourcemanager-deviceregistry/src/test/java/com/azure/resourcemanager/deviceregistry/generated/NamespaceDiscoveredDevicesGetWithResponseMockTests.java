// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.deviceregistry.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.deviceregistry.DeviceRegistryManager;
import com.azure.resourcemanager.deviceregistry.models.AuthenticationMethod;
import com.azure.resourcemanager.deviceregistry.models.NamespaceDiscoveredDevice;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class NamespaceDiscoveredDevicesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"externalDeviceId\":\"gjiuqhibto\",\"endpoints\":{\"inbound\":{\"zpofoiyjwpfilk\":{\"endpointType\":\"wjedmurrxxgew\",\"address\":\"ktvqylkmqpzoy\",\"version\":\"fbcgwgcloxoebqin\",\"supportedAuthenticationMethods\":[\"Anonymous\",\"Anonymous\"],\"additionalConfiguration\":\"fujqlafcba\",\"lastUpdatedOn\":\"2021-08-29T21:34:19Z\"}},\"outbound\":{\"assigned\":{\"viauogphua\":{\"address\":\"holvdn\"},\"ukyefchnmnahmnxh\":{\"address\":\"tvt\"}}}},\"manufacturer\":\"jqirwrw\",\"model\":\"oxffif\",\"operatingSystem\":\"wrsnewmozqvbu\",\"operatingSystemVersion\":\"ma\",\"attributes\":{},\"discoveryId\":\"ycxhxzgaztta\",\"version\":792314735002365352,\"provisioningState\":\"Deleting\"},\"extendedLocation\":{\"type\":\"mfqhppubowse\",\"name\":\"dfgkmtdh\"},\"location\":\"ngb\",\"tags\":{\"obkauxofsh\":\"uahokq\",\"whslwkoj\":\"phwpnulaiywzej\",\"rpqaf\":\"llndnpd\"},\"id\":\"fugsnnfhyetefy\",\"name\":\"oc\",\"type\":\"ctfjgtixr\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DeviceRegistryManager manager = DeviceRegistryManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        NamespaceDiscoveredDevice response = manager.namespaceDiscoveredDevices()
            .getWithResponse("uqudtcvclxyn", "dkvgfabuiyjibuzp", "dugneiknp", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("ngb", response.location());
        Assertions.assertEquals("uahokq", response.tags().get("obkauxofsh"));
        Assertions.assertEquals("gjiuqhibto", response.properties().externalDeviceId());
        Assertions.assertEquals("wjedmurrxxgew",
            response.properties().endpoints().inbound().get("zpofoiyjwpfilk").endpointType());
        Assertions.assertEquals("ktvqylkmqpzoy",
            response.properties().endpoints().inbound().get("zpofoiyjwpfilk").address());
        Assertions.assertEquals("fbcgwgcloxoebqin",
            response.properties().endpoints().inbound().get("zpofoiyjwpfilk").version());
        Assertions.assertEquals(AuthenticationMethod.ANONYMOUS,
            response.properties().endpoints().inbound().get("zpofoiyjwpfilk").supportedAuthenticationMethods().get(0));
        Assertions.assertEquals("fujqlafcba",
            response.properties().endpoints().inbound().get("zpofoiyjwpfilk").additionalConfiguration());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-29T21:34:19Z"),
            response.properties().endpoints().inbound().get("zpofoiyjwpfilk").lastUpdatedOn());
        Assertions.assertEquals("holvdn",
            response.properties().endpoints().outbound().assigned().get("viauogphua").address());
        Assertions.assertEquals("jqirwrw", response.properties().manufacturer());
        Assertions.assertEquals("oxffif", response.properties().model());
        Assertions.assertEquals("wrsnewmozqvbu", response.properties().operatingSystem());
        Assertions.assertEquals("ma", response.properties().operatingSystemVersion());
        Assertions.assertEquals("ycxhxzgaztta", response.properties().discoveryId());
        Assertions.assertEquals(792314735002365352L, response.properties().version());
        Assertions.assertEquals("mfqhppubowse", response.extendedLocation().type());
        Assertions.assertEquals("dfgkmtdh", response.extendedLocation().name());
    }
}
