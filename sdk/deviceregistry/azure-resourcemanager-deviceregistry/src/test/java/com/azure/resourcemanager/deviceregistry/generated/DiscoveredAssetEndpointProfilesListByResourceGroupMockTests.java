// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.deviceregistry.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.deviceregistry.DeviceRegistryManager;
import com.azure.resourcemanager.deviceregistry.models.AuthenticationMethod;
import com.azure.resourcemanager.deviceregistry.models.DiscoveredAssetEndpointProfile;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DiscoveredAssetEndpointProfilesListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"targetAddress\":\"axhexiilivp\",\"additionalConfiguration\":\"iirqtd\",\"supportedAuthenticationMethods\":[\"Anonymous\",\"Certificate\",\"UsernamePassword\"],\"endpointProfileType\":\"uzf\",\"discoveryId\":\"squyfxrxxlep\",\"version\":4173276744346571971,\"provisioningState\":\"Failed\"},\"extendedLocation\":{\"type\":\"jezwlwnw\",\"name\":\"uqlcvydy\"},\"location\":\"tdooaoj\",\"tags\":{\"ebwnujhe\":\"odko\",\"jlfltkacjvefkdlf\":\"msbvdkcrodtjinf\",\"owpulpq\":\"akggkfpag\",\"xkqjnsjervt\":\"lyls\"},\"id\":\"agxsdszuemps\",\"name\":\"zkfzbeyv\",\"type\":\"nqicvinvkjjxdxrb\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DeviceRegistryManager manager = DeviceRegistryManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<DiscoveredAssetEndpointProfile> response = manager.discoveredAssetEndpointProfiles()
            .listByResourceGroup("thzvaytdwkqbrqu", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("tdooaoj", response.iterator().next().location());
        Assertions.assertEquals("odko", response.iterator().next().tags().get("ebwnujhe"));
        Assertions.assertEquals("axhexiilivp", response.iterator().next().properties().targetAddress());
        Assertions.assertEquals("iirqtd", response.iterator().next().properties().additionalConfiguration());
        Assertions.assertEquals(AuthenticationMethod.ANONYMOUS,
            response.iterator().next().properties().supportedAuthenticationMethods().get(0));
        Assertions.assertEquals("uzf", response.iterator().next().properties().endpointProfileType());
        Assertions.assertEquals("squyfxrxxlep", response.iterator().next().properties().discoveryId());
        Assertions.assertEquals(4173276744346571971L, response.iterator().next().properties().version());
        Assertions.assertEquals("jezwlwnw", response.iterator().next().extendedLocation().type());
        Assertions.assertEquals("uqlcvydy", response.iterator().next().extendedLocation().name());
    }
}
