// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.deviceregistry.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.deviceregistry.models.DatasetMqttDestination;
import com.azure.resourcemanager.deviceregistry.models.MqttDestinationConfiguration;
import com.azure.resourcemanager.deviceregistry.models.MqttDestinationQos;
import com.azure.resourcemanager.deviceregistry.models.TopicRetainType;
import org.junit.jupiter.api.Assertions;

public final class DatasetMqttDestinationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DatasetMqttDestination model = BinaryData.fromString(
            "{\"target\":\"Mqtt\",\"configuration\":{\"topic\":\"wzbaiue\",\"retain\":\"Keep\",\"qos\":\"Qos0\",\"ttl\":7484019295322681584}}")
            .toObject(DatasetMqttDestination.class);
        Assertions.assertEquals("wzbaiue", model.configuration().topic());
        Assertions.assertEquals(TopicRetainType.KEEP, model.configuration().retain());
        Assertions.assertEquals(MqttDestinationQos.QOS0, model.configuration().qos());
        Assertions.assertEquals(7484019295322681584L, model.configuration().ttl());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DatasetMqttDestination model
            = new DatasetMqttDestination().withConfiguration(new MqttDestinationConfiguration().withTopic("wzbaiue")
                .withRetain(TopicRetainType.KEEP)
                .withQos(MqttDestinationQos.QOS0)
                .withTtl(7484019295322681584L));
        model = BinaryData.fromObject(model).toObject(DatasetMqttDestination.class);
        Assertions.assertEquals("wzbaiue", model.configuration().topic());
        Assertions.assertEquals(TopicRetainType.KEEP, model.configuration().retain());
        Assertions.assertEquals(MqttDestinationQos.QOS0, model.configuration().qos());
        Assertions.assertEquals(7484019295322681584L, model.configuration().ttl());
    }
}
