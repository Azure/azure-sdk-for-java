// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.deviceregistry.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.deviceregistry.models.AuthenticationMethod;
import com.azure.resourcemanager.deviceregistry.models.DiscoveredAssetEndpointProfileUpdateProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DiscoveredAssetEndpointProfileUpdatePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DiscoveredAssetEndpointProfileUpdateProperties model = BinaryData.fromString(
            "{\"targetAddress\":\"nkixzbinj\",\"additionalConfiguration\":\"uttmrywnuzoqft\",\"supportedAuthenticationMethods\":[\"UsernamePassword\",\"Certificate\",\"Certificate\",\"Certificate\"],\"endpointProfileType\":\"qvyxlwhzlsicoho\",\"discoveryId\":\"nwvlryavwhheunmm\",\"version\":5242913098058290048}")
            .toObject(DiscoveredAssetEndpointProfileUpdateProperties.class);
        Assertions.assertEquals("nkixzbinj", model.targetAddress());
        Assertions.assertEquals("uttmrywnuzoqft", model.additionalConfiguration());
        Assertions.assertEquals(AuthenticationMethod.USERNAME_PASSWORD, model.supportedAuthenticationMethods().get(0));
        Assertions.assertEquals("qvyxlwhzlsicoho", model.endpointProfileType());
        Assertions.assertEquals("nwvlryavwhheunmm", model.discoveryId());
        Assertions.assertEquals(5242913098058290048L, model.version());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DiscoveredAssetEndpointProfileUpdateProperties model = new DiscoveredAssetEndpointProfileUpdateProperties()
            .withTargetAddress("nkixzbinj")
            .withAdditionalConfiguration("uttmrywnuzoqft")
            .withSupportedAuthenticationMethods(Arrays.asList(AuthenticationMethod.USERNAME_PASSWORD,
                AuthenticationMethod.CERTIFICATE, AuthenticationMethod.CERTIFICATE, AuthenticationMethod.CERTIFICATE))
            .withEndpointProfileType("qvyxlwhzlsicoho")
            .withDiscoveryId("nwvlryavwhheunmm")
            .withVersion(5242913098058290048L);
        model = BinaryData.fromObject(model).toObject(DiscoveredAssetEndpointProfileUpdateProperties.class);
        Assertions.assertEquals("nkixzbinj", model.targetAddress());
        Assertions.assertEquals("uttmrywnuzoqft", model.additionalConfiguration());
        Assertions.assertEquals(AuthenticationMethod.USERNAME_PASSWORD, model.supportedAuthenticationMethods().get(0));
        Assertions.assertEquals("qvyxlwhzlsicoho", model.endpointProfileType());
        Assertions.assertEquals("nwvlryavwhheunmm", model.discoveryId());
        Assertions.assertEquals(5242913098058290048L, model.version());
    }
}
