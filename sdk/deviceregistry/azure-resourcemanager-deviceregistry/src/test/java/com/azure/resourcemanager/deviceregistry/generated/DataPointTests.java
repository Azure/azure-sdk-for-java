// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.deviceregistry.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.deviceregistry.models.DataPoint;
import com.azure.resourcemanager.deviceregistry.models.DataPointsObservabilityMode;
import org.junit.jupiter.api.Assertions;

public final class DataPointTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DataPoint model = BinaryData.fromString(
            "{\"name\":\"iy\",\"dataSource\":\"pjxsqwpgrjbznor\",\"capabilityId\":\"xv\",\"observabilityMode\":\"gauge\",\"dataPointConfiguration\":\"xqabnmocpcysh\"}")
            .toObject(DataPoint.class);
        Assertions.assertEquals("iy", model.name());
        Assertions.assertEquals("pjxsqwpgrjbznor", model.dataSource());
        Assertions.assertEquals("xv", model.capabilityId());
        Assertions.assertEquals(DataPointsObservabilityMode.GAUGE, model.observabilityMode());
        Assertions.assertEquals("xqabnmocpcysh", model.dataPointConfiguration());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DataPoint model = new DataPoint().withName("iy")
            .withDataSource("pjxsqwpgrjbznor")
            .withCapabilityId("xv")
            .withObservabilityMode(DataPointsObservabilityMode.GAUGE)
            .withDataPointConfiguration("xqabnmocpcysh");
        model = BinaryData.fromObject(model).toObject(DataPoint.class);
        Assertions.assertEquals("iy", model.name());
        Assertions.assertEquals("pjxsqwpgrjbznor", model.dataSource());
        Assertions.assertEquals("xv", model.capabilityId());
        Assertions.assertEquals(DataPointsObservabilityMode.GAUGE, model.observabilityMode());
        Assertions.assertEquals("xqabnmocpcysh", model.dataPointConfiguration());
    }
}
