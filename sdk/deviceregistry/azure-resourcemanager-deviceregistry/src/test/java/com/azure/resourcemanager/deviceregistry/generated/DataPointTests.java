// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.deviceregistry.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.deviceregistry.models.DataPoint;
import com.azure.resourcemanager.deviceregistry.models.DataPointsObservabilityMode;
import org.junit.jupiter.api.Assertions;

public final class DataPointTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DataPoint model = BinaryData.fromString(
            "{\"name\":\"evcciqihnhun\",\"dataSource\":\"bwjzr\",\"capabilityId\":\"ygxgispemvtz\",\"observabilityMode\":\"log\",\"dataPointConfiguration\":\"ubljofxqe\"}")
            .toObject(DataPoint.class);
        Assertions.assertEquals("evcciqihnhun", model.name());
        Assertions.assertEquals("bwjzr", model.dataSource());
        Assertions.assertEquals("ygxgispemvtz", model.capabilityId());
        Assertions.assertEquals(DataPointsObservabilityMode.LOG, model.observabilityMode());
        Assertions.assertEquals("ubljofxqe", model.dataPointConfiguration());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DataPoint model = new DataPoint().withName("evcciqihnhun")
            .withDataSource("bwjzr")
            .withCapabilityId("ygxgispemvtz")
            .withObservabilityMode(DataPointsObservabilityMode.LOG)
            .withDataPointConfiguration("ubljofxqe");
        model = BinaryData.fromObject(model).toObject(DataPoint.class);
        Assertions.assertEquals("evcciqihnhun", model.name());
        Assertions.assertEquals("bwjzr", model.dataSource());
        Assertions.assertEquals("ygxgispemvtz", model.capabilityId());
        Assertions.assertEquals(DataPointsObservabilityMode.LOG, model.observabilityMode());
        Assertions.assertEquals("ubljofxqe", model.dataPointConfiguration());
    }
}
