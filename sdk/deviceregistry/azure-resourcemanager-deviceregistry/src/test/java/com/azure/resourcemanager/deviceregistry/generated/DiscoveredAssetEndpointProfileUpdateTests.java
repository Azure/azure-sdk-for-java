// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.deviceregistry.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.deviceregistry.models.AuthenticationMethod;
import com.azure.resourcemanager.deviceregistry.models.DiscoveredAssetEndpointProfileUpdate;
import com.azure.resourcemanager.deviceregistry.models.DiscoveredAssetEndpointProfileUpdateProperties;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class DiscoveredAssetEndpointProfileUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DiscoveredAssetEndpointProfileUpdate model = BinaryData.fromString(
            "{\"tags\":{\"iucgygevqzn\":\"kgjn\",\"rbpizc\":\"yp\",\"j\":\"r\",\"yhxdeoejzicwi\":\"dpydn\"},\"properties\":{\"targetAddress\":\"ttgzfbis\",\"additionalConfiguration\":\"bkh\",\"supportedAuthenticationMethods\":[\"UsernamePassword\",\"Certificate\",\"UsernamePassword\",\"Anonymous\"],\"endpointProfileType\":\"dphagalpbuxwgip\",\"discoveryId\":\"onowk\",\"version\":7362184502931754827}}")
            .toObject(DiscoveredAssetEndpointProfileUpdate.class);
        Assertions.assertEquals("kgjn", model.tags().get("iucgygevqzn"));
        Assertions.assertEquals("ttgzfbis", model.properties().targetAddress());
        Assertions.assertEquals("bkh", model.properties().additionalConfiguration());
        Assertions.assertEquals(AuthenticationMethod.USERNAME_PASSWORD,
            model.properties().supportedAuthenticationMethods().get(0));
        Assertions.assertEquals("dphagalpbuxwgip", model.properties().endpointProfileType());
        Assertions.assertEquals("onowk", model.properties().discoveryId());
        Assertions.assertEquals(7362184502931754827L, model.properties().version());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DiscoveredAssetEndpointProfileUpdate model = new DiscoveredAssetEndpointProfileUpdate()
            .withTags(mapOf("iucgygevqzn", "kgjn", "rbpizc", "yp", "j", "r", "yhxdeoejzicwi", "dpydn"))
            .withProperties(new DiscoveredAssetEndpointProfileUpdateProperties().withTargetAddress("ttgzfbis")
                .withAdditionalConfiguration("bkh")
                .withSupportedAuthenticationMethods(
                    Arrays.asList(AuthenticationMethod.USERNAME_PASSWORD, AuthenticationMethod.CERTIFICATE,
                        AuthenticationMethod.USERNAME_PASSWORD, AuthenticationMethod.ANONYMOUS))
                .withEndpointProfileType("dphagalpbuxwgip")
                .withDiscoveryId("onowk")
                .withVersion(7362184502931754827L));
        model = BinaryData.fromObject(model).toObject(DiscoveredAssetEndpointProfileUpdate.class);
        Assertions.assertEquals("kgjn", model.tags().get("iucgygevqzn"));
        Assertions.assertEquals("ttgzfbis", model.properties().targetAddress());
        Assertions.assertEquals("bkh", model.properties().additionalConfiguration());
        Assertions.assertEquals(AuthenticationMethod.USERNAME_PASSWORD,
            model.properties().supportedAuthenticationMethods().get(0));
        Assertions.assertEquals("dphagalpbuxwgip", model.properties().endpointProfileType());
        Assertions.assertEquals("onowk", model.properties().discoveryId());
        Assertions.assertEquals(7362184502931754827L, model.properties().version());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
