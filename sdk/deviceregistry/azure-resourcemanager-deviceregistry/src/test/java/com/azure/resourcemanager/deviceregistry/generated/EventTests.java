// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.deviceregistry.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.deviceregistry.models.Event;
import com.azure.resourcemanager.deviceregistry.models.EventsObservabilityMode;
import org.junit.jupiter.api.Assertions;

public final class EventTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        Event model = BinaryData.fromString(
            "{\"name\":\"jaeq\",\"eventNotifier\":\"hqjbasvmsmj\",\"capabilityId\":\"lngsntnbybkzgcwr\",\"observabilityMode\":\"log\",\"eventConfiguration\":\"xwrljdouskcqvkoc\"}")
            .toObject(Event.class);
        Assertions.assertEquals("jaeq", model.name());
        Assertions.assertEquals("hqjbasvmsmj", model.eventNotifier());
        Assertions.assertEquals("lngsntnbybkzgcwr", model.capabilityId());
        Assertions.assertEquals(EventsObservabilityMode.LOG, model.observabilityMode());
        Assertions.assertEquals("xwrljdouskcqvkoc", model.eventConfiguration());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        Event model = new Event().withName("jaeq")
            .withEventNotifier("hqjbasvmsmj")
            .withCapabilityId("lngsntnbybkzgcwr")
            .withObservabilityMode(EventsObservabilityMode.LOG)
            .withEventConfiguration("xwrljdouskcqvkoc");
        model = BinaryData.fromObject(model).toObject(Event.class);
        Assertions.assertEquals("jaeq", model.name());
        Assertions.assertEquals("hqjbasvmsmj", model.eventNotifier());
        Assertions.assertEquals("lngsntnbybkzgcwr", model.capabilityId());
        Assertions.assertEquals(EventsObservabilityMode.LOG, model.observabilityMode());
        Assertions.assertEquals("xwrljdouskcqvkoc", model.eventConfiguration());
    }
}
