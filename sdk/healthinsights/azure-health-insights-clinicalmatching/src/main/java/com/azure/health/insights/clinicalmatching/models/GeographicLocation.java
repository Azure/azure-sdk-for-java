// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.health.insights.clinicalmatching.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * A location given as a combination of city, state and country/region. It could specify a city, a state or a
 * country/region. In case a city is specified, either state +country/region or country/region (for countries/regions
 * where there are no states) should be added. In case a state is specified (without a city), country/region should be
 * added.
 */
@Fluent
public final class GeographicLocation {
    /*
     * City name.
     */
    @JsonProperty(value = "city")
    private String city;

    /*
     * State name.
     */
    @JsonProperty(value = "state")
    private String state;

    /*
     * Country/region name.
     */
    @JsonProperty(value = "countryOrRegion", required = true)
    private String countryOrRegion;

    /**
     * Creates an instance of GeographicLocation class.
     *
     * @param countryOrRegion the countryOrRegion value to set.
     */
    @JsonCreator
    public GeographicLocation(@JsonProperty(value = "countryOrRegion", required = true) String countryOrRegion) {
        this.countryOrRegion = countryOrRegion;
    }

    /**
     * Get the city property: City name.
     *
     * @return the city value.
     */
    public String getCity() {
        return this.city;
    }

    /**
     * Set the city property: City name.
     *
     * @param city the city value to set.
     * @return the GeographicLocation object itself.
     */
    public GeographicLocation setCity(String city) {
        this.city = city;
        return this;
    }

    /**
     * Get the state property: State name.
     *
     * @return the state value.
     */
    public String getState() {
        return this.state;
    }

    /**
     * Set the state property: State name.
     *
     * @param state the state value to set.
     * @return the GeographicLocation object itself.
     */
    public GeographicLocation setState(String state) {
        this.state = state;
        return this;
    }

    /**
     * Get the countryOrRegion property: Country/region name.
     *
     * @return the countryOrRegion value.
     */
    public String getCountryOrRegion() {
        return this.countryOrRegion;
    }
}
