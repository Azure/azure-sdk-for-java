// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.health.insights.radiologyinsights.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Component results
 * Based on [FHIR Observation.component](https://www.hl7.org/fhir/R4/observation.html).
 */
@Immutable
public final class FhirR4ObservationComponent extends FhirR4Element {

    /*
     * Type of component observation (code / type)
     */
    @Generated
    @JsonProperty(value = "code")
    private final FhirR4CodeableConcept code;

    /*
     * Value as Quantity
     */
    @Generated
    @JsonProperty(value = "valueQuantity")
    private FhirR4Quantity valueQuantity;

    /*
     * Value as CodeableConcept
     */
    @Generated
    @JsonProperty(value = "valueCodeableConcept")
    private FhirR4CodeableConcept valueCodeableConcept;

    /*
     * Value as string
     */
    @Generated
    @JsonProperty(value = "valueString")
    private String valueString;

    /*
     * Value as boolean
     */
    @Generated
    @JsonProperty(value = "valueBoolean")
    private Boolean valueBoolean;

    /*
     * Value as integer
     */
    @Generated
    @JsonProperty(value = "valueInteger")
    private Integer valueInteger;

    /*
     * Value as Range.
     */
    @Generated
    @JsonProperty(value = "valueRange")
    private FhirR4Range valueRange;

    /*
     * Value as Ratio.
     */
    @Generated
    @JsonProperty(value = "valueRatio")
    private FhirR4Ratio valueRatio;

    /*
     * Value as SampledData.
     */
    @Generated
    @JsonProperty(value = "valueSampledData")
    private FhirR4SampledData valueSampledData;

    /*
     * Value as time (hh:mm:ss)
     */
    @Generated
    @JsonProperty(value = "valueTime")
    private String valueTime;

    /*
     * Value as dateTime.
     */
    @Generated
    @JsonProperty(value = "valueDateTime")
    private String valueDateTime;

    /*
     * Value as Period.
     */
    @Generated
    @JsonProperty(value = "valuePeriod")
    private FhirR4Period valuePeriod;

    /*
     * Value as reference.
     */
    @Generated
    @JsonProperty(value = "valueReference")
    private FhirR4Reference valueReference;

    /*
     * Why the component result is missing
     */
    @Generated
    @JsonProperty(value = "dataAbsentReason")
    private FhirR4CodeableConcept dataAbsentReason;

    /*
     * High, low, normal, etc.
     */
    @Generated
    @JsonProperty(value = "interpretation")
    private List<FhirR4CodeableConcept> interpretation;

    /*
     * Provides guide for interpretation of component result
     */
    @Generated
    @JsonProperty(value = "referenceRange")
    private List<FhirR4ObservationReferenceRange> referenceRange;

    /**
     * Creates an instance of FhirR4ObservationComponent class.
     *
     * @param code the code value to set.
     */
    @Generated
    @JsonCreator
    private FhirR4ObservationComponent(@JsonProperty(value = "code") FhirR4CodeableConcept code) {
        this.code = code;
    }

    /**
     * Get the code property: Type of component observation (code / type).
     *
     * @return the code value.
     */
    @Generated
    public FhirR4CodeableConcept getCode() {
        return this.code;
    }

    /**
     * Get the valueQuantity property: Value as Quantity.
     *
     * @return the valueQuantity value.
     */
    @Generated
    public FhirR4Quantity getValueQuantity() {
        return this.valueQuantity;
    }

    /**
     * Get the valueCodeableConcept property: Value as CodeableConcept.
     *
     * @return the valueCodeableConcept value.
     */
    @Generated
    public FhirR4CodeableConcept getValueCodeableConcept() {
        return this.valueCodeableConcept;
    }

    /**
     * Get the valueString property: Value as string.
     *
     * @return the valueString value.
     */
    @Generated
    public String getValueString() {
        return this.valueString;
    }

    /**
     * Get the valueBoolean property: Value as boolean.
     *
     * @return the valueBoolean value.
     */
    @Generated
    public Boolean isValueBoolean() {
        return this.valueBoolean;
    }

    /**
     * Get the valueInteger property: Value as integer.
     *
     * @return the valueInteger value.
     */
    @Generated
    public Integer getValueInteger() {
        return this.valueInteger;
    }

    /**
     * Get the valueRange property: Value as Range.
     *
     * @return the valueRange value.
     */
    @Generated
    public FhirR4Range getValueRange() {
        return this.valueRange;
    }

    /**
     * Get the valueRatio property: Value as Ratio.
     *
     * @return the valueRatio value.
     */
    @Generated
    public FhirR4Ratio getValueRatio() {
        return this.valueRatio;
    }

    /**
     * Get the valueSampledData property: Value as SampledData.
     *
     * @return the valueSampledData value.
     */
    @Generated
    public FhirR4SampledData getValueSampledData() {
        return this.valueSampledData;
    }

    /**
     * Get the valueTime property: Value as time (hh:mm:ss).
     *
     * @return the valueTime value.
     */
    @Generated
    public String getValueTime() {
        return this.valueTime;
    }

    /**
     * Get the valueDateTime property: Value as dateTime.
     *
     * @return the valueDateTime value.
     */
    @Generated
    public String getValueDateTime() {
        return this.valueDateTime;
    }

    /**
     * Get the valuePeriod property: Value as Period.
     *
     * @return the valuePeriod value.
     */
    @Generated
    public FhirR4Period getValuePeriod() {
        return this.valuePeriod;
    }

    /**
     * Get the valueReference property: Value as reference.
     *
     * @return the valueReference value.
     */
    @Generated
    public FhirR4Reference getValueReference() {
        return this.valueReference;
    }

    /**
     * Get the dataAbsentReason property: Why the component result is missing.
     *
     * @return the dataAbsentReason value.
     */
    @Generated
    public FhirR4CodeableConcept getDataAbsentReason() {
        return this.dataAbsentReason;
    }

    /**
     * Get the interpretation property: High, low, normal, etc.
     *
     * @return the interpretation value.
     */
    @Generated
    public List<FhirR4CodeableConcept> getInterpretation() {
        return this.interpretation;
    }

    /**
     * Get the referenceRange property: Provides guide for interpretation of component result.
     *
     * @return the referenceRange value.
     */
    @Generated
    public List<FhirR4ObservationReferenceRange> getReferenceRange() {
        return this.referenceRange;
    }
}
