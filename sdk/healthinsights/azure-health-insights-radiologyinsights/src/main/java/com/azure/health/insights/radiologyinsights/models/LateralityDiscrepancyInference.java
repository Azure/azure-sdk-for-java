// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.health.insights.radiologyinsights.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * A laterality mismatch occurs when there is a discrepancy between the clinical documentation and the ordered procedure
 * (orderLateralityMismatch), a contradiction within the clinical document (textLateralityContradiction), or when no
 * laterality is mentioned (textLateralityMissing).
 */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    property = "kind",
    defaultImpl = LateralityDiscrepancyInference.class,
    visible = true)
@JsonTypeName("lateralityDiscrepancy")
@Immutable
public final class LateralityDiscrepancyInference extends RadiologyInsightsInference {

    /*
     * Discriminator property for RadiologyInsightsInference.
     */
    @Generated
    @JsonTypeId
    @JsonProperty(value = "kind")
    private RadiologyInsightsInferenceType kind = RadiologyInsightsInferenceType.LATERALITY_DISCREPANCY;

    /*
     * Laterality indication : SNOMED CT code for laterality qualifier value.
     */
    @Generated
    @JsonProperty(value = "lateralityIndication")
    private FhirR4CodeableConcept lateralityIndication;

    /*
     * Mismatch type : orderLateralityMismatch, textLateralityContradiction, textLateralityMissing.
     */
    @Generated
    @JsonProperty(value = "discrepancyType")
    private final LateralityDiscrepancyType discrepancyType;

    /**
     * Creates an instance of LateralityDiscrepancyInference class.
     *
     * @param discrepancyType the discrepancyType value to set.
     */
    @Generated
    @JsonCreator
    private LateralityDiscrepancyInference(
        @JsonProperty(value = "discrepancyType") LateralityDiscrepancyType discrepancyType) {
        this.discrepancyType = discrepancyType;
    }

    /**
     * Get the kind property: Discriminator property for RadiologyInsightsInference.
     *
     * @return the kind value.
     */
    @Generated
    @Override
    public RadiologyInsightsInferenceType getKind() {
        return this.kind;
    }

    /**
     * Get the lateralityIndication property: Laterality indication : SNOMED CT code for laterality qualifier value.
     *
     * @return the lateralityIndication value.
     */
    @Generated
    public FhirR4CodeableConcept getLateralityIndication() {
        return this.lateralityIndication;
    }

    /**
     * Get the discrepancyType property: Mismatch type : orderLateralityMismatch, textLateralityContradiction,
     * textLateralityMissing.
     *
     * @return the discrepancyType value.
     */
    @Generated
    public LateralityDiscrepancyType getDiscrepancyType() {
        return this.discrepancyType;
    }
}
