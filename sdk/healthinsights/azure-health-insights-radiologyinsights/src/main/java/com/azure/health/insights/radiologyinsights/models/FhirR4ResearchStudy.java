// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.health.insights.radiologyinsights.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;

/**
 * Detailed information about Research Study
 * Based on [FHIR ResearchStudy](https://www.hl7.org/fhir/R4/researchstudy.html).
 */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    property = "resourceType",
    defaultImpl = FhirR4ResearchStudy.class,
    visible = true)
@JsonTypeName("ResearchStudy")
@Immutable
public final class FhirR4ResearchStudy extends FhirR4DomainResource {

    /*
     * The resourceType property.
     */
    @Generated
    @JsonTypeId
    @JsonProperty(value = "resourceType")
    private String resourceType = "ResearchStudy";

    /*
     * Business Identifier for study
     */
    @Generated
    @JsonProperty(value = "identifier")
    private List<FhirR4Identifier> identifier;

    /*
     * Name for this study
     */
    @Generated
    @JsonProperty(value = "title")
    private String title;

    /*
     * Steps followed in executing study
     */
    @Generated
    @JsonProperty(value = "protocol")
    private List<FhirR4Reference> protocol;

    /*
     * Part of larger study
     */
    @Generated
    @JsonProperty(value = "partOf")
    private List<FhirR4Reference> partOf;

    /*
     * active | administratively-completed | approved | closed-to-accrual | closed-to-accrual-and-intervention |
     * completed | disapproved | in-review | temporarily-closed-to-accrual |
     * temporarily-closed-to-accrual-and-intervention | withdrawn
     */
    @Generated
    @JsonProperty(value = "status")
    private final ResearchStudyStatusCodeType status;

    /*
     * treatment | prevention | diagnostic | supportive-care | screening | health-services-research | basic-science |
     * device-feasibility
     */
    @Generated
    @JsonProperty(value = "primaryPurposeType")
    private FhirR4CodeableConcept primaryPurposeType;

    /*
     * n-a | early-phase-1 | phase-1 | phase-1-phase-2 | phase-2 | phase-2-phase-3 | phase-3 | phase-4
     */
    @Generated
    @JsonProperty(value = "phase")
    private FhirR4CodeableConcept phase;

    /*
     * Classifications for the study
     */
    @Generated
    @JsonProperty(value = "category")
    private List<FhirR4CodeableConcept> category;

    /*
     * Drugs, devices, etc. under study
     */
    @Generated
    @JsonProperty(value = "focus")
    private List<FhirR4CodeableConcept> focus;

    /*
     * Condition being studied
     */
    @Generated
    @JsonProperty(value = "condition")
    private List<FhirR4CodeableConcept> condition;

    /*
     * Contact details for the study
     */
    @Generated
    @JsonProperty(value = "contact")
    private List<FhirR4ContactDetail> contact;

    /*
     * Used to search for the study
     */
    @Generated
    @JsonProperty(value = "keyword")
    private List<FhirR4CodeableConcept> keyword;

    /*
     * Geographic region(s) for study
     */
    @Generated
    @JsonProperty(value = "location")
    private List<FhirR4CodeableConcept> location;

    /*
     * What this is study doing
     */
    @Generated
    @JsonProperty(value = "description")
    private String description;

    /*
     * Inclusion & exclusion criteria
     */
    @Generated
    @JsonProperty(value = "enrollment")
    private List<FhirR4Reference> enrollment;

    /*
     * When the study began and ended
     */
    @Generated
    @JsonProperty(value = "period")
    private FhirR4Period period;

    /*
     * Organization that initiates and is legally responsible for the study
     */
    @Generated
    @JsonProperty(value = "sponsor")
    private FhirR4Reference sponsor;

    /*
     * Researcher who oversees multiple aspects of the study
     */
    @Generated
    @JsonProperty(value = "principalInvestigator")
    private FhirR4Reference principalInvestigator;

    /*
     * Facility where study activities are conducted
     */
    @Generated
    @JsonProperty(value = "site")
    private List<FhirR4Reference> site;

    /*
     * accrual-goal-met | closed-due-to-toxicity | closed-due-to-lack-of-study-progress |
     * temporarily-closed-per-study-design
     */
    @Generated
    @JsonProperty(value = "reasonStopped")
    private FhirR4CodeableConcept reasonStopped;

    /*
     * Comments made about the study
     */
    @Generated
    @JsonProperty(value = "note")
    private List<FhirR4Annotation> note;

    /*
     * Defined path through the study for a subject
     */
    @Generated
    @JsonProperty(value = "arm")
    private List<ResearchStudyArm> arm;

    /*
     * A goal for the study
     */
    @Generated
    @JsonProperty(value = "objective")
    private List<ResearchStudyObjective> objective;

    /**
     * Creates an instance of FhirR4ResearchStudy class.
     *
     * @param resourceType the resourceType value to set.
     * @param status the status value to set.
     */
    @Generated
    @JsonCreator
    private FhirR4ResearchStudy(@JsonProperty(value = "resourceType") String resourceType,
        @JsonProperty(value = "status") ResearchStudyStatusCodeType status) {
        super(resourceType);
        this.status = status;
    }

    /**
     * Get the resourceType property: The resourceType property.
     *
     * @return the resourceType value.
     */
    @Generated
    @Override
    public String getResourceType() {
        return this.resourceType;
    }

    /**
     * Get the identifier property: Business Identifier for study.
     *
     * @return the identifier value.
     */
    @Generated
    public List<FhirR4Identifier> getIdentifier() {
        return this.identifier;
    }

    /**
     * Get the title property: Name for this study.
     *
     * @return the title value.
     */
    @Generated
    public String getTitle() {
        return this.title;
    }

    /**
     * Get the protocol property: Steps followed in executing study.
     *
     * @return the protocol value.
     */
    @Generated
    public List<FhirR4Reference> getProtocol() {
        return this.protocol;
    }

    /**
     * Get the partOf property: Part of larger study.
     *
     * @return the partOf value.
     */
    @Generated
    public List<FhirR4Reference> getPartOf() {
        return this.partOf;
    }

    /**
     * Get the status property: active | administratively-completed | approved | closed-to-accrual |
     * closed-to-accrual-and-intervention | completed | disapproved | in-review | temporarily-closed-to-accrual |
     * temporarily-closed-to-accrual-and-intervention | withdrawn.
     *
     * @return the status value.
     */
    @Generated
    public ResearchStudyStatusCodeType getStatus() {
        return this.status;
    }

    /**
     * Get the primaryPurposeType property: treatment | prevention | diagnostic | supportive-care | screening |
     * health-services-research | basic-science | device-feasibility.
     *
     * @return the primaryPurposeType value.
     */
    @Generated
    public FhirR4CodeableConcept getPrimaryPurposeType() {
        return this.primaryPurposeType;
    }

    /**
     * Get the phase property: n-a | early-phase-1 | phase-1 | phase-1-phase-2 | phase-2 | phase-2-phase-3 | phase-3 |
     * phase-4.
     *
     * @return the phase value.
     */
    @Generated
    public FhirR4CodeableConcept getPhase() {
        return this.phase;
    }

    /**
     * Get the category property: Classifications for the study.
     *
     * @return the category value.
     */
    @Generated
    public List<FhirR4CodeableConcept> getCategory() {
        return this.category;
    }

    /**
     * Get the focus property: Drugs, devices, etc. under study.
     *
     * @return the focus value.
     */
    @Generated
    public List<FhirR4CodeableConcept> getFocus() {
        return this.focus;
    }

    /**
     * Get the condition property: Condition being studied.
     *
     * @return the condition value.
     */
    @Generated
    public List<FhirR4CodeableConcept> getCondition() {
        return this.condition;
    }

    /**
     * Get the contact property: Contact details for the study.
     *
     * @return the contact value.
     */
    @Generated
    public List<FhirR4ContactDetail> getContact() {
        return this.contact;
    }

    /**
     * Get the keyword property: Used to search for the study.
     *
     * @return the keyword value.
     */
    @Generated
    public List<FhirR4CodeableConcept> getKeyword() {
        return this.keyword;
    }

    /**
     * Get the location property: Geographic region(s) for study.
     *
     * @return the location value.
     */
    @Generated
    public List<FhirR4CodeableConcept> getLocation() {
        return this.location;
    }

    /**
     * Get the description property: What this is study doing.
     *
     * @return the description value.
     */
    @Generated
    public String getDescription() {
        return this.description;
    }

    /**
     * Get the enrollment property: Inclusion &amp; exclusion criteria.
     *
     * @return the enrollment value.
     */
    @Generated
    public List<FhirR4Reference> getEnrollment() {
        return this.enrollment;
    }

    /**
     * Get the period property: When the study began and ended.
     *
     * @return the period value.
     */
    @Generated
    public FhirR4Period getPeriod() {
        return this.period;
    }

    /**
     * Get the sponsor property: Organization that initiates and is legally responsible for the study.
     *
     * @return the sponsor value.
     */
    @Generated
    public FhirR4Reference getSponsor() {
        return this.sponsor;
    }

    /**
     * Get the principalInvestigator property: Researcher who oversees multiple aspects of the study.
     *
     * @return the principalInvestigator value.
     */
    @Generated
    public FhirR4Reference getPrincipalInvestigator() {
        return this.principalInvestigator;
    }

    /**
     * Get the site property: Facility where study activities are conducted.
     *
     * @return the site value.
     */
    @Generated
    public List<FhirR4Reference> getSite() {
        return this.site;
    }

    /**
     * Get the reasonStopped property: accrual-goal-met | closed-due-to-toxicity | closed-due-to-lack-of-study-progress
     * | temporarily-closed-per-study-design.
     *
     * @return the reasonStopped value.
     */
    @Generated
    public FhirR4CodeableConcept getReasonStopped() {
        return this.reasonStopped;
    }

    /**
     * Get the note property: Comments made about the study.
     *
     * @return the note value.
     */
    @Generated
    public List<FhirR4Annotation> getNote() {
        return this.note;
    }

    /**
     * Get the arm property: Defined path through the study for a subject.
     *
     * @return the arm value.
     */
    @Generated
    public List<ResearchStudyArm> getArm() {
        return this.arm;
    }

    /**
     * Get the objective property: A goal for the study.
     *
     * @return the objective value.
     */
    @Generated
    public List<ResearchStudyObjective> getObjective() {
        return this.objective;
    }
}
