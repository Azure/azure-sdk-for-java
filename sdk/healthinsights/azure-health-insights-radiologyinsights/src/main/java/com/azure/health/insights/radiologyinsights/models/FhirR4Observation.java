// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.health.insights.radiologyinsights.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;

/**
 * Detailed information about observations
 * Based on [FHIR Observation](https://www.hl7.org/fhir/R4/observation.html).
 */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    property = "resourceType",
    defaultImpl = FhirR4Observation.class,
    visible = true)
@JsonTypeName("Observation")
@Immutable
public final class FhirR4Observation extends FhirR4DomainResource {

    /*
     * The resourceType property.
     */
    @Generated
    @JsonTypeId
    @JsonProperty(value = "resourceType")
    private String resourceType = "Observation";

    /*
     * Business Identifier for observation
     */
    @Generated
    @JsonProperty(value = "identifier")
    private List<FhirR4Identifier> identifier;

    /*
     * registered | preliminary | final | amended +
     */
    @Generated
    @JsonProperty(value = "status")
    private final ObservationStatusCodeType status;

    /*
     * Classification of type of observation
     */
    @Generated
    @JsonProperty(value = "category")
    private List<FhirR4CodeableConcept> category;

    /*
     * Type of observation (code / type)
     */
    @Generated
    @JsonProperty(value = "code")
    private final FhirR4CodeableConcept code;

    /*
     * Who and/or what the observation is about
     */
    @Generated
    @JsonProperty(value = "subject")
    private FhirR4Reference subject;

    /*
     * Healthcare event during which this observation is made
     */
    @Generated
    @JsonProperty(value = "encounter")
    private FhirR4Reference encounter;

    /*
     * Clinically relevant time/time-period for observation
     */
    @Generated
    @JsonProperty(value = "effectiveDateTime")
    private String effectiveDateTime;

    /*
     * Clinically relevant time/time-period for observation
     */
    @Generated
    @JsonProperty(value = "effectivePeriod")
    private FhirR4Period effectivePeriod;

    /*
     * Clinically relevant time/time-period for observation
     */
    @Generated
    @JsonProperty(value = "effectiveInstant")
    private String effectiveInstant;

    /*
     * Date/Time this version was made available
     */
    @Generated
    @JsonProperty(value = "issued")
    private String issued;

    /*
     * Actual result
     */
    @Generated
    @JsonProperty(value = "valueQuantity")
    private FhirR4Quantity valueQuantity;

    /*
     * Actual result
     */
    @Generated
    @JsonProperty(value = "valueCodeableConcept")
    private FhirR4CodeableConcept valueCodeableConcept;

    /*
     * Actual result
     */
    @Generated
    @JsonProperty(value = "valueString")
    private String valueString;

    /*
     * Actual result
     */
    @Generated
    @JsonProperty(value = "valueBoolean")
    private Boolean valueBoolean;

    /*
     * Actual result
     */
    @Generated
    @JsonProperty(value = "valueInteger")
    private Integer valueInteger;

    /*
     * Actual result
     */
    @Generated
    @JsonProperty(value = "valueRange")
    private FhirR4Range valueRange;

    /*
     * Actual result
     */
    @Generated
    @JsonProperty(value = "valueRatio")
    private FhirR4Ratio valueRatio;

    /*
     * Actual result
     */
    @Generated
    @JsonProperty(value = "valueSampledData")
    private FhirR4SampledData valueSampledData;

    /*
     * Actual result
     */
    @Generated
    @JsonProperty(value = "valueTime")
    private String valueTime;

    /*
     * Actual result
     */
    @Generated
    @JsonProperty(value = "valueDateTime")
    private String valueDateTime;

    /*
     * Actual result
     */
    @Generated
    @JsonProperty(value = "valuePeriod")
    private FhirR4Period valuePeriod;

    /*
     * Why the result is missing
     */
    @Generated
    @JsonProperty(value = "dataAbsentReason")
    private FhirR4CodeableConcept dataAbsentReason;

    /*
     * High, low, normal, etc.
     */
    @Generated
    @JsonProperty(value = "interpretation")
    private List<FhirR4CodeableConcept> interpretation;

    /*
     * Comments about the observation
     */
    @Generated
    @JsonProperty(value = "note")
    private List<FhirR4Annotation> note;

    /*
     * Observed body part
     */
    @Generated
    @JsonProperty(value = "bodySite")
    private FhirR4CodeableConcept bodySite;

    /*
     * How it was done
     */
    @Generated
    @JsonProperty(value = "method")
    private FhirR4CodeableConcept method;

    /*
     * Provides guide for interpretation
     */
    @Generated
    @JsonProperty(value = "referenceRange")
    private List<FhirR4ObservationReferenceRange> referenceRange;

    /*
     * Related resource that belongs to the Observation group
     */
    @Generated
    @JsonProperty(value = "hasMember")
    private List<FhirR4Reference> hasMember;

    /*
     * Related measurements the observation is made from
     */
    @Generated
    @JsonProperty(value = "derivedFrom")
    private List<FhirR4Reference> derivedFrom;

    /*
     * Component results
     */
    @Generated
    @JsonProperty(value = "component")
    private List<FhirR4ObservationComponent> component;

    /**
     * Creates an instance of FhirR4Observation class.
     *
     * @param resourceType the resourceType value to set.
     * @param status the status value to set.
     * @param code the code value to set.
     */
    @Generated
    @JsonCreator
    private FhirR4Observation(@JsonProperty(value = "resourceType") String resourceType,
        @JsonProperty(value = "status") ObservationStatusCodeType status,
        @JsonProperty(value = "code") FhirR4CodeableConcept code) {
        super(resourceType);
        this.status = status;
        this.code = code;
    }

    /**
     * Get the resourceType property: The resourceType property.
     *
     * @return the resourceType value.
     */
    @Generated
    @Override
    public String getResourceType() {
        return this.resourceType;
    }

    /**
     * Get the identifier property: Business Identifier for observation.
     *
     * @return the identifier value.
     */
    @Generated
    public List<FhirR4Identifier> getIdentifier() {
        return this.identifier;
    }

    /**
     * Get the status property: registered | preliminary | final | amended +.
     *
     * @return the status value.
     */
    @Generated
    public ObservationStatusCodeType getStatus() {
        return this.status;
    }

    /**
     * Get the category property: Classification of type of observation.
     *
     * @return the category value.
     */
    @Generated
    public List<FhirR4CodeableConcept> getCategory() {
        return this.category;
    }

    /**
     * Get the code property: Type of observation (code / type).
     *
     * @return the code value.
     */
    @Generated
    public FhirR4CodeableConcept getCode() {
        return this.code;
    }

    /**
     * Get the subject property: Who and/or what the observation is about.
     *
     * @return the subject value.
     */
    @Generated
    public FhirR4Reference getSubject() {
        return this.subject;
    }

    /**
     * Get the encounter property: Healthcare event during which this observation is made.
     *
     * @return the encounter value.
     */
    @Generated
    public FhirR4Reference getEncounter() {
        return this.encounter;
    }

    /**
     * Get the effectiveDateTime property: Clinically relevant time/time-period for observation.
     *
     * @return the effectiveDateTime value.
     */
    @Generated
    public String getEffectiveDateTime() {
        return this.effectiveDateTime;
    }

    /**
     * Get the effectivePeriod property: Clinically relevant time/time-period for observation.
     *
     * @return the effectivePeriod value.
     */
    @Generated
    public FhirR4Period getEffectivePeriod() {
        return this.effectivePeriod;
    }

    /**
     * Get the effectiveInstant property: Clinically relevant time/time-period for observation.
     *
     * @return the effectiveInstant value.
     */
    @Generated
    public String getEffectiveInstant() {
        return this.effectiveInstant;
    }

    /**
     * Get the issued property: Date/Time this version was made available.
     *
     * @return the issued value.
     */
    @Generated
    public String getIssued() {
        return this.issued;
    }

    /**
     * Get the valueQuantity property: Actual result.
     *
     * @return the valueQuantity value.
     */
    @Generated
    public FhirR4Quantity getValueQuantity() {
        return this.valueQuantity;
    }

    /**
     * Get the valueCodeableConcept property: Actual result.
     *
     * @return the valueCodeableConcept value.
     */
    @Generated
    public FhirR4CodeableConcept getValueCodeableConcept() {
        return this.valueCodeableConcept;
    }

    /**
     * Get the valueString property: Actual result.
     *
     * @return the valueString value.
     */
    @Generated
    public String getValueString() {
        return this.valueString;
    }

    /**
     * Get the valueBoolean property: Actual result.
     *
     * @return the valueBoolean value.
     */
    @Generated
    public Boolean isValueBoolean() {
        return this.valueBoolean;
    }

    /**
     * Get the valueInteger property: Actual result.
     *
     * @return the valueInteger value.
     */
    @Generated
    public Integer getValueInteger() {
        return this.valueInteger;
    }

    /**
     * Get the valueRange property: Actual result.
     *
     * @return the valueRange value.
     */
    @Generated
    public FhirR4Range getValueRange() {
        return this.valueRange;
    }

    /**
     * Get the valueRatio property: Actual result.
     *
     * @return the valueRatio value.
     */
    @Generated
    public FhirR4Ratio getValueRatio() {
        return this.valueRatio;
    }

    /**
     * Get the valueSampledData property: Actual result.
     *
     * @return the valueSampledData value.
     */
    @Generated
    public FhirR4SampledData getValueSampledData() {
        return this.valueSampledData;
    }

    /**
     * Get the valueTime property: Actual result.
     *
     * @return the valueTime value.
     */
    @Generated
    public String getValueTime() {
        return this.valueTime;
    }

    /**
     * Get the valueDateTime property: Actual result.
     *
     * @return the valueDateTime value.
     */
    @Generated
    public String getValueDateTime() {
        return this.valueDateTime;
    }

    /**
     * Get the valuePeriod property: Actual result.
     *
     * @return the valuePeriod value.
     */
    @Generated
    public FhirR4Period getValuePeriod() {
        return this.valuePeriod;
    }

    /**
     * Get the dataAbsentReason property: Why the result is missing.
     *
     * @return the dataAbsentReason value.
     */
    @Generated
    public FhirR4CodeableConcept getDataAbsentReason() {
        return this.dataAbsentReason;
    }

    /**
     * Get the interpretation property: High, low, normal, etc.
     *
     * @return the interpretation value.
     */
    @Generated
    public List<FhirR4CodeableConcept> getInterpretation() {
        return this.interpretation;
    }

    /**
     * Get the note property: Comments about the observation.
     *
     * @return the note value.
     */
    @Generated
    public List<FhirR4Annotation> getNote() {
        return this.note;
    }

    /**
     * Get the bodySite property: Observed body part.
     *
     * @return the bodySite value.
     */
    @Generated
    public FhirR4CodeableConcept getBodySite() {
        return this.bodySite;
    }

    /**
     * Get the method property: How it was done.
     *
     * @return the method value.
     */
    @Generated
    public FhirR4CodeableConcept getMethod() {
        return this.method;
    }

    /**
     * Get the referenceRange property: Provides guide for interpretation.
     *
     * @return the referenceRange value.
     */
    @Generated
    public List<FhirR4ObservationReferenceRange> getReferenceRange() {
        return this.referenceRange;
    }

    /**
     * Get the hasMember property: Related resource that belongs to the Observation group.
     *
     * @return the hasMember value.
     */
    @Generated
    public List<FhirR4Reference> getHasMember() {
        return this.hasMember;
    }

    /**
     * Get the derivedFrom property: Related measurements the observation is made from.
     *
     * @return the derivedFrom value.
     */
    @Generated
    public List<FhirR4Reference> getDerivedFrom() {
        return this.derivedFrom;
    }

    /**
     * Get the component property: Component results.
     *
     * @return the component value.
     */
    @Generated
    public List<FhirR4ObservationComponent> getComponent() {
        return this.component;
    }
}
