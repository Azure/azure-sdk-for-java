// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.health.insights.radiologyinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;

/**
 * A clinical document related to a patient. Document here is in the wide sense - not just a text document (note).
 */
@Fluent
public final class PatientDocument {

    /*
     * The type of the patient document, such as 'note' (text document) or 'fhirBundle' (FHIR JSON document).
     */
    @Generated
    @JsonProperty(value = "type")
    private final DocumentType type;

    /*
     * The type of the clinical document.
     */
    @Generated
    @JsonProperty(value = "clinicalType")
    private ClinicalDocumentType clinicalType;

    /*
     * A given identifier for the document. Has to be unique across all documents for a single patient.
     */
    @Generated
    @JsonProperty(value = "id")
    private final String id;

    /*
     * A 2 letter ISO 639-1 representation of the language of the document.
     */
    @Generated
    @JsonProperty(value = "language")
    private String language;

    /*
     * The date and time when the document was created.
     */
    @Generated
    @JsonProperty(value = "createdDateTime")
    private OffsetDateTime createdDateTime;

    /*
     * Document author(s)
     */
    @Generated
    @JsonProperty(value = "authors")
    private List<DocumentAuthor> authors;

    /*
     * specialty type the document
     */
    @Generated
    @JsonProperty(value = "specialtyType")
    private SpecialtyType specialtyType;

    /*
     * Administrative metadata for the document.
     */
    @Generated
    @JsonProperty(value = "administrativeMetadata")
    private DocumentAdministrativeMetadata administrativeMetadata;

    /*
     * The content of the patient document.
     */
    @Generated
    @JsonProperty(value = "content")
    private final DocumentContent content;

    /**
     * Creates an instance of PatientDocument class.
     *
     * @param type the type value to set.
     * @param id the id value to set.
     * @param content the content value to set.
     */
    @Generated
    @JsonCreator
    public PatientDocument(@JsonProperty(value = "type") DocumentType type, @JsonProperty(value = "id") String id,
        @JsonProperty(value = "content") DocumentContent content) {
        this.type = type;
        this.id = id;
        this.content = content;
    }

    /**
     * Get the type property: The type of the patient document, such as 'note' (text document) or 'fhirBundle' (FHIR
     * JSON document).
     *
     * @return the type value.
     */
    @Generated
    public DocumentType getType() {
        return this.type;
    }

    /**
     * Get the clinicalType property: The type of the clinical document.
     *
     * @return the clinicalType value.
     */
    @Generated
    public ClinicalDocumentType getClinicalType() {
        return this.clinicalType;
    }

    /**
     * Set the clinicalType property: The type of the clinical document.
     *
     * @param clinicalType the clinicalType value to set.
     * @return the PatientDocument object itself.
     */
    @Generated
    public PatientDocument setClinicalType(ClinicalDocumentType clinicalType) {
        this.clinicalType = clinicalType;
        return this;
    }

    /**
     * Get the id property: A given identifier for the document. Has to be unique across all documents for a single
     * patient.
     *
     * @return the id value.
     */
    @Generated
    public String getId() {
        return this.id;
    }

    /**
     * Get the language property: A 2 letter ISO 639-1 representation of the language of the document.
     *
     * @return the language value.
     */
    @Generated
    public String getLanguage() {
        return this.language;
    }

    /**
     * Set the language property: A 2 letter ISO 639-1 representation of the language of the document.
     *
     * @param language the language value to set.
     * @return the PatientDocument object itself.
     */
    @Generated
    public PatientDocument setLanguage(String language) {
        this.language = language;
        return this;
    }

    /**
     * Get the createdDateTime property: The date and time when the document was created.
     *
     * @return the createdDateTime value.
     */
    @Generated
    public OffsetDateTime getCreatedDateTime() {
        return this.createdDateTime;
    }

    /**
     * Set the createdDateTime property: The date and time when the document was created.
     *
     * @param createdDateTime the createdDateTime value to set.
     * @return the PatientDocument object itself.
     */
    @Generated
    public PatientDocument setCreatedDateTime(OffsetDateTime createdDateTime) {
        this.createdDateTime = createdDateTime;
        return this;
    }

    /**
     * Get the authors property: Document author(s).
     *
     * @return the authors value.
     */
    @Generated
    public List<DocumentAuthor> getAuthors() {
        return this.authors;
    }

    /**
     * Set the authors property: Document author(s).
     *
     * @param authors the authors value to set.
     * @return the PatientDocument object itself.
     */
    @Generated
    public PatientDocument setAuthors(List<DocumentAuthor> authors) {
        this.authors = authors;
        return this;
    }

    /**
     * Get the specialtyType property: specialty type the document.
     *
     * @return the specialtyType value.
     */
    @Generated
    public SpecialtyType getSpecialtyType() {
        return this.specialtyType;
    }

    /**
     * Set the specialtyType property: specialty type the document.
     *
     * @param specialtyType the specialtyType value to set.
     * @return the PatientDocument object itself.
     */
    @Generated
    public PatientDocument setSpecialtyType(SpecialtyType specialtyType) {
        this.specialtyType = specialtyType;
        return this;
    }

    /**
     * Get the administrativeMetadata property: Administrative metadata for the document.
     *
     * @return the administrativeMetadata value.
     */
    @Generated
    public DocumentAdministrativeMetadata getAdministrativeMetadata() {
        return this.administrativeMetadata;
    }

    /**
     * Set the administrativeMetadata property: Administrative metadata for the document.
     *
     * @param administrativeMetadata the administrativeMetadata value to set.
     * @return the PatientDocument object itself.
     */
    @Generated
    public PatientDocument setAdministrativeMetadata(DocumentAdministrativeMetadata administrativeMetadata) {
        this.administrativeMetadata = administrativeMetadata;
        return this;
    }

    /**
     * Get the content property: The content of the patient document.
     *
     * @return the content value.
     */
    @Generated
    public DocumentContent getContent() {
        return this.content;
    }
}
