// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.health.insights.radiologyinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;
import java.util.Map;

/**
 * Detailed information about observations
 * Based on [FHIR Observation](https://www.hl7.org/fhir/R4/observation.html).
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "resourceType")
@JsonTypeName("Observation")
@Fluent
public final class Observation extends DomainResource {
    /*
     * Business Identifier for observation
     */
    @Generated
    @JsonProperty(value = "identifier")
    private List<Identifier> identifier;

    /*
     * registered | preliminary | final | amended +
     */
    @Generated
    @JsonProperty(value = "status")
    private ObservationStatusCodeType status;

    /*
     * Classification of type of observation
     */
    @Generated
    @JsonProperty(value = "category")
    private List<CodeableConcept> category;

    /*
     * Type of observation (code / type)
     */
    @Generated
    @JsonProperty(value = "code")
    private CodeableConcept code;

    /*
     * Who and/or what the observation is about
     */
    @Generated
    @JsonProperty(value = "subject")
    private Reference subject;

    /*
     * Healthcare event during which this observation is made
     */
    @Generated
    @JsonProperty(value = "encounter")
    private Reference encounter;

    /*
     * Clinically relevant time/time-period for observation
     */
    @Generated
    @JsonProperty(value = "effectiveDateTime")
    private String effectiveDateTime;

    /*
     * Clinically relevant time/time-period for observation
     */
    @Generated
    @JsonProperty(value = "effectivePeriod")
    private PeriodModel effectivePeriod;

    /*
     * Clinically relevant time/time-period for observation
     */
    @Generated
    @JsonProperty(value = "effectiveInstant")
    private String effectiveInstant;

    /*
     * Date/Time this version was made available
     */
    @Generated
    @JsonProperty(value = "issued")
    private String issued;

    /*
     * Actual result
     */
    @Generated
    @JsonProperty(value = "valueQuantity")
    private Quantity valueQuantity;

    /*
     * Actual result
     */
    @Generated
    @JsonProperty(value = "valueCodeableConcept")
    private CodeableConcept valueCodeableConcept;

    /*
     * Actual result
     */
    @Generated
    @JsonProperty(value = "valueString")
    private String valueString;

    /*
     * Actual result
     */
    @Generated
    @JsonProperty(value = "valueBoolean")
    private Boolean valueBoolean;

    /*
     * Actual result
     */
    @Generated
    @JsonProperty(value = "valueInteger")
    private Integer valueInteger;

    /*
     * Actual result
     */
    @Generated
    @JsonProperty(value = "valueRange")
    private Range valueRange;

    /*
     * Actual result
     */
    @Generated
    @JsonProperty(value = "valueRatio")
    private Ratio valueRatio;

    /*
     * Actual result
     */
    @Generated
    @JsonProperty(value = "valueSampledData")
    private SampledData valueSampledData;

    /*
     * Actual result
     */
    @Generated
    @JsonProperty(value = "valueTime")
    private String valueTime;

    /*
     * Actual result
     */
    @Generated
    @JsonProperty(value = "valueDateTime")
    private String valueDateTime;

    /*
     * Actual result
     */
    @Generated
    @JsonProperty(value = "valuePeriod")
    private PeriodModel valuePeriod;

    /*
     * Why the result is missing
     */
    @Generated
    @JsonProperty(value = "dataAbsentReason")
    private CodeableConcept dataAbsentReason;

    /*
     * High, low, normal, etc.
     */
    @Generated
    @JsonProperty(value = "interpretation")
    private List<CodeableConcept> interpretation;

    /*
     * Comments about the observation
     */
    @Generated
    @JsonProperty(value = "note")
    private List<Annotation> note;

    /*
     * Observed body part
     */
    @Generated
    @JsonProperty(value = "bodySite")
    private CodeableConcept bodySite;

    /*
     * How it was done
     */
    @Generated
    @JsonProperty(value = "method")
    private CodeableConcept method;

    /*
     * Provides guide for interpretation
     */
    @Generated
    @JsonProperty(value = "referenceRange")
    private List<ObservationReferenceRange> referenceRange;

    /*
     * Related resource that belongs to the Observation group
     */
    @Generated
    @JsonProperty(value = "hasMember")
    private List<Reference> hasMember;

    /*
     * Related measurements the observation is made from
     */
    @Generated
    @JsonProperty(value = "derivedFrom")
    private List<Reference> derivedFrom;

    /*
     * Component results
     */
    @Generated
    @JsonProperty(value = "component")
    private List<ObservationComponent> component;

    /**
     * Creates an instance of Observation class.
     * 
     * @param status the status value to set.
     * @param code the code value to set.
     */
    @Generated
    @JsonCreator
    public Observation(@JsonProperty(value = "status") ObservationStatusCodeType status,
        @JsonProperty(value = "code") CodeableConcept code) {
        this.status = status;
        this.code = code;
    }

    /**
     * Get the identifier property: Business Identifier for observation.
     * 
     * @return the identifier value.
     */
    @Generated
    public List<Identifier> getIdentifier() {
        return this.identifier;
    }

    /**
     * Set the identifier property: Business Identifier for observation.
     * 
     * @param identifier the identifier value to set.
     * @return the Observation object itself.
     */
    @Generated
    public Observation setIdentifier(List<Identifier> identifier) {
        this.identifier = identifier;
        return this;
    }

    /**
     * Get the status property: registered | preliminary | final | amended +.
     * 
     * @return the status value.
     */
    @Generated
    public ObservationStatusCodeType getStatus() {
        return this.status;
    }

    /**
     * Get the category property: Classification of type of observation.
     * 
     * @return the category value.
     */
    @Generated
    public List<CodeableConcept> getCategory() {
        return this.category;
    }

    /**
     * Set the category property: Classification of type of observation.
     * 
     * @param category the category value to set.
     * @return the Observation object itself.
     */
    @Generated
    public Observation setCategory(List<CodeableConcept> category) {
        this.category = category;
        return this;
    }

    /**
     * Get the code property: Type of observation (code / type).
     * 
     * @return the code value.
     */
    @Generated
    public CodeableConcept getCode() {
        return this.code;
    }

    /**
     * Get the subject property: Who and/or what the observation is about.
     * 
     * @return the subject value.
     */
    @Generated
    public Reference getSubject() {
        return this.subject;
    }

    /**
     * Set the subject property: Who and/or what the observation is about.
     * 
     * @param subject the subject value to set.
     * @return the Observation object itself.
     */
    @Generated
    public Observation setSubject(Reference subject) {
        this.subject = subject;
        return this;
    }

    /**
     * Get the encounter property: Healthcare event during which this observation is made.
     * 
     * @return the encounter value.
     */
    @Generated
    public Reference getEncounter() {
        return this.encounter;
    }

    /**
     * Set the encounter property: Healthcare event during which this observation is made.
     * 
     * @param encounter the encounter value to set.
     * @return the Observation object itself.
     */
    @Generated
    public Observation setEncounter(Reference encounter) {
        this.encounter = encounter;
        return this;
    }

    /**
     * Get the effectiveDateTime property: Clinically relevant time/time-period for observation.
     * 
     * @return the effectiveDateTime value.
     */
    @Generated
    public String getEffectiveDateTime() {
        return this.effectiveDateTime;
    }

    /**
     * Set the effectiveDateTime property: Clinically relevant time/time-period for observation.
     * 
     * @param effectiveDateTime the effectiveDateTime value to set.
     * @return the Observation object itself.
     */
    @Generated
    public Observation setEffectiveDateTime(String effectiveDateTime) {
        this.effectiveDateTime = effectiveDateTime;
        return this;
    }

    /**
     * Get the effectivePeriod property: Clinically relevant time/time-period for observation.
     * 
     * @return the effectivePeriod value.
     */
    @Generated
    public PeriodModel getEffectivePeriod() {
        return this.effectivePeriod;
    }

    /**
     * Set the effectivePeriod property: Clinically relevant time/time-period for observation.
     * 
     * @param effectivePeriod the effectivePeriod value to set.
     * @return the Observation object itself.
     */
    @Generated
    public Observation setEffectivePeriod(PeriodModel effectivePeriod) {
        this.effectivePeriod = effectivePeriod;
        return this;
    }

    /**
     * Get the effectiveInstant property: Clinically relevant time/time-period for observation.
     * 
     * @return the effectiveInstant value.
     */
    @Generated
    public String getEffectiveInstant() {
        return this.effectiveInstant;
    }

    /**
     * Set the effectiveInstant property: Clinically relevant time/time-period for observation.
     * 
     * @param effectiveInstant the effectiveInstant value to set.
     * @return the Observation object itself.
     */
    @Generated
    public Observation setEffectiveInstant(String effectiveInstant) {
        this.effectiveInstant = effectiveInstant;
        return this;
    }

    /**
     * Get the issued property: Date/Time this version was made available.
     * 
     * @return the issued value.
     */
    @Generated
    public String getIssued() {
        return this.issued;
    }

    /**
     * Set the issued property: Date/Time this version was made available.
     * 
     * @param issued the issued value to set.
     * @return the Observation object itself.
     */
    @Generated
    public Observation setIssued(String issued) {
        this.issued = issued;
        return this;
    }

    /**
     * Get the valueQuantity property: Actual result.
     * 
     * @return the valueQuantity value.
     */
    @Generated
    public Quantity getValueQuantity() {
        return this.valueQuantity;
    }

    /**
     * Set the valueQuantity property: Actual result.
     * 
     * @param valueQuantity the valueQuantity value to set.
     * @return the Observation object itself.
     */
    @Generated
    public Observation setValueQuantity(Quantity valueQuantity) {
        this.valueQuantity = valueQuantity;
        return this;
    }

    /**
     * Get the valueCodeableConcept property: Actual result.
     * 
     * @return the valueCodeableConcept value.
     */
    @Generated
    public CodeableConcept getValueCodeableConcept() {
        return this.valueCodeableConcept;
    }

    /**
     * Set the valueCodeableConcept property: Actual result.
     * 
     * @param valueCodeableConcept the valueCodeableConcept value to set.
     * @return the Observation object itself.
     */
    @Generated
    public Observation setValueCodeableConcept(CodeableConcept valueCodeableConcept) {
        this.valueCodeableConcept = valueCodeableConcept;
        return this;
    }

    /**
     * Get the valueString property: Actual result.
     * 
     * @return the valueString value.
     */
    @Generated
    public String getValueString() {
        return this.valueString;
    }

    /**
     * Set the valueString property: Actual result.
     * 
     * @param valueString the valueString value to set.
     * @return the Observation object itself.
     */
    @Generated
    public Observation setValueString(String valueString) {
        this.valueString = valueString;
        return this;
    }

    /**
     * Get the valueBoolean property: Actual result.
     * 
     * @return the valueBoolean value.
     */
    @Generated
    public Boolean isValueBoolean() {
        return this.valueBoolean;
    }

    /**
     * Set the valueBoolean property: Actual result.
     * 
     * @param valueBoolean the valueBoolean value to set.
     * @return the Observation object itself.
     */
    @Generated
    public Observation setValueBoolean(Boolean valueBoolean) {
        this.valueBoolean = valueBoolean;
        return this;
    }

    /**
     * Get the valueInteger property: Actual result.
     * 
     * @return the valueInteger value.
     */
    @Generated
    public Integer getValueInteger() {
        return this.valueInteger;
    }

    /**
     * Set the valueInteger property: Actual result.
     * 
     * @param valueInteger the valueInteger value to set.
     * @return the Observation object itself.
     */
    @Generated
    public Observation setValueInteger(Integer valueInteger) {
        this.valueInteger = valueInteger;
        return this;
    }

    /**
     * Get the valueRange property: Actual result.
     * 
     * @return the valueRange value.
     */
    @Generated
    public Range getValueRange() {
        return this.valueRange;
    }

    /**
     * Set the valueRange property: Actual result.
     * 
     * @param valueRange the valueRange value to set.
     * @return the Observation object itself.
     */
    @Generated
    public Observation setValueRange(Range valueRange) {
        this.valueRange = valueRange;
        return this;
    }

    /**
     * Get the valueRatio property: Actual result.
     * 
     * @return the valueRatio value.
     */
    @Generated
    public Ratio getValueRatio() {
        return this.valueRatio;
    }

    /**
     * Set the valueRatio property: Actual result.
     * 
     * @param valueRatio the valueRatio value to set.
     * @return the Observation object itself.
     */
    @Generated
    public Observation setValueRatio(Ratio valueRatio) {
        this.valueRatio = valueRatio;
        return this;
    }

    /**
     * Get the valueSampledData property: Actual result.
     * 
     * @return the valueSampledData value.
     */
    @Generated
    public SampledData getValueSampledData() {
        return this.valueSampledData;
    }

    /**
     * Set the valueSampledData property: Actual result.
     * 
     * @param valueSampledData the valueSampledData value to set.
     * @return the Observation object itself.
     */
    @Generated
    public Observation setValueSampledData(SampledData valueSampledData) {
        this.valueSampledData = valueSampledData;
        return this;
    }

    /**
     * Get the valueTime property: Actual result.
     * 
     * @return the valueTime value.
     */
    @Generated
    public String getValueTime() {
        return this.valueTime;
    }

    /**
     * Set the valueTime property: Actual result.
     * 
     * @param valueTime the valueTime value to set.
     * @return the Observation object itself.
     */
    @Generated
    public Observation setValueTime(String valueTime) {
        this.valueTime = valueTime;
        return this;
    }

    /**
     * Get the valueDateTime property: Actual result.
     * 
     * @return the valueDateTime value.
     */
    @Generated
    public String getValueDateTime() {
        return this.valueDateTime;
    }

    /**
     * Set the valueDateTime property: Actual result.
     * 
     * @param valueDateTime the valueDateTime value to set.
     * @return the Observation object itself.
     */
    @Generated
    public Observation setValueDateTime(String valueDateTime) {
        this.valueDateTime = valueDateTime;
        return this;
    }

    /**
     * Get the valuePeriod property: Actual result.
     * 
     * @return the valuePeriod value.
     */
    @Generated
    public PeriodModel getValuePeriod() {
        return this.valuePeriod;
    }

    /**
     * Set the valuePeriod property: Actual result.
     * 
     * @param valuePeriod the valuePeriod value to set.
     * @return the Observation object itself.
     */
    @Generated
    public Observation setValuePeriod(PeriodModel valuePeriod) {
        this.valuePeriod = valuePeriod;
        return this;
    }

    /**
     * Get the dataAbsentReason property: Why the result is missing.
     * 
     * @return the dataAbsentReason value.
     */
    @Generated
    public CodeableConcept getDataAbsentReason() {
        return this.dataAbsentReason;
    }

    /**
     * Set the dataAbsentReason property: Why the result is missing.
     * 
     * @param dataAbsentReason the dataAbsentReason value to set.
     * @return the Observation object itself.
     */
    @Generated
    public Observation setDataAbsentReason(CodeableConcept dataAbsentReason) {
        this.dataAbsentReason = dataAbsentReason;
        return this;
    }

    /**
     * Get the interpretation property: High, low, normal, etc.
     * 
     * @return the interpretation value.
     */
    @Generated
    public List<CodeableConcept> getInterpretation() {
        return this.interpretation;
    }

    /**
     * Set the interpretation property: High, low, normal, etc.
     * 
     * @param interpretation the interpretation value to set.
     * @return the Observation object itself.
     */
    @Generated
    public Observation setInterpretation(List<CodeableConcept> interpretation) {
        this.interpretation = interpretation;
        return this;
    }

    /**
     * Get the note property: Comments about the observation.
     * 
     * @return the note value.
     */
    @Generated
    public List<Annotation> getNote() {
        return this.note;
    }

    /**
     * Set the note property: Comments about the observation.
     * 
     * @param note the note value to set.
     * @return the Observation object itself.
     */
    @Generated
    public Observation setNote(List<Annotation> note) {
        this.note = note;
        return this;
    }

    /**
     * Get the bodySite property: Observed body part.
     * 
     * @return the bodySite value.
     */
    @Generated
    public CodeableConcept getBodySite() {
        return this.bodySite;
    }

    /**
     * Set the bodySite property: Observed body part.
     * 
     * @param bodySite the bodySite value to set.
     * @return the Observation object itself.
     */
    @Generated
    public Observation setBodySite(CodeableConcept bodySite) {
        this.bodySite = bodySite;
        return this;
    }

    /**
     * Get the method property: How it was done.
     * 
     * @return the method value.
     */
    @Generated
    public CodeableConcept getMethod() {
        return this.method;
    }

    /**
     * Set the method property: How it was done.
     * 
     * @param method the method value to set.
     * @return the Observation object itself.
     */
    @Generated
    public Observation setMethod(CodeableConcept method) {
        this.method = method;
        return this;
    }

    /**
     * Get the referenceRange property: Provides guide for interpretation.
     * 
     * @return the referenceRange value.
     */
    @Generated
    public List<ObservationReferenceRange> getReferenceRange() {
        return this.referenceRange;
    }

    /**
     * Set the referenceRange property: Provides guide for interpretation.
     * 
     * @param referenceRange the referenceRange value to set.
     * @return the Observation object itself.
     */
    @Generated
    public Observation setReferenceRange(List<ObservationReferenceRange> referenceRange) {
        this.referenceRange = referenceRange;
        return this;
    }

    /**
     * Get the hasMember property: Related resource that belongs to the Observation group.
     * 
     * @return the hasMember value.
     */
    @Generated
    public List<Reference> getHasMember() {
        return this.hasMember;
    }

    /**
     * Set the hasMember property: Related resource that belongs to the Observation group.
     * 
     * @param hasMember the hasMember value to set.
     * @return the Observation object itself.
     */
    @Generated
    public Observation setHasMember(List<Reference> hasMember) {
        this.hasMember = hasMember;
        return this;
    }

    /**
     * Get the derivedFrom property: Related measurements the observation is made from.
     * 
     * @return the derivedFrom value.
     */
    @Generated
    public List<Reference> getDerivedFrom() {
        return this.derivedFrom;
    }

    /**
     * Set the derivedFrom property: Related measurements the observation is made from.
     * 
     * @param derivedFrom the derivedFrom value to set.
     * @return the Observation object itself.
     */
    @Generated
    public Observation setDerivedFrom(List<Reference> derivedFrom) {
        this.derivedFrom = derivedFrom;
        return this;
    }

    /**
     * Get the component property: Component results.
     * 
     * @return the component value.
     */
    @Generated
    public List<ObservationComponent> getComponent() {
        return this.component;
    }

    /**
     * Set the component property: Component results.
     * 
     * @param component the component value to set.
     * @return the Observation object itself.
     */
    @Generated
    public Observation setComponent(List<ObservationComponent> component) {
        this.component = component;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public Observation setText(Narrative text) {
        super.setText(text);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public Observation setContained(List<Map<String, Object>> contained) {
        super.setContained(contained);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public Observation setExtension(List<Extension> extension) {
        super.setExtension(extension);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public Observation setModifierExtension(List<Extension> modifierExtension) {
        super.setModifierExtension(modifierExtension);
        return this;
    }
}
