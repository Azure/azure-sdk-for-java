// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.health.insights.radiologyinsights.models;

import com.azure.core.annotation.Generated;
import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * Medical Professional Type.
 */
public final class MedicalProfessionalType extends ExpandableStringEnum<MedicalProfessionalType> {

    /**
     * Unknown medical professional type.
     */
    @Generated
    public static final MedicalProfessionalType UNKNOWN = fromString("unknown");

    /**
     * Doctor medical professional type.
     */
    @Generated
    public static final MedicalProfessionalType DOCTOR = fromString("doctor");

    /**
     * Nurse medical professional type.
     */
    @Generated
    public static final MedicalProfessionalType NURSE = fromString("nurse");

    /**
     * Technician medical professional type.
     */
    @Generated
    public static final MedicalProfessionalType MIDWIFE = fromString("midwife");

    /**
     * Technician medical professional type.
     */
    @Generated
    public static final MedicalProfessionalType PHYSICIAN_ASSISTANT = fromString("physicianAssistant");

    /**
     * Creates a new instance of MedicalProfessionalType value.
     *
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Generated
    @Deprecated
    public MedicalProfessionalType() {
    }

    /**
     * Creates or finds a MedicalProfessionalType from its string representation.
     *
     * @param name a name to look for.
     * @return the corresponding MedicalProfessionalType.
     */
    @Generated
    public static MedicalProfessionalType fromString(String name) {
        return fromString(name, MedicalProfessionalType.class);
    }

    /**
     * Gets known MedicalProfessionalType values.
     *
     * @return known MedicalProfessionalType values.
     */
    @Generated
    public static Collection<MedicalProfessionalType> values() {
        return values(MedicalProfessionalType.class);
    }
}
