// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.health.insights.radiologyinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;
import java.util.Map;

/**
 * Detailed information about conditions, problems or diagnoses
 * Based on [FHIR Condition](https://www.hl7.org/fhir/R4/condition.html).
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "resourceType")
@JsonTypeName("Condition")
@Fluent
public final class Condition extends DomainResource {
    /*
     * External Ids for this condition
     */
    @Generated
    @JsonProperty(value = "identifier")
    private List<Identifier> identifier;

    /*
     * active | recurrence | relapse | inactive | remission | resolved
     */
    @Generated
    @JsonProperty(value = "clinicalStatus")
    private CodeableConcept clinicalStatus;

    /*
     * unconfirmed | provisional | differential | confirmed | refuted | entered-in-error
     */
    @Generated
    @JsonProperty(value = "verificationStatus")
    private CodeableConcept verificationStatus;

    /*
     * problem-list-item | encounter-diagnosis
     */
    @Generated
    @JsonProperty(value = "category")
    private List<CodeableConcept> category;

    /*
     * Subjective severity of condition
     */
    @Generated
    @JsonProperty(value = "severity")
    private CodeableConcept severity;

    /*
     * Identification of the condition, problem or diagnosis
     */
    @Generated
    @JsonProperty(value = "code")
    private CodeableConcept code;

    /*
     * Anatomical location, if relevant
     */
    @Generated
    @JsonProperty(value = "bodySite")
    private List<CodeableConcept> bodySite;

    /*
     * Encounter created as part of
     */
    @Generated
    @JsonProperty(value = "encounter")
    private Reference encounter;

    /*
     * Estimated or actual date, date-time, or age
     */
    @Generated
    @JsonProperty(value = "onsetDateTime")
    private String onsetDateTime;

    /*
     * Estimated or actual date, date-time, or age
     */
    @Generated
    @JsonProperty(value = "onsetAge")
    private Quantity onsetAge;

    /*
     * Estimated or actual date, date-time, or age
     */
    @Generated
    @JsonProperty(value = "onsetPeriod")
    private PeriodModel onsetPeriod;

    /*
     * Estimated or actual date, date-time, or age
     */
    @Generated
    @JsonProperty(value = "onsetRange")
    private Range onsetRange;

    /*
     * Estimated or actual date, date-time, or age
     */
    @Generated
    @JsonProperty(value = "onsetString")
    private String onsetString;

    /*
     * When in resolution/remission
     */
    @Generated
    @JsonProperty(value = "abatementDateTime")
    private String abatementDateTime;

    /*
     * When in resolution/remission
     */
    @Generated
    @JsonProperty(value = "abatementAge")
    private Quantity abatementAge;

    /*
     * When in resolution/remission
     */
    @Generated
    @JsonProperty(value = "abatementPeriod")
    private PeriodModel abatementPeriod;

    /*
     * When in resolution/remission
     */
    @Generated
    @JsonProperty(value = "abatementRange")
    private Range abatementRange;

    /*
     * When in resolution/remission
     */
    @Generated
    @JsonProperty(value = "abatementString")
    private String abatementString;

    /*
     * Date record was first recorded
     */
    @Generated
    @JsonProperty(value = "recordedDate")
    private String recordedDate;

    /*
     * stge/grade, usually assessed formally
     */
    @Generated
    @JsonProperty(value = "stage")
    private List<ConditionStage> stage;

    /*
     * Additional information about the Condition
     */
    @Generated
    @JsonProperty(value = "note")
    private List<Annotation> note;

    /**
     * Creates an instance of Condition class.
     */
    @Generated
    public Condition() {
    }

    /**
     * Get the identifier property: External Ids for this condition.
     * 
     * @return the identifier value.
     */
    @Generated
    public List<Identifier> getIdentifier() {
        return this.identifier;
    }

    /**
     * Set the identifier property: External Ids for this condition.
     * 
     * @param identifier the identifier value to set.
     * @return the Condition object itself.
     */
    @Generated
    public Condition setIdentifier(List<Identifier> identifier) {
        this.identifier = identifier;
        return this;
    }

    /**
     * Get the clinicalStatus property: active | recurrence | relapse | inactive | remission | resolved.
     * 
     * @return the clinicalStatus value.
     */
    @Generated
    public CodeableConcept getClinicalStatus() {
        return this.clinicalStatus;
    }

    /**
     * Set the clinicalStatus property: active | recurrence | relapse | inactive | remission | resolved.
     * 
     * @param clinicalStatus the clinicalStatus value to set.
     * @return the Condition object itself.
     */
    @Generated
    public Condition setClinicalStatus(CodeableConcept clinicalStatus) {
        this.clinicalStatus = clinicalStatus;
        return this;
    }

    /**
     * Get the verificationStatus property: unconfirmed | provisional | differential | confirmed | refuted |
     * entered-in-error.
     * 
     * @return the verificationStatus value.
     */
    @Generated
    public CodeableConcept getVerificationStatus() {
        return this.verificationStatus;
    }

    /**
     * Set the verificationStatus property: unconfirmed | provisional | differential | confirmed | refuted |
     * entered-in-error.
     * 
     * @param verificationStatus the verificationStatus value to set.
     * @return the Condition object itself.
     */
    @Generated
    public Condition setVerificationStatus(CodeableConcept verificationStatus) {
        this.verificationStatus = verificationStatus;
        return this;
    }

    /**
     * Get the category property: problem-list-item | encounter-diagnosis.
     * 
     * @return the category value.
     */
    @Generated
    public List<CodeableConcept> getCategory() {
        return this.category;
    }

    /**
     * Set the category property: problem-list-item | encounter-diagnosis.
     * 
     * @param category the category value to set.
     * @return the Condition object itself.
     */
    @Generated
    public Condition setCategory(List<CodeableConcept> category) {
        this.category = category;
        return this;
    }

    /**
     * Get the severity property: Subjective severity of condition.
     * 
     * @return the severity value.
     */
    @Generated
    public CodeableConcept getSeverity() {
        return this.severity;
    }

    /**
     * Set the severity property: Subjective severity of condition.
     * 
     * @param severity the severity value to set.
     * @return the Condition object itself.
     */
    @Generated
    public Condition setSeverity(CodeableConcept severity) {
        this.severity = severity;
        return this;
    }

    /**
     * Get the code property: Identification of the condition, problem or diagnosis.
     * 
     * @return the code value.
     */
    @Generated
    public CodeableConcept getCode() {
        return this.code;
    }

    /**
     * Set the code property: Identification of the condition, problem or diagnosis.
     * 
     * @param code the code value to set.
     * @return the Condition object itself.
     */
    @Generated
    public Condition setCode(CodeableConcept code) {
        this.code = code;
        return this;
    }

    /**
     * Get the bodySite property: Anatomical location, if relevant.
     * 
     * @return the bodySite value.
     */
    @Generated
    public List<CodeableConcept> getBodySite() {
        return this.bodySite;
    }

    /**
     * Set the bodySite property: Anatomical location, if relevant.
     * 
     * @param bodySite the bodySite value to set.
     * @return the Condition object itself.
     */
    @Generated
    public Condition setBodySite(List<CodeableConcept> bodySite) {
        this.bodySite = bodySite;
        return this;
    }

    /**
     * Get the encounter property: Encounter created as part of.
     * 
     * @return the encounter value.
     */
    @Generated
    public Reference getEncounter() {
        return this.encounter;
    }

    /**
     * Set the encounter property: Encounter created as part of.
     * 
     * @param encounter the encounter value to set.
     * @return the Condition object itself.
     */
    @Generated
    public Condition setEncounter(Reference encounter) {
        this.encounter = encounter;
        return this;
    }

    /**
     * Get the onsetDateTime property: Estimated or actual date, date-time, or age.
     * 
     * @return the onsetDateTime value.
     */
    @Generated
    public String getOnsetDateTime() {
        return this.onsetDateTime;
    }

    /**
     * Set the onsetDateTime property: Estimated or actual date, date-time, or age.
     * 
     * @param onsetDateTime the onsetDateTime value to set.
     * @return the Condition object itself.
     */
    @Generated
    public Condition setOnsetDateTime(String onsetDateTime) {
        this.onsetDateTime = onsetDateTime;
        return this;
    }

    /**
     * Get the onsetAge property: Estimated or actual date, date-time, or age.
     * 
     * @return the onsetAge value.
     */
    @Generated
    public Quantity getOnsetAge() {
        return this.onsetAge;
    }

    /**
     * Set the onsetAge property: Estimated or actual date, date-time, or age.
     * 
     * @param onsetAge the onsetAge value to set.
     * @return the Condition object itself.
     */
    @Generated
    public Condition setOnsetAge(Quantity onsetAge) {
        this.onsetAge = onsetAge;
        return this;
    }

    /**
     * Get the onsetPeriod property: Estimated or actual date, date-time, or age.
     * 
     * @return the onsetPeriod value.
     */
    @Generated
    public PeriodModel getOnsetPeriod() {
        return this.onsetPeriod;
    }

    /**
     * Set the onsetPeriod property: Estimated or actual date, date-time, or age.
     * 
     * @param onsetPeriod the onsetPeriod value to set.
     * @return the Condition object itself.
     */
    @Generated
    public Condition setOnsetPeriod(PeriodModel onsetPeriod) {
        this.onsetPeriod = onsetPeriod;
        return this;
    }

    /**
     * Get the onsetRange property: Estimated or actual date, date-time, or age.
     * 
     * @return the onsetRange value.
     */
    @Generated
    public Range getOnsetRange() {
        return this.onsetRange;
    }

    /**
     * Set the onsetRange property: Estimated or actual date, date-time, or age.
     * 
     * @param onsetRange the onsetRange value to set.
     * @return the Condition object itself.
     */
    @Generated
    public Condition setOnsetRange(Range onsetRange) {
        this.onsetRange = onsetRange;
        return this;
    }

    /**
     * Get the onsetString property: Estimated or actual date, date-time, or age.
     * 
     * @return the onsetString value.
     */
    @Generated
    public String getOnsetString() {
        return this.onsetString;
    }

    /**
     * Set the onsetString property: Estimated or actual date, date-time, or age.
     * 
     * @param onsetString the onsetString value to set.
     * @return the Condition object itself.
     */
    @Generated
    public Condition setOnsetString(String onsetString) {
        this.onsetString = onsetString;
        return this;
    }

    /**
     * Get the abatementDateTime property: When in resolution/remission.
     * 
     * @return the abatementDateTime value.
     */
    @Generated
    public String getAbatementDateTime() {
        return this.abatementDateTime;
    }

    /**
     * Set the abatementDateTime property: When in resolution/remission.
     * 
     * @param abatementDateTime the abatementDateTime value to set.
     * @return the Condition object itself.
     */
    @Generated
    public Condition setAbatementDateTime(String abatementDateTime) {
        this.abatementDateTime = abatementDateTime;
        return this;
    }

    /**
     * Get the abatementAge property: When in resolution/remission.
     * 
     * @return the abatementAge value.
     */
    @Generated
    public Quantity getAbatementAge() {
        return this.abatementAge;
    }

    /**
     * Set the abatementAge property: When in resolution/remission.
     * 
     * @param abatementAge the abatementAge value to set.
     * @return the Condition object itself.
     */
    @Generated
    public Condition setAbatementAge(Quantity abatementAge) {
        this.abatementAge = abatementAge;
        return this;
    }

    /**
     * Get the abatementPeriod property: When in resolution/remission.
     * 
     * @return the abatementPeriod value.
     */
    @Generated
    public PeriodModel getAbatementPeriod() {
        return this.abatementPeriod;
    }

    /**
     * Set the abatementPeriod property: When in resolution/remission.
     * 
     * @param abatementPeriod the abatementPeriod value to set.
     * @return the Condition object itself.
     */
    @Generated
    public Condition setAbatementPeriod(PeriodModel abatementPeriod) {
        this.abatementPeriod = abatementPeriod;
        return this;
    }

    /**
     * Get the abatementRange property: When in resolution/remission.
     * 
     * @return the abatementRange value.
     */
    @Generated
    public Range getAbatementRange() {
        return this.abatementRange;
    }

    /**
     * Set the abatementRange property: When in resolution/remission.
     * 
     * @param abatementRange the abatementRange value to set.
     * @return the Condition object itself.
     */
    @Generated
    public Condition setAbatementRange(Range abatementRange) {
        this.abatementRange = abatementRange;
        return this;
    }

    /**
     * Get the abatementString property: When in resolution/remission.
     * 
     * @return the abatementString value.
     */
    @Generated
    public String getAbatementString() {
        return this.abatementString;
    }

    /**
     * Set the abatementString property: When in resolution/remission.
     * 
     * @param abatementString the abatementString value to set.
     * @return the Condition object itself.
     */
    @Generated
    public Condition setAbatementString(String abatementString) {
        this.abatementString = abatementString;
        return this;
    }

    /**
     * Get the recordedDate property: Date record was first recorded.
     * 
     * @return the recordedDate value.
     */
    @Generated
    public String getRecordedDate() {
        return this.recordedDate;
    }

    /**
     * Set the recordedDate property: Date record was first recorded.
     * 
     * @param recordedDate the recordedDate value to set.
     * @return the Condition object itself.
     */
    @Generated
    public Condition setRecordedDate(String recordedDate) {
        this.recordedDate = recordedDate;
        return this;
    }

    /**
     * Get the stage property: stge/grade, usually assessed formally.
     * 
     * @return the stage value.
     */
    @Generated
    public List<ConditionStage> getStage() {
        return this.stage;
    }

    /**
     * Set the stage property: stge/grade, usually assessed formally.
     * 
     * @param stage the stage value to set.
     * @return the Condition object itself.
     */
    @Generated
    public Condition setStage(List<ConditionStage> stage) {
        this.stage = stage;
        return this;
    }

    /**
     * Get the note property: Additional information about the Condition.
     * 
     * @return the note value.
     */
    @Generated
    public List<Annotation> getNote() {
        return this.note;
    }

    /**
     * Set the note property: Additional information about the Condition.
     * 
     * @param note the note value to set.
     * @return the Condition object itself.
     */
    @Generated
    public Condition setNote(List<Annotation> note) {
        this.note = note;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public Condition setText(Narrative text) {
        super.setText(text);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public Condition setContained(List<Map<String, Object>> contained) {
        super.setContained(contained);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public Condition setExtension(List<Extension> extension) {
        super.setExtension(extension);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public Condition setModifierExtension(List<Extension> modifierExtension) {
        super.setModifierExtension(modifierExtension);
        return this;
    }
}
