// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.health.insights.radiologyinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/**
 * A duration of time during which an event is happening.
 */
@Fluent
public final class TimePeriod {

    /*
     * Starting time with inclusive boundary
     */
    @Generated
    @JsonProperty(value = "start")
    private OffsetDateTime start;

    /*
     * End time with inclusive boundary, if not ongoing
     */
    @Generated
    @JsonProperty(value = "end")
    private OffsetDateTime end;

    /**
     * Creates an instance of TimePeriod class.
     */
    @Generated
    public TimePeriod() {
    }

    /**
     * Get the start property: Starting time with inclusive boundary.
     *
     * @return the start value.
     */
    @Generated
    public OffsetDateTime getStart() {
        return this.start;
    }

    /**
     * Set the start property: Starting time with inclusive boundary.
     *
     * @param start the start value to set.
     * @return the TimePeriod object itself.
     */
    @Generated
    public TimePeriod setStart(OffsetDateTime start) {
        this.start = start;
        return this;
    }

    /**
     * Get the end property: End time with inclusive boundary, if not ongoing.
     *
     * @return the end value.
     */
    @Generated
    public OffsetDateTime getEnd() {
        return this.end;
    }

    /**
     * Set the end property: End time with inclusive boundary, if not ongoing.
     *
     * @param end the end value to set.
     * @return the TimePeriod object itself.
     */
    @Generated
    public TimePeriod setEnd(OffsetDateTime end) {
        this.end = end;
        return this;
    }
}
