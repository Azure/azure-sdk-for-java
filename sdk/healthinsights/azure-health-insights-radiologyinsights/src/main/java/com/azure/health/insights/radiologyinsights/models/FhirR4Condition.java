// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.health.insights.radiologyinsights.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;

/**
 * Detailed information about conditions, problems or diagnoses
 * Based on [FHIR Condition](https://www.hl7.org/fhir/R4/condition.html).
 */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    property = "resourceType",
    defaultImpl = FhirR4Condition.class,
    visible = true)
@JsonTypeName("Condition")
@Immutable
public final class FhirR4Condition extends FhirR4DomainResource {

    /*
     * The resourceType property.
     */
    @Generated
    @JsonTypeId
    @JsonProperty(value = "resourceType")
    private String resourceType = "Condition";

    /*
     * External Ids for this condition
     */
    @Generated
    @JsonProperty(value = "identifier")
    private List<FhirR4Identifier> identifier;

    /*
     * active | recurrence | relapse | inactive | remission | resolved
     */
    @Generated
    @JsonProperty(value = "clinicalStatus")
    private FhirR4CodeableConcept clinicalStatus;

    /*
     * unconfirmed | provisional | differential | confirmed | refuted | entered-in-error
     */
    @Generated
    @JsonProperty(value = "verificationStatus")
    private FhirR4CodeableConcept verificationStatus;

    /*
     * problem-list-item | encounter-diagnosis
     */
    @Generated
    @JsonProperty(value = "category")
    private List<FhirR4CodeableConcept> category;

    /*
     * Subjective severity of condition
     */
    @Generated
    @JsonProperty(value = "severity")
    private FhirR4CodeableConcept severity;

    /*
     * Identification of the condition, problem or diagnosis
     */
    @Generated
    @JsonProperty(value = "code")
    private FhirR4CodeableConcept code;

    /*
     * Anatomical location, if relevant
     */
    @Generated
    @JsonProperty(value = "bodySite")
    private List<FhirR4CodeableConcept> bodySite;

    /*
     * Encounter created as part of
     */
    @Generated
    @JsonProperty(value = "encounter")
    private FhirR4Reference encounter;

    /*
     * Estimated or actual date, date-time, or age
     */
    @Generated
    @JsonProperty(value = "onsetDateTime")
    private String onsetDateTime;

    /*
     * Estimated or actual date, date-time, or age
     */
    @Generated
    @JsonProperty(value = "onsetAge")
    private FhirR4Quantity onsetAge;

    /*
     * Estimated or actual date, date-time, or age
     */
    @Generated
    @JsonProperty(value = "onsetPeriod")
    private FhirR4Period onsetPeriod;

    /*
     * Estimated or actual date, date-time, or age
     */
    @Generated
    @JsonProperty(value = "onsetRange")
    private FhirR4Range onsetRange;

    /*
     * Estimated or actual date, date-time, or age
     */
    @Generated
    @JsonProperty(value = "onsetString")
    private String onsetString;

    /*
     * When in resolution/remission
     */
    @Generated
    @JsonProperty(value = "abatementDateTime")
    private String abatementDateTime;

    /*
     * When in resolution/remission
     */
    @Generated
    @JsonProperty(value = "abatementAge")
    private FhirR4Quantity abatementAge;

    /*
     * When in resolution/remission
     */
    @Generated
    @JsonProperty(value = "abatementPeriod")
    private FhirR4Period abatementPeriod;

    /*
     * When in resolution/remission
     */
    @Generated
    @JsonProperty(value = "abatementRange")
    private FhirR4Range abatementRange;

    /*
     * When in resolution/remission
     */
    @Generated
    @JsonProperty(value = "abatementString")
    private String abatementString;

    /*
     * Date record was first recorded
     */
    @Generated
    @JsonProperty(value = "recordedDate")
    private String recordedDate;

    /*
     * stge/grade, usually assessed formally
     */
    @Generated
    @JsonProperty(value = "stage")
    private List<FhirR4ConditionStage> stage;

    /*
     * Additional information about the Condition
     */
    @Generated
    @JsonProperty(value = "note")
    private List<FhirR4Annotation> note;

    /**
     * Creates an instance of FhirR4Condition class.
     *
     * @param resourceType the resourceType value to set.
     */
    @Generated
    @JsonCreator
    private FhirR4Condition(@JsonProperty(value = "resourceType") String resourceType) {
        super(resourceType);
    }

    /**
     * Get the resourceType property: The resourceType property.
     *
     * @return the resourceType value.
     */
    @Generated
    @Override
    public String getResourceType() {
        return this.resourceType;
    }

    /**
     * Get the identifier property: External Ids for this condition.
     *
     * @return the identifier value.
     */
    @Generated
    public List<FhirR4Identifier> getIdentifier() {
        return this.identifier;
    }

    /**
     * Get the clinicalStatus property: active | recurrence | relapse | inactive | remission | resolved.
     *
     * @return the clinicalStatus value.
     */
    @Generated
    public FhirR4CodeableConcept getClinicalStatus() {
        return this.clinicalStatus;
    }

    /**
     * Get the verificationStatus property: unconfirmed | provisional | differential | confirmed | refuted |
     * entered-in-error.
     *
     * @return the verificationStatus value.
     */
    @Generated
    public FhirR4CodeableConcept getVerificationStatus() {
        return this.verificationStatus;
    }

    /**
     * Get the category property: problem-list-item | encounter-diagnosis.
     *
     * @return the category value.
     */
    @Generated
    public List<FhirR4CodeableConcept> getCategory() {
        return this.category;
    }

    /**
     * Get the severity property: Subjective severity of condition.
     *
     * @return the severity value.
     */
    @Generated
    public FhirR4CodeableConcept getSeverity() {
        return this.severity;
    }

    /**
     * Get the code property: Identification of the condition, problem or diagnosis.
     *
     * @return the code value.
     */
    @Generated
    public FhirR4CodeableConcept getCode() {
        return this.code;
    }

    /**
     * Get the bodySite property: Anatomical location, if relevant.
     *
     * @return the bodySite value.
     */
    @Generated
    public List<FhirR4CodeableConcept> getBodySite() {
        return this.bodySite;
    }

    /**
     * Get the encounter property: Encounter created as part of.
     *
     * @return the encounter value.
     */
    @Generated
    public FhirR4Reference getEncounter() {
        return this.encounter;
    }

    /**
     * Get the onsetDateTime property: Estimated or actual date, date-time, or age.
     *
     * @return the onsetDateTime value.
     */
    @Generated
    public String getOnsetDateTime() {
        return this.onsetDateTime;
    }

    /**
     * Get the onsetAge property: Estimated or actual date, date-time, or age.
     *
     * @return the onsetAge value.
     */
    @Generated
    public FhirR4Quantity getOnsetAge() {
        return this.onsetAge;
    }

    /**
     * Get the onsetPeriod property: Estimated or actual date, date-time, or age.
     *
     * @return the onsetPeriod value.
     */
    @Generated
    public FhirR4Period getOnsetPeriod() {
        return this.onsetPeriod;
    }

    /**
     * Get the onsetRange property: Estimated or actual date, date-time, or age.
     *
     * @return the onsetRange value.
     */
    @Generated
    public FhirR4Range getOnsetRange() {
        return this.onsetRange;
    }

    /**
     * Get the onsetString property: Estimated or actual date, date-time, or age.
     *
     * @return the onsetString value.
     */
    @Generated
    public String getOnsetString() {
        return this.onsetString;
    }

    /**
     * Get the abatementDateTime property: When in resolution/remission.
     *
     * @return the abatementDateTime value.
     */
    @Generated
    public String getAbatementDateTime() {
        return this.abatementDateTime;
    }

    /**
     * Get the abatementAge property: When in resolution/remission.
     *
     * @return the abatementAge value.
     */
    @Generated
    public FhirR4Quantity getAbatementAge() {
        return this.abatementAge;
    }

    /**
     * Get the abatementPeriod property: When in resolution/remission.
     *
     * @return the abatementPeriod value.
     */
    @Generated
    public FhirR4Period getAbatementPeriod() {
        return this.abatementPeriod;
    }

    /**
     * Get the abatementRange property: When in resolution/remission.
     *
     * @return the abatementRange value.
     */
    @Generated
    public FhirR4Range getAbatementRange() {
        return this.abatementRange;
    }

    /**
     * Get the abatementString property: When in resolution/remission.
     *
     * @return the abatementString value.
     */
    @Generated
    public String getAbatementString() {
        return this.abatementString;
    }

    /**
     * Get the recordedDate property: Date record was first recorded.
     *
     * @return the recordedDate value.
     */
    @Generated
    public String getRecordedDate() {
        return this.recordedDate;
    }

    /**
     * Get the stage property: stge/grade, usually assessed formally.
     *
     * @return the stage value.
     */
    @Generated
    public List<FhirR4ConditionStage> getStage() {
        return this.stage;
    }

    /**
     * Get the note property: Additional information about the Condition.
     *
     * @return the note value.
     */
    @Generated
    public List<FhirR4Annotation> getNote() {
        return this.note;
    }
}
