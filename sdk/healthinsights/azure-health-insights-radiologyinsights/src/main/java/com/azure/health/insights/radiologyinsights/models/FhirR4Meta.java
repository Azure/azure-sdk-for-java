// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.health.insights.radiologyinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Metadata about a resource
 * Based on [FHIR Meta](https://www.hl7.org/fhir/R4/resource.html#Meta).
 */
@Fluent
public final class FhirR4Meta implements JsonSerializable<FhirR4Meta> {

    /*
     * The version specific identifier, as it appears in the version portion of the URL. This value changes when the
     * resource is created, updated, or deleted.
     */
    @Generated
    private String versionId;

    /*
     * When the resource last changed - e.g. when the version changed.
     */
    @Generated
    private String lastUpdated;

    /*
     * A uri that identifies the source system of the resource. This provides a minimal amount of Provenance information
     * that can be used to track or differentiate the source of information in the resource. The source may identify
     * another FHIR server, document, message, database, etc.
     */
    @Generated
    private String source;

    /*
     * A list of profiles (references to [StructureDefinition](https://www.hl7.org/fhir/structuredefinition.html)
     * resources) that this resource claims to conform to. The URL is a reference to
     * [StructureDefinition.url](https://www.hl7.org/fhir/structuredefinition-definitions.html#StructureDefinition.url).
     */
    @Generated
    private List<String> profile;

    /*
     * Security labels applied to this resource. These tags connect specific resources to the overall security policy
     * and infrastructure.
     */
    @Generated
    private List<FhirR4Coding> security;

    /*
     * Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and
     * workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.
     */
    @Generated
    private List<FhirR4Coding> tag;

    /**
     * Creates an instance of FhirR4Meta class.
     */
    @Generated
    public FhirR4Meta() {
    }

    /**
     * Get the versionId property: The version specific identifier, as it appears in the version portion of the URL.
     * This value changes when the resource is created, updated, or deleted.
     *
     * @return the versionId value.
     */
    @Generated
    public String getVersionId() {
        return this.versionId;
    }

    /**
     * Set the versionId property: The version specific identifier, as it appears in the version portion of the URL.
     * This value changes when the resource is created, updated, or deleted.
     *
     * @param versionId the versionId value to set.
     * @return the FhirR4Meta object itself.
     */
    @Generated
    public FhirR4Meta setVersionId(String versionId) {
        this.versionId = versionId;
        return this;
    }

    /**
     * Get the lastUpdated property: When the resource last changed - e.g. when the version changed.
     *
     * @return the lastUpdated value.
     */
    @Generated
    public String getLastUpdated() {
        return this.lastUpdated;
    }

    /**
     * Set the lastUpdated property: When the resource last changed - e.g. when the version changed.
     *
     * @param lastUpdated the lastUpdated value to set.
     * @return the FhirR4Meta object itself.
     */
    @Generated
    public FhirR4Meta setLastUpdated(String lastUpdated) {
        this.lastUpdated = lastUpdated;
        return this;
    }

    /**
     * Get the source property: A uri that identifies the source system of the resource. This provides a minimal amount
     * of Provenance information that can be used to track or differentiate the source of information in the resource.
     * The source may identify another FHIR server, document, message, database, etc.
     *
     * @return the source value.
     */
    @Generated
    public String getSource() {
        return this.source;
    }

    /**
     * Set the source property: A uri that identifies the source system of the resource. This provides a minimal amount
     * of Provenance information that can be used to track or differentiate the source of information in the resource.
     * The source may identify another FHIR server, document, message, database, etc.
     *
     * @param source the source value to set.
     * @return the FhirR4Meta object itself.
     */
    @Generated
    public FhirR4Meta setSource(String source) {
        this.source = source;
        return this;
    }

    /**
     * Get the profile property: A list of profiles (references to
     * [StructureDefinition](https://www.hl7.org/fhir/structuredefinition.html) resources) that this resource claims to
     * conform to. The URL is a reference to
     * [StructureDefinition.url](https://www.hl7.org/fhir/structuredefinition-definitions.html#StructureDefinition.url).
     *
     * @return the profile value.
     */
    @Generated
    public List<String> getProfile() {
        return this.profile;
    }

    /**
     * Set the profile property: A list of profiles (references to
     * [StructureDefinition](https://www.hl7.org/fhir/structuredefinition.html) resources) that this resource claims to
     * conform to. The URL is a reference to
     * [StructureDefinition.url](https://www.hl7.org/fhir/structuredefinition-definitions.html#StructureDefinition.url).
     *
     * @param profile the profile value to set.
     * @return the FhirR4Meta object itself.
     */
    @Generated
    public FhirR4Meta setProfile(List<String> profile) {
        this.profile = profile;
        return this;
    }

    /**
     * Get the security property: Security labels applied to this resource. These tags connect specific resources to the
     * overall security policy and infrastructure.
     *
     * @return the security value.
     */
    @Generated
    public List<FhirR4Coding> getSecurity() {
        return this.security;
    }

    /**
     * Set the security property: Security labels applied to this resource. These tags connect specific resources to the
     * overall security policy and infrastructure.
     *
     * @param security the security value to set.
     * @return the FhirR4Meta object itself.
     */
    @Generated
    public FhirR4Meta setSecurity(List<FhirR4Coding> security) {
        this.security = security;
        return this;
    }

    /**
     * Get the tag property: Tags applied to this resource. Tags are intended to be used to identify and relate
     * resources to process and workflow, and applications are not required to consider the tags when interpreting the
     * meaning of a resource.
     *
     * @return the tag value.
     */
    @Generated
    public List<FhirR4Coding> getTag() {
        return this.tag;
    }

    /**
     * Set the tag property: Tags applied to this resource. Tags are intended to be used to identify and relate
     * resources to process and workflow, and applications are not required to consider the tags when interpreting the
     * meaning of a resource.
     *
     * @param tag the tag value to set.
     * @return the FhirR4Meta object itself.
     */
    @Generated
    public FhirR4Meta setTag(List<FhirR4Coding> tag) {
        this.tag = tag;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("versionId", this.versionId);
        jsonWriter.writeStringField("lastUpdated", this.lastUpdated);
        jsonWriter.writeStringField("source", this.source);
        jsonWriter.writeArrayField("profile", this.profile, (writer, element) -> writer.writeString(element));
        jsonWriter.writeArrayField("security", this.security, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeArrayField("tag", this.tag, (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of FhirR4Meta from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of FhirR4Meta if the JsonReader was pointing to an instance of it, or null if it was pointing
     * to JSON null.
     * @throws IOException If an error occurs while reading the FhirR4Meta.
     */
    @Generated
    public static FhirR4Meta fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            FhirR4Meta deserializedFhirR4Meta = new FhirR4Meta();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("versionId".equals(fieldName)) {
                    deserializedFhirR4Meta.versionId = reader.getString();
                } else if ("lastUpdated".equals(fieldName)) {
                    deserializedFhirR4Meta.lastUpdated = reader.getString();
                } else if ("source".equals(fieldName)) {
                    deserializedFhirR4Meta.source = reader.getString();
                } else if ("profile".equals(fieldName)) {
                    List<String> profile = reader.readArray(reader1 -> reader1.getString());
                    deserializedFhirR4Meta.profile = profile;
                } else if ("security".equals(fieldName)) {
                    List<FhirR4Coding> security = reader.readArray(reader1 -> FhirR4Coding.fromJson(reader1));
                    deserializedFhirR4Meta.security = security;
                } else if ("tag".equals(fieldName)) {
                    List<FhirR4Coding> tag = reader.readArray(reader1 -> FhirR4Coding.fromJson(reader1));
                    deserializedFhirR4Meta.tag = tag;
                } else {
                    reader.skipChildren();
                }
            }
            return deserializedFhirR4Meta;
        });
    }
}
