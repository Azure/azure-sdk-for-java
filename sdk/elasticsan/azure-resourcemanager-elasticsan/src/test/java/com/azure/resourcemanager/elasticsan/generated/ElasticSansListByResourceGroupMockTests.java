// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elasticsan.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.elasticsan.ElasticSanManager;
import com.azure.resourcemanager.elasticsan.models.AutoScalePolicyEnforcement;
import com.azure.resourcemanager.elasticsan.models.ElasticSan;
import com.azure.resourcemanager.elasticsan.models.PublicNetworkAccess;
import com.azure.resourcemanager.elasticsan.models.SkuName;
import com.azure.resourcemanager.elasticsan.models.SkuTier;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ElasticSansListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"sku\":{\"name\":\"Premium_LRS\",\"tier\":\"Premium\"},\"availabilityZones\":[\"iwubmwmbesldnk\",\"wtppjflcxogaoko\"],\"provisioningState\":\"Invalid\",\"baseSizeTiB\":7045736863404189107,\"extendedCapacitySizeTiB\":2991398819380628456,\"totalVolumeSizeGiB\":8469142941370576820,\"volumeGroupCount\":2221156921299108498,\"totalIops\":6982212660039446401,\"totalMBps\":224635698093358655,\"totalSizeTiB\":983283652300546434,\"privateEndpointConnections\":[{\"properties\":{\"provisioningState\":\"Invalid\",\"privateEndpoint\":{},\"privateLinkServiceConnectionState\":{},\"groupIds\":[\"r\"]},\"id\":\"dkwobdagx\",\"name\":\"ibqdxbxwakbogqx\",\"type\":\"dlkzgxhuri\"}],\"publicNetworkAccess\":\"Disabled\",\"autoScaleProperties\":{\"scaleUpProperties\":{\"unusedSizeTiB\":7074462336965086503,\"increaseCapacityUnitByTiB\":8962137380244628021,\"capacityUnitScaleUpLimitTiB\":348070213111481295,\"autoScalePolicyEnforcement\":\"None\"}}},\"location\":\"yyntwl\",\"tags\":{\"l\":\"tkoievseotgq\",\"xbmp\":\"tmuwlauwzi\"},\"id\":\"cjefuzmu\",\"name\":\"pbttdum\",\"type\":\"rp\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ElasticSanManager manager = ElasticSanManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<ElasticSan> response
            = manager.elasticSans().listByResourceGroup("hhszh", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("yyntwl", response.iterator().next().location());
        Assertions.assertEquals("tkoievseotgq", response.iterator().next().tags().get("l"));
        Assertions.assertEquals(SkuName.PREMIUM_LRS, response.iterator().next().sku().name());
        Assertions.assertEquals(SkuTier.PREMIUM, response.iterator().next().sku().tier());
        Assertions.assertEquals("iwubmwmbesldnk", response.iterator().next().availabilityZones().get(0));
        Assertions.assertEquals(7045736863404189107L, response.iterator().next().baseSizeTiB());
        Assertions.assertEquals(2991398819380628456L, response.iterator().next().extendedCapacitySizeTiB());
        Assertions.assertEquals(PublicNetworkAccess.DISABLED, response.iterator().next().publicNetworkAccess());
        Assertions.assertEquals(7074462336965086503L,
            response.iterator().next().autoScaleProperties().scaleUpProperties().unusedSizeTiB());
        Assertions.assertEquals(8962137380244628021L,
            response.iterator().next().autoScaleProperties().scaleUpProperties().increaseCapacityUnitByTiB());
        Assertions.assertEquals(348070213111481295L,
            response.iterator().next().autoScaleProperties().scaleUpProperties().capacityUnitScaleUpLimitTiB());
        Assertions.assertEquals(AutoScalePolicyEnforcement.NONE,
            response.iterator().next().autoScaleProperties().scaleUpProperties().autoScalePolicyEnforcement());
    }
}
