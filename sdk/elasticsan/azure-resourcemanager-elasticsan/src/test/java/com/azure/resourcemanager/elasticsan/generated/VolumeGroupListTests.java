// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elasticsan.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.elasticsan.fluent.models.VolumeGroupInner;
import com.azure.resourcemanager.elasticsan.models.EncryptionType;
import com.azure.resourcemanager.elasticsan.models.NetworkRuleSet;
import com.azure.resourcemanager.elasticsan.models.StorageTargetType;
import com.azure.resourcemanager.elasticsan.models.VirtualNetworkRule;
import com.azure.resourcemanager.elasticsan.models.VolumeGroupList;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class VolumeGroupListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VolumeGroupList model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"provisioningState\":\"Creating\",\"protocolType\":\"None\",\"encryption\":\"EncryptionAtRestWithPlatformKey\",\"networkAcls\":{\"virtualNetworkRules\":[{\"id\":\"sfcpkvxodpuozm\"},{\"id\":\"zydagfuaxbezyiuo\"},{\"id\":\"ktwh\"},{\"id\":\"dxwzywqsmbsurexi\"}]},\"privateEndpointConnections\":[{\"properties\":{\"privateLinkServiceConnectionState\":{}},\"id\":\"ocfs\",\"name\":\"ksymd\",\"type\":\"ys\"},{\"properties\":{\"privateLinkServiceConnectionState\":{}},\"id\":\"i\",\"name\":\"uxh\",\"type\":\"yudxorrqnbp\"},{\"properties\":{\"privateLinkServiceConnectionState\":{}},\"id\":\"zvyifqrvkdvj\",\"name\":\"llr\",\"type\":\"vvdfwatkpnpul\"},{\"properties\":{\"privateLinkServiceConnectionState\":{}},\"id\":\"xbczwtruwiqz\",\"name\":\"qjvsovmyokacs\",\"type\":\"kwlhzdo\"}]},\"id\":\"xjmflbvv\",\"name\":\"chrkcciwwzjuqk\",\"type\":\"rsa\"}],\"nextLink\":\"wkuofoskghsauu\"}")
                .toObject(VolumeGroupList.class);
        Assertions.assertEquals(StorageTargetType.NONE, model.value().get(0).protocolType());
        Assertions.assertEquals(EncryptionType.ENCRYPTION_AT_REST_WITH_PLATFORM_KEY, model.value().get(0).encryption());
        Assertions
            .assertEquals(
                "sfcpkvxodpuozm",
                model.value().get(0).networkAcls().virtualNetworkRules().get(0).virtualNetworkResourceId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VolumeGroupList model =
            new VolumeGroupList()
                .withValue(
                    Arrays
                        .asList(
                            new VolumeGroupInner()
                                .withProtocolType(StorageTargetType.NONE)
                                .withEncryption(EncryptionType.ENCRYPTION_AT_REST_WITH_PLATFORM_KEY)
                                .withNetworkAcls(
                                    new NetworkRuleSet()
                                        .withVirtualNetworkRules(
                                            Arrays
                                                .asList(
                                                    new VirtualNetworkRule()
                                                        .withVirtualNetworkResourceId("sfcpkvxodpuozm"),
                                                    new VirtualNetworkRule()
                                                        .withVirtualNetworkResourceId("zydagfuaxbezyiuo"),
                                                    new VirtualNetworkRule().withVirtualNetworkResourceId("ktwh"),
                                                    new VirtualNetworkRule()
                                                        .withVirtualNetworkResourceId("dxwzywqsmbsurexi"))))));
        model = BinaryData.fromObject(model).toObject(VolumeGroupList.class);
        Assertions.assertEquals(StorageTargetType.NONE, model.value().get(0).protocolType());
        Assertions.assertEquals(EncryptionType.ENCRYPTION_AT_REST_WITH_PLATFORM_KEY, model.value().get(0).encryption());
        Assertions
            .assertEquals(
                "sfcpkvxodpuozm",
                model.value().get(0).networkAcls().virtualNetworkRules().get(0).virtualNetworkResourceId());
    }
}
