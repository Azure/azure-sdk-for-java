// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elasticsan.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.elasticsan.models.Action;
import com.azure.resourcemanager.elasticsan.models.NetworkRuleSet;
import com.azure.resourcemanager.elasticsan.models.VirtualNetworkRule;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NetworkRuleSetTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkRuleSet model = BinaryData.fromString(
            "{\"virtualNetworkRules\":[{\"id\":\"rmjmwvvjektc\",\"action\":\"Allow\"},{\"id\":\"nhwlrsffrzpwvl\",\"action\":\"Allow\"},{\"id\":\"gbiqylihkaet\",\"action\":\"Allow\"},{\"id\":\"vfcivfsnkymuc\",\"action\":\"Allow\"}]}")
            .toObject(NetworkRuleSet.class);
        Assertions.assertEquals("rmjmwvvjektc", model.virtualNetworkRules().get(0).virtualNetworkResourceId());
        Assertions.assertEquals(Action.ALLOW, model.virtualNetworkRules().get(0).action());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkRuleSet model = new NetworkRuleSet().withVirtualNetworkRules(Arrays.asList(
            new VirtualNetworkRule().withVirtualNetworkResourceId("rmjmwvvjektc").withAction(Action.ALLOW),
            new VirtualNetworkRule().withVirtualNetworkResourceId("nhwlrsffrzpwvl").withAction(Action.ALLOW),
            new VirtualNetworkRule().withVirtualNetworkResourceId("gbiqylihkaet").withAction(Action.ALLOW),
            new VirtualNetworkRule().withVirtualNetworkResourceId("vfcivfsnkymuc").withAction(Action.ALLOW)));
        model = BinaryData.fromObject(model).toObject(NetworkRuleSet.class);
        Assertions.assertEquals("rmjmwvvjektc", model.virtualNetworkRules().get(0).virtualNetworkResourceId());
        Assertions.assertEquals(Action.ALLOW, model.virtualNetworkRules().get(0).action());
    }
}
