// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elasticsan.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.elasticsan.fluent.models.VolumeInner;
import com.azure.resourcemanager.elasticsan.models.ManagedByInfo;
import com.azure.resourcemanager.elasticsan.models.SourceCreationData;
import com.azure.resourcemanager.elasticsan.models.VolumeCreateOption;
import org.junit.jupiter.api.Assertions;

public final class VolumeInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VolumeInner model = BinaryData.fromString(
            "{\"properties\":{\"volumeId\":\"arbu\",\"creationData\":{\"createSource\":\"DiskSnapshot\",\"sourceId\":\"na\"},\"sizeGiB\":748849855651933727,\"storageTarget\":{\"targetIqn\":\"runmp\",\"targetPortalHostname\":\"tdbhrbnla\",\"targetPortalPort\":1373205517,\"provisioningState\":\"Canceled\",\"status\":\"Invalid\"},\"managedBy\":{\"resourceId\":\"henbtkcxywnytn\"},\"provisioningState\":\"Invalid\"},\"id\":\"lqidyby\",\"name\":\"czfc\",\"type\":\"haaxdbabphl\"}")
            .toObject(VolumeInner.class);
        Assertions.assertEquals(VolumeCreateOption.DISK_SNAPSHOT, model.creationData().createSource());
        Assertions.assertEquals("na", model.creationData().sourceId());
        Assertions.assertEquals(748849855651933727L, model.sizeGiB());
        Assertions.assertEquals("henbtkcxywnytn", model.managedBy().resourceId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VolumeInner model = new VolumeInner()
            .withCreationData(
                new SourceCreationData().withCreateSource(VolumeCreateOption.DISK_SNAPSHOT).withSourceId("na"))
            .withSizeGiB(748849855651933727L)
            .withManagedBy(new ManagedByInfo().withResourceId("henbtkcxywnytn"));
        model = BinaryData.fromObject(model).toObject(VolumeInner.class);
        Assertions.assertEquals(VolumeCreateOption.DISK_SNAPSHOT, model.creationData().createSource());
        Assertions.assertEquals("na", model.creationData().sourceId());
        Assertions.assertEquals(748849855651933727L, model.sizeGiB());
        Assertions.assertEquals("henbtkcxywnytn", model.managedBy().resourceId());
    }
}
