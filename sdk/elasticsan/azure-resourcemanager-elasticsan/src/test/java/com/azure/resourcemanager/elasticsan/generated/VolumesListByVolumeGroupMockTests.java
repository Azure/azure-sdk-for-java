// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.elasticsan.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.elasticsan.ElasticSanManager;
import com.azure.resourcemanager.elasticsan.models.Volume;
import com.azure.resourcemanager.elasticsan.models.VolumeCreateOption;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class VolumesListByVolumeGroupMockTests {
    @Test
    public void testListByVolumeGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"volumeId\":\"ncwsob\",\"creationData\":{\"createSource\":\"DiskSnapshot\",\"sourceId\":\"bnwdcfh\"},\"sizeGiB\":7976075497308020496,\"storageTarget\":{\"targetIqn\":\"fuvglsbjjca\",\"targetPortalHostname\":\"xbvtvudu\",\"targetPortalPort\":1320056895,\"provisioningState\":\"Updating\",\"status\":\"Invalid\"},\"managedBy\":{\"resourceId\":\"qtvcofudflvkgj\"},\"provisioningState\":\"Canceled\"},\"id\":\"knnqvsaznq\",\"name\":\"tor\",\"type\":\"dsg\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ElasticSanManager manager = ElasticSanManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<Volume> response = manager.volumes()
            .listByVolumeGroup("xxbuyq", "xzfe", "ztppriolxorjalto", com.azure.core.util.Context.NONE);

        Assertions.assertEquals(VolumeCreateOption.DISK_SNAPSHOT,
            response.iterator().next().creationData().createSource());
        Assertions.assertEquals("bnwdcfh", response.iterator().next().creationData().sourceId());
        Assertions.assertEquals(7976075497308020496L, response.iterator().next().sizeGiB());
        Assertions.assertEquals("qtvcofudflvkgj", response.iterator().next().managedBy().resourceId());
    }
}
