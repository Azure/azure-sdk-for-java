// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elasticsan.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.elasticsan.ElasticSanManager;
import com.azure.resourcemanager.elasticsan.models.AutoScalePolicyEnforcement;
import com.azure.resourcemanager.elasticsan.models.ElasticSan;
import com.azure.resourcemanager.elasticsan.models.PublicNetworkAccess;
import com.azure.resourcemanager.elasticsan.models.SkuName;
import com.azure.resourcemanager.elasticsan.models.SkuTier;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ElasticSansListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"sku\":{\"name\":\"Premium_ZRS\",\"tier\":\"Premium\"},\"availabilityZones\":[\"vaolpsslqlf\",\"mdnbbglzpswiy\"],\"provisioningState\":\"Deleted\",\"baseSizeTiB\":6855898880348717340,\"extendedCapacitySizeTiB\":2986988161676305406,\"totalVolumeSizeGiB\":3868778507667885775,\"volumeGroupCount\":5645412032437353957,\"totalIops\":5470431238820396350,\"totalMBps\":6861155578766594130,\"totalSizeTiB\":4489175795860033731,\"privateEndpointConnections\":[{\"properties\":{\"provisioningState\":\"Failed\",\"privateEndpoint\":{},\"privateLinkServiceConnectionState\":{},\"groupIds\":[\"zbn\"]},\"id\":\"lylpstdb\",\"name\":\"hxsrzdzucersc\",\"type\":\"ntnev\"},{\"properties\":{\"provisioningState\":\"Restoring\",\"privateEndpoint\":{},\"privateLinkServiceConnectionState\":{},\"groupIds\":[\"gtdsslswt\",\"weriofzpyqsem\",\"abnetshh\"]},\"id\":\"h\",\"name\":\"d\",\"type\":\"lvwiwubmwmbesl\"},{\"properties\":{\"provisioningState\":\"Deleting\",\"privateEndpoint\":{},\"privateLinkServiceConnectionState\":{},\"groupIds\":[\"pp\",\"flcxoga\"]},\"id\":\"onz\",\"name\":\"nsikvmkqzeqqkdl\",\"type\":\"fzxmhhvhgureodkw\"},{\"properties\":{\"provisioningState\":\"Failed\",\"privateEndpoint\":{},\"privateLinkServiceConnectionState\":{},\"groupIds\":[\"tibqdxbxwakb\",\"gqxndlkzgxhuripl\",\"podxunkb\",\"bxmubyynt\"]},\"id\":\"rbqtkoie\",\"name\":\"seotgqrllt\",\"type\":\"u\"}],\"publicNetworkAccess\":\"Disabled\",\"autoScaleProperties\":{\"scaleUpProperties\":{\"unusedSizeTiB\":3347544403521690336,\"increaseCapacityUnitByTiB\":2140041182301879771,\"capacityUnitScaleUpLimitTiB\":2676034725139393325,\"autoScalePolicyEnforcement\":\"Disabled\"}}},\"location\":\"u\",\"tags\":{\"morppxebmnzbtbh\":\"vpbttd\"},\"id\":\"pglkf\",\"name\":\"ohdneuel\",\"type\":\"phsdyhto\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ElasticSanManager manager = ElasticSanManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<ElasticSan> response = manager.elasticSans().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("u", response.iterator().next().location());
        Assertions.assertEquals("vpbttd", response.iterator().next().tags().get("morppxebmnzbtbh"));
        Assertions.assertEquals(SkuName.PREMIUM_ZRS, response.iterator().next().sku().name());
        Assertions.assertEquals(SkuTier.PREMIUM, response.iterator().next().sku().tier());
        Assertions.assertEquals("vaolpsslqlf", response.iterator().next().availabilityZones().get(0));
        Assertions.assertEquals(6855898880348717340L, response.iterator().next().baseSizeTiB());
        Assertions.assertEquals(2986988161676305406L, response.iterator().next().extendedCapacitySizeTiB());
        Assertions.assertEquals(PublicNetworkAccess.DISABLED, response.iterator().next().publicNetworkAccess());
        Assertions.assertEquals(3347544403521690336L,
            response.iterator().next().autoScaleProperties().scaleUpProperties().unusedSizeTiB());
        Assertions.assertEquals(2140041182301879771L,
            response.iterator().next().autoScaleProperties().scaleUpProperties().increaseCapacityUnitByTiB());
        Assertions.assertEquals(2676034725139393325L,
            response.iterator().next().autoScaleProperties().scaleUpProperties().capacityUnitScaleUpLimitTiB());
        Assertions.assertEquals(AutoScalePolicyEnforcement.DISABLED,
            response.iterator().next().autoScaleProperties().scaleUpProperties().autoScalePolicyEnforcement());
    }
}
