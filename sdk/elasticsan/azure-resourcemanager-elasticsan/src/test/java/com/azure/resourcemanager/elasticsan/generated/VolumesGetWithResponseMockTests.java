// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elasticsan.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.elasticsan.ElasticSanManager;
import com.azure.resourcemanager.elasticsan.models.Volume;
import com.azure.resourcemanager.elasticsan.models.VolumeCreateOption;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class VolumesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"volumeId\":\"dknnqvsazn\",\"creationData\":{\"createSource\":\"DiskRestorePoint\",\"sourceId\":\"udsgs\"},\"sizeGiB\":3267053393250008871,\"storageTarget\":{\"targetIqn\":\"c\",\"targetPortalHostname\":\"auwjuetaebu\",\"targetPortalPort\":1406520561,\"provisioningState\":\"Deleting\",\"status\":\"Updating\"},\"managedBy\":{\"resourceId\":\"zlxwabmqoefkifr\"},\"provisioningState\":\"Updating\"},\"id\":\"qujmqlgkf\",\"name\":\"tndoaongbjc\",\"type\":\"tujitcjedft\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ElasticSanManager manager = ElasticSanManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Volume response = manager.volumes()
            .getWithResponse("xqtvcofu", "f", "vkg", "u", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(VolumeCreateOption.DISK_RESTORE_POINT, response.creationData().createSource());
        Assertions.assertEquals("udsgs", response.creationData().sourceId());
        Assertions.assertEquals(3267053393250008871L, response.sizeGiB());
        Assertions.assertEquals("zlxwabmqoefkifr", response.managedBy().resourceId());
    }
}
