// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elasticsan.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.elasticsan.models.AutoScalePolicyEnforcement;
import com.azure.resourcemanager.elasticsan.models.AutoScaleProperties;
import com.azure.resourcemanager.elasticsan.models.ScaleUpProperties;
import org.junit.jupiter.api.Assertions;

public final class AutoScalePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AutoScaleProperties model = BinaryData.fromString(
            "{\"scaleUpProperties\":{\"unusedSizeTiB\":4781017836578252450,\"increaseCapacityUnitByTiB\":7954521876699219554,\"capacityUnitScaleUpLimitTiB\":4364322013700767845,\"autoScalePolicyEnforcement\":\"Disabled\"}}")
            .toObject(AutoScaleProperties.class);
        Assertions.assertEquals(4781017836578252450L, model.scaleUpProperties().unusedSizeTiB());
        Assertions.assertEquals(7954521876699219554L, model.scaleUpProperties().increaseCapacityUnitByTiB());
        Assertions.assertEquals(4364322013700767845L, model.scaleUpProperties().capacityUnitScaleUpLimitTiB());
        Assertions.assertEquals(AutoScalePolicyEnforcement.DISABLED,
            model.scaleUpProperties().autoScalePolicyEnforcement());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AutoScaleProperties model = new AutoScaleProperties()
            .withScaleUpProperties(new ScaleUpProperties().withUnusedSizeTiB(4781017836578252450L)
                .withIncreaseCapacityUnitByTiB(7954521876699219554L)
                .withCapacityUnitScaleUpLimitTiB(4364322013700767845L)
                .withAutoScalePolicyEnforcement(AutoScalePolicyEnforcement.DISABLED));
        model = BinaryData.fromObject(model).toObject(AutoScaleProperties.class);
        Assertions.assertEquals(4781017836578252450L, model.scaleUpProperties().unusedSizeTiB());
        Assertions.assertEquals(7954521876699219554L, model.scaleUpProperties().increaseCapacityUnitByTiB());
        Assertions.assertEquals(4364322013700767845L, model.scaleUpProperties().capacityUnitScaleUpLimitTiB());
        Assertions.assertEquals(AutoScalePolicyEnforcement.DISABLED,
            model.scaleUpProperties().autoScalePolicyEnforcement());
    }
}
