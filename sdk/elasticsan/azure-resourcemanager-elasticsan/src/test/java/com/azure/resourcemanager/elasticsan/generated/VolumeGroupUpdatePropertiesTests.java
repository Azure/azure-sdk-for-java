// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elasticsan.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.elasticsan.fluent.models.VolumeGroupUpdateProperties;
import com.azure.resourcemanager.elasticsan.models.Action;
import com.azure.resourcemanager.elasticsan.models.EncryptionType;
import com.azure.resourcemanager.elasticsan.models.NetworkRuleSet;
import com.azure.resourcemanager.elasticsan.models.StorageTargetType;
import com.azure.resourcemanager.elasticsan.models.VirtualNetworkRule;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class VolumeGroupUpdatePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VolumeGroupUpdateProperties model =
            BinaryData
                .fromString(
                    "{\"protocolType\":\"Iscsi\",\"encryption\":\"EncryptionAtRestWithPlatformKey\",\"networkAcls\":{\"virtualNetworkRules\":[{\"id\":\"cuh\",\"action\":\"Allow\",\"state\":\"provisioning\"},{\"id\":\"yqiklbbovplwzb\",\"action\":\"Allow\",\"state\":\"provisioning\"},{\"id\":\"gu\",\"action\":\"Allow\",\"state\":\"deprovisioning\"},{\"id\":\"fssxqukkfplg\",\"action\":\"Allow\",\"state\":\"failed\"}]}}")
                .toObject(VolumeGroupUpdateProperties.class);
        Assertions.assertEquals(StorageTargetType.ISCSI, model.protocolType());
        Assertions.assertEquals(EncryptionType.ENCRYPTION_AT_REST_WITH_PLATFORM_KEY, model.encryption());
        Assertions.assertEquals("cuh", model.networkAcls().virtualNetworkRules().get(0).virtualNetworkResourceId());
        Assertions.assertEquals(Action.ALLOW, model.networkAcls().virtualNetworkRules().get(0).action());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VolumeGroupUpdateProperties model =
            new VolumeGroupUpdateProperties()
                .withProtocolType(StorageTargetType.ISCSI)
                .withEncryption(EncryptionType.ENCRYPTION_AT_REST_WITH_PLATFORM_KEY)
                .withNetworkAcls(
                    new NetworkRuleSet()
                        .withVirtualNetworkRules(
                            Arrays
                                .asList(
                                    new VirtualNetworkRule()
                                        .withVirtualNetworkResourceId("cuh")
                                        .withAction(Action.ALLOW),
                                    new VirtualNetworkRule()
                                        .withVirtualNetworkResourceId("yqiklbbovplwzb")
                                        .withAction(Action.ALLOW),
                                    new VirtualNetworkRule()
                                        .withVirtualNetworkResourceId("gu")
                                        .withAction(Action.ALLOW),
                                    new VirtualNetworkRule()
                                        .withVirtualNetworkResourceId("fssxqukkfplg")
                                        .withAction(Action.ALLOW))));
        model = BinaryData.fromObject(model).toObject(VolumeGroupUpdateProperties.class);
        Assertions.assertEquals(StorageTargetType.ISCSI, model.protocolType());
        Assertions.assertEquals(EncryptionType.ENCRYPTION_AT_REST_WITH_PLATFORM_KEY, model.encryption());
        Assertions.assertEquals("cuh", model.networkAcls().virtualNetworkRules().get(0).virtualNetworkResourceId());
        Assertions.assertEquals(Action.ALLOW, model.networkAcls().virtualNetworkRules().get(0).action());
    }
}
