// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.elasticsan.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.elasticsan.ElasticSanManager;
import com.azure.resourcemanager.elasticsan.models.Snapshot;
import com.azure.resourcemanager.elasticsan.models.SnapshotCreationData;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class VolumeSnapshotsCreateMockTests {
    @Test
    public void testCreate() throws Exception {
        String responseStr
            = "{\"properties\":{\"creationData\":{\"sourceId\":\"dreaxh\"},\"provisioningState\":\"Succeeded\",\"sourceVolumeSizeGiB\":5118004194301536003,\"volumeName\":\"qahqkghtpwijn\"},\"id\":\"jsvfycxzbfvoowv\",\"name\":\"vmtgjqppy\",\"type\":\"s\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ElasticSanManager manager = ElasticSanManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Snapshot response = manager.volumeSnapshots()
            .define("uhbxvvy")
            .withExistingVolumegroup("nrvgoupmfiibfgg", "ioolvrwxkvtkkgll", "wjygvjayvblmhvk")
            .withCreationData(new SnapshotCreationData().withSourceId("gsopbyrqufegxu"))
            .create();

        Assertions.assertEquals("dreaxh", response.creationData().sourceId());
    }
}
