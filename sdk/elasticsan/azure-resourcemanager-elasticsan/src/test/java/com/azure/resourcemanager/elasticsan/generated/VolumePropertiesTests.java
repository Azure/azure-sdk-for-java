// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elasticsan.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.elasticsan.fluent.models.VolumeProperties;
import com.azure.resourcemanager.elasticsan.models.ManagedByInfo;
import com.azure.resourcemanager.elasticsan.models.SourceCreationData;
import com.azure.resourcemanager.elasticsan.models.VolumeCreateOption;
import org.junit.jupiter.api.Assertions;

public final class VolumePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VolumeProperties model = BinaryData.fromString(
            "{\"volumeId\":\"hrbnlankxmyskpbh\",\"creationData\":{\"createSource\":\"DiskSnapshot\",\"sourceId\":\"cxy\"},\"sizeGiB\":1651770050405323583,\"storageTarget\":{\"targetIqn\":\"rsyn\",\"targetPortalHostname\":\"idybyxczf\",\"targetPortalPort\":751467546,\"provisioningState\":\"Pending\",\"status\":\"Healthy\"},\"managedBy\":{\"resourceId\":\"b\"},\"provisioningState\":\"Pending\"}")
            .toObject(VolumeProperties.class);
        Assertions.assertEquals(VolumeCreateOption.DISK_SNAPSHOT, model.creationData().createSource());
        Assertions.assertEquals("cxy", model.creationData().sourceId());
        Assertions.assertEquals(1651770050405323583L, model.sizeGiB());
        Assertions.assertEquals("b", model.managedBy().resourceId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VolumeProperties model = new VolumeProperties()
            .withCreationData(
                new SourceCreationData().withCreateSource(VolumeCreateOption.DISK_SNAPSHOT).withSourceId("cxy"))
            .withSizeGiB(1651770050405323583L)
            .withManagedBy(new ManagedByInfo().withResourceId("b"));
        model = BinaryData.fromObject(model).toObject(VolumeProperties.class);
        Assertions.assertEquals(VolumeCreateOption.DISK_SNAPSHOT, model.creationData().createSource());
        Assertions.assertEquals("cxy", model.creationData().sourceId());
        Assertions.assertEquals(1651770050405323583L, model.sizeGiB());
        Assertions.assertEquals("b", model.managedBy().resourceId());
    }
}
