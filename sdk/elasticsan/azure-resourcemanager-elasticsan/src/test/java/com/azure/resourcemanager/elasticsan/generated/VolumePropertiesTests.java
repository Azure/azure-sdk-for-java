// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elasticsan.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.elasticsan.fluent.models.VolumeProperties;
import com.azure.resourcemanager.elasticsan.models.SourceCreationData;
import com.azure.resourcemanager.elasticsan.models.VolumeCreateOption;
import org.junit.jupiter.api.Assertions;

public final class VolumePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VolumeProperties model =
            BinaryData
                .fromString(
                    "{\"volumeId\":\"xuutkncwscwsv\",\"creationData\":{\"createSource\":\"None\",\"sourceUri\":\"g\"},\"sizeGiB\":8759230338879353208,\"storageTarget\":{\"targetIqn\":\"qsx\",\"targetPortalHostname\":\"micykvceoveilo\",\"targetPortalPort\":660644635,\"provisioningState\":\"Creating\",\"status\":\"Unknown\"}}")
                .toObject(VolumeProperties.class);
        Assertions.assertEquals(VolumeCreateOption.NONE, model.creationData().createSource());
        Assertions.assertEquals("g", model.creationData().sourceUri());
        Assertions.assertEquals(8759230338879353208L, model.sizeGiB());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VolumeProperties model =
            new VolumeProperties()
                .withCreationData(new SourceCreationData().withCreateSource(VolumeCreateOption.NONE).withSourceUri("g"))
                .withSizeGiB(8759230338879353208L);
        model = BinaryData.fromObject(model).toObject(VolumeProperties.class);
        Assertions.assertEquals(VolumeCreateOption.NONE, model.creationData().createSource());
        Assertions.assertEquals("g", model.creationData().sourceUri());
        Assertions.assertEquals(8759230338879353208L, model.sizeGiB());
    }
}
