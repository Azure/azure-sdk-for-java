// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elasticsan.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.elasticsan.models.ElasticSanUpdate;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ElasticSanUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ElasticSanUpdate model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"baseSizeTiB\":4267767116121181039,\"extendedCapacitySizeTiB\":5437486908155623563},\"tags\":{\"kqsleyyvxy\":\"zrkgqhcjrefovg\",\"cr\":\"jpkcattpng\",\"ajvnysounqe\":\"czsqpjhvm\",\"oaeupfhyhltrpmo\":\"a\"}}")
                .toObject(ElasticSanUpdate.class);
        Assertions.assertEquals("zrkgqhcjrefovg", model.tags().get("kqsleyyvxy"));
        Assertions.assertEquals(4267767116121181039L, model.baseSizeTiB());
        Assertions.assertEquals(5437486908155623563L, model.extendedCapacitySizeTiB());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ElasticSanUpdate model =
            new ElasticSanUpdate()
                .withTags(
                    mapOf(
                        "kqsleyyvxy",
                        "zrkgqhcjrefovg",
                        "cr",
                        "jpkcattpng",
                        "ajvnysounqe",
                        "czsqpjhvm",
                        "oaeupfhyhltrpmo",
                        "a"))
                .withBaseSizeTiB(4267767116121181039L)
                .withExtendedCapacitySizeTiB(5437486908155623563L);
        model = BinaryData.fromObject(model).toObject(ElasticSanUpdate.class);
        Assertions.assertEquals("zrkgqhcjrefovg", model.tags().get("kqsleyyvxy"));
        Assertions.assertEquals(4267767116121181039L, model.baseSizeTiB());
        Assertions.assertEquals(5437486908155623563L, model.extendedCapacitySizeTiB());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
