// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elasticsan.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;

/** San scalability target. */
@Immutable
public final class SanTierInfo {
    /*
     * Maximum San account capacity in TiB
     */
    @JsonProperty(value = "maxSizeTiB", access = JsonProperty.Access.WRITE_ONLY)
    private Long maxSizeTiB;

    /*
     * Minimum San account capacity in TiB
     */
    @JsonProperty(value = "minSizeTiB", access = JsonProperty.Access.WRITE_ONLY)
    private Long minSizeTiB;

    /*
     * Increment the San capacity in TiB
     */
    @JsonProperty(value = "minIncrementSizeTiB", access = JsonProperty.Access.WRITE_ONLY)
    private Long minIncrementSizeTiB;

    /*
     * Maximum IOPS per BaseTiB
     */
    @JsonProperty(value = "iopsPerBaseTiB", access = JsonProperty.Access.WRITE_ONLY)
    private Long iopsPerBaseTiB;

    /*
     * Maximum MBps per BaseTiB
     */
    @JsonProperty(value = "mbpsPerBaseTiB", access = JsonProperty.Access.WRITE_ONLY)
    private Long mbpsPerBaseTiB;

    /*
     * Maximum IOPS
     */
    @JsonProperty(value = "maxIops", access = JsonProperty.Access.WRITE_ONLY)
    private Long maxIops;

    /*
     * Maximum MBps
     */
    @JsonProperty(value = "maxMBps", access = JsonProperty.Access.WRITE_ONLY)
    private Long maxMBps;

    /*
     * Maximum number of volume groups per San account
     */
    @JsonProperty(value = "maxVolumeGroupCount", access = JsonProperty.Access.WRITE_ONLY)
    private Long maxVolumeGroupCount;

    /**
     * Get the maxSizeTiB property: Maximum San account capacity in TiB.
     *
     * @return the maxSizeTiB value.
     */
    public Long maxSizeTiB() {
        return this.maxSizeTiB;
    }

    /**
     * Get the minSizeTiB property: Minimum San account capacity in TiB.
     *
     * @return the minSizeTiB value.
     */
    public Long minSizeTiB() {
        return this.minSizeTiB;
    }

    /**
     * Get the minIncrementSizeTiB property: Increment the San capacity in TiB.
     *
     * @return the minIncrementSizeTiB value.
     */
    public Long minIncrementSizeTiB() {
        return this.minIncrementSizeTiB;
    }

    /**
     * Get the iopsPerBaseTiB property: Maximum IOPS per BaseTiB.
     *
     * @return the iopsPerBaseTiB value.
     */
    public Long iopsPerBaseTiB() {
        return this.iopsPerBaseTiB;
    }

    /**
     * Get the mbpsPerBaseTiB property: Maximum MBps per BaseTiB.
     *
     * @return the mbpsPerBaseTiB value.
     */
    public Long mbpsPerBaseTiB() {
        return this.mbpsPerBaseTiB;
    }

    /**
     * Get the maxIops property: Maximum IOPS.
     *
     * @return the maxIops value.
     */
    public Long maxIops() {
        return this.maxIops;
    }

    /**
     * Get the maxMBps property: Maximum MBps.
     *
     * @return the maxMBps value.
     */
    public Long maxMBps() {
        return this.maxMBps;
    }

    /**
     * Get the maxVolumeGroupCount property: Maximum number of volume groups per San account.
     *
     * @return the maxVolumeGroupCount value.
     */
    public Long maxVolumeGroupCount() {
        return this.maxVolumeGroupCount;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
