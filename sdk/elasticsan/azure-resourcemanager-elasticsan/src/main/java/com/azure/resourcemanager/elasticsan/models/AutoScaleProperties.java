// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elasticsan.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The auto scale settings on Elastic San Appliance.
 */
@Fluent
public final class AutoScaleProperties implements JsonSerializable<AutoScaleProperties> {
    /*
     * Scale up settings on Elastic San Appliance.
     */
    private ScaleUpProperties scaleUpProperties;

    /**
     * Creates an instance of AutoScaleProperties class.
     */
    public AutoScaleProperties() {
    }

    /**
     * Get the scaleUpProperties property: Scale up settings on Elastic San Appliance.
     * 
     * @return the scaleUpProperties value.
     */
    public ScaleUpProperties scaleUpProperties() {
        return this.scaleUpProperties;
    }

    /**
     * Set the scaleUpProperties property: Scale up settings on Elastic San Appliance.
     * 
     * @param scaleUpProperties the scaleUpProperties value to set.
     * @return the AutoScaleProperties object itself.
     */
    public AutoScaleProperties withScaleUpProperties(ScaleUpProperties scaleUpProperties) {
        this.scaleUpProperties = scaleUpProperties;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (scaleUpProperties() != null) {
            scaleUpProperties().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("scaleUpProperties", this.scaleUpProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AutoScaleProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AutoScaleProperties if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the AutoScaleProperties.
     */
    public static AutoScaleProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AutoScaleProperties deserializedAutoScaleProperties = new AutoScaleProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("scaleUpProperties".equals(fieldName)) {
                    deserializedAutoScaleProperties.scaleUpProperties = ScaleUpProperties.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAutoScaleProperties;
        });
    }
}
