// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elasticsan.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Data used when creating a volume snapshot.
 */
@Fluent
public final class SnapshotCreationData {
    /*
     * Fully qualified resource ID of the volume. E.g.
     * "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumegroups/{volumeGroupName}/volumes/{volumeName}"
     */
    @JsonProperty(value = "sourceId", required = true)
    private String sourceId;

    /**
     * Creates an instance of SnapshotCreationData class.
     */
    public SnapshotCreationData() {
    }

    /**
     * Get the sourceId property: Fully qualified resource ID of the volume. E.g.
     * "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumegroups/{volumeGroupName}/volumes/{volumeName}".
     * 
     * @return the sourceId value.
     */
    public String sourceId() {
        return this.sourceId;
    }

    /**
     * Set the sourceId property: Fully qualified resource ID of the volume. E.g.
     * "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumegroups/{volumeGroupName}/volumes/{volumeName}".
     * 
     * @param sourceId the sourceId value to set.
     * @return the SnapshotCreationData object itself.
     */
    public SnapshotCreationData withSourceId(String sourceId) {
        this.sourceId = sourceId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (sourceId() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property sourceId in model SnapshotCreationData"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(SnapshotCreationData.class);
}
