// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elasticsan.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.elasticsan.fluent.models.ElasticSanUpdateProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** Response for ElasticSan update request. */
@Fluent
public final class ElasticSanUpdate {
    /*
     * Properties of ElasticSan.
     */
    @JsonProperty(value = "properties")
    private ElasticSanUpdateProperties innerProperties;

    /*
     * Update tags
     */
    @JsonProperty(value = "tags")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> tags;

    /** Creates an instance of ElasticSanUpdate class. */
    public ElasticSanUpdate() {
    }

    /**
     * Get the innerProperties property: Properties of ElasticSan.
     *
     * @return the innerProperties value.
     */
    private ElasticSanUpdateProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the tags property: Update tags.
     *
     * @return the tags value.
     */
    public Map<String, String> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: Update tags.
     *
     * @param tags the tags value to set.
     * @return the ElasticSanUpdate object itself.
     */
    public ElasticSanUpdate withTags(Map<String, String> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get the baseSizeTiB property: Base size of the Elastic San appliance in TiB.
     *
     * @return the baseSizeTiB value.
     */
    public Long baseSizeTiB() {
        return this.innerProperties() == null ? null : this.innerProperties().baseSizeTiB();
    }

    /**
     * Set the baseSizeTiB property: Base size of the Elastic San appliance in TiB.
     *
     * @param baseSizeTiB the baseSizeTiB value to set.
     * @return the ElasticSanUpdate object itself.
     */
    public ElasticSanUpdate withBaseSizeTiB(Long baseSizeTiB) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ElasticSanUpdateProperties();
        }
        this.innerProperties().withBaseSizeTiB(baseSizeTiB);
        return this;
    }

    /**
     * Get the extendedCapacitySizeTiB property: Extended size of the Elastic San appliance in TiB.
     *
     * @return the extendedCapacitySizeTiB value.
     */
    public Long extendedCapacitySizeTiB() {
        return this.innerProperties() == null ? null : this.innerProperties().extendedCapacitySizeTiB();
    }

    /**
     * Set the extendedCapacitySizeTiB property: Extended size of the Elastic San appliance in TiB.
     *
     * @param extendedCapacitySizeTiB the extendedCapacitySizeTiB value to set.
     * @return the ElasticSanUpdate object itself.
     */
    public ElasticSanUpdate withExtendedCapacitySizeTiB(Long extendedCapacitySizeTiB) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ElasticSanUpdateProperties();
        }
        this.innerProperties().withExtendedCapacitySizeTiB(extendedCapacitySizeTiB);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
