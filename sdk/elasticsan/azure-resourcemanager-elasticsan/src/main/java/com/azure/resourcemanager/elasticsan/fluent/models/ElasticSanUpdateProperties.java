// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elasticsan.fluent.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Elastic San update properties. */
@Fluent
public final class ElasticSanUpdateProperties {
    /*
     * Base size of the Elastic San appliance in TiB.
     */
    @JsonProperty(value = "baseSizeTiB", required = true)
    private long baseSizeTiB;

    /*
     * Extended size of the Elastic San appliance in TiB.
     */
    @JsonProperty(value = "extendedCapacitySizeTiB", required = true)
    private long extendedCapacitySizeTiB;

    /**
     * Get the baseSizeTiB property: Base size of the Elastic San appliance in TiB.
     *
     * @return the baseSizeTiB value.
     */
    public long baseSizeTiB() {
        return this.baseSizeTiB;
    }

    /**
     * Set the baseSizeTiB property: Base size of the Elastic San appliance in TiB.
     *
     * @param baseSizeTiB the baseSizeTiB value to set.
     * @return the ElasticSanUpdateProperties object itself.
     */
    public ElasticSanUpdateProperties withBaseSizeTiB(long baseSizeTiB) {
        this.baseSizeTiB = baseSizeTiB;
        return this;
    }

    /**
     * Get the extendedCapacitySizeTiB property: Extended size of the Elastic San appliance in TiB.
     *
     * @return the extendedCapacitySizeTiB value.
     */
    public long extendedCapacitySizeTiB() {
        return this.extendedCapacitySizeTiB;
    }

    /**
     * Set the extendedCapacitySizeTiB property: Extended size of the Elastic San appliance in TiB.
     *
     * @param extendedCapacitySizeTiB the extendedCapacitySizeTiB value to set.
     * @return the ElasticSanUpdateProperties object itself.
     */
    public ElasticSanUpdateProperties withExtendedCapacitySizeTiB(long extendedCapacitySizeTiB) {
        this.extendedCapacitySizeTiB = extendedCapacitySizeTiB;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
