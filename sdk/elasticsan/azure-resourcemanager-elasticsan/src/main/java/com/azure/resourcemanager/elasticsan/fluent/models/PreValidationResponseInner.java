// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.elasticsan.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * response object for pre validation api.
 */
@Immutable
public final class PreValidationResponseInner implements JsonSerializable<PreValidationResponseInner> {
    /*
     * a status value indicating success or failure of validation
     */
    private String validationStatus;

    /**
     * Creates an instance of PreValidationResponseInner class.
     */
    private PreValidationResponseInner() {
    }

    /**
     * Get the validationStatus property: a status value indicating success or failure of validation.
     * 
     * @return the validationStatus value.
     */
    public String validationStatus() {
        return this.validationStatus;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("validationStatus", this.validationStatus);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of PreValidationResponseInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of PreValidationResponseInner if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the PreValidationResponseInner.
     */
    public static PreValidationResponseInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            PreValidationResponseInner deserializedPreValidationResponseInner = new PreValidationResponseInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("validationStatus".equals(fieldName)) {
                    deserializedPreValidationResponseInner.validationStatus = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedPreValidationResponseInner;
        });
    }
}
