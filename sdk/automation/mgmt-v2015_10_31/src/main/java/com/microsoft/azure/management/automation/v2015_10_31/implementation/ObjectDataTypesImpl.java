/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * abc
 */

package com.microsoft.azure.management.automation.v2015_10_31.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.automation.v2015_10_31.ObjectDataTypes;
import rx.Observable;
import rx.functions.Func1;
import java.util.List;
import com.microsoft.azure.management.automation.v2015_10_31.ObjectDataTypeModuleAutomationAccountTypeField;

class ObjectDataTypesImpl extends WrapperImpl<ObjectDataTypesInner> implements ObjectDataTypes {
    private final AutomationManager manager;

    ObjectDataTypesImpl(AutomationManager manager) {
        super(manager.inner().objectDataTypes());
        this.manager = manager;
    }

    public AutomationManager manager() {
        return this.manager;
    }

    private ObjectDataTypeModuleAutomationAccountTypeFieldImpl wrapObjectDataTypeModuleAutomationAccountTypeFieldModel(TypeFieldInner inner) {
        return  new ObjectDataTypeModuleAutomationAccountTypeFieldImpl(inner, manager());
    }

    @Override
    public Observable<ObjectDataTypeModuleAutomationAccountTypeField> listFieldsByModuleAndTypeAsync(String resourceGroupName, String automationAccountName, String moduleName, String typeName) {
        ObjectDataTypesInner client = this.inner();
        return client.listFieldsByModuleAndTypeAsync(resourceGroupName, automationAccountName, moduleName, typeName)
        .flatMap(new Func1<List<TypeFieldInner>, Observable<TypeFieldInner>>() {
            @Override
            public Observable<TypeFieldInner> call(List<TypeFieldInner> innerList) {
                return Observable.from(innerList);
            }
        })
        .map(new Func1<TypeFieldInner, ObjectDataTypeModuleAutomationAccountTypeField>() {
            @Override
            public ObjectDataTypeModuleAutomationAccountTypeField call(TypeFieldInner inner) {
                return wrapObjectDataTypeModuleAutomationAccountTypeFieldModel(inner);
            }
        });
    }

    @Override
    public Observable<ObjectDataTypeModuleAutomationAccountTypeField> listFieldsByTypeAsync(String resourceGroupName, String automationAccountName, String typeName) {
        ObjectDataTypesInner client = this.inner();
        return client.listFieldsByTypeAsync(resourceGroupName, automationAccountName, typeName)
        .flatMap(new Func1<List<TypeFieldInner>, Observable<TypeFieldInner>>() {
            @Override
            public Observable<TypeFieldInner> call(List<TypeFieldInner> innerList) {
                return Observable.from(innerList);
            }
        })
        .map(new Func1<TypeFieldInner, ObjectDataTypeModuleAutomationAccountTypeField>() {
            @Override
            public ObjectDataTypeModuleAutomationAccountTypeField call(TypeFieldInner inner) {
                return new ObjectDataTypeModuleAutomationAccountTypeFieldImpl(inner, manager());
            }
        });
    }

}
