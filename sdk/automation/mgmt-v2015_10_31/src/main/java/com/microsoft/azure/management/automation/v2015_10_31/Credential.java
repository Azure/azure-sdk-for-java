/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.automation.v2015_10_31;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.automation.v2015_10_31.implementation.CredentialInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.automation.v2015_10_31.implementation.AutomationManager;
import org.joda.time.DateTime;

/**
 * Type representing Credential.
 */
public interface Credential extends HasInner<CredentialInner>, Indexable, Refreshable<Credential>, Updatable<Credential.Update>, HasManager<AutomationManager> {
    /**
     * @return the creationTime value.
     */
    DateTime creationTime();

    /**
     * @return the description value.
     */
    String description();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the lastModifiedTime value.
     */
    DateTime lastModifiedTime();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the type value.
     */
    String type();

    /**
     * @return the userName value.
     */
    String userName();

    /**
     * The entirety of the Credential definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithAutomationAccount, DefinitionStages.WithName, DefinitionStages.WithPassword, DefinitionStages.WithUserName, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of Credential definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a Credential definition.
         */
        interface Blank extends WithAutomationAccount {
        }

        /**
         * The stage of the credential definition allowing to specify AutomationAccount.
         */
        interface WithAutomationAccount {
           /**
            * Specifies resourceGroupName, automationAccountName.
            */
            WithName withExistingAutomationAccount(String resourceGroupName, String automationAccountName);
        }

        /**
         * The stage of the credential definition allowing to specify Name.
         */
        interface WithName {
           /**
            * Specifies name.
            */
            WithPassword withName(String name);
        }

        /**
         * The stage of the credential definition allowing to specify Password.
         */
        interface WithPassword {
           /**
            * Specifies password.
            */
            WithUserName withPassword(String password);
        }

        /**
         * The stage of the credential definition allowing to specify UserName.
         */
        interface WithUserName {
           /**
            * Specifies userName.
            */
            WithCreate withUserName(String userName);
        }

        /**
         * The stage of the credential definition allowing to specify Description.
         */
        interface WithDescription {
            /**
             * Specifies description.
             */
            WithCreate withDescription(String description);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<Credential>, DefinitionStages.WithDescription {
        }
    }
    /**
     * The template for a Credential update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<Credential>, UpdateStages.WithDescription, UpdateStages.WithName, UpdateStages.WithPassword, UpdateStages.WithUserName {
    }

    /**
     * Grouping of Credential update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the credential update allowing to specify Description.
         */
        interface WithDescription {
            /**
             * Specifies description.
             */
            Update withDescription(String description);
        }

        /**
         * The stage of the credential update allowing to specify Name.
         */
        interface WithName {
            /**
             * Specifies name.
             */
            Update withName(String name);
        }

        /**
         * The stage of the credential update allowing to specify Password.
         */
        interface WithPassword {
            /**
             * Specifies password.
             */
            Update withPassword(String password);
        }

        /**
         * The stage of the credential update allowing to specify UserName.
         */
        interface WithUserName {
            /**
             * Specifies userName.
             */
            Update withUserName(String userName);
        }

    }
}
