/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.automation.v2015_10_31.implementation;

import com.microsoft.azure.arm.resources.models.implementation.GroupableResourceCoreImpl;
import com.microsoft.azure.management.automation.v2015_10_31.AutomationAccount;
import rx.Observable;
import com.microsoft.azure.management.automation.v2015_10_31.AutomationAccountUpdateParameters;
import com.microsoft.azure.management.automation.v2015_10_31.AutomationAccountCreateOrUpdateParameters;
import org.joda.time.DateTime;
import com.microsoft.azure.management.automation.v2015_10_31.Sku;
import com.microsoft.azure.management.automation.v2015_10_31.AutomationAccountState;
import rx.functions.Func1;

class AutomationAccountImpl extends GroupableResourceCoreImpl<AutomationAccount, AutomationAccountInner, AutomationAccountImpl, AutomationManager> implements AutomationAccount, AutomationAccount.Definition, AutomationAccount.Update {
    private AutomationAccountCreateOrUpdateParameters createParameter;
    private AutomationAccountUpdateParameters updateParameter;
    AutomationAccountImpl(String name, AutomationAccountInner inner, AutomationManager manager) {
        super(name, inner, manager);
        this.createParameter = new AutomationAccountCreateOrUpdateParameters();
        this.updateParameter = new AutomationAccountUpdateParameters();
    }

    @Override
    public Observable<AutomationAccount> createResourceAsync() {
        AutomationAccountsInner client = this.manager().inner().automationAccounts();
        this.createParameter.withLocation(inner().location());
        this.createParameter.withTags(inner().getTags());
        return client.createOrUpdateAsync(this.resourceGroupName(), this.name(), this.createParameter)
            .map(new Func1<AutomationAccountInner, AutomationAccountInner>() {
               @Override
               public AutomationAccountInner call(AutomationAccountInner resource) {
                   resetCreateUpdateParameters();
                   return resource;
               }
            })
            .map(innerToFluentMap(this));
    }

    @Override
    public Observable<AutomationAccount> updateResourceAsync() {
        AutomationAccountsInner client = this.manager().inner().automationAccounts();
        return client.updateAsync(this.resourceGroupName(), this.name(), this.updateParameter)
            .map(new Func1<AutomationAccountInner, AutomationAccountInner>() {
               @Override
               public AutomationAccountInner call(AutomationAccountInner resource) {
                   resetCreateUpdateParameters();
                   return resource;
               }
            })
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<AutomationAccountInner> getInnerAsync() {
        AutomationAccountsInner client = this.manager().inner().automationAccounts();
        return client.getByResourceGroupAsync(this.resourceGroupName(), this.name());
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }

    private void resetCreateUpdateParameters() {
        this.createParameter = new AutomationAccountCreateOrUpdateParameters();
        this.updateParameter = new AutomationAccountUpdateParameters();
    }

    @Override
    public DateTime creationTime() {
        return this.inner().creationTime();
    }

    @Override
    public String description() {
        return this.inner().description();
    }

    @Override
    public String etag() {
        return this.inner().etag();
    }

    @Override
    public String lastModifiedBy() {
        return this.inner().lastModifiedBy();
    }

    @Override
    public DateTime lastModifiedTime() {
        return this.inner().lastModifiedTime();
    }

    @Override
    public Sku sku() {
        return this.inner().sku();
    }

    @Override
    public AutomationAccountState state() {
        return this.inner().state();
    }

    @Override
    public AutomationAccountImpl withSku(Sku sku) {
        if (isInCreateMode()) {
            this.createParameter.withSku(sku);
        } else {
            this.updateParameter.withSku(sku);
        }
        return this;
    }

}
