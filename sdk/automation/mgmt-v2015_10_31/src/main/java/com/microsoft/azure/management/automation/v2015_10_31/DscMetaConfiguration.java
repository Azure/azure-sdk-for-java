/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.automation.v2015_10_31;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Definition of the DSC Meta Configuration.
 */
public class DscMetaConfiguration {
    /**
     * Gets or sets the ConfigurationModeFrequencyMins value of the meta
     * configuration.
     */
    @JsonProperty(value = "configurationModeFrequencyMins")
    private Integer configurationModeFrequencyMins;

    /**
     * Gets or sets the RebootNodeIfNeeded value of the meta configuration.
     */
    @JsonProperty(value = "rebootNodeIfNeeded")
    private Boolean rebootNodeIfNeeded;

    /**
     * Gets or sets the ConfigurationMode value of the meta configuration.
     */
    @JsonProperty(value = "configurationMode")
    private String configurationMode;

    /**
     * Gets or sets the ActionAfterReboot value of the meta configuration.
     */
    @JsonProperty(value = "actionAfterReboot")
    private String actionAfterReboot;

    /**
     * Gets or sets the CertificateId value of the meta configuration.
     */
    @JsonProperty(value = "certificateId")
    private String certificateId;

    /**
     * Gets or sets the RefreshFrequencyMins value of the meta configuration.
     */
    @JsonProperty(value = "refreshFrequencyMins")
    private Integer refreshFrequencyMins;

    /**
     * Gets or sets the AllowModuleOverwrite value of the meta configuration.
     */
    @JsonProperty(value = "allowModuleOverwrite")
    private Boolean allowModuleOverwrite;

    /**
     * Get gets or sets the ConfigurationModeFrequencyMins value of the meta configuration.
     *
     * @return the configurationModeFrequencyMins value
     */
    public Integer configurationModeFrequencyMins() {
        return this.configurationModeFrequencyMins;
    }

    /**
     * Set gets or sets the ConfigurationModeFrequencyMins value of the meta configuration.
     *
     * @param configurationModeFrequencyMins the configurationModeFrequencyMins value to set
     * @return the DscMetaConfiguration object itself.
     */
    public DscMetaConfiguration withConfigurationModeFrequencyMins(Integer configurationModeFrequencyMins) {
        this.configurationModeFrequencyMins = configurationModeFrequencyMins;
        return this;
    }

    /**
     * Get gets or sets the RebootNodeIfNeeded value of the meta configuration.
     *
     * @return the rebootNodeIfNeeded value
     */
    public Boolean rebootNodeIfNeeded() {
        return this.rebootNodeIfNeeded;
    }

    /**
     * Set gets or sets the RebootNodeIfNeeded value of the meta configuration.
     *
     * @param rebootNodeIfNeeded the rebootNodeIfNeeded value to set
     * @return the DscMetaConfiguration object itself.
     */
    public DscMetaConfiguration withRebootNodeIfNeeded(Boolean rebootNodeIfNeeded) {
        this.rebootNodeIfNeeded = rebootNodeIfNeeded;
        return this;
    }

    /**
     * Get gets or sets the ConfigurationMode value of the meta configuration.
     *
     * @return the configurationMode value
     */
    public String configurationMode() {
        return this.configurationMode;
    }

    /**
     * Set gets or sets the ConfigurationMode value of the meta configuration.
     *
     * @param configurationMode the configurationMode value to set
     * @return the DscMetaConfiguration object itself.
     */
    public DscMetaConfiguration withConfigurationMode(String configurationMode) {
        this.configurationMode = configurationMode;
        return this;
    }

    /**
     * Get gets or sets the ActionAfterReboot value of the meta configuration.
     *
     * @return the actionAfterReboot value
     */
    public String actionAfterReboot() {
        return this.actionAfterReboot;
    }

    /**
     * Set gets or sets the ActionAfterReboot value of the meta configuration.
     *
     * @param actionAfterReboot the actionAfterReboot value to set
     * @return the DscMetaConfiguration object itself.
     */
    public DscMetaConfiguration withActionAfterReboot(String actionAfterReboot) {
        this.actionAfterReboot = actionAfterReboot;
        return this;
    }

    /**
     * Get gets or sets the CertificateId value of the meta configuration.
     *
     * @return the certificateId value
     */
    public String certificateId() {
        return this.certificateId;
    }

    /**
     * Set gets or sets the CertificateId value of the meta configuration.
     *
     * @param certificateId the certificateId value to set
     * @return the DscMetaConfiguration object itself.
     */
    public DscMetaConfiguration withCertificateId(String certificateId) {
        this.certificateId = certificateId;
        return this;
    }

    /**
     * Get gets or sets the RefreshFrequencyMins value of the meta configuration.
     *
     * @return the refreshFrequencyMins value
     */
    public Integer refreshFrequencyMins() {
        return this.refreshFrequencyMins;
    }

    /**
     * Set gets or sets the RefreshFrequencyMins value of the meta configuration.
     *
     * @param refreshFrequencyMins the refreshFrequencyMins value to set
     * @return the DscMetaConfiguration object itself.
     */
    public DscMetaConfiguration withRefreshFrequencyMins(Integer refreshFrequencyMins) {
        this.refreshFrequencyMins = refreshFrequencyMins;
        return this;
    }

    /**
     * Get gets or sets the AllowModuleOverwrite value of the meta configuration.
     *
     * @return the allowModuleOverwrite value
     */
    public Boolean allowModuleOverwrite() {
        return this.allowModuleOverwrite;
    }

    /**
     * Set gets or sets the AllowModuleOverwrite value of the meta configuration.
     *
     * @param allowModuleOverwrite the allowModuleOverwrite value to set
     * @return the DscMetaConfiguration object itself.
     */
    public DscMetaConfiguration withAllowModuleOverwrite(Boolean allowModuleOverwrite) {
        this.allowModuleOverwrite = allowModuleOverwrite;
        return this;
    }

}
