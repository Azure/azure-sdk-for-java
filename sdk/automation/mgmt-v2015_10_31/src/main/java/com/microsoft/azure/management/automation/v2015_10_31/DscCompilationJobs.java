/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.automation.v2015_10_31;

import rx.Observable;
import com.microsoft.azure.management.automation.v2015_10_31.DscCompilationJob;

import java.util.UUID;

/**
 * Type representing DscCompilationJobs.
 */
public interface DscCompilationJobs {
    /**
     * Begins definition for a new Compilationjob resource.
     * @param name resource name.
     * @return the first stage of the new Compilationjob definition.
     */
    DscCompilationJob.DefinitionStages.Blank defineCompilationjob(String name);

    /**
     * Retrieve the Dsc configuration compilation job identified by job id.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param compilationJobId The Dsc configuration compilation job id.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<DscCompilationJob> getAsync(String resourceGroupName, String automationAccountName, UUID compilationJobId);

    /**
     * Retrieve a list of dsc compilation jobs.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<DscCompilationJob> listByAutomationAccountAsync(final String resourceGroupName, final String automationAccountName);

    /**
     * Retrieve the job stream identified by job stream id.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param jobId The job id.
     * @param jobStreamId The job stream id.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<CompilationjobAutomationAccountJobStream> getStreamAsync(String resourceGroupName, String automationAccountName, UUID jobId, String jobStreamId);

}
