// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.automation.AutomationManager;
import com.azure.resourcemanager.automation.models.JobSchedule;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class JobSchedulesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"id\":\"jahwriuomzczf\",\"name\":\"ceevsa\",\"type\":\"wspcaxikhfjqebg\",\"properties\":{\"jobScheduleId\":\"kxgzzromvygysem\",\"schedule\":{\"name\":\"srfsvpinkzpatqt\"},\"runbook\":{\"name\":\"wxspvckojaz\"},\"runOn\":\"gspftesu\",\"parameters\":{\"srfjbdxzfxnx\":\"vpvdylytcovqse\",\"kjmdihdcyy\":\"lbmuos\"}}}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AutomationManager manager = AutomationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        JobSchedule response = manager.jobSchedules()
            .getWithResponse("n", "qady", UUID.fromString("df7f9f64-a638-45c7-aece-3e85d053bd3b"),
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("kxgzzromvygysem", response.jobScheduleId());
        Assertions.assertEquals("srfsvpinkzpatqt", response.schedule().name());
        Assertions.assertEquals("wxspvckojaz", response.runbook().name());
        Assertions.assertEquals("gspftesu", response.runOn());
        Assertions.assertEquals("vpvdylytcovqse", response.parameters().get("srfjbdxzfxnx"));
    }
}
