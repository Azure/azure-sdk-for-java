// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.models.ContentHash;
import com.azure.resourcemanager.automation.models.ContentSource;
import com.azure.resourcemanager.automation.models.ContentSourceType;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class ContentSourceTests {
    @Test
    public void testDeserialize() {
        ContentSource model =
            BinaryData
                .fromString(
                    "{\"hash\":{\"algorithm\":\"dzgtil\",\"value\":\"xhnfhqly\"},\"type\":\"embeddedContent\",\"value\":\"uwivkxoy\",\"version\":\"nbixxrti\"}")
                .toObject(ContentSource.class);
        Assertions.assertEquals("dzgtil", model.hash().algorithm());
        Assertions.assertEquals("xhnfhqly", model.hash().value());
        Assertions.assertEquals(ContentSourceType.EMBEDDED_CONTENT, model.type());
        Assertions.assertEquals("uwivkxoy", model.value());
        Assertions.assertEquals("nbixxrti", model.version());
    }

    @Test
    public void testSerialize() {
        ContentSource model =
            new ContentSource()
                .withHash(new ContentHash().withAlgorithm("dzgtil").withValue("xhnfhqly"))
                .withType(ContentSourceType.EMBEDDED_CONTENT)
                .withValue("uwivkxoy")
                .withVersion("nbixxrti");
        model = BinaryData.fromObject(model).toObject(ContentSource.class);
        Assertions.assertEquals("dzgtil", model.hash().algorithm());
        Assertions.assertEquals("xhnfhqly", model.hash().value());
        Assertions.assertEquals(ContentSourceType.EMBEDDED_CONTENT, model.type());
        Assertions.assertEquals("uwivkxoy", model.value());
        Assertions.assertEquals("nbixxrti", model.version());
    }
}
