// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.fluent.models.WebhookCreateOrUpdateProperties;
import com.azure.resourcemanager.automation.models.RunbookAssociationProperty;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class WebhookCreateOrUpdatePropertiesTests {
    @Test
    public void testDeserialize() {
        WebhookCreateOrUpdateProperties model =
            BinaryData
                .fromString(
                    "{\"isEnabled\":false,\"uri\":\"egokdwbwhkszzcmr\",\"expiryTime\":\"2021-08-29T22:15:45Z\",\"parameters\":{\"gsfraoyzkoow\":\"bt\",\"aldsy\":\"lmnguxaw\",\"znkbykutwpfhpagm\":\"uximerqfobw\",\"kdsnfdsdoakgtdl\":\"r\"},\"runbook\":{\"name\":\"zev\"},\"runOn\":\"hewpusdsttwv\"}")
                .toObject(WebhookCreateOrUpdateProperties.class);
        Assertions.assertEquals(false, model.isEnabled());
        Assertions.assertEquals("egokdwbwhkszzcmr", model.uri());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-29T22:15:45Z"), model.expiryTime());
        Assertions.assertEquals("bt", model.parameters().get("gsfraoyzkoow"));
        Assertions.assertEquals("zev", model.runbook().name());
        Assertions.assertEquals("hewpusdsttwv", model.runOn());
    }

    @Test
    public void testSerialize() {
        WebhookCreateOrUpdateProperties model =
            new WebhookCreateOrUpdateProperties()
                .withIsEnabled(false)
                .withUri("egokdwbwhkszzcmr")
                .withExpiryTime(OffsetDateTime.parse("2021-08-29T22:15:45Z"))
                .withParameters(
                    mapOf(
                        "gsfraoyzkoow",
                        "bt",
                        "aldsy",
                        "lmnguxaw",
                        "znkbykutwpfhpagm",
                        "uximerqfobw",
                        "kdsnfdsdoakgtdl",
                        "r"))
                .withRunbook(new RunbookAssociationProperty().withName("zev"))
                .withRunOn("hewpusdsttwv");
        model = BinaryData.fromObject(model).toObject(WebhookCreateOrUpdateProperties.class);
        Assertions.assertEquals(false, model.isEnabled());
        Assertions.assertEquals("egokdwbwhkszzcmr", model.uri());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-29T22:15:45Z"), model.expiryTime());
        Assertions.assertEquals("bt", model.parameters().get("gsfraoyzkoow"));
        Assertions.assertEquals("zev", model.runbook().name());
        Assertions.assertEquals("hewpusdsttwv", model.runOn());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
