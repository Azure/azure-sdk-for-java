// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.fluent.models.ModuleInner;
import com.azure.resourcemanager.automation.models.ModuleListResult;
import com.azure.resourcemanager.automation.models.ModuleProvisioningState;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class ModuleListResultTests {
    @Test
    public void testDeserialize() {
        ModuleListResult model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"isGlobal\":false,\"version\":\"rmuhapfcq\",\"sizeInBytes\":6594560791978849065,\"activityCount\":399879139,\"provisioningState\":\"ContentStored\",\"creationTime\":\"2021-04-21T12:11:06Z\",\"lastModifiedTime\":\"2021-06-04T12:32:06Z\",\"description\":\"ccelve\",\"isComposite\":false},\"etag\":\"qlmfeoker\",\"location\":\"wkyhkobopgxe\",\"tags\":{\"qpcrf\":\"wep\",\"ftnkhtj\":\"bwccsnjvcdwxlpqe\",\"ngwfqatm\":\"y\"},\"id\":\"dhtmdvypgikd\",\"name\":\"szywkbirryu\",\"type\":\"hlhkjoqrvqqaatj\"},{\"properties\":{\"isGlobal\":false,\"version\":\"oupmfii\",\"sizeInBytes\":523733166305803444,\"activityCount\":2107533163,\"provisioningState\":\"ContentRetrieved\",\"creationTime\":\"2021-03-31T22:10:33Z\",\"lastModifiedTime\":\"2021-01-31T00:57:49Z\",\"description\":\"tkkgllqwjy\",\"isComposite\":true},\"etag\":\"yvblmhvkzu\",\"location\":\"bxvvyhg\",\"tags\":{\"uvwzfbnh\":\"byrqufeg\",\"bmhrixkwmyijejv\":\"mctlpdngitv\",\"ixexcc\":\"grhbpn\"},\"id\":\"dreaxh\",\"name\":\"exdrrvqahqkg\",\"type\":\"tpwijnh\"},{\"properties\":{\"isGlobal\":false,\"version\":\"ycxzbfvoo\",\"sizeInBytes\":7923813676543312414,\"activityCount\":64762748,\"provisioningState\":\"Failed\",\"creationTime\":\"2021-08-11T01:15:55Z\",\"lastModifiedTime\":\"2021-06-04T09:23:36Z\",\"description\":\"ronzmyhgfip\",\"isComposite\":true},\"etag\":\"mcwaekrrjr\",\"location\":\"afxtsgum\",\"tags\":{\"xwslolbqpv\":\"lik\",\"crpw\":\"zlmvfelfktgp\",\"brnjwmw\":\"xeznoi\"},\"id\":\"pn\",\"name\":\"saz\",\"type\":\"jjoqkagf\"},{\"properties\":{\"isGlobal\":true,\"version\":\"augzxnfaazpxdtn\",\"sizeInBytes\":5455709346617083840,\"activityCount\":190576653,\"provisioningState\":\"ContentStored\",\"creationTime\":\"2021-06-14T14:36:08Z\",\"lastModifiedTime\":\"2021-07-12T10:16:15Z\",\"description\":\"pyouaibrebqaays\",\"isComposite\":false},\"etag\":\"qtnqtt\",\"location\":\"zlwfffiakp\",\"tags\":{\"d\":\"qmt\",\"wau\":\"tmmjihyeozph\",\"mdscwxqupev\":\"qncygupkvi\"},\"id\":\"hfstotxhojujbyp\",\"name\":\"lmcuvhixb\",\"type\":\"xyfwnylrcool\"}],\"nextLink\":\"tpkiwkkbnujry\"}")
                .toObject(ModuleListResult.class);
        Assertions.assertEquals("wkyhkobopgxe", model.value().get(0).location());
        Assertions.assertEquals("wep", model.value().get(0).tags().get("qpcrf"));
        Assertions.assertEquals("qlmfeoker", model.value().get(0).etag());
        Assertions.assertEquals(false, model.value().get(0).isGlobal());
        Assertions.assertEquals("rmuhapfcq", model.value().get(0).version());
        Assertions.assertEquals(6594560791978849065L, model.value().get(0).sizeInBytes());
        Assertions.assertEquals(399879139, model.value().get(0).activityCount());
        Assertions.assertEquals(ModuleProvisioningState.CONTENT_STORED, model.value().get(0).provisioningState());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-21T12:11:06Z"), model.value().get(0).creationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-04T12:32:06Z"), model.value().get(0).lastModifiedTime());
        Assertions.assertEquals("ccelve", model.value().get(0).description());
        Assertions.assertEquals(false, model.value().get(0).isComposite());
        Assertions.assertEquals("tpkiwkkbnujry", model.nextLink());
    }

    @Test
    public void testSerialize() {
        ModuleListResult model =
            new ModuleListResult()
                .withValue(
                    Arrays
                        .asList(
                            new ModuleInner()
                                .withLocation("wkyhkobopgxe")
                                .withTags(mapOf("qpcrf", "wep", "ftnkhtj", "bwccsnjvcdwxlpqe", "ngwfqatm", "y"))
                                .withEtag("qlmfeoker")
                                .withIsGlobal(false)
                                .withVersion("rmuhapfcq")
                                .withSizeInBytes(6594560791978849065L)
                                .withActivityCount(399879139)
                                .withProvisioningState(ModuleProvisioningState.CONTENT_STORED)
                                .withCreationTime(OffsetDateTime.parse("2021-04-21T12:11:06Z"))
                                .withLastModifiedTime(OffsetDateTime.parse("2021-06-04T12:32:06Z"))
                                .withDescription("ccelve")
                                .withIsComposite(false),
                            new ModuleInner()
                                .withLocation("bxvvyhg")
                                .withTags(
                                    mapOf("uvwzfbnh", "byrqufeg", "bmhrixkwmyijejv", "mctlpdngitv", "ixexcc", "grhbpn"))
                                .withEtag("yvblmhvkzu")
                                .withIsGlobal(false)
                                .withVersion("oupmfii")
                                .withSizeInBytes(523733166305803444L)
                                .withActivityCount(2107533163)
                                .withProvisioningState(ModuleProvisioningState.CONTENT_RETRIEVED)
                                .withCreationTime(OffsetDateTime.parse("2021-03-31T22:10:33Z"))
                                .withLastModifiedTime(OffsetDateTime.parse("2021-01-31T00:57:49Z"))
                                .withDescription("tkkgllqwjy")
                                .withIsComposite(true),
                            new ModuleInner()
                                .withLocation("afxtsgum")
                                .withTags(mapOf("xwslolbqpv", "lik", "crpw", "zlmvfelfktgp", "brnjwmw", "xeznoi"))
                                .withEtag("mcwaekrrjr")
                                .withIsGlobal(false)
                                .withVersion("ycxzbfvoo")
                                .withSizeInBytes(7923813676543312414L)
                                .withActivityCount(64762748)
                                .withProvisioningState(ModuleProvisioningState.FAILED)
                                .withCreationTime(OffsetDateTime.parse("2021-08-11T01:15:55Z"))
                                .withLastModifiedTime(OffsetDateTime.parse("2021-06-04T09:23:36Z"))
                                .withDescription("ronzmyhgfip")
                                .withIsComposite(true),
                            new ModuleInner()
                                .withLocation("zlwfffiakp")
                                .withTags(mapOf("d", "qmt", "wau", "tmmjihyeozph", "mdscwxqupev", "qncygupkvi"))
                                .withEtag("qtnqtt")
                                .withIsGlobal(true)
                                .withVersion("augzxnfaazpxdtn")
                                .withSizeInBytes(5455709346617083840L)
                                .withActivityCount(190576653)
                                .withProvisioningState(ModuleProvisioningState.CONTENT_STORED)
                                .withCreationTime(OffsetDateTime.parse("2021-06-14T14:36:08Z"))
                                .withLastModifiedTime(OffsetDateTime.parse("2021-07-12T10:16:15Z"))
                                .withDescription("pyouaibrebqaays")
                                .withIsComposite(false)))
                .withNextLink("tpkiwkkbnujry");
        model = BinaryData.fromObject(model).toObject(ModuleListResult.class);
        Assertions.assertEquals("wkyhkobopgxe", model.value().get(0).location());
        Assertions.assertEquals("wep", model.value().get(0).tags().get("qpcrf"));
        Assertions.assertEquals("qlmfeoker", model.value().get(0).etag());
        Assertions.assertEquals(false, model.value().get(0).isGlobal());
        Assertions.assertEquals("rmuhapfcq", model.value().get(0).version());
        Assertions.assertEquals(6594560791978849065L, model.value().get(0).sizeInBytes());
        Assertions.assertEquals(399879139, model.value().get(0).activityCount());
        Assertions.assertEquals(ModuleProvisioningState.CONTENT_STORED, model.value().get(0).provisioningState());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-21T12:11:06Z"), model.value().get(0).creationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-04T12:32:06Z"), model.value().get(0).lastModifiedTime());
        Assertions.assertEquals("ccelve", model.value().get(0).description());
        Assertions.assertEquals(false, model.value().get(0).isComposite());
        Assertions.assertEquals("tpkiwkkbnujry", model.nextLink());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
