// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.automation.AutomationManager;
import com.azure.resourcemanager.automation.models.SourceControlSyncJobStream;
import com.azure.resourcemanager.automation.models.StreamType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SourceControlSyncJobStreamsListBySyncJobMockTests {
    @Test
    public void testListBySyncJob() throws Exception {
        String responseStr
            = "{\"value\":[{\"id\":\"vnjobfelhldiuhzz\",\"properties\":{\"sourceControlSyncJobStreamId\":\"mfaewzgi\",\"summary\":\"jpxpqhttqhnmhkre\",\"time\":\"2021-03-27T07:39:58Z\",\"streamType\":\"Error\"}}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AutomationManager manager = AutomationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<SourceControlSyncJobStream> response = manager.sourceControlSyncJobStreams()
            .listBySyncJob("vwffcvvyezslp", "xgcbdsvalpnpt", "trkxgpazwu",
                UUID.fromString("7b2814c3-c8b9-4777-9451-1c832b749bb8"), "x", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("mfaewzgi", response.iterator().next().sourceControlSyncJobStreamId());
        Assertions.assertEquals("jpxpqhttqhnmhkre", response.iterator().next().summary());
        Assertions.assertEquals(StreamType.ERROR, response.iterator().next().streamType());
    }
}
