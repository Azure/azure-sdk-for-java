// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.automation.AutomationManager;
import com.azure.resourcemanager.automation.models.DeletedAutomationAccountListResult;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DeletedAutomationAccountsListBySubscriptionWithResponseMockTests {
    @Test
    public void testListBySubscriptionWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"automationAccountResourceId\":\"jrieikm\",\"automationAccountId\":\"aoklfnis\",\"location\":\"gucbmt\",\"deletionTime\":\"2021-08-15T14:21:54Z\"},\"id\":\"cnnstjcyy\",\"name\":\"tzrxzhcle\",\"type\":\"wtzqzcloyhy\",\"location\":\"gi\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AutomationManager manager = AutomationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        DeletedAutomationAccountListResult response = manager.deletedAutomationAccounts()
            .listBySubscriptionWithResponse(com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("cnnstjcyy", response.value().get(0).id());
        Assertions.assertEquals("tzrxzhcle", response.value().get(0).name());
        Assertions.assertEquals("wtzqzcloyhy", response.value().get(0).type());
        Assertions.assertEquals("gi", response.value().get(0).location());
        Assertions.assertEquals("jrieikm", response.value().get(0).automationAccountResourceId());
        Assertions.assertEquals("aoklfnis", response.value().get(0).automationAccountId());
        Assertions.assertEquals("gucbmt", response.value().get(0).locationPropertiesLocation());
    }
}
