// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.fluent.models.PrivateEndpointConnectionProperties;
import com.azure.resourcemanager.automation.models.PrivateEndpointProperty;
import com.azure.resourcemanager.automation.models.PrivateLinkServiceConnectionStateProperty;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class PrivateEndpointConnectionPropertiesTests {
    @Test
    public void testDeserialize() {
        PrivateEndpointConnectionProperties model =
            BinaryData
                .fromString(
                    "{\"privateEndpoint\":{\"id\":\"arhmofcqhsmy\"},\"groupIds\":[\"dtmlxhekuksjt\",\"ukcdmparcryuanzw\",\"xzdxtayrlhmwh\"],\"privateLinkServiceConnectionState\":{\"status\":\"rqobmtuk\",\"description\":\"ryrtihfxtijbpzv\",\"actionsRequired\":\"wzsymglzufcy\"}}")
                .toObject(PrivateEndpointConnectionProperties.class);
        Assertions.assertEquals("arhmofcqhsmy", model.privateEndpoint().id());
        Assertions.assertEquals("dtmlxhekuksjt", model.groupIds().get(0));
        Assertions.assertEquals("rqobmtuk", model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("ryrtihfxtijbpzv", model.privateLinkServiceConnectionState().description());
    }

    @Test
    public void testSerialize() {
        PrivateEndpointConnectionProperties model =
            new PrivateEndpointConnectionProperties()
                .withPrivateEndpoint(new PrivateEndpointProperty().withId("arhmofcqhsmy"))
                .withGroupIds(Arrays.asList("dtmlxhekuksjt", "ukcdmparcryuanzw", "xzdxtayrlhmwh"))
                .withPrivateLinkServiceConnectionState(
                    new PrivateLinkServiceConnectionStateProperty()
                        .withStatus("rqobmtuk")
                        .withDescription("ryrtihfxtijbpzv"));
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnectionProperties.class);
        Assertions.assertEquals("arhmofcqhsmy", model.privateEndpoint().id());
        Assertions.assertEquals("dtmlxhekuksjt", model.groupIds().get(0));
        Assertions.assertEquals("rqobmtuk", model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("ryrtihfxtijbpzv", model.privateLinkServiceConnectionState().description());
    }
}
