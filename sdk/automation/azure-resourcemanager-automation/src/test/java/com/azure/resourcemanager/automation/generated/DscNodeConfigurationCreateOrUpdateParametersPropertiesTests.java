// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.fluent.models.DscNodeConfigurationCreateOrUpdateParametersProperties;
import com.azure.resourcemanager.automation.models.ContentHash;
import com.azure.resourcemanager.automation.models.ContentSource;
import com.azure.resourcemanager.automation.models.ContentSourceType;
import com.azure.resourcemanager.automation.models.DscConfigurationAssociationProperty;
import org.junit.jupiter.api.Assertions;

public final class DscNodeConfigurationCreateOrUpdateParametersPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DscNodeConfigurationCreateOrUpdateParametersProperties model = BinaryData.fromString(
            "{\"source\":{\"hash\":{\"algorithm\":\"csonpclhoco\",\"value\":\"slkevle\"},\"type\":\"embeddedContent\",\"value\":\"buhfmvfaxkffeiit\",\"version\":\"vmezy\"},\"configuration\":{\"name\":\"hxmzsbbzoggig\"},\"incrementNodeConfigurationBuild\":true}")
            .toObject(DscNodeConfigurationCreateOrUpdateParametersProperties.class);
        Assertions.assertEquals("csonpclhoco", model.source().hash().algorithm());
        Assertions.assertEquals("slkevle", model.source().hash().value());
        Assertions.assertEquals(ContentSourceType.EMBEDDED_CONTENT, model.source().type());
        Assertions.assertEquals("buhfmvfaxkffeiit", model.source().value());
        Assertions.assertEquals("vmezy", model.source().version());
        Assertions.assertEquals("hxmzsbbzoggig", model.configuration().name());
        Assertions.assertEquals(true, model.incrementNodeConfigurationBuild());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DscNodeConfigurationCreateOrUpdateParametersProperties model
            = new DscNodeConfigurationCreateOrUpdateParametersProperties()
                .withSource(
                    new ContentSource().withHash(new ContentHash().withAlgorithm("csonpclhoco").withValue("slkevle"))
                        .withType(ContentSourceType.EMBEDDED_CONTENT)
                        .withValue("buhfmvfaxkffeiit")
                        .withVersion("vmezy"))
                .withConfiguration(new DscConfigurationAssociationProperty().withName("hxmzsbbzoggig"))
                .withIncrementNodeConfigurationBuild(true);
        model = BinaryData.fromObject(model).toObject(DscNodeConfigurationCreateOrUpdateParametersProperties.class);
        Assertions.assertEquals("csonpclhoco", model.source().hash().algorithm());
        Assertions.assertEquals("slkevle", model.source().hash().value());
        Assertions.assertEquals(ContentSourceType.EMBEDDED_CONTENT, model.source().type());
        Assertions.assertEquals("buhfmvfaxkffeiit", model.source().value());
        Assertions.assertEquals("vmezy", model.source().version());
        Assertions.assertEquals("hxmzsbbzoggig", model.configuration().name());
        Assertions.assertEquals(true, model.incrementNodeConfigurationBuild());
    }
}
