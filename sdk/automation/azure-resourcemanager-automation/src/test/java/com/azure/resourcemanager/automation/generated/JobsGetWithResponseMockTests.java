// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.automation.AutomationManager;
import com.azure.resourcemanager.automation.models.Job;
import com.azure.resourcemanager.automation.models.JobProvisioningState;
import com.azure.resourcemanager.automation.models.JobStatus;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class JobsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"runbook\":{\"name\":\"mey\"},\"startedBy\":\"jamca\",\"runOn\":\"hftpzcrrykll\",\"jobId\":\"05d5c40f-8ba7-438c-9bd8-31003f3dc255\",\"creationTime\":\"2021-03-15T02:29:37Z\",\"status\":\"New\",\"statusDetails\":\"kig\",\"startTime\":\"2021-07-18T23:52:23Z\",\"endTime\":\"2021-08-29T00:53:27Z\",\"exception\":\"lhv\",\"lastModifiedTime\":\"2021-11-28T01:36:47Z\",\"lastStatusModifiedTime\":\"2021-03-23T20:06:12Z\",\"parameters\":{\"alec\":\"etxdqcmyctajqzj\",\"egyxsbfpzvoik\":\"bibiwks\",\"pblalhhez\":\"ntwczfzwushlc\",\"qdsgptotxj\":\"fkissaidqzsaa\"},\"provisioningState\":\"Failed\"},\"id\":\"afcnlrtb\",\"name\":\"ijzzcaoijolbuauk\",\"type\":\"wieopexelxqdw\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AutomationManager manager = AutomationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Job response = manager.jobs()
            .getWithResponse("ywvyldqpzfzxsox", "nunjlzkdr", "cqsxytqqtcmiw", "w", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("mey", response.runbook().name());
        Assertions.assertEquals("jamca", response.startedBy());
        Assertions.assertEquals("hftpzcrrykll", response.runOn());
        Assertions.assertEquals(UUID.fromString("05d5c40f-8ba7-438c-9bd8-31003f3dc255"), response.jobId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-15T02:29:37Z"), response.creationTime());
        Assertions.assertEquals(JobStatus.NEW, response.status());
        Assertions.assertEquals("kig", response.statusDetails());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-18T23:52:23Z"), response.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-29T00:53:27Z"), response.endTime());
        Assertions.assertEquals("lhv", response.exception());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-28T01:36:47Z"), response.lastModifiedTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-23T20:06:12Z"), response.lastStatusModifiedTime());
        Assertions.assertEquals("etxdqcmyctajqzj", response.parameters().get("alec"));
        Assertions.assertEquals(JobProvisioningState.FAILED, response.provisioningState());
    }
}
