// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.fluent.models.NodeCountsInner;
import com.azure.resourcemanager.automation.models.NodeCount;
import com.azure.resourcemanager.automation.models.NodeCountProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NodeCountsInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NodeCountsInner model = BinaryData.fromString(
            "{\"value\":[{\"name\":\"wncwzzhxgktrmg\",\"properties\":{\"count\":2053919351}},{\"name\":\"kteo\",\"properties\":{\"count\":1409884239}}],\"totalCount\":207287294}")
            .toObject(NodeCountsInner.class);
        Assertions.assertEquals("wncwzzhxgktrmg", model.value().get(0).name());
        Assertions.assertEquals(2053919351, model.value().get(0).properties().count());
        Assertions.assertEquals(207287294, model.totalCount());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NodeCountsInner model = new NodeCountsInner()
            .withValue(Arrays.asList(
                new NodeCount().withName("wncwzzhxgktrmg")
                    .withProperties(new NodeCountProperties().withCount(2053919351)),
                new NodeCount().withName("kteo").withProperties(new NodeCountProperties().withCount(1409884239))))
            .withTotalCount(207287294);
        model = BinaryData.fromObject(model).toObject(NodeCountsInner.class);
        Assertions.assertEquals("wncwzzhxgktrmg", model.value().get(0).name());
        Assertions.assertEquals(2053919351, model.value().get(0).properties().count());
        Assertions.assertEquals(207287294, model.totalCount());
    }
}
