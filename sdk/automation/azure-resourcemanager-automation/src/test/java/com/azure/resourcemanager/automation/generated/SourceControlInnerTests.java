// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.fluent.models.SourceControlInner;
import com.azure.resourcemanager.automation.models.SourceType;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class SourceControlInnerTests {
    @Test
    public void testDeserialize() {
        SourceControlInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"repoUrl\":\"m\",\"branch\":\"sibjgs\",\"folderPath\":\"xxahmrnadzyqegxy\",\"autoSync\":true,\"publishRunbook\":false,\"sourceType\":\"VsoTfvc\",\"description\":\"wbjijkgq\",\"creationTime\":\"2021-04-14T21:42:43Z\",\"lastModifiedTime\":\"2021-08-05T01:09:52Z\"},\"id\":\"keznjaujvaa\",\"name\":\"nggiycwkdtaa\",\"type\":\"xw\"}")
                .toObject(SourceControlInner.class);
        Assertions.assertEquals("m", model.repoUrl());
        Assertions.assertEquals("sibjgs", model.branch());
        Assertions.assertEquals("xxahmrnadzyqegxy", model.folderPath());
        Assertions.assertEquals(true, model.autoSync());
        Assertions.assertEquals(false, model.publishRunbook());
        Assertions.assertEquals(SourceType.VSO_TFVC, model.sourceType());
        Assertions.assertEquals("wbjijkgq", model.description());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-14T21:42:43Z"), model.creationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-05T01:09:52Z"), model.lastModifiedTime());
    }

    @Test
    public void testSerialize() {
        SourceControlInner model =
            new SourceControlInner()
                .withRepoUrl("m")
                .withBranch("sibjgs")
                .withFolderPath("xxahmrnadzyqegxy")
                .withAutoSync(true)
                .withPublishRunbook(false)
                .withSourceType(SourceType.VSO_TFVC)
                .withDescription("wbjijkgq")
                .withCreationTime(OffsetDateTime.parse("2021-04-14T21:42:43Z"))
                .withLastModifiedTime(OffsetDateTime.parse("2021-08-05T01:09:52Z"));
        model = BinaryData.fromObject(model).toObject(SourceControlInner.class);
        Assertions.assertEquals("m", model.repoUrl());
        Assertions.assertEquals("sibjgs", model.branch());
        Assertions.assertEquals("xxahmrnadzyqegxy", model.folderPath());
        Assertions.assertEquals(true, model.autoSync());
        Assertions.assertEquals(false, model.publishRunbook());
        Assertions.assertEquals(SourceType.VSO_TFVC, model.sourceType());
        Assertions.assertEquals("wbjijkgq", model.description());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-14T21:42:43Z"), model.creationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-05T01:09:52Z"), model.lastModifiedTime());
    }
}
