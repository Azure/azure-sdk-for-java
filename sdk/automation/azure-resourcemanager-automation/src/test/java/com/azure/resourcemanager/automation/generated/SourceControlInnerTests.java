// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.fluent.models.SourceControlInner;
import com.azure.resourcemanager.automation.models.SourceType;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class SourceControlInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SourceControlInner model = BinaryData.fromString(
            "{\"properties\":{\"repoUrl\":\"j\",\"branch\":\"xxivetv\",\"folderPath\":\"qaqtdoqmcbxvwvxy\",\"autoSync\":true,\"publishRunbook\":true,\"sourceType\":\"VsoGit\",\"description\":\"obl\",\"creationTime\":\"2021-07-14T10:36:47Z\",\"lastModifiedTime\":\"2021-01-29T06:51:05Z\"},\"id\":\"mpew\",\"name\":\"wfbkrvrns\",\"type\":\"shqjohxcrsbf\"}")
            .toObject(SourceControlInner.class);
        Assertions.assertEquals("j", model.repoUrl());
        Assertions.assertEquals("xxivetv", model.branch());
        Assertions.assertEquals("qaqtdoqmcbxvwvxy", model.folderPath());
        Assertions.assertEquals(true, model.autoSync());
        Assertions.assertEquals(true, model.publishRunbook());
        Assertions.assertEquals(SourceType.VSO_GIT, model.sourceType());
        Assertions.assertEquals("obl", model.description());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-14T10:36:47Z"), model.creationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-29T06:51:05Z"), model.lastModifiedTime());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SourceControlInner model = new SourceControlInner().withRepoUrl("j")
            .withBranch("xxivetv")
            .withFolderPath("qaqtdoqmcbxvwvxy")
            .withAutoSync(true)
            .withPublishRunbook(true)
            .withSourceType(SourceType.VSO_GIT)
            .withDescription("obl")
            .withCreationTime(OffsetDateTime.parse("2021-07-14T10:36:47Z"))
            .withLastModifiedTime(OffsetDateTime.parse("2021-01-29T06:51:05Z"));
        model = BinaryData.fromObject(model).toObject(SourceControlInner.class);
        Assertions.assertEquals("j", model.repoUrl());
        Assertions.assertEquals("xxivetv", model.branch());
        Assertions.assertEquals("qaqtdoqmcbxvwvxy", model.folderPath());
        Assertions.assertEquals(true, model.autoSync());
        Assertions.assertEquals(true, model.publishRunbook());
        Assertions.assertEquals(SourceType.VSO_GIT, model.sourceType());
        Assertions.assertEquals("obl", model.description());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-14T10:36:47Z"), model.creationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-29T06:51:05Z"), model.lastModifiedTime());
    }
}
