// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.models.SoftwareUpdateConfigurationTasks;
import com.azure.resourcemanager.automation.models.TaskProperties;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class SoftwareUpdateConfigurationTasksTests {
    @Test
    public void testDeserialize() {
        SoftwareUpdateConfigurationTasks model =
            BinaryData
                .fromString(
                    "{\"preTask\":{\"parameters\":{\"smypyynpc\":\"yhqmibzyhwi\",\"mwzn\":\"pumnz\",\"rgjhxb\":\"abikns\",\"tncvokot\":\"dtlwwrlkd\"},\"source\":\"xdy\"},\"postTask\":{\"parameters\":{\"tdtbnnhadooc\":\"ocogj\"},\"source\":\"vcikhnvpamqgx\"}}")
                .toObject(SoftwareUpdateConfigurationTasks.class);
        Assertions.assertEquals("yhqmibzyhwi", model.preTask().parameters().get("smypyynpc"));
        Assertions.assertEquals("xdy", model.preTask().source());
        Assertions.assertEquals("ocogj", model.postTask().parameters().get("tdtbnnhadooc"));
        Assertions.assertEquals("vcikhnvpamqgx", model.postTask().source());
    }

    @Test
    public void testSerialize() {
        SoftwareUpdateConfigurationTasks model =
            new SoftwareUpdateConfigurationTasks()
                .withPreTask(
                    new TaskProperties()
                        .withParameters(
                            mapOf(
                                "smypyynpc",
                                "yhqmibzyhwi",
                                "mwzn",
                                "pumnz",
                                "rgjhxb",
                                "abikns",
                                "tncvokot",
                                "dtlwwrlkd"))
                        .withSource("xdy"))
                .withPostTask(
                    new TaskProperties().withParameters(mapOf("tdtbnnhadooc", "ocogj")).withSource("vcikhnvpamqgx"));
        model = BinaryData.fromObject(model).toObject(SoftwareUpdateConfigurationTasks.class);
        Assertions.assertEquals("yhqmibzyhwi", model.preTask().parameters().get("smypyynpc"));
        Assertions.assertEquals("xdy", model.preTask().source());
        Assertions.assertEquals("ocogj", model.postTask().parameters().get("tdtbnnhadooc"));
        Assertions.assertEquals("vcikhnvpamqgx", model.postTask().source());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
