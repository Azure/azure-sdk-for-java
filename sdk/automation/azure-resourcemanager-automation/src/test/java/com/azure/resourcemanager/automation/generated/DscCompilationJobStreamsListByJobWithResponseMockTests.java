// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.automation.AutomationManager;
import com.azure.resourcemanager.automation.models.JobStreamListResult;
import com.azure.resourcemanager.automation.models.JobStreamType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DscCompilationJobStreamsListByJobWithResponseMockTests {
    @Test
    public void testListByJobWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"id\":\"zmqilrixysfnim\",\"properties\":{\"jobStreamId\":\"wwwmhkruwaedrym\",\"time\":\"2021-06-23T19:33:32Z\",\"streamType\":\"Verbose\",\"streamText\":\"nhzd\",\"summary\":\"wih\",\"value\":{\"jh\":\"datajiiknjdiqfli\",\"iedfsbwcei\":\"datacl\",\"ipbwxgooo\":\"databv\"}}},{\"id\":\"pradmskxknpdgzi\",\"properties\":{\"jobStreamId\":\"ug\",\"time\":\"2021-02-25T14:20:18Z\",\"streamType\":\"Any\",\"streamText\":\"odkwwnbafocto\",\"summary\":\"haquvwsxbgnvk\",\"value\":{\"vspabdsrgfajgl\":\"dataqchoadhrsxqv\",\"cetjdvq\":\"datarsubklrxhjnl\",\"kw\":\"datadieq\"}}},{\"id\":\"uwdxvqzxoebwgj\",\"properties\":{\"jobStreamId\":\"banbaupwtzv\",\"time\":\"2020-12-20T23:41:48Z\",\"streamType\":\"Warning\",\"streamText\":\"k\",\"summary\":\"zrpejpl\",\"value\":{\"rswgkpjhboyikeb\":\"datanbtttkgsuxu\",\"lokhueoijyzcqyp\":\"datauhkslg\",\"xptpqaya\":\"dataqzufgsyfejyvdwt\"}}},{\"id\":\"ncfgybmxsnxoc\",\"properties\":{\"jobStreamId\":\"l\",\"time\":\"2021-11-17T08:29:05Z\",\"streamType\":\"Any\",\"streamText\":\"hg\",\"summary\":\"djuxdbdljzgd\",\"value\":{\"dxwbsfpyxxtj\":\"datavuqbsgzlrqhbjnqo\"}}}],\"nextLink\":\"lecomi\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AutomationManager manager = AutomationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        JobStreamListResult response = manager.dscCompilationJobStreams()
            .listByJobWithResponse("rmmttjxop", "gerhsmvg", UUID.fromString("3f5e5033-bf97-42e3-bdf9-168f80443b95"),
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("zmqilrixysfnim", response.value().get(0).id());
        Assertions.assertEquals("wwwmhkruwaedrym", response.value().get(0).jobStreamId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-23T19:33:32Z"), response.value().get(0).time());
        Assertions.assertEquals(JobStreamType.VERBOSE, response.value().get(0).streamType());
        Assertions.assertEquals("nhzd", response.value().get(0).streamText());
        Assertions.assertEquals("wih", response.value().get(0).summary());
        Assertions.assertEquals("lecomi", response.nextLink());
    }
}
