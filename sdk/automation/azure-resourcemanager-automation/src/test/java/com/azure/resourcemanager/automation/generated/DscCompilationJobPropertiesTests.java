// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.fluent.models.DscCompilationJobProperties;
import com.azure.resourcemanager.automation.models.DscConfigurationAssociationProperty;
import com.azure.resourcemanager.automation.models.JobProvisioningState;
import com.azure.resourcemanager.automation.models.JobStatus;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class DscCompilationJobPropertiesTests {
    @Test
    public void testDeserialize() {
        DscCompilationJobProperties model =
            BinaryData
                .fromString(
                    "{\"configuration\":{\"name\":\"eyeam\"},\"startedBy\":\"hagalpbuxwgipwh\",\"creationTime\":\"2021-10-05T07:08:38Z\",\"provisioningState\":\"Suspended\",\"runOn\":\"hwankixzbinjepu\",\"status\":\"Blocked\",\"statusDetails\":\"ywnuzoq\",\"startTime\":\"2021-01-24T22:43:39Z\",\"endTime\":\"2021-10-11T21:17:46Z\",\"exception\":\"rnkcqvyxlw\",\"lastModifiedTime\":\"2021-01-23T07:25:21Z\",\"lastStatusModifiedTime\":\"2021-07-23T19:47:42Z\",\"parameters\":{\"avwhheunm\":\"hoqqnwvlr\",\"yaxuconuqszfkb\":\"qhgyxzkonocukok\",\"xsenhwlr\":\"ypewrmjmwvvjekt\",\"ihkaetcktvfc\":\"ffrzpwvlqdqgbiqy\"}}")
                .toObject(DscCompilationJobProperties.class);
        Assertions.assertEquals("eyeam", model.configuration().name());
        Assertions.assertEquals(JobProvisioningState.SUSPENDED, model.provisioningState());
        Assertions.assertEquals("hwankixzbinjepu", model.runOn());
        Assertions.assertEquals(JobStatus.BLOCKED, model.status());
        Assertions.assertEquals("ywnuzoq", model.statusDetails());
        Assertions.assertEquals("hoqqnwvlr", model.parameters().get("avwhheunm"));
    }

    @Test
    public void testSerialize() {
        DscCompilationJobProperties model =
            new DscCompilationJobProperties()
                .withConfiguration(new DscConfigurationAssociationProperty().withName("eyeam"))
                .withProvisioningState(JobProvisioningState.SUSPENDED)
                .withRunOn("hwankixzbinjepu")
                .withStatus(JobStatus.BLOCKED)
                .withStatusDetails("ywnuzoq")
                .withParameters(
                    mapOf(
                        "avwhheunm",
                        "hoqqnwvlr",
                        "yaxuconuqszfkb",
                        "qhgyxzkonocukok",
                        "xsenhwlr",
                        "ypewrmjmwvvjekt",
                        "ihkaetcktvfc",
                        "ffrzpwvlqdqgbiqy"));
        model = BinaryData.fromObject(model).toObject(DscCompilationJobProperties.class);
        Assertions.assertEquals("eyeam", model.configuration().name());
        Assertions.assertEquals(JobProvisioningState.SUSPENDED, model.provisioningState());
        Assertions.assertEquals("hwankixzbinjepu", model.runOn());
        Assertions.assertEquals(JobStatus.BLOCKED, model.status());
        Assertions.assertEquals("ywnuzoq", model.statusDetails());
        Assertions.assertEquals("hoqqnwvlr", model.parameters().get("avwhheunm"));
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
