// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.fluent.models.ActivityInner;
import com.azure.resourcemanager.automation.models.ActivityOutputType;
import com.azure.resourcemanager.automation.models.ActivityParameterSet;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class ActivityInnerTests {
    @Test
    public void testDeserialize() {
        ActivityInner model =
            BinaryData
                .fromString(
                    "{\"id\":\"sehaohdjhhflzok\",\"name\":\"ox\",\"properties\":{\"definition\":\"nje\",\"parameterSets\":[{\"name\":\"tsxoatftgz\",\"parameters\":[]},{\"name\":\"bs\",\"parameters\":[]}],\"outputTypes\":[{\"name\":\"occsr\",\"type\":\"zihmipgawtxxpky\"},{\"name\":\"xcjxgrytfmpcy\",\"type\":\"lrmcaykg\"},{\"name\":\"oxuztrksx\",\"type\":\"ndfcpfn\"}],\"creationTime\":\"2021-02-28T01:50:53Z\",\"lastModifiedTime\":\"2021-10-03T06:25:21Z\",\"description\":\"wkjaos\"}}")
                .toObject(ActivityInner.class);
        Assertions.assertEquals("sehaohdjhhflzok", model.id());
        Assertions.assertEquals("nje", model.definition());
        Assertions.assertEquals("tsxoatftgz", model.parameterSets().get(0).name());
        Assertions.assertEquals("occsr", model.outputTypes().get(0).name());
        Assertions.assertEquals("zihmipgawtxxpky", model.outputTypes().get(0).type());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-28T01:50:53Z"), model.creationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-03T06:25:21Z"), model.lastModifiedTime());
        Assertions.assertEquals("wkjaos", model.description());
    }

    @Test
    public void testSerialize() {
        ActivityInner model =
            new ActivityInner()
                .withId("sehaohdjhhflzok")
                .withDefinition("nje")
                .withParameterSets(
                    Arrays
                        .asList(
                            new ActivityParameterSet().withName("tsxoatftgz").withParameters(Arrays.asList()),
                            new ActivityParameterSet().withName("bs").withParameters(Arrays.asList())))
                .withOutputTypes(
                    Arrays
                        .asList(
                            new ActivityOutputType().withName("occsr").withType("zihmipgawtxxpky"),
                            new ActivityOutputType().withName("xcjxgrytfmpcy").withType("lrmcaykg"),
                            new ActivityOutputType().withName("oxuztrksx").withType("ndfcpfn")))
                .withCreationTime(OffsetDateTime.parse("2021-02-28T01:50:53Z"))
                .withLastModifiedTime(OffsetDateTime.parse("2021-10-03T06:25:21Z"))
                .withDescription("wkjaos");
        model = BinaryData.fromObject(model).toObject(ActivityInner.class);
        Assertions.assertEquals("sehaohdjhhflzok", model.id());
        Assertions.assertEquals("nje", model.definition());
        Assertions.assertEquals("tsxoatftgz", model.parameterSets().get(0).name());
        Assertions.assertEquals("occsr", model.outputTypes().get(0).name());
        Assertions.assertEquals("zihmipgawtxxpky", model.outputTypes().get(0).type());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-28T01:50:53Z"), model.creationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-03T06:25:21Z"), model.lastModifiedTime());
        Assertions.assertEquals("wkjaos", model.description());
    }
}
