// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.models.DeletedAutomationAccount;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class DeletedAutomationAccountTests {
    @Test
    public void testDeserialize() {
        DeletedAutomationAccount model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"automationAccountResourceId\":\"vfxzsjab\",\"automationAccountId\":\"systawfsdjp\",\"location\":\"vp\",\"deletionTime\":\"2021-09-03T15:00:47Z\"},\"id\":\"kzbzkdvncjabudu\",\"name\":\"kakmokzh\",\"type\":\"klff\",\"location\":\"ouw\"}")
                .toObject(DeletedAutomationAccount.class);
        Assertions.assertEquals("kzbzkdvncjabudu", model.id());
        Assertions.assertEquals("kakmokzh", model.name());
        Assertions.assertEquals("klff", model.type());
        Assertions.assertEquals("ouw", model.location());
        Assertions.assertEquals("vfxzsjab", model.automationAccountResourceId());
        Assertions.assertEquals("systawfsdjp", model.automationAccountId());
        Assertions.assertEquals("vp", model.locationPropertiesLocation());
    }

    @Test
    public void testSerialize() {
        DeletedAutomationAccount model =
            new DeletedAutomationAccount()
                .withId("kzbzkdvncjabudu")
                .withName("kakmokzh")
                .withType("klff")
                .withLocation("ouw")
                .withAutomationAccountResourceId("vfxzsjab")
                .withAutomationAccountId("systawfsdjp")
                .withLocationPropertiesLocation("vp");
        model = BinaryData.fromObject(model).toObject(DeletedAutomationAccount.class);
        Assertions.assertEquals("kzbzkdvncjabudu", model.id());
        Assertions.assertEquals("kakmokzh", model.name());
        Assertions.assertEquals("klff", model.type());
        Assertions.assertEquals("ouw", model.location());
        Assertions.assertEquals("vfxzsjab", model.automationAccountResourceId());
        Assertions.assertEquals("systawfsdjp", model.automationAccountId());
        Assertions.assertEquals("vp", model.locationPropertiesLocation());
    }
}
