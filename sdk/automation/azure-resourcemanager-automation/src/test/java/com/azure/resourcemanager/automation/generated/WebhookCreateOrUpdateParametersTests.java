// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.models.RunbookAssociationProperty;
import com.azure.resourcemanager.automation.models.WebhookCreateOrUpdateParameters;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class WebhookCreateOrUpdateParametersTests {
    @Test
    public void testDeserialize() {
        WebhookCreateOrUpdateParameters model =
            BinaryData
                .fromString(
                    "{\"name\":\"tpuqujmq\",\"properties\":{\"isEnabled\":true,\"uri\":\"btndo\",\"expiryTime\":\"2021-05-03T08:21:34Z\",\"parameters\":{\"tcje\":\"jcntuj\",\"zfoqouicybxar\":\"ftwwaezkojvdc\",\"amcio\":\"gszufoxciqopid\"},\"runbook\":{\"name\":\"haz\"},\"runOn\":\"hnzbonl\"}}")
                .toObject(WebhookCreateOrUpdateParameters.class);
        Assertions.assertEquals("tpuqujmq", model.name());
        Assertions.assertEquals(true, model.isEnabled());
        Assertions.assertEquals("btndo", model.uri());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-03T08:21:34Z"), model.expiryTime());
        Assertions.assertEquals("jcntuj", model.parameters().get("tcje"));
        Assertions.assertEquals("haz", model.runbook().name());
        Assertions.assertEquals("hnzbonl", model.runOn());
    }

    @Test
    public void testSerialize() {
        WebhookCreateOrUpdateParameters model =
            new WebhookCreateOrUpdateParameters()
                .withName("tpuqujmq")
                .withIsEnabled(true)
                .withUri("btndo")
                .withExpiryTime(OffsetDateTime.parse("2021-05-03T08:21:34Z"))
                .withParameters(mapOf("tcje", "jcntuj", "zfoqouicybxar", "ftwwaezkojvdc", "amcio", "gszufoxciqopid"))
                .withRunbook(new RunbookAssociationProperty().withName("haz"))
                .withRunOn("hnzbonl");
        model = BinaryData.fromObject(model).toObject(WebhookCreateOrUpdateParameters.class);
        Assertions.assertEquals("tpuqujmq", model.name());
        Assertions.assertEquals(true, model.isEnabled());
        Assertions.assertEquals("btndo", model.uri());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-03T08:21:34Z"), model.expiryTime());
        Assertions.assertEquals("jcntuj", model.parameters().get("tcje"));
        Assertions.assertEquals("haz", model.runbook().name());
        Assertions.assertEquals("hnzbonl", model.runOn());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
