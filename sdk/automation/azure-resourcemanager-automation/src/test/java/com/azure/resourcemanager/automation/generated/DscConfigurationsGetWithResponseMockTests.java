// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.automation.AutomationManager;
import com.azure.resourcemanager.automation.models.ContentSourceType;
import com.azure.resourcemanager.automation.models.DscConfiguration;
import com.azure.resourcemanager.automation.models.DscConfigurationProvisioningState;
import com.azure.resourcemanager.automation.models.DscConfigurationState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DscConfigurationsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Succeeded\",\"jobCount\":516483149,\"parameters\":{\"lxcznn\":{\"type\":\"zomucmqgisnionet\",\"isMandatory\":false,\"position\":1835090723,\"defaultValue\":\"uenxkgtlzlmt\"},\"reesrfwsszvl\":{\"type\":\"kbnbmxlxmwtyg\",\"isMandatory\":true,\"position\":926783353,\"defaultValue\":\"toqcahfsgbjm\"},\"xxbaizabuln\":{\"type\":\"lisolntfxxc\",\"isMandatory\":false,\"position\":1551804037,\"defaultValue\":\"jwfoygizms\"},\"paydhfn\":{\"type\":\"skjto\",\"isMandatory\":false,\"position\":1563389723,\"defaultValue\":\"jznvhxqqmq\"}},\"source\":{\"hash\":{\"algorithm\":\"xmtf\",\"value\":\"hksnyzmspamwbw\"},\"type\":\"embeddedContent\",\"value\":\"slce\",\"version\":\"qdktwtkvihlp\"},\"state\":\"Published\",\"logVerbose\":true,\"creationTime\":\"2021-10-22T14:58:24Z\",\"lastModifiedTime\":\"2021-07-21T09:40:34Z\",\"nodeConfigurationCount\":876578964,\"description\":\"wvladpcmhjh\"},\"etag\":\"sybkekymffzt\",\"location\":\"ilscv\",\"tags\":{\"ihyeseu\":\"eiihfymko\",\"gsmgb\":\"gcigzh\",\"wrqbebjnfv\":\"mt\"},\"id\":\"glab\",\"name\":\"vkbiw\",\"type\":\"nhtfgfi\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AutomationManager manager = AutomationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        DscConfiguration response = manager.dscConfigurations()
            .getWithResponse("tpfdzxcouzfwofwa", "ukz", "dtzxsoe", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("ilscv", response.location());
        Assertions.assertEquals("eiihfymko", response.tags().get("ihyeseu"));
        Assertions.assertEquals("sybkekymffzt", response.etag());
        Assertions.assertEquals(DscConfigurationProvisioningState.SUCCEEDED, response.provisioningState());
        Assertions.assertEquals(516483149, response.jobCount());
        Assertions.assertEquals("zomucmqgisnionet", response.parameters().get("lxcznn").type());
        Assertions.assertEquals(false, response.parameters().get("lxcznn").isMandatory());
        Assertions.assertEquals(1835090723, response.parameters().get("lxcznn").position());
        Assertions.assertEquals("uenxkgtlzlmt", response.parameters().get("lxcznn").defaultValue());
        Assertions.assertEquals("xmtf", response.source().hash().algorithm());
        Assertions.assertEquals("hksnyzmspamwbw", response.source().hash().value());
        Assertions.assertEquals(ContentSourceType.EMBEDDED_CONTENT, response.source().type());
        Assertions.assertEquals("slce", response.source().value());
        Assertions.assertEquals("qdktwtkvihlp", response.source().version());
        Assertions.assertEquals(DscConfigurationState.PUBLISHED, response.state());
        Assertions.assertEquals(true, response.logVerbose());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-22T14:58:24Z"), response.creationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-21T09:40:34Z"), response.lastModifiedTime());
        Assertions.assertEquals(876578964, response.nodeConfigurationCount());
        Assertions.assertEquals("wvladpcmhjh", response.description());
    }
}
