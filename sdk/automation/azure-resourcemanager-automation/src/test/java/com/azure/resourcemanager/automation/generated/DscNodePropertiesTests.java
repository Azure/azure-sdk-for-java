// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.fluent.models.DscNodeProperties;
import com.azure.resourcemanager.automation.models.DscNodeExtensionHandlerAssociationProperty;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class DscNodePropertiesTests {
    @Test
    public void testDeserialize() {
        DscNodeProperties model =
            BinaryData
                .fromString(
                    "{\"lastSeen\":\"2021-08-17T04:19:07Z\",\"registrationTime\":\"2021-08-25T14:25:06Z\",\"ip\":\"qulngsntnbybkzgc\",\"accountId\":\"wclxxwrl\",\"nodeConfiguration\":{\"name\":\"uskcqvkocrcj\"},\"status\":\"wtnhxbnjbiksqr\",\"nodeId\":\"ssainqpjwnzll\",\"etag\":\"mppeebvmgxs\",\"totalCount\":253386723,\"extensionHandler\":[{\"name\":\"uujitcjc\",\"version\":\"zevndhkrwpdappds\"},{\"name\":\"kvwrwjfeu\",\"version\":\"hutje\"},{\"name\":\"mrldhu\",\"version\":\"zzd\"},{\"name\":\"qxhocdgeablgphut\",\"version\":\"ndv\"}]}")
                .toObject(DscNodeProperties.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-17T04:19:07Z"), model.lastSeen());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-25T14:25:06Z"), model.registrationTime());
        Assertions.assertEquals("qulngsntnbybkzgc", model.ip());
        Assertions.assertEquals("wclxxwrl", model.accountId());
        Assertions.assertEquals("wtnhxbnjbiksqr", model.status());
        Assertions.assertEquals("ssainqpjwnzll", model.nodeId());
        Assertions.assertEquals("mppeebvmgxs", model.etag());
        Assertions.assertEquals(253386723, model.totalCount());
        Assertions.assertEquals("uujitcjc", model.extensionHandler().get(0).name());
        Assertions.assertEquals("zevndhkrwpdappds", model.extensionHandler().get(0).version());
        Assertions.assertEquals("uskcqvkocrcj", model.name());
    }

    @Test
    public void testSerialize() {
        DscNodeProperties model =
            new DscNodeProperties()
                .withLastSeen(OffsetDateTime.parse("2021-08-17T04:19:07Z"))
                .withRegistrationTime(OffsetDateTime.parse("2021-08-25T14:25:06Z"))
                .withIp("qulngsntnbybkzgc")
                .withAccountId("wclxxwrl")
                .withStatus("wtnhxbnjbiksqr")
                .withNodeId("ssainqpjwnzll")
                .withEtag("mppeebvmgxs")
                .withTotalCount(253386723)
                .withExtensionHandler(
                    Arrays
                        .asList(
                            new DscNodeExtensionHandlerAssociationProperty()
                                .withName("uujitcjc")
                                .withVersion("zevndhkrwpdappds"),
                            new DscNodeExtensionHandlerAssociationProperty().withName("kvwrwjfeu").withVersion("hutje"),
                            new DscNodeExtensionHandlerAssociationProperty().withName("mrldhu").withVersion("zzd"),
                            new DscNodeExtensionHandlerAssociationProperty()
                                .withName("qxhocdgeablgphut")
                                .withVersion("ndv")))
                .withName("uskcqvkocrcj");
        model = BinaryData.fromObject(model).toObject(DscNodeProperties.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-17T04:19:07Z"), model.lastSeen());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-25T14:25:06Z"), model.registrationTime());
        Assertions.assertEquals("qulngsntnbybkzgc", model.ip());
        Assertions.assertEquals("wclxxwrl", model.accountId());
        Assertions.assertEquals("wtnhxbnjbiksqr", model.status());
        Assertions.assertEquals("ssainqpjwnzll", model.nodeId());
        Assertions.assertEquals("mppeebvmgxs", model.etag());
        Assertions.assertEquals(253386723, model.totalCount());
        Assertions.assertEquals("uujitcjc", model.extensionHandler().get(0).name());
        Assertions.assertEquals("zevndhkrwpdappds", model.extensionHandler().get(0).version());
        Assertions.assertEquals("uskcqvkocrcj", model.name());
    }
}
