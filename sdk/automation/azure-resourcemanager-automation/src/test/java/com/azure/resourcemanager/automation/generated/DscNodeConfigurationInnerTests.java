// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.fluent.models.DscNodeConfigurationInner;
import com.azure.resourcemanager.automation.models.DscConfigurationAssociationProperty;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class DscNodeConfigurationInnerTests {
    @Test
    public void testDeserialize() {
        DscNodeConfigurationInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"lastModifiedTime\":\"2021-09-10T13:24:31Z\",\"creationTime\":\"2020-12-22T19:21:03Z\",\"configuration\":{\"name\":\"piqywnc\"},\"source\":\"tszcofizehtdhgb\",\"nodeCount\":7931419591420767379,\"incrementNodeConfigurationBuild\":false},\"id\":\"jeamurv\",\"name\":\"mlovuanashcxl\",\"type\":\"mjerbdk\"}")
                .toObject(DscNodeConfigurationInner.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-10T13:24:31Z"), model.lastModifiedTime());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-22T19:21:03Z"), model.creationTime());
        Assertions.assertEquals("piqywnc", model.configuration().name());
        Assertions.assertEquals("tszcofizehtdhgb", model.source());
        Assertions.assertEquals(7931419591420767379L, model.nodeCount());
        Assertions.assertEquals(false, model.incrementNodeConfigurationBuild());
    }

    @Test
    public void testSerialize() {
        DscNodeConfigurationInner model =
            new DscNodeConfigurationInner()
                .withLastModifiedTime(OffsetDateTime.parse("2021-09-10T13:24:31Z"))
                .withCreationTime(OffsetDateTime.parse("2020-12-22T19:21:03Z"))
                .withConfiguration(new DscConfigurationAssociationProperty().withName("piqywnc"))
                .withSource("tszcofizehtdhgb")
                .withNodeCount(7931419591420767379L)
                .withIncrementNodeConfigurationBuild(false);
        model = BinaryData.fromObject(model).toObject(DscNodeConfigurationInner.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-10T13:24:31Z"), model.lastModifiedTime());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-22T19:21:03Z"), model.creationTime());
        Assertions.assertEquals("piqywnc", model.configuration().name());
        Assertions.assertEquals("tszcofizehtdhgb", model.source());
        Assertions.assertEquals(7931419591420767379L, model.nodeCount());
        Assertions.assertEquals(false, model.incrementNodeConfigurationBuild());
    }
}
