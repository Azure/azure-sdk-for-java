// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.models.LinuxProperties;
import com.azure.resourcemanager.automation.models.LinuxUpdateClasses;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class LinuxPropertiesTests {
    @Test
    public void testDeserialize() {
        LinuxProperties model =
            BinaryData
                .fromString(
                    "{\"includedPackageClassifications\":\"Other\",\"excludedPackageNameMasks\":[\"ozfikdowwq\"],\"includedPackageNameMasks\":[\"xzxcl\"],\"rebootSetting\":\"thhqzonosggbh\"}")
                .toObject(LinuxProperties.class);
        Assertions.assertEquals(LinuxUpdateClasses.OTHER, model.includedPackageClassifications());
        Assertions.assertEquals("ozfikdowwq", model.excludedPackageNameMasks().get(0));
        Assertions.assertEquals("xzxcl", model.includedPackageNameMasks().get(0));
        Assertions.assertEquals("thhqzonosggbh", model.rebootSetting());
    }

    @Test
    public void testSerialize() {
        LinuxProperties model =
            new LinuxProperties()
                .withIncludedPackageClassifications(LinuxUpdateClasses.OTHER)
                .withExcludedPackageNameMasks(Arrays.asList("ozfikdowwq"))
                .withIncludedPackageNameMasks(Arrays.asList("xzxcl"))
                .withRebootSetting("thhqzonosggbh");
        model = BinaryData.fromObject(model).toObject(LinuxProperties.class);
        Assertions.assertEquals(LinuxUpdateClasses.OTHER, model.includedPackageClassifications());
        Assertions.assertEquals("ozfikdowwq", model.excludedPackageNameMasks().get(0));
        Assertions.assertEquals("xzxcl", model.includedPackageNameMasks().get(0));
        Assertions.assertEquals("thhqzonosggbh", model.rebootSetting());
    }
}
