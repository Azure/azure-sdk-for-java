// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.automation.AutomationManager;
import com.azure.resourcemanager.automation.models.Webhook;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WebhooksGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"isEnabled\":true,\"uri\":\"ytkztadopgf\",\"expiryTime\":\"2021-06-10T11:13:55Z\",\"lastInvokedTime\":\"2021-11-22T22:00:57Z\",\"parameters\":{\"qkzjuqwqaj\":\"crsvloyyhi\"},\"runbook\":{\"name\":\"x\"},\"runOn\":\"xhyoip\",\"creationTime\":\"2021-03-02T12:04:45Z\",\"lastModifiedTime\":\"2021-06-19T04:32:27Z\",\"lastModifiedBy\":\"oscienezfvbe\",\"description\":\"mfkbpjnrtekwwn\"},\"id\":\"hropmdu\",\"name\":\"syiurzt\",\"type\":\"ktjhffe\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AutomationManager manager = AutomationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Webhook response = manager.webhooks()
            .getWithResponse("psvyouweuiyxfw", "ztsm", "fbevyllz", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(true, response.isEnabled());
        Assertions.assertEquals("ytkztadopgf", response.uri());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-10T11:13:55Z"), response.expiryTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-22T22:00:57Z"), response.lastInvokedTime());
        Assertions.assertEquals("crsvloyyhi", response.parameters().get("qkzjuqwqaj"));
        Assertions.assertEquals("x", response.runbook().name());
        Assertions.assertEquals("xhyoip", response.runOn());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-02T12:04:45Z"), response.creationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-19T04:32:27Z"), response.lastModifiedTime());
        Assertions.assertEquals("oscienezfvbe", response.lastModifiedBy());
        Assertions.assertEquals("mfkbpjnrtekwwn", response.description());
    }
}
