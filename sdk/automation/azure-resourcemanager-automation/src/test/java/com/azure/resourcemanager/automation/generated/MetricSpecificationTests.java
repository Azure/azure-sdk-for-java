// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.models.Dimension;
import com.azure.resourcemanager.automation.models.MetricSpecification;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class MetricSpecificationTests {
    @Test
    public void testDeserialize() {
        MetricSpecification model =
            BinaryData
                .fromString(
                    "{\"name\":\"chrszi\",\"displayName\":\"yuel\",\"displayDescription\":\"tn\",\"unit\":\"bf\",\"aggregationType\":\"ggagfln\",\"dimensions\":[{\"name\":\"rwahzjmucftbyr\",\"displayName\":\"rohkpigqfusu\"},{\"name\":\"zmkw\",\"displayName\":\"snoxaxmqeqa\"}]}")
                .toObject(MetricSpecification.class);
        Assertions.assertEquals("chrszi", model.name());
        Assertions.assertEquals("yuel", model.displayName());
        Assertions.assertEquals("tn", model.displayDescription());
        Assertions.assertEquals("bf", model.unit());
        Assertions.assertEquals("ggagfln", model.aggregationType());
        Assertions.assertEquals("rwahzjmucftbyr", model.dimensions().get(0).name());
        Assertions.assertEquals("rohkpigqfusu", model.dimensions().get(0).displayName());
    }

    @Test
    public void testSerialize() {
        MetricSpecification model =
            new MetricSpecification()
                .withName("chrszi")
                .withDisplayName("yuel")
                .withDisplayDescription("tn")
                .withUnit("bf")
                .withAggregationType("ggagfln")
                .withDimensions(
                    Arrays
                        .asList(
                            new Dimension().withName("rwahzjmucftbyr").withDisplayName("rohkpigqfusu"),
                            new Dimension().withName("zmkw").withDisplayName("snoxaxmqeqa")));
        model = BinaryData.fromObject(model).toObject(MetricSpecification.class);
        Assertions.assertEquals("chrszi", model.name());
        Assertions.assertEquals("yuel", model.displayName());
        Assertions.assertEquals("tn", model.displayDescription());
        Assertions.assertEquals("bf", model.unit());
        Assertions.assertEquals("ggagfln", model.aggregationType());
        Assertions.assertEquals("rwahzjmucftbyr", model.dimensions().get(0).name());
        Assertions.assertEquals("rohkpigqfusu", model.dimensions().get(0).displayName());
    }
}
