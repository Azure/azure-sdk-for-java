// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.fluent.models.DscNodeConfigurationProperties;
import com.azure.resourcemanager.automation.models.DscConfigurationAssociationProperty;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class DscNodeConfigurationPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DscNodeConfigurationProperties model = BinaryData.fromString(
            "{\"lastModifiedTime\":\"2021-12-04T10:30:44Z\",\"creationTime\":\"2021-04-18T09:38:59Z\",\"configuration\":{\"name\":\"dxorrqnbpoczv\"},\"source\":\"fqrvkdvjsllrmvvd\",\"nodeCount\":5974315112474207956,\"incrementNodeConfigurationBuild\":true}")
            .toObject(DscNodeConfigurationProperties.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-12-04T10:30:44Z"), model.lastModifiedTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-18T09:38:59Z"), model.creationTime());
        Assertions.assertEquals("dxorrqnbpoczv", model.configuration().name());
        Assertions.assertEquals("fqrvkdvjsllrmvvd", model.source());
        Assertions.assertEquals(5974315112474207956L, model.nodeCount());
        Assertions.assertEquals(true, model.incrementNodeConfigurationBuild());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DscNodeConfigurationProperties model
            = new DscNodeConfigurationProperties().withLastModifiedTime(OffsetDateTime.parse("2021-12-04T10:30:44Z"))
                .withCreationTime(OffsetDateTime.parse("2021-04-18T09:38:59Z"))
                .withConfiguration(new DscConfigurationAssociationProperty().withName("dxorrqnbpoczv"))
                .withSource("fqrvkdvjsllrmvvd")
                .withNodeCount(5974315112474207956L)
                .withIncrementNodeConfigurationBuild(true);
        model = BinaryData.fromObject(model).toObject(DscNodeConfigurationProperties.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-12-04T10:30:44Z"), model.lastModifiedTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-18T09:38:59Z"), model.creationTime());
        Assertions.assertEquals("dxorrqnbpoczv", model.configuration().name());
        Assertions.assertEquals("fqrvkdvjsllrmvvd", model.source());
        Assertions.assertEquals(5974315112474207956L, model.nodeCount());
        Assertions.assertEquals(true, model.incrementNodeConfigurationBuild());
    }
}
