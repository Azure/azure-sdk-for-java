// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.fluent.models.DscNodeConfigurationProperties;
import com.azure.resourcemanager.automation.models.DscConfigurationAssociationProperty;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class DscNodeConfigurationPropertiesTests {
    @Test
    public void testDeserialize() {
        DscNodeConfigurationProperties model =
            BinaryData
                .fromString(
                    "{\"lastModifiedTime\":\"2021-04-11T08:59:31Z\",\"creationTime\":\"2021-06-28T18:00:54Z\",\"configuration\":{\"name\":\"ozsdbccxj\"},\"source\":\"nfdgn\",\"nodeCount\":656969716634359804,\"incrementNodeConfigurationBuild\":false}")
                .toObject(DscNodeConfigurationProperties.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-11T08:59:31Z"), model.lastModifiedTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-28T18:00:54Z"), model.creationTime());
        Assertions.assertEquals("ozsdbccxj", model.configuration().name());
        Assertions.assertEquals("nfdgn", model.source());
        Assertions.assertEquals(656969716634359804L, model.nodeCount());
        Assertions.assertEquals(false, model.incrementNodeConfigurationBuild());
    }

    @Test
    public void testSerialize() {
        DscNodeConfigurationProperties model =
            new DscNodeConfigurationProperties()
                .withLastModifiedTime(OffsetDateTime.parse("2021-04-11T08:59:31Z"))
                .withCreationTime(OffsetDateTime.parse("2021-06-28T18:00:54Z"))
                .withConfiguration(new DscConfigurationAssociationProperty().withName("ozsdbccxj"))
                .withSource("nfdgn")
                .withNodeCount(656969716634359804L)
                .withIncrementNodeConfigurationBuild(false);
        model = BinaryData.fromObject(model).toObject(DscNodeConfigurationProperties.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-11T08:59:31Z"), model.lastModifiedTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-28T18:00:54Z"), model.creationTime());
        Assertions.assertEquals("ozsdbccxj", model.configuration().name());
        Assertions.assertEquals("nfdgn", model.source());
        Assertions.assertEquals(656969716634359804L, model.nodeCount());
        Assertions.assertEquals(false, model.incrementNodeConfigurationBuild());
    }
}
