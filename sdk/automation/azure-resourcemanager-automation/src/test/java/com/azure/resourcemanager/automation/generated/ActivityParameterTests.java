// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.models.ActivityParameter;
import com.azure.resourcemanager.automation.models.ActivityParameterValidationSet;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class ActivityParameterTests {
    @Test
    public void testDeserialize() {
        ActivityParameter model =
            BinaryData
                .fromString(
                    "{\"name\":\"ckpggqoweyird\",\"type\":\"isngwflqqmpizru\",\"isMandatory\":false,\"isDynamic\":true,\"position\":3080775087260686534,\"valueFromPipeline\":false,\"valueFromPipelineByPropertyName\":false,\"valueFromRemainingArguments\":false,\"description\":\"aas\",\"validationSet\":[{\"memberValue\":\"mkzjvkviir\"},{\"memberValue\":\"fgrwsdpgratzvz\"},{\"memberValue\":\"lbyvictctbrxkjzw\"}]}")
                .toObject(ActivityParameter.class);
        Assertions.assertEquals("ckpggqoweyird", model.name());
        Assertions.assertEquals("isngwflqqmpizru", model.type());
        Assertions.assertEquals(false, model.isMandatory());
        Assertions.assertEquals(true, model.isDynamic());
        Assertions.assertEquals(3080775087260686534L, model.position());
        Assertions.assertEquals(false, model.valueFromPipeline());
        Assertions.assertEquals(false, model.valueFromPipelineByPropertyName());
        Assertions.assertEquals(false, model.valueFromRemainingArguments());
        Assertions.assertEquals("aas", model.description());
        Assertions.assertEquals("mkzjvkviir", model.validationSet().get(0).memberValue());
    }

    @Test
    public void testSerialize() {
        ActivityParameter model =
            new ActivityParameter()
                .withName("ckpggqoweyird")
                .withType("isngwflqqmpizru")
                .withIsMandatory(false)
                .withIsDynamic(true)
                .withPosition(3080775087260686534L)
                .withValueFromPipeline(false)
                .withValueFromPipelineByPropertyName(false)
                .withValueFromRemainingArguments(false)
                .withDescription("aas")
                .withValidationSet(
                    Arrays
                        .asList(
                            new ActivityParameterValidationSet().withMemberValue("mkzjvkviir"),
                            new ActivityParameterValidationSet().withMemberValue("fgrwsdpgratzvz"),
                            new ActivityParameterValidationSet().withMemberValue("lbyvictctbrxkjzw")));
        model = BinaryData.fromObject(model).toObject(ActivityParameter.class);
        Assertions.assertEquals("ckpggqoweyird", model.name());
        Assertions.assertEquals("isngwflqqmpizru", model.type());
        Assertions.assertEquals(false, model.isMandatory());
        Assertions.assertEquals(true, model.isDynamic());
        Assertions.assertEquals(3080775087260686534L, model.position());
        Assertions.assertEquals(false, model.valueFromPipeline());
        Assertions.assertEquals(false, model.valueFromPipelineByPropertyName());
        Assertions.assertEquals(false, model.valueFromRemainingArguments());
        Assertions.assertEquals("aas", model.description());
        Assertions.assertEquals("mkzjvkviir", model.validationSet().get(0).memberValue());
    }
}
