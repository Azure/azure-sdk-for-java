// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.models.ActivityParameter;
import com.azure.resourcemanager.automation.models.ActivityParameterValidationSet;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ActivityParameterTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ActivityParameter model = BinaryData.fromString(
            "{\"name\":\"qonmacj\",\"type\":\"nizshqvcim\",\"isMandatory\":true,\"isDynamic\":false,\"position\":278724514924686542,\"valueFromPipeline\":false,\"valueFromPipelineByPropertyName\":false,\"valueFromRemainingArguments\":false,\"description\":\"dxsm\",\"validationSet\":[{\"memberValue\":\"rwfscjfnynszquj\"},{\"memberValue\":\"dvoqyt\"}]}")
            .toObject(ActivityParameter.class);
        Assertions.assertEquals("qonmacj", model.name());
        Assertions.assertEquals("nizshqvcim", model.type());
        Assertions.assertEquals(true, model.isMandatory());
        Assertions.assertEquals(false, model.isDynamic());
        Assertions.assertEquals(278724514924686542L, model.position());
        Assertions.assertEquals(false, model.valueFromPipeline());
        Assertions.assertEquals(false, model.valueFromPipelineByPropertyName());
        Assertions.assertEquals(false, model.valueFromRemainingArguments());
        Assertions.assertEquals("dxsm", model.description());
        Assertions.assertEquals("rwfscjfnynszquj", model.validationSet().get(0).memberValue());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ActivityParameter model = new ActivityParameter().withName("qonmacj")
            .withType("nizshqvcim")
            .withIsMandatory(true)
            .withIsDynamic(false)
            .withPosition(278724514924686542L)
            .withValueFromPipeline(false)
            .withValueFromPipelineByPropertyName(false)
            .withValueFromRemainingArguments(false)
            .withDescription("dxsm")
            .withValidationSet(Arrays.asList(new ActivityParameterValidationSet().withMemberValue("rwfscjfnynszquj"),
                new ActivityParameterValidationSet().withMemberValue("dvoqyt")));
        model = BinaryData.fromObject(model).toObject(ActivityParameter.class);
        Assertions.assertEquals("qonmacj", model.name());
        Assertions.assertEquals("nizshqvcim", model.type());
        Assertions.assertEquals(true, model.isMandatory());
        Assertions.assertEquals(false, model.isDynamic());
        Assertions.assertEquals(278724514924686542L, model.position());
        Assertions.assertEquals(false, model.valueFromPipeline());
        Assertions.assertEquals(false, model.valueFromPipelineByPropertyName());
        Assertions.assertEquals(false, model.valueFromRemainingArguments());
        Assertions.assertEquals("dxsm", model.description());
        Assertions.assertEquals("rwfscjfnynszquj", model.validationSet().get(0).memberValue());
    }
}
