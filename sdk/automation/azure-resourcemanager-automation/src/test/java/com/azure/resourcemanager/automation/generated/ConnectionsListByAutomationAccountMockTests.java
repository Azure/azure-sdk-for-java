// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.automation.AutomationManager;
import com.azure.resourcemanager.automation.models.Connection;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ConnectionsListByAutomationAccountMockTests {
    @Test
    public void testListByAutomationAccount() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"connectionType\":{\"name\":\"vragpokddx\"},\"fieldDefinitionValues\":{\"vgua\":\"h\",\"k\":\"tpt\",\"gbvoffbkk\":\"wkqyns\",\"zbnobr\":\"vdxaexqokmyrljia\"},\"creationTime\":\"2021-10-05T12:37:49Z\",\"lastModifiedTime\":\"2021-03-28T13:49:59Z\",\"description\":\"trpzuyudivbxnh\"},\"id\":\"qeae\",\"name\":\"nqelwgdhuru\",\"type\":\"y\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AutomationManager manager = AutomationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Connection> response
            = manager.connections().listByAutomationAccount("wmlmh", "nqtqea", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("vragpokddx", response.iterator().next().connectionType().name());
        Assertions.assertEquals("trpzuyudivbxnh", response.iterator().next().description());
    }
}
