// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.fluent.models.RunbookDraftInner;
import com.azure.resourcemanager.automation.models.ContentHash;
import com.azure.resourcemanager.automation.models.ContentLink;
import com.azure.resourcemanager.automation.models.RunbookParameter;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class RunbookDraftInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RunbookDraftInner model = BinaryData.fromString(
            "{\"inEdit\":true,\"draftContentLink\":{\"uri\":\"vzrrryveimi\",\"contentHash\":{\"algorithm\":\"kdyzatvfuzk\",\"value\":\"ftjvvruxwigsye\"},\"version\":\"qdsmjtg\"},\"creationTime\":\"2021-09-30T03:29:26Z\",\"lastModifiedTime\":\"2021-09-23T13:14:47Z\",\"parameters\":{\"oygbdgwumgxd\":{\"type\":\"leplkcsmk\",\"isMandatory\":true,\"position\":380559155,\"defaultValue\":\"aedorvvmqf\"},\"f\":{\"type\":\"hpabgdexjddvjs\",\"isMandatory\":true,\"position\":465482241,\"defaultValue\":\"mwllcolsrsxapt\"},\"xeslkhhustcpoqm\":{\"type\":\"xcgjokjljnhvlq\",\"isMandatory\":false,\"position\":1527452937,\"defaultValue\":\"eksnbksdqhjvyk\"},\"vkzykjtjknsxf\":{\"type\":\"nwqjwgokn\",\"isMandatory\":true,\"position\":1247903870,\"defaultValue\":\"xybwfdbkjbzten\"}},\"outputTypes\":[\"hcdpkupnqrmgj\",\"bpkuwxeoio\",\"fiz\",\"av\"]}")
            .toObject(RunbookDraftInner.class);
        Assertions.assertEquals(true, model.inEdit());
        Assertions.assertEquals("vzrrryveimi", model.draftContentLink().uri());
        Assertions.assertEquals("kdyzatvfuzk", model.draftContentLink().contentHash().algorithm());
        Assertions.assertEquals("ftjvvruxwigsye", model.draftContentLink().contentHash().value());
        Assertions.assertEquals("qdsmjtg", model.draftContentLink().version());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-30T03:29:26Z"), model.creationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-23T13:14:47Z"), model.lastModifiedTime());
        Assertions.assertEquals("leplkcsmk", model.parameters().get("oygbdgwumgxd").type());
        Assertions.assertEquals(true, model.parameters().get("oygbdgwumgxd").isMandatory());
        Assertions.assertEquals(380559155, model.parameters().get("oygbdgwumgxd").position());
        Assertions.assertEquals("aedorvvmqf", model.parameters().get("oygbdgwumgxd").defaultValue());
        Assertions.assertEquals("hcdpkupnqrmgj", model.outputTypes().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RunbookDraftInner model = new RunbookDraftInner().withInEdit(true)
            .withDraftContentLink(new ContentLink().withUri("vzrrryveimi")
                .withContentHash(new ContentHash().withAlgorithm("kdyzatvfuzk").withValue("ftjvvruxwigsye"))
                .withVersion("qdsmjtg"))
            .withCreationTime(OffsetDateTime.parse("2021-09-30T03:29:26Z"))
            .withLastModifiedTime(OffsetDateTime.parse("2021-09-23T13:14:47Z"))
            .withParameters(mapOf("oygbdgwumgxd",
                new RunbookParameter().withType("leplkcsmk")
                    .withIsMandatory(true)
                    .withPosition(380559155)
                    .withDefaultValue("aedorvvmqf"),
                "f",
                new RunbookParameter().withType("hpabgdexjddvjs")
                    .withIsMandatory(true)
                    .withPosition(465482241)
                    .withDefaultValue("mwllcolsrsxapt"),
                "xeslkhhustcpoqm",
                new RunbookParameter().withType("xcgjokjljnhvlq")
                    .withIsMandatory(false)
                    .withPosition(1527452937)
                    .withDefaultValue("eksnbksdqhjvyk"),
                "vkzykjtjknsxf",
                new RunbookParameter().withType("nwqjwgokn")
                    .withIsMandatory(true)
                    .withPosition(1247903870)
                    .withDefaultValue("xybwfdbkjbzten")))
            .withOutputTypes(Arrays.asList("hcdpkupnqrmgj", "bpkuwxeoio", "fiz", "av"));
        model = BinaryData.fromObject(model).toObject(RunbookDraftInner.class);
        Assertions.assertEquals(true, model.inEdit());
        Assertions.assertEquals("vzrrryveimi", model.draftContentLink().uri());
        Assertions.assertEquals("kdyzatvfuzk", model.draftContentLink().contentHash().algorithm());
        Assertions.assertEquals("ftjvvruxwigsye", model.draftContentLink().contentHash().value());
        Assertions.assertEquals("qdsmjtg", model.draftContentLink().version());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-30T03:29:26Z"), model.creationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-23T13:14:47Z"), model.lastModifiedTime());
        Assertions.assertEquals("leplkcsmk", model.parameters().get("oygbdgwumgxd").type());
        Assertions.assertEquals(true, model.parameters().get("oygbdgwumgxd").isMandatory());
        Assertions.assertEquals(380559155, model.parameters().get("oygbdgwumgxd").position());
        Assertions.assertEquals("aedorvvmqf", model.parameters().get("oygbdgwumgxd").defaultValue());
        Assertions.assertEquals("hcdpkupnqrmgj", model.outputTypes().get(0));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
