// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.models.OperatingSystemType;
import com.azure.resourcemanager.automation.models.ScheduleFrequency;
import com.azure.resourcemanager.automation.models.SoftwareUpdateConfigurationCollectionItem;
import com.azure.resourcemanager.automation.models.SoftwareUpdateConfigurationTasks;
import com.azure.resourcemanager.automation.models.UpdateConfiguration;
import java.time.Duration;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class SoftwareUpdateConfigurationCollectionItemTests {
    @Test
    public void testDeserialize() {
        SoftwareUpdateConfigurationCollectionItem model =
            BinaryData
                .fromString(
                    "{\"name\":\"fkzikfj\",\"id\":\"n\",\"properties\":{\"updateConfiguration\":{\"operatingSystem\":\"Windows\",\"duration\":\"PT159H5M44S\",\"azureVirtualMachines\":[\"lpcirelsf\",\"aenwabf\",\"tkl\",\"dxbjhwuaanozj\"],\"nonAzureComputerNames\":[\"hyoulpjr\"]},\"tasks\":{},\"frequency\":\"Week\",\"startTime\":\"2021-06-08T10:47:02Z\",\"creationTime\":\"2021-12-02T22:45:57Z\",\"lastModifiedTime\":\"2021-08-04T10:49:52Z\",\"provisioningState\":\"tx\",\"nextRun\":\"2021-10-30T03:22:39Z\"}}")
                .toObject(SoftwareUpdateConfigurationCollectionItem.class);
        Assertions.assertEquals(OperatingSystemType.WINDOWS, model.updateConfiguration().operatingSystem());
        Assertions.assertEquals(Duration.parse("PT159H5M44S"), model.updateConfiguration().duration());
        Assertions.assertEquals("lpcirelsf", model.updateConfiguration().azureVirtualMachines().get(0));
        Assertions.assertEquals("hyoulpjr", model.updateConfiguration().nonAzureComputerNames().get(0));
        Assertions.assertEquals(ScheduleFrequency.WEEK, model.frequency());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-08T10:47:02Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-30T03:22:39Z"), model.nextRun());
    }

    @Test
    public void testSerialize() {
        SoftwareUpdateConfigurationCollectionItem model =
            new SoftwareUpdateConfigurationCollectionItem()
                .withUpdateConfiguration(
                    new UpdateConfiguration()
                        .withOperatingSystem(OperatingSystemType.WINDOWS)
                        .withDuration(Duration.parse("PT159H5M44S"))
                        .withAzureVirtualMachines(Arrays.asList("lpcirelsf", "aenwabf", "tkl", "dxbjhwuaanozj"))
                        .withNonAzureComputerNames(Arrays.asList("hyoulpjr")))
                .withTasks(new SoftwareUpdateConfigurationTasks())
                .withFrequency(ScheduleFrequency.WEEK)
                .withStartTime(OffsetDateTime.parse("2021-06-08T10:47:02Z"))
                .withNextRun(OffsetDateTime.parse("2021-10-30T03:22:39Z"));
        model = BinaryData.fromObject(model).toObject(SoftwareUpdateConfigurationCollectionItem.class);
        Assertions.assertEquals(OperatingSystemType.WINDOWS, model.updateConfiguration().operatingSystem());
        Assertions.assertEquals(Duration.parse("PT159H5M44S"), model.updateConfiguration().duration());
        Assertions.assertEquals("lpcirelsf", model.updateConfiguration().azureVirtualMachines().get(0));
        Assertions.assertEquals("hyoulpjr", model.updateConfiguration().nonAzureComputerNames().get(0));
        Assertions.assertEquals(ScheduleFrequency.WEEK, model.frequency());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-08T10:47:02Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-30T03:22:39Z"), model.nextRun());
    }
}
