// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.automation.AutomationManager;
import com.azure.resourcemanager.automation.models.SourceControl;
import com.azure.resourcemanager.automation.models.SourceType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SourceControlsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"repoUrl\":\"jrykwlefksxqce\",\"branch\":\"fpxgnmqvz\",\"folderPath\":\"uyqqaiosssc\",\"autoSync\":true,\"publishRunbook\":true,\"sourceType\":\"VsoGit\",\"description\":\"acvfyeowps\",\"creationTime\":\"2021-05-21T16:13:23Z\",\"lastModifiedTime\":\"2021-04-20T21:41:13Z\"},\"id\":\"hsoymhpvtyqf\",\"name\":\"tehdpboujs\",\"type\":\"kfvvdshxcde\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AutomationManager manager = AutomationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        SourceControl response = manager.sourceControls()
            .getWithResponse("mctsnldkpwo", "gisubxbt", "ogfg", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("jrykwlefksxqce", response.repoUrl());
        Assertions.assertEquals("fpxgnmqvz", response.branch());
        Assertions.assertEquals("uyqqaiosssc", response.folderPath());
        Assertions.assertEquals(true, response.autoSync());
        Assertions.assertEquals(true, response.publishRunbook());
        Assertions.assertEquals(SourceType.VSO_GIT, response.sourceType());
        Assertions.assertEquals("acvfyeowps", response.description());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-21T16:13:23Z"), response.creationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-20T21:41:13Z"), response.lastModifiedTime());
    }
}
