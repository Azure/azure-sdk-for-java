// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.fluent.models.PrivateEndpointConnectionInner;
import com.azure.resourcemanager.automation.models.PrivateEndpointConnectionListResult;
import com.azure.resourcemanager.automation.models.PrivateEndpointProperty;
import com.azure.resourcemanager.automation.models.PrivateLinkServiceConnectionStateProperty;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PrivateEndpointConnectionListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateEndpointConnectionListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"privateEndpoint\":{\"id\":\"vgjxpybczm\"},\"groupIds\":[\"tzopbsphrupidgsy\"],\"privateLinkServiceConnectionState\":{\"status\":\"jhphoyc\",\"description\":\"xaobhdxbmtqioqjz\",\"actionsRequired\":\"tbmufpo\"}},\"id\":\"noi\",\"name\":\"hwlrx\",\"type\":\"bqsoqijg\"},{\"properties\":{\"privateEndpoint\":{\"id\":\"pazlobcufpdz\"},\"groupIds\":[\"t\",\"qqjnqgl\"],\"privateLinkServiceConnectionState\":{\"status\":\"nufo\",\"description\":\"jywif\",\"actionsRequired\":\"esaagdfm\"}},\"id\":\"lzl\",\"name\":\"j\",\"type\":\"rifkwm\"},{\"properties\":{\"privateEndpoint\":{\"id\":\"siznto\"},\"groupIds\":[\"a\"],\"privateLinkServiceConnectionState\":{\"status\":\"jpsq\",\"description\":\"mpoyfd\",\"actionsRequired\":\"ogknygjofjdd\"}},\"id\":\"qs\",\"name\":\"deupewnwrei\",\"type\":\"jzyflu\"}]}")
            .toObject(PrivateEndpointConnectionListResult.class);
        Assertions.assertEquals("vgjxpybczm", model.value().get(0).privateEndpoint().id());
        Assertions.assertEquals("tzopbsphrupidgsy", model.value().get(0).groupIds().get(0));
        Assertions.assertEquals("jhphoyc", model.value().get(0).privateLinkServiceConnectionState().status());
        Assertions.assertEquals("xaobhdxbmtqioqjz",
            model.value().get(0).privateLinkServiceConnectionState().description());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateEndpointConnectionListResult model
            = new PrivateEndpointConnectionListResult()
                .withValue(Arrays.asList(
                    new PrivateEndpointConnectionInner()
                        .withPrivateEndpoint(new PrivateEndpointProperty().withId("vgjxpybczm"))
                        .withGroupIds(Arrays.asList("tzopbsphrupidgsy"))
                        .withPrivateLinkServiceConnectionState(
                            new PrivateLinkServiceConnectionStateProperty().withStatus("jhphoyc")
                                .withDescription("xaobhdxbmtqioqjz")),
                    new PrivateEndpointConnectionInner()
                        .withPrivateEndpoint(new PrivateEndpointProperty().withId("pazlobcufpdz"))
                        .withGroupIds(Arrays.asList("t", "qqjnqgl"))
                        .withPrivateLinkServiceConnectionState(
                            new PrivateLinkServiceConnectionStateProperty()
                                .withStatus("nufo")
                                .withDescription("jywif")),
                    new PrivateEndpointConnectionInner()
                        .withPrivateEndpoint(new PrivateEndpointProperty().withId("siznto"))
                        .withGroupIds(Arrays.asList("a"))
                        .withPrivateLinkServiceConnectionState(
                            new PrivateLinkServiceConnectionStateProperty().withStatus("jpsq")
                                .withDescription("mpoyfd"))));
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnectionListResult.class);
        Assertions.assertEquals("vgjxpybczm", model.value().get(0).privateEndpoint().id());
        Assertions.assertEquals("tzopbsphrupidgsy", model.value().get(0).groupIds().get(0));
        Assertions.assertEquals("jhphoyc", model.value().get(0).privateLinkServiceConnectionState().status());
        Assertions.assertEquals("xaobhdxbmtqioqjz",
            model.value().get(0).privateLinkServiceConnectionState().description());
    }
}
