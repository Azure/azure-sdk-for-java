// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.automation.AutomationManager;
import com.azure.resourcemanager.automation.models.JobStream;
import com.azure.resourcemanager.automation.models.JobStreamType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class JobStreamsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"id\":\"chwkib\",\"properties\":{\"jobStreamId\":\"ymncjc\",\"time\":\"2021-07-19T17:01:56Z\",\"streamType\":\"Error\",\"streamText\":\"cqzoofjnqjsve\",\"summary\":\"bhtleberpy\",\"value\":{\"j\":\"dataknfqnw\",\"xgkrh\":\"dataxowkdnj\",\"r\":\"dataiehycpnowawonoe\"}}}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AutomationManager manager = AutomationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        JobStream response = manager.jobStreams()
            .getWithResponse("ghnysvlpyeuu", "p", "dixqbo", "xvhhyqq", "gatxgrznmginmtsd",
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("chwkib", response.id());
        Assertions.assertEquals("ymncjc", response.jobStreamId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-19T17:01:56Z"), response.time());
        Assertions.assertEquals(JobStreamType.ERROR, response.streamType());
        Assertions.assertEquals("cqzoofjnqjsve", response.streamText());
        Assertions.assertEquals("bhtleberpy", response.summary());
    }
}
