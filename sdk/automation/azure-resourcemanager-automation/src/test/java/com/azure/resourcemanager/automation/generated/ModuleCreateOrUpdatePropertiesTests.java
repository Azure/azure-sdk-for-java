// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.fluent.models.ModuleCreateOrUpdateProperties;
import com.azure.resourcemanager.automation.models.ContentHash;
import com.azure.resourcemanager.automation.models.ContentLink;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class ModuleCreateOrUpdatePropertiesTests {
    @Test
    public void testDeserialize() {
        ModuleCreateOrUpdateProperties model =
            BinaryData
                .fromString(
                    "{\"contentLink\":{\"uri\":\"vuporqzdfuydzv\",\"contentHash\":{\"algorithm\":\"vxcnqmxqps\",\"value\":\"okmvkhlggd\"},\"version\":\"em\"}}")
                .toObject(ModuleCreateOrUpdateProperties.class);
        Assertions.assertEquals("vuporqzdfuydzv", model.contentLink().uri());
        Assertions.assertEquals("vxcnqmxqps", model.contentLink().contentHash().algorithm());
        Assertions.assertEquals("okmvkhlggd", model.contentLink().contentHash().value());
        Assertions.assertEquals("em", model.contentLink().version());
    }

    @Test
    public void testSerialize() {
        ModuleCreateOrUpdateProperties model =
            new ModuleCreateOrUpdateProperties()
                .withContentLink(
                    new ContentLink()
                        .withUri("vuporqzdfuydzv")
                        .withContentHash(new ContentHash().withAlgorithm("vxcnqmxqps").withValue("okmvkhlggd"))
                        .withVersion("em"));
        model = BinaryData.fromObject(model).toObject(ModuleCreateOrUpdateProperties.class);
        Assertions.assertEquals("vuporqzdfuydzv", model.contentLink().uri());
        Assertions.assertEquals("vxcnqmxqps", model.contentLink().contentHash().algorithm());
        Assertions.assertEquals("okmvkhlggd", model.contentLink().contentHash().value());
        Assertions.assertEquals("em", model.contentLink().version());
    }
}
