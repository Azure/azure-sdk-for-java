// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.fluent.models.ModuleCreateOrUpdateProperties;
import com.azure.resourcemanager.automation.models.ContentHash;
import com.azure.resourcemanager.automation.models.ContentLink;
import org.junit.jupiter.api.Assertions;

public final class ModuleCreateOrUpdatePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ModuleCreateOrUpdateProperties model = BinaryData.fromString(
            "{\"contentLink\":{\"uri\":\"pglydz\",\"contentHash\":{\"algorithm\":\"rvqeevtoepryutn\",\"value\":\"ytp\"},\"version\":\"mov\"}}")
            .toObject(ModuleCreateOrUpdateProperties.class);
        Assertions.assertEquals("pglydz", model.contentLink().uri());
        Assertions.assertEquals("rvqeevtoepryutn", model.contentLink().contentHash().algorithm());
        Assertions.assertEquals("ytp", model.contentLink().contentHash().value());
        Assertions.assertEquals("mov", model.contentLink().version());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ModuleCreateOrUpdateProperties model
            = new ModuleCreateOrUpdateProperties().withContentLink(new ContentLink().withUri("pglydz")
                .withContentHash(new ContentHash().withAlgorithm("rvqeevtoepryutn").withValue("ytp"))
                .withVersion("mov"));
        model = BinaryData.fromObject(model).toObject(ModuleCreateOrUpdateProperties.class);
        Assertions.assertEquals("pglydz", model.contentLink().uri());
        Assertions.assertEquals("rvqeevtoepryutn", model.contentLink().contentHash().algorithm());
        Assertions.assertEquals("ytp", model.contentLink().contentHash().value());
        Assertions.assertEquals("mov", model.contentLink().version());
    }
}
