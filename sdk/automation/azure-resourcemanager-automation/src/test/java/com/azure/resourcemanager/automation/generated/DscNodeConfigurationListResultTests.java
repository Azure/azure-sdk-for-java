// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.fluent.models.DscNodeConfigurationInner;
import com.azure.resourcemanager.automation.models.DscNodeConfigurationListResult;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class DscNodeConfigurationListResultTests {
    @Test
    public void testDeserialize() {
        DscNodeConfigurationListResult model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"lastModifiedTime\":\"2021-06-04T06:32:45Z\",\"creationTime\":\"2021-10-27T02:34:41Z\",\"source\":\"xmysuxswqrntv\",\"nodeCount\":7173540378190876196,\"incrementNodeConfigurationBuild\":false},\"id\":\"ttexoqqpwcyyufmh\",\"name\":\"uncuw\",\"type\":\"qspkcdqzhlctd\"}],\"nextLink\":\"nqndyfpchrqbn\",\"totalCount\":1719259510}")
                .toObject(DscNodeConfigurationListResult.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-04T06:32:45Z"), model.value().get(0).lastModifiedTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-27T02:34:41Z"), model.value().get(0).creationTime());
        Assertions.assertEquals("xmysuxswqrntv", model.value().get(0).source());
        Assertions.assertEquals(7173540378190876196L, model.value().get(0).nodeCount());
        Assertions.assertEquals(false, model.value().get(0).incrementNodeConfigurationBuild());
        Assertions.assertEquals("nqndyfpchrqbn", model.nextLink());
        Assertions.assertEquals(1719259510, model.totalCount());
    }

    @Test
    public void testSerialize() {
        DscNodeConfigurationListResult model =
            new DscNodeConfigurationListResult()
                .withValue(
                    Arrays
                        .asList(
                            new DscNodeConfigurationInner()
                                .withLastModifiedTime(OffsetDateTime.parse("2021-06-04T06:32:45Z"))
                                .withCreationTime(OffsetDateTime.parse("2021-10-27T02:34:41Z"))
                                .withSource("xmysuxswqrntv")
                                .withNodeCount(7173540378190876196L)
                                .withIncrementNodeConfigurationBuild(false)))
                .withNextLink("nqndyfpchrqbn")
                .withTotalCount(1719259510);
        model = BinaryData.fromObject(model).toObject(DscNodeConfigurationListResult.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-04T06:32:45Z"), model.value().get(0).lastModifiedTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-27T02:34:41Z"), model.value().get(0).creationTime());
        Assertions.assertEquals("xmysuxswqrntv", model.value().get(0).source());
        Assertions.assertEquals(7173540378190876196L, model.value().get(0).nodeCount());
        Assertions.assertEquals(false, model.value().get(0).incrementNodeConfigurationBuild());
        Assertions.assertEquals("nqndyfpchrqbn", model.nextLink());
        Assertions.assertEquals(1719259510, model.totalCount());
    }
}
