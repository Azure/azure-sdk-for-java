// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.fluent.models.ConnectionTypeInner;
import com.azure.resourcemanager.automation.models.ConnectionTypeListResult;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ConnectionTypeListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ConnectionTypeListResult model = BinaryData.fromString(
            "{\"value\":[{\"id\":\"okerqwkyhkobop\",\"name\":\"edkowepbqpcrfk\",\"type\":\"ccsnjvcdwxlpq\",\"properties\":{\"isGlobal\":false,\"fieldDefinitions\":{\"ngwfqatm\":{\"isEncrypted\":false,\"isOptional\":true,\"type\":\"y\"}},\"creationTime\":\"2021-10-16T18:24:23Z\",\"lastModifiedTime\":\"2021-01-16T13:50:23Z\",\"description\":\"vypgikdg\"}}],\"nextLink\":\"ywkbirryuzhlhkjo\"}")
            .toObject(ConnectionTypeListResult.class);
        Assertions.assertEquals(false, model.value().get(0).isGlobal());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-16T13:50:23Z"), model.value().get(0).lastModifiedTime());
        Assertions.assertEquals("vypgikdg", model.value().get(0).description());
        Assertions.assertEquals("ywkbirryuzhlhkjo", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ConnectionTypeListResult model
            = new ConnectionTypeListResult().withValue(Arrays.asList(new ConnectionTypeInner().withIsGlobal(false)
                .withLastModifiedTime(OffsetDateTime.parse("2021-01-16T13:50:23Z"))
                .withDescription("vypgikdg"))).withNextLink("ywkbirryuzhlhkjo");
        model = BinaryData.fromObject(model).toObject(ConnectionTypeListResult.class);
        Assertions.assertEquals(false, model.value().get(0).isGlobal());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-16T13:50:23Z"), model.value().get(0).lastModifiedTime());
        Assertions.assertEquals("vypgikdg", model.value().get(0).description());
        Assertions.assertEquals("ywkbirryuzhlhkjo", model.nextLink());
    }
}
