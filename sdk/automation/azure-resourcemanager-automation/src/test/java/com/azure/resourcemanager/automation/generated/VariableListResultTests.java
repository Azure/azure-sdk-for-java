// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.fluent.models.VariableInner;
import com.azure.resourcemanager.automation.models.VariableListResult;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class VariableListResultTests {
    @Test
    public void testDeserialize() {
        VariableListResult model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"value\":\"xaptefhexcgjok\",\"isEncrypted\":true,\"creationTime\":\"2021-07-12T13:20:03Z\",\"lastModifiedTime\":\"2021-05-17T10:53:35Z\",\"description\":\"jbekpeeksnbksdq\"},\"id\":\"jvyklxeslkhhust\",\"name\":\"poq\",\"type\":\"avnwqj\"},{\"properties\":{\"value\":\"knlejjjkxybwfd\",\"isEncrypted\":false,\"creationTime\":\"2021-03-05T16:27:21Z\",\"lastModifiedTime\":\"2021-02-27T00:12:17Z\",\"description\":\"svkzykj\"},\"id\":\"jknsxfwu\",\"name\":\"hcdpkupnqrmgj\",\"type\":\"bpkuwxeoio\"},{\"properties\":{\"value\":\"zfav\",\"isEncrypted\":true,\"creationTime\":\"2021-03-16T02:36:26Z\",\"lastModifiedTime\":\"2021-01-09T04:44:21Z\",\"description\":\"aykmmf\"},\"id\":\"sbfwxr\",\"name\":\"xmdewsrsxkrplbj\",\"type\":\"zej\"}],\"nextLink\":\"viyoypsuhbrnnhjx\"}")
                .toObject(VariableListResult.class);
        Assertions.assertEquals("xaptefhexcgjok", model.value().get(0).value());
        Assertions.assertEquals(true, model.value().get(0).isEncrypted());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-12T13:20:03Z"), model.value().get(0).creationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-17T10:53:35Z"), model.value().get(0).lastModifiedTime());
        Assertions.assertEquals("jbekpeeksnbksdq", model.value().get(0).description());
        Assertions.assertEquals("viyoypsuhbrnnhjx", model.nextLink());
    }

    @Test
    public void testSerialize() {
        VariableListResult model =
            new VariableListResult()
                .withValue(
                    Arrays
                        .asList(
                            new VariableInner()
                                .withValue("xaptefhexcgjok")
                                .withIsEncrypted(true)
                                .withCreationTime(OffsetDateTime.parse("2021-07-12T13:20:03Z"))
                                .withLastModifiedTime(OffsetDateTime.parse("2021-05-17T10:53:35Z"))
                                .withDescription("jbekpeeksnbksdq"),
                            new VariableInner()
                                .withValue("knlejjjkxybwfd")
                                .withIsEncrypted(false)
                                .withCreationTime(OffsetDateTime.parse("2021-03-05T16:27:21Z"))
                                .withLastModifiedTime(OffsetDateTime.parse("2021-02-27T00:12:17Z"))
                                .withDescription("svkzykj"),
                            new VariableInner()
                                .withValue("zfav")
                                .withIsEncrypted(true)
                                .withCreationTime(OffsetDateTime.parse("2021-03-16T02:36:26Z"))
                                .withLastModifiedTime(OffsetDateTime.parse("2021-01-09T04:44:21Z"))
                                .withDescription("aykmmf")))
                .withNextLink("viyoypsuhbrnnhjx");
        model = BinaryData.fromObject(model).toObject(VariableListResult.class);
        Assertions.assertEquals("xaptefhexcgjok", model.value().get(0).value());
        Assertions.assertEquals(true, model.value().get(0).isEncrypted());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-12T13:20:03Z"), model.value().get(0).creationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-17T10:53:35Z"), model.value().get(0).lastModifiedTime());
        Assertions.assertEquals("jbekpeeksnbksdq", model.value().get(0).description());
        Assertions.assertEquals("viyoypsuhbrnnhjx", model.nextLink());
    }
}
