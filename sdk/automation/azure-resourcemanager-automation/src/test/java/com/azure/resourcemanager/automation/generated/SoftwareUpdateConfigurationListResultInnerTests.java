// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.fluent.models.SoftwareUpdateConfigurationListResultInner;
import com.azure.resourcemanager.automation.models.ScheduleFrequency;
import com.azure.resourcemanager.automation.models.SoftwareUpdateConfigurationCollectionItem;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class SoftwareUpdateConfigurationListResultInnerTests {
    @Test
    public void testDeserialize() {
        SoftwareUpdateConfigurationListResultInner model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"name\":\"rhyrnxxmueed\",\"id\":\"rdvstkwqqtch\",\"properties\":{\"frequency\":\"Hour\",\"startTime\":\"2021-09-27T23:43:44Z\",\"creationTime\":\"2021-10-14T04:38:13Z\",\"lastModifiedTime\":\"2021-04-13T10:54:30Z\",\"provisioningState\":\"dvwvgpio\",\"nextRun\":\"2021-10-26T15:21:06Z\"}},{\"name\":\"rtfudxepxg\",\"id\":\"agvrvmnpkuk\",\"properties\":{\"frequency\":\"Hour\",\"startTime\":\"2021-03-18T18:34:05Z\",\"creationTime\":\"2021-03-26T20:34:31Z\",\"lastModifiedTime\":\"2021-02-15T12:58:28Z\",\"provisioningState\":\"fnjhfjxwmszkkfo\",\"nextRun\":\"2021-04-21T14:21:09Z\"}}]}")
                .toObject(SoftwareUpdateConfigurationListResultInner.class);
        Assertions.assertEquals(ScheduleFrequency.HOUR, model.value().get(0).frequency());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-27T23:43:44Z"), model.value().get(0).startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-26T15:21:06Z"), model.value().get(0).nextRun());
    }

    @Test
    public void testSerialize() {
        SoftwareUpdateConfigurationListResultInner model =
            new SoftwareUpdateConfigurationListResultInner()
                .withValue(
                    Arrays
                        .asList(
                            new SoftwareUpdateConfigurationCollectionItem()
                                .withFrequency(ScheduleFrequency.HOUR)
                                .withStartTime(OffsetDateTime.parse("2021-09-27T23:43:44Z"))
                                .withNextRun(OffsetDateTime.parse("2021-10-26T15:21:06Z")),
                            new SoftwareUpdateConfigurationCollectionItem()
                                .withFrequency(ScheduleFrequency.HOUR)
                                .withStartTime(OffsetDateTime.parse("2021-03-18T18:34:05Z"))
                                .withNextRun(OffsetDateTime.parse("2021-04-21T14:21:09Z"))));
        model = BinaryData.fromObject(model).toObject(SoftwareUpdateConfigurationListResultInner.class);
        Assertions.assertEquals(ScheduleFrequency.HOUR, model.value().get(0).frequency());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-27T23:43:44Z"), model.value().get(0).startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-26T15:21:06Z"), model.value().get(0).nextRun());
    }
}
