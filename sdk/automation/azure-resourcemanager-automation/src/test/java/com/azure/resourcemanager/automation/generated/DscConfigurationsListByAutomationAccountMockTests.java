// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.automation.AutomationManager;
import com.azure.resourcemanager.automation.models.ContentSourceType;
import com.azure.resourcemanager.automation.models.DscConfiguration;
import com.azure.resourcemanager.automation.models.DscConfigurationProvisioningState;
import com.azure.resourcemanager.automation.models.DscConfigurationState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DscConfigurationsListByAutomationAccountMockTests {
    @Test
    public void testListByAutomationAccount() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Succeeded\",\"jobCount\":1930899769,\"parameters\":{\"xdupnamg\":{\"type\":\"surejqrshzzbgu\",\"isMandatory\":false,\"position\":813655099,\"defaultValue\":\"qzjk\"},\"tktyhhmvfxlapj\":{\"type\":\"ouigdmfivjqte\",\"isMandatory\":false,\"position\":1217537704,\"defaultValue\":\"dydkghpcvrwqir\"}},\"source\":{\"hash\":{\"algorithm\":\"dmkr\",\"value\":\"wepgqvqokql\"},\"type\":\"embeddedContent\",\"value\":\"ira\",\"version\":\"lyvxchp\"},\"state\":\"Edit\",\"logVerbose\":false,\"creationTime\":\"2021-09-07T09:47:29Z\",\"lastModifiedTime\":\"2021-06-18T01:25:06Z\",\"nodeConfigurationCount\":358508582,\"description\":\"s\"},\"etag\":\"stvzuzhasupml\",\"location\":\"pdpg\",\"tags\":{\"gruatsyiysjqheni\":\"qazvbkarkptgo\",\"ysc\":\"beqngubabyjde\"},\"id\":\"ey\",\"name\":\"zjemexmnvkvm\",\"type\":\"wrxlniwmcpmrrdlh\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AutomationManager manager = AutomationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<DscConfiguration> response = manager.dscConfigurations()
            .listByAutomationAccount("itwhrjsdmmazdnck", "dbjp", "lhzqpxzbawkikcdg", 396503626, 1005303614,
                "ssdpjeyoqxded", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("pdpg", response.iterator().next().location());
        Assertions.assertEquals("qazvbkarkptgo", response.iterator().next().tags().get("gruatsyiysjqheni"));
        Assertions.assertEquals("stvzuzhasupml", response.iterator().next().etag());
        Assertions.assertEquals(DscConfigurationProvisioningState.SUCCEEDED,
            response.iterator().next().provisioningState());
        Assertions.assertEquals(1930899769, response.iterator().next().jobCount());
        Assertions.assertEquals("surejqrshzzbgu", response.iterator().next().parameters().get("xdupnamg").type());
        Assertions.assertEquals(false, response.iterator().next().parameters().get("xdupnamg").isMandatory());
        Assertions.assertEquals(813655099, response.iterator().next().parameters().get("xdupnamg").position());
        Assertions.assertEquals("qzjk", response.iterator().next().parameters().get("xdupnamg").defaultValue());
        Assertions.assertEquals("dmkr", response.iterator().next().source().hash().algorithm());
        Assertions.assertEquals("wepgqvqokql", response.iterator().next().source().hash().value());
        Assertions.assertEquals(ContentSourceType.EMBEDDED_CONTENT, response.iterator().next().source().type());
        Assertions.assertEquals("ira", response.iterator().next().source().value());
        Assertions.assertEquals("lyvxchp", response.iterator().next().source().version());
        Assertions.assertEquals(DscConfigurationState.EDIT, response.iterator().next().state());
        Assertions.assertEquals(false, response.iterator().next().logVerbose());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-07T09:47:29Z"),
            response.iterator().next().creationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-18T01:25:06Z"),
            response.iterator().next().lastModifiedTime());
        Assertions.assertEquals(358508582, response.iterator().next().nodeConfigurationCount());
        Assertions.assertEquals("s", response.iterator().next().description());
    }
}
