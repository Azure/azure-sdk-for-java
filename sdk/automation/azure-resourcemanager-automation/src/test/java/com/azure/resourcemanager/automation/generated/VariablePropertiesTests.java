// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.fluent.models.VariableProperties;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class VariablePropertiesTests {
    @Test
    public void testDeserialize() {
        VariableProperties model =
            BinaryData
                .fromString(
                    "{\"value\":\"smjtgrqgdg\",\"isEncrypted\":false,\"creationTime\":\"2021-08-13T10:39:49Z\",\"lastModifiedTime\":\"2021-01-23T17:55:07Z\",\"description\":\"csmknhwt\"}")
                .toObject(VariableProperties.class);
        Assertions.assertEquals("smjtgrqgdg", model.value());
        Assertions.assertEquals(false, model.isEncrypted());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-13T10:39:49Z"), model.creationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-23T17:55:07Z"), model.lastModifiedTime());
        Assertions.assertEquals("csmknhwt", model.description());
    }

    @Test
    public void testSerialize() {
        VariableProperties model =
            new VariableProperties()
                .withValue("smjtgrqgdg")
                .withIsEncrypted(false)
                .withCreationTime(OffsetDateTime.parse("2021-08-13T10:39:49Z"))
                .withLastModifiedTime(OffsetDateTime.parse("2021-01-23T17:55:07Z"))
                .withDescription("csmknhwt");
        model = BinaryData.fromObject(model).toObject(VariableProperties.class);
        Assertions.assertEquals("smjtgrqgdg", model.value());
        Assertions.assertEquals(false, model.isEncrypted());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-13T10:39:49Z"), model.creationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-23T17:55:07Z"), model.lastModifiedTime());
        Assertions.assertEquals("csmknhwt", model.description());
    }
}
