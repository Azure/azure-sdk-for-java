// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.fluent.models.VariableProperties;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class VariablePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VariableProperties model = BinaryData.fromString(
            "{\"value\":\"tgguwpijrajcivmm\",\"isEncrypted\":false,\"creationTime\":\"2020-12-20T00:44:48Z\",\"lastModifiedTime\":\"2020-12-29T14:32:56Z\",\"description\":\"xgkn\"}")
            .toObject(VariableProperties.class);
        Assertions.assertEquals("tgguwpijrajcivmm", model.value());
        Assertions.assertEquals(false, model.isEncrypted());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-20T00:44:48Z"), model.creationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-29T14:32:56Z"), model.lastModifiedTime());
        Assertions.assertEquals("xgkn", model.description());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VariableProperties model = new VariableProperties().withValue("tgguwpijrajcivmm")
            .withIsEncrypted(false)
            .withCreationTime(OffsetDateTime.parse("2020-12-20T00:44:48Z"))
            .withLastModifiedTime(OffsetDateTime.parse("2020-12-29T14:32:56Z"))
            .withDescription("xgkn");
        model = BinaryData.fromObject(model).toObject(VariableProperties.class);
        Assertions.assertEquals("tgguwpijrajcivmm", model.value());
        Assertions.assertEquals(false, model.isEncrypted());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-20T00:44:48Z"), model.creationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-29T14:32:56Z"), model.lastModifiedTime());
        Assertions.assertEquals("xgkn", model.description());
    }
}
