// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.models.ContentSource;
import com.azure.resourcemanager.automation.models.ContentSourceType;
import com.azure.resourcemanager.automation.models.DscConfigurationParameter;
import com.azure.resourcemanager.automation.models.DscConfigurationUpdateParameters;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class DscConfigurationUpdateParametersTests {
    @Test
    public void testDeserialize() {
        DscConfigurationUpdateParameters model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"logVerbose\":false,\"logProgress\":false,\"source\":{\"type\":\"embeddedContent\",\"value\":\"uwprtujwsawd\",\"version\":\"ibabxvititvtzeex\"},\"parameters\":{\"cbslhhx\":{\"type\":\"tfgle\",\"isMandatory\":false,\"position\":590870598,\"defaultValue\":\"wpypqtgsfj\"},\"m\":{\"type\":\"sckdlp\",\"isMandatory\":true,\"position\":1885722966,\"defaultValue\":\"failcfx\"},\"knh\":{\"type\":\"oxdfgsftu\",\"isMandatory\":true,\"position\":362759726,\"defaultValue\":\"lnacgcc\"}},\"description\":\"izvy\"},\"name\":\"rzvul\",\"tags\":{\"roylaxxu\":\"aeranokqgukkjqnv\",\"sfjbjsvg\":\"cdisd\",\"lxgccknfnwmbtm\":\"rwhryvycytd\",\"hchrphkmcrjdqn\":\"pdvjdhttzaefedx\"}}")
                .toObject(DscConfigurationUpdateParameters.class);
        Assertions.assertEquals("rzvul", model.name());
        Assertions.assertEquals("aeranokqgukkjqnv", model.tags().get("roylaxxu"));
        Assertions.assertEquals(false, model.logVerbose());
        Assertions.assertEquals(false, model.logProgress());
        Assertions.assertEquals(ContentSourceType.EMBEDDED_CONTENT, model.source().type());
        Assertions.assertEquals("uwprtujwsawd", model.source().value());
        Assertions.assertEquals("ibabxvititvtzeex", model.source().version());
        Assertions.assertEquals("tfgle", model.parameters().get("cbslhhx").type());
        Assertions.assertEquals(false, model.parameters().get("cbslhhx").isMandatory());
        Assertions.assertEquals(590870598, model.parameters().get("cbslhhx").position());
        Assertions.assertEquals("wpypqtgsfj", model.parameters().get("cbslhhx").defaultValue());
        Assertions.assertEquals("izvy", model.description());
    }

    @Test
    public void testSerialize() {
        DscConfigurationUpdateParameters model =
            new DscConfigurationUpdateParameters()
                .withName("rzvul")
                .withTags(
                    mapOf(
                        "roylaxxu",
                        "aeranokqgukkjqnv",
                        "sfjbjsvg",
                        "cdisd",
                        "lxgccknfnwmbtm",
                        "rwhryvycytd",
                        "hchrphkmcrjdqn",
                        "pdvjdhttzaefedx"))
                .withLogVerbose(false)
                .withLogProgress(false)
                .withSource(
                    new ContentSource()
                        .withType(ContentSourceType.EMBEDDED_CONTENT)
                        .withValue("uwprtujwsawd")
                        .withVersion("ibabxvititvtzeex"))
                .withParameters(
                    mapOf(
                        "cbslhhx",
                        new DscConfigurationParameter()
                            .withType("tfgle")
                            .withIsMandatory(false)
                            .withPosition(590870598)
                            .withDefaultValue("wpypqtgsfj"),
                        "m",
                        new DscConfigurationParameter()
                            .withType("sckdlp")
                            .withIsMandatory(true)
                            .withPosition(1885722966)
                            .withDefaultValue("failcfx"),
                        "knh",
                        new DscConfigurationParameter()
                            .withType("oxdfgsftu")
                            .withIsMandatory(true)
                            .withPosition(362759726)
                            .withDefaultValue("lnacgcc")))
                .withDescription("izvy");
        model = BinaryData.fromObject(model).toObject(DscConfigurationUpdateParameters.class);
        Assertions.assertEquals("rzvul", model.name());
        Assertions.assertEquals("aeranokqgukkjqnv", model.tags().get("roylaxxu"));
        Assertions.assertEquals(false, model.logVerbose());
        Assertions.assertEquals(false, model.logProgress());
        Assertions.assertEquals(ContentSourceType.EMBEDDED_CONTENT, model.source().type());
        Assertions.assertEquals("uwprtujwsawd", model.source().value());
        Assertions.assertEquals("ibabxvititvtzeex", model.source().version());
        Assertions.assertEquals("tfgle", model.parameters().get("cbslhhx").type());
        Assertions.assertEquals(false, model.parameters().get("cbslhhx").isMandatory());
        Assertions.assertEquals(590870598, model.parameters().get("cbslhhx").position());
        Assertions.assertEquals("wpypqtgsfj", model.parameters().get("cbslhhx").defaultValue());
        Assertions.assertEquals("izvy", model.description());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
