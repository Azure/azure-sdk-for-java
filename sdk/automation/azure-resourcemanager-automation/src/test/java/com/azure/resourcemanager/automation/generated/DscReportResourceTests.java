// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.models.DscReportResource;
import com.azure.resourcemanager.automation.models.DscReportResourceNavigation;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DscReportResourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DscReportResource model = BinaryData.fromString(
            "{\"resourceId\":\"ynnaam\",\"sourceInfo\":\"ctehfiqscjey\",\"dependsOn\":[{\"resourceId\":\"zrkgqhcjrefovg\"},{\"resourceId\":\"qsl\"}],\"moduleName\":\"yvxyqjp\",\"moduleVersion\":\"attpngjcrcczsq\",\"resourceName\":\"hvmdajvnysounq\",\"error\":\"a\",\"status\":\"ae\",\"durationInSeconds\":94.26749513394212,\"startDate\":\"2021-11-03T13:36:16Z\"}")
            .toObject(DscReportResource.class);
        Assertions.assertEquals("ynnaam", model.resourceId());
        Assertions.assertEquals("ctehfiqscjey", model.sourceInfo());
        Assertions.assertEquals("zrkgqhcjrefovg", model.dependsOn().get(0).resourceId());
        Assertions.assertEquals("yvxyqjp", model.moduleName());
        Assertions.assertEquals("attpngjcrcczsq", model.moduleVersion());
        Assertions.assertEquals("hvmdajvnysounq", model.resourceName());
        Assertions.assertEquals("a", model.error());
        Assertions.assertEquals("ae", model.status());
        Assertions.assertEquals(94.26749513394212D, model.durationInSeconds());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-03T13:36:16Z"), model.startDate());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DscReportResource model = new DscReportResource().withResourceId("ynnaam")
            .withSourceInfo("ctehfiqscjey")
            .withDependsOn(Arrays.asList(new DscReportResourceNavigation().withResourceId("zrkgqhcjrefovg"),
                new DscReportResourceNavigation().withResourceId("qsl")))
            .withModuleName("yvxyqjp")
            .withModuleVersion("attpngjcrcczsq")
            .withResourceName("hvmdajvnysounq")
            .withError("a")
            .withStatus("ae")
            .withDurationInSeconds(94.26749513394212D)
            .withStartDate(OffsetDateTime.parse("2021-11-03T13:36:16Z"));
        model = BinaryData.fromObject(model).toObject(DscReportResource.class);
        Assertions.assertEquals("ynnaam", model.resourceId());
        Assertions.assertEquals("ctehfiqscjey", model.sourceInfo());
        Assertions.assertEquals("zrkgqhcjrefovg", model.dependsOn().get(0).resourceId());
        Assertions.assertEquals("yvxyqjp", model.moduleName());
        Assertions.assertEquals("attpngjcrcczsq", model.moduleVersion());
        Assertions.assertEquals("hvmdajvnysounq", model.resourceName());
        Assertions.assertEquals("a", model.error());
        Assertions.assertEquals("ae", model.status());
        Assertions.assertEquals(94.26749513394212D, model.durationInSeconds());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-03T13:36:16Z"), model.startDate());
    }
}
