// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.models.DscReportResource;
import com.azure.resourcemanager.automation.models.DscReportResourceNavigation;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class DscReportResourceTests {
    @Test
    public void testDeserialize() {
        DscReportResource model =
            BinaryData
                .fromString(
                    "{\"resourceId\":\"jugwdkcglhsl\",\"sourceInfo\":\"jdyggdtji\",\"dependsOn\":[{\"resourceId\":\"uofqwe\"}],\"moduleName\":\"hmenevfyexfwhybc\",\"moduleVersion\":\"vyvdcs\",\"resourceName\":\"ynnaam\",\"error\":\"ctehfiqscjey\",\"status\":\"hezrkgq\",\"durationInSeconds\":80.03610214574573,\"startDate\":\"2021-10-26T01:10:04Z\"}")
                .toObject(DscReportResource.class);
        Assertions.assertEquals("jugwdkcglhsl", model.resourceId());
        Assertions.assertEquals("jdyggdtji", model.sourceInfo());
        Assertions.assertEquals("uofqwe", model.dependsOn().get(0).resourceId());
        Assertions.assertEquals("hmenevfyexfwhybc", model.moduleName());
        Assertions.assertEquals("vyvdcs", model.moduleVersion());
        Assertions.assertEquals("ynnaam", model.resourceName());
        Assertions.assertEquals("ctehfiqscjey", model.error());
        Assertions.assertEquals("hezrkgq", model.status());
        Assertions.assertEquals(80.03610214574573D, model.durationInSeconds());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-26T01:10:04Z"), model.startDate());
    }

    @Test
    public void testSerialize() {
        DscReportResource model =
            new DscReportResource()
                .withResourceId("jugwdkcglhsl")
                .withSourceInfo("jdyggdtji")
                .withDependsOn(Arrays.asList(new DscReportResourceNavigation().withResourceId("uofqwe")))
                .withModuleName("hmenevfyexfwhybc")
                .withModuleVersion("vyvdcs")
                .withResourceName("ynnaam")
                .withError("ctehfiqscjey")
                .withStatus("hezrkgq")
                .withDurationInSeconds(80.03610214574573D)
                .withStartDate(OffsetDateTime.parse("2021-10-26T01:10:04Z"));
        model = BinaryData.fromObject(model).toObject(DscReportResource.class);
        Assertions.assertEquals("jugwdkcglhsl", model.resourceId());
        Assertions.assertEquals("jdyggdtji", model.sourceInfo());
        Assertions.assertEquals("uofqwe", model.dependsOn().get(0).resourceId());
        Assertions.assertEquals("hmenevfyexfwhybc", model.moduleName());
        Assertions.assertEquals("vyvdcs", model.moduleVersion());
        Assertions.assertEquals("ynnaam", model.resourceName());
        Assertions.assertEquals("ctehfiqscjey", model.error());
        Assertions.assertEquals("hezrkgq", model.status());
        Assertions.assertEquals(80.03610214574573D, model.durationInSeconds());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-26T01:10:04Z"), model.startDate());
    }
}
