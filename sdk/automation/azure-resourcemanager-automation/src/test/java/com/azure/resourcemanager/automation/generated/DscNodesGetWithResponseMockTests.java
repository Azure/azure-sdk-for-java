// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.automation.AutomationManager;
import com.azure.resourcemanager.automation.models.DscNode;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DscNodesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"lastSeen\":\"2021-10-05T18:30:26Z\",\"registrationTime\":\"2021-11-16T08:16Z\",\"ip\":\"mbjwzzoslpkyb\",\"accountId\":\"lwkzpgajsqjcem\",\"nodeConfiguration\":{\"name\":\"fuvq\"},\"status\":\"wzxuqre\",\"nodeId\":\"uim\",\"etag\":\"wxs\",\"totalCount\":394613556,\"extensionHandler\":[{\"name\":\"vxekraokqkbud\",\"version\":\"waokbavlytta\"}]},\"id\":\"knwfrkebsmhpdujd\",\"name\":\"gatolekscbctnan\",\"type\":\"imwbzxpdcldpk\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AutomationManager manager = AutomationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        DscNode response = manager.dscNodes()
            .getWithResponse("gmihzpimcqr", "nxtminklog", "svtzarhzv", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(OffsetDateTime.parse("2021-10-05T18:30:26Z"), response.lastSeen());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-16T08:16Z"), response.registrationTime());
        Assertions.assertEquals("mbjwzzoslpkyb", response.ip());
        Assertions.assertEquals("lwkzpgajsqjcem", response.accountId());
        Assertions.assertEquals("wzxuqre", response.status());
        Assertions.assertEquals("uim", response.nodeId());
        Assertions.assertEquals("wxs", response.etag());
        Assertions.assertEquals(394613556, response.totalCount());
        Assertions.assertEquals("vxekraokqkbud", response.extensionHandler().get(0).name());
        Assertions.assertEquals("waokbavlytta", response.extensionHandler().get(0).version());
        Assertions.assertEquals("fuvq", response.namePropertiesName());
    }
}
