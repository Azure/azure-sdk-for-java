// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.fluent.models.UsageInner;
import com.azure.resourcemanager.automation.models.UsageCounterName;
import com.azure.resourcemanager.automation.models.UsageListResult;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class UsageListResultTests {
    @Test
    public void testDeserialize() {
        UsageListResult model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"id\":\"zibt\",\"name\":{\"value\":\"tgk\",\"localizedValue\":\"tvdxeclzedqb\"},\"unit\":\"hzlhplodqkdlww\",\"currentValue\":12.835465421811564,\"limit\":3679022657074806419,\"throttleStatus\":\"trqjfsmlmbtx\"}]}")
                .toObject(UsageListResult.class);
        Assertions.assertEquals("zibt", model.value().get(0).id());
        Assertions.assertEquals("tgk", model.value().get(0).name().value());
        Assertions.assertEquals("tvdxeclzedqb", model.value().get(0).name().localizedValue());
        Assertions.assertEquals("hzlhplodqkdlww", model.value().get(0).unit());
        Assertions.assertEquals(12.835465421811564D, model.value().get(0).currentValue());
        Assertions.assertEquals(3679022657074806419L, model.value().get(0).limit());
        Assertions.assertEquals("trqjfsmlmbtx", model.value().get(0).throttleStatus());
    }

    @Test
    public void testSerialize() {
        UsageListResult model =
            new UsageListResult()
                .withValue(
                    Arrays
                        .asList(
                            new UsageInner()
                                .withId("zibt")
                                .withName(new UsageCounterName().withValue("tgk").withLocalizedValue("tvdxeclzedqb"))
                                .withUnit("hzlhplodqkdlww")
                                .withCurrentValue(12.835465421811564D)
                                .withLimit(3679022657074806419L)
                                .withThrottleStatus("trqjfsmlmbtx")));
        model = BinaryData.fromObject(model).toObject(UsageListResult.class);
        Assertions.assertEquals("zibt", model.value().get(0).id());
        Assertions.assertEquals("tgk", model.value().get(0).name().value());
        Assertions.assertEquals("tvdxeclzedqb", model.value().get(0).name().localizedValue());
        Assertions.assertEquals("hzlhplodqkdlww", model.value().get(0).unit());
        Assertions.assertEquals(12.835465421811564D, model.value().get(0).currentValue());
        Assertions.assertEquals(3679022657074806419L, model.value().get(0).limit());
        Assertions.assertEquals("trqjfsmlmbtx", model.value().get(0).throttleStatus());
    }
}
