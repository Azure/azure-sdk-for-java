// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.fluent.models.UsageInner;
import com.azure.resourcemanager.automation.models.UsageCounterName;
import com.azure.resourcemanager.automation.models.UsageListResult;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class UsageListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UsageListResult model = BinaryData.fromString(
            "{\"value\":[{\"id\":\"bdunygaeqid\",\"name\":{\"value\":\"atpxl\",\"localizedValue\":\"xcyjmoadsuvarmy\"},\"unit\":\"mjsjqb\",\"currentValue\":89.1685198832467,\"limit\":6679760626312548131,\"throttleStatus\":\"lyc\"},{\"id\":\"uhpkxkgymar\",\"name\":{\"value\":\"ajxq\",\"localizedValue\":\"jhkycub\"},\"unit\":\"dgssofwqmzqal\",\"currentValue\":84.31620561170425,\"limit\":267229941459063848,\"throttleStatus\":\"xacqqudfnbyx\"},{\"id\":\"aabjyvayffimrz\",\"name\":{\"value\":\"zqogse\",\"localizedValue\":\"evfdnwnwm\"},\"unit\":\"zsyyceuzso\",\"currentValue\":47.16870799129883,\"limit\":3706325358985550286,\"throttleStatus\":\"xtrthz\"}]}")
            .toObject(UsageListResult.class);
        Assertions.assertEquals("bdunygaeqid", model.value().get(0).id());
        Assertions.assertEquals("atpxl", model.value().get(0).name().value());
        Assertions.assertEquals("xcyjmoadsuvarmy", model.value().get(0).name().localizedValue());
        Assertions.assertEquals("mjsjqb", model.value().get(0).unit());
        Assertions.assertEquals(89.1685198832467D, model.value().get(0).currentValue());
        Assertions.assertEquals(6679760626312548131L, model.value().get(0).limit());
        Assertions.assertEquals("lyc", model.value().get(0).throttleStatus());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UsageListResult model
            = new UsageListResult()
                .withValue(
                    Arrays
                        .asList(
                            new UsageInner().withId("bdunygaeqid")
                                .withName(
                                    new UsageCounterName().withValue("atpxl").withLocalizedValue("xcyjmoadsuvarmy"))
                                .withUnit("mjsjqb")
                                .withCurrentValue(89.1685198832467D)
                                .withLimit(6679760626312548131L)
                                .withThrottleStatus("lyc"),
                            new UsageInner().withId("uhpkxkgymar")
                                .withName(new UsageCounterName().withValue("ajxq").withLocalizedValue("jhkycub"))
                                .withUnit("dgssofwqmzqal")
                                .withCurrentValue(84.31620561170425D)
                                .withLimit(267229941459063848L)
                                .withThrottleStatus("xacqqudfnbyx"),
                            new UsageInner().withId("aabjyvayffimrz")
                                .withName(new UsageCounterName().withValue("zqogse").withLocalizedValue("evfdnwnwm"))
                                .withUnit("zsyyceuzso")
                                .withCurrentValue(47.16870799129883D)
                                .withLimit(3706325358985550286L)
                                .withThrottleStatus("xtrthz")));
        model = BinaryData.fromObject(model).toObject(UsageListResult.class);
        Assertions.assertEquals("bdunygaeqid", model.value().get(0).id());
        Assertions.assertEquals("atpxl", model.value().get(0).name().value());
        Assertions.assertEquals("xcyjmoadsuvarmy", model.value().get(0).name().localizedValue());
        Assertions.assertEquals("mjsjqb", model.value().get(0).unit());
        Assertions.assertEquals(89.1685198832467D, model.value().get(0).currentValue());
        Assertions.assertEquals(6679760626312548131L, model.value().get(0).limit());
        Assertions.assertEquals("lyc", model.value().get(0).throttleStatus());
    }
}
