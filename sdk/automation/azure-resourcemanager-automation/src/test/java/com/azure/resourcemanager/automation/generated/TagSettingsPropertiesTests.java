// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.models.TagOperators;
import com.azure.resourcemanager.automation.models.TagSettingsProperties;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class TagSettingsPropertiesTests {
    @Test
    public void testDeserialize() {
        TagSettingsProperties model =
            BinaryData
                .fromString(
                    "{\"tags\":{\"wo\":[\"sdqrhzoymibmrq\",\"ibahwflus\",\"dtmhrkwofyyvoqa\",\"piexpbtgiw\"],\"ujw\":[\"washr\",\"dtkcnqxwbpokulp\"],\"wcciuqgbdbu\":[\"sipqii\",\"byuqerpqlp\"],\"ovljxywsu\":[\"uvfbtkuwh\",\"mhykojoxafnndl\",\"ichkoymkcdyhb\",\"kkpwdreqnovvq\"]},\"filterOperator\":\"All\"}")
                .toObject(TagSettingsProperties.class);
        Assertions.assertEquals("sdqrhzoymibmrq", model.tags().get("wo").get(0));
        Assertions.assertEquals(TagOperators.ALL, model.filterOperator());
    }

    @Test
    public void testSerialize() {
        TagSettingsProperties model =
            new TagSettingsProperties()
                .withTags(
                    mapOf(
                        "wo",
                        Arrays.asList("sdqrhzoymibmrq", "ibahwflus", "dtmhrkwofyyvoqa", "piexpbtgiw"),
                        "ujw",
                        Arrays.asList("washr", "dtkcnqxwbpokulp"),
                        "wcciuqgbdbu",
                        Arrays.asList("sipqii", "byuqerpqlp"),
                        "ovljxywsu",
                        Arrays.asList("uvfbtkuwh", "mhykojoxafnndl", "ichkoymkcdyhb", "kkpwdreqnovvq")))
                .withFilterOperator(TagOperators.ALL);
        model = BinaryData.fromObject(model).toObject(TagSettingsProperties.class);
        Assertions.assertEquals("sdqrhzoymibmrq", model.tags().get("wo").get(0));
        Assertions.assertEquals(TagOperators.ALL, model.filterOperator());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
