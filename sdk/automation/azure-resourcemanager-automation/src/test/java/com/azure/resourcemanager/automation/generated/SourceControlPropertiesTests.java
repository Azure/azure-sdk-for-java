// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.fluent.models.SourceControlProperties;
import com.azure.resourcemanager.automation.models.SourceType;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class SourceControlPropertiesTests {
    @Test
    public void testDeserialize() {
        SourceControlProperties model =
            BinaryData
                .fromString(
                    "{\"repoUrl\":\"ka\",\"branch\":\"rrqmbzmqk\",\"folderPath\":\"tbnxwbjsid\",\"autoSync\":false,\"publishRunbook\":false,\"sourceType\":\"VsoTfvc\",\"description\":\"okdgoge\",\"creationTime\":\"2021-11-12T09:39:06Z\",\"lastModifiedTime\":\"2021-04-23T14:24:18Z\"}")
                .toObject(SourceControlProperties.class);
        Assertions.assertEquals("ka", model.repoUrl());
        Assertions.assertEquals("rrqmbzmqk", model.branch());
        Assertions.assertEquals("tbnxwbjsid", model.folderPath());
        Assertions.assertEquals(false, model.autoSync());
        Assertions.assertEquals(false, model.publishRunbook());
        Assertions.assertEquals(SourceType.VSO_TFVC, model.sourceType());
        Assertions.assertEquals("okdgoge", model.description());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-12T09:39:06Z"), model.creationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-23T14:24:18Z"), model.lastModifiedTime());
    }

    @Test
    public void testSerialize() {
        SourceControlProperties model =
            new SourceControlProperties()
                .withRepoUrl("ka")
                .withBranch("rrqmbzmqk")
                .withFolderPath("tbnxwbjsid")
                .withAutoSync(false)
                .withPublishRunbook(false)
                .withSourceType(SourceType.VSO_TFVC)
                .withDescription("okdgoge")
                .withCreationTime(OffsetDateTime.parse("2021-11-12T09:39:06Z"))
                .withLastModifiedTime(OffsetDateTime.parse("2021-04-23T14:24:18Z"));
        model = BinaryData.fromObject(model).toObject(SourceControlProperties.class);
        Assertions.assertEquals("ka", model.repoUrl());
        Assertions.assertEquals("rrqmbzmqk", model.branch());
        Assertions.assertEquals("tbnxwbjsid", model.folderPath());
        Assertions.assertEquals(false, model.autoSync());
        Assertions.assertEquals(false, model.publishRunbook());
        Assertions.assertEquals(SourceType.VSO_TFVC, model.sourceType());
        Assertions.assertEquals("okdgoge", model.description());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-12T09:39:06Z"), model.creationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-23T14:24:18Z"), model.lastModifiedTime());
    }
}
