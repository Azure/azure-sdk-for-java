// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.fluent.models.SourceControlProperties;
import com.azure.resourcemanager.automation.models.SourceType;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class SourceControlPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SourceControlProperties model = BinaryData.fromString(
            "{\"repoUrl\":\"asrru\",\"branch\":\"bhsqfsubcgjbirxb\",\"folderPath\":\"bsrfbj\",\"autoSync\":false,\"publishRunbook\":false,\"sourceType\":\"VsoGit\",\"description\":\"ftpvjzbexil\",\"creationTime\":\"2021-08-16T05:02:45Z\",\"lastModifiedTime\":\"2021-07-12T07:01:23Z\"}")
            .toObject(SourceControlProperties.class);
        Assertions.assertEquals("asrru", model.repoUrl());
        Assertions.assertEquals("bhsqfsubcgjbirxb", model.branch());
        Assertions.assertEquals("bsrfbj", model.folderPath());
        Assertions.assertEquals(false, model.autoSync());
        Assertions.assertEquals(false, model.publishRunbook());
        Assertions.assertEquals(SourceType.VSO_GIT, model.sourceType());
        Assertions.assertEquals("ftpvjzbexil", model.description());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-16T05:02:45Z"), model.creationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-12T07:01:23Z"), model.lastModifiedTime());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SourceControlProperties model = new SourceControlProperties().withRepoUrl("asrru")
            .withBranch("bhsqfsubcgjbirxb")
            .withFolderPath("bsrfbj")
            .withAutoSync(false)
            .withPublishRunbook(false)
            .withSourceType(SourceType.VSO_GIT)
            .withDescription("ftpvjzbexil")
            .withCreationTime(OffsetDateTime.parse("2021-08-16T05:02:45Z"))
            .withLastModifiedTime(OffsetDateTime.parse("2021-07-12T07:01:23Z"));
        model = BinaryData.fromObject(model).toObject(SourceControlProperties.class);
        Assertions.assertEquals("asrru", model.repoUrl());
        Assertions.assertEquals("bhsqfsubcgjbirxb", model.branch());
        Assertions.assertEquals("bsrfbj", model.folderPath());
        Assertions.assertEquals(false, model.autoSync());
        Assertions.assertEquals(false, model.publishRunbook());
        Assertions.assertEquals(SourceType.VSO_GIT, model.sourceType());
        Assertions.assertEquals("ftpvjzbexil", model.description());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-16T05:02:45Z"), model.creationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-12T07:01:23Z"), model.lastModifiedTime());
    }
}
