// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.automation.AutomationManager;
import com.azure.resourcemanager.automation.models.TestJob;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class TestJobsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"creationTime\":\"2021-05-18T13:52:16Z\",\"status\":\"wesym\",\"statusDetails\":\"hrqpfzl\",\"runOn\":\"j\",\"startTime\":\"2021-09-29T01:55:03Z\",\"endTime\":\"2021-09-29T13:10:59Z\",\"exception\":\"eaujq\",\"lastModifiedTime\":\"2021-02-01T15:37:37Z\",\"lastStatusModifiedTime\":\"2021-01-20T01:50:44Z\",\"parameters\":{\"pjzobdwbcpr\":\"ejlwbk\",\"ydtnaczkfwfatgaw\":\"swku\",\"saaqgoq\":\"hnskivdwgtqcume\",\"rb\":\"diuycsbskowkrbhz\"},\"logActivityTrace\":1246413054}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AutomationManager manager = AutomationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        TestJob response = manager.testJobs()
            .getWithResponse("zizznyu", "pqzstifgufyjf", "kqiyvnd", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(OffsetDateTime.parse("2021-05-18T13:52:16Z"), response.creationTime());
        Assertions.assertEquals("wesym", response.status());
        Assertions.assertEquals("hrqpfzl", response.statusDetails());
        Assertions.assertEquals("j", response.runOn());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-29T01:55:03Z"), response.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-29T13:10:59Z"), response.endTime());
        Assertions.assertEquals("eaujq", response.exception());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-01T15:37:37Z"), response.lastModifiedTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-20T01:50:44Z"), response.lastStatusModifiedTime());
        Assertions.assertEquals("ejlwbk", response.parameters().get("pjzobdwbcpr"));
        Assertions.assertEquals(1246413054, response.logActivityTrace());
    }
}
