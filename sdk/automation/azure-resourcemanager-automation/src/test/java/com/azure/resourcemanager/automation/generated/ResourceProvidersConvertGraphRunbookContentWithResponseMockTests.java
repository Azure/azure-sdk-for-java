// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.automation.AutomationManager;
import com.azure.resourcemanager.automation.fluent.models.GraphicalRunbookContentInner;
import com.azure.resourcemanager.automation.models.GraphRunbookType;
import com.azure.resourcemanager.automation.models.GraphicalRunbookContent;
import com.azure.resourcemanager.automation.models.RawGraphicalRunbookContent;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ResourceProvidersConvertGraphRunbookContentWithResponseMockTests {
    @Test
    public void testConvertGraphRunbookContentWithResponse() throws Exception {
        String responseStr
            = "{\"rawContent\":{\"schemaVersion\":\"vb\",\"runbookDefinition\":\"gwhgkgsoau\",\"runbookType\":\"GraphPowerShell\"},\"graphRunbookJson\":\"satfybipufdmxu\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AutomationManager manager = AutomationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        GraphicalRunbookContent response
            = manager.resourceProviders()
                .convertGraphRunbookContentWithResponse("iibncgagdvcdqhf", "zbpyf",
                    new GraphicalRunbookContentInner()
                        .withRawContent(new RawGraphicalRunbookContent().withSchemaVersion("df")
                            .withRunbookDefinition("tncwmhjobzrfpr")
                            .withRunbookType(GraphRunbookType.GRAPH_POWER_SHELL))
                        .withGraphRunbookJson("qhy"),
                    com.azure.core.util.Context.NONE)
                .getValue();

        Assertions.assertEquals("vb", response.rawContent().schemaVersion());
        Assertions.assertEquals("gwhgkgsoau", response.rawContent().runbookDefinition());
        Assertions.assertEquals(GraphRunbookType.GRAPH_POWER_SHELL, response.rawContent().runbookType());
        Assertions.assertEquals("satfybipufdmxu", response.graphRunbookJson());
    }
}
