// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.fluent.models.PrivateEndpointConnectionInner;
import com.azure.resourcemanager.automation.models.PrivateEndpointProperty;
import com.azure.resourcemanager.automation.models.PrivateLinkServiceConnectionStateProperty;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class PrivateEndpointConnectionInnerTests {
    @Test
    public void testDeserialize() {
        PrivateEndpointConnectionInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"privateEndpoint\":{\"id\":\"cqqjnqglhqgn\"},\"groupIds\":[\"oo\",\"ywifsqesaag\",\"f\"],\"privateLinkServiceConnectionState\":{\"status\":\"zlhjxrifkwmrvkt\",\"description\":\"zntocipaouajps\",\"actionsRequired\":\"cmpoyfdkfogkny\"}},\"id\":\"jofjd\",\"name\":\"eqsrdeupewnwreit\",\"type\":\"zyf\"}")
                .toObject(PrivateEndpointConnectionInner.class);
        Assertions.assertEquals("cqqjnqglhqgn", model.privateEndpoint().id());
        Assertions.assertEquals("oo", model.groupIds().get(0));
        Assertions.assertEquals("zlhjxrifkwmrvkt", model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("zntocipaouajps", model.privateLinkServiceConnectionState().description());
    }

    @Test
    public void testSerialize() {
        PrivateEndpointConnectionInner model =
            new PrivateEndpointConnectionInner()
                .withPrivateEndpoint(new PrivateEndpointProperty().withId("cqqjnqglhqgn"))
                .withGroupIds(Arrays.asList("oo", "ywifsqesaag", "f"))
                .withPrivateLinkServiceConnectionState(
                    new PrivateLinkServiceConnectionStateProperty()
                        .withStatus("zlhjxrifkwmrvkt")
                        .withDescription("zntocipaouajps"));
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnectionInner.class);
        Assertions.assertEquals("cqqjnqglhqgn", model.privateEndpoint().id());
        Assertions.assertEquals("oo", model.groupIds().get(0));
        Assertions.assertEquals("zlhjxrifkwmrvkt", model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("zntocipaouajps", model.privateLinkServiceConnectionState().description());
    }
}
