// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.fluent.models.PrivateEndpointConnectionInner;
import com.azure.resourcemanager.automation.models.PrivateEndpointProperty;
import com.azure.resourcemanager.automation.models.PrivateLinkServiceConnectionStateProperty;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PrivateEndpointConnectionInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateEndpointConnectionInner model = BinaryData.fromString(
            "{\"properties\":{\"privateEndpoint\":{\"id\":\"mofcq\"},\"groupIds\":[\"yurkdtmlxhekuksj\"],\"privateLinkServiceConnectionState\":{\"status\":\"kc\",\"description\":\"parcry\",\"actionsRequired\":\"nzwuxzd\"}},\"id\":\"t\",\"name\":\"yrlhmwhfpmrqobm\",\"type\":\"u\"}")
            .toObject(PrivateEndpointConnectionInner.class);
        Assertions.assertEquals("mofcq", model.privateEndpoint().id());
        Assertions.assertEquals("yurkdtmlxhekuksj", model.groupIds().get(0));
        Assertions.assertEquals("kc", model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("parcry", model.privateLinkServiceConnectionState().description());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateEndpointConnectionInner model
            = new PrivateEndpointConnectionInner().withPrivateEndpoint(new PrivateEndpointProperty().withId("mofcq"))
                .withGroupIds(Arrays.asList("yurkdtmlxhekuksj"))
                .withPrivateLinkServiceConnectionState(
                    new PrivateLinkServiceConnectionStateProperty().withStatus("kc").withDescription("parcry"));
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnectionInner.class);
        Assertions.assertEquals("mofcq", model.privateEndpoint().id());
        Assertions.assertEquals("yurkdtmlxhekuksj", model.groupIds().get(0));
        Assertions.assertEquals("kc", model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("parcry", model.privateLinkServiceConnectionState().description());
    }
}
