// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.fluent.models.DscNodeInner;
import com.azure.resourcemanager.automation.models.DscNodeExtensionHandlerAssociationProperty;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DscNodeInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DscNodeInner model = BinaryData.fromString(
            "{\"properties\":{\"lastSeen\":\"2021-02-25T06:26:56Z\",\"registrationTime\":\"2021-02-09T18:19:16Z\",\"ip\":\"uqfprwzw\",\"accountId\":\"g\",\"nodeConfiguration\":{\"name\":\"nwui\"},\"status\":\"a\",\"nodeId\":\"ufizuckyf\",\"etag\":\"rfidfvzwdz\",\"totalCount\":881303294,\"extensionHandler\":[{\"name\":\"isdkfthwxmnteiw\",\"version\":\"pvkmijcmmxdcuf\"},{\"name\":\"srp\",\"version\":\"zidnsezcxtbzsgfy\"},{\"name\":\"sne\",\"version\":\"dwzjeiach\"},{\"name\":\"osfln\",\"version\":\"sfqpteehz\"}]},\"id\":\"vypyqrimzinpv\",\"name\":\"wjdk\",\"type\":\"rsoodqxhcrmnoh\"}")
            .toObject(DscNodeInner.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-25T06:26:56Z"), model.lastSeen());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-09T18:19:16Z"), model.registrationTime());
        Assertions.assertEquals("uqfprwzw", model.ip());
        Assertions.assertEquals("g", model.accountId());
        Assertions.assertEquals("a", model.status());
        Assertions.assertEquals("ufizuckyf", model.nodeId());
        Assertions.assertEquals("rfidfvzwdz", model.etag());
        Assertions.assertEquals(881303294, model.totalCount());
        Assertions.assertEquals("isdkfthwxmnteiw", model.extensionHandler().get(0).name());
        Assertions.assertEquals("pvkmijcmmxdcuf", model.extensionHandler().get(0).version());
        Assertions.assertEquals("nwui", model.namePropertiesName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DscNodeInner model = new DscNodeInner().withLastSeen(OffsetDateTime.parse("2021-02-25T06:26:56Z"))
            .withRegistrationTime(OffsetDateTime.parse("2021-02-09T18:19:16Z"))
            .withIp("uqfprwzw")
            .withAccountId("g")
            .withStatus("a")
            .withNodeId("ufizuckyf")
            .withEtag("rfidfvzwdz")
            .withTotalCount(881303294)
            .withExtensionHandler(Arrays.asList(
                new DscNodeExtensionHandlerAssociationProperty().withName("isdkfthwxmnteiw")
                    .withVersion("pvkmijcmmxdcuf"),
                new DscNodeExtensionHandlerAssociationProperty().withName("srp").withVersion("zidnsezcxtbzsgfy"),
                new DscNodeExtensionHandlerAssociationProperty().withName("sne").withVersion("dwzjeiach"),
                new DscNodeExtensionHandlerAssociationProperty().withName("osfln").withVersion("sfqpteehz")))
            .withNamePropertiesName("nwui");
        model = BinaryData.fromObject(model).toObject(DscNodeInner.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-25T06:26:56Z"), model.lastSeen());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-09T18:19:16Z"), model.registrationTime());
        Assertions.assertEquals("uqfprwzw", model.ip());
        Assertions.assertEquals("g", model.accountId());
        Assertions.assertEquals("a", model.status());
        Assertions.assertEquals("ufizuckyf", model.nodeId());
        Assertions.assertEquals("rfidfvzwdz", model.etag());
        Assertions.assertEquals(881303294, model.totalCount());
        Assertions.assertEquals("isdkfthwxmnteiw", model.extensionHandler().get(0).name());
        Assertions.assertEquals("pvkmijcmmxdcuf", model.extensionHandler().get(0).version());
        Assertions.assertEquals("nwui", model.namePropertiesName());
    }
}
