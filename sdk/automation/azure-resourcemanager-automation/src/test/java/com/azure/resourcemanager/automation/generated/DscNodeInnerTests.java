// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.fluent.models.DscNodeInner;
import com.azure.resourcemanager.automation.models.DscNodeExtensionHandlerAssociationProperty;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class DscNodeInnerTests {
    @Test
    public void testDeserialize() {
        DscNodeInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"lastSeen\":\"2021-06-15T10:03:50Z\",\"registrationTime\":\"2020-12-25T20:04:21Z\",\"ip\":\"ahbc\",\"accountId\":\"ffdfdosygexpa\",\"nodeConfiguration\":{\"name\":\"khmsbz\"},\"status\":\"crzevdphlx\",\"nodeId\":\"lthqtrgqjbp\",\"etag\":\"fsinzgvfcjrwzoxx\",\"totalCount\":1440397986,\"extensionHandler\":[{\"name\":\"uwfzitonpe\",\"version\":\"pjkjlxofpdv\"},{\"name\":\"fxxypininmayhuy\",\"version\":\"kpode\"},{\"name\":\"oginuvamiheognar\",\"version\":\"xth\"},{\"name\":\"tusivyevcciqihn\",\"version\":\"ngbwjz\"}]},\"id\":\"nfygxgispemvtz\",\"name\":\"kufubljo\",\"type\":\"xqeofjaeqjhqjba\"}")
                .toObject(DscNodeInner.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-15T10:03:50Z"), model.lastSeen());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-25T20:04:21Z"), model.registrationTime());
        Assertions.assertEquals("ahbc", model.ip());
        Assertions.assertEquals("ffdfdosygexpa", model.accountId());
        Assertions.assertEquals("crzevdphlx", model.status());
        Assertions.assertEquals("lthqtrgqjbp", model.nodeId());
        Assertions.assertEquals("fsinzgvfcjrwzoxx", model.etag());
        Assertions.assertEquals(1440397986, model.totalCount());
        Assertions.assertEquals("uwfzitonpe", model.extensionHandler().get(0).name());
        Assertions.assertEquals("pjkjlxofpdv", model.extensionHandler().get(0).version());
        Assertions.assertEquals("khmsbz", model.namePropertiesName());
    }

    @Test
    public void testSerialize() {
        DscNodeInner model =
            new DscNodeInner()
                .withLastSeen(OffsetDateTime.parse("2021-06-15T10:03:50Z"))
                .withRegistrationTime(OffsetDateTime.parse("2020-12-25T20:04:21Z"))
                .withIp("ahbc")
                .withAccountId("ffdfdosygexpa")
                .withStatus("crzevdphlx")
                .withNodeId("lthqtrgqjbp")
                .withEtag("fsinzgvfcjrwzoxx")
                .withTotalCount(1440397986)
                .withExtensionHandler(
                    Arrays
                        .asList(
                            new DscNodeExtensionHandlerAssociationProperty()
                                .withName("uwfzitonpe")
                                .withVersion("pjkjlxofpdv"),
                            new DscNodeExtensionHandlerAssociationProperty()
                                .withName("fxxypininmayhuy")
                                .withVersion("kpode"),
                            new DscNodeExtensionHandlerAssociationProperty()
                                .withName("oginuvamiheognar")
                                .withVersion("xth"),
                            new DscNodeExtensionHandlerAssociationProperty()
                                .withName("tusivyevcciqihn")
                                .withVersion("ngbwjz")))
                .withNamePropertiesName("khmsbz");
        model = BinaryData.fromObject(model).toObject(DscNodeInner.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-15T10:03:50Z"), model.lastSeen());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-25T20:04:21Z"), model.registrationTime());
        Assertions.assertEquals("ahbc", model.ip());
        Assertions.assertEquals("ffdfdosygexpa", model.accountId());
        Assertions.assertEquals("crzevdphlx", model.status());
        Assertions.assertEquals("lthqtrgqjbp", model.nodeId());
        Assertions.assertEquals("fsinzgvfcjrwzoxx", model.etag());
        Assertions.assertEquals(1440397986, model.totalCount());
        Assertions.assertEquals("uwfzitonpe", model.extensionHandler().get(0).name());
        Assertions.assertEquals("pjkjlxofpdv", model.extensionHandler().get(0).version());
        Assertions.assertEquals("khmsbz", model.namePropertiesName());
    }
}
