// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.fluent.models.VariableInner;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class VariableInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VariableInner model = BinaryData.fromString(
            "{\"properties\":{\"value\":\"kxhdjhlimmbcx\",\"isEncrypted\":true,\"creationTime\":\"2021-05-04T19:01:44Z\",\"lastModifiedTime\":\"2021-08-24T02:48:56Z\",\"description\":\"vxcjzhqizxfpxtgq\"},\"id\":\"cja\",\"name\":\"ftjuh\",\"type\":\"qaz\"}")
            .toObject(VariableInner.class);
        Assertions.assertEquals("kxhdjhlimmbcx", model.value());
        Assertions.assertEquals(true, model.isEncrypted());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-04T19:01:44Z"), model.creationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-24T02:48:56Z"), model.lastModifiedTime());
        Assertions.assertEquals("vxcjzhqizxfpxtgq", model.description());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VariableInner model = new VariableInner().withValue("kxhdjhlimmbcx")
            .withIsEncrypted(true)
            .withCreationTime(OffsetDateTime.parse("2021-05-04T19:01:44Z"))
            .withLastModifiedTime(OffsetDateTime.parse("2021-08-24T02:48:56Z"))
            .withDescription("vxcjzhqizxfpxtgq");
        model = BinaryData.fromObject(model).toObject(VariableInner.class);
        Assertions.assertEquals("kxhdjhlimmbcx", model.value());
        Assertions.assertEquals(true, model.isEncrypted());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-04T19:01:44Z"), model.creationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-24T02:48:56Z"), model.lastModifiedTime());
        Assertions.assertEquals("vxcjzhqizxfpxtgq", model.description());
    }
}
