// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.fluent.models.VariableInner;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class VariableInnerTests {
    @Test
    public void testDeserialize() {
        VariableInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"value\":\"zzy\",\"isEncrypted\":false,\"creationTime\":\"2021-01-03T15:04:02Z\",\"lastModifiedTime\":\"2021-09-01T15:53:15Z\",\"description\":\"zrrryv\"},\"id\":\"imipskdyzatvfuz\",\"name\":\"aftjvvruxwigsy\",\"type\":\"ip\"}")
                .toObject(VariableInner.class);
        Assertions.assertEquals("zzy", model.value());
        Assertions.assertEquals(false, model.isEncrypted());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-03T15:04:02Z"), model.creationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-01T15:53:15Z"), model.lastModifiedTime());
        Assertions.assertEquals("zrrryv", model.description());
    }

    @Test
    public void testSerialize() {
        VariableInner model =
            new VariableInner()
                .withValue("zzy")
                .withIsEncrypted(false)
                .withCreationTime(OffsetDateTime.parse("2021-01-03T15:04:02Z"))
                .withLastModifiedTime(OffsetDateTime.parse("2021-09-01T15:53:15Z"))
                .withDescription("zrrryv");
        model = BinaryData.fromObject(model).toObject(VariableInner.class);
        Assertions.assertEquals("zzy", model.value());
        Assertions.assertEquals(false, model.isEncrypted());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-03T15:04:02Z"), model.creationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-01T15:53:15Z"), model.lastModifiedTime());
        Assertions.assertEquals("zrrryv", model.description());
    }
}
