// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.fluent.models.SourceControlInner;
import com.azure.resourcemanager.automation.models.SourceControlListResult;
import com.azure.resourcemanager.automation.models.SourceType;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SourceControlListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SourceControlListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"repoUrl\":\"qig\",\"branch\":\"duhavhqlkt\",\"folderPath\":\"maqolbgycduie\",\"autoSync\":true,\"publishRunbook\":false,\"sourceType\":\"GitHub\",\"description\":\"aolps\",\"creationTime\":\"2021-11-04T08:02:25Z\",\"lastModifiedTime\":\"2021-02-21T14:36:19Z\"},\"id\":\"mmdnbbglzps\",\"name\":\"iydmcwyhzdxs\",\"type\":\"adbzmnvdfznud\"},{\"properties\":{\"repoUrl\":\"vxzbncb\",\"branch\":\"lpstdbhhxsrzdz\",\"folderPath\":\"erscdntne\",\"autoSync\":true,\"publishRunbook\":true,\"sourceType\":\"GitHub\",\"description\":\"tdss\",\"creationTime\":\"2021-07-17T08:24:42Z\",\"lastModifiedTime\":\"2021-06-02T21:20:03Z\"},\"id\":\"weriofzpyqsem\",\"name\":\"abnetshh\",\"type\":\"zhedplvwiw\"}],\"nextLink\":\"mwmbes\"}")
            .toObject(SourceControlListResult.class);
        Assertions.assertEquals("qig", model.value().get(0).repoUrl());
        Assertions.assertEquals("duhavhqlkt", model.value().get(0).branch());
        Assertions.assertEquals("maqolbgycduie", model.value().get(0).folderPath());
        Assertions.assertEquals(true, model.value().get(0).autoSync());
        Assertions.assertEquals(false, model.value().get(0).publishRunbook());
        Assertions.assertEquals(SourceType.GIT_HUB, model.value().get(0).sourceType());
        Assertions.assertEquals("aolps", model.value().get(0).description());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-04T08:02:25Z"), model.value().get(0).creationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-21T14:36:19Z"), model.value().get(0).lastModifiedTime());
        Assertions.assertEquals("mwmbes", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SourceControlListResult model = new SourceControlListResult().withValue(Arrays.asList(
            new SourceControlInner().withRepoUrl("qig")
                .withBranch("duhavhqlkt")
                .withFolderPath("maqolbgycduie")
                .withAutoSync(true)
                .withPublishRunbook(false)
                .withSourceType(SourceType.GIT_HUB)
                .withDescription("aolps")
                .withCreationTime(OffsetDateTime.parse("2021-11-04T08:02:25Z"))
                .withLastModifiedTime(OffsetDateTime.parse("2021-02-21T14:36:19Z")),
            new SourceControlInner().withRepoUrl("vxzbncb")
                .withBranch("lpstdbhhxsrzdz")
                .withFolderPath("erscdntne")
                .withAutoSync(true)
                .withPublishRunbook(true)
                .withSourceType(SourceType.GIT_HUB)
                .withDescription("tdss")
                .withCreationTime(OffsetDateTime.parse("2021-07-17T08:24:42Z"))
                .withLastModifiedTime(OffsetDateTime.parse("2021-06-02T21:20:03Z"))))
            .withNextLink("mwmbes");
        model = BinaryData.fromObject(model).toObject(SourceControlListResult.class);
        Assertions.assertEquals("qig", model.value().get(0).repoUrl());
        Assertions.assertEquals("duhavhqlkt", model.value().get(0).branch());
        Assertions.assertEquals("maqolbgycduie", model.value().get(0).folderPath());
        Assertions.assertEquals(true, model.value().get(0).autoSync());
        Assertions.assertEquals(false, model.value().get(0).publishRunbook());
        Assertions.assertEquals(SourceType.GIT_HUB, model.value().get(0).sourceType());
        Assertions.assertEquals("aolps", model.value().get(0).description());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-04T08:02:25Z"), model.value().get(0).creationTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-21T14:36:19Z"), model.value().get(0).lastModifiedTime());
        Assertions.assertEquals("mwmbes", model.nextLink());
    }
}
