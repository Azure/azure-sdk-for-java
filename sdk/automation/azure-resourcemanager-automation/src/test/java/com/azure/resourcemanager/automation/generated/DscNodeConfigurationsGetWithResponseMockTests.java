// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.automation.AutomationManager;
import com.azure.resourcemanager.automation.models.DscNodeConfiguration;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DscNodeConfigurationsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"lastModifiedTime\":\"2021-06-24T16:09:23Z\",\"creationTime\":\"2021-03-17T22:52:52Z\",\"configuration\":{\"name\":\"ewhfjsrwqrxetf\"},\"source\":\"wvrrmdqn\",\"nodeCount\":6612389968181408289,\"incrementNodeConfigurationBuild\":false},\"id\":\"thvmaxgnuyeamcmh\",\"name\":\"dfjeceho\",\"type\":\"wcpqtwl\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AutomationManager manager = AutomationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        DscNodeConfiguration response = manager.dscNodeConfigurations()
            .getWithResponse("chl", "mpwctoflds", "acdhztxkbr", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(OffsetDateTime.parse("2021-06-24T16:09:23Z"), response.lastModifiedTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-17T22:52:52Z"), response.creationTime());
        Assertions.assertEquals("ewhfjsrwqrxetf", response.configuration().name());
        Assertions.assertEquals("wvrrmdqn", response.source());
        Assertions.assertEquals(6612389968181408289L, response.nodeCount());
        Assertions.assertEquals(false, response.incrementNodeConfigurationBuild());
    }
}
