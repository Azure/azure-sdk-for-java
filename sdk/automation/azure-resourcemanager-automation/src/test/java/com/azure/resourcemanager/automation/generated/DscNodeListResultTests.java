// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.fluent.models.DscNodeInner;
import com.azure.resourcemanager.automation.models.DscNodeListResult;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class DscNodeListResultTests {
    @Test
    public void testDeserialize() {
        DscNodeListResult model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"lastSeen\":\"2021-01-20T05:42Z\",\"registrationTime\":\"2021-04-11T19:57:28Z\",\"ip\":\"ulzndlikwyqk\",\"accountId\":\"gibma\",\"status\":\"keqsrxybzqqedq\",\"nodeId\":\"bciqfouflm\",\"etag\":\"kzsmodm\",\"totalCount\":2128722098,\"extensionHandler\":[]},\"id\":\"gpbkwtmut\",\"name\":\"uqktap\",\"type\":\"pwgcuertu\"}],\"nextLink\":\"dosvqwhbmdgbbjf\",\"totalCount\":763703494}")
                .toObject(DscNodeListResult.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-20T05:42Z"), model.value().get(0).lastSeen());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-11T19:57:28Z"), model.value().get(0).registrationTime());
        Assertions.assertEquals("ulzndlikwyqk", model.value().get(0).ip());
        Assertions.assertEquals("gibma", model.value().get(0).accountId());
        Assertions.assertEquals("keqsrxybzqqedq", model.value().get(0).status());
        Assertions.assertEquals("bciqfouflm", model.value().get(0).nodeId());
        Assertions.assertEquals("kzsmodm", model.value().get(0).etag());
        Assertions.assertEquals(2128722098, model.value().get(0).totalCount());
        Assertions.assertEquals("dosvqwhbmdgbbjf", model.nextLink());
        Assertions.assertEquals(763703494, model.totalCount());
    }

    @Test
    public void testSerialize() {
        DscNodeListResult model =
            new DscNodeListResult()
                .withValue(
                    Arrays
                        .asList(
                            new DscNodeInner()
                                .withLastSeen(OffsetDateTime.parse("2021-01-20T05:42Z"))
                                .withRegistrationTime(OffsetDateTime.parse("2021-04-11T19:57:28Z"))
                                .withIp("ulzndlikwyqk")
                                .withAccountId("gibma")
                                .withStatus("keqsrxybzqqedq")
                                .withNodeId("bciqfouflm")
                                .withEtag("kzsmodm")
                                .withTotalCount(2128722098)
                                .withExtensionHandler(Arrays.asList())))
                .withNextLink("dosvqwhbmdgbbjf")
                .withTotalCount(763703494);
        model = BinaryData.fromObject(model).toObject(DscNodeListResult.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-20T05:42Z"), model.value().get(0).lastSeen());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-11T19:57:28Z"), model.value().get(0).registrationTime());
        Assertions.assertEquals("ulzndlikwyqk", model.value().get(0).ip());
        Assertions.assertEquals("gibma", model.value().get(0).accountId());
        Assertions.assertEquals("keqsrxybzqqedq", model.value().get(0).status());
        Assertions.assertEquals("bciqfouflm", model.value().get(0).nodeId());
        Assertions.assertEquals("kzsmodm", model.value().get(0).etag());
        Assertions.assertEquals(2128722098, model.value().get(0).totalCount());
        Assertions.assertEquals("dosvqwhbmdgbbjf", model.nextLink());
        Assertions.assertEquals(763703494, model.totalCount());
    }
}
