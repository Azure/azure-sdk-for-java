// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.automation.fluent.models.SoftwareUpdateConfigurationRunInner;
import com.azure.resourcemanager.automation.fluent.models.SoftwareUpdateConfigurationRunListResultInner;
import com.azure.resourcemanager.automation.models.SoftwareUpdateConfigurationRunTaskProperties;
import com.azure.resourcemanager.automation.models.SoftwareUpdateConfigurationRunTasks;
import com.azure.resourcemanager.automation.models.UpdateConfigurationNavigation;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SoftwareUpdateConfigurationRunListResultInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SoftwareUpdateConfigurationRunListResultInner model = BinaryData.fromString(
            "{\"value\":[{\"name\":\"sf\",\"id\":\"mx\",\"properties\":{\"softwareUpdateConfiguration\":{\"name\":\"zealbmqkyo\"},\"status\":\"yvfkmbts\",\"configuredDuration\":\"hxsgxj\",\"osType\":\"mzrrscubiwsdrn\",\"startTime\":\"2021-03-23T14:45:37Z\",\"endTime\":\"2020-12-23T06:49:12Z\",\"computerCount\":229533807,\"failedCount\":1825401487,\"creationTime\":\"2021-07-25T09:47:07Z\",\"createdBy\":\"jrmmuabwib\",\"lastModifiedTime\":\"2021-06-26T06:26:09Z\",\"lastModifiedBy\":\"jonmc\",\"tasks\":{\"preTask\":{\"status\":\"y\",\"source\":\"amwineofvfkakp\",\"jobId\":\"dt\"},\"postTask\":{\"status\":\"boclzhzjknyuxgv\",\"source\":\"xpn\",\"jobId\":\"pzaamrdixtreki\"}}}},{\"name\":\"wyskbruffgll\",\"id\":\"kutvlxhrpqhv\",\"properties\":{\"softwareUpdateConfiguration\":{\"name\":\"ouq\"},\"status\":\"bhbcdszir\",\"configuredDuration\":\"an\",\"osType\":\"ypmbltoormkfq\",\"startTime\":\"2021-03-07T21:54:57Z\",\"endTime\":\"2021-06-15T00:32:51Z\",\"computerCount\":1850949068,\"failedCount\":533354923,\"creationTime\":\"2021-06-05T18:12:28Z\",\"createdBy\":\"olnjpnnbmjksibj\",\"lastModifiedTime\":\"2021-06-16T22:07:38Z\",\"lastModifiedBy\":\"xxahmrnadzyqegxy\",\"tasks\":{\"preTask\":{\"status\":\"nbm\",\"source\":\"bjijkgqxnh\",\"jobId\":\"keznjaujvaa\"},\"postTask\":{\"status\":\"giycwkdtaawxwfek\",\"source\":\"mrrqmbzmqkratb\",\"jobId\":\"wbjsidbirkf\"}}}},{\"name\":\"sokdgoge\",\"id\":\"jymrhbg\",\"properties\":{\"softwareUpdateConfiguration\":{\"name\":\"kyewnfnzhhhqo\"},\"status\":\"ffjkutycyarnroo\",\"configuredDuration\":\"uabzoghkt\",\"osType\":\"yczhco\",\"startTime\":\"2021-02-03T14:26:42Z\",\"endTime\":\"2021-08-06T22:23:09Z\",\"computerCount\":331498127,\"failedCount\":490198626,\"creationTime\":\"2021-11-05T08:34:41Z\",\"createdBy\":\"zcfyjzptwrl\",\"lastModifiedTime\":\"2021-01-18T01:20:57Z\",\"lastModifiedBy\":\"qinfszpyglqd\",\"tasks\":{\"preTask\":{\"status\":\"zralcxpjbyyps\",\"source\":\"qcjenkyhf\",\"jobId\":\"vsqxfxjelgcmpzqj\"},\"postTask\":{\"status\":\"qxuwyvca\",\"source\":\"yv\",\"jobId\":\"bsizus\"}}}},{\"name\":\"zlbscmnlziji\",\"id\":\"ehgmvflnwyv\",\"properties\":{\"softwareUpdateConfiguration\":{\"name\":\"erlniylylyfw\"},\"status\":\"utgqztwh\",\"configuredDuration\":\"mupgxy\",\"osType\":\"cdxa\",\"startTime\":\"2021-02-25T13:10:17Z\",\"endTime\":\"2021-09-26T19:19:15Z\",\"computerCount\":777012378,\"failedCount\":1953265319,\"creationTime\":\"2021-02-04T12:21:23Z\",\"createdBy\":\"klqpx\",\"lastModifiedTime\":\"2021-01-12T11:38:44Z\",\"lastModifiedBy\":\"feddwwnlza\",\"tasks\":{\"preTask\":{\"status\":\"dgnhgookrtalvnbw\",\"source\":\"bemeluclvd\",\"jobId\":\"ukyrdnqodxahh\"},\"postTask\":{\"status\":\"faqnvz\",\"source\":\"gyipem\",\"jobId\":\"gavsczuejd\"}}}}],\"nextLink\":\"ptlghwzhomewjjst\"}")
            .toObject(SoftwareUpdateConfigurationRunListResultInner.class);
        Assertions.assertEquals("y", model.value().get(0).tasks().preTask().status());
        Assertions.assertEquals("amwineofvfkakp", model.value().get(0).tasks().preTask().source());
        Assertions.assertEquals("dt", model.value().get(0).tasks().preTask().jobId());
        Assertions.assertEquals("boclzhzjknyuxgv", model.value().get(0).tasks().postTask().status());
        Assertions.assertEquals("xpn", model.value().get(0).tasks().postTask().source());
        Assertions.assertEquals("pzaamrdixtreki", model.value().get(0).tasks().postTask().jobId());
        Assertions.assertEquals("ptlghwzhomewjjst", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SoftwareUpdateConfigurationRunListResultInner model
            = new SoftwareUpdateConfigurationRunListResultInner().withValue(Arrays.asList(
                new SoftwareUpdateConfigurationRunInner()
                    .withSoftwareUpdateConfiguration(new UpdateConfigurationNavigation())
                    .withTasks(new SoftwareUpdateConfigurationRunTasks()
                        .withPreTask(new SoftwareUpdateConfigurationRunTaskProperties().withStatus("y")
                            .withSource("amwineofvfkakp")
                            .withJobId("dt"))
                        .withPostTask(new SoftwareUpdateConfigurationRunTaskProperties().withStatus("boclzhzjknyuxgv")
                            .withSource("xpn")
                            .withJobId("pzaamrdixtreki"))),
                new SoftwareUpdateConfigurationRunInner()
                    .withSoftwareUpdateConfiguration(new UpdateConfigurationNavigation())
                    .withTasks(new SoftwareUpdateConfigurationRunTasks()
                        .withPreTask(new SoftwareUpdateConfigurationRunTaskProperties().withStatus("nbm")
                            .withSource("bjijkgqxnh")
                            .withJobId("keznjaujvaa"))
                        .withPostTask(new SoftwareUpdateConfigurationRunTaskProperties().withStatus("giycwkdtaawxwfek")
                            .withSource("mrrqmbzmqkratb")
                            .withJobId("wbjsidbirkf"))),
                new SoftwareUpdateConfigurationRunInner()
                    .withSoftwareUpdateConfiguration(new UpdateConfigurationNavigation())
                    .withTasks(new SoftwareUpdateConfigurationRunTasks()
                        .withPreTask(new SoftwareUpdateConfigurationRunTaskProperties().withStatus("zralcxpjbyyps")
                            .withSource("qcjenkyhf")
                            .withJobId("vsqxfxjelgcmpzqj"))
                        .withPostTask(new SoftwareUpdateConfigurationRunTaskProperties().withStatus("qxuwyvca")
                            .withSource("yv")
                            .withJobId("bsizus"))),
                new SoftwareUpdateConfigurationRunInner()
                    .withSoftwareUpdateConfiguration(new UpdateConfigurationNavigation())
                    .withTasks(new SoftwareUpdateConfigurationRunTasks()
                        .withPreTask(new SoftwareUpdateConfigurationRunTaskProperties().withStatus("dgnhgookrtalvnbw")
                            .withSource("bemeluclvd")
                            .withJobId("ukyrdnqodxahh"))
                        .withPostTask(new SoftwareUpdateConfigurationRunTaskProperties().withStatus("faqnvz")
                            .withSource("gyipem")
                            .withJobId("gavsczuejd")))))
                .withNextLink("ptlghwzhomewjjst");
        model = BinaryData.fromObject(model).toObject(SoftwareUpdateConfigurationRunListResultInner.class);
        Assertions.assertEquals("y", model.value().get(0).tasks().preTask().status());
        Assertions.assertEquals("amwineofvfkakp", model.value().get(0).tasks().preTask().source());
        Assertions.assertEquals("dt", model.value().get(0).tasks().preTask().jobId());
        Assertions.assertEquals("boclzhzjknyuxgv", model.value().get(0).tasks().postTask().status());
        Assertions.assertEquals("xpn", model.value().get(0).tasks().postTask().source());
        Assertions.assertEquals("pzaamrdixtreki", model.value().get(0).tasks().postTask().jobId());
        Assertions.assertEquals("ptlghwzhomewjjst", model.nextLink());
    }
}
