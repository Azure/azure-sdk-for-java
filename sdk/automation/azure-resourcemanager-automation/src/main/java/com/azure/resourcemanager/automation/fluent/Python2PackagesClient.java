// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.automation.fluent.models.ModuleInner;
import com.azure.resourcemanager.automation.models.PythonPackageCreateParameters;
import com.azure.resourcemanager.automation.models.PythonPackageUpdateParameters;

/** An instance of this class provides access to all the operations defined in Python2PackagesClient. */
public interface Python2PackagesClient {
    /**
     * Delete the python 2 package by name.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param packageName The python package name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String automationAccountName, String packageName);

    /**
     * Delete the python 2 package by name.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param packageName The python package name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(
        String resourceGroupName, String automationAccountName, String packageName, Context context);

    /**
     * Retrieve the python 2 package identified by package name.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param packageName The python package name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return definition of the module type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ModuleInner get(String resourceGroupName, String automationAccountName, String packageName);

    /**
     * Retrieve the python 2 package identified by package name.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param packageName The python package name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return definition of the module type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ModuleInner> getWithResponse(
        String resourceGroupName, String automationAccountName, String packageName, Context context);

    /**
     * Create or Update the python 2 package identified by package name.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param packageName The name of python package.
     * @param parameters The create or update parameters for python package.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return definition of the module type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ModuleInner createOrUpdate(
        String resourceGroupName,
        String automationAccountName,
        String packageName,
        PythonPackageCreateParameters parameters);

    /**
     * Create or Update the python 2 package identified by package name.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param packageName The name of python package.
     * @param parameters The create or update parameters for python package.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return definition of the module type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ModuleInner> createOrUpdateWithResponse(
        String resourceGroupName,
        String automationAccountName,
        String packageName,
        PythonPackageCreateParameters parameters,
        Context context);

    /**
     * Update the python 2 package identified by package name.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param packageName The name of python package.
     * @param parameters The update parameters for python package.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return definition of the module type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ModuleInner update(
        String resourceGroupName,
        String automationAccountName,
        String packageName,
        PythonPackageUpdateParameters parameters);

    /**
     * Update the python 2 package identified by package name.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param packageName The name of python package.
     * @param parameters The update parameters for python package.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return definition of the module type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ModuleInner> updateWithResponse(
        String resourceGroupName,
        String automationAccountName,
        String packageName,
        PythonPackageUpdateParameters parameters,
        Context context);

    /**
     * Retrieve a list of python 2 packages.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response model for the list module operation.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ModuleInner> listByAutomationAccount(String resourceGroupName, String automationAccountName);

    /**
     * Retrieve a list of python 2 packages.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response model for the list module operation.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ModuleInner> listByAutomationAccount(
        String resourceGroupName, String automationAccountName, Context context);
}
