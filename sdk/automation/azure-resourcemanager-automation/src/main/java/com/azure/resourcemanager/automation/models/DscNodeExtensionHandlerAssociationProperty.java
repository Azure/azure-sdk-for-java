// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The dsc extensionHandler property associated with the node. */
@Fluent
public final class DscNodeExtensionHandlerAssociationProperty {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(DscNodeExtensionHandlerAssociationProperty.class);

    /*
     * Gets or sets the name of the extension handler.
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * Gets or sets the version of the extension handler.
     */
    @JsonProperty(value = "version")
    private String version;

    /**
     * Get the name property: Gets or sets the name of the extension handler.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Gets or sets the name of the extension handler.
     *
     * @param name the name value to set.
     * @return the DscNodeExtensionHandlerAssociationProperty object itself.
     */
    public DscNodeExtensionHandlerAssociationProperty withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the version property: Gets or sets the version of the extension handler.
     *
     * @return the version value.
     */
    public String version() {
        return this.version;
    }

    /**
     * Set the version property: Gets or sets the version of the extension handler.
     *
     * @param version the version value to set.
     * @return the DscNodeExtensionHandlerAssociationProperty object itself.
     */
    public DscNodeExtensionHandlerAssociationProperty withVersion(String version) {
        this.version = version;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
