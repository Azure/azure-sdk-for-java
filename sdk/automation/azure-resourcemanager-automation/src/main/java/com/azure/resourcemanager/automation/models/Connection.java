// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.automation.fluent.models.ConnectionInner;
import java.time.OffsetDateTime;
import java.util.Map;

/** An immutable client-side representation of Connection. */
public interface Connection {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the connectionType property: Gets or sets the connectionType of the connection.
     *
     * @return the connectionType value.
     */
    ConnectionTypeAssociationProperty connectionType();

    /**
     * Gets the fieldDefinitionValues property: Gets the field definition values of the connection.
     *
     * @return the fieldDefinitionValues value.
     */
    Map<String, String> fieldDefinitionValues();

    /**
     * Gets the creationTime property: Gets the creation time.
     *
     * @return the creationTime value.
     */
    OffsetDateTime creationTime();

    /**
     * Gets the lastModifiedTime property: Gets the last modified time.
     *
     * @return the lastModifiedTime value.
     */
    OffsetDateTime lastModifiedTime();

    /**
     * Gets the description property: Gets or sets the description.
     *
     * @return the description value.
     */
    String description();

    /**
     * Gets the inner com.azure.resourcemanager.automation.fluent.models.ConnectionInner object.
     *
     * @return the inner object.
     */
    ConnectionInner innerModel();

    /** The entirety of the Connection definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithParentResource,
            DefinitionStages.WithName,
            DefinitionStages.WithConnectionType,
            DefinitionStages.WithCreate {
    }
    /** The Connection definition stages. */
    interface DefinitionStages {
        /** The first stage of the Connection definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the Connection definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, automationAccountName.
             *
             * @param resourceGroupName Name of an Azure Resource group.
             * @param automationAccountName The name of the automation account.
             * @return the next definition stage.
             */
            WithName withExistingAutomationAccount(String resourceGroupName, String automationAccountName);
        }
        /** The stage of the Connection definition allowing to specify name. */
        interface WithName {
            /**
             * Specifies the name property: Gets or sets the name of the connection..
             *
             * @param name Gets or sets the name of the connection.
             * @return the next definition stage.
             */
            WithConnectionType withName(String name);
        }
        /** The stage of the Connection definition allowing to specify connectionType. */
        interface WithConnectionType {
            /**
             * Specifies the connectionType property: Gets or sets the connectionType of the connection..
             *
             * @param connectionType Gets or sets the connectionType of the connection.
             * @return the next definition stage.
             */
            WithCreate withConnectionType(ConnectionTypeAssociationProperty connectionType);
        }
        /**
         * The stage of the Connection definition which contains all the minimum required properties for the resource to
         * be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithDescription, DefinitionStages.WithFieldDefinitionValues {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            Connection create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            Connection create(Context context);
        }
        /** The stage of the Connection definition allowing to specify description. */
        interface WithDescription {
            /**
             * Specifies the description property: Gets or sets the description of the connection..
             *
             * @param description Gets or sets the description of the connection.
             * @return the next definition stage.
             */
            WithCreate withDescription(String description);
        }
        /** The stage of the Connection definition allowing to specify fieldDefinitionValues. */
        interface WithFieldDefinitionValues {
            /**
             * Specifies the fieldDefinitionValues property: Gets or sets the field definition properties of the
             * connection..
             *
             * @param fieldDefinitionValues Gets or sets the field definition properties of the connection.
             * @return the next definition stage.
             */
            WithCreate withFieldDefinitionValues(Map<String, String> fieldDefinitionValues);
        }
    }
    /**
     * Begins update for the Connection resource.
     *
     * @return the stage of resource update.
     */
    Connection.Update update();

    /** The template for Connection update. */
    interface Update
        extends UpdateStages.WithName, UpdateStages.WithDescription, UpdateStages.WithFieldDefinitionValues {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        Connection apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        Connection apply(Context context);
    }
    /** The Connection update stages. */
    interface UpdateStages {
        /** The stage of the Connection update allowing to specify name. */
        interface WithName {
            /**
             * Specifies the name property: Gets or sets the name of the connection..
             *
             * @param name Gets or sets the name of the connection.
             * @return the next definition stage.
             */
            Update withName(String name);
        }
        /** The stage of the Connection update allowing to specify description. */
        interface WithDescription {
            /**
             * Specifies the description property: Gets or sets the description of the connection..
             *
             * @param description Gets or sets the description of the connection.
             * @return the next definition stage.
             */
            Update withDescription(String description);
        }
        /** The stage of the Connection update allowing to specify fieldDefinitionValues. */
        interface WithFieldDefinitionValues {
            /**
             * Specifies the fieldDefinitionValues property: Gets or sets the field definition values of the
             * connection..
             *
             * @param fieldDefinitionValues Gets or sets the field definition values of the connection.
             * @return the next definition stage.
             */
            Update withFieldDefinitionValues(Map<String, String> fieldDefinitionValues);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    Connection refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    Connection refresh(Context context);
}
