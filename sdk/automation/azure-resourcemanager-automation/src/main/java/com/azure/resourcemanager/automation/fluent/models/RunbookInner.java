// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.Resource;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.automation.models.ContentLink;
import com.azure.resourcemanager.automation.models.RunbookParameter;
import com.azure.resourcemanager.automation.models.RunbookProvisioningState;
import com.azure.resourcemanager.automation.models.RunbookState;
import com.azure.resourcemanager.automation.models.RunbookTypeEnum;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;

/** Definition of the runbook type. */
@JsonFlatten
@Fluent
public class RunbookInner extends Resource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(RunbookInner.class);

    /*
     * Gets or sets the etag of the resource.
     */
    @JsonProperty(value = "etag")
    private String etag;

    /*
     * Gets or sets the type of the runbook.
     */
    @JsonProperty(value = "properties.runbookType")
    private RunbookTypeEnum runbookType;

    /*
     * Gets or sets the published runbook content link.
     */
    @JsonProperty(value = "properties.publishContentLink")
    private ContentLink publishContentLink;

    /*
     * Gets or sets the state of the runbook.
     */
    @JsonProperty(value = "properties.state")
    private RunbookState state;

    /*
     * Gets or sets verbose log option.
     */
    @JsonProperty(value = "properties.logVerbose")
    private Boolean logVerbose;

    /*
     * Gets or sets progress log option.
     */
    @JsonProperty(value = "properties.logProgress")
    private Boolean logProgress;

    /*
     * Gets or sets the option to log activity trace of the runbook.
     */
    @JsonProperty(value = "properties.logActivityTrace")
    private Integer logActivityTrace;

    /*
     * Gets or sets the job count of the runbook.
     */
    @JsonProperty(value = "properties.jobCount")
    private Integer jobCount;

    /*
     * Gets or sets the runbook parameters.
     */
    @JsonProperty(value = "properties.parameters")
    private Map<String, RunbookParameter> parameters;

    /*
     * Gets or sets the runbook output types.
     */
    @JsonProperty(value = "properties.outputTypes")
    private List<String> outputTypes;

    /*
     * Gets or sets the draft runbook properties.
     */
    @JsonProperty(value = "properties.draft")
    private RunbookDraftInner draft;

    /*
     * Gets or sets the provisioning state of the runbook.
     */
    @JsonProperty(value = "properties.provisioningState")
    private RunbookProvisioningState provisioningState;

    /*
     * Gets or sets the last modified by.
     */
    @JsonProperty(value = "properties.lastModifiedBy")
    private String lastModifiedBy;

    /*
     * Gets or sets the creation time.
     */
    @JsonProperty(value = "properties.creationTime")
    private OffsetDateTime creationTime;

    /*
     * Gets or sets the last modified time.
     */
    @JsonProperty(value = "properties.lastModifiedTime")
    private OffsetDateTime lastModifiedTime;

    /*
     * Gets or sets the description.
     */
    @JsonProperty(value = "properties.description")
    private String description;

    /**
     * Get the etag property: Gets or sets the etag of the resource.
     *
     * @return the etag value.
     */
    public String etag() {
        return this.etag;
    }

    /**
     * Set the etag property: Gets or sets the etag of the resource.
     *
     * @param etag the etag value to set.
     * @return the RunbookInner object itself.
     */
    public RunbookInner withEtag(String etag) {
        this.etag = etag;
        return this;
    }

    /**
     * Get the runbookType property: Gets or sets the type of the runbook.
     *
     * @return the runbookType value.
     */
    public RunbookTypeEnum runbookType() {
        return this.runbookType;
    }

    /**
     * Set the runbookType property: Gets or sets the type of the runbook.
     *
     * @param runbookType the runbookType value to set.
     * @return the RunbookInner object itself.
     */
    public RunbookInner withRunbookType(RunbookTypeEnum runbookType) {
        this.runbookType = runbookType;
        return this;
    }

    /**
     * Get the publishContentLink property: Gets or sets the published runbook content link.
     *
     * @return the publishContentLink value.
     */
    public ContentLink publishContentLink() {
        return this.publishContentLink;
    }

    /**
     * Set the publishContentLink property: Gets or sets the published runbook content link.
     *
     * @param publishContentLink the publishContentLink value to set.
     * @return the RunbookInner object itself.
     */
    public RunbookInner withPublishContentLink(ContentLink publishContentLink) {
        this.publishContentLink = publishContentLink;
        return this;
    }

    /**
     * Get the state property: Gets or sets the state of the runbook.
     *
     * @return the state value.
     */
    public RunbookState state() {
        return this.state;
    }

    /**
     * Set the state property: Gets or sets the state of the runbook.
     *
     * @param state the state value to set.
     * @return the RunbookInner object itself.
     */
    public RunbookInner withState(RunbookState state) {
        this.state = state;
        return this;
    }

    /**
     * Get the logVerbose property: Gets or sets verbose log option.
     *
     * @return the logVerbose value.
     */
    public Boolean logVerbose() {
        return this.logVerbose;
    }

    /**
     * Set the logVerbose property: Gets or sets verbose log option.
     *
     * @param logVerbose the logVerbose value to set.
     * @return the RunbookInner object itself.
     */
    public RunbookInner withLogVerbose(Boolean logVerbose) {
        this.logVerbose = logVerbose;
        return this;
    }

    /**
     * Get the logProgress property: Gets or sets progress log option.
     *
     * @return the logProgress value.
     */
    public Boolean logProgress() {
        return this.logProgress;
    }

    /**
     * Set the logProgress property: Gets or sets progress log option.
     *
     * @param logProgress the logProgress value to set.
     * @return the RunbookInner object itself.
     */
    public RunbookInner withLogProgress(Boolean logProgress) {
        this.logProgress = logProgress;
        return this;
    }

    /**
     * Get the logActivityTrace property: Gets or sets the option to log activity trace of the runbook.
     *
     * @return the logActivityTrace value.
     */
    public Integer logActivityTrace() {
        return this.logActivityTrace;
    }

    /**
     * Set the logActivityTrace property: Gets or sets the option to log activity trace of the runbook.
     *
     * @param logActivityTrace the logActivityTrace value to set.
     * @return the RunbookInner object itself.
     */
    public RunbookInner withLogActivityTrace(Integer logActivityTrace) {
        this.logActivityTrace = logActivityTrace;
        return this;
    }

    /**
     * Get the jobCount property: Gets or sets the job count of the runbook.
     *
     * @return the jobCount value.
     */
    public Integer jobCount() {
        return this.jobCount;
    }

    /**
     * Set the jobCount property: Gets or sets the job count of the runbook.
     *
     * @param jobCount the jobCount value to set.
     * @return the RunbookInner object itself.
     */
    public RunbookInner withJobCount(Integer jobCount) {
        this.jobCount = jobCount;
        return this;
    }

    /**
     * Get the parameters property: Gets or sets the runbook parameters.
     *
     * @return the parameters value.
     */
    public Map<String, RunbookParameter> parameters() {
        return this.parameters;
    }

    /**
     * Set the parameters property: Gets or sets the runbook parameters.
     *
     * @param parameters the parameters value to set.
     * @return the RunbookInner object itself.
     */
    public RunbookInner withParameters(Map<String, RunbookParameter> parameters) {
        this.parameters = parameters;
        return this;
    }

    /**
     * Get the outputTypes property: Gets or sets the runbook output types.
     *
     * @return the outputTypes value.
     */
    public List<String> outputTypes() {
        return this.outputTypes;
    }

    /**
     * Set the outputTypes property: Gets or sets the runbook output types.
     *
     * @param outputTypes the outputTypes value to set.
     * @return the RunbookInner object itself.
     */
    public RunbookInner withOutputTypes(List<String> outputTypes) {
        this.outputTypes = outputTypes;
        return this;
    }

    /**
     * Get the draft property: Gets or sets the draft runbook properties.
     *
     * @return the draft value.
     */
    public RunbookDraftInner draft() {
        return this.draft;
    }

    /**
     * Set the draft property: Gets or sets the draft runbook properties.
     *
     * @param draft the draft value to set.
     * @return the RunbookInner object itself.
     */
    public RunbookInner withDraft(RunbookDraftInner draft) {
        this.draft = draft;
        return this;
    }

    /**
     * Get the provisioningState property: Gets or sets the provisioning state of the runbook.
     *
     * @return the provisioningState value.
     */
    public RunbookProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Set the provisioningState property: Gets or sets the provisioning state of the runbook.
     *
     * @param provisioningState the provisioningState value to set.
     * @return the RunbookInner object itself.
     */
    public RunbookInner withProvisioningState(RunbookProvisioningState provisioningState) {
        this.provisioningState = provisioningState;
        return this;
    }

    /**
     * Get the lastModifiedBy property: Gets or sets the last modified by.
     *
     * @return the lastModifiedBy value.
     */
    public String lastModifiedBy() {
        return this.lastModifiedBy;
    }

    /**
     * Set the lastModifiedBy property: Gets or sets the last modified by.
     *
     * @param lastModifiedBy the lastModifiedBy value to set.
     * @return the RunbookInner object itself.
     */
    public RunbookInner withLastModifiedBy(String lastModifiedBy) {
        this.lastModifiedBy = lastModifiedBy;
        return this;
    }

    /**
     * Get the creationTime property: Gets or sets the creation time.
     *
     * @return the creationTime value.
     */
    public OffsetDateTime creationTime() {
        return this.creationTime;
    }

    /**
     * Set the creationTime property: Gets or sets the creation time.
     *
     * @param creationTime the creationTime value to set.
     * @return the RunbookInner object itself.
     */
    public RunbookInner withCreationTime(OffsetDateTime creationTime) {
        this.creationTime = creationTime;
        return this;
    }

    /**
     * Get the lastModifiedTime property: Gets or sets the last modified time.
     *
     * @return the lastModifiedTime value.
     */
    public OffsetDateTime lastModifiedTime() {
        return this.lastModifiedTime;
    }

    /**
     * Set the lastModifiedTime property: Gets or sets the last modified time.
     *
     * @param lastModifiedTime the lastModifiedTime value to set.
     * @return the RunbookInner object itself.
     */
    public RunbookInner withLastModifiedTime(OffsetDateTime lastModifiedTime) {
        this.lastModifiedTime = lastModifiedTime;
        return this;
    }

    /**
     * Get the description property: Gets or sets the description.
     *
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: Gets or sets the description.
     *
     * @param description the description value to set.
     * @return the RunbookInner object itself.
     */
    public RunbookInner withDescription(String description) {
        this.description = description;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public RunbookInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public RunbookInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (publishContentLink() != null) {
            publishContentLink().validate();
        }
        if (parameters() != null) {
            parameters()
                .values()
                .forEach(
                    e -> {
                        if (e != null) {
                            e.validate();
                        }
                    });
        }
        if (draft() != null) {
            draft().validate();
        }
    }
}
