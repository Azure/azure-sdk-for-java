// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Settings concerning key vault encryption for a configuration store. */
@Fluent
public final class KeyVaultProperties {
    /*
     * The URI of the key vault key used to encrypt data.
     */
    @JsonProperty(value = "keyvaultUri")
    private String keyvaultUri;

    /*
     * The name of key used to encrypt data.
     */
    @JsonProperty(value = "keyName")
    private String keyName;

    /*
     * The key version of the key used to encrypt data.
     */
    @JsonProperty(value = "keyVersion")
    private String keyVersion;

    /**
     * Get the keyvaultUri property: The URI of the key vault key used to encrypt data.
     *
     * @return the keyvaultUri value.
     */
    public String keyvaultUri() {
        return this.keyvaultUri;
    }

    /**
     * Set the keyvaultUri property: The URI of the key vault key used to encrypt data.
     *
     * @param keyvaultUri the keyvaultUri value to set.
     * @return the KeyVaultProperties object itself.
     */
    public KeyVaultProperties withKeyvaultUri(String keyvaultUri) {
        this.keyvaultUri = keyvaultUri;
        return this;
    }

    /**
     * Get the keyName property: The name of key used to encrypt data.
     *
     * @return the keyName value.
     */
    public String keyName() {
        return this.keyName;
    }

    /**
     * Set the keyName property: The name of key used to encrypt data.
     *
     * @param keyName the keyName value to set.
     * @return the KeyVaultProperties object itself.
     */
    public KeyVaultProperties withKeyName(String keyName) {
        this.keyName = keyName;
        return this;
    }

    /**
     * Get the keyVersion property: The key version of the key used to encrypt data.
     *
     * @return the keyVersion value.
     */
    public String keyVersion() {
        return this.keyVersion;
    }

    /**
     * Set the keyVersion property: The key version of the key used to encrypt data.
     *
     * @param keyVersion the keyVersion value to set.
     * @return the KeyVaultProperties object itself.
     */
    public KeyVaultProperties withKeyVersion(String keyVersion) {
        this.keyVersion = keyVersion;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
