// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.models;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.automation.fluent.models.ModuleInner;
import java.time.OffsetDateTime;
import java.util.Map;

/** An immutable client-side representation of Module. */
public interface Module {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the etag property: Gets or sets the etag of the resource.
     *
     * @return the etag value.
     */
    String etag();

    /**
     * Gets the isGlobal property: Gets or sets the isGlobal flag of the module.
     *
     * @return the isGlobal value.
     */
    Boolean isGlobal();

    /**
     * Gets the version property: Gets or sets the version of the module.
     *
     * @return the version value.
     */
    String version();

    /**
     * Gets the sizeInBytes property: Gets or sets the size in bytes of the module.
     *
     * @return the sizeInBytes value.
     */
    Long sizeInBytes();

    /**
     * Gets the activityCount property: Gets or sets the activity count of the module.
     *
     * @return the activityCount value.
     */
    Integer activityCount();

    /**
     * Gets the provisioningState property: Gets or sets the provisioning state of the module.
     *
     * @return the provisioningState value.
     */
    ModuleProvisioningState provisioningState();

    /**
     * Gets the contentLink property: Gets or sets the contentLink of the module.
     *
     * @return the contentLink value.
     */
    ContentLink contentLink();

    /**
     * Gets the error property: Gets or sets the error info of the module.
     *
     * @return the error value.
     */
    ModuleErrorInfo error();

    /**
     * Gets the creationTime property: Gets or sets the creation time.
     *
     * @return the creationTime value.
     */
    OffsetDateTime creationTime();

    /**
     * Gets the lastModifiedTime property: Gets or sets the last modified time.
     *
     * @return the lastModifiedTime value.
     */
    OffsetDateTime lastModifiedTime();

    /**
     * Gets the description property: Gets or sets the description.
     *
     * @return the description value.
     */
    String description();

    /**
     * Gets the isComposite property: Gets or sets type of module, if its composite or not.
     *
     * @return the isComposite value.
     */
    Boolean isComposite();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.automation.fluent.models.ModuleInner object.
     *
     * @return the inner object.
     */
    ModuleInner innerModel();

    /** The entirety of the Module definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithParentResource,
            DefinitionStages.WithContentLink,
            DefinitionStages.WithCreate {
    }
    /** The Module definition stages. */
    interface DefinitionStages {
        /** The first stage of the Module definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the Module definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, automationAccountName.
             *
             * @param resourceGroupName Name of an Azure Resource group.
             * @param automationAccountName The name of the automation account.
             * @return the next definition stage.
             */
            WithContentLink withExistingAutomationAccount(String resourceGroupName, String automationAccountName);
        }
        /** The stage of the Module definition allowing to specify contentLink. */
        interface WithContentLink {
            /**
             * Specifies the contentLink property: Gets or sets the module content link..
             *
             * @param contentLink Gets or sets the module content link.
             * @return the next definition stage.
             */
            WithCreate withContentLink(ContentLink contentLink);
        }
        /**
         * The stage of the Module definition which contains all the minimum required properties for the resource to be
         * created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithTags {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            Module create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            Module create(Context context);
        }
        /** The stage of the Module definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Gets or sets the tags attached to the resource..
             *
             * @param tags Gets or sets the tags attached to the resource.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
    }
    /**
     * Begins update for the Module resource.
     *
     * @return the stage of resource update.
     */
    Module.Update update();

    /** The template for Module update. */
    interface Update extends UpdateStages.WithTags {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        Module apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        Module apply(Context context);
    }
    /** The Module update stages. */
    interface UpdateStages {
        /** The stage of the Module update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Gets or sets the tags attached to the resource..
             *
             * @param tags Gets or sets the tags attached to the resource.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    Module refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    Module refresh(Context context);
}
