// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.automation.fluent.models.DscConfigurationInner;
import com.azure.resourcemanager.automation.models.DscConfigurationCreateOrUpdateParameters;
import com.azure.resourcemanager.automation.models.DscConfigurationUpdateParameters;

/** An instance of this class provides access to all the operations defined in DscConfigurationsClient. */
public interface DscConfigurationsClient {
    /**
     * Delete the dsc configuration identified by configuration name.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param configurationName The configuration name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String automationAccountName, String configurationName);

    /**
     * Delete the dsc configuration identified by configuration name.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param configurationName The configuration name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(
        String resourceGroupName, String automationAccountName, String configurationName, Context context);

    /**
     * Retrieve the configuration identified by configuration name.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param configurationName The configuration name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return definition of the configuration type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DscConfigurationInner get(String resourceGroupName, String automationAccountName, String configurationName);

    /**
     * Retrieve the configuration identified by configuration name.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param configurationName The configuration name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return definition of the configuration type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DscConfigurationInner> getWithResponse(
        String resourceGroupName, String automationAccountName, String configurationName, Context context);

    /**
     * Create the configuration identified by configuration name.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param configurationName The create or update parameters for configuration.
     * @param parameters The create or update parameters for configuration.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return definition of the configuration type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DscConfigurationInner createOrUpdate(
        String resourceGroupName, String automationAccountName, String configurationName, String parameters);

    /**
     * Create the configuration identified by configuration name.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param configurationName The create or update parameters for configuration.
     * @param parameters The create or update parameters for configuration.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return definition of the configuration type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DscConfigurationInner> createOrUpdateWithResponse(
        String resourceGroupName,
        String automationAccountName,
        String configurationName,
        String parameters,
        Context context);

    /**
     * Create the configuration identified by configuration name.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param configurationName The create or update parameters for configuration.
     * @param parameters The create or update parameters for configuration.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return definition of the configuration type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DscConfigurationInner createOrUpdate(
        String resourceGroupName,
        String automationAccountName,
        String configurationName,
        DscConfigurationCreateOrUpdateParameters parameters);

    /**
     * Create the configuration identified by configuration name.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param configurationName The create or update parameters for configuration.
     * @param parameters The create or update parameters for configuration.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return definition of the configuration type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DscConfigurationInner> createOrUpdateWithResponse(
        String resourceGroupName,
        String automationAccountName,
        String configurationName,
        DscConfigurationCreateOrUpdateParameters parameters,
        Context context);

    /**
     * Create the configuration identified by configuration name.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param configurationName The create or update parameters for configuration.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return definition of the configuration type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DscConfigurationInner update(String resourceGroupName, String automationAccountName, String configurationName);

    /**
     * Create the configuration identified by configuration name.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param configurationName The create or update parameters for configuration.
     * @param parameters The create or update parameters for configuration.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return definition of the configuration type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DscConfigurationInner> updateWithResponse(
        String resourceGroupName,
        String automationAccountName,
        String configurationName,
        String parameters,
        Context context);

    /**
     * Create the configuration identified by configuration name.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param configurationName The create or update parameters for configuration.
     * @param parameters The create or update parameters for configuration.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return definition of the configuration type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DscConfigurationInner> updateWithResponse(
        String resourceGroupName,
        String automationAccountName,
        String configurationName,
        DscConfigurationUpdateParameters parameters,
        Context context);

    /**
     * Retrieve the configuration script identified by configuration name.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param configurationName The configuration name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    String getContent(String resourceGroupName, String automationAccountName, String configurationName);

    /**
     * Retrieve the configuration script identified by configuration name.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param configurationName The configuration name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<String> getContentWithResponse(
        String resourceGroupName, String automationAccountName, String configurationName, Context context);

    /**
     * Retrieve a list of configurations.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response model for the list configuration operation.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DscConfigurationInner> listByAutomationAccount(
        String resourceGroupName, String automationAccountName);

    /**
     * Retrieve a list of configurations.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param filter The filter to apply on the operation.
     * @param skip The number of rows to skip.
     * @param top The number of rows to take.
     * @param inlinecount Return total rows.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response model for the list configuration operation.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DscConfigurationInner> listByAutomationAccount(
        String resourceGroupName,
        String automationAccountName,
        String filter,
        Integer skip,
        Integer top,
        String inlinecount,
        Context context);
}
