// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The parameters supplied to the create or update or replace certificate operation. */
@JsonFlatten
@Fluent
public class CertificateCreateOrUpdateParameters {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(CertificateCreateOrUpdateParameters.class);

    /*
     * Gets or sets the name of the certificate.
     */
    @JsonProperty(value = "name", required = true)
    private String name;

    /*
     * Gets or sets the base64 encoded value of the certificate.
     */
    @JsonProperty(value = "properties.base64Value", required = true)
    private String base64Value;

    /*
     * Gets or sets the description of the certificate.
     */
    @JsonProperty(value = "properties.description")
    private String description;

    /*
     * Gets or sets the thumbprint of the certificate.
     */
    @JsonProperty(value = "properties.thumbprint")
    private String thumbprint;

    /*
     * Gets or sets the is exportable flag of the certificate.
     */
    @JsonProperty(value = "properties.isExportable")
    private Boolean isExportable;

    /**
     * Get the name property: Gets or sets the name of the certificate.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Gets or sets the name of the certificate.
     *
     * @param name the name value to set.
     * @return the CertificateCreateOrUpdateParameters object itself.
     */
    public CertificateCreateOrUpdateParameters withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the base64Value property: Gets or sets the base64 encoded value of the certificate.
     *
     * @return the base64Value value.
     */
    public String base64Value() {
        return this.base64Value;
    }

    /**
     * Set the base64Value property: Gets or sets the base64 encoded value of the certificate.
     *
     * @param base64Value the base64Value value to set.
     * @return the CertificateCreateOrUpdateParameters object itself.
     */
    public CertificateCreateOrUpdateParameters withBase64Value(String base64Value) {
        this.base64Value = base64Value;
        return this;
    }

    /**
     * Get the description property: Gets or sets the description of the certificate.
     *
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: Gets or sets the description of the certificate.
     *
     * @param description the description value to set.
     * @return the CertificateCreateOrUpdateParameters object itself.
     */
    public CertificateCreateOrUpdateParameters withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the thumbprint property: Gets or sets the thumbprint of the certificate.
     *
     * @return the thumbprint value.
     */
    public String thumbprint() {
        return this.thumbprint;
    }

    /**
     * Set the thumbprint property: Gets or sets the thumbprint of the certificate.
     *
     * @param thumbprint the thumbprint value to set.
     * @return the CertificateCreateOrUpdateParameters object itself.
     */
    public CertificateCreateOrUpdateParameters withThumbprint(String thumbprint) {
        this.thumbprint = thumbprint;
        return this;
    }

    /**
     * Get the isExportable property: Gets or sets the is exportable flag of the certificate.
     *
     * @return the isExportable value.
     */
    public Boolean isExportable() {
        return this.isExportable;
    }

    /**
     * Set the isExportable property: Gets or sets the is exportable flag of the certificate.
     *
     * @param isExportable the isExportable value to set.
     * @return the CertificateCreateOrUpdateParameters object itself.
     */
    public CertificateCreateOrUpdateParameters withIsExportable(Boolean isExportable) {
        this.isExportable = isExportable;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (name() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property name in model CertificateCreateOrUpdateParameters"));
        }
        if (base64Value() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property base64Value in model CertificateCreateOrUpdateParameters"));
        }
    }
}
