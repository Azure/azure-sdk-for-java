// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.automation.fluent.models.WebhookInner;
import com.azure.resourcemanager.automation.models.WebhookCreateOrUpdateParameters;
import com.azure.resourcemanager.automation.models.WebhookUpdateParameters;

/** An instance of this class provides access to all the operations defined in WebhooksClient. */
public interface WebhooksClient {
    /**
     * Generates a Uri for use in creating a webhook.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    String generateUri(String resourceGroupName, String automationAccountName);

    /**
     * Generates a Uri for use in creating a webhook.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<String> generateUriWithResponse(String resourceGroupName, String automationAccountName, Context context);

    /**
     * Delete the webhook by name.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param webhookName The webhook name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String automationAccountName, String webhookName);

    /**
     * Delete the webhook by name.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param webhookName The webhook name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(
        String resourceGroupName, String automationAccountName, String webhookName, Context context);

    /**
     * Retrieve the webhook identified by webhook name.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param webhookName The webhook name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return definition of the webhook type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    WebhookInner get(String resourceGroupName, String automationAccountName, String webhookName);

    /**
     * Retrieve the webhook identified by webhook name.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param webhookName The webhook name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return definition of the webhook type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<WebhookInner> getWithResponse(
        String resourceGroupName, String automationAccountName, String webhookName, Context context);

    /**
     * Create the webhook identified by webhook name.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param webhookName The webhook name.
     * @param parameters The create or update parameters for webhook.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return definition of the webhook type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    WebhookInner createOrUpdate(
        String resourceGroupName,
        String automationAccountName,
        String webhookName,
        WebhookCreateOrUpdateParameters parameters);

    /**
     * Create the webhook identified by webhook name.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param webhookName The webhook name.
     * @param parameters The create or update parameters for webhook.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return definition of the webhook type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<WebhookInner> createOrUpdateWithResponse(
        String resourceGroupName,
        String automationAccountName,
        String webhookName,
        WebhookCreateOrUpdateParameters parameters,
        Context context);

    /**
     * Update the webhook identified by webhook name.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param webhookName The webhook name.
     * @param parameters The update parameters for webhook.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return definition of the webhook type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    WebhookInner update(
        String resourceGroupName, String automationAccountName, String webhookName, WebhookUpdateParameters parameters);

    /**
     * Update the webhook identified by webhook name.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param webhookName The webhook name.
     * @param parameters The update parameters for webhook.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return definition of the webhook type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<WebhookInner> updateWithResponse(
        String resourceGroupName,
        String automationAccountName,
        String webhookName,
        WebhookUpdateParameters parameters,
        Context context);

    /**
     * Retrieve a list of webhooks.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response model for the list webhook operation.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<WebhookInner> listByAutomationAccount(String resourceGroupName, String automationAccountName);

    /**
     * Retrieve a list of webhooks.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param filter The filter to apply on the operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response model for the list webhook operation.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<WebhookInner> listByAutomationAccount(
        String resourceGroupName, String automationAccountName, String filter, Context context);
}
