// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Non Azure query for the update configuration. */
@Fluent
public final class NonAzureQueryProperties {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(NonAzureQueryProperties.class);

    /*
     * Log Analytics Saved Search name.
     */
    @JsonProperty(value = "functionAlias")
    private String functionAlias;

    /*
     * Workspace Id for Log Analytics in which the saved Search is resided.
     */
    @JsonProperty(value = "workspaceId")
    private String workspaceId;

    /**
     * Get the functionAlias property: Log Analytics Saved Search name.
     *
     * @return the functionAlias value.
     */
    public String functionAlias() {
        return this.functionAlias;
    }

    /**
     * Set the functionAlias property: Log Analytics Saved Search name.
     *
     * @param functionAlias the functionAlias value to set.
     * @return the NonAzureQueryProperties object itself.
     */
    public NonAzureQueryProperties withFunctionAlias(String functionAlias) {
        this.functionAlias = functionAlias;
        return this;
    }

    /**
     * Get the workspaceId property: Workspace Id for Log Analytics in which the saved Search is resided.
     *
     * @return the workspaceId value.
     */
    public String workspaceId() {
        return this.workspaceId;
    }

    /**
     * Set the workspaceId property: Workspace Id for Log Analytics in which the saved Search is resided.
     *
     * @param workspaceId the workspaceId value to set.
     * @return the NonAzureQueryProperties object itself.
     */
    public NonAzureQueryProperties withWorkspaceId(String workspaceId) {
        this.workspaceId = workspaceId;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
