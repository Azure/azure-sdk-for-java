// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.ProxyResource;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.automation.models.DscConfigurationAssociationProperty;
import com.azure.resourcemanager.automation.models.JobProvisioningState;
import com.azure.resourcemanager.automation.models.JobStatus;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.Map;
import java.util.UUID;

/** Definition of the Dsc Compilation job. */
@JsonFlatten
@Fluent
public class DscCompilationJobInner extends ProxyResource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(DscCompilationJobInner.class);

    /*
     * Gets or sets the configuration.
     */
    @JsonProperty(value = "properties.configuration")
    private DscConfigurationAssociationProperty configuration;

    /*
     * Gets the compilation job started by.
     */
    @JsonProperty(value = "properties.startedBy", access = JsonProperty.Access.WRITE_ONLY)
    private String startedBy;

    /*
     * Gets the id of the job.
     */
    @JsonProperty(value = "properties.jobId", access = JsonProperty.Access.WRITE_ONLY)
    private UUID jobId;

    /*
     * Gets the creation time of the job.
     */
    @JsonProperty(value = "properties.creationTime", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime creationTime;

    /*
     * The current provisioning state of the job.
     */
    @JsonProperty(value = "properties.provisioningState")
    private JobProvisioningState provisioningState;

    /*
     * Gets or sets the runOn which specifies the group name where the job is
     * to be executed.
     */
    @JsonProperty(value = "properties.runOn")
    private String runOn;

    /*
     * Gets or sets the status of the job.
     */
    @JsonProperty(value = "properties.status")
    private JobStatus status;

    /*
     * Gets or sets the status details of the job.
     */
    @JsonProperty(value = "properties.statusDetails")
    private String statusDetails;

    /*
     * Gets the start time of the job.
     */
    @JsonProperty(value = "properties.startTime", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime startTime;

    /*
     * Gets the end time of the job.
     */
    @JsonProperty(value = "properties.endTime", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime endTime;

    /*
     * Gets the exception of the job.
     */
    @JsonProperty(value = "properties.exception", access = JsonProperty.Access.WRITE_ONLY)
    private String exception;

    /*
     * Gets the last modified time of the job.
     */
    @JsonProperty(value = "properties.lastModifiedTime", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime lastModifiedTime;

    /*
     * Gets the last status modified time of the job.
     */
    @JsonProperty(value = "properties.lastStatusModifiedTime", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime lastStatusModifiedTime;

    /*
     * Gets or sets the parameters of the job.
     */
    @JsonProperty(value = "properties.parameters")
    private Map<String, String> parameters;

    /**
     * Get the configuration property: Gets or sets the configuration.
     *
     * @return the configuration value.
     */
    public DscConfigurationAssociationProperty configuration() {
        return this.configuration;
    }

    /**
     * Set the configuration property: Gets or sets the configuration.
     *
     * @param configuration the configuration value to set.
     * @return the DscCompilationJobInner object itself.
     */
    public DscCompilationJobInner withConfiguration(DscConfigurationAssociationProperty configuration) {
        this.configuration = configuration;
        return this;
    }

    /**
     * Get the startedBy property: Gets the compilation job started by.
     *
     * @return the startedBy value.
     */
    public String startedBy() {
        return this.startedBy;
    }

    /**
     * Get the jobId property: Gets the id of the job.
     *
     * @return the jobId value.
     */
    public UUID jobId() {
        return this.jobId;
    }

    /**
     * Get the creationTime property: Gets the creation time of the job.
     *
     * @return the creationTime value.
     */
    public OffsetDateTime creationTime() {
        return this.creationTime;
    }

    /**
     * Get the provisioningState property: The current provisioning state of the job.
     *
     * @return the provisioningState value.
     */
    public JobProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Set the provisioningState property: The current provisioning state of the job.
     *
     * @param provisioningState the provisioningState value to set.
     * @return the DscCompilationJobInner object itself.
     */
    public DscCompilationJobInner withProvisioningState(JobProvisioningState provisioningState) {
        this.provisioningState = provisioningState;
        return this;
    }

    /**
     * Get the runOn property: Gets or sets the runOn which specifies the group name where the job is to be executed.
     *
     * @return the runOn value.
     */
    public String runOn() {
        return this.runOn;
    }

    /**
     * Set the runOn property: Gets or sets the runOn which specifies the group name where the job is to be executed.
     *
     * @param runOn the runOn value to set.
     * @return the DscCompilationJobInner object itself.
     */
    public DscCompilationJobInner withRunOn(String runOn) {
        this.runOn = runOn;
        return this;
    }

    /**
     * Get the status property: Gets or sets the status of the job.
     *
     * @return the status value.
     */
    public JobStatus status() {
        return this.status;
    }

    /**
     * Set the status property: Gets or sets the status of the job.
     *
     * @param status the status value to set.
     * @return the DscCompilationJobInner object itself.
     */
    public DscCompilationJobInner withStatus(JobStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Get the statusDetails property: Gets or sets the status details of the job.
     *
     * @return the statusDetails value.
     */
    public String statusDetails() {
        return this.statusDetails;
    }

    /**
     * Set the statusDetails property: Gets or sets the status details of the job.
     *
     * @param statusDetails the statusDetails value to set.
     * @return the DscCompilationJobInner object itself.
     */
    public DscCompilationJobInner withStatusDetails(String statusDetails) {
        this.statusDetails = statusDetails;
        return this;
    }

    /**
     * Get the startTime property: Gets the start time of the job.
     *
     * @return the startTime value.
     */
    public OffsetDateTime startTime() {
        return this.startTime;
    }

    /**
     * Get the endTime property: Gets the end time of the job.
     *
     * @return the endTime value.
     */
    public OffsetDateTime endTime() {
        return this.endTime;
    }

    /**
     * Get the exception property: Gets the exception of the job.
     *
     * @return the exception value.
     */
    public String exception() {
        return this.exception;
    }

    /**
     * Get the lastModifiedTime property: Gets the last modified time of the job.
     *
     * @return the lastModifiedTime value.
     */
    public OffsetDateTime lastModifiedTime() {
        return this.lastModifiedTime;
    }

    /**
     * Get the lastStatusModifiedTime property: Gets the last status modified time of the job.
     *
     * @return the lastStatusModifiedTime value.
     */
    public OffsetDateTime lastStatusModifiedTime() {
        return this.lastStatusModifiedTime;
    }

    /**
     * Get the parameters property: Gets or sets the parameters of the job.
     *
     * @return the parameters value.
     */
    public Map<String, String> parameters() {
        return this.parameters;
    }

    /**
     * Set the parameters property: Gets or sets the parameters of the job.
     *
     * @param parameters the parameters value to set.
     * @return the DscCompilationJobInner object itself.
     */
    public DscCompilationJobInner withParameters(Map<String, String> parameters) {
        this.parameters = parameters;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (configuration() != null) {
            configuration().validate();
        }
    }
}
