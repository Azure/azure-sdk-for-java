// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Definition of the DSC Meta Configuration. */
@Fluent
public final class DscMetaConfiguration {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(DscMetaConfiguration.class);

    /*
     * Gets or sets the ConfigurationModeFrequencyMins value of the meta
     * configuration.
     */
    @JsonProperty(value = "configurationModeFrequencyMins")
    private Integer configurationModeFrequencyMins;

    /*
     * Gets or sets the RebootNodeIfNeeded value of the meta configuration.
     */
    @JsonProperty(value = "rebootNodeIfNeeded")
    private Boolean rebootNodeIfNeeded;

    /*
     * Gets or sets the ConfigurationMode value of the meta configuration.
     */
    @JsonProperty(value = "configurationMode")
    private String configurationMode;

    /*
     * Gets or sets the ActionAfterReboot value of the meta configuration.
     */
    @JsonProperty(value = "actionAfterReboot")
    private String actionAfterReboot;

    /*
     * Gets or sets the CertificateId value of the meta configuration.
     */
    @JsonProperty(value = "certificateId")
    private String certificateId;

    /*
     * Gets or sets the RefreshFrequencyMins value of the meta configuration.
     */
    @JsonProperty(value = "refreshFrequencyMins")
    private Integer refreshFrequencyMins;

    /*
     * Gets or sets the AllowModuleOverwrite value of the meta configuration.
     */
    @JsonProperty(value = "allowModuleOverwrite")
    private Boolean allowModuleOverwrite;

    /**
     * Get the configurationModeFrequencyMins property: Gets or sets the ConfigurationModeFrequencyMins value of the
     * meta configuration.
     *
     * @return the configurationModeFrequencyMins value.
     */
    public Integer configurationModeFrequencyMins() {
        return this.configurationModeFrequencyMins;
    }

    /**
     * Set the configurationModeFrequencyMins property: Gets or sets the ConfigurationModeFrequencyMins value of the
     * meta configuration.
     *
     * @param configurationModeFrequencyMins the configurationModeFrequencyMins value to set.
     * @return the DscMetaConfiguration object itself.
     */
    public DscMetaConfiguration withConfigurationModeFrequencyMins(Integer configurationModeFrequencyMins) {
        this.configurationModeFrequencyMins = configurationModeFrequencyMins;
        return this;
    }

    /**
     * Get the rebootNodeIfNeeded property: Gets or sets the RebootNodeIfNeeded value of the meta configuration.
     *
     * @return the rebootNodeIfNeeded value.
     */
    public Boolean rebootNodeIfNeeded() {
        return this.rebootNodeIfNeeded;
    }

    /**
     * Set the rebootNodeIfNeeded property: Gets or sets the RebootNodeIfNeeded value of the meta configuration.
     *
     * @param rebootNodeIfNeeded the rebootNodeIfNeeded value to set.
     * @return the DscMetaConfiguration object itself.
     */
    public DscMetaConfiguration withRebootNodeIfNeeded(Boolean rebootNodeIfNeeded) {
        this.rebootNodeIfNeeded = rebootNodeIfNeeded;
        return this;
    }

    /**
     * Get the configurationMode property: Gets or sets the ConfigurationMode value of the meta configuration.
     *
     * @return the configurationMode value.
     */
    public String configurationMode() {
        return this.configurationMode;
    }

    /**
     * Set the configurationMode property: Gets or sets the ConfigurationMode value of the meta configuration.
     *
     * @param configurationMode the configurationMode value to set.
     * @return the DscMetaConfiguration object itself.
     */
    public DscMetaConfiguration withConfigurationMode(String configurationMode) {
        this.configurationMode = configurationMode;
        return this;
    }

    /**
     * Get the actionAfterReboot property: Gets or sets the ActionAfterReboot value of the meta configuration.
     *
     * @return the actionAfterReboot value.
     */
    public String actionAfterReboot() {
        return this.actionAfterReboot;
    }

    /**
     * Set the actionAfterReboot property: Gets or sets the ActionAfterReboot value of the meta configuration.
     *
     * @param actionAfterReboot the actionAfterReboot value to set.
     * @return the DscMetaConfiguration object itself.
     */
    public DscMetaConfiguration withActionAfterReboot(String actionAfterReboot) {
        this.actionAfterReboot = actionAfterReboot;
        return this;
    }

    /**
     * Get the certificateId property: Gets or sets the CertificateId value of the meta configuration.
     *
     * @return the certificateId value.
     */
    public String certificateId() {
        return this.certificateId;
    }

    /**
     * Set the certificateId property: Gets or sets the CertificateId value of the meta configuration.
     *
     * @param certificateId the certificateId value to set.
     * @return the DscMetaConfiguration object itself.
     */
    public DscMetaConfiguration withCertificateId(String certificateId) {
        this.certificateId = certificateId;
        return this;
    }

    /**
     * Get the refreshFrequencyMins property: Gets or sets the RefreshFrequencyMins value of the meta configuration.
     *
     * @return the refreshFrequencyMins value.
     */
    public Integer refreshFrequencyMins() {
        return this.refreshFrequencyMins;
    }

    /**
     * Set the refreshFrequencyMins property: Gets or sets the RefreshFrequencyMins value of the meta configuration.
     *
     * @param refreshFrequencyMins the refreshFrequencyMins value to set.
     * @return the DscMetaConfiguration object itself.
     */
    public DscMetaConfiguration withRefreshFrequencyMins(Integer refreshFrequencyMins) {
        this.refreshFrequencyMins = refreshFrequencyMins;
        return this;
    }

    /**
     * Get the allowModuleOverwrite property: Gets or sets the AllowModuleOverwrite value of the meta configuration.
     *
     * @return the allowModuleOverwrite value.
     */
    public Boolean allowModuleOverwrite() {
        return this.allowModuleOverwrite;
    }

    /**
     * Set the allowModuleOverwrite property: Gets or sets the AllowModuleOverwrite value of the meta configuration.
     *
     * @param allowModuleOverwrite the allowModuleOverwrite value to set.
     * @return the DscMetaConfiguration object itself.
     */
    public DscMetaConfiguration withAllowModuleOverwrite(Boolean allowModuleOverwrite) {
        this.allowModuleOverwrite = allowModuleOverwrite;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
