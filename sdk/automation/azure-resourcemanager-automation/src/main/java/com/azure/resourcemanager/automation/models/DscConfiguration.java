// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.models;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.automation.fluent.models.DscConfigurationInner;
import java.time.OffsetDateTime;
import java.util.Map;

/** An immutable client-side representation of DscConfiguration. */
public interface DscConfiguration {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the etag property: Gets or sets the etag of the resource.
     *
     * @return the etag value.
     */
    String etag();

    /**
     * Gets the provisioningState property: Gets or sets the provisioning state of the configuration.
     *
     * @return the provisioningState value.
     */
    DscConfigurationProvisioningState provisioningState();

    /**
     * Gets the jobCount property: Gets or sets the job count of the configuration.
     *
     * @return the jobCount value.
     */
    Integer jobCount();

    /**
     * Gets the parameters property: Gets or sets the configuration parameters.
     *
     * @return the parameters value.
     */
    Map<String, DscConfigurationParameter> parameters();

    /**
     * Gets the source property: Gets or sets the source.
     *
     * @return the source value.
     */
    ContentSource source();

    /**
     * Gets the state property: Gets or sets the state of the configuration.
     *
     * @return the state value.
     */
    DscConfigurationState state();

    /**
     * Gets the logVerbose property: Gets or sets verbose log option.
     *
     * @return the logVerbose value.
     */
    Boolean logVerbose();

    /**
     * Gets the creationTime property: Gets or sets the creation time.
     *
     * @return the creationTime value.
     */
    OffsetDateTime creationTime();

    /**
     * Gets the lastModifiedTime property: Gets or sets the last modified time.
     *
     * @return the lastModifiedTime value.
     */
    OffsetDateTime lastModifiedTime();

    /**
     * Gets the nodeConfigurationCount property: Gets the number of compiled node configurations.
     *
     * @return the nodeConfigurationCount value.
     */
    Integer nodeConfigurationCount();

    /**
     * Gets the description property: Gets or sets the description.
     *
     * @return the description value.
     */
    String description();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.automation.fluent.models.DscConfigurationInner object.
     *
     * @return the inner object.
     */
    DscConfigurationInner innerModel();

    /** The entirety of the DscConfiguration definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithParentResource,
            DefinitionStages.WithSource,
            DefinitionStages.WithCreate {
    }
    /** The DscConfiguration definition stages. */
    interface DefinitionStages {
        /** The first stage of the DscConfiguration definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the DscConfiguration definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, automationAccountName.
             *
             * @param resourceGroupName Name of an Azure Resource group.
             * @param automationAccountName The name of the automation account.
             * @return the next definition stage.
             */
            WithSource withExistingAutomationAccount(String resourceGroupName, String automationAccountName);
        }
        /** The stage of the DscConfiguration definition allowing to specify source. */
        interface WithSource {
            /**
             * Specifies the source property: Gets or sets the source..
             *
             * @param source Gets or sets the source.
             * @return the next definition stage.
             */
            WithCreate withSource(ContentSource source);
        }
        /**
         * The stage of the DscConfiguration definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithLocation,
                DefinitionStages.WithTags,
                DefinitionStages.WithName,
                DefinitionStages.WithLogVerbose,
                DefinitionStages.WithLogProgress,
                DefinitionStages.WithParameters,
                DefinitionStages.WithDescription {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            DscConfiguration create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            DscConfiguration create(Context context);
        }
        /** The stage of the DscConfiguration definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location Gets or sets the location of the resource.
             * @return the next definition stage.
             */
            WithCreate withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location Gets or sets the location of the resource.
             * @return the next definition stage.
             */
            WithCreate withRegion(String location);
        }
        /** The stage of the DscConfiguration definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Gets or sets the tags attached to the resource..
             *
             * @param tags Gets or sets the tags attached to the resource.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the DscConfiguration definition allowing to specify name. */
        interface WithName {
            /**
             * Specifies the name property: Gets or sets name of the resource..
             *
             * @param name Gets or sets name of the resource.
             * @return the next definition stage.
             */
            WithCreate withName(String name);
        }
        /** The stage of the DscConfiguration definition allowing to specify logVerbose. */
        interface WithLogVerbose {
            /**
             * Specifies the logVerbose property: Gets or sets verbose log option..
             *
             * @param logVerbose Gets or sets verbose log option.
             * @return the next definition stage.
             */
            WithCreate withLogVerbose(Boolean logVerbose);
        }
        /** The stage of the DscConfiguration definition allowing to specify logProgress. */
        interface WithLogProgress {
            /**
             * Specifies the logProgress property: Gets or sets progress log option..
             *
             * @param logProgress Gets or sets progress log option.
             * @return the next definition stage.
             */
            WithCreate withLogProgress(Boolean logProgress);
        }
        /** The stage of the DscConfiguration definition allowing to specify parameters. */
        interface WithParameters {
            /**
             * Specifies the parameters property: Gets or sets the configuration parameters..
             *
             * @param parameters Gets or sets the configuration parameters.
             * @return the next definition stage.
             */
            WithCreate withParameters(Map<String, DscConfigurationParameter> parameters);
        }
        /** The stage of the DscConfiguration definition allowing to specify description. */
        interface WithDescription {
            /**
             * Specifies the description property: Gets or sets the description of the configuration..
             *
             * @param description Gets or sets the description of the configuration.
             * @return the next definition stage.
             */
            WithCreate withDescription(String description);
        }
    }
    /**
     * Begins update for the DscConfiguration resource.
     *
     * @return the stage of resource update.
     */
    DscConfiguration.Update update();

    /** The template for DscConfiguration update. */
    interface Update
        extends UpdateStages.WithTags,
            UpdateStages.WithName,
            UpdateStages.WithLogVerbose,
            UpdateStages.WithLogProgress,
            UpdateStages.WithSource,
            UpdateStages.WithParameters,
            UpdateStages.WithDescription {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        DscConfiguration apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        DscConfiguration apply(Context context);
    }
    /** The DscConfiguration update stages. */
    interface UpdateStages {
        /** The stage of the DscConfiguration update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Gets or sets the tags attached to the resource..
             *
             * @param tags Gets or sets the tags attached to the resource.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
        /** The stage of the DscConfiguration update allowing to specify name. */
        interface WithName {
            /**
             * Specifies the name property: Gets or sets name of the resource..
             *
             * @param name Gets or sets name of the resource.
             * @return the next definition stage.
             */
            Update withName(String name);
        }
        /** The stage of the DscConfiguration update allowing to specify logVerbose. */
        interface WithLogVerbose {
            /**
             * Specifies the logVerbose property: Gets or sets verbose log option..
             *
             * @param logVerbose Gets or sets verbose log option.
             * @return the next definition stage.
             */
            Update withLogVerbose(Boolean logVerbose);
        }
        /** The stage of the DscConfiguration update allowing to specify logProgress. */
        interface WithLogProgress {
            /**
             * Specifies the logProgress property: Gets or sets progress log option..
             *
             * @param logProgress Gets or sets progress log option.
             * @return the next definition stage.
             */
            Update withLogProgress(Boolean logProgress);
        }
        /** The stage of the DscConfiguration update allowing to specify source. */
        interface WithSource {
            /**
             * Specifies the source property: Gets or sets the source..
             *
             * @param source Gets or sets the source.
             * @return the next definition stage.
             */
            Update withSource(ContentSource source);
        }
        /** The stage of the DscConfiguration update allowing to specify parameters. */
        interface WithParameters {
            /**
             * Specifies the parameters property: Gets or sets the configuration parameters..
             *
             * @param parameters Gets or sets the configuration parameters.
             * @return the next definition stage.
             */
            Update withParameters(Map<String, DscConfigurationParameter> parameters);
        }
        /** The stage of the DscConfiguration update allowing to specify description. */
        interface WithDescription {
            /**
             * Specifies the description property: Gets or sets the description of the configuration..
             *
             * @param description Gets or sets the description of the configuration.
             * @return the next definition stage.
             */
            Update withDescription(String description);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    DscConfiguration refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    DscConfiguration refresh(Context context);
}
