// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of HybridRunbookWorkers. */
public interface HybridRunbookWorkers {
    /**
     * Delete a hybrid runbook worker.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param hybridRunbookWorkerGroupName The hybrid runbook worker group name.
     * @param hybridRunbookWorkerId The hybrid runbook worker id.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(
        String resourceGroupName,
        String automationAccountName,
        String hybridRunbookWorkerGroupName,
        String hybridRunbookWorkerId);

    /**
     * Delete a hybrid runbook worker.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param hybridRunbookWorkerGroupName The hybrid runbook worker group name.
     * @param hybridRunbookWorkerId The hybrid runbook worker id.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteWithResponse(
        String resourceGroupName,
        String automationAccountName,
        String hybridRunbookWorkerGroupName,
        String hybridRunbookWorkerId,
        Context context);

    /**
     * Retrieve a hybrid runbook worker.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param hybridRunbookWorkerGroupName The hybrid runbook worker group name.
     * @param hybridRunbookWorkerId The hybrid runbook worker id.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return definition of hybrid runbook worker.
     */
    HybridRunbookWorker get(
        String resourceGroupName,
        String automationAccountName,
        String hybridRunbookWorkerGroupName,
        String hybridRunbookWorkerId);

    /**
     * Retrieve a hybrid runbook worker.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param hybridRunbookWorkerGroupName The hybrid runbook worker group name.
     * @param hybridRunbookWorkerId The hybrid runbook worker id.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return definition of hybrid runbook worker along with {@link Response}.
     */
    Response<HybridRunbookWorker> getWithResponse(
        String resourceGroupName,
        String automationAccountName,
        String hybridRunbookWorkerGroupName,
        String hybridRunbookWorkerId,
        Context context);

    /**
     * Move a hybrid worker to a different group.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param hybridRunbookWorkerGroupName The hybrid runbook worker group name.
     * @param hybridRunbookWorkerId The hybrid runbook worker id.
     * @param hybridRunbookWorkerMoveParameters The hybrid runbook worker move parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void move(
        String resourceGroupName,
        String automationAccountName,
        String hybridRunbookWorkerGroupName,
        String hybridRunbookWorkerId,
        HybridRunbookWorkerMoveParameters hybridRunbookWorkerMoveParameters);

    /**
     * Move a hybrid worker to a different group.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param hybridRunbookWorkerGroupName The hybrid runbook worker group name.
     * @param hybridRunbookWorkerId The hybrid runbook worker id.
     * @param hybridRunbookWorkerMoveParameters The hybrid runbook worker move parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> moveWithResponse(
        String resourceGroupName,
        String automationAccountName,
        String hybridRunbookWorkerGroupName,
        String hybridRunbookWorkerId,
        HybridRunbookWorkerMoveParameters hybridRunbookWorkerMoveParameters,
        Context context);

    /**
     * Retrieve a list of hybrid runbook workers.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param hybridRunbookWorkerGroupName The hybrid runbook worker group name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response model for the list hybrid runbook workers as paginated response with {@link PagedIterable}.
     */
    PagedIterable<HybridRunbookWorker> listByHybridRunbookWorkerGroup(
        String resourceGroupName, String automationAccountName, String hybridRunbookWorkerGroupName);

    /**
     * Retrieve a list of hybrid runbook workers.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param hybridRunbookWorkerGroupName The hybrid runbook worker group name.
     * @param filter The filter to apply on the operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response model for the list hybrid runbook workers as paginated response with {@link PagedIterable}.
     */
    PagedIterable<HybridRunbookWorker> listByHybridRunbookWorkerGroup(
        String resourceGroupName,
        String automationAccountName,
        String hybridRunbookWorkerGroupName,
        String filter,
        Context context);

    /**
     * Retrieve a hybrid runbook worker.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return definition of hybrid runbook worker along with {@link Response}.
     */
    HybridRunbookWorker getById(String id);

    /**
     * Retrieve a hybrid runbook worker.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return definition of hybrid runbook worker along with {@link Response}.
     */
    Response<HybridRunbookWorker> getByIdWithResponse(String id, Context context);

    /**
     * Delete a hybrid runbook worker.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete a hybrid runbook worker.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new HybridRunbookWorker resource.
     *
     * @param name resource name.
     * @return the first stage of the new HybridRunbookWorker definition.
     */
    HybridRunbookWorker.DefinitionStages.Blank define(String name);
}
