// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.models;

import com.azure.core.http.rest.Response;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.automation.fluent.models.HybridRunbookWorkerInner;
import java.time.OffsetDateTime;

/** An immutable client-side representation of HybridRunbookWorker. */
public interface HybridRunbookWorker {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the systemData property: Resource system metadata.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the ip property: Gets or sets the assigned machine IP address.
     *
     * @return the ip value.
     */
    String ip();

    /**
     * Gets the registeredDateTime property: Gets or sets the registration time of the worker machine.
     *
     * @return the registeredDateTime value.
     */
    OffsetDateTime registeredDateTime();

    /**
     * Gets the lastSeenDateTime property: Last Heartbeat from the Worker.
     *
     * @return the lastSeenDateTime value.
     */
    OffsetDateTime lastSeenDateTime();

    /**
     * Gets the vmResourceId property: Azure Resource Manager Id for a virtual machine.
     *
     * @return the vmResourceId value.
     */
    String vmResourceId();

    /**
     * Gets the workerType property: Type of the HybridWorker.
     *
     * @return the workerType value.
     */
    WorkerType workerType();

    /**
     * Gets the workerName property: Name of the HybridWorker.
     *
     * @return the workerName value.
     */
    String workerName();

    /**
     * Gets the inner com.azure.resourcemanager.automation.fluent.models.HybridRunbookWorkerInner object.
     *
     * @return the inner object.
     */
    HybridRunbookWorkerInner innerModel();

    /** The entirety of the HybridRunbookWorker definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The HybridRunbookWorker definition stages. */
    interface DefinitionStages {
        /** The first stage of the HybridRunbookWorker definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the HybridRunbookWorker definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, automationAccountName, hybridRunbookWorkerGroupName.
             *
             * @param resourceGroupName Name of an Azure Resource group.
             * @param automationAccountName The name of the automation account.
             * @param hybridRunbookWorkerGroupName The hybrid runbook worker group name.
             * @return the next definition stage.
             */
            WithCreate withExistingHybridRunbookWorkerGroup(
                String resourceGroupName, String automationAccountName, String hybridRunbookWorkerGroupName);
        }
        /**
         * The stage of the HybridRunbookWorker definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithName, DefinitionStages.WithVmResourceId {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            HybridRunbookWorker create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            HybridRunbookWorker create(Context context);
        }
        /** The stage of the HybridRunbookWorker definition allowing to specify name. */
        interface WithName {
            /**
             * Specifies the name property: Gets or sets the name of the resource..
             *
             * @param name Gets or sets the name of the resource.
             * @return the next definition stage.
             */
            WithCreate withName(String name);
        }
        /** The stage of the HybridRunbookWorker definition allowing to specify vmResourceId. */
        interface WithVmResourceId {
            /**
             * Specifies the vmResourceId property: Azure Resource Manager Id for a virtual machine..
             *
             * @param vmResourceId Azure Resource Manager Id for a virtual machine.
             * @return the next definition stage.
             */
            WithCreate withVmResourceId(String vmResourceId);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    HybridRunbookWorker refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    HybridRunbookWorker refresh(Context context);

    /**
     * Move a hybrid worker to a different group.
     *
     * @param hybridRunbookWorkerMoveParameters The hybrid runbook worker move parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void move(HybridRunbookWorkerMoveParameters hybridRunbookWorkerMoveParameters);

    /**
     * Move a hybrid worker to a different group.
     *
     * @param hybridRunbookWorkerMoveParameters The hybrid runbook worker move parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> moveWithResponse(
        HybridRunbookWorkerMoveParameters hybridRunbookWorkerMoveParameters, Context context);
}
