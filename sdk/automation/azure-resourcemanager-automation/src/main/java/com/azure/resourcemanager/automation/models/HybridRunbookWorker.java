// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** Definition of hybrid runbook worker. */
@Fluent
public final class HybridRunbookWorker {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(HybridRunbookWorker.class);

    /*
     * Gets or sets the worker machine name.
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * Gets or sets the assigned machine IP address.
     */
    @JsonProperty(value = "ip")
    private String ip;

    /*
     * Gets or sets the registration time of the worker machine.
     */
    @JsonProperty(value = "registrationTime")
    private OffsetDateTime registrationTime;

    /*
     * Last Heartbeat from the Worker
     */
    @JsonProperty(value = "lastSeenDateTime")
    private OffsetDateTime lastSeenDateTime;

    /**
     * Get the name property: Gets or sets the worker machine name.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Gets or sets the worker machine name.
     *
     * @param name the name value to set.
     * @return the HybridRunbookWorker object itself.
     */
    public HybridRunbookWorker withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the ip property: Gets or sets the assigned machine IP address.
     *
     * @return the ip value.
     */
    public String ip() {
        return this.ip;
    }

    /**
     * Set the ip property: Gets or sets the assigned machine IP address.
     *
     * @param ip the ip value to set.
     * @return the HybridRunbookWorker object itself.
     */
    public HybridRunbookWorker withIp(String ip) {
        this.ip = ip;
        return this;
    }

    /**
     * Get the registrationTime property: Gets or sets the registration time of the worker machine.
     *
     * @return the registrationTime value.
     */
    public OffsetDateTime registrationTime() {
        return this.registrationTime;
    }

    /**
     * Set the registrationTime property: Gets or sets the registration time of the worker machine.
     *
     * @param registrationTime the registrationTime value to set.
     * @return the HybridRunbookWorker object itself.
     */
    public HybridRunbookWorker withRegistrationTime(OffsetDateTime registrationTime) {
        this.registrationTime = registrationTime;
        return this;
    }

    /**
     * Get the lastSeenDateTime property: Last Heartbeat from the Worker.
     *
     * @return the lastSeenDateTime value.
     */
    public OffsetDateTime lastSeenDateTime() {
        return this.lastSeenDateTime;
    }

    /**
     * Set the lastSeenDateTime property: Last Heartbeat from the Worker.
     *
     * @param lastSeenDateTime the lastSeenDateTime value to set.
     * @return the HybridRunbookWorker object itself.
     */
    public HybridRunbookWorker withLastSeenDateTime(OffsetDateTime lastSeenDateTime) {
        this.lastSeenDateTime = lastSeenDateTime;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
