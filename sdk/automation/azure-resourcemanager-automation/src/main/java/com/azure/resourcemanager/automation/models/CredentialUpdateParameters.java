// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.automation.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.automation.fluent.models.CredentialUpdateProperties;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The parameters supplied to the Update credential operation. */
@Fluent
public final class CredentialUpdateParameters {
    /*
     * Gets or sets the name of the credential.
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * Gets or sets the properties of the variable.
     */
    @JsonProperty(value = "properties")
    private CredentialUpdateProperties innerProperties;

    /**
     * Get the name property: Gets or sets the name of the credential.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Gets or sets the name of the credential.
     *
     * @param name the name value to set.
     * @return the CredentialUpdateParameters object itself.
     */
    public CredentialUpdateParameters withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the innerProperties property: Gets or sets the properties of the variable.
     *
     * @return the innerProperties value.
     */
    private CredentialUpdateProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the username property: Gets or sets the user name of the credential.
     *
     * @return the username value.
     */
    public String username() {
        return this.innerProperties() == null ? null : this.innerProperties().username();
    }

    /**
     * Set the username property: Gets or sets the user name of the credential.
     *
     * @param username the username value to set.
     * @return the CredentialUpdateParameters object itself.
     */
    public CredentialUpdateParameters withUsername(String username) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CredentialUpdateProperties();
        }
        this.innerProperties().withUsername(username);
        return this;
    }

    /**
     * Get the password property: Gets or sets the password of the credential.
     *
     * @return the password value.
     */
    public String password() {
        return this.innerProperties() == null ? null : this.innerProperties().password();
    }

    /**
     * Set the password property: Gets or sets the password of the credential.
     *
     * @param password the password value to set.
     * @return the CredentialUpdateParameters object itself.
     */
    public CredentialUpdateParameters withPassword(String password) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CredentialUpdateProperties();
        }
        this.innerProperties().withPassword(password);
        return this;
    }

    /**
     * Get the description property: Gets or sets the description of the credential.
     *
     * @return the description value.
     */
    public String description() {
        return this.innerProperties() == null ? null : this.innerProperties().description();
    }

    /**
     * Set the description property: Gets or sets the description of the credential.
     *
     * @param description the description value to set.
     * @return the CredentialUpdateParameters object itself.
     */
    public CredentialUpdateParameters withDescription(String description) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CredentialUpdateProperties();
        }
        this.innerProperties().withDescription(description);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
