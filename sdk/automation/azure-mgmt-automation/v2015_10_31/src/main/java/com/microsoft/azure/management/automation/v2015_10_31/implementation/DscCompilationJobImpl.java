/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.automation.v2015_10_31.implementation;

import com.microsoft.azure.management.automation.v2015_10_31.DscCompilationJob;
import com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl;
import rx.Observable;
import com.microsoft.azure.management.automation.v2015_10_31.DscCompilationJobCreateParameters;
import java.util.Map;
import java.util.UUID;
import com.microsoft.azure.management.automation.v2015_10_31.DscConfigurationAssociationProperty;
import org.joda.time.DateTime;
import com.microsoft.azure.management.automation.v2015_10_31.JobProvisioningState;
import com.microsoft.azure.management.automation.v2015_10_31.JobStatus;
import rx.functions.Func1;

class DscCompilationJobImpl extends CreatableUpdatableImpl<DscCompilationJob, DscCompilationJobInner, DscCompilationJobImpl> implements DscCompilationJob, DscCompilationJob.Definition, DscCompilationJob.Update {
    private final AutomationManager manager;
    private String resourceGroupName;
    private String automationAccountName;
    private UUID compilationJobId;
    private DscCompilationJobCreateParameters createOrUpdateParameter;

    DscCompilationJobImpl(String name, AutomationManager manager) {
        super(name, new DscCompilationJobInner());
        this.manager = manager;
        // Set resource name
        this.compilationJobId = UUID.fromString(name);
        //
        this.createOrUpdateParameter = new DscCompilationJobCreateParameters();
    }

    DscCompilationJobImpl(DscCompilationJobInner inner, AutomationManager manager) {
        super(inner.name(), inner);
        this.manager = manager;
        // resource ancestor names
        this.resourceGroupName = IdParsingUtils.getValueFromIdByName(inner.id(), "resourceGroups");
        this.automationAccountName = IdParsingUtils.getValueFromIdByName(inner.id(), "automationAccounts");
        this.compilationJobId = UUID.fromString(IdParsingUtils.getValueFromIdByName(inner.id(), "compilationjobs"));
        //
        this.createOrUpdateParameter = new DscCompilationJobCreateParameters();
    }

    @Override
    public AutomationManager manager() {
        return this.manager;
    }

    @Override
    public Observable<DscCompilationJob> createResourceAsync() {
        DscCompilationJobsInner client = this.manager().inner().dscCompilationJobs();
        return client.createAsync(this.resourceGroupName, this.automationAccountName, this.compilationJobId, this.createOrUpdateParameter)
            .map(new Func1<DscCompilationJobInner, DscCompilationJobInner>() {
               @Override
               public DscCompilationJobInner call(DscCompilationJobInner resource) {
                   resetCreateUpdateParameters();
                   return resource;
               }
            })
            .map(innerToFluentMap(this));
    }

    @Override
    public Observable<DscCompilationJob> updateResourceAsync() {
        DscCompilationJobsInner client = this.manager().inner().dscCompilationJobs();
        return client.createAsync(this.resourceGroupName, this.automationAccountName, this.compilationJobId, this.createOrUpdateParameter)
            .map(new Func1<DscCompilationJobInner, DscCompilationJobInner>() {
               @Override
               public DscCompilationJobInner call(DscCompilationJobInner resource) {
                   resetCreateUpdateParameters();
                   return resource;
               }
            })
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<DscCompilationJobInner> getInnerAsync() {
        DscCompilationJobsInner client = this.manager().inner().dscCompilationJobs();
        return client.getAsync(this.resourceGroupName, this.automationAccountName, this.compilationJobId);
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }

    private void resetCreateUpdateParameters() {
        this.createOrUpdateParameter = new DscCompilationJobCreateParameters();
    }

    @Override
    public DscConfigurationAssociationProperty configuration() {
        return this.inner().configuration();
    }

    @Override
    public DateTime creationTime() {
        return this.inner().creationTime();
    }

    @Override
    public DateTime endTime() {
        return this.inner().endTime();
    }

    @Override
    public String exception() {
        return this.inner().exception();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public UUID jobId() {
        return this.inner().jobId();
    }

    @Override
    public DateTime lastModifiedTime() {
        return this.inner().lastModifiedTime();
    }

    @Override
    public DateTime lastStatusModifiedTime() {
        return this.inner().lastStatusModifiedTime();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public Map<String, String> parameters() {
        return this.inner().parameters();
    }

    @Override
    public JobProvisioningState provisioningState() {
        return this.inner().provisioningState();
    }

    @Override
    public String runOn() {
        return this.inner().runOn();
    }

    @Override
    public String startedBy() {
        return this.inner().startedBy();
    }

    @Override
    public DateTime startTime() {
        return this.inner().startTime();
    }

    @Override
    public JobStatus status() {
        return this.inner().status();
    }

    @Override
    public String statusDetails() {
        return this.inner().statusDetails();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

    @Override
    public DscCompilationJobImpl withExistingAutomationAccount(String resourceGroupName, String automationAccountName) {
        this.resourceGroupName = resourceGroupName;
        this.automationAccountName = automationAccountName;
        return this;
    }

    @Override
    public DscCompilationJobImpl withConfiguration(DscConfigurationAssociationProperty configuration) {
        this.createOrUpdateParameter.withConfiguration(configuration);
        return this;
    }

    @Override
    public DscCompilationJobImpl withIncrementNodeConfigurationBuild(Boolean incrementNodeConfigurationBuild) {
        this.createOrUpdateParameter.withIncrementNodeConfigurationBuild(incrementNodeConfigurationBuild);
        return this;
    }

    @Override
    public DscCompilationJobImpl withLocation(String location) {
        this.createOrUpdateParameter.withLocation(location);
        return this;
    }

    @Override
    public DscCompilationJobImpl withName(String name) {
        this.createOrUpdateParameter.withName(name);
        return this;
    }

    @Override
    public DscCompilationJobImpl withParameters(Map<String, String> parameters) {
        this.createOrUpdateParameter.withParameters(parameters);
        return this;
    }

    @Override
    public DscCompilationJobImpl withTags(Map<String, String> tags) {
        this.createOrUpdateParameter.withTags(tags);
        return this;
    }

}
