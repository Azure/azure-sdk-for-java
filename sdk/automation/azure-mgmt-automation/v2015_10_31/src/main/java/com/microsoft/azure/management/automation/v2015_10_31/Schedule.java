/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.automation.v2015_10_31;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.automation.v2015_10_31.implementation.ScheduleInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.automation.v2015_10_31.implementation.AutomationManager;
import org.joda.time.DateTime;

/**
 * Type representing Schedule.
 */
public interface Schedule extends HasInner<ScheduleInner>, Indexable, Refreshable<Schedule>, Updatable<Schedule.Update>, HasManager<AutomationManager> {
    /**
     * @return the advancedSchedule value.
     */
    AdvancedSchedule advancedSchedule();

    /**
     * @return the creationTime value.
     */
    DateTime creationTime();

    /**
     * @return the description value.
     */
    String description();

    /**
     * @return the expiryTime value.
     */
    DateTime expiryTime();

    /**
     * @return the expiryTimeOffsetMinutes value.
     */
    double expiryTimeOffsetMinutes();

    /**
     * @return the frequency value.
     */
    ScheduleFrequency frequency();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the interval value.
     */
    Object interval();

    /**
     * @return the isEnabled value.
     */
    Boolean isEnabled();

    /**
     * @return the lastModifiedTime value.
     */
    DateTime lastModifiedTime();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the nextRun value.
     */
    DateTime nextRun();

    /**
     * @return the nextRunOffsetMinutes value.
     */
    double nextRunOffsetMinutes();

    /**
     * @return the startTime value.
     */
    DateTime startTime();

    /**
     * @return the startTimeOffsetMinutes value.
     */
    double startTimeOffsetMinutes();

    /**
     * @return the timeZone value.
     */
    String timeZone();

    /**
     * @return the type value.
     */
    String type();

    /**
     * The entirety of the Schedule definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithAutomationAccount, DefinitionStages.WithFrequency, DefinitionStages.WithName, DefinitionStages.WithStartTime, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of Schedule definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a Schedule definition.
         */
        interface Blank extends WithAutomationAccount {
        }

        /**
         * The stage of the schedule definition allowing to specify AutomationAccount.
         */
        interface WithAutomationAccount {
           /**
            * Specifies resourceGroupName, automationAccountName.
            */
            WithFrequency withExistingAutomationAccount(String resourceGroupName, String automationAccountName);
        }

        /**
         * The stage of the schedule definition allowing to specify Frequency.
         */
        interface WithFrequency {
           /**
            * Specifies frequency.
            */
            WithName withFrequency(ScheduleFrequency frequency);
        }

        /**
         * The stage of the schedule definition allowing to specify Name.
         */
        interface WithName {
           /**
            * Specifies name.
            */
            WithStartTime withName(String name);
        }

        /**
         * The stage of the schedule definition allowing to specify StartTime.
         */
        interface WithStartTime {
           /**
            * Specifies startTime.
            */
            WithCreate withStartTime(DateTime startTime);
        }

        /**
         * The stage of the schedule definition allowing to specify AdvancedSchedule.
         */
        interface WithAdvancedSchedule {
            /**
             * Specifies advancedSchedule.
             */
            WithCreate withAdvancedSchedule(AdvancedSchedule advancedSchedule);
        }

        /**
         * The stage of the schedule definition allowing to specify Description.
         */
        interface WithDescription {
            /**
             * Specifies description.
             */
            WithCreate withDescription(String description);
        }

        /**
         * The stage of the schedule definition allowing to specify ExpiryTime.
         */
        interface WithExpiryTime {
            /**
             * Specifies expiryTime.
             */
            WithCreate withExpiryTime(DateTime expiryTime);
        }

        /**
         * The stage of the schedule definition allowing to specify Interval.
         */
        interface WithInterval {
            /**
             * Specifies interval.
             */
            WithCreate withInterval(Object interval);
        }

        /**
         * The stage of the schedule definition allowing to specify TimeZone.
         */
        interface WithTimeZone {
            /**
             * Specifies timeZone.
             */
            WithCreate withTimeZone(String timeZone);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<Schedule>, DefinitionStages.WithAdvancedSchedule, DefinitionStages.WithDescription, DefinitionStages.WithExpiryTime, DefinitionStages.WithInterval, DefinitionStages.WithTimeZone {
        }
    }
    /**
     * The template for a Schedule update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<Schedule>, UpdateStages.WithDescription, UpdateStages.WithIsEnabled, UpdateStages.WithName {
    }

    /**
     * Grouping of Schedule update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the schedule update allowing to specify Description.
         */
        interface WithDescription {
            /**
             * Specifies description.
             */
            Update withDescription(String description);
        }

        /**
         * The stage of the schedule update allowing to specify IsEnabled.
         */
        interface WithIsEnabled {
            /**
             * Specifies isEnabled.
             */
            Update withIsEnabled(Boolean isEnabled);
        }

        /**
         * The stage of the schedule update allowing to specify Name.
         */
        interface WithName {
            /**
             * Specifies name.
             */
            Update withName(String name);
        }

    }
}
