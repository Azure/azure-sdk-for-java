/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.automation.v2015_10_31;

import com.microsoft.azure.arm.collection.SupportsCreating;
import rx.Completable;
import rx.Observable;
import com.microsoft.azure.management.automation.v2015_10_31.implementation.DscNodeConfigurationsInner;
import com.microsoft.azure.arm.model.HasInner;

/**
 * Type representing DscNodeConfigurations.
 */
public interface DscNodeConfigurations extends SupportsCreating<DscNodeConfiguration.DefinitionStages.Blank>, HasInner<DscNodeConfigurationsInner> {
    /**
     * Retrieve the Dsc node configurations by node configuration.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param nodeConfigurationName The Dsc node configuration name.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<DscNodeConfiguration> getAsync(String resourceGroupName, String automationAccountName, String nodeConfigurationName);

    /**
     * Retrieve a list of dsc node configurations.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<DscNodeConfiguration> listByAutomationAccountAsync(final String resourceGroupName, final String automationAccountName);

    /**
     * Delete the Dsc node configurations by node configuration.
     *
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param nodeConfigurationName The Dsc node configuration name.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable deleteAsync(String resourceGroupName, String automationAccountName, String nodeConfigurationName);

}
