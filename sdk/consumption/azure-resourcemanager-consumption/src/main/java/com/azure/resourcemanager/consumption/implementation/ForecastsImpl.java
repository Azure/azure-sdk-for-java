// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.consumption.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.consumption.fluent.ForecastsClient;
import com.azure.resourcemanager.consumption.fluent.models.ForecastInner;
import com.azure.resourcemanager.consumption.models.Forecast;
import com.azure.resourcemanager.consumption.models.Forecasts;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class ForecastsImpl implements Forecasts {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ForecastsImpl.class);

    private final ForecastsClient innerClient;

    private final com.azure.resourcemanager.consumption.ConsumptionManager serviceManager;

    public ForecastsImpl(
        ForecastsClient innerClient, com.azure.resourcemanager.consumption.ConsumptionManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<Forecast> list() {
        PagedIterable<ForecastInner> inner = this.serviceClient().list();
        return Utils.mapPage(inner, inner1 -> new ForecastImpl(inner1, this.manager()));
    }

    public PagedIterable<Forecast> list(String filter, Context context) {
        PagedIterable<ForecastInner> inner = this.serviceClient().list(filter, context);
        return Utils.mapPage(inner, inner1 -> new ForecastImpl(inner1, this.manager()));
    }

    private ForecastsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.consumption.ConsumptionManager manager() {
        return this.serviceManager;
    }
}
