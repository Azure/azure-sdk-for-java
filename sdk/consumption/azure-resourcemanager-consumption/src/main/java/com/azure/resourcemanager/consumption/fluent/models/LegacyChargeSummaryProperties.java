// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.consumption.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * The properties of legacy charge summary.
 */
@Immutable
public final class LegacyChargeSummaryProperties implements JsonSerializable<LegacyChargeSummaryProperties> {
    /*
     * The id of the billing period resource that the charge belongs to.
     */
    private String billingPeriodId;

    /*
     * Usage start date.
     */
    private String usageStart;

    /*
     * Usage end date.
     */
    private String usageEnd;

    /*
     * Azure Charges.
     */
    private BigDecimal azureCharges;

    /*
     * Charges Billed separately.
     */
    private BigDecimal chargesBilledSeparately;

    /*
     * Marketplace Charges.
     */
    private BigDecimal azureMarketplaceCharges;

    /*
     * Currency Code
     */
    private String currency;

    /**
     * Creates an instance of LegacyChargeSummaryProperties class.
     */
    public LegacyChargeSummaryProperties() {
    }

    /**
     * Get the billingPeriodId property: The id of the billing period resource that the charge belongs to.
     * 
     * @return the billingPeriodId value.
     */
    public String billingPeriodId() {
        return this.billingPeriodId;
    }

    /**
     * Get the usageStart property: Usage start date.
     * 
     * @return the usageStart value.
     */
    public String usageStart() {
        return this.usageStart;
    }

    /**
     * Get the usageEnd property: Usage end date.
     * 
     * @return the usageEnd value.
     */
    public String usageEnd() {
        return this.usageEnd;
    }

    /**
     * Get the azureCharges property: Azure Charges.
     * 
     * @return the azureCharges value.
     */
    public BigDecimal azureCharges() {
        return this.azureCharges;
    }

    /**
     * Get the chargesBilledSeparately property: Charges Billed separately.
     * 
     * @return the chargesBilledSeparately value.
     */
    public BigDecimal chargesBilledSeparately() {
        return this.chargesBilledSeparately;
    }

    /**
     * Get the azureMarketplaceCharges property: Marketplace Charges.
     * 
     * @return the azureMarketplaceCharges value.
     */
    public BigDecimal azureMarketplaceCharges() {
        return this.azureMarketplaceCharges;
    }

    /**
     * Get the currency property: Currency Code.
     * 
     * @return the currency value.
     */
    public String currency() {
        return this.currency;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of LegacyChargeSummaryProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of LegacyChargeSummaryProperties if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the LegacyChargeSummaryProperties.
     */
    public static LegacyChargeSummaryProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            LegacyChargeSummaryProperties deserializedLegacyChargeSummaryProperties
                = new LegacyChargeSummaryProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("billingPeriodId".equals(fieldName)) {
                    deserializedLegacyChargeSummaryProperties.billingPeriodId = reader.getString();
                } else if ("usageStart".equals(fieldName)) {
                    deserializedLegacyChargeSummaryProperties.usageStart = reader.getString();
                } else if ("usageEnd".equals(fieldName)) {
                    deserializedLegacyChargeSummaryProperties.usageEnd = reader.getString();
                } else if ("azureCharges".equals(fieldName)) {
                    deserializedLegacyChargeSummaryProperties.azureCharges
                        = reader.getNullable(nonNullReader -> new BigDecimal(nonNullReader.getString()));
                } else if ("chargesBilledSeparately".equals(fieldName)) {
                    deserializedLegacyChargeSummaryProperties.chargesBilledSeparately
                        = reader.getNullable(nonNullReader -> new BigDecimal(nonNullReader.getString()));
                } else if ("azureMarketplaceCharges".equals(fieldName)) {
                    deserializedLegacyChargeSummaryProperties.azureMarketplaceCharges
                        = reader.getNullable(nonNullReader -> new BigDecimal(nonNullReader.getString()));
                } else if ("currency".equals(fieldName)) {
                    deserializedLegacyChargeSummaryProperties.currency = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedLegacyChargeSummaryProperties;
        });
    }
}
