// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.consumption.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.consumption.ConsumptionManager;
import com.azure.resourcemanager.consumption.models.ManagementGroupAggregatedCostResult;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AggregatedCostsGetForBillingPeriodByManagementGroupWithResponseMockTests {
    @Test
    public void testGetForBillingPeriodByManagementGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"billingPeriodId\":\"tsgftipwcxbyubh\",\"usageStart\":\"2021-05-15T03:11:10Z\",\"usageEnd\":\"2021-09-29T20:15:17Z\",\"currency\":\"nuhzafccnuh\",\"children\":[{\"properties\":{\"billingPeriodId\":\"lbuigv\",\"usageStart\":\"2021-06-14T14:08:19Z\",\"usageEnd\":\"2021-05-03T08:54:55Z\",\"currency\":\"lbnb\",\"children\":[{\"id\":\"h\",\"name\":\"syhzlwx\",\"type\":\"eaovurexdnds\"}],\"includedSubscriptions\":[\"ead\",\"rzmwn\"],\"excludedSubscriptions\":[\"agttm\"]},\"etag\":\"magoaqylkjz\",\"tags\":{\"pdltkrlg\":\"uazjcgmxitpfinz\"},\"id\":\"mtbdrvcqgu\",\"name\":\"fzhompheq\",\"type\":\"urelyujlfyoump\"},{\"properties\":{\"billingPeriodId\":\"eclcdigptajbrzm\",\"usageStart\":\"2021-01-02T14:42:29Z\",\"usageEnd\":\"2021-01-20T00:05:16Z\",\"currency\":\"clxiutg\",\"children\":[{\"id\":\"z\",\"name\":\"zjd\",\"type\":\"r\"},{\"id\":\"jb\",\"name\":\"xjeaoqaqbzgyh\",\"type\":\"w\"}],\"includedSubscriptions\":[\"atbwbqam\",\"e\",\"liys\",\"pkcvmwf\"],\"excludedSubscriptions\":[\"xe\"]},\"etag\":\"ywbo\",\"tags\":{\"zfboj\":\"qmiciijqp\"},\"id\":\"jmcsmyqwixvcpwn\",\"name\":\"wy\",\"type\":\"zwofalick\"}],\"includedSubscriptions\":[\"iqtamtyvsknxrw\",\"awnvsbcfhza\",\"xn\"],\"excludedSubscriptions\":[\"cvd\",\"mwrzregzgyufutrw\"]},\"etag\":\"eryekzkdhmeottaw\",\"tags\":{\"p\":\"sxwwhnhjtf\"},\"id\":\"dpmiljpn\",\"name\":\"ynudqllzsa\",\"type\":\"zp\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ConsumptionManager manager = ConsumptionManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ManagementGroupAggregatedCostResult response = manager.aggregatedCosts()
            .getForBillingPeriodByManagementGroupWithResponse("gckbb", "ccgzpraoxnyu", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("ead", response.children().get(0).includedSubscriptions().get(0));
        Assertions.assertEquals("agttm", response.children().get(0).excludedSubscriptions().get(0));
        Assertions.assertEquals("iqtamtyvsknxrw", response.includedSubscriptions().get(0));
        Assertions.assertEquals("cvd", response.excludedSubscriptions().get(0));
    }
}
