// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.consumption.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.consumption.ConsumptionManager;
import com.azure.resourcemanager.consumption.models.EventSummary;
import com.azure.resourcemanager.consumption.models.EventType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class EventsOperationsListByBillingAccountMockTests {
    @Test
    public void testListByBillingAccount() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"transactionDate\":\"2021-07-16T02:25:06Z\",\"description\":\"zndscxmxeatkdbmw\",\"newCredit\":{\"currency\":\"jyibqbna\"},\"adjustments\":{\"currency\":\"rmkuh\"},\"creditExpired\":{\"currency\":\"jalfihcjmobcanc\"},\"charges\":{\"currency\":\"qcwgaxfgvaknokz\"},\"closedBalance\":{\"currency\":\"r\"},\"eventType\":\"NewCredit\",\"invoiceNumber\":\"dzyyfytpq\",\"billingProfileId\":\"x\",\"billingProfileDisplayName\":\"m\",\"lotId\":\"jivyqlkjuv\",\"lotSource\":\"bmslzoyov\",\"canceledCredit\":{\"currency\":\"bpqvybefg\"},\"creditCurrency\":\"nokcv\",\"billingCurrency\":\"ubseskvcuartr\",\"reseller\":{\"resellerId\":\"lpi\",\"resellerDescription\":\"kycndzfqivjreuy\"},\"creditExpiredInBillingCurrency\":{\"exchangeRateMonth\":1091538161,\"currency\":\"aglt\"},\"newCreditInBillingCurrency\":{\"exchangeRateMonth\":999995628,\"currency\":\"qlnfw\"},\"adjustmentsInBillingCurrency\":{\"exchangeRateMonth\":1411976507,\"currency\":\"bpbhfckdvezcrcss\"},\"chargesInBillingCurrency\":{\"exchangeRateMonth\":374703374,\"currency\":\"bnqfblhk\"},\"closedBalanceInBillingCurrency\":{\"exchangeRateMonth\":228458055,\"currency\":\"awugiqjti\"},\"eTag\":\"gdmin\"},\"eTag\":\"tteajohiygs\",\"id\":\"n\",\"name\":\"onhpcz\",\"type\":\"kmktpvwxqcseh\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ConsumptionManager manager = ConsumptionManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<EventSummary> response
            = manager.eventsOperations().listByBillingAccount("o", "tgitsqhzvbrzc", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("tteajohiygs", response.iterator().next().etag());
        Assertions.assertEquals(EventType.NEW_CREDIT, response.iterator().next().eventType());
    }
}
