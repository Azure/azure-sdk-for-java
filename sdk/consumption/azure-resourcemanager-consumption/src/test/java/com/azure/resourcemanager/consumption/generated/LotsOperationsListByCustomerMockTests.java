// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.consumption.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.consumption.ConsumptionManager;
import com.azure.resourcemanager.consumption.models.LotSummary;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class LotsOperationsListByCustomerMockTests {
    @Test
    public void testListByCustomer() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"originalAmount\":{\"currency\":\"ollgry\"},\"closedBalance\":{\"currency\":\"asigrowsocne\"},\"source\":\"PromotionalCredit\",\"startDate\":\"2021-03-21T10:43:03Z\",\"expirationDate\":\"2021-03-14T09:15:47Z\",\"poNumber\":\"grmtqjk\",\"purchasedDate\":\"2021-11-01T04:48:10Z\",\"status\":\"Inactive\",\"creditCurrency\":\"mmwiuawvcmjz\",\"billingCurrency\":\"iidisczskoswoqiq\",\"originalAmountInBillingCurrency\":{\"exchangeRateMonth\":362948209,\"currency\":\"xzkrrcoi\"},\"closedBalanceInBillingCurrency\":{\"exchangeRateMonth\":1365641860,\"currency\":\"pccekuztdsbezaxy\"},\"reseller\":{\"resellerId\":\"xuizhyhnepkpet\",\"resellerDescription\":\"rx\"},\"eTag\":\"ubxdukecpxdazvdh\"},\"eTag\":\"mmkoszudb\",\"id\":\"nsntrpcaqki\",\"name\":\"f\",\"type\":\"btfmhklbnldpvcbh\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ConsumptionManager manager = ConsumptionManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<LotSummary> response = manager.lotsOperations()
            .listByCustomer("fratqxmbjroumzz", "valqjrhuzgfxo", "jtpusllywpvtiotz", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("mmkoszudb", response.iterator().next().etag());
    }
}
