// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.consumption.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.consumption.ConsumptionManager;
import com.azure.resourcemanager.consumption.models.LotSummary;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class LotsOperationsListByBillingAccountMockTests {
    @Test
    public void testListByBillingAccount() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"originalAmount\":{\"currency\":\"vdsmaklixq\"},\"closedBalance\":{\"currency\":\"hxalybxawo\"},\"source\":\"PromotionalCredit\",\"startDate\":\"2021-11-08T05:18:59Z\",\"expirationDate\":\"2021-07-30T21:16:39Z\",\"poNumber\":\"pkkwj\",\"purchasedDate\":\"2021-12-03T11:18:29Z\",\"status\":\"Expired\",\"creditCurrency\":\"ykincnremehl\",\"billingCurrency\":\"zhceumoqodk\",\"originalAmountInBillingCurrency\":{\"exchangeRateMonth\":1839344578,\"currency\":\"bngqladywrx\"},\"closedBalanceInBillingCurrency\":{\"exchangeRateMonth\":1418655458,\"currency\":\"vvadswzs\"},\"reseller\":{\"resellerId\":\"mlowuowhl\",\"resellerDescription\":\"nwyrmouv\"},\"eTag\":\"gmokzkltrfowt\"},\"eTag\":\"rfmvlihcvjdrqcrj\",\"id\":\"dhftukvhdxlwy\",\"name\":\"jbfqzdk\",\"type\":\"njyixh\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ConsumptionManager manager = ConsumptionManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<LotSummary> response = manager.lotsOperations()
            .listByBillingAccount("rhydkygywez", "kiecafygzm", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("rfmvlihcvjdrqcrj", response.iterator().next().etag());
    }
}
