// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.consumption.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.consumption.ConsumptionManager;
import com.azure.resourcemanager.consumption.models.LotSummary;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class LotsOperationsListByBillingProfileMockTests {
    @Test
    public void testListByBillingProfile() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"originalAmount\":{\"currency\":\"dzulo\"},\"closedBalance\":{\"currency\":\"uzanhsfnhsenwphp\"},\"source\":\"PromotionalCredit\",\"startDate\":\"2021-07-05T02:00:42Z\",\"expirationDate\":\"2021-08-02T16:03:38Z\",\"poNumber\":\"dftujwjjufwbeqr\",\"purchasedDate\":\"2021-10-18T23:08:36Z\",\"status\":\"Canceled\",\"creditCurrency\":\"ssruqnmdvhazcvj\",\"billingCurrency\":\"iqswbqer\",\"originalAmountInBillingCurrency\":{\"exchangeRateMonth\":1761507764,\"currency\":\"x\"},\"closedBalanceInBillingCurrency\":{\"exchangeRateMonth\":1088369980,\"currency\":\"bpktgd\"},\"reseller\":{\"resellerId\":\"uambewreswmowegm\",\"resellerDescription\":\"teyxeyguq\"},\"eTag\":\"ijiitns\"},\"eTag\":\"lz\",\"id\":\"es\",\"name\":\"grijwaiufanrayb\",\"type\":\"ueqfrojsyd\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ConsumptionManager manager = ConsumptionManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<LotSummary> response
            = manager.lotsOperations().listByBillingProfile("hkhufm", "qumq", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("lz", response.iterator().next().etag());
    }
}
