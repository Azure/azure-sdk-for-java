// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.consumption.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.consumption.ConsumptionManager;
import com.azure.resourcemanager.consumption.models.LookBackPeriod;
import com.azure.resourcemanager.consumption.models.ReservationRecommendationDetailsModel;
import com.azure.resourcemanager.consumption.models.Scope;
import com.azure.resourcemanager.consumption.models.Term;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ReservationRecommendationDetailsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"location\":\"zyqegxyiv\",\"sku\":\"nbm\",\"properties\":{\"currency\":\"jijkgqxnhmbke\",\"resource\":{\"appliedScopes\":[\"ujvaannggi\",\"cwkdtaaw\"],\"onDemandRate\":9.047008,\"product\":\"ka\",\"region\":\"rrqmbzmqk\",\"reservationRate\":56.859947,\"resourceType\":\"nxwbjsidbirkfp\"},\"resourceGroup\":\"okdgoge\",\"savings\":{\"calculatedSavings\":[{\"onDemandCost\":87.872246,\"overageCost\":48.494785,\"quantity\":4.08864,\"reservationCost\":65.51855,\"totalReservationCost\":76.61622,\"reservedUnitCount\":20.992338,\"savings\":40.12607}],\"lookBackPeriod\":2030815914,\"recommendedQuantity\":43.681763,\"reservationOrderTerm\":\"hqosmf\",\"savingsType\":\"kutycyarnroohgua\",\"unitOfMeasure\":\"oghktdpycz\"},\"scope\":\"oeocnhzqrott\",\"usage\":{\"firstConsumptionDate\":\"fyjzptwr\",\"lastConsumptionDate\":\"h\",\"lookBackUnitType\":\"qinfszpyglqd\",\"usageData\":[33.566753,78.96512],\"usageGrain\":\"alcxpjbyy\"}},\"etag\":\"joqcjenkyhfqzvsq\",\"tags\":{\"uwyvcacoyvi\":\"jelgcmpzqjhhhq\"},\"id\":\"bsizus\",\"name\":\"szlbscm\",\"type\":\"lzijiufehgmvflnw\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ConsumptionManager manager = ConsumptionManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ReservationRecommendationDetailsModel response = manager.reservationRecommendationDetails()
            .getWithResponse("xldykalsygaolnjp", Scope.SHARED, "bmjk", Term.P3Y, LookBackPeriod.LAST30DAYS,
                "jgsjjxxahmrn", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("zyqegxyiv", response.location());
        Assertions.assertEquals("nbm", response.sku());
    }
}
