/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * abc
 */

package com.microsoft.azure.management.consumption.v2019_01_01.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.consumption.v2019_01_01.Charges;
import rx.functions.Func1;
import rx.Observable;
import com.microsoft.azure.management.consumption.v2019_01_01.ChargeSummary;

class ChargesImpl extends WrapperImpl<ChargesInner> implements Charges {
    private final ConsumptionManager manager;

    ChargesImpl(ConsumptionManager manager) {
        super(manager.inner().charges());
        this.manager = manager;
    }

    public ConsumptionManager manager() {
        return this.manager;
    }

    @Override
    public Observable<ChargeSummary> listByScopeAsync(String scope) {
        ChargesInner client = this.inner();
        return client.listByScopeAsync(scope)
        .map(new Func1<ChargeSummaryInner, ChargeSummary>() {
            @Override
            public ChargeSummary call(ChargeSummaryInner inner) {
                return new ChargeSummaryImpl(inner, manager());
            }
        });
    }

}
