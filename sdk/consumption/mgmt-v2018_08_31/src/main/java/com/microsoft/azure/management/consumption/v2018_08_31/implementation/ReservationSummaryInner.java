/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.consumption.v2018_08_31.implementation;

import java.math.BigDecimal;
import org.joda.time.DateTime;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.ProxyResource;

/**
 * reservation summary resource.
 */
@JsonFlatten
public class ReservationSummaryInner extends ProxyResource {
    /**
     * The reservation order ID is the identifier for a reservation purchase.
     * Each reservation order ID represents a single purchase transaction. A
     * reservation order contains reservations. The reservation order specifies
     * the VM size and region for the reservations.
     */
    @JsonProperty(value = "properties.reservationOrderId", access = JsonProperty.Access.WRITE_ONLY)
    private String reservationOrderId;

    /**
     * The reservation ID is the identifier of a reservation within a
     * reservation order. Each reservation is the grouping for applying the
     * benefit scope and also specifies the number of instances to which the
     * reservation benefit can be applied to.
     */
    @JsonProperty(value = "properties.reservationId", access = JsonProperty.Access.WRITE_ONLY)
    private String reservationId;

    /**
     * This is the ARM Sku name. It can be used to join with the serviceType
     * field in additional info in usage records.
     */
    @JsonProperty(value = "properties.skuName", access = JsonProperty.Access.WRITE_ONLY)
    private String skuName;

    /**
     * This is the total hours reserved. E.g. if reservation for 1 instance was
     * made on 1 PM, this will be 11 hours for that day and 24 hours from
     * subsequent days.
     */
    @JsonProperty(value = "properties.reservedHours", access = JsonProperty.Access.WRITE_ONLY)
    private BigDecimal reservedHours;

    /**
     * Data corresponding to the utilization record. If the grain of data is
     * monthly, it will be first day of month.
     */
    @JsonProperty(value = "properties.usageDate", access = JsonProperty.Access.WRITE_ONLY)
    private DateTime usageDate;

    /**
     * Total used hours by the reservation.
     */
    @JsonProperty(value = "properties.usedHours", access = JsonProperty.Access.WRITE_ONLY)
    private BigDecimal usedHours;

    /**
     * This is the minimum hourly utilization in the usage time (day or month).
     * E.g. if usage record corresponds to 12/10/2017 and on that for hour 4
     * and 5, utilization was 10%, this field will return 10% for that day.
     */
    @JsonProperty(value = "properties.minUtilizationPercentage", access = JsonProperty.Access.WRITE_ONLY)
    private BigDecimal minUtilizationPercentage;

    /**
     * This is average utilization for the entire time range. (day or month
     * depending on the grain).
     */
    @JsonProperty(value = "properties.avgUtilizationPercentage", access = JsonProperty.Access.WRITE_ONLY)
    private BigDecimal avgUtilizationPercentage;

    /**
     * This is the maximum hourly utilization in the usage time (day or month).
     * E.g. if usage record corresponds to 12/10/2017 and on that for hour 4
     * and 5, utilization was 100%, this field will return 100% for that day.
     */
    @JsonProperty(value = "properties.maxUtilizationPercentage", access = JsonProperty.Access.WRITE_ONLY)
    private BigDecimal maxUtilizationPercentage;

    /**
     * Resource tags.
     */
    @JsonProperty(value = "tags", access = JsonProperty.Access.WRITE_ONLY)
    private Map<String, String> tags;

    /**
     * Get the reservation order ID is the identifier for a reservation purchase. Each reservation order ID represents a single purchase transaction. A reservation order contains reservations. The reservation order specifies the VM size and region for the reservations.
     *
     * @return the reservationOrderId value
     */
    public String reservationOrderId() {
        return this.reservationOrderId;
    }

    /**
     * Get the reservation ID is the identifier of a reservation within a reservation order. Each reservation is the grouping for applying the benefit scope and also specifies the number of instances to which the reservation benefit can be applied to.
     *
     * @return the reservationId value
     */
    public String reservationId() {
        return this.reservationId;
    }

    /**
     * Get this is the ARM Sku name. It can be used to join with the serviceType field in additional info in usage records.
     *
     * @return the skuName value
     */
    public String skuName() {
        return this.skuName;
    }

    /**
     * Get this is the total hours reserved. E.g. if reservation for 1 instance was made on 1 PM, this will be 11 hours for that day and 24 hours from subsequent days.
     *
     * @return the reservedHours value
     */
    public BigDecimal reservedHours() {
        return this.reservedHours;
    }

    /**
     * Get data corresponding to the utilization record. If the grain of data is monthly, it will be first day of month.
     *
     * @return the usageDate value
     */
    public DateTime usageDate() {
        return this.usageDate;
    }

    /**
     * Get total used hours by the reservation.
     *
     * @return the usedHours value
     */
    public BigDecimal usedHours() {
        return this.usedHours;
    }

    /**
     * Get this is the minimum hourly utilization in the usage time (day or month). E.g. if usage record corresponds to 12/10/2017 and on that for hour 4 and 5, utilization was 10%, this field will return 10% for that day.
     *
     * @return the minUtilizationPercentage value
     */
    public BigDecimal minUtilizationPercentage() {
        return this.minUtilizationPercentage;
    }

    /**
     * Get this is average utilization for the entire time range. (day or month depending on the grain).
     *
     * @return the avgUtilizationPercentage value
     */
    public BigDecimal avgUtilizationPercentage() {
        return this.avgUtilizationPercentage;
    }

    /**
     * Get this is the maximum hourly utilization in the usage time (day or month). E.g. if usage record corresponds to 12/10/2017 and on that for hour 4 and 5, utilization was 100%, this field will return 100% for that day.
     *
     * @return the maxUtilizationPercentage value
     */
    public BigDecimal maxUtilizationPercentage() {
        return this.maxUtilizationPercentage;
    }

    /**
     * Get resource tags.
     *
     * @return the tags value
     */
    public Map<String, String> tags() {
        return this.tags;
    }

}
