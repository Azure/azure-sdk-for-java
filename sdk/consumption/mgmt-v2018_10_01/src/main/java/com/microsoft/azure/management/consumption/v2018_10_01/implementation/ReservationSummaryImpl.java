/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.consumption.v2018_10_01.implementation;

import com.microsoft.azure.management.consumption.v2018_10_01.ReservationSummary;
import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import java.math.BigDecimal;
import java.util.Map;
import org.joda.time.DateTime;

class ReservationSummaryImpl extends WrapperImpl<ReservationSummaryInner> implements ReservationSummary {
    private final ConsumptionManager manager;
    ReservationSummaryImpl(ReservationSummaryInner inner, ConsumptionManager manager) {
        super(inner);
        this.manager = manager;
    }

    @Override
    public ConsumptionManager manager() {
        return this.manager;
    }

    @Override
    public BigDecimal avgUtilizationPercentage() {
        return this.inner().avgUtilizationPercentage();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public BigDecimal maxUtilizationPercentage() {
        return this.inner().maxUtilizationPercentage();
    }

    @Override
    public BigDecimal minUtilizationPercentage() {
        return this.inner().minUtilizationPercentage();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public String reservationId() {
        return this.inner().reservationId();
    }

    @Override
    public String reservationOrderId() {
        return this.inner().reservationOrderId();
    }

    @Override
    public BigDecimal reservedHours() {
        return this.inner().reservedHours();
    }

    @Override
    public String skuName() {
        return this.inner().skuName();
    }

    @Override
    public Map<String, String> tags() {
        return this.inner().tags();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

    @Override
    public DateTime usageDate() {
        return this.inner().usageDate();
    }

    @Override
    public BigDecimal usedHours() {
        return this.inner().usedHours();
    }

}
