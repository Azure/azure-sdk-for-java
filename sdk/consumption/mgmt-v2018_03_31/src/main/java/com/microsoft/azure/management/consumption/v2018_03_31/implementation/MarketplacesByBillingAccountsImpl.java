/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * abc
 */

package com.microsoft.azure.management.consumption.v2018_03_31.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.consumption.v2018_03_31.MarketplacesByBillingAccounts;
import rx.functions.Func1;
import rx.Observable;
import com.microsoft.azure.Page;
import com.microsoft.azure.management.consumption.v2018_03_31.Marketplace;

class MarketplacesByBillingAccountsImpl extends WrapperImpl<MarketplacesByBillingAccountsInner> implements MarketplacesByBillingAccounts {
    private final ConsumptionManager manager;

    MarketplacesByBillingAccountsImpl(ConsumptionManager manager) {
        super(manager.inner().marketplacesByBillingAccounts());
        this.manager = manager;
    }

    public ConsumptionManager manager() {
        return this.manager;
    }

    @Override
    public Observable<Marketplace> listAsync(final String billingAccountId) {
        MarketplacesByBillingAccountsInner client = this.inner();
        return client.listAsync(billingAccountId)
        .flatMapIterable(new Func1<Page<MarketplaceInner>, Iterable<MarketplaceInner>>() {
            @Override
            public Iterable<MarketplaceInner> call(Page<MarketplaceInner> page) {
                return page.items();
            }
        })
        .map(new Func1<MarketplaceInner, Marketplace>() {
            @Override
            public Marketplace call(MarketplaceInner inner) {
                return new MarketplaceImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<Marketplace> listByBillingPeriodAsync(final String billingAccountId, final String billingPeriodName) {
        MarketplacesByBillingAccountsInner client = this.inner();
        return client.listByBillingPeriodAsync(billingAccountId, billingPeriodName)
        .flatMapIterable(new Func1<Page<MarketplaceInner>, Iterable<MarketplaceInner>>() {
            @Override
            public Iterable<MarketplaceInner> call(Page<MarketplaceInner> page) {
                return page.items();
            }
        })
        .map(new Func1<MarketplaceInner, Marketplace>() {
            @Override
            public Marketplace call(MarketplaceInner inner) {
                return new MarketplaceImpl(inner, manager());
            }
        });
    }

}
