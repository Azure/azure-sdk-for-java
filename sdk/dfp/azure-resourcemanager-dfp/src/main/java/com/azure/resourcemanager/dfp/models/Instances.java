// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dfp.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of Instances. */
public interface Instances {
    /**
     * Gets details about the specified instances.
     *
     * @param resourceGroupName The name of the Azure Resource group of which a given DFP instance is part. This name
     *     must be at least 1 character in length, and no more than 90.
     * @param instanceName The name of the instance. It must be a minimum of 3 characters, and a maximum of 63.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return details about the specified instances.
     */
    DfpInstance getByResourceGroup(String resourceGroupName, String instanceName);

    /**
     * Gets details about the specified instances.
     *
     * @param resourceGroupName The name of the Azure Resource group of which a given DFP instance is part. This name
     *     must be at least 1 character in length, and no more than 90.
     * @param instanceName The name of the instance. It must be a minimum of 3 characters, and a maximum of 63.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return details about the specified instances.
     */
    Response<DfpInstance> getByResourceGroupWithResponse(
        String resourceGroupName, String instanceName, Context context);

    /**
     * Deletes the specified DFP instance.
     *
     * @param resourceGroupName The name of the Azure Resource group of which a given DFP instance is part. This name
     *     must be at least 1 character in length, and no more than 90.
     * @param instanceName The name of the DFP instance. It must be at least 3 characters in length, and no more than
     *     63.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String instanceName);

    /**
     * Deletes the specified DFP instance.
     *
     * @param resourceGroupName The name of the Azure Resource group of which a given DFP instance is part. This name
     *     must be at least 1 character in length, and no more than 90.
     * @param instanceName The name of the DFP instance. It must be at least 3 characters in length, and no more than
     *     63.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String instanceName, Context context);

    /**
     * Gets all the Dedicated instance for the given resource group.
     *
     * @param resourceGroupName The name of the Azure Resource group of which a given DFP instance is part. This name
     *     must be at least 1 character in length, and no more than 90.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all the Dedicated instance for the given resource group.
     */
    PagedIterable<DfpInstance> listByResourceGroup(String resourceGroupName);

    /**
     * Gets all the Dedicated instance for the given resource group.
     *
     * @param resourceGroupName The name of the Azure Resource group of which a given DFP instance is part. This name
     *     must be at least 1 character in length, and no more than 90.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all the Dedicated instance for the given resource group.
     */
    PagedIterable<DfpInstance> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Lists all the Dedicated instances for the given subscription.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an array of DFP instance resources.
     */
    PagedIterable<DfpInstance> list();

    /**
     * Lists all the Dedicated instances for the given subscription.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an array of DFP instance resources.
     */
    PagedIterable<DfpInstance> list(Context context);

    /**
     * Check the name availability in the target location.
     *
     * @param location The region name which the operation will lookup into.
     * @param instanceParameters The name of the instance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the checking result of DFP instance name availability.
     */
    CheckInstanceNameAvailabilityResult checkNameAvailability(
        String location, CheckInstanceNameAvailabilityParameters instanceParameters);

    /**
     * Check the name availability in the target location.
     *
     * @param location The region name which the operation will lookup into.
     * @param instanceParameters The name of the instance.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the checking result of DFP instance name availability.
     */
    Response<CheckInstanceNameAvailabilityResult> checkNameAvailabilityWithResponse(
        String location, CheckInstanceNameAvailabilityParameters instanceParameters, Context context);

    /**
     * Gets details about the specified instances.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return details about the specified instances.
     */
    DfpInstance getById(String id);

    /**
     * Gets details about the specified instances.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return details about the specified instances.
     */
    Response<DfpInstance> getByIdWithResponse(String id, Context context);

    /**
     * Deletes the specified DFP instance.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes the specified DFP instance.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new DfpInstance resource.
     *
     * @param name resource name.
     * @return the first stage of the new DfpInstance definition.
     */
    DfpInstance.DefinitionStages.Blank define(String name);
}
