// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dfp.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.dfp.fluent.models.DfpInstanceMutableProperties;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** Provision request specification. */
@Fluent
public final class DfpInstanceUpdateParameters {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(DfpInstanceUpdateParameters.class);

    /*
     * Key-value pairs of additional provisioning properties.
     */
    @JsonProperty(value = "tags")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> tags;

    /*
     * Properties of the provision operation request
     */
    @JsonProperty(value = "properties")
    private DfpInstanceMutableProperties innerProperties;

    /**
     * Get the tags property: Key-value pairs of additional provisioning properties.
     *
     * @return the tags value.
     */
    public Map<String, String> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: Key-value pairs of additional provisioning properties.
     *
     * @param tags the tags value to set.
     * @return the DfpInstanceUpdateParameters object itself.
     */
    public DfpInstanceUpdateParameters withTags(Map<String, String> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get the innerProperties property: Properties of the provision operation request.
     *
     * @return the innerProperties value.
     */
    private DfpInstanceMutableProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the administration property: A collection of DFP instance administrators.
     *
     * @return the administration value.
     */
    public DfpInstanceAdministrators administration() {
        return this.innerProperties() == null ? null : this.innerProperties().administration();
    }

    /**
     * Set the administration property: A collection of DFP instance administrators.
     *
     * @param administration the administration value to set.
     * @return the DfpInstanceUpdateParameters object itself.
     */
    public DfpInstanceUpdateParameters withAdministration(DfpInstanceAdministrators administration) {
        if (this.innerProperties() == null) {
            this.innerProperties = new DfpInstanceMutableProperties();
        }
        this.innerProperties().withAdministration(administration);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
