// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.analytics.defender.easm;

import com.azure.analytics.defender.easm.implementation.EasmDefenderClientImpl;
import com.azure.core.annotation.Generated;
import com.azure.core.annotation.ServiceClientBuilder;
import com.azure.core.client.traits.ConfigurationTrait;
import com.azure.core.client.traits.EndpointTrait;
import com.azure.core.client.traits.HttpTrait;
import com.azure.core.client.traits.TokenCredentialTrait;
import com.azure.core.credential.TokenCredential;
import com.azure.core.http.HttpClient;
import com.azure.core.http.HttpHeaders;
import com.azure.core.http.HttpPipeline;
import com.azure.core.http.HttpPipelineBuilder;
import com.azure.core.http.HttpPipelinePosition;
import com.azure.core.http.policy.AddDatePolicy;
import com.azure.core.http.policy.AddHeadersFromContextPolicy;
import com.azure.core.http.policy.AddHeadersPolicy;
import com.azure.core.http.policy.BearerTokenAuthenticationPolicy;
import com.azure.core.http.policy.HttpLogOptions;
import com.azure.core.http.policy.HttpLoggingPolicy;
import com.azure.core.http.policy.HttpPipelinePolicy;
import com.azure.core.http.policy.HttpPolicyProviders;
import com.azure.core.http.policy.RequestIdPolicy;
import com.azure.core.http.policy.RetryOptions;
import com.azure.core.http.policy.RetryPolicy;
import com.azure.core.http.policy.UserAgentPolicy;
import com.azure.core.util.ClientOptions;
import com.azure.core.util.Configuration;
import com.azure.core.util.CoreUtils;
import com.azure.core.util.builder.ClientBuilderUtil;
import com.azure.core.util.logging.ClientLogger;
import com.azure.core.util.serializer.JacksonAdapter;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Objects;

/** A builder for creating a new instance of the EasmDefenderClient type. */
@ServiceClientBuilder(
        serviceClients = {
            AssetsClient.class,
            DataConnectionsClient.class,
            DiscoveryGroupsClient.class,
            DiscoveryTemplatesClient.class,
            ReportsClient.class,
            SavedFiltersClient.class,
            TasksClient.class,
            AssetsAsyncClient.class,
            DataConnectionsAsyncClient.class,
            DiscoveryGroupsAsyncClient.class,
            DiscoveryTemplatesAsyncClient.class,
            ReportsAsyncClient.class,
            SavedFiltersAsyncClient.class,
            TasksAsyncClient.class
        })
public final class EasmDefenderClientBuilder
        implements HttpTrait<EasmDefenderClientBuilder>,
                ConfigurationTrait<EasmDefenderClientBuilder>,
                TokenCredentialTrait<EasmDefenderClientBuilder>,
                EndpointTrait<EasmDefenderClientBuilder> {
    @Generated private static final String SDK_NAME = "name";

    @Generated private static final String SDK_VERSION = "version";

    @Generated
    private static final String[] DEFAULT_SCOPES = new String[] {"https://easm.defender.microsoft.com/.default"};

    @Generated
    private static final Map<String, String> PROPERTIES =
            CoreUtils.getProperties("azure-analytics-defender-easm.properties");

    @Generated private final List<HttpPipelinePolicy> pipelinePolicies;

    /** Create an instance of the EasmDefenderClientBuilder. */
    @Generated
    public EasmDefenderClientBuilder() {
        this.pipelinePolicies = new ArrayList<>();
    }

    /*
     * The HTTP pipeline to send requests through.
     */
    @Generated private HttpPipeline pipeline;

    /** {@inheritDoc}. */
    @Generated
    @Override
    public EasmDefenderClientBuilder pipeline(HttpPipeline pipeline) {
        if (this.pipeline != null && pipeline == null) {
            LOGGER.info("HttpPipeline is being set to 'null' when it was previously configured.");
        }
        this.pipeline = pipeline;
        return this;
    }

    /*
     * The HTTP client used to send the request.
     */
    @Generated private HttpClient httpClient;

    /** {@inheritDoc}. */
    @Generated
    @Override
    public EasmDefenderClientBuilder httpClient(HttpClient httpClient) {
        this.httpClient = httpClient;
        return this;
    }

    /*
     * The logging configuration for HTTP requests and responses.
     */
    @Generated private HttpLogOptions httpLogOptions;

    /** {@inheritDoc}. */
    @Generated
    @Override
    public EasmDefenderClientBuilder httpLogOptions(HttpLogOptions httpLogOptions) {
        this.httpLogOptions = httpLogOptions;
        return this;
    }

    /*
     * The client options such as application ID and custom headers to set on a request.
     */
    @Generated private ClientOptions clientOptions;

    /** {@inheritDoc}. */
    @Generated
    @Override
    public EasmDefenderClientBuilder clientOptions(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        return this;
    }

    /*
     * The retry options to configure retry policy for failed requests.
     */
    @Generated private RetryOptions retryOptions;

    /** {@inheritDoc}. */
    @Generated
    @Override
    public EasmDefenderClientBuilder retryOptions(RetryOptions retryOptions) {
        this.retryOptions = retryOptions;
        return this;
    }

    /** {@inheritDoc}. */
    @Generated
    @Override
    public EasmDefenderClientBuilder addPolicy(HttpPipelinePolicy customPolicy) {
        Objects.requireNonNull(customPolicy, "'customPolicy' cannot be null.");
        pipelinePolicies.add(customPolicy);
        return this;
    }

    /*
     * The configuration store that is used during construction of the service client.
     */
    @Generated private Configuration configuration;

    /** {@inheritDoc}. */
    @Generated
    @Override
    public EasmDefenderClientBuilder configuration(Configuration configuration) {
        this.configuration = configuration;
        return this;
    }

    /*
     * The TokenCredential used for authentication.
     */
    @Generated private TokenCredential tokenCredential;

    /** {@inheritDoc}. */
    @Generated
    @Override
    public EasmDefenderClientBuilder credential(TokenCredential tokenCredential) {
        this.tokenCredential = tokenCredential;
        return this;
    }

    /*
     * The service endpoint
     */
    @Generated private String endpoint;

    /** {@inheritDoc}. */
    @Generated
    @Override
    public EasmDefenderClientBuilder endpoint(String endpoint) {
        this.endpoint = endpoint;
        return this;
    }

    /*
     * The ID of the target subscription.
     */
    @Generated private String subscriptionId;

    /**
     * Sets The ID of the target subscription.
     *
     * @param subscriptionId the subscriptionId value.
     * @return the EasmDefenderClientBuilder.
     */
    @Generated
    public EasmDefenderClientBuilder subscriptionId(String subscriptionId) {
        this.subscriptionId = subscriptionId;
        return this;
    }

    /*
     * The name of the Resource Group.
     */
    @Generated private String resourceGroupName;

    /**
     * Sets The name of the Resource Group.
     *
     * @param resourceGroupName the resourceGroupName value.
     * @return the EasmDefenderClientBuilder.
     */
    @Generated
    public EasmDefenderClientBuilder resourceGroupName(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    /*
     * The name of the Workspace.
     */
    @Generated private String workspaceName;

    /**
     * Sets The name of the Workspace.
     *
     * @param workspaceName the workspaceName value.
     * @return the EasmDefenderClientBuilder.
     */
    @Generated
    public EasmDefenderClientBuilder workspaceName(String workspaceName) {
        this.workspaceName = workspaceName;
        return this;
    }

    /*
     * Service version
     */
    @Generated private EASMDefenderServiceVersion serviceVersion;

    /**
     * Sets Service version.
     *
     * @param serviceVersion the serviceVersion value.
     * @return the EasmDefenderClientBuilder.
     */
    @Generated
    public EasmDefenderClientBuilder serviceVersion(EASMDefenderServiceVersion serviceVersion) {
        this.serviceVersion = serviceVersion;
        return this;
    }

    /*
     * The retry policy that will attempt to retry failed requests, if applicable.
     */
    @Generated private RetryPolicy retryPolicy;

    /**
     * Sets The retry policy that will attempt to retry failed requests, if applicable.
     *
     * @param retryPolicy the retryPolicy value.
     * @return the EasmDefenderClientBuilder.
     */
    @Generated
    public EasmDefenderClientBuilder retryPolicy(RetryPolicy retryPolicy) {
        this.retryPolicy = retryPolicy;
        return this;
    }

    /**
     * Builds an instance of EasmDefenderClientImpl with the provided parameters.
     *
     * @return an instance of EasmDefenderClientImpl.
     */
    @Generated
    private EasmDefenderClientImpl buildInnerClient() {
        HttpPipeline localPipeline = (pipeline != null) ? pipeline : createHttpPipeline();
        EASMDefenderServiceVersion localServiceVersion =
                (serviceVersion != null) ? serviceVersion : EASMDefenderServiceVersion.getLatest();
        EasmDefenderClientImpl client =
                new EasmDefenderClientImpl(
                        localPipeline,
                        JacksonAdapter.createDefaultSerializerAdapter(),
                        endpoint,
                        subscriptionId,
                        resourceGroupName,
                        workspaceName,
                        localServiceVersion);
        return client;
    }

    @Generated
    private HttpPipeline createHttpPipeline() {
        Configuration buildConfiguration =
                (configuration == null) ? Configuration.getGlobalConfiguration() : configuration;
        HttpLogOptions localHttpLogOptions = this.httpLogOptions == null ? new HttpLogOptions() : this.httpLogOptions;
        ClientOptions localClientOptions = this.clientOptions == null ? new ClientOptions() : this.clientOptions;
        List<HttpPipelinePolicy> policies = new ArrayList<>();
        String clientName = PROPERTIES.getOrDefault(SDK_NAME, "UnknownName");
        String clientVersion = PROPERTIES.getOrDefault(SDK_VERSION, "UnknownVersion");
        String applicationId = CoreUtils.getApplicationId(localClientOptions, localHttpLogOptions);
        policies.add(new UserAgentPolicy(applicationId, clientName, clientVersion, buildConfiguration));
        policies.add(new RequestIdPolicy());
        policies.add(new AddHeadersFromContextPolicy());
        HttpHeaders headers = new HttpHeaders();
        localClientOptions.getHeaders().forEach(header -> headers.set(header.getName(), header.getValue()));
        if (headers.getSize() > 0) {
            policies.add(new AddHeadersPolicy(headers));
        }
        this.pipelinePolicies.stream()
                .filter(p -> p.getPipelinePosition() == HttpPipelinePosition.PER_CALL)
                .forEach(p -> policies.add(p));
        HttpPolicyProviders.addBeforeRetryPolicies(policies);
        policies.add(ClientBuilderUtil.validateAndGetRetryPolicy(retryPolicy, retryOptions, new RetryPolicy()));
        policies.add(new AddDatePolicy());
        if (tokenCredential != null) {
            policies.add(new BearerTokenAuthenticationPolicy(tokenCredential, DEFAULT_SCOPES));
        }
        this.pipelinePolicies.stream()
                .filter(p -> p.getPipelinePosition() == HttpPipelinePosition.PER_RETRY)
                .forEach(p -> policies.add(p));
        HttpPolicyProviders.addAfterRetryPolicies(policies);
        policies.add(new HttpLoggingPolicy(httpLogOptions));
        HttpPipeline httpPipeline =
                new HttpPipelineBuilder()
                        .policies(policies.toArray(new HttpPipelinePolicy[0]))
                        .httpClient(httpClient)
                        .clientOptions(localClientOptions)
                        .build();
        return httpPipeline;
    }

    /**
     * Builds an instance of AssetsAsyncClient class.
     *
     * @return an instance of AssetsAsyncClient.
     */
    @Generated
    public AssetsAsyncClient buildAssetsAsyncClient() {
        return new AssetsAsyncClient(buildInnerClient().getAssets());
    }

    /**
     * Builds an instance of DataConnectionsAsyncClient class.
     *
     * @return an instance of DataConnectionsAsyncClient.
     */
    @Generated
    public DataConnectionsAsyncClient buildDataConnectionsAsyncClient() {
        return new DataConnectionsAsyncClient(buildInnerClient().getDataConnections());
    }

    /**
     * Builds an instance of DiscoveryGroupsAsyncClient class.
     *
     * @return an instance of DiscoveryGroupsAsyncClient.
     */
    @Generated
    public DiscoveryGroupsAsyncClient buildDiscoveryGroupsAsyncClient() {
        return new DiscoveryGroupsAsyncClient(buildInnerClient().getDiscoveryGroups());
    }

    /**
     * Builds an instance of DiscoveryTemplatesAsyncClient class.
     *
     * @return an instance of DiscoveryTemplatesAsyncClient.
     */
    @Generated
    public DiscoveryTemplatesAsyncClient buildDiscoveryTemplatesAsyncClient() {
        return new DiscoveryTemplatesAsyncClient(buildInnerClient().getDiscoveryTemplates());
    }

    /**
     * Builds an instance of ReportsAsyncClient class.
     *
     * @return an instance of ReportsAsyncClient.
     */
    @Generated
    public ReportsAsyncClient buildReportsAsyncClient() {
        return new ReportsAsyncClient(buildInnerClient().getReports());
    }

    /**
     * Builds an instance of SavedFiltersAsyncClient class.
     *
     * @return an instance of SavedFiltersAsyncClient.
     */
    @Generated
    public SavedFiltersAsyncClient buildSavedFiltersAsyncClient() {
        return new SavedFiltersAsyncClient(buildInnerClient().getSavedFilters());
    }

    /**
     * Builds an instance of TasksAsyncClient class.
     *
     * @return an instance of TasksAsyncClient.
     */
    @Generated
    public TasksAsyncClient buildTasksAsyncClient() {
        return new TasksAsyncClient(buildInnerClient().getTasks());
    }

    /**
     * Builds an instance of AssetsClient class.
     *
     * @return an instance of AssetsClient.
     */
    @Generated
    public AssetsClient buildAssetsClient() {
        return new AssetsClient(buildInnerClient().getAssets());
    }

    /**
     * Builds an instance of DataConnectionsClient class.
     *
     * @return an instance of DataConnectionsClient.
     */
    @Generated
    public DataConnectionsClient buildDataConnectionsClient() {
        return new DataConnectionsClient(buildInnerClient().getDataConnections());
    }

    /**
     * Builds an instance of DiscoveryGroupsClient class.
     *
     * @return an instance of DiscoveryGroupsClient.
     */
    @Generated
    public DiscoveryGroupsClient buildDiscoveryGroupsClient() {
        return new DiscoveryGroupsClient(buildInnerClient().getDiscoveryGroups());
    }

    /**
     * Builds an instance of DiscoveryTemplatesClient class.
     *
     * @return an instance of DiscoveryTemplatesClient.
     */
    @Generated
    public DiscoveryTemplatesClient buildDiscoveryTemplatesClient() {
        return new DiscoveryTemplatesClient(buildInnerClient().getDiscoveryTemplates());
    }

    /**
     * Builds an instance of ReportsClient class.
     *
     * @return an instance of ReportsClient.
     */
    @Generated
    public ReportsClient buildReportsClient() {
        return new ReportsClient(buildInnerClient().getReports());
    }

    /**
     * Builds an instance of SavedFiltersClient class.
     *
     * @return an instance of SavedFiltersClient.
     */
    @Generated
    public SavedFiltersClient buildSavedFiltersClient() {
        return new SavedFiltersClient(buildInnerClient().getSavedFilters());
    }

    /**
     * Builds an instance of TasksClient class.
     *
     * @return an instance of TasksClient.
     */
    @Generated
    public TasksClient buildTasksClient() {
        return new TasksClient(buildInnerClient().getTasks());
    }

    private static final ClientLogger LOGGER = new ClientLogger(EasmDefenderClientBuilder.class);
}
