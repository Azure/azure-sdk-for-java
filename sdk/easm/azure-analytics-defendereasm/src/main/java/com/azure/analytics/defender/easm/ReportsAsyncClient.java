// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.analytics.defender.easm;

import com.azure.analytics.defender.easm.implementation.ReportsImpl;
import com.azure.analytics.defender.easm.models.ReportAssetSnapshotRequest;
import com.azure.analytics.defender.easm.models.ReportAssetSnapshotResponse;
import com.azure.analytics.defender.easm.models.ReportAssetSummaryRequest;
import com.azure.analytics.defender.easm.models.ReportAssetSummaryResponse;
import com.azure.analytics.defender.easm.models.ReportBillableAssetSummaryResponse;
import com.azure.core.annotation.Generated;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;
import com.azure.core.util.FluxUtil;
import reactor.core.publisher.Mono;

/** Initializes a new instance of the asynchronous EasmDefenderClient type. */
@ServiceClient(builder = EasmDefenderClientBuilder.class, isAsync = true)
public final class ReportsAsyncClient {
    @Generated private final ReportsImpl serviceClient;

    /**
     * Initializes an instance of ReportsAsyncClient class.
     *
     * @param serviceClient the service client implementation.
     */
    @Generated
    ReportsAsyncClient(ReportsImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * Get billable assets summary for the workspace.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     assetSummaries (Optional): [
     *          (Optional){
     *             date: LocalDate (Optional)
     *             total: Long (Optional)
     *             assetBreakdown (Optional): [
     *                  (Optional){
     *                     kind: String(domain/host/ipAddress) (Optional)
     *                     count: Long (Optional)
     *                 }
     *             ]
     *         }
     *     ]
     * }
     * }</pre>
     *
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return billable assets summary for the workspace along with {@link Response} on successful completion of {@link
     *     Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> getBillableWithResponse(RequestOptions requestOptions) {
        return this.serviceClient.getBillableWithResponseAsync(requestOptions);
    }

    /**
     * Get the most recent snapshot of asset summary values for the snapshot request.
     *
     * <p><strong>Request Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     metric: String (Optional)
     *     labelName: String (Optional)
     *     size: Integer (Optional)
     *     page: Integer (Optional)
     * }
     * }</pre>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     displayName: String (Optional)
     *     metric: String (Optional)
     *     labelName: String (Optional)
     *     updatedAt: OffsetDateTime (Optional)
     *     description: String (Optional)
     *     assets (Optional): {
     *         totalElements: Long (Optional)
     *         mark: String (Optional)
     *         nextLink: String (Optional)
     *         value (Optional): [
     *              (Optional){
     *                 id: String (Required)
     *                 name: String (Optional)
     *                 displayName: String (Optional)
     *                 uuid: String (Optional)
     *                 createdDate: OffsetDateTime (Optional)
     *                 updatedDate: OffsetDateTime (Optional)
     *                 state: String(candidate/confirmed/dismissed/candidateInvestigate/associatedPartner/associatedThirdparty/archived) (Optional)
     *                 externalId: String (Optional)
     *                 labels (Optional): [
     *                     String (Optional)
     *                 ]
     *                 wildcard: Boolean (Optional)
     *                 discoGroupName: String (Optional)
     *                 auditTrail (Optional): [
     *                      (Optional){
     *                         id: String (Optional)
     *                         name: String (Optional)
     *                         displayName: String (Optional)
     *                         kind: String(as/contact/domain/host/ipAddress/ipBlock/page/sslCert) (Optional)
     *                         reason: String (Optional)
     *                     }
     *                 ]
     *                 reason: String (Optional)
     *             }
     *         ]
     *     }
     * }
     * }</pre>
     *
     * @param reportAssetSnapshotRequest A request body used to retrieve an asset report snapshot.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the most recent snapshot of asset summary values for the snapshot request along with {@link Response} on
     *     successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> getSnapshotWithResponse(
            BinaryData reportAssetSnapshotRequest, RequestOptions requestOptions) {
        return this.serviceClient.getSnapshotWithResponseAsync(reportAssetSnapshotRequest, requestOptions);
    }

    /**
     * Get asset summary details for the summary request.
     *
     * <p><strong>Request Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     metricCategories (Optional): [
     *         String (Optional)
     *     ]
     *     metrics (Optional): [
     *         String (Optional)
     *     ]
     *     filters (Optional): [
     *         String (Optional)
     *     ]
     *     groupBy: String (Optional)
     *     segmentBy: String (Optional)
     *     labelName: String (Optional)
     * }
     * }</pre>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     assetSummaries (Optional): [
     *          (Optional){
     *             displayName: String (Optional)
     *             description: String (Optional)
     *             updatedAt: OffsetDateTime (Optional)
     *             metricCategory: String (Optional)
     *             metric: String (Optional)
     *             filter: String (Optional)
     *             labelName: String (Optional)
     *             count: Long (Optional)
     *             link: String (Optional)
     *             children (Optional): [
     *                 (recursive schema, see above)
     *             ]
     *         }
     *     ]
     * }
     * }</pre>
     *
     * @param reportAssetSummaryRequest A request body used to retrieve summary asset information. One and only one
     *     collection of summary identifiers must be provided: filters, metrics, or metricCategories.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return asset summary details for the summary request along with {@link Response} on successful completion of
     *     {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> getSummaryWithResponse(
            BinaryData reportAssetSummaryRequest, RequestOptions requestOptions) {
        return this.serviceClient.getSummaryWithResponseAsync(reportAssetSummaryRequest, requestOptions);
    }

    /**
     * Get billable assets summary for the workspace.
     *
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return billable assets summary for the workspace on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<ReportBillableAssetSummaryResponse> getBillable() {
        // Generated convenience method for getBillableWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return getBillableWithResponse(requestOptions)
                .flatMap(FluxUtil::toMono)
                .map(protocolMethodData -> protocolMethodData.toObject(ReportBillableAssetSummaryResponse.class));
    }

    /**
     * Get the most recent snapshot of asset summary values for the snapshot request.
     *
     * @param reportAssetSnapshotRequest A request body used to retrieve an asset report snapshot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the most recent snapshot of asset summary values for the snapshot request on successful completion of
     *     {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<ReportAssetSnapshotResponse> getSnapshot(ReportAssetSnapshotRequest reportAssetSnapshotRequest) {
        // Generated convenience method for getSnapshotWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return getSnapshotWithResponse(BinaryData.fromObject(reportAssetSnapshotRequest), requestOptions)
                .flatMap(FluxUtil::toMono)
                .map(protocolMethodData -> protocolMethodData.toObject(ReportAssetSnapshotResponse.class));
    }

    /**
     * Get asset summary details for the summary request.
     *
     * @param reportAssetSummaryRequest A request body used to retrieve summary asset information. One and only one
     *     collection of summary identifiers must be provided: filters, metrics, or metricCategories.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return asset summary details for the summary request on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<ReportAssetSummaryResponse> getSummary(ReportAssetSummaryRequest reportAssetSummaryRequest) {
        // Generated convenience method for getSummaryWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return getSummaryWithResponse(BinaryData.fromObject(reportAssetSummaryRequest), requestOptions)
                .flatMap(FluxUtil::toMono)
                .map(protocolMethodData -> protocolMethodData.toObject(ReportAssetSummaryResponse.class));
    }
}
