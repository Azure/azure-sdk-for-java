// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.analytics.defender.easm.generated;

import com.azure.analytics.defender.easm.models.AssetResource;
import com.azure.analytics.defender.easm.models.AssetState;
import com.azure.core.http.rest.PagedIterable;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class AssetsListAssetResourceTests extends EasmClientTestBase {
    @Test
    @Disabled
    public void testAssetsListAssetResourceTests() {
        // method invocation
        PagedIterable<AssetResource> response = easmClient.listAssetResource("state = \"confirmed\"", null, 0, null);

        // response assertion
        Assertions.assertEquals(200, response.iterableByPage().iterator().next().getStatusCode());
        AssetResource firstItem = response.iterator().next();
        Assertions.assertNotNull(firstItem);
        // verify property "kind"
        Assertions.assertEquals("host", firstItem.getKind());
        // verify property "id"
        Assertions.assertEquals("host$$contoso.net", firstItem.getId());
        // verify property "name"
        Assertions.assertEquals("contoso.net", firstItem.getName());
        // verify property "displayName"
        Assertions.assertEquals("contoso.net", firstItem.getDisplayName());
        // verify property "uuid"
        Assertions.assertEquals("00000000-0000-0000-0000-000000000000", firstItem.getUuid());
        // verify property "createdDate"
        Assertions.assertNotNull(firstItem.getCreatedDate());
        // verify property "updatedDate"
        Assertions.assertNotNull(firstItem.getUpdatedDate());
        // verify property "state"
        Assertions.assertEquals(AssetState.CONFIRMED, firstItem.getState());
        // verify property "labels"
        List<String> firstItemLabels = firstItem.getLabels();
        Assertions.assertEquals(0, firstItemLabels.size());
        // verify property "wildcard"
        Assertions.assertEquals(false, firstItem.isWildcard());
        // verify property "discoGroupName"
        Assertions.assertEquals("Contoso", firstItem.getDiscoGroupName());
    }
}
