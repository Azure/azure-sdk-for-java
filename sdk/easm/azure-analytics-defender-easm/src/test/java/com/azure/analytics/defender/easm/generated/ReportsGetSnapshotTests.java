// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.analytics.defender.easm.generated;

import com.azure.analytics.defender.easm.models.AssetPageResult;
import com.azure.analytics.defender.easm.models.AssetResource;
import com.azure.analytics.defender.easm.models.AuditTrailItem;
import com.azure.analytics.defender.easm.models.AuditTrailItemKind;
import com.azure.analytics.defender.easm.models.ReportAssetSnapshotRequest;
import com.azure.analytics.defender.easm.models.ReportAssetSnapshotResult;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class ReportsGetSnapshotTests extends EasmClientTestBase {
    @Test
    @Disabled
    public void testReportsGetSnapshotTests() {
        // method invocation
        ReportAssetSnapshotResult response = easmClient
            .getSnapshot(new ReportAssetSnapshotRequest().setMetric("site_status_active").setSize(5).setPage(0));

        // response assertion
        Assertions.assertNotNull(response);
        // verify property "displayName"
        Assertions.assertEquals("Metric Name", response.getDisplayName());
        // verify property "metric"
        Assertions.assertEquals("metricName", response.getMetric());
        // verify property "updatedAt"
        Assertions.assertNotNull(response.getUpdatedAt());
        // verify property "description"
        Assertions.assertEquals("Metric description.", response.getDescription());
        // verify property "assets"
        AssetPageResult responseAssets = response.getAssets();
        Assertions.assertNotNull(responseAssets);
        Assertions.assertEquals(200L, responseAssets.getTotalElements());
        Assertions.assertEquals(
            "https://<api-endpoint>/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/dummyrg/workspaces/ThisisaWorkspace/reports/assets:getSnapshot?skip=1&maxpagesize=25&api-version=2023-03-01-preview",
            responseAssets.getNextLink());
        List<AssetResource> responseAssetsValue = responseAssets.getValue();
        AssetResource responseAssetsValueFirstItem = responseAssetsValue.iterator().next();
        Assertions.assertNotNull(responseAssetsValueFirstItem);
        Assertions.assertEquals("host", responseAssetsValueFirstItem.getKind());
        Assertions.assertEquals("host$$contoso.com", responseAssetsValueFirstItem.getId());
        Assertions.assertEquals("contoso.com", responseAssetsValueFirstItem.getName());
        Assertions.assertEquals("contoso.com", responseAssetsValueFirstItem.getDisplayName());
        Assertions.assertEquals("00000000-0000-0000-0000-000000000000", responseAssetsValueFirstItem.getUuid());
        Assertions.assertNotNull(responseAssetsValueFirstItem.getCreatedDate());
        Assertions.assertNotNull(responseAssetsValueFirstItem.getUpdatedDate());
        Assertions.assertEquals(false, responseAssetsValueFirstItem.isWildcard());
        List<AuditTrailItem> responseAssetsValueFirstItemAuditTrail = responseAssetsValueFirstItem.getAuditTrail();
        AuditTrailItem responseAssetsValueFirstItemAuditTrailFirstItem
            = responseAssetsValueFirstItemAuditTrail.iterator().next();
        Assertions.assertNotNull(responseAssetsValueFirstItemAuditTrailFirstItem);
        Assertions.assertEquals("contoso.com", responseAssetsValueFirstItemAuditTrailFirstItem.getName());
        Assertions.assertEquals(AuditTrailItemKind.DOMAIN, responseAssetsValueFirstItemAuditTrailFirstItem.getKind());
    }
}
