// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.analytics.defender.easm;

// The Java test files under 'generated' package are generated for your reference.
// If you wish to modify these files, please copy them out of the 'generated' package, and modify there.
// See https://aka.ms/azsdk/dpg/java/tests for guide on adding a test.

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.policy.HttpLogDetailLevel;
import com.azure.core.http.policy.HttpLogOptions;
import com.azure.core.test.TestMode;
import com.azure.core.test.TestProxyTestBase;
import com.azure.core.test.models.TestProxySanitizer;
import com.azure.core.test.models.TestProxySanitizerType;
import com.azure.core.util.Configuration;
import com.azure.identity.DefaultAzureCredentialBuilder;

import java.time.Duration;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

import reactor.core.publisher.Mono;

public class EasmClientTestBase extends TestProxyTestBase {
    private final String sanitizedRequestUri =  "https://REDACTED/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/REDACTED/workspaces/REDACTED/";
    private final String requestUriRegex = "https://.*/subscriptions/.*/resourceGroups/.*/workspaces/.*?/";
    protected final String uuidRegex = "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}";
    private final String sanitizedUuid = "00000000-0000-0000-0000-000000000000";
    protected EasmClient easmClient;
    protected EasmAsyncClient easmAsyncClient;
    protected static final Duration DEFAULT_TIMEOUT = Duration.ofSeconds(60);

    @Override
    protected void beforeTest() {
        List<TestProxySanitizer> customSanitizers = new ArrayList<>();
        EasmClientBuilder easmClientbuilder =
                new EasmClientBuilder()
                        .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "https://REDACTED/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/REDACTED/workspaces/REDACTED"))
                        .httpClient(HttpClient.createDefault())
                        .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            easmClientbuilder
                    .httpClient(interceptorManager.getPlaybackClient())
                    .credential(request -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)));
        } else if (getTestMode() == TestMode.RECORD) {
            easmClientbuilder
                    .addPolicy(interceptorManager.getRecordPolicy())
                    .credential(new DefaultAzureCredentialBuilder().build());
        } else if (getTestMode() == TestMode.LIVE) {
            easmClientbuilder.credential(new DefaultAzureCredentialBuilder().build());
        }
        customSanitizers.add(new TestProxySanitizer(requestUriRegex, sanitizedRequestUri, TestProxySanitizerType.URL));
        customSanitizers.add(new TestProxySanitizer("$..uuid", uuidRegex, sanitizedUuid, TestProxySanitizerType.BODY_KEY));
        if (getTestMode() != TestMode.LIVE) {
            interceptorManager.addSanitizers(customSanitizers);
            interceptorManager.removeSanitizers("AZSDK3430", "AZSDK3493");
        }
        easmClient = easmClientbuilder.buildClient();
        easmAsyncClient = easmClientbuilder.buildAsyncClient();
    }
}
