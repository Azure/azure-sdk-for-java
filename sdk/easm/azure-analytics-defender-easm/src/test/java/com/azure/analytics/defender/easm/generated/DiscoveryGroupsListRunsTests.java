// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.analytics.defender.easm.generated;

import com.azure.analytics.defender.easm.models.DiscoRunResult;
import com.azure.analytics.defender.easm.models.DiscoRunState;
import com.azure.analytics.defender.easm.models.DiscoSource;
import com.azure.analytics.defender.easm.models.DiscoSourceKind;
import com.azure.core.http.rest.PagedIterable;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class DiscoveryGroupsListRunsTests extends EasmClientTestBase {
    @Test
    @Disabled
    public void testDiscoveryGroupsListRunsTests() {
        // method invocation
        PagedIterable<DiscoRunResult> response = easmClient.listRuns("ThisisaDiscoGroup", null, null);

        // response assertion
        Assertions.assertEquals(200, response.iterableByPage().iterator().next().getStatusCode());
        DiscoRunResult firstItem = response.iterator().next();
        Assertions.assertNotNull(firstItem);
        // verify property "submittedDate"
        Assertions.assertNotNull(firstItem.getSubmittedDate());
        // verify property "startedDate"
        Assertions.assertNotNull(firstItem.getStartedDate());
        // verify property "completedDate"
        Assertions.assertNotNull(firstItem.getCompletedDate());
        // verify property "tier"
        Assertions.assertEquals("advanced", firstItem.getTier());
        // verify property "state"
        Assertions.assertEquals(DiscoRunState.COMPLETED, firstItem.getState());
        // verify property "totalAssetsFoundCount"
        Assertions.assertEquals(33L, firstItem.getTotalAssetsFoundCount());
        // verify property "seeds"
        List<DiscoSource> firstItemSeeds = firstItem.getSeeds();
        DiscoSource firstItemSeedsFirstItem = firstItemSeeds.iterator().next();
        Assertions.assertNotNull(firstItemSeedsFirstItem);
        Assertions.assertEquals(DiscoSourceKind.HOST, firstItemSeedsFirstItem.getKind());
        Assertions.assertEquals("thisisatest.microsoft.com", firstItemSeedsFirstItem.getName());
        // verify property "excludes"
        List<DiscoSource> firstItemExcludes = firstItem.getExcludes();
        Assertions.assertEquals(0, firstItemExcludes.size());
    }
}
