// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.analytics.defender.easm.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The ReportBillableAssetSummaryResult model.
 */
@Immutable
public final class ReportBillableAssetSummaryResult implements JsonSerializable<ReportBillableAssetSummaryResult> {

    /*
     * The assetSummaries property.
     */
    @Generated
    private List<ReportBillableAssetSnapshotResult> assetSummaries;

    /**
     * Creates an instance of ReportBillableAssetSummaryResult class.
     */
    @Generated
    private ReportBillableAssetSummaryResult() {
    }

    /**
     * Get the assetSummaries property: The assetSummaries property.
     *
     * @return the assetSummaries value.
     */
    @Generated
    public List<ReportBillableAssetSnapshotResult> getAssetSummaries() {
        return this.assetSummaries;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("assetSummaries", this.assetSummaries,
            (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ReportBillableAssetSummaryResult from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of ReportBillableAssetSummaryResult if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ReportBillableAssetSummaryResult.
     */
    @Generated
    public static ReportBillableAssetSummaryResult fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ReportBillableAssetSummaryResult deserializedReportBillableAssetSummaryResult
                = new ReportBillableAssetSummaryResult();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("assetSummaries".equals(fieldName)) {
                    List<ReportBillableAssetSnapshotResult> assetSummaries
                        = reader.readArray(reader1 -> ReportBillableAssetSnapshotResult.fromJson(reader1));
                    deserializedReportBillableAssetSummaryResult.assetSummaries = assetSummaries;
                } else {
                    reader.skipChildren();
                }
            }
            return deserializedReportBillableAssetSummaryResult;
        });
    }
}
