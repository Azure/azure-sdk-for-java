// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.analytics.defender.easm.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The ReportAssetSummaryResult model.
 */
@Immutable
public final class ReportAssetSummaryResult implements JsonSerializable<ReportAssetSummaryResult> {

    /*
     * The collection of asset summaries.
     */
    @Generated
    private List<AssetSummaryResult> assetSummaries;

    /**
     * Creates an instance of ReportAssetSummaryResult class.
     */
    @Generated
    private ReportAssetSummaryResult() {
    }

    /**
     * Get the assetSummaries property: The collection of asset summaries.
     *
     * @return the assetSummaries value.
     */
    @Generated
    public List<AssetSummaryResult> getAssetSummaries() {
        return this.assetSummaries;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("assetSummaries", this.assetSummaries,
            (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ReportAssetSummaryResult from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of ReportAssetSummaryResult if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ReportAssetSummaryResult.
     */
    @Generated
    public static ReportAssetSummaryResult fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ReportAssetSummaryResult deserializedReportAssetSummaryResult = new ReportAssetSummaryResult();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("assetSummaries".equals(fieldName)) {
                    List<AssetSummaryResult> assetSummaries
                        = reader.readArray(reader1 -> AssetSummaryResult.fromJson(reader1));
                    deserializedReportAssetSummaryResult.assetSummaries = assetSummaries;
                } else {
                    reader.skipChildren();
                }
            }
            return deserializedReportAssetSummaryResult;
        });
    }
}
