// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.analytics.defender.easm.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * A request body used to retrieve summary asset information. One and only one collection of summary identifiers must
 * be provided: filters, metrics, or metricCategories.
 */
@Fluent
public final class ReportAssetSummaryRequest {

    /*
     * Categories to retrieve risk reporting data for.
     */
    @Generated
    @JsonProperty(value = "metricCategories")
    private List<String> metricCategories;

    /*
     * Metrics to retrieve risk reporting data for.
     */
    @Generated
    @JsonProperty(value = "metrics")
    private List<String> metrics;

    /*
     * Query filters to apply to the asset summary.
     */
    @Generated
    @JsonProperty(value = "filters")
    private List<String> filters;

    /*
     * A parameter to group the assets by (first level facet field), only used when the chosen summary identifier is
     * filters.
     */
    @Generated
    @JsonProperty(value = "groupBy")
    private String groupBy;

    /*
     * A parameter to segment the assets by (second level facet field), only used when the chosen summary identifier is
     * filters.
     */
    @Generated
    @JsonProperty(value = "segmentBy")
    private String segmentBy;

    /*
     * Currently unused.
     */
    @Generated
    @JsonProperty(value = "labelName")
    private String labelName;

    /**
     * Creates an instance of ReportAssetSummaryRequest class.
     */
    @Generated
    public ReportAssetSummaryRequest() {
    }

    /**
     * Get the metricCategories property: Categories to retrieve risk reporting data for.
     *
     * @return the metricCategories value.
     */
    @Generated
    public List<String> getMetricCategories() {
        return this.metricCategories;
    }

    /**
     * Set the metricCategories property: Categories to retrieve risk reporting data for.
     *
     * @param metricCategories the metricCategories value to set.
     * @return the ReportAssetSummaryRequest object itself.
     */
    @Generated
    public ReportAssetSummaryRequest setMetricCategories(List<String> metricCategories) {
        this.metricCategories = metricCategories;
        return this;
    }

    /**
     * Get the metrics property: Metrics to retrieve risk reporting data for.
     *
     * @return the metrics value.
     */
    @Generated
    public List<String> getMetrics() {
        return this.metrics;
    }

    /**
     * Set the metrics property: Metrics to retrieve risk reporting data for.
     *
     * @param metrics the metrics value to set.
     * @return the ReportAssetSummaryRequest object itself.
     */
    @Generated
    public ReportAssetSummaryRequest setMetrics(List<String> metrics) {
        this.metrics = metrics;
        return this;
    }

    /**
     * Get the filters property: Query filters to apply to the asset summary.
     *
     * @return the filters value.
     */
    @Generated
    public List<String> getFilters() {
        return this.filters;
    }

    /**
     * Set the filters property: Query filters to apply to the asset summary.
     *
     * @param filters the filters value to set.
     * @return the ReportAssetSummaryRequest object itself.
     */
    @Generated
    public ReportAssetSummaryRequest setFilters(List<String> filters) {
        this.filters = filters;
        return this;
    }

    /**
     * Get the groupBy property: A parameter to group the assets by (first level facet field), only used when the
     * chosen summary identifier is filters.
     *
     * @return the groupBy value.
     */
    @Generated
    public String getGroupBy() {
        return this.groupBy;
    }

    /**
     * Set the groupBy property: A parameter to group the assets by (first level facet field), only used when the
     * chosen summary identifier is filters.
     *
     * @param groupBy the groupBy value to set.
     * @return the ReportAssetSummaryRequest object itself.
     */
    @Generated
    public ReportAssetSummaryRequest setGroupBy(String groupBy) {
        this.groupBy = groupBy;
        return this;
    }

    /**
     * Get the segmentBy property: A parameter to segment the assets by (second level facet field), only used when the
     * chosen summary identifier is filters.
     *
     * @return the segmentBy value.
     */
    @Generated
    public String getSegmentBy() {
        return this.segmentBy;
    }

    /**
     * Set the segmentBy property: A parameter to segment the assets by (second level facet field), only used when the
     * chosen summary identifier is filters.
     *
     * @param segmentBy the segmentBy value to set.
     * @return the ReportAssetSummaryRequest object itself.
     */
    @Generated
    public ReportAssetSummaryRequest setSegmentBy(String segmentBy) {
        this.segmentBy = segmentBy;
        return this;
    }

    /**
     * Get the labelName property: Currently unused.
     *
     * @return the labelName value.
     */
    @Generated
    public String getLabelName() {
        return this.labelName;
    }

    /**
     * Set the labelName property: Currently unused.
     *
     * @param labelName the labelName value to set.
     * @return the ReportAssetSummaryRequest object itself.
     */
    @Generated
    public ReportAssetSummaryRequest setLabelName(String labelName) {
        this.labelName = labelName;
        return this;
    }
}
