// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.analytics.defender.easm.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * A list of asset chain summaries per asset kind.
 */
@Immutable
public final class AssetChainKindSummaryResult implements JsonSerializable<AssetChainKindSummaryResult> {
    /*
     * The kind of asset
     */
    @Generated
    private final AssetKind kind;

    /*
     * The amount of assets affected for a given asset kind
     */
    @Generated
    private final long affectedCount;

    /**
     * Creates an instance of AssetChainKindSummaryResult class.
     * 
     * @param kind the kind value to set.
     * @param affectedCount the affectedCount value to set.
     */
    @Generated
    private AssetChainKindSummaryResult(AssetKind kind, long affectedCount) {
        this.kind = kind;
        this.affectedCount = affectedCount;
    }

    /**
     * Get the kind property: The kind of asset.
     * 
     * @return the kind value.
     */
    @Generated
    public AssetKind getKind() {
        return this.kind;
    }

    /**
     * Get the affectedCount property: The amount of assets affected for a given asset kind.
     * 
     * @return the affectedCount value.
     */
    @Generated
    public long getAffectedCount() {
        return this.affectedCount;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("kind", this.kind == null ? null : this.kind.toString());
        jsonWriter.writeLongField("affectedCount", this.affectedCount);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AssetChainKindSummaryResult from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AssetChainKindSummaryResult if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AssetChainKindSummaryResult.
     */
    @Generated
    public static AssetChainKindSummaryResult fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AssetKind kind = null;
            long affectedCount = 0L;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("kind".equals(fieldName)) {
                    kind = AssetKind.fromString(reader.getString());
                } else if ("affectedCount".equals(fieldName)) {
                    affectedCount = reader.getLong();
                } else {
                    reader.skipChildren();
                }
            }
            return new AssetChainKindSummaryResult(kind, affectedCount);
        });
    }
}
