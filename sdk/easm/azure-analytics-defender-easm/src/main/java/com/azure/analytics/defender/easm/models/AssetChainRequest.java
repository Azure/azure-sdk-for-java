// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.analytics.defender.easm.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * AssetChainRequest containing information needed for the retrieval of the asset chain summary.
 */
@Immutable
public final class AssetChainRequest implements JsonSerializable<AssetChainRequest> {
    /*
     * Asset chain source.
     */
    @Generated
    private final AssetChainSource assetChainSource;

    /*
     * A collection of asset chain source ids.
     */
    @Generated
    private final List<String> sourceIds;

    /**
     * Creates an instance of AssetChainRequest class.
     * 
     * @param assetChainSource the assetChainSource value to set.
     * @param sourceIds the sourceIds value to set.
     */
    @Generated
    public AssetChainRequest(AssetChainSource assetChainSource, List<String> sourceIds) {
        this.assetChainSource = assetChainSource;
        this.sourceIds = sourceIds;
    }

    /**
     * Get the assetChainSource property: Asset chain source.
     * 
     * @return the assetChainSource value.
     */
    @Generated
    public AssetChainSource getAssetChainSource() {
        return this.assetChainSource;
    }

    /**
     * Get the sourceIds property: A collection of asset chain source ids.
     * 
     * @return the sourceIds value.
     */
    @Generated
    public List<String> getSourceIds() {
        return this.sourceIds;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("assetChainSource",
            this.assetChainSource == null ? null : this.assetChainSource.toString());
        jsonWriter.writeArrayField("sourceIds", this.sourceIds, (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AssetChainRequest from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AssetChainRequest if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AssetChainRequest.
     */
    @Generated
    public static AssetChainRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AssetChainSource assetChainSource = null;
            List<String> sourceIds = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("assetChainSource".equals(fieldName)) {
                    assetChainSource = AssetChainSource.fromString(reader.getString());
                } else if ("sourceIds".equals(fieldName)) {
                    sourceIds = reader.readArray(reader1 -> reader1.getString());
                } else {
                    reader.skipChildren();
                }
            }
            return new AssetChainRequest(assetChainSource, sourceIds);
        });
    }
}
