// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.analytics.defender.easm.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import java.util.List;

/**
 * Options for createOrReplaceDiscoGroup API.
 */
@Fluent
public final class CreateOrReplaceDiscoGroupOptions {

    /*
     * The caller provided unique name for the resource.
     */
    @Generated
    private final String groupName;

    /*
     * The name for a disco group.
     */
    @Generated
    private String name;

    /*
     * The description for a disco group.
     */
    @Generated
    private String description;

    /*
     * The tier for the disco group which will affect the algorithm used for the disco runs in this group.
     */
    @Generated
    private String tier;

    /*
     * The frequency at which the disco group is supposed to be rerun in milliseconds.
     */
    @Generated
    private Long frequencyMilliseconds;

    /*
     * The list of seeds used for the disco group runs.
     */
    @Generated
    private List<DiscoSource> seeds;

    /*
     * The list of names used for the disco group runs.
     */
    @Generated
    private List<String> names;

    /*
     * The list of excludes used for the disco group runs, aka assets to exclude from the discovery algorithm.
     */
    @Generated
    private List<DiscoSource> excludes;

    /*
     * The unique identifier for the disco template used for the disco group creation.
     */
    @Generated
    private String templateId;

    /**
     * Creates an instance of CreateOrReplaceDiscoGroupOptions class.
     *
     * @param groupName the groupName value to set.
     */
    @Generated
    public CreateOrReplaceDiscoGroupOptions(String groupName) {
        this.groupName = groupName;
    }

    /**
     * Get the groupName property: The caller provided unique name for the resource.
     *
     * @return the groupName value.
     */
    @Generated
    public String getGroupName() {
        return this.groupName;
    }

    /**
     * Get the name property: The name for a disco group.
     *
     * @return the name value.
     */
    @Generated
    public String getName() {
        return this.name;
    }

    /**
     * Set the name property: The name for a disco group.
     *
     * @param name the name value to set.
     * @return the CreateOrReplaceDiscoGroupOptions object itself.
     */
    @Generated
    public CreateOrReplaceDiscoGroupOptions setName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the description property: The description for a disco group.
     *
     * @return the description value.
     */
    @Generated
    public String getDescription() {
        return this.description;
    }

    /**
     * Set the description property: The description for a disco group.
     *
     * @param description the description value to set.
     * @return the CreateOrReplaceDiscoGroupOptions object itself.
     */
    @Generated
    public CreateOrReplaceDiscoGroupOptions setDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the tier property: The tier for the disco group which will affect the algorithm used for the disco runs in
     * this group.
     *
     * @return the tier value.
     */
    @Generated
    public String getTier() {
        return this.tier;
    }

    /**
     * Set the tier property: The tier for the disco group which will affect the algorithm used for the disco runs in
     * this group.
     *
     * @param tier the tier value to set.
     * @return the CreateOrReplaceDiscoGroupOptions object itself.
     */
    @Generated
    public CreateOrReplaceDiscoGroupOptions setTier(String tier) {
        this.tier = tier;
        return this;
    }

    /**
     * Get the frequencyMilliseconds property: The frequency at which the disco group is supposed to be rerun in
     * milliseconds.
     *
     * @return the frequencyMilliseconds value.
     */
    @Generated
    public Long getFrequencyMilliseconds() {
        return this.frequencyMilliseconds;
    }

    /**
     * Set the frequencyMilliseconds property: The frequency at which the disco group is supposed to be rerun in
     * milliseconds.
     *
     * @param frequencyMilliseconds the frequencyMilliseconds value to set.
     * @return the CreateOrReplaceDiscoGroupOptions object itself.
     */
    @Generated
    public CreateOrReplaceDiscoGroupOptions setFrequencyMilliseconds(Long frequencyMilliseconds) {
        this.frequencyMilliseconds = frequencyMilliseconds;
        return this;
    }

    /**
     * Get the seeds property: The list of seeds used for the disco group runs.
     *
     * @return the seeds value.
     */
    @Generated
    public List<DiscoSource> getSeeds() {
        return this.seeds;
    }

    /**
     * Set the seeds property: The list of seeds used for the disco group runs.
     *
     * @param seeds the seeds value to set.
     * @return the CreateOrReplaceDiscoGroupOptions object itself.
     */
    @Generated
    public CreateOrReplaceDiscoGroupOptions setSeeds(List<DiscoSource> seeds) {
        this.seeds = seeds;
        return this;
    }

    /**
     * Get the names property: The list of names used for the disco group runs.
     *
     * @return the names value.
     */
    @Generated
    public List<String> getNames() {
        return this.names;
    }

    /**
     * Set the names property: The list of names used for the disco group runs.
     *
     * @param names the names value to set.
     * @return the CreateOrReplaceDiscoGroupOptions object itself.
     */
    @Generated
    public CreateOrReplaceDiscoGroupOptions setNames(List<String> names) {
        this.names = names;
        return this;
    }

    /**
     * Get the excludes property: The list of excludes used for the disco group runs, aka assets to exclude from the
     * discovery algorithm.
     *
     * @return the excludes value.
     */
    @Generated
    public List<DiscoSource> getExcludes() {
        return this.excludes;
    }

    /**
     * Set the excludes property: The list of excludes used for the disco group runs, aka assets to exclude from the
     * discovery algorithm.
     *
     * @param excludes the excludes value to set.
     * @return the CreateOrReplaceDiscoGroupOptions object itself.
     */
    @Generated
    public CreateOrReplaceDiscoGroupOptions setExcludes(List<DiscoSource> excludes) {
        this.excludes = excludes;
        return this;
    }

    /**
     * Get the templateId property: The unique identifier for the disco template used for the disco group creation.
     *
     * @return the templateId value.
     */
    @Generated
    public String getTemplateId() {
        return this.templateId;
    }

    /**
     * Set the templateId property: The unique identifier for the disco template used for the disco group creation.
     *
     * @param templateId the templateId value to set.
     * @return the CreateOrReplaceDiscoGroupOptions object itself.
     */
    @Generated
    public CreateOrReplaceDiscoGroupOptions setTemplateId(String templateId) {
        this.templateId = templateId;
        return this;
    }
}
