// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iotcentral.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iotcentral.fluent.models.PrivateEndpointConnectionInner;
import com.azure.resourcemanager.iotcentral.models.PrivateEndpoint;
import com.azure.resourcemanager.iotcentral.models.PrivateEndpointConnectionListResult;
import com.azure.resourcemanager.iotcentral.models.PrivateEndpointServiceConnectionStatus;
import com.azure.resourcemanager.iotcentral.models.PrivateLinkServiceConnectionState;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PrivateEndpointConnectionListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateEndpointConnectionListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"groupIds\":[\"w\",\"zuvccfwnfnbacfio\",\"l\",\"bxetqgtzxdpn\"],\"privateEndpoint\":{\"id\":\"qwxrjfeallnw\"},\"privateLinkServiceConnectionState\":{\"status\":\"Approved\",\"description\":\"snjampmng\",\"actionsRequired\":\"scxaq\"},\"provisioningState\":\"Failed\"},\"id\":\"hcbonqvpkvlr\",\"name\":\"njeaseipheofloke\",\"type\":\"y\"},{\"properties\":{\"groupIds\":[\"bdlwtgrhpdjpj\",\"masxazjpqyegu\",\"lhbxxhejjzzvdud\",\"wdslfhotwmcy\"],\"privateEndpoint\":{\"id\":\"lbjnpgacftadehx\"},\"privateLinkServiceConnectionState\":{\"status\":\"Pending\",\"description\":\"fsoppusuesnzw\",\"actionsRequired\":\"jbavorxzdm\"},\"provisioningState\":\"Deleting\"},\"id\":\"bqvudwxdndn\",\"name\":\"owgujjugwdkcglhs\",\"type\":\"azjdyggd\"},{\"properties\":{\"groupIds\":[\"hbkuofqwey\",\"hmenevfyexfwhybc\"],\"privateEndpoint\":{\"id\":\"yvdcsitynnaa\"},\"privateLinkServiceConnectionState\":{\"status\":\"Rejected\",\"description\":\"tehfiqscjeypvh\",\"actionsRequired\":\"rkgqhcjrefo\"},\"provisioningState\":\"Deleting\"},\"id\":\"qsl\",\"name\":\"yyvxyqjpkcattpn\",\"type\":\"jcrcczsqpjhvmda\"}]}")
            .toObject(PrivateEndpointConnectionListResult.class);
        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.APPROVED,
            model.value().get(0).privateLinkServiceConnectionState().status());
        Assertions.assertEquals("snjampmng", model.value().get(0).privateLinkServiceConnectionState().description());
        Assertions.assertEquals("scxaq", model.value().get(0).privateLinkServiceConnectionState().actionsRequired());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateEndpointConnectionListResult model
            = new PrivateEndpointConnectionListResult()
                .withValue(Arrays.asList(
                    new PrivateEndpointConnectionInner().withPrivateEndpoint(new PrivateEndpoint())
                        .withPrivateLinkServiceConnectionState(new PrivateLinkServiceConnectionState()
                            .withStatus(PrivateEndpointServiceConnectionStatus.APPROVED)
                            .withDescription("snjampmng")
                            .withActionsRequired("scxaq")),
                    new PrivateEndpointConnectionInner().withPrivateEndpoint(new PrivateEndpoint())
                        .withPrivateLinkServiceConnectionState(new PrivateLinkServiceConnectionState()
                            .withStatus(PrivateEndpointServiceConnectionStatus.PENDING)
                            .withDescription("fsoppusuesnzw")
                            .withActionsRequired("jbavorxzdm")),
                    new PrivateEndpointConnectionInner().withPrivateEndpoint(new PrivateEndpoint())
                        .withPrivateLinkServiceConnectionState(new PrivateLinkServiceConnectionState()
                            .withStatus(PrivateEndpointServiceConnectionStatus.REJECTED)
                            .withDescription("tehfiqscjeypvh")
                            .withActionsRequired("rkgqhcjrefo"))));
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnectionListResult.class);
        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.APPROVED,
            model.value().get(0).privateLinkServiceConnectionState().status());
        Assertions.assertEquals("snjampmng", model.value().get(0).privateLinkServiceConnectionState().description());
        Assertions.assertEquals("scxaq", model.value().get(0).privateLinkServiceConnectionState().actionsRequired());
    }
}
