// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iotcentral.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iotcentral.fluent.models.PrivateEndpointConnectionProperties;
import com.azure.resourcemanager.iotcentral.models.PrivateEndpoint;
import com.azure.resourcemanager.iotcentral.models.PrivateEndpointServiceConnectionStatus;
import com.azure.resourcemanager.iotcentral.models.PrivateLinkServiceConnectionState;
import org.junit.jupiter.api.Assertions;

public final class PrivateEndpointConnectionPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateEndpointConnectionProperties model = BinaryData.fromString(
            "{\"groupIds\":[\"ebvmgxsabkyqd\",\"ujitcjcz\",\"zevndhkrwpdappds\"],\"privateEndpoint\":{\"id\":\"vwrwj\"},\"privateLinkServiceConnectionState\":{\"status\":\"Pending\",\"description\":\"nhutjeltmrldhugj\",\"actionsRequired\":\"datqxhocdgeabl\"},\"provisioningState\":\"Deleting\"}")
            .toObject(PrivateEndpointConnectionProperties.class);
        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.PENDING,
            model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("nhutjeltmrldhugj", model.privateLinkServiceConnectionState().description());
        Assertions.assertEquals("datqxhocdgeabl", model.privateLinkServiceConnectionState().actionsRequired());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateEndpointConnectionProperties model
            = new PrivateEndpointConnectionProperties().withPrivateEndpoint(new PrivateEndpoint())
                .withPrivateLinkServiceConnectionState(
                    new PrivateLinkServiceConnectionState().withStatus(PrivateEndpointServiceConnectionStatus.PENDING)
                        .withDescription("nhutjeltmrldhugj")
                        .withActionsRequired("datqxhocdgeabl"));
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnectionProperties.class);
        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.PENDING,
            model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("nhutjeltmrldhugj", model.privateLinkServiceConnectionState().description());
        Assertions.assertEquals("datqxhocdgeabl", model.privateLinkServiceConnectionState().actionsRequired());
    }
}
