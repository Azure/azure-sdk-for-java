// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iotcentral.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iotcentral.models.NetworkAction;
import com.azure.resourcemanager.iotcentral.models.NetworkRuleSetIpRule;
import com.azure.resourcemanager.iotcentral.models.NetworkRuleSets;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NetworkRuleSetsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkRuleSets model = BinaryData.fromString(
            "{\"applyToDevices\":true,\"applyToIoTCentral\":false,\"defaultAction\":\"Deny\",\"ipRules\":[{\"action\":\"Allow\",\"filterName\":\"ofpdvh\",\"ipMask\":\"xxypininmay\"},{\"action\":\"Allow\",\"filterName\":\"bkpodepooginuv\",\"ipMask\":\"iheogna\"},{\"action\":\"Allow\",\"filterName\":\"theotusiv\",\"ipMask\":\"v\"}]}")
            .toObject(NetworkRuleSets.class);
        Assertions.assertEquals(true, model.applyToDevices());
        Assertions.assertEquals(false, model.applyToIoTCentral());
        Assertions.assertEquals(NetworkAction.DENY, model.defaultAction());
        Assertions.assertEquals("ofpdvh", model.ipRules().get(0).filterName());
        Assertions.assertEquals("xxypininmay", model.ipRules().get(0).ipMask());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkRuleSets model = new NetworkRuleSets().withApplyToDevices(true)
            .withApplyToIoTCentral(false)
            .withDefaultAction(NetworkAction.DENY)
            .withIpRules(Arrays.asList(new NetworkRuleSetIpRule().withFilterName("ofpdvh").withIpMask("xxypininmay"),
                new NetworkRuleSetIpRule().withFilterName("bkpodepooginuv").withIpMask("iheogna"),
                new NetworkRuleSetIpRule().withFilterName("theotusiv").withIpMask("v")));
        model = BinaryData.fromObject(model).toObject(NetworkRuleSets.class);
        Assertions.assertEquals(true, model.applyToDevices());
        Assertions.assertEquals(false, model.applyToIoTCentral());
        Assertions.assertEquals(NetworkAction.DENY, model.defaultAction());
        Assertions.assertEquals("ofpdvh", model.ipRules().get(0).filterName());
        Assertions.assertEquals("xxypininmay", model.ipRules().get(0).ipMask());
    }
}
