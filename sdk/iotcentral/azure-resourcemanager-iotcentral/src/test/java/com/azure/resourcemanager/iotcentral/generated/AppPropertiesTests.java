// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iotcentral.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iotcentral.fluent.models.AppProperties;
import com.azure.resourcemanager.iotcentral.models.NetworkAction;
import com.azure.resourcemanager.iotcentral.models.NetworkRuleSetIpRule;
import com.azure.resourcemanager.iotcentral.models.NetworkRuleSets;
import com.azure.resourcemanager.iotcentral.models.PublicNetworkAccess;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AppPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AppProperties model = BinaryData.fromString(
            "{\"provisioningState\":\"Deleting\",\"applicationId\":\"y\",\"displayName\":\"iwbybrkxvdumjg\",\"subdomain\":\"fwvuk\",\"template\":\"audccsnhs\",\"state\":\"suspended\",\"publicNetworkAccess\":\"Enabled\",\"networkRuleSets\":{\"applyToDevices\":true,\"applyToIoTCentral\":true,\"defaultAction\":\"Deny\",\"ipRules\":[{\"action\":\"Allow\",\"filterName\":\"wlokjyem\",\"ipMask\":\"vnipjox\"}]},\"privateEndpointConnections\":[{\"properties\":{\"groupIds\":[\"ejspodmail\",\"ydehoj\",\"yahux\",\"npmqnjaqwixjspro\"],\"privateEndpoint\":{\"id\":\"putegjvwmfd\"},\"privateLinkServiceConnectionState\":{\"status\":\"Pending\",\"description\":\"mdvpjhulsu\",\"actionsRequired\":\"mkjozkrwf\"},\"provisioningState\":\"Creating\"},\"id\":\"djpslw\",\"name\":\"jdpvwryo\",\"type\":\"psoacctazakljl\"},{\"properties\":{\"groupIds\":[\"ryffdfdosy\"],\"privateEndpoint\":{\"id\":\"paojakhmsbzjh\"},\"privateLinkServiceConnectionState\":{\"status\":\"Pending\",\"description\":\"vdphlxaolthqtr\",\"actionsRequired\":\"jbp\"},\"provisioningState\":\"Failed\"},\"id\":\"inzgvfcj\",\"name\":\"wzo\",\"type\":\"xjtfelluwfzit\"}]}")
            .toObject(AppProperties.class);
        Assertions.assertEquals("iwbybrkxvdumjg", model.displayName());
        Assertions.assertEquals("fwvuk", model.subdomain());
        Assertions.assertEquals("audccsnhs", model.template());
        Assertions.assertEquals(PublicNetworkAccess.ENABLED, model.publicNetworkAccess());
        Assertions.assertEquals(true, model.networkRuleSets().applyToDevices());
        Assertions.assertEquals(true, model.networkRuleSets().applyToIoTCentral());
        Assertions.assertEquals(NetworkAction.DENY, model.networkRuleSets().defaultAction());
        Assertions.assertEquals("wlokjyem", model.networkRuleSets().ipRules().get(0).filterName());
        Assertions.assertEquals("vnipjox", model.networkRuleSets().ipRules().get(0).ipMask());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AppProperties model = new AppProperties().withDisplayName("iwbybrkxvdumjg")
            .withSubdomain("fwvuk")
            .withTemplate("audccsnhs")
            .withPublicNetworkAccess(PublicNetworkAccess.ENABLED)
            .withNetworkRuleSets(new NetworkRuleSets().withApplyToDevices(true)
                .withApplyToIoTCentral(true)
                .withDefaultAction(NetworkAction.DENY)
                .withIpRules(
                    Arrays.asList(new NetworkRuleSetIpRule().withFilterName("wlokjyem").withIpMask("vnipjox"))));
        model = BinaryData.fromObject(model).toObject(AppProperties.class);
        Assertions.assertEquals("iwbybrkxvdumjg", model.displayName());
        Assertions.assertEquals("fwvuk", model.subdomain());
        Assertions.assertEquals("audccsnhs", model.template());
        Assertions.assertEquals(PublicNetworkAccess.ENABLED, model.publicNetworkAccess());
        Assertions.assertEquals(true, model.networkRuleSets().applyToDevices());
        Assertions.assertEquals(true, model.networkRuleSets().applyToIoTCentral());
        Assertions.assertEquals(NetworkAction.DENY, model.networkRuleSets().defaultAction());
        Assertions.assertEquals("wlokjyem", model.networkRuleSets().ipRules().get(0).filterName());
        Assertions.assertEquals("vnipjox", model.networkRuleSets().ipRules().get(0).ipMask());
    }
}
