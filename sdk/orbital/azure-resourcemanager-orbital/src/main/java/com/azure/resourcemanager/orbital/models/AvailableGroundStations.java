// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.orbital.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.util.Context;

/** Resource collection API of AvailableGroundStations. */
public interface AvailableGroundStations {
    /**
     * Returns list of available ground stations.
     *
     * @param capability Ground Station Capability.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response for the AvailableGroundStations API service call as paginated response with {@link
     *     PagedIterable}.
     */
    PagedIterable<AvailableGroundStation> list(CapabilityParameter capability);

    /**
     * Returns list of available ground stations.
     *
     * @param capability Ground Station Capability.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response for the AvailableGroundStations API service call as paginated response with {@link
     *     PagedIterable}.
     */
    PagedIterable<AvailableGroundStation> list(CapabilityParameter capability, Context context);
}
