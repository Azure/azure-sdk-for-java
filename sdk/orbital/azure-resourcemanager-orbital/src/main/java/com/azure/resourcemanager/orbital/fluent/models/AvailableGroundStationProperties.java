// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.orbital.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.orbital.models.AvailableGroundStationPropertiesAutoGenerated;
import com.azure.resourcemanager.orbital.models.ReleaseMode;

/** The properties bag for this resource. */
@Fluent
public final class AvailableGroundStationProperties extends AvailableGroundStationPropertiesAutoGenerated {
    /** Creates an instance of AvailableGroundStationProperties class. */
    public AvailableGroundStationProperties() {
    }

    /** {@inheritDoc} */
    @Override
    public AvailableGroundStationProperties withCity(String city) {
        super.withCity(city);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AvailableGroundStationProperties withProviderName(String providerName) {
        super.withProviderName(providerName);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AvailableGroundStationProperties withLongitudeDegrees(Float longitudeDegrees) {
        super.withLongitudeDegrees(longitudeDegrees);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AvailableGroundStationProperties withLatitudeDegrees(Float latitudeDegrees) {
        super.withLatitudeDegrees(latitudeDegrees);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AvailableGroundStationProperties withAltitudeMeters(Float altitudeMeters) {
        super.withAltitudeMeters(altitudeMeters);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AvailableGroundStationProperties withReleaseMode(ReleaseMode releaseMode) {
        super.withReleaseMode(releaseMode);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
