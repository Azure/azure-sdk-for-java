// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.orbital.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.orbital.fluent.models.ContactProfileInner;
import com.azure.resourcemanager.orbital.models.TagsObject;

/** An instance of this class provides access to all the operations defined in ContactProfilesClient. */
public interface ContactProfilesClient {
    /**
     * Gets the specified contact Profile in a specified resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contactProfileName Contact Profile Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified contact Profile in a specified resource group.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ContactProfileInner getByResourceGroup(String resourceGroupName, String contactProfileName);

    /**
     * Gets the specified contact Profile in a specified resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contactProfileName Contact Profile Name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified contact Profile in a specified resource group.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ContactProfileInner> getByResourceGroupWithResponse(
        String resourceGroupName, String contactProfileName, Context context);

    /**
     * Creates or updates a contact profile.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contactProfileName Contact Profile Name.
     * @param parameters The parameters to provide for the created Contact Profile.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return customer creates a Contact Profile Resource, which will contain all of the configurations required for
     *     scheduling a contact.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ContactProfileInner>, ContactProfileInner> beginCreateOrUpdate(
        String resourceGroupName, String contactProfileName, ContactProfileInner parameters);

    /**
     * Creates or updates a contact profile.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contactProfileName Contact Profile Name.
     * @param parameters The parameters to provide for the created Contact Profile.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return customer creates a Contact Profile Resource, which will contain all of the configurations required for
     *     scheduling a contact.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ContactProfileInner>, ContactProfileInner> beginCreateOrUpdate(
        String resourceGroupName, String contactProfileName, ContactProfileInner parameters, Context context);

    /**
     * Creates or updates a contact profile.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contactProfileName Contact Profile Name.
     * @param parameters The parameters to provide for the created Contact Profile.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return customer creates a Contact Profile Resource, which will contain all of the configurations required for
     *     scheduling a contact.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ContactProfileInner createOrUpdate(
        String resourceGroupName, String contactProfileName, ContactProfileInner parameters);

    /**
     * Creates or updates a contact profile.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contactProfileName Contact Profile Name.
     * @param parameters The parameters to provide for the created Contact Profile.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return customer creates a Contact Profile Resource, which will contain all of the configurations required for
     *     scheduling a contact.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ContactProfileInner createOrUpdate(
        String resourceGroupName, String contactProfileName, ContactProfileInner parameters, Context context);

    /**
     * Deletes a specified contact profile resource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contactProfileName Contact Profile Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String contactProfileName);

    /**
     * Deletes a specified contact profile resource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contactProfileName Contact Profile Name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(
        String resourceGroupName, String contactProfileName, Context context);

    /**
     * Deletes a specified contact profile resource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contactProfileName Contact Profile Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String contactProfileName);

    /**
     * Deletes a specified contact profile resource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contactProfileName Contact Profile Name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String contactProfileName, Context context);

    /**
     * Updates the specified contact profile tags.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contactProfileName Contact Profile Name.
     * @param parameters Parameters supplied to update contact profile tags.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return customer creates a Contact Profile Resource, which will contain all of the configurations required for
     *     scheduling a contact.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ContactProfileInner updateTags(String resourceGroupName, String contactProfileName, TagsObject parameters);

    /**
     * Updates the specified contact profile tags.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contactProfileName Contact Profile Name.
     * @param parameters Parameters supplied to update contact profile tags.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return customer creates a Contact Profile Resource, which will contain all of the configurations required for
     *     scheduling a contact.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ContactProfileInner> updateTagsWithResponse(
        String resourceGroupName, String contactProfileName, TagsObject parameters, Context context);

    /**
     * Returns list of contact profiles.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response for the ListContactProfiles API service call.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ContactProfileInner> list();

    /**
     * Returns list of contact profiles.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response for the ListContactProfiles API service call.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ContactProfileInner> list(Context context);

    /**
     * Returns list of contact profiles.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response for the ListContactProfiles API service call.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ContactProfileInner> listByResourceGroup(String resourceGroupName);

    /**
     * Returns list of contact profiles.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response for the ListContactProfiles API service call.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ContactProfileInner> listByResourceGroup(String resourceGroupName, Context context);
}
