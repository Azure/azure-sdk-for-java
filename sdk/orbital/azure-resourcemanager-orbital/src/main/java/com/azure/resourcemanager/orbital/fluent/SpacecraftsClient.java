// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.orbital.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.orbital.fluent.models.AvailableContactsListResultInner;
import com.azure.resourcemanager.orbital.fluent.models.SpacecraftInner;
import com.azure.resourcemanager.orbital.models.ContactParameters;
import com.azure.resourcemanager.orbital.models.TagsObject;

/** An instance of this class provides access to all the operations defined in SpacecraftsClient. */
public interface SpacecraftsClient {
    /**
     * Return list of spacecrafts.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response for the ListSpacecrafts API service call.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SpacecraftInner> list();

    /**
     * Return list of spacecrafts.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response for the ListSpacecrafts API service call.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SpacecraftInner> list(Context context);

    /**
     * Return list of spacecrafts.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response for the ListSpacecrafts API service call.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SpacecraftInner> listByResourceGroup(String resourceGroupName);

    /**
     * Return list of spacecrafts.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response for the ListSpacecrafts API service call.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SpacecraftInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Gets the specified spacecraft in a specified resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param spacecraftName Spacecraft ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified spacecraft in a specified resource group.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SpacecraftInner getByResourceGroup(String resourceGroupName, String spacecraftName);

    /**
     * Gets the specified spacecraft in a specified resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param spacecraftName Spacecraft ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified spacecraft in a specified resource group.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<SpacecraftInner> getByResourceGroupWithResponse(
        String resourceGroupName, String spacecraftName, Context context);

    /**
     * Creates or updates a spacecraft resource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param spacecraftName Spacecraft ID.
     * @param parameters The parameters to provide for the created spacecraft.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return customer creates a spacecraft resource to schedule a contact.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<SpacecraftInner>, SpacecraftInner> beginCreateOrUpdate(
        String resourceGroupName, String spacecraftName, SpacecraftInner parameters);

    /**
     * Creates or updates a spacecraft resource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param spacecraftName Spacecraft ID.
     * @param parameters The parameters to provide for the created spacecraft.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return customer creates a spacecraft resource to schedule a contact.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<SpacecraftInner>, SpacecraftInner> beginCreateOrUpdate(
        String resourceGroupName, String spacecraftName, SpacecraftInner parameters, Context context);

    /**
     * Creates or updates a spacecraft resource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param spacecraftName Spacecraft ID.
     * @param parameters The parameters to provide for the created spacecraft.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return customer creates a spacecraft resource to schedule a contact.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SpacecraftInner createOrUpdate(String resourceGroupName, String spacecraftName, SpacecraftInner parameters);

    /**
     * Creates or updates a spacecraft resource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param spacecraftName Spacecraft ID.
     * @param parameters The parameters to provide for the created spacecraft.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return customer creates a spacecraft resource to schedule a contact.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SpacecraftInner createOrUpdate(
        String resourceGroupName, String spacecraftName, SpacecraftInner parameters, Context context);

    /**
     * Deletes a specified spacecraft resource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param spacecraftName Spacecraft ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String spacecraftName);

    /**
     * Deletes a specified spacecraft resource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param spacecraftName Spacecraft ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String spacecraftName, Context context);

    /**
     * Deletes a specified spacecraft resource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param spacecraftName Spacecraft ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String spacecraftName);

    /**
     * Deletes a specified spacecraft resource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param spacecraftName Spacecraft ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String spacecraftName, Context context);

    /**
     * Updates the specified spacecraft tags.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param spacecraftName Spacecraft ID.
     * @param parameters Parameters supplied to update spacecraft tags.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return customer creates a spacecraft resource to schedule a contact.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SpacecraftInner updateTags(String resourceGroupName, String spacecraftName, TagsObject parameters);

    /**
     * Updates the specified spacecraft tags.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param spacecraftName Spacecraft ID.
     * @param parameters Parameters supplied to update spacecraft tags.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return customer creates a spacecraft resource to schedule a contact.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<SpacecraftInner> updateTagsWithResponse(
        String resourceGroupName, String spacecraftName, TagsObject parameters, Context context);

    /**
     * Return list of available contacts.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param spacecraftName Spacecraft ID.
     * @param parameters The parameters to provide for the contacts.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response for the ListAvailableContacts API service call.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AvailableContactsListResultInner>, AvailableContactsListResultInner>
        beginListAvailableContacts(String resourceGroupName, String spacecraftName, ContactParameters parameters);

    /**
     * Return list of available contacts.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param spacecraftName Spacecraft ID.
     * @param parameters The parameters to provide for the contacts.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response for the ListAvailableContacts API service call.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AvailableContactsListResultInner>, AvailableContactsListResultInner>
        beginListAvailableContacts(
            String resourceGroupName, String spacecraftName, ContactParameters parameters, Context context);

    /**
     * Return list of available contacts.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param spacecraftName Spacecraft ID.
     * @param parameters The parameters to provide for the contacts.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response for the ListAvailableContacts API service call.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AvailableContactsListResultInner listAvailableContacts(
        String resourceGroupName, String spacecraftName, ContactParameters parameters);

    /**
     * Return list of available contacts.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param spacecraftName Spacecraft ID.
     * @param parameters The parameters to provide for the contacts.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response for the ListAvailableContacts API service call.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AvailableContactsListResultInner listAvailableContacts(
        String resourceGroupName, String spacecraftName, ContactParameters parameters, Context context);
}
