// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.orbital.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.orbital.fluent.models.ContactsProperties;
import com.azure.resourcemanager.orbital.models.ContactsPropertiesContactProfile;
import com.azure.resourcemanager.orbital.models.ContactsPropertiesProvisioningState;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class ContactsPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ContactsProperties model = BinaryData.fromString(
            "{\"provisioningState\":\"failed\",\"status\":\"scheduled\",\"reservationStartTime\":\"2021-07-03T00:59:28Z\",\"reservationEndTime\":\"2020-12-29T19:26:23Z\",\"rxStartTime\":\"2021-07-17T14:29:41Z\",\"rxEndTime\":\"2021-10-23T18:32:55Z\",\"txStartTime\":\"2021-04-11T05:58:57Z\",\"txEndTime\":\"2021-09-17T16:41:16Z\",\"errorMessage\":\"ol\",\"maximumElevationDegrees\":53.948807,\"startAzimuthDegrees\":1.6021609,\"endAzimuthDegrees\":49.08141,\"groundStationName\":\"gbquxigj\",\"startElevationDegrees\":90.50798,\"endElevationDegrees\":53.750427,\"antennaConfiguration\":{\"destinationIp\":\"yfhrtxilnerkujy\",\"sourceIps\":[\"eju\"]},\"contactProfile\":{\"id\":\"fqawrlyxw\"}}")
            .toObject(ContactsProperties.class);
        Assertions.assertEquals(ContactsPropertiesProvisioningState.FAILED, model.provisioningState());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-03T00:59:28Z"), model.reservationStartTime());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-29T19:26:23Z"), model.reservationEndTime());
        Assertions.assertEquals("gbquxigj", model.groundStationName());
        Assertions.assertEquals("fqawrlyxw", model.contactProfile().id());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ContactsProperties model
            = new ContactsProperties().withProvisioningState(ContactsPropertiesProvisioningState.FAILED)
                .withReservationStartTime(OffsetDateTime.parse("2021-07-03T00:59:28Z"))
                .withReservationEndTime(OffsetDateTime.parse("2020-12-29T19:26:23Z"))
                .withGroundStationName("gbquxigj")
                .withContactProfile(new ContactsPropertiesContactProfile().withId("fqawrlyxw"));
        model = BinaryData.fromObject(model).toObject(ContactsProperties.class);
        Assertions.assertEquals(ContactsPropertiesProvisioningState.FAILED, model.provisioningState());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-03T00:59:28Z"), model.reservationStartTime());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-29T19:26:23Z"), model.reservationEndTime());
        Assertions.assertEquals("gbquxigj", model.groundStationName());
        Assertions.assertEquals("fqawrlyxw", model.contactProfile().id());
    }
}
