// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.orbital.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.orbital.fluent.models.AvailableGroundStationProperties;
import com.azure.resourcemanager.orbital.models.ReleaseMode;
import org.junit.jupiter.api.Assertions;

public final class AvailableGroundStationPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AvailableGroundStationProperties model = BinaryData.fromString(
            "{\"city\":\"aldsy\",\"providerName\":\"ximerqfobwyznk\",\"longitudeDegrees\":32.21692,\"latitudeDegrees\":4.411727,\"altitudeMeters\":98.1842,\"releaseMode\":\"Preview\"}")
            .toObject(AvailableGroundStationProperties.class);
        Assertions.assertEquals("aldsy", model.city());
        Assertions.assertEquals("ximerqfobwyznk", model.providerName());
        Assertions.assertEquals(32.21692F, model.longitudeDegrees());
        Assertions.assertEquals(4.411727F, model.latitudeDegrees());
        Assertions.assertEquals(98.1842F, model.altitudeMeters());
        Assertions.assertEquals(ReleaseMode.PREVIEW, model.releaseMode());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AvailableGroundStationProperties model = new AvailableGroundStationProperties().withCity("aldsy")
            .withProviderName("ximerqfobwyznk")
            .withLongitudeDegrees(32.21692F)
            .withLatitudeDegrees(4.411727F)
            .withAltitudeMeters(98.1842F)
            .withReleaseMode(ReleaseMode.PREVIEW);
        model = BinaryData.fromObject(model).toObject(AvailableGroundStationProperties.class);
        Assertions.assertEquals("aldsy", model.city());
        Assertions.assertEquals("ximerqfobwyznk", model.providerName());
        Assertions.assertEquals(32.21692F, model.longitudeDegrees());
        Assertions.assertEquals(4.411727F, model.latitudeDegrees());
        Assertions.assertEquals(98.1842F, model.altitudeMeters());
        Assertions.assertEquals(ReleaseMode.PREVIEW, model.releaseMode());
    }
}
