// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.orbital.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.orbital.OrbitalManager;
import com.azure.resourcemanager.orbital.models.Contact;
import com.azure.resourcemanager.orbital.models.ContactsPropertiesProvisioningState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ContactsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"canceled\",\"status\":\"failed\",\"reservationStartTime\":\"2021-07-29T01:36:25Z\",\"reservationEndTime\":\"2021-05-24T12:41:33Z\",\"rxStartTime\":\"2021-04-01T03:58:48Z\",\"rxEndTime\":\"2020-12-28T18:13:42Z\",\"txStartTime\":\"2021-10-21T00:35:55Z\",\"txEndTime\":\"2020-12-22T05:34:35Z\",\"errorMessage\":\"jylwbtlhflsj\",\"maximumElevationDegrees\":49.928276,\"startAzimuthDegrees\":59.380924,\"endAzimuthDegrees\":62.8989,\"groundStationName\":\"vfbgofeljagrqmqh\",\"startElevationDegrees\":31.824005,\"endElevationDegrees\":64.267334,\"antennaConfiguration\":{\"destinationIp\":\"ojnal\",\"sourceIps\":[\"kvtvsexso\"]},\"contactProfile\":{\"id\":\"ueluqhhahhxvrhmz\"}},\"id\":\"pjgwwspug\",\"name\":\"ftqsxhqxujxuk\",\"type\":\"dxdigr\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        OrbitalManager manager = OrbitalManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Contact> response
            = manager.contacts().list("rjqc", "rgz", "frl", com.azure.core.util.Context.NONE);

        Assertions.assertEquals(ContactsPropertiesProvisioningState.CANCELED,
            response.iterator().next().provisioningState());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-29T01:36:25Z"),
            response.iterator().next().reservationStartTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-24T12:41:33Z"),
            response.iterator().next().reservationEndTime());
        Assertions.assertEquals("vfbgofeljagrqmqh", response.iterator().next().groundStationName());
        Assertions.assertEquals("ueluqhhahhxvrhmz", response.iterator().next().contactProfile().id());
    }
}
