// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.orbital.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.orbital.fluent.models.AvailableContactsInner;
import com.azure.resourcemanager.orbital.models.AvailableContactsSpacecraft;
import org.junit.jupiter.api.Assertions;

public final class AvailableContactsInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AvailableContactsInner model = BinaryData.fromString(
            "{\"spacecraft\":{\"id\":\"zcxtbzsgfyccsn\"},\"groundStationName\":\"mdwzjeiachboo\",\"properties\":{\"maximumElevationDegrees\":55.106743,\"txStartTime\":\"2021-10-01T08:17:31Z\",\"txEndTime\":\"2021-04-28T23:01:46Z\",\"rxStartTime\":\"2021-02-19T13:41:36Z\",\"rxEndTime\":\"2021-12-01T09:51:17Z\",\"startAzimuthDegrees\":44.67273,\"endAzimuthDegrees\":77.50827,\"startElevationDegrees\":67.05552,\"endElevationDegrees\":45.170357}}")
            .toObject(AvailableContactsInner.class);
        Assertions.assertEquals("zcxtbzsgfyccsn", model.spacecraft().id());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AvailableContactsInner model
            = new AvailableContactsInner().withSpacecraft(new AvailableContactsSpacecraft().withId("zcxtbzsgfyccsn"));
        model = BinaryData.fromObject(model).toObject(AvailableContactsInner.class);
        Assertions.assertEquals("zcxtbzsgfyccsn", model.spacecraft().id());
    }
}
