// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.orbital.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.orbital.fluent.models.ContactInner;
import com.azure.resourcemanager.orbital.models.ContactListResult;
import com.azure.resourcemanager.orbital.models.ContactsPropertiesContactProfile;
import com.azure.resourcemanager.orbital.models.ContactsPropertiesProvisioningState;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ContactListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ContactListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"provisioningState\":\"canceled\",\"status\":\"cancelled\",\"reservationStartTime\":\"2021-04-27T12:55:33Z\",\"reservationEndTime\":\"2021-04-24T03:44:15Z\",\"rxStartTime\":\"2021-08-30T04:38:09Z\",\"rxEndTime\":\"2021-09-01T11:04:48Z\",\"txStartTime\":\"2021-05-14T22:11:20Z\",\"txEndTime\":\"2021-06-30T11:52:25Z\",\"errorMessage\":\"qjhqjbas\",\"maximumElevationDegrees\":92.33378,\"startAzimuthDegrees\":21.614403,\"endAzimuthDegrees\":48.216724,\"groundStationName\":\"lngsntnbybkzgcwr\",\"startElevationDegrees\":77.0421,\"endElevationDegrees\":99.26511,\"antennaConfiguration\":{\"destinationIp\":\"ljdousk\",\"sourceIps\":[\"kocrcjdkwtnhx\",\"njbiksqrglssain\",\"p\"]},\"contactProfile\":{\"id\":\"wnzlljfmppeeb\"}},\"id\":\"gxsabkyq\",\"name\":\"uujitcjc\",\"type\":\"dzevndhkrw\"},{\"properties\":{\"provisioningState\":\"succeeded\",\"status\":\"scheduled\",\"reservationStartTime\":\"2021-12-05T19:33:11Z\",\"reservationEndTime\":\"2021-05-23T21:44:39Z\",\"rxStartTime\":\"2021-06-29T12:45:09Z\",\"rxEndTime\":\"2021-05-04T09:53:42Z\",\"txStartTime\":\"2021-09-26T08:04:44Z\",\"txEndTime\":\"2021-07-05T21:18:02Z\",\"errorMessage\":\"eusnhutj\",\"maximumElevationDegrees\":87.67903,\"startAzimuthDegrees\":9.114658,\"endAzimuthDegrees\":95.85893,\"groundStationName\":\"hugjzzdatqxhoc\",\"startElevationDegrees\":25.122803,\"endElevationDegrees\":56.39705,\"antennaConfiguration\":{\"destinationIp\":\"phut\",\"sourceIps\":[\"dvkaozw\"]},\"contactProfile\":{\"id\":\"i\"}},\"id\":\"yhxhu\",\"name\":\"okftyxolniwpwcuk\",\"type\":\"fkgiawxk\"}],\"nextLink\":\"ypl\"}")
            .toObject(ContactListResult.class);
        Assertions.assertEquals(ContactsPropertiesProvisioningState.CANCELED, model.value().get(0).provisioningState());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-27T12:55:33Z"),
            model.value().get(0).reservationStartTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-24T03:44:15Z"),
            model.value().get(0).reservationEndTime());
        Assertions.assertEquals("lngsntnbybkzgcwr", model.value().get(0).groundStationName());
        Assertions.assertEquals("wnzlljfmppeeb", model.value().get(0).contactProfile().id());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ContactListResult model = new ContactListResult().withValue(Arrays.asList(
            new ContactInner().withProvisioningState(ContactsPropertiesProvisioningState.CANCELED)
                .withReservationStartTime(OffsetDateTime.parse("2021-04-27T12:55:33Z"))
                .withReservationEndTime(OffsetDateTime.parse("2021-04-24T03:44:15Z"))
                .withGroundStationName("lngsntnbybkzgcwr")
                .withContactProfile(new ContactsPropertiesContactProfile().withId("wnzlljfmppeeb")),
            new ContactInner().withProvisioningState(ContactsPropertiesProvisioningState.SUCCEEDED)
                .withReservationStartTime(OffsetDateTime.parse("2021-12-05T19:33:11Z"))
                .withReservationEndTime(OffsetDateTime.parse("2021-05-23T21:44:39Z"))
                .withGroundStationName("hugjzzdatqxhoc")
                .withContactProfile(new ContactsPropertiesContactProfile().withId("i"))));
        model = BinaryData.fromObject(model).toObject(ContactListResult.class);
        Assertions.assertEquals(ContactsPropertiesProvisioningState.CANCELED, model.value().get(0).provisioningState());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-27T12:55:33Z"),
            model.value().get(0).reservationStartTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-24T03:44:15Z"),
            model.value().get(0).reservationEndTime());
        Assertions.assertEquals("lngsntnbybkzgcwr", model.value().get(0).groundStationName());
        Assertions.assertEquals("wnzlljfmppeeb", model.value().get(0).contactProfile().id());
    }
}
