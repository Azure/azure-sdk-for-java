/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.redis.v2018_03_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.redis.v2018_03_01.implementation.RedisLinkedServerWithPropertiesInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.redis.v2018_03_01.implementation.CacheManager;

/**
 * Type representing RedisLinkedServerWithProperties.
 */
public interface RedisLinkedServerWithProperties extends HasInner<RedisLinkedServerWithPropertiesInner>, Indexable, Refreshable<RedisLinkedServerWithProperties>, Updatable<RedisLinkedServerWithProperties.Update>, HasManager<CacheManager> {
    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the linkedRedisCacheId value.
     */
    String linkedRedisCacheId();

    /**
     * @return the linkedRedisCacheLocation value.
     */
    String linkedRedisCacheLocation();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * @return the serverRole value.
     */
    ReplicationRole serverRole();

    /**
     * @return the type value.
     */
    String type();

    /**
     * The entirety of the RedisLinkedServerWithProperties definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithRedi, DefinitionStages.WithLinkedRedisCacheId, DefinitionStages.WithLinkedRedisCacheLocation, DefinitionStages.WithServerRole, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of RedisLinkedServerWithProperties definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a RedisLinkedServerWithProperties definition.
         */
        interface Blank extends WithRedi {
        }

        /**
         * The stage of the redislinkedserverwithproperties definition allowing to specify Redi.
         */
        interface WithRedi {
           /**
            * Specifies resourceGroupName, name.
            * @param resourceGroupName The name of the resource group
            * @param name The name of the Redis cache
            * @return the next definition stage
            */
            WithLinkedRedisCacheId withExistingRedi(String resourceGroupName, String name);
        }

        /**
         * The stage of the redislinkedserverwithproperties definition allowing to specify LinkedRedisCacheId.
         */
        interface WithLinkedRedisCacheId {
           /**
            * Specifies linkedRedisCacheId.
            * @param linkedRedisCacheId Fully qualified resourceId of the linked redis cache
            * @return the next definition stage
            */
            WithLinkedRedisCacheLocation withLinkedRedisCacheId(String linkedRedisCacheId);
        }

        /**
         * The stage of the redislinkedserverwithproperties definition allowing to specify LinkedRedisCacheLocation.
         */
        interface WithLinkedRedisCacheLocation {
           /**
            * Specifies linkedRedisCacheLocation.
            * @param linkedRedisCacheLocation Location of the linked redis cache
            * @return the next definition stage
            */
            WithServerRole withLinkedRedisCacheLocation(String linkedRedisCacheLocation);
        }

        /**
         * The stage of the redislinkedserverwithproperties definition allowing to specify ServerRole.
         */
        interface WithServerRole {
           /**
            * Specifies serverRole.
            * @param serverRole Role of the linked server. Possible values include: 'Primary', 'Secondary'
            * @return the next definition stage
            */
            WithCreate withServerRole(ReplicationRole serverRole);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<RedisLinkedServerWithProperties> {
        }
    }
    /**
     * The template for a RedisLinkedServerWithProperties update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<RedisLinkedServerWithProperties> {
    }

    /**
     * Grouping of RedisLinkedServerWithProperties update stages.
     */
    interface UpdateStages {
    }
}
