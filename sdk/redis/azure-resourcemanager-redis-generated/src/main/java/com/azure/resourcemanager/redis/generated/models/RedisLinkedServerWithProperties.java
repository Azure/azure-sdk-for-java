// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.redis.generated.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.redis.generated.fluent.models.RedisLinkedServerWithPropertiesInner;

/** An immutable client-side representation of RedisLinkedServerWithProperties. */
public interface RedisLinkedServerWithProperties {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the linkedRedisCacheId property: Fully qualified resourceId of the linked redis cache.
     *
     * @return the linkedRedisCacheId value.
     */
    String linkedRedisCacheId();

    /**
     * Gets the linkedRedisCacheLocation property: Location of the linked redis cache.
     *
     * @return the linkedRedisCacheLocation value.
     */
    String linkedRedisCacheLocation();

    /**
     * Gets the serverRole property: Role of the linked server.
     *
     * @return the serverRole value.
     */
    ReplicationRole serverRole();

    /**
     * Gets the provisioningState property: Terminal state of the link between primary and secondary redis cache.
     *
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * Gets the inner com.azure.resourcemanager.redis.generated.fluent.models.RedisLinkedServerWithPropertiesInner
     * object.
     *
     * @return the inner object.
     */
    RedisLinkedServerWithPropertiesInner innerModel();

    /** The entirety of the RedisLinkedServerWithProperties definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithParentResource,
            DefinitionStages.WithLinkedRedisCacheId,
            DefinitionStages.WithLinkedRedisCacheLocation,
            DefinitionStages.WithServerRole,
            DefinitionStages.WithCreate {
    }
    /** The RedisLinkedServerWithProperties definition stages. */
    interface DefinitionStages {
        /** The first stage of the RedisLinkedServerWithProperties definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the RedisLinkedServerWithProperties definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, name.
             *
             * @param resourceGroupName The name of the resource group.
             * @param name The name of the Redis cache.
             * @return the next definition stage.
             */
            WithLinkedRedisCacheId withExistingRedi(String resourceGroupName, String name);
        }
        /** The stage of the RedisLinkedServerWithProperties definition allowing to specify linkedRedisCacheId. */
        interface WithLinkedRedisCacheId {
            /**
             * Specifies the linkedRedisCacheId property: Fully qualified resourceId of the linked redis cache..
             *
             * @param linkedRedisCacheId Fully qualified resourceId of the linked redis cache.
             * @return the next definition stage.
             */
            WithLinkedRedisCacheLocation withLinkedRedisCacheId(String linkedRedisCacheId);
        }
        /** The stage of the RedisLinkedServerWithProperties definition allowing to specify linkedRedisCacheLocation. */
        interface WithLinkedRedisCacheLocation {
            /**
             * Specifies the linkedRedisCacheLocation property: Location of the linked redis cache..
             *
             * @param linkedRedisCacheLocation Location of the linked redis cache.
             * @return the next definition stage.
             */
            WithServerRole withLinkedRedisCacheLocation(String linkedRedisCacheLocation);
        }
        /** The stage of the RedisLinkedServerWithProperties definition allowing to specify serverRole. */
        interface WithServerRole {
            /**
             * Specifies the serverRole property: Role of the linked server..
             *
             * @param serverRole Role of the linked server.
             * @return the next definition stage.
             */
            WithCreate withServerRole(ReplicationRole serverRole);
        }
        /**
         * The stage of the RedisLinkedServerWithProperties definition which contains all the minimum required
         * properties for the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            RedisLinkedServerWithProperties create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            RedisLinkedServerWithProperties create(Context context);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    RedisLinkedServerWithProperties refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    RedisLinkedServerWithProperties refresh(Context context);
}
