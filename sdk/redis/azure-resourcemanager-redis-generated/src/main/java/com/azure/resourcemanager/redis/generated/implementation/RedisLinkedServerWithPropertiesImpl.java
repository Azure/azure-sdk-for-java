// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.redis.generated.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.redis.generated.fluent.models.RedisLinkedServerWithPropertiesInner;
import com.azure.resourcemanager.redis.generated.models.RedisLinkedServerCreateParameters;
import com.azure.resourcemanager.redis.generated.models.RedisLinkedServerWithProperties;
import com.azure.resourcemanager.redis.generated.models.ReplicationRole;

public final class RedisLinkedServerWithPropertiesImpl
    implements RedisLinkedServerWithProperties, RedisLinkedServerWithProperties.Definition {
    private RedisLinkedServerWithPropertiesInner innerObject;

    private final com.azure.resourcemanager.redis.generated.RedisManager serviceManager;

    RedisLinkedServerWithPropertiesImpl(
        RedisLinkedServerWithPropertiesInner innerObject,
        com.azure.resourcemanager.redis.generated.RedisManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String linkedRedisCacheId() {
        return this.innerModel().linkedRedisCacheId();
    }

    public String linkedRedisCacheLocation() {
        return this.innerModel().linkedRedisCacheLocation();
    }

    public ReplicationRole serverRole() {
        return this.innerModel().serverRole();
    }

    public String provisioningState() {
        return this.innerModel().provisioningState();
    }

    public RedisLinkedServerWithPropertiesInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.redis.generated.RedisManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String name;

    private String linkedServerName;

    private RedisLinkedServerCreateParameters createParameters;

    public RedisLinkedServerWithPropertiesImpl withExistingRedi(String resourceGroupName, String name) {
        this.resourceGroupName = resourceGroupName;
        this.name = name;
        return this;
    }

    public RedisLinkedServerWithProperties create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getLinkedServers()
                .create(resourceGroupName, name, linkedServerName, createParameters, Context.NONE);
        return this;
    }

    public RedisLinkedServerWithProperties create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getLinkedServers()
                .create(resourceGroupName, name, linkedServerName, createParameters, context);
        return this;
    }

    RedisLinkedServerWithPropertiesImpl(
        String name, com.azure.resourcemanager.redis.generated.RedisManager serviceManager) {
        this.innerObject = new RedisLinkedServerWithPropertiesInner();
        this.serviceManager = serviceManager;
        this.linkedServerName = name;
        this.createParameters = new RedisLinkedServerCreateParameters();
    }

    public RedisLinkedServerWithProperties refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getLinkedServers()
                .getWithResponse(resourceGroupName, name, linkedServerName, Context.NONE)
                .getValue();
        return this;
    }

    public RedisLinkedServerWithProperties refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getLinkedServers()
                .getWithResponse(resourceGroupName, name, linkedServerName, context)
                .getValue();
        return this;
    }

    public RedisLinkedServerWithPropertiesImpl withLinkedRedisCacheId(String linkedRedisCacheId) {
        this.createParameters.withLinkedRedisCacheId(linkedRedisCacheId);
        return this;
    }

    public RedisLinkedServerWithPropertiesImpl withLinkedRedisCacheLocation(String linkedRedisCacheLocation) {
        this.createParameters.withLinkedRedisCacheLocation(linkedRedisCacheLocation);
        return this;
    }

    public RedisLinkedServerWithPropertiesImpl withServerRole(ReplicationRole serverRole) {
        this.createParameters.withServerRole(serverRole);
        return this;
    }
}
