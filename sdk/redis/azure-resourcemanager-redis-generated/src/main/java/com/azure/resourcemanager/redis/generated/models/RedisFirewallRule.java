// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.redis.generated.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.redis.generated.fluent.models.RedisFirewallRuleInner;

/** An immutable client-side representation of RedisFirewallRule. */
public interface RedisFirewallRule {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the startIp property: lowest IP address included in the range.
     *
     * @return the startIp value.
     */
    String startIp();

    /**
     * Gets the endIp property: highest IP address included in the range.
     *
     * @return the endIp value.
     */
    String endIp();

    /**
     * Gets the inner com.azure.resourcemanager.redis.generated.fluent.models.RedisFirewallRuleInner object.
     *
     * @return the inner object.
     */
    RedisFirewallRuleInner innerModel();

    /** The entirety of the RedisFirewallRule definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithParentResource,
            DefinitionStages.WithStartIp,
            DefinitionStages.WithEndIp,
            DefinitionStages.WithCreate {
    }
    /** The RedisFirewallRule definition stages. */
    interface DefinitionStages {
        /** The first stage of the RedisFirewallRule definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the RedisFirewallRule definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, cacheName.
             *
             * @param resourceGroupName The name of the resource group.
             * @param cacheName The name of the Redis cache.
             * @return the next definition stage.
             */
            WithStartIp withExistingRedi(String resourceGroupName, String cacheName);
        }
        /** The stage of the RedisFirewallRule definition allowing to specify startIp. */
        interface WithStartIp {
            /**
             * Specifies the startIp property: lowest IP address included in the range.
             *
             * @param startIp lowest IP address included in the range.
             * @return the next definition stage.
             */
            WithEndIp withStartIp(String startIp);
        }
        /** The stage of the RedisFirewallRule definition allowing to specify endIp. */
        interface WithEndIp {
            /**
             * Specifies the endIp property: highest IP address included in the range.
             *
             * @param endIp highest IP address included in the range.
             * @return the next definition stage.
             */
            WithCreate withEndIp(String endIp);
        }
        /**
         * The stage of the RedisFirewallRule definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            RedisFirewallRule create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            RedisFirewallRule create(Context context);
        }
    }
    /**
     * Begins update for the RedisFirewallRule resource.
     *
     * @return the stage of resource update.
     */
    RedisFirewallRule.Update update();

    /** The template for RedisFirewallRule update. */
    interface Update extends UpdateStages.WithStartIp, UpdateStages.WithEndIp {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        RedisFirewallRule apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        RedisFirewallRule apply(Context context);
    }
    /** The RedisFirewallRule update stages. */
    interface UpdateStages {
        /** The stage of the RedisFirewallRule update allowing to specify startIp. */
        interface WithStartIp {
            /**
             * Specifies the startIp property: lowest IP address included in the range.
             *
             * @param startIp lowest IP address included in the range.
             * @return the next definition stage.
             */
            Update withStartIp(String startIp);
        }
        /** The stage of the RedisFirewallRule update allowing to specify endIp. */
        interface WithEndIp {
            /**
             * Specifies the endIp property: highest IP address included in the range.
             *
             * @param endIp highest IP address included in the range.
             * @return the next definition stage.
             */
            Update withEndIp(String endIp);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    RedisFirewallRule refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    RedisFirewallRule refresh(Context context);
}
