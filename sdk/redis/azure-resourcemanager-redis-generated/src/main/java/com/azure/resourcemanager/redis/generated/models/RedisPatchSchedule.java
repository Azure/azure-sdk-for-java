// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.redis.generated.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.redis.generated.fluent.models.RedisPatchScheduleInner;
import java.util.List;

/** An immutable client-side representation of RedisPatchSchedule. */
public interface RedisPatchSchedule {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the scheduleEntries property: List of patch schedules for a Redis cache.
     *
     * @return the scheduleEntries value.
     */
    List<ScheduleEntry> scheduleEntries();

    /**
     * Gets the inner com.azure.resourcemanager.redis.generated.fluent.models.RedisPatchScheduleInner object.
     *
     * @return the inner object.
     */
    RedisPatchScheduleInner innerModel();

    /** The entirety of the RedisPatchSchedule definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithParentResource,
            DefinitionStages.WithScheduleEntries,
            DefinitionStages.WithCreate {
    }
    /** The RedisPatchSchedule definition stages. */
    interface DefinitionStages {
        /** The first stage of the RedisPatchSchedule definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the RedisPatchSchedule definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, name.
             *
             * @param resourceGroupName The name of the resource group.
             * @param name The name of the Redis cache.
             * @return the next definition stage.
             */
            WithScheduleEntries withExistingRedi(String resourceGroupName, String name);
        }
        /** The stage of the RedisPatchSchedule definition allowing to specify scheduleEntries. */
        interface WithScheduleEntries {
            /**
             * Specifies the scheduleEntries property: List of patch schedules for a Redis cache..
             *
             * @param scheduleEntries List of patch schedules for a Redis cache.
             * @return the next definition stage.
             */
            WithCreate withScheduleEntries(List<ScheduleEntry> scheduleEntries);
        }
        /**
         * The stage of the RedisPatchSchedule definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            RedisPatchSchedule create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            RedisPatchSchedule create(Context context);
        }
    }
    /**
     * Begins update for the RedisPatchSchedule resource.
     *
     * @return the stage of resource update.
     */
    RedisPatchSchedule.Update update();

    /** The template for RedisPatchSchedule update. */
    interface Update extends UpdateStages.WithScheduleEntries {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        RedisPatchSchedule apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        RedisPatchSchedule apply(Context context);
    }
    /** The RedisPatchSchedule update stages. */
    interface UpdateStages {
        /** The stage of the RedisPatchSchedule update allowing to specify scheduleEntries. */
        interface WithScheduleEntries {
            /**
             * Specifies the scheduleEntries property: List of patch schedules for a Redis cache..
             *
             * @param scheduleEntries List of patch schedules for a Redis cache.
             * @return the next definition stage.
             */
            Update withScheduleEntries(List<ScheduleEntry> scheduleEntries);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    RedisPatchSchedule refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    RedisPatchSchedule refresh(Context context);
}
