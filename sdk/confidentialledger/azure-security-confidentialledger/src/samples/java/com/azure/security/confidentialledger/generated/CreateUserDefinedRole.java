// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.security.confidentialledger.generated;

import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;
import com.azure.core.util.Configuration;
import com.azure.identity.DefaultAzureCredentialBuilder;
import com.azure.security.confidentialledger.ConfidentialLedgerClient;
import com.azure.security.confidentialledger.ConfidentialLedgerClientBuilder;

public class CreateUserDefinedRole {
    public static void main(String[] args) {
        ConfidentialLedgerClient confidentialLedgerClient
            = new ConfidentialLedgerClientBuilder().credential(new DefaultAzureCredentialBuilder().build())
                .ledgerEndpoint(Configuration.getGlobalConfiguration().get("LEDGERENDPOINT"))
                .buildClient();
        // BEGIN:com.azure.security.confidentialledger.generated.createuserdefinedrole.createuserdefinedrole
        BinaryData roles = BinaryData.fromString(
            "[{\"roleActions\":[\"Microsoft.ConfidentialLedger/ledger/users/write\",\"Microsoft.ConfidentialLedger/ledger/users/read\"],\"roleName\":\"administrator\"},{\"roleActions\":[\"Microsoft.ConfidentialLedger/ledger/users/write\",\"Microsoft.ConfidentialLedger/ledger/users/read\"],\"roleName\":\"contributor\"}]");
        RequestOptions requestOptions = new RequestOptions();
        Response<Void> response = confidentialLedgerClient.createUserDefinedRoleWithResponse(roles, requestOptions);
        // END:com.azure.security.confidentialledger.generated.createuserdefinedrole.createuserdefinedrole
    }
}
