// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.security.confidentialledger.generated;

import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;

import java.io.IOException;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class LedgerEntriesTest extends ConfidentialLedgerClientTestBase {
    @Test
    public void testPostLedgerEntryTests() {
        BinaryData entry = BinaryData.fromString("{\"contents\":\"New ledger entry contents.\"}");
        RequestOptions requestOptions = new RequestOptions();
        Response<BinaryData> response = confidentialLedgerClient.postLedgerEntryWithResponse(entry, requestOptions);

        String transactionId = response.getHeaders().get("x-ms-ccf-transaction-id").getValue();

        BinaryData parsedResponse = response.getValue();

        ObjectMapper objectMapper = new ObjectMapper();
        JsonNode responseBodyJson = null;

        try {
            
            responseBodyJson = objectMapper.readTree(parsedResponse.toBytes());
        } catch (IOException e) {
            e.printStackTrace();
            Assertions.assertTrue(false);
        }
        
        Assertions.assertEquals(responseBodyJson.get("collectionId").asText(), "subledger:0");

        Response<BinaryData> transactionResponse = confidentialLedgerClient.getTransactionStatusWithResponse(transactionId, requestOptions);
        Assertions.assertTrue(200 == transactionResponse.getStatusCode() || 406 == transactionResponse.getStatusCode());

        Response<BinaryData> getLedgerResponse = confidentialLedgerClient.getLedgerEntryWithResponse(transactionId, requestOptions);
        Assertions.assertTrue(200 == getLedgerResponse.getStatusCode() || 406 == transactionResponse.getStatusCode());

        JsonNode getLedgerResponseBodyJson = null;

        try {
            
            getLedgerResponseBodyJson = objectMapper.readTree(getLedgerResponse.getValue().toBytes());
        } catch (IOException e) {
            e.printStackTrace();
            Assertions.assertTrue(false);
        }

        System.out.println(getLedgerResponseBodyJson);
    }
}

