// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.security.confidentialledger.generated;

import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class GetCollectionIdsTests extends ConfidentialLedgerClientTestBase {
    @Test
    public void testGetCollectionIdsTests() {
        RequestOptions requestOptions = new RequestOptions();
        Response<BinaryData> response = confidentialLedgerClient.listCollectionsWithResponse(requestOptions);
        Assertions.assertEquals(200, response.getStatusCode());
        
        BinaryData parsedResponse = response.getValue();

        ObjectMapper objectMapper = new ObjectMapper();
        JsonNode responseBodyJson = null;

        try {
            responseBodyJson = objectMapper.readTree(parsedResponse.toBytes());
        } catch (IOException e) {
            e.printStackTrace();
            Assertions.assertTrue(false);
        }

        JsonNode collections = responseBodyJson.get("collections");
        List<String> collectionKeys = new ArrayList<>();

        collections.forEach((collection) -> {
            JsonNode collectionJson = collection;
            String value = collectionJson.get("collectionId").toString();
            collectionKeys.add(value);
        });
        System.out.println(collectionKeys);
        Assertions.assertTrue(collectionKeys.contains("1"));
        Assertions.assertTrue(collectionKeys.contains("2"));
        Assertions.assertTrue(collectionKeys.contains("3"));
        Assertions.assertTrue(collectionKeys.contains("4"));
        Assertions.assertTrue(collectionKeys.contains("subledger:0"));
    }
}
