// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.confidentialledger.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.confidentialledger.ConfidentialLedgerManager;
import com.azure.resourcemanager.confidentialledger.models.ManagedCcfRestore;
import com.azure.resourcemanager.confidentialledger.models.ManagedCcfRestoreResponse;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ManagedCcfsRestoreMockTests {
    @Test
    public void testRestore() throws Exception {
        String responseStr = "{\"message\":\"exrmcqibycnojvk\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ConfidentialLedgerManager manager = ConfidentialLedgerManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        ManagedCcfRestoreResponse response = manager.managedCcfs()
            .restore("gwyzm", "txon",
                new ManagedCcfRestore().withFileShareName("mtsavjcbpwxqp")
                    .withRestoreRegion("rknftguvriuhprwm")
                    .withUri("yvxqtayriwwroy"),
                com.azure.core.util.Context.NONE);

    }
}
