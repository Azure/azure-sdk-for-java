// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.confidentialledger.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.confidentialledger.models.AadBasedSecurityPrincipal;
import com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal;
import com.azure.resourcemanager.confidentialledger.models.LedgerProperties;
import com.azure.resourcemanager.confidentialledger.models.LedgerRoleName;
import com.azure.resourcemanager.confidentialledger.models.LedgerType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class LedgerPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LedgerProperties model =
            BinaryData
                .fromString(
                    "{\"ledgerName\":\"uvm\",\"ledgerUri\":\"ozkrwfndiodjpslw\",\"identityServiceUri\":\"dpvwryoqpsoaccta\",\"ledgerInternalNamespace\":\"kljla\",\"ledgerType\":\"Unknown\",\"provisioningState\":\"Unknown\",\"aadBasedSecurityPrincipals\":[{\"principalId\":\"fdosyg\",\"tenantId\":\"paojakhmsbzjh\",\"ledgerRoleName\":\"Reader\"},{\"principalId\":\"vdphlxaolthqtr\",\"tenantId\":\"jbp\",\"ledgerRoleName\":\"Administrator\"},{\"principalId\":\"inzgvfcj\",\"tenantId\":\"zoxxjtf\",\"ledgerRoleName\":\"Administrator\"}],\"certBasedSecurityPrincipals\":[{\"cert\":\"zitonpeqfpjkjl\",\"ledgerRoleName\":\"Reader\"},{\"cert\":\"dvhpfxxypininm\",\"ledgerRoleName\":\"Administrator\"},{\"cert\":\"ybb\",\"ledgerRoleName\":\"Contributor\"},{\"cert\":\"epoo\",\"ledgerRoleName\":\"Administrator\"}]}")
                .toObject(LedgerProperties.class);
        Assertions.assertEquals(LedgerType.UNKNOWN, model.ledgerType());
        Assertions.assertEquals("fdosyg", model.aadBasedSecurityPrincipals().get(0).principalId());
        Assertions.assertEquals("paojakhmsbzjh", model.aadBasedSecurityPrincipals().get(0).tenantId());
        Assertions.assertEquals(LedgerRoleName.READER, model.aadBasedSecurityPrincipals().get(0).ledgerRoleName());
        Assertions.assertEquals("zitonpeqfpjkjl", model.certBasedSecurityPrincipals().get(0).cert());
        Assertions.assertEquals(LedgerRoleName.READER, model.certBasedSecurityPrincipals().get(0).ledgerRoleName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LedgerProperties model =
            new LedgerProperties()
                .withLedgerType(LedgerType.UNKNOWN)
                .withAadBasedSecurityPrincipals(
                    Arrays
                        .asList(
                            new AadBasedSecurityPrincipal()
                                .withPrincipalId("fdosyg")
                                .withTenantId("paojakhmsbzjh")
                                .withLedgerRoleName(LedgerRoleName.READER),
                            new AadBasedSecurityPrincipal()
                                .withPrincipalId("vdphlxaolthqtr")
                                .withTenantId("jbp")
                                .withLedgerRoleName(LedgerRoleName.ADMINISTRATOR),
                            new AadBasedSecurityPrincipal()
                                .withPrincipalId("inzgvfcj")
                                .withTenantId("zoxxjtf")
                                .withLedgerRoleName(LedgerRoleName.ADMINISTRATOR)))
                .withCertBasedSecurityPrincipals(
                    Arrays
                        .asList(
                            new CertBasedSecurityPrincipal()
                                .withCert("zitonpeqfpjkjl")
                                .withLedgerRoleName(LedgerRoleName.READER),
                            new CertBasedSecurityPrincipal()
                                .withCert("dvhpfxxypininm")
                                .withLedgerRoleName(LedgerRoleName.ADMINISTRATOR),
                            new CertBasedSecurityPrincipal()
                                .withCert("ybb")
                                .withLedgerRoleName(LedgerRoleName.CONTRIBUTOR),
                            new CertBasedSecurityPrincipal()
                                .withCert("epoo")
                                .withLedgerRoleName(LedgerRoleName.ADMINISTRATOR)));
        model = BinaryData.fromObject(model).toObject(LedgerProperties.class);
        Assertions.assertEquals(LedgerType.UNKNOWN, model.ledgerType());
        Assertions.assertEquals("fdosyg", model.aadBasedSecurityPrincipals().get(0).principalId());
        Assertions.assertEquals("paojakhmsbzjh", model.aadBasedSecurityPrincipals().get(0).tenantId());
        Assertions.assertEquals(LedgerRoleName.READER, model.aadBasedSecurityPrincipals().get(0).ledgerRoleName());
        Assertions.assertEquals("zitonpeqfpjkjl", model.certBasedSecurityPrincipals().get(0).cert());
        Assertions.assertEquals(LedgerRoleName.READER, model.certBasedSecurityPrincipals().get(0).ledgerRoleName());
    }
}
