// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.confidentialledger.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.confidentialledger.ConfidentialLedgerManager;
import com.azure.resourcemanager.confidentialledger.models.ConfidentialLedger;
import com.azure.resourcemanager.confidentialledger.models.LedgerRoleName;
import com.azure.resourcemanager.confidentialledger.models.LedgerType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class LedgersListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"ledgerName\":\"hbcsgl\",\"ledgerUri\":\"majtjaod\",\"identityServiceUri\":\"bnbdxkqpxokajion\",\"ledgerInternalNamespace\":\"mexgstxgcp\",\"ledgerType\":\"Public\",\"provisioningState\":\"Canceled\",\"aadBasedSecurityPrincipals\":[{\"principalId\":\"mvdjwzrlovmc\",\"tenantId\":\"hijco\",\"ledgerRoleName\":\"Administrator\"},{\"principalId\":\"bzaqsqsycbkbfk\",\"tenantId\":\"kdkexxp\",\"ledgerRoleName\":\"Contributor\"},{\"principalId\":\"xaxcfjpgddtocjjx\",\"tenantId\":\"pmouexhdz\",\"ledgerRoleName\":\"Reader\"}],\"certBasedSecurityPrincipals\":[{\"cert\":\"jnxqbzvddntwn\",\"ledgerRoleName\":\"Contributor\"},{\"cert\":\"btwnpzaoqvuhrhcf\",\"ledgerRoleName\":\"Contributor\"},{\"cert\":\"dglmjthjqkwp\",\"ledgerRoleName\":\"Contributor\"}]},\"location\":\"mqc\",\"tags\":{\"gdtopbobjogh\":\"vhkhixu\"},\"id\":\"e\",\"name\":\"u\",\"type\":\"m\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ConfidentialLedgerManager manager = ConfidentialLedgerManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<ConfidentialLedger> response
            = manager.ledgers().listByResourceGroup("zloc", "scpai", com.azure.core.util.Context.NONE);

        Assertions.assertEquals(LedgerType.PUBLIC, response.iterator().next().properties().ledgerType());
        Assertions.assertEquals("mvdjwzrlovmc",
            response.iterator().next().properties().aadBasedSecurityPrincipals().get(0).principalId());
        Assertions.assertEquals("hijco",
            response.iterator().next().properties().aadBasedSecurityPrincipals().get(0).tenantId());
        Assertions.assertEquals(LedgerRoleName.ADMINISTRATOR,
            response.iterator().next().properties().aadBasedSecurityPrincipals().get(0).ledgerRoleName());
        Assertions.assertEquals("jnxqbzvddntwn",
            response.iterator().next().properties().certBasedSecurityPrincipals().get(0).cert());
        Assertions.assertEquals(LedgerRoleName.CONTRIBUTOR,
            response.iterator().next().properties().certBasedSecurityPrincipals().get(0).ledgerRoleName());
        Assertions.assertEquals("mqc", response.iterator().next().location());
        Assertions.assertEquals("vhkhixu", response.iterator().next().tags().get("gdtopbobjogh"));
    }
}
