// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.confidentialledger.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Object representing the restore response of a Managed CCF Resource.
 */
@Immutable
public final class ManagedCcfRestoreResponseInner implements JsonSerializable<ManagedCcfRestoreResponseInner> {
    /*
     * Response body stating if the managed CCF resource is being restored.
     */
    private String message;

    /**
     * Creates an instance of ManagedCcfRestoreResponseInner class.
     */
    public ManagedCcfRestoreResponseInner() {
    }

    /**
     * Get the message property: Response body stating if the managed CCF resource is being restored.
     * 
     * @return the message value.
     */
    public String message() {
        return this.message;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ManagedCcfRestoreResponseInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ManagedCcfRestoreResponseInner if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ManagedCcfRestoreResponseInner.
     */
    public static ManagedCcfRestoreResponseInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ManagedCcfRestoreResponseInner deserializedManagedCcfRestoreResponseInner
                = new ManagedCcfRestoreResponseInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("message".equals(fieldName)) {
                    deserializedManagedCcfRestoreResponseInner.message = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedManagedCcfRestoreResponseInner;
        });
    }
}
