// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.confidentialledger.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * DeploymentType
 * 
 * Object representing DeploymentType for Managed CCF.
 */
@Fluent
public final class DeploymentType implements JsonSerializable<DeploymentType> {
    /*
     * Unique name for the Managed CCF.
     */
    private LanguageRuntime languageRuntime;

    /*
     * Source Uri containing ManagedCCF code
     */
    private String appSourceUri;

    /**
     * Creates an instance of DeploymentType class.
     */
    public DeploymentType() {
    }

    /**
     * Get the languageRuntime property: Unique name for the Managed CCF.
     * 
     * @return the languageRuntime value.
     */
    public LanguageRuntime languageRuntime() {
        return this.languageRuntime;
    }

    /**
     * Set the languageRuntime property: Unique name for the Managed CCF.
     * 
     * @param languageRuntime the languageRuntime value to set.
     * @return the DeploymentType object itself.
     */
    public DeploymentType withLanguageRuntime(LanguageRuntime languageRuntime) {
        this.languageRuntime = languageRuntime;
        return this;
    }

    /**
     * Get the appSourceUri property: Source Uri containing ManagedCCF code.
     * 
     * @return the appSourceUri value.
     */
    public String appSourceUri() {
        return this.appSourceUri;
    }

    /**
     * Set the appSourceUri property: Source Uri containing ManagedCCF code.
     * 
     * @param appSourceUri the appSourceUri value to set.
     * @return the DeploymentType object itself.
     */
    public DeploymentType withAppSourceUri(String appSourceUri) {
        this.appSourceUri = appSourceUri;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("languageRuntime",
            this.languageRuntime == null ? null : this.languageRuntime.toString());
        jsonWriter.writeStringField("appSourceUri", this.appSourceUri);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DeploymentType from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DeploymentType if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the DeploymentType.
     */
    public static DeploymentType fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            DeploymentType deserializedDeploymentType = new DeploymentType();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("languageRuntime".equals(fieldName)) {
                    deserializedDeploymentType.languageRuntime = LanguageRuntime.fromString(reader.getString());
                } else if ("appSourceUri".equals(fieldName)) {
                    deserializedDeploymentType.appSourceUri = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedDeploymentType;
        });
    }
}
