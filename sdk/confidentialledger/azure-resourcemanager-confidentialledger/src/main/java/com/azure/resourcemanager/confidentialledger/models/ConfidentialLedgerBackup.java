// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.confidentialledger.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Object representing Backup properties of a Confidential Ledger Resource.
 */
@Fluent
public final class ConfidentialLedgerBackup {
    /*
     * The region where the backup of the ledger will eventually be restored to.
     */
    @JsonProperty(value = "restoreRegion")
    private String restoreRegion;

    /*
     * SAS URI used to access the backup Fileshare.
     */
    @JsonProperty(value = "uri")
    private String uri;

    /**
     * Creates an instance of ConfidentialLedgerBackup class.
     */
    public ConfidentialLedgerBackup() {
    }

    /**
     * Get the restoreRegion property: The region where the backup of the ledger will eventually be restored to.
     * 
     * @return the restoreRegion value.
     */
    public String restoreRegion() {
        return this.restoreRegion;
    }

    /**
     * Set the restoreRegion property: The region where the backup of the ledger will eventually be restored to.
     * 
     * @param restoreRegion the restoreRegion value to set.
     * @return the ConfidentialLedgerBackup object itself.
     */
    public ConfidentialLedgerBackup withRestoreRegion(String restoreRegion) {
        this.restoreRegion = restoreRegion;
        return this;
    }

    /**
     * Get the uri property: SAS URI used to access the backup Fileshare.
     * 
     * @return the uri value.
     */
    public String uri() {
        return this.uri;
    }

    /**
     * Set the uri property: SAS URI used to access the backup Fileshare.
     * 
     * @param uri the uri value to set.
     * @return the ConfidentialLedgerBackup object itself.
     */
    public ConfidentialLedgerBackup withUri(String uri) {
        this.uri = uri;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (uri() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property uri in model ConfidentialLedgerBackup"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ConfidentialLedgerBackup.class);
}
