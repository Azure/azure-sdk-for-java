// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.data.confidentialledger;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.experimental.http.DynamicRequest;
import com.azure.core.http.HttpMethod;
import com.azure.core.http.HttpPipeline;
import com.azure.core.util.serializer.ObjectSerializer;
import java.net.URL;

/** Initializes a new instance of the ConfidentialLedgerIdentityServiceBaseClient type. */
@ServiceClient(builder = ConfidentialLedgerClientBuilder.class)
public final class ConfidentialLedgerIdentityServiceBaseClient {
    private final URL ledgerUri;

    private final String apiVersion;

    private final URL identityServiceUri;

    private final HttpPipeline httpPipeline;

    private final ObjectSerializer serializer;

    /**
     * Initializes an instance of ConfidentialLedgerIdentityServiceBaseClient client.
     *
     * @param ledgerUri The Confidential Ledger URL, for example https://contoso.confidentialledger.azure.com.
     * @param apiVersion Api Version.
     * @param identityServiceUri The Identity Service URL, for example https://identity.accledger.azure.com.
     * @param httpPipeline The HTTP pipeline to send requests through.
     * @param serializer The serializer to serialize an object into a string.
     */
    ConfidentialLedgerIdentityServiceBaseClient(
            URL ledgerUri,
            String apiVersion,
            URL identityServiceUri,
            HttpPipeline httpPipeline,
            ObjectSerializer serializer) {
        this.ledgerUri = ledgerUri;
        this.apiVersion = apiVersion;
        this.identityServiceUri = identityServiceUri;
        this.httpPipeline = httpPipeline;
        this.serializer = serializer;
    }

    /**
     * Gets identity information for a Confidential Ledger instance.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     ledgerId: String
     *     ledgerTlsCertificate: String
     * }
     * }</pre>
     *
     * @param ledgerId Id of the Confidential Ledger instance to get information for.
     * @return a DynamicRequest where customizations can be made before sent to the service.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public DynamicRequest getLedgerIdentity(String ledgerId) {
        return new DynamicRequest(serializer, httpPipeline)
                .setUrl("{identityServiceUri}/ledgerIdentity/{ledgerId}")
                .setPathParam("identityServiceUri", identityServiceUri.toString())
                .setPathParam("ledgerId", ledgerId)
                .addQueryParam("api-version", apiVersion)
                .addHeader("Accept", "application/json")
                .addHeader("Content-Type", "application/json")
                .setHttpMethod(HttpMethod.GET);
    }

    /**
     * Create an empty DynamicRequest with the serializer and pipeline initialized for this client.
     *
     * @return a DynamicRequest where customizations can be made before sent to the service.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public DynamicRequest invoke() {
        return new DynamicRequest(serializer, httpPipeline);
    }
}
