// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.edgemarketplace.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.edgemarketplace.models.MarketplaceSku;
import com.azure.resourcemanager.edgemarketplace.models.OfferContent;
import com.azure.resourcemanager.edgemarketplace.models.ResourceProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The offer properties. */
@Fluent
public final class OfferProperties {
    /*
     * The content version
     */
    @JsonProperty(value = "contentVersion")
    private String contentVersion;

    /*
     * The content url
     */
    @JsonProperty(value = "contentUrl")
    private String contentUrl;

    /*
     * The offer content
     */
    @JsonProperty(value = "offerContent", required = true)
    private OfferContent offerContent;

    /*
     * The resource provisioning state
     */
    @JsonProperty(value = "provisioningState")
    private ResourceProvisioningState provisioningState;

    /*
     * The marketplace skus
     */
    @JsonProperty(value = "marketplaceSkus")
    private List<MarketplaceSku> marketplaceSkus;

    /** Creates an instance of OfferProperties class. */
    public OfferProperties() {
    }

    /**
     * Get the contentVersion property: The content version.
     *
     * @return the contentVersion value.
     */
    public String contentVersion() {
        return this.contentVersion;
    }

    /**
     * Set the contentVersion property: The content version.
     *
     * @param contentVersion the contentVersion value to set.
     * @return the OfferProperties object itself.
     */
    public OfferProperties withContentVersion(String contentVersion) {
        this.contentVersion = contentVersion;
        return this;
    }

    /**
     * Get the contentUrl property: The content url.
     *
     * @return the contentUrl value.
     */
    public String contentUrl() {
        return this.contentUrl;
    }

    /**
     * Set the contentUrl property: The content url.
     *
     * @param contentUrl the contentUrl value to set.
     * @return the OfferProperties object itself.
     */
    public OfferProperties withContentUrl(String contentUrl) {
        this.contentUrl = contentUrl;
        return this;
    }

    /**
     * Get the offerContent property: The offer content.
     *
     * @return the offerContent value.
     */
    public OfferContent offerContent() {
        return this.offerContent;
    }

    /**
     * Set the offerContent property: The offer content.
     *
     * @param offerContent the offerContent value to set.
     * @return the OfferProperties object itself.
     */
    public OfferProperties withOfferContent(OfferContent offerContent) {
        this.offerContent = offerContent;
        return this;
    }

    /**
     * Get the provisioningState property: The resource provisioning state.
     *
     * @return the provisioningState value.
     */
    public ResourceProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Set the provisioningState property: The resource provisioning state.
     *
     * @param provisioningState the provisioningState value to set.
     * @return the OfferProperties object itself.
     */
    public OfferProperties withProvisioningState(ResourceProvisioningState provisioningState) {
        this.provisioningState = provisioningState;
        return this;
    }

    /**
     * Get the marketplaceSkus property: The marketplace skus.
     *
     * @return the marketplaceSkus value.
     */
    public List<MarketplaceSku> marketplaceSkus() {
        return this.marketplaceSkus;
    }

    /**
     * Set the marketplaceSkus property: The marketplace skus.
     *
     * @param marketplaceSkus the marketplaceSkus value to set.
     * @return the OfferProperties object itself.
     */
    public OfferProperties withMarketplaceSkus(List<MarketplaceSku> marketplaceSkus) {
        this.marketplaceSkus = marketplaceSkus;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (offerContent() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property offerContent in model OfferProperties"));
        } else {
            offerContent().validate();
        }
        if (marketplaceSkus() != null) {
            marketplaceSkus().forEach(e -> e.validate());
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(OfferProperties.class);
}
