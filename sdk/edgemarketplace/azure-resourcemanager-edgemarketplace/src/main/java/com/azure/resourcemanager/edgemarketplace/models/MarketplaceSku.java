// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.edgemarketplace.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The marketplace sku. */
@Fluent
public final class MarketplaceSku {
    /*
     * The catalog plan id
     */
    @JsonProperty(value = "catalogPlanId", required = true)
    private String catalogPlanId;

    /*
     * The marketplace sku id
     */
    @JsonProperty(value = "marketplaceSkuId", required = true)
    private String marketplaceSkuId;

    /*
     * The type of marketplace sku
     */
    @JsonProperty(value = "type")
    private String type;

    /*
     * The display name of marketplace sku
     */
    @JsonProperty(value = "displayName")
    private String displayName;

    /*
     * The summary
     */
    @JsonProperty(value = "summary")
    private String summary;

    /*
     * The long summary
     */
    @JsonProperty(value = "longSummary")
    private String longSummary;

    /*
     * The description
     */
    @JsonProperty(value = "description")
    private String description;

    /*
     * The generation
     */
    @JsonProperty(value = "generation")
    private String generation;

    /*
     * The display rank of the sku
     */
    @JsonProperty(value = "displayRank")
    private Integer displayRank;

    /*
     * The operating system supported
     */
    @JsonProperty(value = "operatingSystem")
    private SkuOperatingSystem operatingSystem;

    /*
     * The marketplace sku version
     */
    @JsonProperty(value = "marketplaceSkuVersions")
    private List<MarketplaceSkuVersion> marketplaceSkuVersions;

    /** Creates an instance of MarketplaceSku class. */
    public MarketplaceSku() {
    }

    /**
     * Get the catalogPlanId property: The catalog plan id.
     *
     * @return the catalogPlanId value.
     */
    public String catalogPlanId() {
        return this.catalogPlanId;
    }

    /**
     * Set the catalogPlanId property: The catalog plan id.
     *
     * @param catalogPlanId the catalogPlanId value to set.
     * @return the MarketplaceSku object itself.
     */
    public MarketplaceSku withCatalogPlanId(String catalogPlanId) {
        this.catalogPlanId = catalogPlanId;
        return this;
    }

    /**
     * Get the marketplaceSkuId property: The marketplace sku id.
     *
     * @return the marketplaceSkuId value.
     */
    public String marketplaceSkuId() {
        return this.marketplaceSkuId;
    }

    /**
     * Set the marketplaceSkuId property: The marketplace sku id.
     *
     * @param marketplaceSkuId the marketplaceSkuId value to set.
     * @return the MarketplaceSku object itself.
     */
    public MarketplaceSku withMarketplaceSkuId(String marketplaceSkuId) {
        this.marketplaceSkuId = marketplaceSkuId;
        return this;
    }

    /**
     * Get the type property: The type of marketplace sku.
     *
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Set the type property: The type of marketplace sku.
     *
     * @param type the type value to set.
     * @return the MarketplaceSku object itself.
     */
    public MarketplaceSku withType(String type) {
        this.type = type;
        return this;
    }

    /**
     * Get the displayName property: The display name of marketplace sku.
     *
     * @return the displayName value.
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set the displayName property: The display name of marketplace sku.
     *
     * @param displayName the displayName value to set.
     * @return the MarketplaceSku object itself.
     */
    public MarketplaceSku withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the summary property: The summary.
     *
     * @return the summary value.
     */
    public String summary() {
        return this.summary;
    }

    /**
     * Set the summary property: The summary.
     *
     * @param summary the summary value to set.
     * @return the MarketplaceSku object itself.
     */
    public MarketplaceSku withSummary(String summary) {
        this.summary = summary;
        return this;
    }

    /**
     * Get the longSummary property: The long summary.
     *
     * @return the longSummary value.
     */
    public String longSummary() {
        return this.longSummary;
    }

    /**
     * Set the longSummary property: The long summary.
     *
     * @param longSummary the longSummary value to set.
     * @return the MarketplaceSku object itself.
     */
    public MarketplaceSku withLongSummary(String longSummary) {
        this.longSummary = longSummary;
        return this;
    }

    /**
     * Get the description property: The description.
     *
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: The description.
     *
     * @param description the description value to set.
     * @return the MarketplaceSku object itself.
     */
    public MarketplaceSku withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the generation property: The generation.
     *
     * @return the generation value.
     */
    public String generation() {
        return this.generation;
    }

    /**
     * Set the generation property: The generation.
     *
     * @param generation the generation value to set.
     * @return the MarketplaceSku object itself.
     */
    public MarketplaceSku withGeneration(String generation) {
        this.generation = generation;
        return this;
    }

    /**
     * Get the displayRank property: The display rank of the sku.
     *
     * @return the displayRank value.
     */
    public Integer displayRank() {
        return this.displayRank;
    }

    /**
     * Set the displayRank property: The display rank of the sku.
     *
     * @param displayRank the displayRank value to set.
     * @return the MarketplaceSku object itself.
     */
    public MarketplaceSku withDisplayRank(Integer displayRank) {
        this.displayRank = displayRank;
        return this;
    }

    /**
     * Get the operatingSystem property: The operating system supported.
     *
     * @return the operatingSystem value.
     */
    public SkuOperatingSystem operatingSystem() {
        return this.operatingSystem;
    }

    /**
     * Set the operatingSystem property: The operating system supported.
     *
     * @param operatingSystem the operatingSystem value to set.
     * @return the MarketplaceSku object itself.
     */
    public MarketplaceSku withOperatingSystem(SkuOperatingSystem operatingSystem) {
        this.operatingSystem = operatingSystem;
        return this;
    }

    /**
     * Get the marketplaceSkuVersions property: The marketplace sku version.
     *
     * @return the marketplaceSkuVersions value.
     */
    public List<MarketplaceSkuVersion> marketplaceSkuVersions() {
        return this.marketplaceSkuVersions;
    }

    /**
     * Set the marketplaceSkuVersions property: The marketplace sku version.
     *
     * @param marketplaceSkuVersions the marketplaceSkuVersions value to set.
     * @return the MarketplaceSku object itself.
     */
    public MarketplaceSku withMarketplaceSkuVersions(List<MarketplaceSkuVersion> marketplaceSkuVersions) {
        this.marketplaceSkuVersions = marketplaceSkuVersions;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (catalogPlanId() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property catalogPlanId in model MarketplaceSku"));
        }
        if (marketplaceSkuId() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property marketplaceSkuId in model MarketplaceSku"));
        }
        if (operatingSystem() != null) {
            operatingSystem().validate();
        }
        if (marketplaceSkuVersions() != null) {
            marketplaceSkuVersions().forEach(e -> e.validate());
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(MarketplaceSku.class);
}
