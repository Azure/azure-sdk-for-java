// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.edgemarketplace.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.edgemarketplace.models.ResourceProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Publisher properties. */
@Fluent
public final class PublisherProperties {
    /*
     * The resource provisioning state
     */
    @JsonProperty(value = "provisioningState", required = true)
    private ResourceProvisioningState provisioningState;

    /** Creates an instance of PublisherProperties class. */
    public PublisherProperties() {
    }

    /**
     * Get the provisioningState property: The resource provisioning state.
     *
     * @return the provisioningState value.
     */
    public ResourceProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Set the provisioningState property: The resource provisioning state.
     *
     * @param provisioningState the provisioningState value to set.
     * @return the PublisherProperties object itself.
     */
    public PublisherProperties withProvisioningState(ResourceProvisioningState provisioningState) {
        this.provisioningState = provisioningState;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (provisioningState() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property provisioningState in model PublisherProperties"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(PublisherProperties.class);
}
