// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.edgemarketplace.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.edgemarketplace.fluent.PublishersClient;
import com.azure.resourcemanager.edgemarketplace.fluent.models.PublisherInner;
import com.azure.resourcemanager.edgemarketplace.models.Publisher;
import com.azure.resourcemanager.edgemarketplace.models.Publishers;

public final class PublishersImpl implements Publishers {
    private static final ClientLogger LOGGER = new ClientLogger(PublishersImpl.class);

    private final PublishersClient innerClient;

    private final com.azure.resourcemanager.edgemarketplace.EdgeMarketplaceManager serviceManager;

    public PublishersImpl(
        PublishersClient innerClient, com.azure.resourcemanager.edgemarketplace.EdgeMarketplaceManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<Publisher> list(String resourceUri) {
        PagedIterable<PublisherInner> inner = this.serviceClient().list(resourceUri);
        return Utils.mapPage(inner, inner1 -> new PublisherImpl(inner1, this.manager()));
    }

    public PagedIterable<Publisher> list(
        String resourceUri,
        Integer top,
        Integer skip,
        Integer maxPageSize,
        String filter,
        String skipToken,
        Context context) {
        PagedIterable<PublisherInner> inner =
            this.serviceClient().list(resourceUri, top, skip, maxPageSize, filter, skipToken, context);
        return Utils.mapPage(inner, inner1 -> new PublisherImpl(inner1, this.manager()));
    }

    public PagedIterable<Publisher> listBySubscription() {
        PagedIterable<PublisherInner> inner = this.serviceClient().listBySubscription();
        return Utils.mapPage(inner, inner1 -> new PublisherImpl(inner1, this.manager()));
    }

    public PagedIterable<Publisher> listBySubscription(
        Integer top, Integer skip, Integer maxPageSize, String filter, String skipToken, Context context) {
        PagedIterable<PublisherInner> inner =
            this.serviceClient().listBySubscription(top, skip, maxPageSize, filter, skipToken, context);
        return Utils.mapPage(inner, inner1 -> new PublisherImpl(inner1, this.manager()));
    }

    public Response<Publisher> getWithResponse(String resourceUri, String publisherName, Context context) {
        Response<PublisherInner> inner = this.serviceClient().getWithResponse(resourceUri, publisherName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new PublisherImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public Publisher get(String resourceUri, String publisherName) {
        PublisherInner inner = this.serviceClient().get(resourceUri, publisherName);
        if (inner != null) {
            return new PublisherImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private PublishersClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.edgemarketplace.EdgeMarketplaceManager manager() {
        return this.serviceManager;
    }
}
