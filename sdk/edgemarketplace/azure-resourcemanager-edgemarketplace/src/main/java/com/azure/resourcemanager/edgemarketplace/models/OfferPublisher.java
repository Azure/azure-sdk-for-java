// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.edgemarketplace.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The offer publisher. */
@Fluent
public final class OfferPublisher {
    /*
     * The publisher Id
     */
    @JsonProperty(value = "publisherId", required = true)
    private String publisherId;

    /*
     * The publisher name
     */
    @JsonProperty(value = "publisherDisplayName", required = true)
    private String publisherDisplayName;

    /** Creates an instance of OfferPublisher class. */
    public OfferPublisher() {
    }

    /**
     * Get the publisherId property: The publisher Id.
     *
     * @return the publisherId value.
     */
    public String publisherId() {
        return this.publisherId;
    }

    /**
     * Set the publisherId property: The publisher Id.
     *
     * @param publisherId the publisherId value to set.
     * @return the OfferPublisher object itself.
     */
    public OfferPublisher withPublisherId(String publisherId) {
        this.publisherId = publisherId;
        return this;
    }

    /**
     * Get the publisherDisplayName property: The publisher name.
     *
     * @return the publisherDisplayName value.
     */
    public String publisherDisplayName() {
        return this.publisherDisplayName;
    }

    /**
     * Set the publisherDisplayName property: The publisher name.
     *
     * @param publisherDisplayName the publisherDisplayName value to set.
     * @return the OfferPublisher object itself.
     */
    public OfferPublisher withPublisherDisplayName(String publisherDisplayName) {
        this.publisherDisplayName = publisherDisplayName;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (publisherId() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property publisherId in model OfferPublisher"));
        }
        if (publisherDisplayName() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property publisherDisplayName in model OfferPublisher"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(OfferPublisher.class);
}
