// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.durabletask.models;

import com.azure.core.annotation.Generated;
import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * Purgeable orchestration state to be used in retention policies.
 */
public final class PurgeableOrchestrationState extends ExpandableStringEnum<PurgeableOrchestrationState> {
    /**
     * The orchestration is completed.
     */
    @Generated
    public static final PurgeableOrchestrationState COMPLETED = fromString("Completed");

    /**
     * The orchestration is failed.
     */
    @Generated
    public static final PurgeableOrchestrationState FAILED = fromString("Failed");

    /**
     * The orchestration is terminated.
     */
    @Generated
    public static final PurgeableOrchestrationState TERMINATED = fromString("Terminated");

    /**
     * The orchestration is canceled.
     */
    @Generated
    public static final PurgeableOrchestrationState CANCELED = fromString("Canceled");

    /**
     * Creates a new instance of PurgeableOrchestrationState value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Generated
    @Deprecated
    public PurgeableOrchestrationState() {
    }

    /**
     * Creates or finds a PurgeableOrchestrationState from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding PurgeableOrchestrationState.
     */
    @Generated
    public static PurgeableOrchestrationState fromString(String name) {
        return fromString(name, PurgeableOrchestrationState.class);
    }

    /**
     * Gets known PurgeableOrchestrationState values.
     * 
     * @return known PurgeableOrchestrationState values.
     */
    @Generated
    public static Collection<PurgeableOrchestrationState> values() {
        return values(PurgeableOrchestrationState.class);
    }
}
