// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.durabletask.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The retention policy settings for the resource.
 */
@Fluent
public final class RetentionPolicyProperties implements JsonSerializable<RetentionPolicyProperties> {
    /*
     * The status of the last operation
     */
    @Generated
    private ProvisioningState provisioningState;

    /*
     * The orchestration retention policies
     */
    @Generated
    private List<RetentionPolicyDetails> retentionPolicies;

    /**
     * Creates an instance of RetentionPolicyProperties class.
     */
    @Generated
    public RetentionPolicyProperties() {
    }

    /**
     * Get the provisioningState property: The status of the last operation.
     * 
     * @return the provisioningState value.
     */
    @Generated
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the retentionPolicies property: The orchestration retention policies.
     * 
     * @return the retentionPolicies value.
     */
    @Generated
    public List<RetentionPolicyDetails> retentionPolicies() {
        return this.retentionPolicies;
    }

    /**
     * Set the retentionPolicies property: The orchestration retention policies.
     * 
     * @param retentionPolicies the retentionPolicies value to set.
     * @return the RetentionPolicyProperties object itself.
     */
    @Generated
    public RetentionPolicyProperties withRetentionPolicies(List<RetentionPolicyDetails> retentionPolicies) {
        this.retentionPolicies = retentionPolicies;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (retentionPolicies() != null) {
            retentionPolicies().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("retentionPolicies", this.retentionPolicies,
            (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RetentionPolicyProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RetentionPolicyProperties if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the RetentionPolicyProperties.
     */
    public static RetentionPolicyProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RetentionPolicyProperties deserializedRetentionPolicyProperties = new RetentionPolicyProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("provisioningState".equals(fieldName)) {
                    deserializedRetentionPolicyProperties.provisioningState
                        = ProvisioningState.fromString(reader.getString());
                } else if ("retentionPolicies".equals(fieldName)) {
                    List<RetentionPolicyDetails> retentionPolicies
                        = reader.readArray(reader1 -> RetentionPolicyDetails.fromJson(reader1));
                    deserializedRetentionPolicyProperties.retentionPolicies = retentionPolicies;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRetentionPolicyProperties;
        });
    }
}
