// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.durabletask.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.durabletask.fluent.models.TaskHubInner;
import com.azure.resourcemanager.durabletask.models.TaskHub;
import com.azure.resourcemanager.durabletask.models.TaskHubProperties;

public final class TaskHubImpl implements TaskHub, TaskHub.Definition, TaskHub.Update {
    private TaskHubInner innerObject;

    private final com.azure.resourcemanager.durabletask.DurableTaskManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public TaskHubProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public TaskHubInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.durabletask.DurableTaskManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String schedulerName;

    private String taskHubName;

    public TaskHubImpl withExistingScheduler(String resourceGroupName, String schedulerName) {
        this.resourceGroupName = resourceGroupName;
        this.schedulerName = schedulerName;
        return this;
    }

    public TaskHub create() {
        this.innerObject = serviceManager.serviceClient()
            .getTaskHubs()
            .createOrUpdate(resourceGroupName, schedulerName, taskHubName, this.innerModel(), Context.NONE);
        return this;
    }

    public TaskHub create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getTaskHubs()
            .createOrUpdate(resourceGroupName, schedulerName, taskHubName, this.innerModel(), context);
        return this;
    }

    TaskHubImpl(String name, com.azure.resourcemanager.durabletask.DurableTaskManager serviceManager) {
        this.innerObject = new TaskHubInner();
        this.serviceManager = serviceManager;
        this.taskHubName = name;
    }

    public TaskHubImpl update() {
        return this;
    }

    public TaskHub apply() {
        this.innerObject = serviceManager.serviceClient()
            .getTaskHubs()
            .createOrUpdate(resourceGroupName, schedulerName, taskHubName, this.innerModel(), Context.NONE);
        return this;
    }

    public TaskHub apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getTaskHubs()
            .createOrUpdate(resourceGroupName, schedulerName, taskHubName, this.innerModel(), context);
        return this;
    }

    TaskHubImpl(TaskHubInner innerObject, com.azure.resourcemanager.durabletask.DurableTaskManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.schedulerName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "schedulers");
        this.taskHubName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "taskHubs");
    }

    public TaskHub refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getTaskHubs()
            .getWithResponse(resourceGroupName, schedulerName, taskHubName, Context.NONE)
            .getValue();
        return this;
    }

    public TaskHub refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getTaskHubs()
            .getWithResponse(resourceGroupName, schedulerName, taskHubName, context)
            .getValue();
        return this;
    }

    public TaskHubImpl withProperties(TaskHubProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}
