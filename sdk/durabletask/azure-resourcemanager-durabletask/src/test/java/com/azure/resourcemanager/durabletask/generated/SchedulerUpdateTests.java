// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.durabletask.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.durabletask.models.SchedulerPropertiesUpdate;
import com.azure.resourcemanager.durabletask.models.SchedulerSkuName;
import com.azure.resourcemanager.durabletask.models.SchedulerSkuUpdate;
import com.azure.resourcemanager.durabletask.models.SchedulerUpdate;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class SchedulerUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SchedulerUpdate model = BinaryData.fromString(
            "{\"properties\":{\"provisioningState\":\"Succeeded\",\"endpoint\":\"lzydehojwyahux\",\"ipAllowlist\":[\"mqnjaqw\",\"xj\"],\"sku\":{\"name\":\"Dedicated\",\"capacity\":2136786806,\"redundancyState\":\"Zone\"}},\"tags\":{\"vwmf\":\"eg\",\"pjhulsuuvmkj\":\"atscmd\"}}")
            .toObject(SchedulerUpdate.class);
        Assertions.assertEquals("mqnjaqw", model.properties().ipAllowlist().get(0));
        Assertions.assertEquals(SchedulerSkuName.DEDICATED, model.properties().sku().name());
        Assertions.assertEquals(2136786806, model.properties().sku().capacity());
        Assertions.assertEquals("eg", model.tags().get("vwmf"));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SchedulerUpdate model = new SchedulerUpdate()
            .withProperties(new SchedulerPropertiesUpdate().withIpAllowlist(Arrays.asList("mqnjaqw", "xj"))
                .withSku(new SchedulerSkuUpdate().withName(SchedulerSkuName.DEDICATED).withCapacity(2136786806)))
            .withTags(mapOf("vwmf", "eg", "pjhulsuuvmkj", "atscmd"));
        model = BinaryData.fromObject(model).toObject(SchedulerUpdate.class);
        Assertions.assertEquals("mqnjaqw", model.properties().ipAllowlist().get(0));
        Assertions.assertEquals(SchedulerSkuName.DEDICATED, model.properties().sku().name());
        Assertions.assertEquals(2136786806, model.properties().sku().capacity());
        Assertions.assertEquals("eg", model.tags().get("vwmf"));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
