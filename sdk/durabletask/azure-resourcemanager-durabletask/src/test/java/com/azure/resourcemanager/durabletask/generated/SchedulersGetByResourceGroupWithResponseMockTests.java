// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.durabletask.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.durabletask.DurableTaskManager;
import com.azure.resourcemanager.durabletask.models.Scheduler;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SchedulersGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Updating\",\"endpoint\":\"zsgfyccsnewmd\",\"ipAllowlist\":[\"jeiachboosfl\"],\"sku\":{\"name\":\"ro\",\"capacity\":1593237527,\"redundancyState\":\"None\"}},\"location\":\"ehzzvypyqrim\",\"tags\":{\"dqxhcrmnohjtckwh\":\"pvswjdkirso\",\"gr\":\"soifiyipjxsqw\",\"qabnmoc\":\"bznorcjxvsnby\"},\"id\":\"cyshurzafbljjgp\",\"name\":\"toqcjmklja\",\"type\":\"bqidtqaj\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DurableTaskManager manager = DurableTaskManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Scheduler response = manager.schedulers()
            .getByResourceGroupWithResponse("pvkmijcmmxdcuf", "fsrpymzidnse", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("ehzzvypyqrim", response.location());
        Assertions.assertEquals("pvswjdkirso", response.tags().get("dqxhcrmnohjtckwh"));
        Assertions.assertEquals("jeiachboosfl", response.properties().ipAllowlist().get(0));
        Assertions.assertEquals("ro", response.properties().sku().name());
        Assertions.assertEquals(1593237527, response.properties().sku().capacity());
    }
}
