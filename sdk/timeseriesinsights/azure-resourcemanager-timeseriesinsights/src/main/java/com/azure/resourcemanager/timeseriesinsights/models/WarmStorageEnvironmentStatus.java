// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.timeseriesinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** An object that represents the status of warm storage on an environment. */
@JsonFlatten
@Fluent
public class WarmStorageEnvironmentStatus {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(WarmStorageEnvironmentStatus.class);

    /*
     * This string represents the state of warm storage properties usage. It
     * can be "Ok", "Error", "Unknown".
     */
    @JsonProperty(value = "propertiesUsage.state")
    private WarmStoragePropertiesState state;

    /*
     * A value that represents the number of properties used by the environment
     * for S1/S2 SKU and number of properties used by Warm Store for PAYG SKU
     */
    @JsonProperty(value = "propertiesUsage.stateDetails.currentCount")
    private Integer currentCount;

    /*
     * A value that represents the maximum number of properties used allowed by
     * the environment for S1/S2 SKU and maximum number of properties allowed
     * by Warm Store for PAYG SKU.
     */
    @JsonProperty(value = "propertiesUsage.stateDetails.maxCount")
    private Integer maxCount;

    /**
     * Get the state property: This string represents the state of warm storage properties usage. It can be "Ok",
     * "Error", "Unknown".
     *
     * @return the state value.
     */
    public WarmStoragePropertiesState state() {
        return this.state;
    }

    /**
     * Set the state property: This string represents the state of warm storage properties usage. It can be "Ok",
     * "Error", "Unknown".
     *
     * @param state the state value to set.
     * @return the WarmStorageEnvironmentStatus object itself.
     */
    public WarmStorageEnvironmentStatus withState(WarmStoragePropertiesState state) {
        this.state = state;
        return this;
    }

    /**
     * Get the currentCount property: A value that represents the number of properties used by the environment for S1/S2
     * SKU and number of properties used by Warm Store for PAYG SKU.
     *
     * @return the currentCount value.
     */
    public Integer currentCount() {
        return this.currentCount;
    }

    /**
     * Set the currentCount property: A value that represents the number of properties used by the environment for S1/S2
     * SKU and number of properties used by Warm Store for PAYG SKU.
     *
     * @param currentCount the currentCount value to set.
     * @return the WarmStorageEnvironmentStatus object itself.
     */
    public WarmStorageEnvironmentStatus withCurrentCount(Integer currentCount) {
        this.currentCount = currentCount;
        return this;
    }

    /**
     * Get the maxCount property: A value that represents the maximum number of properties used allowed by the
     * environment for S1/S2 SKU and maximum number of properties allowed by Warm Store for PAYG SKU.
     *
     * @return the maxCount value.
     */
    public Integer maxCount() {
        return this.maxCount;
    }

    /**
     * Set the maxCount property: A value that represents the maximum number of properties used allowed by the
     * environment for S1/S2 SKU and maximum number of properties allowed by Warm Store for PAYG SKU.
     *
     * @param maxCount the maxCount value to set.
     * @return the WarmStorageEnvironmentStatus object itself.
     */
    public WarmStorageEnvironmentStatus withMaxCount(Integer maxCount) {
        this.maxCount = maxCount;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
