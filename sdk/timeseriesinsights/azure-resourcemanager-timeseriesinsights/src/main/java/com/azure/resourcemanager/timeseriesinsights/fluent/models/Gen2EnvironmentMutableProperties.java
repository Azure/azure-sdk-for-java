// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.timeseriesinsights.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.timeseriesinsights.models.Gen2StorageConfigurationMutableProperties;
import com.azure.resourcemanager.timeseriesinsights.models.WarmStoreConfigurationProperties;
import com.fasterxml.jackson.annotation.JsonProperty;

/** An object that represents a set of mutable Gen2 environment resource properties. */
@Fluent
public final class Gen2EnvironmentMutableProperties {
    /*
     * The storage configuration provides the connection details that allows the Time Series Insights service to
     * connect to the customer storage account that is used to store the environment's data.
     */
    @JsonProperty(value = "storageConfiguration")
    private Gen2StorageConfigurationMutableProperties storageConfiguration;

    /*
     * The warm store configuration provides the details to create a warm store cache that will retain a copy of the
     * environment's data available for faster query.
     */
    @JsonProperty(value = "warmStoreConfiguration")
    private WarmStoreConfigurationProperties warmStoreConfiguration;

    /** Creates an instance of Gen2EnvironmentMutableProperties class. */
    public Gen2EnvironmentMutableProperties() {
    }

    /**
     * Get the storageConfiguration property: The storage configuration provides the connection details that allows the
     * Time Series Insights service to connect to the customer storage account that is used to store the environment's
     * data.
     *
     * @return the storageConfiguration value.
     */
    public Gen2StorageConfigurationMutableProperties storageConfiguration() {
        return this.storageConfiguration;
    }

    /**
     * Set the storageConfiguration property: The storage configuration provides the connection details that allows the
     * Time Series Insights service to connect to the customer storage account that is used to store the environment's
     * data.
     *
     * @param storageConfiguration the storageConfiguration value to set.
     * @return the Gen2EnvironmentMutableProperties object itself.
     */
    public Gen2EnvironmentMutableProperties withStorageConfiguration(
        Gen2StorageConfigurationMutableProperties storageConfiguration) {
        this.storageConfiguration = storageConfiguration;
        return this;
    }

    /**
     * Get the warmStoreConfiguration property: The warm store configuration provides the details to create a warm store
     * cache that will retain a copy of the environment's data available for faster query.
     *
     * @return the warmStoreConfiguration value.
     */
    public WarmStoreConfigurationProperties warmStoreConfiguration() {
        return this.warmStoreConfiguration;
    }

    /**
     * Set the warmStoreConfiguration property: The warm store configuration provides the details to create a warm store
     * cache that will retain a copy of the environment's data available for faster query.
     *
     * @param warmStoreConfiguration the warmStoreConfiguration value to set.
     * @return the Gen2EnvironmentMutableProperties object itself.
     */
    public Gen2EnvironmentMutableProperties withWarmStoreConfiguration(
        WarmStoreConfigurationProperties warmStoreConfiguration) {
        this.warmStoreConfiguration = warmStoreConfiguration;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (storageConfiguration() != null) {
            storageConfiguration().validate();
        }
        if (warmStoreConfiguration() != null) {
            warmStoreConfiguration().validate();
        }
    }
}
