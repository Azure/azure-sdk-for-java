// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.timeseriesinsights.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.timeseriesinsights.models.EventSourceMutableProperties;
import java.io.IOException;

/**
 * An object that represents a set of mutable EventHub event source resource properties.
 */
@Fluent
public final class EventHubEventSourceMutableProperties extends EventSourceMutableProperties {
    /*
     * The value of the shared access key that grants the Time Series Insights service read access to the event hub.
     * This property is not shown in event source responses.
     */
    private String sharedAccessKey;

    /**
     * Creates an instance of EventHubEventSourceMutableProperties class.
     */
    public EventHubEventSourceMutableProperties() {
    }

    /**
     * Get the sharedAccessKey property: The value of the shared access key that grants the Time Series Insights service
     * read access to the event hub. This property is not shown in event source responses.
     * 
     * @return the sharedAccessKey value.
     */
    public String sharedAccessKey() {
        return this.sharedAccessKey;
    }

    /**
     * Set the sharedAccessKey property: The value of the shared access key that grants the Time Series Insights service
     * read access to the event hub. This property is not shown in event source responses.
     * 
     * @param sharedAccessKey the sharedAccessKey value to set.
     * @return the EventHubEventSourceMutableProperties object itself.
     */
    public EventHubEventSourceMutableProperties withSharedAccessKey(String sharedAccessKey) {
        this.sharedAccessKey = sharedAccessKey;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventHubEventSourceMutableProperties withTimestampPropertyName(String timestampPropertyName) {
        super.withTimestampPropertyName(timestampPropertyName);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("timestampPropertyName", timestampPropertyName());
        jsonWriter.writeStringField("sharedAccessKey", this.sharedAccessKey);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of EventHubEventSourceMutableProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of EventHubEventSourceMutableProperties if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the EventHubEventSourceMutableProperties.
     */
    public static EventHubEventSourceMutableProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            EventHubEventSourceMutableProperties deserializedEventHubEventSourceMutableProperties
                = new EventHubEventSourceMutableProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("timestampPropertyName".equals(fieldName)) {
                    deserializedEventHubEventSourceMutableProperties.withTimestampPropertyName(reader.getString());
                } else if ("sharedAccessKey".equals(fieldName)) {
                    deserializedEventHubEventSourceMutableProperties.sharedAccessKey = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedEventHubEventSourceMutableProperties;
        });
    }
}
