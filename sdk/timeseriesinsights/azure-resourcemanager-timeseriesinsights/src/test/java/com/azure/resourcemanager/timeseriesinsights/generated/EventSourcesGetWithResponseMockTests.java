// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.timeseriesinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.timeseriesinsights.TimeSeriesInsightsManager;
import com.azure.resourcemanager.timeseriesinsights.models.EventSourceResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class EventSourcesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"kind\":\"EventSourceResource\",\"location\":\"suiizynkedyat\",\"tags\":{\"mypyynpcdpu\":\"hqmibzyhwit\",\"sorgj\":\"nzgmwznmabik\",\"vokotllxdyh\":\"xbldtlwwrlkdmtn\"},\"id\":\"syocogjltdtbnnha\",\"name\":\"oocrkvcikhnv\",\"type\":\"amqgxqquezikyw\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        TimeSeriesInsightsManager manager = TimeSeriesInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        EventSourceResource response = manager.eventSources()
            .getWithResponse("ntorzihleosjswsr", "slyzrpzbchckqq", "qioxi", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("suiizynkedyat", response.location());
        Assertions.assertEquals("hqmibzyhwit", response.tags().get("mypyynpcdpu"));
    }
}
