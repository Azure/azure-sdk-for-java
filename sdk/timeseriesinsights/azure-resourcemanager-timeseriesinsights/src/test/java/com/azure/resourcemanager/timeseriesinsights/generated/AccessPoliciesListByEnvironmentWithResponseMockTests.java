// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.timeseriesinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.timeseriesinsights.TimeSeriesInsightsManager;
import com.azure.resourcemanager.timeseriesinsights.models.AccessPolicyListResponse;
import com.azure.resourcemanager.timeseriesinsights.models.AccessPolicyRole;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AccessPoliciesListByEnvironmentWithResponseMockTests {
    @Test
    public void testListByEnvironmentWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"principalObjectId\":\"hxx\",\"description\":\"yq\",\"roles\":[\"Contributor\",\"Reader\",\"Reader\"]},\"id\":\"ztppriolxorjalto\",\"name\":\"mncwsobqwcsdb\",\"type\":\"wdcfhucqdpfuv\"},{\"properties\":{\"principalObjectId\":\"bjj\",\"description\":\"nvxbvt\",\"roles\":[\"Reader\"]},\"id\":\"tncormrlxqtvco\",\"name\":\"udflvkgjubgdknn\",\"type\":\"vsaznqntorudsg\"},{\"properties\":{\"principalObjectId\":\"mkycgra\",\"description\":\"juetaebur\",\"roles\":[\"Contributor\",\"Reader\"]},\"id\":\"vsmzlxwab\",\"name\":\"q\",\"type\":\"efkifr\"},{\"properties\":{\"principalObjectId\":\"u\",\"description\":\"jmqlgkfb\",\"roles\":[\"Reader\",\"Reader\"]},\"id\":\"ongbjcnt\",\"name\":\"jitcjedftwwaez\",\"type\":\"ojvdcpzfoqo\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        TimeSeriesInsightsManager manager = TimeSeriesInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        AccessPolicyListResponse response = manager.accessPolicies()
            .listByEnvironmentWithResponse("fn", "ckw", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("hxx", response.value().get(0).principalObjectId());
        Assertions.assertEquals("yq", response.value().get(0).description());
        Assertions.assertEquals(AccessPolicyRole.CONTRIBUTOR, response.value().get(0).roles().get(0));
    }
}
