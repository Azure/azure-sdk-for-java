// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.timeseriesinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.timeseriesinsights.TimeSeriesInsightsManager;
import com.azure.resourcemanager.timeseriesinsights.models.EnvironmentResource;
import com.azure.resourcemanager.timeseriesinsights.models.SkuName;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class EnvironmentsGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"kind\":\"EnvironmentResource\",\"sku\":{\"name\":\"S1\",\"capacity\":1702938248},\"location\":\"zbtbhj\",\"tags\":{\"fphsdyhtozfikdow\":\"kfgohdneue\"},\"id\":\"quuvxzxcl\",\"name\":\"ithhqzon\",\"type\":\"sg\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        TimeSeriesInsightsManager manager = TimeSeriesInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        EnvironmentResource response = manager.environments()
            .getByResourceGroupWithResponse("pbttdum", "rp", "xe", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("zbtbhj", response.location());
        Assertions.assertEquals("kfgohdneue", response.tags().get("fphsdyhtozfikdow"));
        Assertions.assertEquals(SkuName.S1, response.sku().name());
        Assertions.assertEquals(1702938248, response.sku().capacity());
    }
}
