// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.timeseriesinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.timeseriesinsights.fluent.models.EventSourceResourceInner;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class EventSourceResourceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        EventSourceResourceInner model =
            BinaryData
                .fromString(
                    "{\"kind\":\"EventSourceResource\",\"location\":\"djwzrlov\",\"tags\":{\"s\":\"whijcoejctbza\",\"ukdkexxppofmxa\":\"sycbkbfk\",\"jpgd\":\"c\",\"j\":\"toc\"},\"id\":\"hvpmoue\",\"name\":\"hd\",\"type\":\"xibqeojnx\"}")
                .toObject(EventSourceResourceInner.class);
        Assertions.assertEquals("djwzrlov", model.location());
        Assertions.assertEquals("whijcoejctbza", model.tags().get("s"));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        EventSourceResourceInner model =
            new EventSourceResourceInner()
                .withLocation("djwzrlov")
                .withTags(mapOf("s", "whijcoejctbza", "ukdkexxppofmxa", "sycbkbfk", "jpgd", "c", "j", "toc"));
        model = BinaryData.fromObject(model).toObject(EventSourceResourceInner.class);
        Assertions.assertEquals("djwzrlov", model.location());
        Assertions.assertEquals("whijcoejctbza", model.tags().get("s"));
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
