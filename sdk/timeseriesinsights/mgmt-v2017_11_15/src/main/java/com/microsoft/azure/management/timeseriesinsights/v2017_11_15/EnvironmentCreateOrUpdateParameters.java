/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.timeseriesinsights.v2017_11_15;

import org.joda.time.Period;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;

/**
 * Parameters supplied to the CreateOrUpdate Environment operation.
 */
@JsonFlatten
public class EnvironmentCreateOrUpdateParameters extends CreateOrUpdateTrackedResourceProperties {
    /**
     * The sku determines the capacity of the environment, the SLA (in
     * queries-per-minute and total capacity), and the billing rate.
     */
    @JsonProperty(value = "sku", required = true)
    private Sku sku;

    /**
     * ISO8601 timespan specifying the minimum number of days the environment's
     * events will be available for query.
     */
    @JsonProperty(value = "properties.dataRetentionTime", required = true)
    private Period dataRetentionTime;

    /**
     * The behavior the Time Series Insights service should take when the
     * environment's capacity has been exceeded. If "PauseIngress" is
     * specified, new events will not be read from the event source. If
     * "PurgeOldData" is specified, new events will continue to be read and old
     * events will be deleted from the environment. The default behavior is
     * PurgeOldData. Possible values include: 'PurgeOldData', 'PauseIngress'.
     */
    @JsonProperty(value = "properties.storageLimitExceededBehavior")
    private StorageLimitExceededBehavior storageLimitExceededBehavior;

    /**
     * The list of partition keys according to which the data in the
     * environment will be ordered.
     */
    @JsonProperty(value = "properties.partitionKeyProperties")
    private List<PartitionKeyProperty> partitionKeyProperties;

    /**
     * Get the sku determines the capacity of the environment, the SLA (in queries-per-minute and total capacity), and the billing rate.
     *
     * @return the sku value
     */
    public Sku sku() {
        return this.sku;
    }

    /**
     * Set the sku determines the capacity of the environment, the SLA (in queries-per-minute and total capacity), and the billing rate.
     *
     * @param sku the sku value to set
     * @return the EnvironmentCreateOrUpdateParameters object itself.
     */
    public EnvironmentCreateOrUpdateParameters withSku(Sku sku) {
        this.sku = sku;
        return this;
    }

    /**
     * Get iSO8601 timespan specifying the minimum number of days the environment's events will be available for query.
     *
     * @return the dataRetentionTime value
     */
    public Period dataRetentionTime() {
        return this.dataRetentionTime;
    }

    /**
     * Set iSO8601 timespan specifying the minimum number of days the environment's events will be available for query.
     *
     * @param dataRetentionTime the dataRetentionTime value to set
     * @return the EnvironmentCreateOrUpdateParameters object itself.
     */
    public EnvironmentCreateOrUpdateParameters withDataRetentionTime(Period dataRetentionTime) {
        this.dataRetentionTime = dataRetentionTime;
        return this;
    }

    /**
     * Get the behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If "PauseIngress" is specified, new events will not be read from the event source. If "PurgeOldData" is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData. Possible values include: 'PurgeOldData', 'PauseIngress'.
     *
     * @return the storageLimitExceededBehavior value
     */
    public StorageLimitExceededBehavior storageLimitExceededBehavior() {
        return this.storageLimitExceededBehavior;
    }

    /**
     * Set the behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If "PauseIngress" is specified, new events will not be read from the event source. If "PurgeOldData" is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData. Possible values include: 'PurgeOldData', 'PauseIngress'.
     *
     * @param storageLimitExceededBehavior the storageLimitExceededBehavior value to set
     * @return the EnvironmentCreateOrUpdateParameters object itself.
     */
    public EnvironmentCreateOrUpdateParameters withStorageLimitExceededBehavior(StorageLimitExceededBehavior storageLimitExceededBehavior) {
        this.storageLimitExceededBehavior = storageLimitExceededBehavior;
        return this;
    }

    /**
     * Get the list of partition keys according to which the data in the environment will be ordered.
     *
     * @return the partitionKeyProperties value
     */
    public List<PartitionKeyProperty> partitionKeyProperties() {
        return this.partitionKeyProperties;
    }

    /**
     * Set the list of partition keys according to which the data in the environment will be ordered.
     *
     * @param partitionKeyProperties the partitionKeyProperties value to set
     * @return the EnvironmentCreateOrUpdateParameters object itself.
     */
    public EnvironmentCreateOrUpdateParameters withPartitionKeyProperties(List<PartitionKeyProperty> partitionKeyProperties) {
        this.partitionKeyProperties = partitionKeyProperties;
        return this;
    }

}
