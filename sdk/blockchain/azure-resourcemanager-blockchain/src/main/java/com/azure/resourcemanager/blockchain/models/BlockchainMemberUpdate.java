// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.blockchain.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.blockchain.fluent.models.BlockchainMemberPropertiesUpdate;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/** Update the payload of the blockchain member which is exposed in the request/response of the resource provider. */
@Fluent
public final class BlockchainMemberUpdate {
    /*
     * Tags of the service which is a list of key value pairs that describes
     * the resource.
     */
    @JsonProperty(value = "tags")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> tags;

    /*
     * Gets or sets the blockchain member update properties.
     */
    @JsonProperty(value = "properties")
    private BlockchainMemberPropertiesUpdate innerProperties;

    /**
     * Get the tags property: Tags of the service which is a list of key value pairs that describes the resource.
     *
     * @return the tags value.
     */
    public Map<String, String> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: Tags of the service which is a list of key value pairs that describes the resource.
     *
     * @param tags the tags value to set.
     * @return the BlockchainMemberUpdate object itself.
     */
    public BlockchainMemberUpdate withTags(Map<String, String> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get the innerProperties property: Gets or sets the blockchain member update properties.
     *
     * @return the innerProperties value.
     */
    private BlockchainMemberPropertiesUpdate innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the consortiumManagementAccountPassword property: Sets the managed consortium management account password.
     *
     * @return the consortiumManagementAccountPassword value.
     */
    public String consortiumManagementAccountPassword() {
        return this.innerProperties() == null ? null : this.innerProperties().consortiumManagementAccountPassword();
    }

    /**
     * Set the consortiumManagementAccountPassword property: Sets the managed consortium management account password.
     *
     * @param consortiumManagementAccountPassword the consortiumManagementAccountPassword value to set.
     * @return the BlockchainMemberUpdate object itself.
     */
    public BlockchainMemberUpdate withConsortiumManagementAccountPassword(String consortiumManagementAccountPassword) {
        if (this.innerProperties() == null) {
            this.innerProperties = new BlockchainMemberPropertiesUpdate();
        }
        this.innerProperties().withConsortiumManagementAccountPassword(consortiumManagementAccountPassword);
        return this;
    }

    /**
     * Get the password property: Sets the transaction node dns endpoint basic auth password.
     *
     * @return the password value.
     */
    public String password() {
        return this.innerProperties() == null ? null : this.innerProperties().password();
    }

    /**
     * Set the password property: Sets the transaction node dns endpoint basic auth password.
     *
     * @param password the password value to set.
     * @return the BlockchainMemberUpdate object itself.
     */
    public BlockchainMemberUpdate withPassword(String password) {
        if (this.innerProperties() == null) {
            this.innerProperties = new BlockchainMemberPropertiesUpdate();
        }
        this.innerProperties().withPassword(password);
        return this;
    }

    /**
     * Get the firewallRules property: Gets or sets the firewall rules.
     *
     * @return the firewallRules value.
     */
    public List<FirewallRule> firewallRules() {
        return this.innerProperties() == null ? null : this.innerProperties().firewallRules();
    }

    /**
     * Set the firewallRules property: Gets or sets the firewall rules.
     *
     * @param firewallRules the firewallRules value to set.
     * @return the BlockchainMemberUpdate object itself.
     */
    public BlockchainMemberUpdate withFirewallRules(List<FirewallRule> firewallRules) {
        if (this.innerProperties() == null) {
            this.innerProperties = new BlockchainMemberPropertiesUpdate();
        }
        this.innerProperties().withFirewallRules(firewallRules);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
