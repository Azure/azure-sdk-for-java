// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.blockchain.models;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of Locations. */
public interface Locations {
    /**
     * To check whether a resource name is available.
     *
     * @param locationName Location Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return name availability payload which is exposed in the response of the resource provider.
     */
    NameAvailability checkNameAvailability(String locationName);

    /**
     * To check whether a resource name is available.
     *
     * @param locationName Location Name.
     * @param nameAvailabilityRequest Name availability request payload.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return name availability payload which is exposed in the response of the resource provider.
     */
    Response<NameAvailability> checkNameAvailabilityWithResponse(
        String locationName, NameAvailabilityRequest nameAvailabilityRequest, Context context);

    /**
     * Lists the available consortiums for a subscription.
     *
     * @param locationName Location Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of the consortium payload.
     */
    ConsortiumCollection listConsortiums(String locationName);

    /**
     * Lists the available consortiums for a subscription.
     *
     * @param locationName Location Name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of the consortium payload.
     */
    Response<ConsortiumCollection> listConsortiumsWithResponse(String locationName, Context context);
}
