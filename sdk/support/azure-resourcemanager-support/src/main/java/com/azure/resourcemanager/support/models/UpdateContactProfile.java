// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.support.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Contact information associated with the support ticket.
 */
@Fluent
public final class UpdateContactProfile implements JsonSerializable<UpdateContactProfile> {
    /*
     * First name.
     */
    private String firstName;

    /*
     * Last name.
     */
    private String lastName;

    /*
     * Preferred contact method.
     */
    private PreferredContactMethod preferredContactMethod;

    /*
     * Primary email address.
     */
    private String primaryEmailAddress;

    /*
     * Email addresses listed will be copied on any correspondence about the support ticket.
     */
    private List<String> additionalEmailAddresses;

    /*
     * Phone number. This is required if preferred contact method is phone.
     */
    private String phoneNumber;

    /*
     * Time zone of the user. This is the name of the time zone from [Microsoft Time Zone Index
     * Values](https://support.microsoft.com/help/973627/microsoft-time-zone-index-values).
     */
    private String preferredTimeZone;

    /*
     * Country of the user. This is the ISO 3166-1 alpha-3 code.
     */
    private String country;

    /*
     * Preferred language of support from Azure. Support languages vary based on the severity you choose for your
     * support ticket. Learn more at [Azure Severity and
     * responsiveness](https://azure.microsoft.com/support/plans/response/). Use the standard language-country code.
     * Valid values are 'en-us' for English, 'zh-hans' for Chinese, 'es-es' for Spanish, 'fr-fr' for French, 'ja-jp' for
     * Japanese, 'ko-kr' for Korean, 'ru-ru' for Russian, 'pt-br' for Portuguese, 'it-it' for Italian, 'zh-tw' for
     * Chinese and 'de-de' for German.
     */
    private String preferredSupportLanguage;

    /**
     * Creates an instance of UpdateContactProfile class.
     */
    public UpdateContactProfile() {
    }

    /**
     * Get the firstName property: First name.
     * 
     * @return the firstName value.
     */
    public String firstName() {
        return this.firstName;
    }

    /**
     * Set the firstName property: First name.
     * 
     * @param firstName the firstName value to set.
     * @return the UpdateContactProfile object itself.
     */
    public UpdateContactProfile withFirstName(String firstName) {
        this.firstName = firstName;
        return this;
    }

    /**
     * Get the lastName property: Last name.
     * 
     * @return the lastName value.
     */
    public String lastName() {
        return this.lastName;
    }

    /**
     * Set the lastName property: Last name.
     * 
     * @param lastName the lastName value to set.
     * @return the UpdateContactProfile object itself.
     */
    public UpdateContactProfile withLastName(String lastName) {
        this.lastName = lastName;
        return this;
    }

    /**
     * Get the preferredContactMethod property: Preferred contact method.
     * 
     * @return the preferredContactMethod value.
     */
    public PreferredContactMethod preferredContactMethod() {
        return this.preferredContactMethod;
    }

    /**
     * Set the preferredContactMethod property: Preferred contact method.
     * 
     * @param preferredContactMethod the preferredContactMethod value to set.
     * @return the UpdateContactProfile object itself.
     */
    public UpdateContactProfile withPreferredContactMethod(PreferredContactMethod preferredContactMethod) {
        this.preferredContactMethod = preferredContactMethod;
        return this;
    }

    /**
     * Get the primaryEmailAddress property: Primary email address.
     * 
     * @return the primaryEmailAddress value.
     */
    public String primaryEmailAddress() {
        return this.primaryEmailAddress;
    }

    /**
     * Set the primaryEmailAddress property: Primary email address.
     * 
     * @param primaryEmailAddress the primaryEmailAddress value to set.
     * @return the UpdateContactProfile object itself.
     */
    public UpdateContactProfile withPrimaryEmailAddress(String primaryEmailAddress) {
        this.primaryEmailAddress = primaryEmailAddress;
        return this;
    }

    /**
     * Get the additionalEmailAddresses property: Email addresses listed will be copied on any correspondence about the
     * support ticket.
     * 
     * @return the additionalEmailAddresses value.
     */
    public List<String> additionalEmailAddresses() {
        return this.additionalEmailAddresses;
    }

    /**
     * Set the additionalEmailAddresses property: Email addresses listed will be copied on any correspondence about the
     * support ticket.
     * 
     * @param additionalEmailAddresses the additionalEmailAddresses value to set.
     * @return the UpdateContactProfile object itself.
     */
    public UpdateContactProfile withAdditionalEmailAddresses(List<String> additionalEmailAddresses) {
        this.additionalEmailAddresses = additionalEmailAddresses;
        return this;
    }

    /**
     * Get the phoneNumber property: Phone number. This is required if preferred contact method is phone.
     * 
     * @return the phoneNumber value.
     */
    public String phoneNumber() {
        return this.phoneNumber;
    }

    /**
     * Set the phoneNumber property: Phone number. This is required if preferred contact method is phone.
     * 
     * @param phoneNumber the phoneNumber value to set.
     * @return the UpdateContactProfile object itself.
     */
    public UpdateContactProfile withPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
        return this;
    }

    /**
     * Get the preferredTimeZone property: Time zone of the user. This is the name of the time zone from [Microsoft Time
     * Zone Index Values](https://support.microsoft.com/help/973627/microsoft-time-zone-index-values).
     * 
     * @return the preferredTimeZone value.
     */
    public String preferredTimeZone() {
        return this.preferredTimeZone;
    }

    /**
     * Set the preferredTimeZone property: Time zone of the user. This is the name of the time zone from [Microsoft Time
     * Zone Index Values](https://support.microsoft.com/help/973627/microsoft-time-zone-index-values).
     * 
     * @param preferredTimeZone the preferredTimeZone value to set.
     * @return the UpdateContactProfile object itself.
     */
    public UpdateContactProfile withPreferredTimeZone(String preferredTimeZone) {
        this.preferredTimeZone = preferredTimeZone;
        return this;
    }

    /**
     * Get the country property: Country of the user. This is the ISO 3166-1 alpha-3 code.
     * 
     * @return the country value.
     */
    public String country() {
        return this.country;
    }

    /**
     * Set the country property: Country of the user. This is the ISO 3166-1 alpha-3 code.
     * 
     * @param country the country value to set.
     * @return the UpdateContactProfile object itself.
     */
    public UpdateContactProfile withCountry(String country) {
        this.country = country;
        return this;
    }

    /**
     * Get the preferredSupportLanguage property: Preferred language of support from Azure. Support languages vary based
     * on the severity you choose for your support ticket. Learn more at [Azure Severity and
     * responsiveness](https://azure.microsoft.com/support/plans/response/). Use the standard language-country code.
     * Valid values are 'en-us' for English, 'zh-hans' for Chinese, 'es-es' for Spanish, 'fr-fr' for French, 'ja-jp' for
     * Japanese, 'ko-kr' for Korean, 'ru-ru' for Russian, 'pt-br' for Portuguese, 'it-it' for Italian, 'zh-tw' for
     * Chinese and 'de-de' for German.
     * 
     * @return the preferredSupportLanguage value.
     */
    public String preferredSupportLanguage() {
        return this.preferredSupportLanguage;
    }

    /**
     * Set the preferredSupportLanguage property: Preferred language of support from Azure. Support languages vary based
     * on the severity you choose for your support ticket. Learn more at [Azure Severity and
     * responsiveness](https://azure.microsoft.com/support/plans/response/). Use the standard language-country code.
     * Valid values are 'en-us' for English, 'zh-hans' for Chinese, 'es-es' for Spanish, 'fr-fr' for French, 'ja-jp' for
     * Japanese, 'ko-kr' for Korean, 'ru-ru' for Russian, 'pt-br' for Portuguese, 'it-it' for Italian, 'zh-tw' for
     * Chinese and 'de-de' for German.
     * 
     * @param preferredSupportLanguage the preferredSupportLanguage value to set.
     * @return the UpdateContactProfile object itself.
     */
    public UpdateContactProfile withPreferredSupportLanguage(String preferredSupportLanguage) {
        this.preferredSupportLanguage = preferredSupportLanguage;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("firstName", this.firstName);
        jsonWriter.writeStringField("lastName", this.lastName);
        jsonWriter.writeStringField("preferredContactMethod",
            this.preferredContactMethod == null ? null : this.preferredContactMethod.toString());
        jsonWriter.writeStringField("primaryEmailAddress", this.primaryEmailAddress);
        jsonWriter.writeArrayField("additionalEmailAddresses", this.additionalEmailAddresses,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeStringField("phoneNumber", this.phoneNumber);
        jsonWriter.writeStringField("preferredTimeZone", this.preferredTimeZone);
        jsonWriter.writeStringField("country", this.country);
        jsonWriter.writeStringField("preferredSupportLanguage", this.preferredSupportLanguage);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of UpdateContactProfile from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of UpdateContactProfile if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the UpdateContactProfile.
     */
    public static UpdateContactProfile fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            UpdateContactProfile deserializedUpdateContactProfile = new UpdateContactProfile();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("firstName".equals(fieldName)) {
                    deserializedUpdateContactProfile.firstName = reader.getString();
                } else if ("lastName".equals(fieldName)) {
                    deserializedUpdateContactProfile.lastName = reader.getString();
                } else if ("preferredContactMethod".equals(fieldName)) {
                    deserializedUpdateContactProfile.preferredContactMethod
                        = PreferredContactMethod.fromString(reader.getString());
                } else if ("primaryEmailAddress".equals(fieldName)) {
                    deserializedUpdateContactProfile.primaryEmailAddress = reader.getString();
                } else if ("additionalEmailAddresses".equals(fieldName)) {
                    List<String> additionalEmailAddresses = reader.readArray(reader1 -> reader1.getString());
                    deserializedUpdateContactProfile.additionalEmailAddresses = additionalEmailAddresses;
                } else if ("phoneNumber".equals(fieldName)) {
                    deserializedUpdateContactProfile.phoneNumber = reader.getString();
                } else if ("preferredTimeZone".equals(fieldName)) {
                    deserializedUpdateContactProfile.preferredTimeZone = reader.getString();
                } else if ("country".equals(fieldName)) {
                    deserializedUpdateContactProfile.country = reader.getString();
                } else if ("preferredSupportLanguage".equals(fieldName)) {
                    deserializedUpdateContactProfile.preferredSupportLanguage = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedUpdateContactProfile;
        });
    }
}
