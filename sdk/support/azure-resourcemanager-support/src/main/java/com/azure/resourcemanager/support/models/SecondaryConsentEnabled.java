// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.support.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * This property indicates whether secondary consent is present for problem classification.
 */
@Fluent
public final class SecondaryConsentEnabled {
    /*
     * User consent description.
     */
    @JsonProperty(value = "description")
    private String description;

    /*
     * The Azure service for which secondary consent is needed for case creation.
     */
    @JsonProperty(value = "type")
    private String type;

    /**
     * Creates an instance of SecondaryConsentEnabled class.
     */
    public SecondaryConsentEnabled() {
    }

    /**
     * Get the description property: User consent description.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: User consent description.
     * 
     * @param description the description value to set.
     * @return the SecondaryConsentEnabled object itself.
     */
    public SecondaryConsentEnabled withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the type property: The Azure service for which secondary consent is needed for case creation.
     * 
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Set the type property: The Azure service for which secondary consent is needed for case creation.
     * 
     * @param type the type value to set.
     * @return the SecondaryConsentEnabled object itself.
     */
    public SecondaryConsentEnabled withType(String type) {
        this.type = type;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
