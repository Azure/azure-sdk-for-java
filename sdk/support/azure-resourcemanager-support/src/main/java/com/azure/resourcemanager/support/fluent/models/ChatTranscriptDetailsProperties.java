// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.support.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.support.models.MessageProperties;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.List;

/**
 * Describes the properties of a Chat Transcript Details resource.
 */
@Fluent
public final class ChatTranscriptDetailsProperties implements JsonSerializable<ChatTranscriptDetailsProperties> {
    /*
     * List of chat transcript communication resources.
     */
    private List<MessageProperties> messages;

    /*
     * Time in UTC (ISO 8601 format) when the chat began.
     */
    private OffsetDateTime startTime;

    /**
     * Creates an instance of ChatTranscriptDetailsProperties class.
     */
    public ChatTranscriptDetailsProperties() {
    }

    /**
     * Get the messages property: List of chat transcript communication resources.
     * 
     * @return the messages value.
     */
    public List<MessageProperties> messages() {
        return this.messages;
    }

    /**
     * Set the messages property: List of chat transcript communication resources.
     * 
     * @param messages the messages value to set.
     * @return the ChatTranscriptDetailsProperties object itself.
     */
    public ChatTranscriptDetailsProperties withMessages(List<MessageProperties> messages) {
        this.messages = messages;
        return this;
    }

    /**
     * Get the startTime property: Time in UTC (ISO 8601 format) when the chat began.
     * 
     * @return the startTime value.
     */
    public OffsetDateTime startTime() {
        return this.startTime;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (messages() != null) {
            messages().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("messages", this.messages, (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ChatTranscriptDetailsProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ChatTranscriptDetailsProperties if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ChatTranscriptDetailsProperties.
     */
    public static ChatTranscriptDetailsProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ChatTranscriptDetailsProperties deserializedChatTranscriptDetailsProperties
                = new ChatTranscriptDetailsProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("messages".equals(fieldName)) {
                    List<MessageProperties> messages = reader.readArray(reader1 -> MessageProperties.fromJson(reader1));
                    deserializedChatTranscriptDetailsProperties.messages = messages;
                } else if ("startTime".equals(fieldName)) {
                    deserializedChatTranscriptDetailsProperties.startTime = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedChatTranscriptDetailsProperties;
        });
    }
}
