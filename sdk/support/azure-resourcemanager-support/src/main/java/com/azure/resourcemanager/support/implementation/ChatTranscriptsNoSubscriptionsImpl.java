// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.support.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.support.fluent.ChatTranscriptsNoSubscriptionsClient;
import com.azure.resourcemanager.support.fluent.models.ChatTranscriptDetailsInner;
import com.azure.resourcemanager.support.models.ChatTranscriptDetails;
import com.azure.resourcemanager.support.models.ChatTranscriptsNoSubscriptions;

public final class ChatTranscriptsNoSubscriptionsImpl implements ChatTranscriptsNoSubscriptions {
    private static final ClientLogger LOGGER = new ClientLogger(ChatTranscriptsNoSubscriptionsImpl.class);

    private final ChatTranscriptsNoSubscriptionsClient innerClient;

    private final com.azure.resourcemanager.support.SupportManager serviceManager;

    public ChatTranscriptsNoSubscriptionsImpl(
        ChatTranscriptsNoSubscriptionsClient innerClient,
        com.azure.resourcemanager.support.SupportManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<ChatTranscriptDetails> getWithResponse(
        String supportTicketName, String chatTranscriptName, Context context) {
        Response<ChatTranscriptDetailsInner> inner =
            this.serviceClient().getWithResponse(supportTicketName, chatTranscriptName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new ChatTranscriptDetailsImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public ChatTranscriptDetails get(String supportTicketName, String chatTranscriptName) {
        ChatTranscriptDetailsInner inner = this.serviceClient().get(supportTicketName, chatTranscriptName);
        if (inner != null) {
            return new ChatTranscriptDetailsImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private ChatTranscriptsNoSubscriptionsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.support.SupportManager manager() {
        return this.serviceManager;
    }
}
