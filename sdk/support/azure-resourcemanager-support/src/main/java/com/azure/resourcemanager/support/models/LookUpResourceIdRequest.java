// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.support.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The look up resource Id request body.
 */
@Fluent
public final class LookUpResourceIdRequest {
    /*
     * The System generated Id that is unique. Use supportTicketId property for Microsoft.Support/supportTickets
     * resource type.
     */
    @JsonProperty(value = "identifier")
    private String identifier;

    /*
     * The type of resource.
     */
    @JsonProperty(value = "type")
    private ResourceType type;

    /**
     * Creates an instance of LookUpResourceIdRequest class.
     */
    public LookUpResourceIdRequest() {
    }

    /**
     * Get the identifier property: The System generated Id that is unique. Use supportTicketId property for
     * Microsoft.Support/supportTickets resource type.
     * 
     * @return the identifier value.
     */
    public String identifier() {
        return this.identifier;
    }

    /**
     * Set the identifier property: The System generated Id that is unique. Use supportTicketId property for
     * Microsoft.Support/supportTickets resource type.
     * 
     * @param identifier the identifier value to set.
     * @return the LookUpResourceIdRequest object itself.
     */
    public LookUpResourceIdRequest withIdentifier(String identifier) {
        this.identifier = identifier;
        return this;
    }

    /**
     * Get the type property: The type of resource.
     * 
     * @return the type value.
     */
    public ResourceType type() {
        return this.type;
    }

    /**
     * Set the type property: The type of resource.
     * 
     * @param type the type value to set.
     * @return the LookUpResourceIdRequest object itself.
     */
    public LookUpResourceIdRequest withType(ResourceType type) {
        this.type = type;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
