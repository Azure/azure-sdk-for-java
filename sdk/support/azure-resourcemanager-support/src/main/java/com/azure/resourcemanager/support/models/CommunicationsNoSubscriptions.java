// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.support.models;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.support.fluent.models.CommunicationDetailsInner;

/** Resource collection API of CommunicationsNoSubscriptions. */
public interface CommunicationsNoSubscriptions {
    /**
     * Check the availability of a resource name. This API should be used to check the uniqueness of the name for adding
     * a new communication to the support ticket.
     *
     * @param supportTicketName Support ticket name.
     * @param checkNameAvailabilityInput Input to check.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return output of check name availability API along with {@link Response}.
     */
    Response<CheckNameAvailabilityOutput> checkNameAvailabilityWithResponse(
        String supportTicketName, CheckNameAvailabilityInput checkNameAvailabilityInput, Context context);

    /**
     * Check the availability of a resource name. This API should be used to check the uniqueness of the name for adding
     * a new communication to the support ticket.
     *
     * @param supportTicketName Support ticket name.
     * @param checkNameAvailabilityInput Input to check.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return output of check name availability API.
     */
    CheckNameAvailabilityOutput checkNameAvailability(
        String supportTicketName, CheckNameAvailabilityInput checkNameAvailabilityInput);

    /**
     * Returns communication details for a support ticket.
     *
     * @param supportTicketName Support ticket name.
     * @param communicationName Communication name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return object that represents a Communication resource along with {@link Response}.
     */
    Response<CommunicationDetails> getWithResponse(String supportTicketName, String communicationName, Context context);

    /**
     * Returns communication details for a support ticket.
     *
     * @param supportTicketName Support ticket name.
     * @param communicationName Communication name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return object that represents a Communication resource.
     */
    CommunicationDetails get(String supportTicketName, String communicationName);

    /**
     * Adds a new customer communication to an Azure support ticket.
     *
     * @param supportTicketName Support ticket name.
     * @param communicationName Communication name.
     * @param createCommunicationParameters Communication object.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return object that represents a Communication resource.
     */
    CommunicationDetails create(
        String supportTicketName, String communicationName, CommunicationDetailsInner createCommunicationParameters);

    /**
     * Adds a new customer communication to an Azure support ticket.
     *
     * @param supportTicketName Support ticket name.
     * @param communicationName Communication name.
     * @param createCommunicationParameters Communication object.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return object that represents a Communication resource.
     */
    CommunicationDetails create(
        String supportTicketName,
        String communicationName,
        CommunicationDetailsInner createCommunicationParameters,
        Context context);
}
