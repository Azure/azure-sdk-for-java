// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.support.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.support.SupportManager;
import com.azure.resourcemanager.support.models.Consent;
import com.azure.resourcemanager.support.models.PreferredContactMethod;
import com.azure.resourcemanager.support.models.SeverityLevel;
import com.azure.resourcemanager.support.models.SupportTicketDetails;
import com.azure.resourcemanager.support.models.UserConsent;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SupportTicketsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"supportTicketId\":\"atklddxbjhwuaa\",\"description\":\"oz\",\"problemClassificationId\":\"osphyoul\",\"problemClassificationDisplayName\":\"rvxaglrvimjwosy\",\"severity\":\"minimal\",\"enrollmentId\":\"tcs\",\"require24X7Response\":true,\"advancedDiagnosticConsent\":\"Yes\",\"problemScopingQuestions\":\"qumiek\",\"supportPlanId\":\"zzikhlyfjhdg\",\"contactDetails\":{\"firstName\":\"gge\",\"lastName\":\"dunyg\",\"preferredContactMethod\":\"phone\",\"primaryEmailAddress\":\"qidbqfatpxllrxcy\",\"additionalEmailAddresses\":[\"a\",\"su\"],\"phoneNumber\":\"r\",\"preferredTimeZone\":\"ywdmjsjqbjh\",\"country\":\"yxxrwlycoduh\",\"preferredSupportLanguage\":\"kxkgymareqna\"},\"serviceLevelAgreement\":{\"startTime\":\"2021-06-15T09:27:50Z\",\"expirationTime\":\"2021-06-13T08:03:20Z\",\"slaMinutes\":432489630},\"supportEngineer\":{\"emailAddress\":\"ubeddg\"},\"supportPlanType\":\"ofwq\",\"supportPlanDisplayName\":\"qal\",\"title\":\"rmnjijpx\",\"problemStartTime\":\"2021-07-27T17:13:58Z\",\"serviceId\":\"qudf\",\"serviceDisplayName\":\"yxbaaabjyvayf\",\"status\":\"m\",\"createdDate\":\"2021-07-11T14:35:31Z\",\"modifiedDate\":\"2021-04-01T17:38:45Z\",\"fileWorkspaceName\":\"qogsexnevfd\",\"isTemporaryTicket\":\"Yes\",\"technicalTicketDetails\":{\"resourceId\":\"ewzsyyceuzsoib\"},\"quotaTicketDetails\":{\"quotaChangeRequestSubType\":\"pfrxtrthzvay\",\"quotaChangeRequestVersion\":\"wkqbrqu\",\"quotaChangeRequests\":[{\"region\":\"h\",\"payload\":\"iilivpdtiirqtd\"},{\"region\":\"axoruzfgsquy\",\"payload\":\"rxxle\"},{\"region\":\"ramxjezwlwnw\",\"payload\":\"qlcvydy\"}]},\"secondaryConsent\":[{\"userConsent\":\"No\",\"type\":\"aojkniodk\"},{\"userConsent\":\"Yes\",\"type\":\"wnujhemmsbvdk\"}]},\"id\":\"rodtjinfwjlfl\",\"name\":\"kacjvefkdlfo\",\"type\":\"kggkfpa\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SupportManager manager = SupportManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        SupportTicketDetails response
            = manager.supportTickets().getWithResponse("elpcirelsfeaenwa", com.azure.core.util.Context.NONE).getValue();

        Assertions.assertEquals("atklddxbjhwuaa", response.supportTicketId());
        Assertions.assertEquals("oz", response.description());
        Assertions.assertEquals("osphyoul", response.problemClassificationId());
        Assertions.assertEquals(SeverityLevel.MINIMAL, response.severity());
        Assertions.assertEquals("tcs", response.enrollmentId());
        Assertions.assertEquals(true, response.require24X7Response());
        Assertions.assertEquals(Consent.YES, response.advancedDiagnosticConsent());
        Assertions.assertEquals("qumiek", response.problemScopingQuestions());
        Assertions.assertEquals("zzikhlyfjhdg", response.supportPlanId());
        Assertions.assertEquals("gge", response.contactDetails().firstName());
        Assertions.assertEquals("dunyg", response.contactDetails().lastName());
        Assertions.assertEquals(PreferredContactMethod.PHONE, response.contactDetails().preferredContactMethod());
        Assertions.assertEquals("qidbqfatpxllrxcy", response.contactDetails().primaryEmailAddress());
        Assertions.assertEquals("a", response.contactDetails().additionalEmailAddresses().get(0));
        Assertions.assertEquals("r", response.contactDetails().phoneNumber());
        Assertions.assertEquals("ywdmjsjqbjh", response.contactDetails().preferredTimeZone());
        Assertions.assertEquals("yxxrwlycoduh", response.contactDetails().country());
        Assertions.assertEquals("kxkgymareqna", response.contactDetails().preferredSupportLanguage());
        Assertions.assertEquals("rmnjijpx", response.title());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-27T17:13:58Z"), response.problemStartTime());
        Assertions.assertEquals("qudf", response.serviceId());
        Assertions.assertEquals("qogsexnevfd", response.fileWorkspaceName());
        Assertions.assertEquals("ewzsyyceuzsoib", response.technicalTicketDetails().resourceId());
        Assertions.assertEquals("pfrxtrthzvay", response.quotaTicketDetails().quotaChangeRequestSubType());
        Assertions.assertEquals("wkqbrqu", response.quotaTicketDetails().quotaChangeRequestVersion());
        Assertions.assertEquals("h", response.quotaTicketDetails().quotaChangeRequests().get(0).region());
        Assertions.assertEquals("iilivpdtiirqtd", response.quotaTicketDetails().quotaChangeRequests().get(0).payload());
        Assertions.assertEquals(UserConsent.NO, response.secondaryConsent().get(0).userConsent());
        Assertions.assertEquals("aojkniodk", response.secondaryConsent().get(0).type());
    }
}
