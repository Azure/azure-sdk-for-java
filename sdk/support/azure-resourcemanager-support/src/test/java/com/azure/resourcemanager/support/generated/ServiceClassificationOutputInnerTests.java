// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.support.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.support.fluent.models.ClassificationService;
import com.azure.resourcemanager.support.fluent.models.ServiceClassificationOutputInner;
import com.azure.resourcemanager.support.models.ServiceClassificationAnswer;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ServiceClassificationOutputInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ServiceClassificationOutputInner model = BinaryData.fromString(
            "{\"serviceClassificationResults\":[{\"childService\":{\"serviceId\":\"syyp\",\"displayName\":\"dhsgcba\",\"resourceTypes\":[\"ejk\",\"tynqgoul\",\"ndlik\"]},\"serviceId\":\"qkgfgibma\",\"displayName\":\"akeqs\",\"resourceTypes\":[\"bzqqedqytbciq\"]},{\"childService\":{\"serviceId\":\"flmmnk\",\"displayName\":\"modmglougpb\",\"resourceTypes\":[\"mutduqktaps\"]},\"serviceId\":\"gcue\",\"displayName\":\"umkdosvqwhbmd\",\"resourceTypes\":[\"jfddgmbmbe\"]}]}")
            .toObject(ServiceClassificationOutputInner.class);
        Assertions.assertEquals("bzqqedqytbciq", model.serviceClassificationResults().get(0).resourceTypes().get(0));
        Assertions.assertEquals("ejk",
            model.serviceClassificationResults().get(0).childService().resourceTypes().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ServiceClassificationOutputInner model
            = new ServiceClassificationOutputInner().withServiceClassificationResults(Arrays.asList(
                new ServiceClassificationAnswer().withResourceTypes(Arrays.asList("bzqqedqytbciq")).withChildService(
                    new ClassificationService().withResourceTypes(Arrays.asList("ejk", "tynqgoul", "ndlik"))),
                new ServiceClassificationAnswer().withResourceTypes(Arrays.asList("jfddgmbmbe"))
                    .withChildService(new ClassificationService().withResourceTypes(Arrays.asList("mutduqktaps")))));
        model = BinaryData.fromObject(model).toObject(ServiceClassificationOutputInner.class);
        Assertions.assertEquals("bzqqedqytbciq", model.serviceClassificationResults().get(0).resourceTypes().get(0));
        Assertions.assertEquals("ejk",
            model.serviceClassificationResults().get(0).childService().resourceTypes().get(0));
    }
}
