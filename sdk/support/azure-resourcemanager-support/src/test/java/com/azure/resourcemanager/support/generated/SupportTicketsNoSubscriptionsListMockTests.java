// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.support.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.support.SupportManager;
import com.azure.resourcemanager.support.models.Consent;
import com.azure.resourcemanager.support.models.PreferredContactMethod;
import com.azure.resourcemanager.support.models.SeverityLevel;
import com.azure.resourcemanager.support.models.SupportTicketDetails;
import com.azure.resourcemanager.support.models.UserConsent;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SupportTicketsNoSubscriptionsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"supportTicketId\":\"fhmouwq\",\"description\":\"gzrf\",\"problemClassificationId\":\"eeyebi\",\"problemClassificationDisplayName\":\"kayuhqlbjbs\",\"severity\":\"critical\",\"enrollmentId\":\"qwrvtldgmfp\",\"require24X7Response\":true,\"advancedDiagnosticConsent\":\"Yes\",\"problemScopingQuestions\":\"paslthaqfxssmwu\",\"supportPlanId\":\"bdsrez\",\"contactDetails\":{\"firstName\":\"drhneuyow\",\"lastName\":\"kdw\",\"preferredContactMethod\":\"email\",\"primaryEmailAddress\":\"i\",\"additionalEmailAddresses\":[\"ircgpikpz\"],\"phoneNumber\":\"ejzanlfz\",\"preferredTimeZone\":\"iavrm\",\"country\":\"zonokixrjqci\",\"preferredSupportLanguage\":\"gzpfrla\"},\"serviceLevelAgreement\":{\"startTime\":\"2021-07-24T19:53:33Z\",\"expirationTime\":\"2021-05-24T12:41:33Z\",\"slaMinutes\":755855856},\"supportEngineer\":{\"emailAddress\":\"dfpwpjylwbtlhfls\"},\"supportPlanType\":\"dhszfjv\",\"supportPlanDisplayName\":\"gofel\",\"title\":\"a\",\"problemStartTime\":\"2021-09-13T20:46:53Z\",\"serviceId\":\"mqhldvrii\",\"serviceDisplayName\":\"jnalghf\",\"status\":\"tvsexsowuel\",\"createdDate\":\"2021-11-06T19:32:24Z\",\"modifiedDate\":\"2021-09-24T19:31:57Z\",\"fileWorkspaceName\":\"hxvrhmzkwpjg\",\"isTemporaryTicket\":\"No\",\"technicalTicketDetails\":{\"resourceId\":\"ghftqsxhqxujxuk\"},\"quotaTicketDetails\":{\"quotaChangeRequestSubType\":\"digrjguufzdmsyqt\",\"quotaChangeRequestVersion\":\"hwhbotzingamv\",\"quotaChangeRequests\":[{\"region\":\"szqzudphqamv\",\"payload\":\"fwynwcvtbvkay\"}]},\"secondaryConsent\":[{\"userConsent\":\"Yes\",\"type\":\"qiatkzwpcnp\"},{\"userConsent\":\"No\",\"type\":\"a\"},{\"userConsent\":\"Yes\",\"type\":\"v\"}]},\"id\":\"ccyajg\",\"name\":\"qfhwyg\",\"type\":\"lvdnkfx\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SupportManager manager = SupportManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<SupportTicketDetails> response
            = manager.supportTicketsNoSubscriptions().list(1557744046, "jk", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("fhmouwq", response.iterator().next().supportTicketId());
        Assertions.assertEquals("gzrf", response.iterator().next().description());
        Assertions.assertEquals("eeyebi", response.iterator().next().problemClassificationId());
        Assertions.assertEquals(SeverityLevel.CRITICAL, response.iterator().next().severity());
        Assertions.assertEquals("qwrvtldgmfp", response.iterator().next().enrollmentId());
        Assertions.assertEquals(true, response.iterator().next().require24X7Response());
        Assertions.assertEquals(Consent.YES, response.iterator().next().advancedDiagnosticConsent());
        Assertions.assertEquals("paslthaqfxssmwu", response.iterator().next().problemScopingQuestions());
        Assertions.assertEquals("bdsrez", response.iterator().next().supportPlanId());
        Assertions.assertEquals("drhneuyow", response.iterator().next().contactDetails().firstName());
        Assertions.assertEquals("kdw", response.iterator().next().contactDetails().lastName());
        Assertions.assertEquals(PreferredContactMethod.EMAIL,
            response.iterator().next().contactDetails().preferredContactMethod());
        Assertions.assertEquals("i", response.iterator().next().contactDetails().primaryEmailAddress());
        Assertions.assertEquals("ircgpikpz",
            response.iterator().next().contactDetails().additionalEmailAddresses().get(0));
        Assertions.assertEquals("ejzanlfz", response.iterator().next().contactDetails().phoneNumber());
        Assertions.assertEquals("iavrm", response.iterator().next().contactDetails().preferredTimeZone());
        Assertions.assertEquals("zonokixrjqci", response.iterator().next().contactDetails().country());
        Assertions.assertEquals("gzpfrla", response.iterator().next().contactDetails().preferredSupportLanguage());
        Assertions.assertEquals("a", response.iterator().next().title());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-13T20:46:53Z"),
            response.iterator().next().problemStartTime());
        Assertions.assertEquals("mqhldvrii", response.iterator().next().serviceId());
        Assertions.assertEquals("hxvrhmzkwpjg", response.iterator().next().fileWorkspaceName());
        Assertions.assertEquals("ghftqsxhqxujxuk", response.iterator().next().technicalTicketDetails().resourceId());
        Assertions.assertEquals("digrjguufzdmsyqt",
            response.iterator().next().quotaTicketDetails().quotaChangeRequestSubType());
        Assertions.assertEquals("hwhbotzingamv",
            response.iterator().next().quotaTicketDetails().quotaChangeRequestVersion());
        Assertions.assertEquals("szqzudphqamv",
            response.iterator().next().quotaTicketDetails().quotaChangeRequests().get(0).region());
        Assertions.assertEquals("fwynwcvtbvkay",
            response.iterator().next().quotaTicketDetails().quotaChangeRequests().get(0).payload());
        Assertions.assertEquals(UserConsent.YES, response.iterator().next().secondaryConsent().get(0).userConsent());
        Assertions.assertEquals("qiatkzwpcnp", response.iterator().next().secondaryConsent().get(0).type());
    }
}
