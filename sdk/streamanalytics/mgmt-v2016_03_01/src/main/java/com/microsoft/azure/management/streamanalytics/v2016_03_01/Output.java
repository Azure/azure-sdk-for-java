/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.streamanalytics.v2016_03_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.streamanalytics.v2016_03_01.implementation.OutputInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.streamanalytics.v2016_03_01.implementation.StreamAnalyticsManager;

/**
 * Type representing Output.
 */
public interface Output extends HasInner<OutputInner>, Indexable, Refreshable<Output>, Updatable<Output.Update>, HasManager<StreamAnalyticsManager> {
    /**
     * @return the datasource value.
     */
    OutputDataSource datasource();

    /**
     * @return the diagnostics value.
     */
    Diagnostics diagnostics();

    /**
     * @return the etag value.
     */
    String etag();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the serialization value.
     */
    Serialization serialization();

    /**
     * @return the type value.
     */
    String type();

    /**
     * The entirety of the Output definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithStreamingjob, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of Output definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a Output definition.
         */
        interface Blank extends WithStreamingjob {
        }

        /**
         * The stage of the output definition allowing to specify Streamingjob.
         */
        interface WithStreamingjob {
           /**
            * Specifies resourceGroupName, jobName.
            */
            WithCreate withExistingStreamingjob(String resourceGroupName, String jobName);
        }

        /**
         * The stage of the output definition allowing to specify Datasource.
         */
        interface WithDatasource {
            /**
             * Specifies datasource.
             */
            WithCreate withDatasource(OutputDataSource datasource);
        }

        /**
         * The stage of the output definition allowing to specify Name.
         */
        interface WithName {
            /**
             * Specifies name.
             */
            WithCreate withName(String name);
        }

        /**
         * The stage of the output definition allowing to specify Serialization.
         */
        interface WithSerialization {
            /**
             * Specifies serialization.
             */
            WithCreate withSerialization(Serialization serialization);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<Output>, DefinitionStages.WithDatasource, DefinitionStages.WithName, DefinitionStages.WithSerialization {
        }
    }
    /**
     * The template for a Output update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<Output>, UpdateStages.WithDatasource, UpdateStages.WithName, UpdateStages.WithSerialization {
    }

    /**
     * Grouping of Output update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the output update allowing to specify Datasource.
         */
        interface WithDatasource {
            /**
             * Specifies datasource.
             */
            Update withDatasource(OutputDataSource datasource);
        }

        /**
         * The stage of the output update allowing to specify Name.
         */
        interface WithName {
            /**
             * Specifies name.
             */
            Update withName(String name);
        }

        /**
         * The stage of the output update allowing to specify Serialization.
         */
        interface WithSerialization {
            /**
             * Specifies serialization.
             */
            Update withSerialization(Serialization serialization);
        }

    }
}
