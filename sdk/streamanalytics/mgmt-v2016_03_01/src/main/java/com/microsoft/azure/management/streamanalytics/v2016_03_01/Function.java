/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.streamanalytics.v2016_03_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.streamanalytics.v2016_03_01.implementation.FunctionInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.streamanalytics.v2016_03_01.implementation.StreamAnalyticsManager;

/**
 * Type representing Function.
 */
public interface Function extends HasInner<FunctionInner>, Indexable, Refreshable<Function>, Updatable<Function.Update>, HasManager<StreamAnalyticsManager> {
    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the properties value.
     */
    FunctionProperties properties();

    /**
     * @return the type value.
     */
    String type();

    /**
     * The entirety of the Function definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithStreamingjob, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of Function definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a Function definition.
         */
        interface Blank extends WithStreamingjob {
        }

        /**
         * The stage of the function definition allowing to specify Streamingjob.
         */
        interface WithStreamingjob {
           /**
            * Specifies resourceGroupName, jobName.
            */
            WithCreate withExistingStreamingjob(String resourceGroupName, String jobName);
        }

        /**
         * The stage of the function definition allowing to specify Name.
         */
        interface WithName {
            /**
             * Specifies name.
             */
            WithCreate withName(String name);
        }

        /**
         * The stage of the function definition allowing to specify Properties.
         */
        interface WithProperties {
            /**
             * Specifies properties.
             */
            WithCreate withProperties(FunctionProperties properties);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<Function>, DefinitionStages.WithName, DefinitionStages.WithProperties {
        }
    }
    /**
     * The template for a Function update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<Function>, UpdateStages.WithName, UpdateStages.WithProperties {
    }

    /**
     * Grouping of Function update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the function update allowing to specify Name.
         */
        interface WithName {
            /**
             * Specifies name.
             */
            Update withName(String name);
        }

        /**
         * The stage of the function update allowing to specify Properties.
         */
        interface WithProperties {
            /**
             * Specifies properties.
             */
            Update withProperties(FunctionProperties properties);
        }

    }
}
