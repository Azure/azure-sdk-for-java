/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.streamanalytics.v2020_03_01_preview;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.streamanalytics.v2020_03_01_preview.implementation.InputInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.streamanalytics.v2020_03_01_preview.implementation.StreamAnalyticsManager;

/**
 * Type representing Input.
 */
public interface Input extends HasInner<InputInner>, Indexable, Refreshable<Input>, Updatable<Input.Update>, HasManager<StreamAnalyticsManager> {
    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the properties value.
     */
    InputProperties properties();

    /**
     * @return the type value.
     */
    String type();

    /**
     * The entirety of the Input definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithStreamingjob, DefinitionStages.WithIfMatch, DefinitionStages.WithIfNoneMatch, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of Input definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a Input definition.
         */
        interface Blank extends WithStreamingjob {
        }

        /**
         * The stage of the input definition allowing to specify Streamingjob.
         */
        interface WithStreamingjob {
           /**
            * Specifies resourceGroupName, jobName.
            * @param resourceGroupName The name of the resource group. The name is case insensitive
            * @param jobName The name of the streaming job
            * @return the next definition stage
            */
            WithIfMatch withExistingStreamingjob(String resourceGroupName, String jobName);
        }

        /**
         * The stage of the input definition allowing to specify IfMatch.
         */
        interface WithIfMatch {
           /**
            * Specifies ifMatch.
            * @param ifMatch The ETag of the input. Omit this value to always overwrite the current input. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes
            * @return the next definition stage
            */
            WithIfNoneMatch withIfMatch(String ifMatch);
        }

        /**
         * The stage of the input definition allowing to specify IfNoneMatch.
         */
        interface WithIfNoneMatch {
           /**
            * Specifies ifNoneMatch.
            * @param ifNoneMatch Set to '*' to allow a new input to be created, but to prevent updating an existing input. Other values will result in a 412 Pre-condition Failed response
            * @return the next definition stage
            */
            WithCreate withIfNoneMatch(String ifNoneMatch);
        }

        /**
         * The stage of the input definition allowing to specify Name.
         */
        interface WithName {
            /**
             * Specifies name.
             * @param name Resource name
             * @return the next definition stage
             */
            WithCreate withName(String name);
        }

        /**
         * The stage of the input definition allowing to specify Properties.
         */
        interface WithProperties {
            /**
             * Specifies properties.
             * @param properties The properties that are associated with an input. Required on PUT (CreateOrReplace) requests
             * @return the next definition stage
             */
            WithCreate withProperties(InputProperties properties);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<Input>, DefinitionStages.WithName, DefinitionStages.WithProperties {
        }
    }
    /**
     * The template for a Input update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<Input>, UpdateStages.WithIfMatch, UpdateStages.WithName, UpdateStages.WithProperties {
    }

    /**
     * Grouping of Input update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the input update allowing to specify IfMatch.
         */
        interface WithIfMatch {
            /**
             * Specifies ifMatch.
             * @param ifMatch The ETag of the input. Omit this value to always overwrite the current input. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes
             * @return the next update stage
             */
            Update withIfMatch(String ifMatch);
        }

        /**
         * The stage of the input update allowing to specify Name.
         */
        interface WithName {
            /**
             * Specifies name.
             * @param name Resource name
             * @return the next update stage
             */
            Update withName(String name);
        }

        /**
         * The stage of the input update allowing to specify Properties.
         */
        interface WithProperties {
            /**
             * Specifies properties.
             * @param properties The properties that are associated with an input. Required on PUT (CreateOrReplace) requests
             * @return the next update stage
             */
            Update withProperties(InputProperties properties);
        }

    }
}
