/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.streamanalytics.v2020_03_01_preview;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.arm.resources.models.Resource;
import com.microsoft.azure.arm.resources.models.GroupableResourceCore;
import com.microsoft.azure.arm.resources.models.HasResourceGroup;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.streamanalytics.v2020_03_01_preview.implementation.StreamAnalyticsManager;
import org.joda.time.DateTime;
import java.util.List;
import com.microsoft.azure.management.streamanalytics.v2020_03_01_preview.implementation.FunctionInner;
import com.microsoft.azure.management.streamanalytics.v2020_03_01_preview.implementation.InputInner;
import com.microsoft.azure.management.streamanalytics.v2020_03_01_preview.implementation.OutputInner;
import com.microsoft.azure.management.streamanalytics.v2020_03_01_preview.implementation.TransformationInner;
import com.microsoft.azure.management.streamanalytics.v2020_03_01_preview.implementation.StreamingJobInner;

/**
 * Type representing StreamingJob.
 */
public interface StreamingJob extends HasInner<StreamingJobInner>, Resource, GroupableResourceCore<StreamAnalyticsManager, StreamingJobInner>, HasResourceGroup, Refreshable<StreamingJob>, Updatable<StreamingJob.Update>, HasManager<StreamAnalyticsManager> {
    /**
     * @return the cluster value.
     */
    ClusterInfo cluster();

    /**
     * @return the compatibilityLevel value.
     */
    CompatibilityLevel compatibilityLevel();

    /**
     * @return the contentStoragePolicy value.
     */
    ContentStoragePolicy contentStoragePolicy();

    /**
     * @return the createdDate value.
     */
    DateTime createdDate();

    /**
     * @return the dataLocale value.
     */
    String dataLocale();

    /**
     * @return the etag value.
     */
    String etag();

    /**
     * @return the eventsLateArrivalMaxDelayInSeconds value.
     */
    Integer eventsLateArrivalMaxDelayInSeconds();

    /**
     * @return the eventsOutOfOrderMaxDelayInSeconds value.
     */
    Integer eventsOutOfOrderMaxDelayInSeconds();

    /**
     * @return the eventsOutOfOrderPolicy value.
     */
    EventsOutOfOrderPolicy eventsOutOfOrderPolicy();

    /**
     * @return the externals value.
     */
    External externals();

    /**
     * @return the functions value.
     */
    List<Function> functions();

    /**
     * @return the identity value.
     */
    Identity identity();

    /**
     * @return the inputs value.
     */
    List<Input> inputs();

    /**
     * @return the jobId value.
     */
    String jobId();

    /**
     * @return the jobState value.
     */
    String jobState();

    /**
     * @return the jobStorageAccount value.
     */
    JobStorageAccount jobStorageAccount();

    /**
     * @return the jobType value.
     */
    JobType jobType();

    /**
     * @return the lastOutputEventTime value.
     */
    DateTime lastOutputEventTime();

    /**
     * @return the outputErrorPolicy value.
     */
    OutputErrorPolicy outputErrorPolicy();

    /**
     * @return the outputs value.
     */
    List<Output> outputs();

    /**
     * @return the outputStartMode value.
     */
    OutputStartMode outputStartMode();

    /**
     * @return the outputStartTime value.
     */
    DateTime outputStartTime();

    /**
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * @return the sku value.
     */
    StreamingJobSku sku();

    /**
     * @return the transformation value.
     */
    Transformation transformation();

    /**
     * The entirety of the StreamingJob definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithGroup, DefinitionStages.WithIfMatch, DefinitionStages.WithIfNoneMatch, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of StreamingJob definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a StreamingJob definition.
         */
        interface Blank extends GroupableResourceCore.DefinitionWithRegion<WithGroup> {
        }

        /**
         * The stage of the StreamingJob definition allowing to specify the resource group.
         */
        interface WithGroup extends GroupableResourceCore.DefinitionStages.WithGroup<WithIfMatch> {
        }

        /**
         * The stage of the streamingjob definition allowing to specify IfMatch.
         */
        interface WithIfMatch {
           /**
            * Specifies ifMatch.
            * @param ifMatch The ETag of the streaming job. Omit this value to always overwrite the current record set. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes
            * @return the next definition stage
*/
            WithIfNoneMatch withIfMatch(String ifMatch);
        }

        /**
         * The stage of the streamingjob definition allowing to specify IfNoneMatch.
         */
        interface WithIfNoneMatch {
           /**
            * Specifies ifNoneMatch.
            * @param ifNoneMatch Set to '*' to allow a new streaming job to be created, but to prevent updating an existing record set. Other values will result in a 412 Pre-condition Failed response
            * @return the next definition stage
*/
            WithCreate withIfNoneMatch(String ifNoneMatch);
        }

        /**
         * The stage of the streamingjob definition allowing to specify Cluster.
         */
        interface WithCluster {
            /**
             * Specifies cluster.
             * @param cluster The cluster which streaming jobs will run on
             * @return the next definition stage
             */
            WithCreate withCluster(ClusterInfo cluster);
        }

        /**
         * The stage of the streamingjob definition allowing to specify CompatibilityLevel.
         */
        interface WithCompatibilityLevel {
            /**
             * Specifies compatibilityLevel.
             * @param compatibilityLevel Controls certain runtime behaviors of the streaming job. Possible values include: '1.0'
             * @return the next definition stage
             */
            WithCreate withCompatibilityLevel(CompatibilityLevel compatibilityLevel);
        }

        /**
         * The stage of the streamingjob definition allowing to specify ContentStoragePolicy.
         */
        interface WithContentStoragePolicy {
            /**
             * Specifies contentStoragePolicy.
             * @param contentStoragePolicy Valid values are JobStorageAccount and SystemAccount. If set to JobStorageAccount, this requires the user to also specify jobStorageAccount property. Possible values include: 'SystemAccount', 'JobStorageAccount'
             * @return the next definition stage
             */
            WithCreate withContentStoragePolicy(ContentStoragePolicy contentStoragePolicy);
        }

        /**
         * The stage of the streamingjob definition allowing to specify DataLocale.
         */
        interface WithDataLocale {
            /**
             * Specifies dataLocale.
             * @param dataLocale The data locale of the stream analytics job. Value should be the name of a supported .NET Culture from the set https://msdn.microsoft.com/en-us/library/system.globalization.culturetypes(v=vs.110).aspx. Defaults to 'en-US' if none specified
             * @return the next definition stage
             */
            WithCreate withDataLocale(String dataLocale);
        }

        /**
         * The stage of the streamingjob definition allowing to specify EventsLateArrivalMaxDelayInSeconds.
         */
        interface WithEventsLateArrivalMaxDelayInSeconds {
            /**
             * Specifies eventsLateArrivalMaxDelayInSeconds.
             * @param eventsLateArrivalMaxDelayInSeconds The maximum tolerable delay in seconds where events arriving late could be included.  Supported range is -1 to 1814399 (20.23:59:59 days) and -1 is used to specify wait indefinitely. If the property is absent, it is interpreted to have a value of -1
             * @return the next definition stage
             */
            WithCreate withEventsLateArrivalMaxDelayInSeconds(Integer eventsLateArrivalMaxDelayInSeconds);
        }

        /**
         * The stage of the streamingjob definition allowing to specify EventsOutOfOrderMaxDelayInSeconds.
         */
        interface WithEventsOutOfOrderMaxDelayInSeconds {
            /**
             * Specifies eventsOutOfOrderMaxDelayInSeconds.
             * @param eventsOutOfOrderMaxDelayInSeconds The maximum tolerable delay in seconds where out-of-order events can be adjusted to be back in order
             * @return the next definition stage
             */
            WithCreate withEventsOutOfOrderMaxDelayInSeconds(Integer eventsOutOfOrderMaxDelayInSeconds);
        }

        /**
         * The stage of the streamingjob definition allowing to specify EventsOutOfOrderPolicy.
         */
        interface WithEventsOutOfOrderPolicy {
            /**
             * Specifies eventsOutOfOrderPolicy.
             * @param eventsOutOfOrderPolicy Indicates the policy to apply to events that arrive out of order in the input event stream. Possible values include: 'Adjust', 'Drop'
             * @return the next definition stage
             */
            WithCreate withEventsOutOfOrderPolicy(EventsOutOfOrderPolicy eventsOutOfOrderPolicy);
        }

        /**
         * The stage of the streamingjob definition allowing to specify Externals.
         */
        interface WithExternals {
            /**
             * Specifies externals.
             * @param externals The storage account where the custom code artifacts are located
             * @return the next definition stage
             */
            WithCreate withExternals(External externals);
        }

        /**
         * The stage of the streamingjob definition allowing to specify Functions.
         */
        interface WithFunctions {
            /**
             * Specifies functions.
             * @param functions A list of one or more functions for the streaming job. The name property for each function is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual transformation
             * @return the next definition stage
             */
            WithCreate withFunctions(List<FunctionInner> functions);
        }

        /**
         * The stage of the streamingjob definition allowing to specify Identity.
         */
        interface WithIdentity {
            /**
             * Specifies identity.
             * @param identity Describes the system-assigned managed identity assigned to this job that can be used to authenticate with inputs and outputs
             * @return the next definition stage
             */
            WithCreate withIdentity(Identity identity);
        }

        /**
         * The stage of the streamingjob definition allowing to specify Inputs.
         */
        interface WithInputs {
            /**
             * Specifies inputs.
             * @param inputs A list of one or more inputs to the streaming job. The name property for each input is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual input
             * @return the next definition stage
             */
            WithCreate withInputs(List<InputInner> inputs);
        }

        /**
         * The stage of the streamingjob definition allowing to specify JobStorageAccount.
         */
        interface WithJobStorageAccount {
            /**
             * Specifies jobStorageAccount.
             * @param jobStorageAccount the jobStorageAccount parameter value
             * @return the next definition stage
             */
            WithCreate withJobStorageAccount(JobStorageAccount jobStorageAccount);
        }

        /**
         * The stage of the streamingjob definition allowing to specify JobType.
         */
        interface WithJobType {
            /**
             * Specifies jobType.
             * @param jobType Describes the type of the job. Valid modes are `Cloud` and 'Edge'. Possible values include: 'Cloud', 'Edge'
             * @return the next definition stage
             */
            WithCreate withJobType(JobType jobType);
        }

        /**
         * The stage of the streamingjob definition allowing to specify OutputErrorPolicy.
         */
        interface WithOutputErrorPolicy {
            /**
             * Specifies outputErrorPolicy.
             * @param outputErrorPolicy Indicates the policy to apply to events that arrive at the output and cannot be written to the external storage due to being malformed (missing column values, column values of wrong type or size). Possible values include: 'Stop', 'Drop'
             * @return the next definition stage
             */
            WithCreate withOutputErrorPolicy(OutputErrorPolicy outputErrorPolicy);
        }

        /**
         * The stage of the streamingjob definition allowing to specify Outputs.
         */
        interface WithOutputs {
            /**
             * Specifies outputs.
             * @param outputs A list of one or more outputs for the streaming job. The name property for each output is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual output
             * @return the next definition stage
             */
            WithCreate withOutputs(List<OutputInner> outputs);
        }

        /**
         * The stage of the streamingjob definition allowing to specify OutputStartMode.
         */
        interface WithOutputStartMode {
            /**
             * Specifies outputStartMode.
             * @param outputStartMode This property should only be utilized when it is desired that the job be started immediately upon creation. Value may be JobStartTime, CustomTime, or LastOutputEventTime to indicate whether the starting point of the output event stream should start whenever the job is started, start at a custom user time stamp specified via the outputStartTime property, or start from the last event output time. Possible values include: 'JobStartTime', 'CustomTime', 'LastOutputEventTime'
             * @return the next definition stage
             */
            WithCreate withOutputStartMode(OutputStartMode outputStartMode);
        }

        /**
         * The stage of the streamingjob definition allowing to specify OutputStartTime.
         */
        interface WithOutputStartTime {
            /**
             * Specifies outputStartTime.
             * @param outputStartTime Value is either an ISO-8601 formatted time stamp that indicates the starting point of the output event stream, or null to indicate that the output event stream will start whenever the streaming job is started. This property must have a value if outputStartMode is set to CustomTime
             * @return the next definition stage
             */
            WithCreate withOutputStartTime(DateTime outputStartTime);
        }

        /**
         * The stage of the streamingjob definition allowing to specify Sku.
         */
        interface WithSku {
            /**
             * Specifies sku.
             * @param sku Describes the SKU of the streaming job. Required on PUT (CreateOrReplace) requests
             * @return the next definition stage
             */
            WithCreate withSku(StreamingJobSku sku);
        }

        /**
         * The stage of the streamingjob definition allowing to specify Transformation.
         */
        interface WithTransformation {
            /**
             * Specifies transformation.
             * @param transformation Indicates the query and the number of streaming units to use for the streaming job. The name property of the transformation is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual transformation
             * @return the next definition stage
             */
            WithCreate withTransformation(TransformationInner transformation);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<StreamingJob>, Resource.DefinitionWithTags<WithCreate>, DefinitionStages.WithCluster, DefinitionStages.WithCompatibilityLevel, DefinitionStages.WithContentStoragePolicy, DefinitionStages.WithDataLocale, DefinitionStages.WithEventsLateArrivalMaxDelayInSeconds, DefinitionStages.WithEventsOutOfOrderMaxDelayInSeconds, DefinitionStages.WithEventsOutOfOrderPolicy, DefinitionStages.WithExternals, DefinitionStages.WithFunctions, DefinitionStages.WithIdentity, DefinitionStages.WithInputs, DefinitionStages.WithJobStorageAccount, DefinitionStages.WithJobType, DefinitionStages.WithOutputErrorPolicy, DefinitionStages.WithOutputs, DefinitionStages.WithOutputStartMode, DefinitionStages.WithOutputStartTime, DefinitionStages.WithSku, DefinitionStages.WithTransformation {
        }
    }
    /**
     * The template for a StreamingJob update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<StreamingJob>, Resource.UpdateWithTags<Update>, UpdateStages.WithIfMatch, UpdateStages.WithCluster, UpdateStages.WithCompatibilityLevel, UpdateStages.WithContentStoragePolicy, UpdateStages.WithDataLocale, UpdateStages.WithEventsLateArrivalMaxDelayInSeconds, UpdateStages.WithEventsOutOfOrderMaxDelayInSeconds, UpdateStages.WithEventsOutOfOrderPolicy, UpdateStages.WithExternals, UpdateStages.WithFunctions, UpdateStages.WithIdentity, UpdateStages.WithInputs, UpdateStages.WithJobStorageAccount, UpdateStages.WithJobType, UpdateStages.WithOutputErrorPolicy, UpdateStages.WithOutputs, UpdateStages.WithOutputStartMode, UpdateStages.WithOutputStartTime, UpdateStages.WithSku, UpdateStages.WithTransformation {
    }

    /**
     * Grouping of StreamingJob update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the streamingjob update allowing to specify IfMatch.
         */
        interface WithIfMatch {
            /**
             * Specifies ifMatch.
             * @param ifMatch The ETag of the streaming job. Omit this value to always overwrite the current record set. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes
             * @return the next update stage
             */
            Update withIfMatch(String ifMatch);
        }

        /**
         * The stage of the streamingjob update allowing to specify Cluster.
         */
        interface WithCluster {
            /**
             * Specifies cluster.
             * @param cluster The cluster which streaming jobs will run on
             * @return the next update stage
             */
            Update withCluster(ClusterInfo cluster);
        }

        /**
         * The stage of the streamingjob update allowing to specify CompatibilityLevel.
         */
        interface WithCompatibilityLevel {
            /**
             * Specifies compatibilityLevel.
             * @param compatibilityLevel Controls certain runtime behaviors of the streaming job. Possible values include: '1.0'
             * @return the next update stage
             */
            Update withCompatibilityLevel(CompatibilityLevel compatibilityLevel);
        }

        /**
         * The stage of the streamingjob update allowing to specify ContentStoragePolicy.
         */
        interface WithContentStoragePolicy {
            /**
             * Specifies contentStoragePolicy.
             * @param contentStoragePolicy Valid values are JobStorageAccount and SystemAccount. If set to JobStorageAccount, this requires the user to also specify jobStorageAccount property. Possible values include: 'SystemAccount', 'JobStorageAccount'
             * @return the next update stage
             */
            Update withContentStoragePolicy(ContentStoragePolicy contentStoragePolicy);
        }

        /**
         * The stage of the streamingjob update allowing to specify DataLocale.
         */
        interface WithDataLocale {
            /**
             * Specifies dataLocale.
             * @param dataLocale The data locale of the stream analytics job. Value should be the name of a supported .NET Culture from the set https://msdn.microsoft.com/en-us/library/system.globalization.culturetypes(v=vs.110).aspx. Defaults to 'en-US' if none specified
             * @return the next update stage
             */
            Update withDataLocale(String dataLocale);
        }

        /**
         * The stage of the streamingjob update allowing to specify EventsLateArrivalMaxDelayInSeconds.
         */
        interface WithEventsLateArrivalMaxDelayInSeconds {
            /**
             * Specifies eventsLateArrivalMaxDelayInSeconds.
             * @param eventsLateArrivalMaxDelayInSeconds The maximum tolerable delay in seconds where events arriving late could be included.  Supported range is -1 to 1814399 (20.23:59:59 days) and -1 is used to specify wait indefinitely. If the property is absent, it is interpreted to have a value of -1
             * @return the next update stage
             */
            Update withEventsLateArrivalMaxDelayInSeconds(Integer eventsLateArrivalMaxDelayInSeconds);
        }

        /**
         * The stage of the streamingjob update allowing to specify EventsOutOfOrderMaxDelayInSeconds.
         */
        interface WithEventsOutOfOrderMaxDelayInSeconds {
            /**
             * Specifies eventsOutOfOrderMaxDelayInSeconds.
             * @param eventsOutOfOrderMaxDelayInSeconds The maximum tolerable delay in seconds where out-of-order events can be adjusted to be back in order
             * @return the next update stage
             */
            Update withEventsOutOfOrderMaxDelayInSeconds(Integer eventsOutOfOrderMaxDelayInSeconds);
        }

        /**
         * The stage of the streamingjob update allowing to specify EventsOutOfOrderPolicy.
         */
        interface WithEventsOutOfOrderPolicy {
            /**
             * Specifies eventsOutOfOrderPolicy.
             * @param eventsOutOfOrderPolicy Indicates the policy to apply to events that arrive out of order in the input event stream. Possible values include: 'Adjust', 'Drop'
             * @return the next update stage
             */
            Update withEventsOutOfOrderPolicy(EventsOutOfOrderPolicy eventsOutOfOrderPolicy);
        }

        /**
         * The stage of the streamingjob update allowing to specify Externals.
         */
        interface WithExternals {
            /**
             * Specifies externals.
             * @param externals The storage account where the custom code artifacts are located
             * @return the next update stage
             */
            Update withExternals(External externals);
        }

        /**
         * The stage of the streamingjob update allowing to specify Functions.
         */
        interface WithFunctions {
            /**
             * Specifies functions.
             * @param functions A list of one or more functions for the streaming job. The name property for each function is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual transformation
             * @return the next update stage
             */
            Update withFunctions(List<FunctionInner> functions);
        }

        /**
         * The stage of the streamingjob update allowing to specify Identity.
         */
        interface WithIdentity {
            /**
             * Specifies identity.
             * @param identity Describes the system-assigned managed identity assigned to this job that can be used to authenticate with inputs and outputs
             * @return the next update stage
             */
            Update withIdentity(Identity identity);
        }

        /**
         * The stage of the streamingjob update allowing to specify Inputs.
         */
        interface WithInputs {
            /**
             * Specifies inputs.
             * @param inputs A list of one or more inputs to the streaming job. The name property for each input is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual input
             * @return the next update stage
             */
            Update withInputs(List<InputInner> inputs);
        }

        /**
         * The stage of the streamingjob update allowing to specify JobStorageAccount.
         */
        interface WithJobStorageAccount {
            /**
             * Specifies jobStorageAccount.
             * @param jobStorageAccount the jobStorageAccount parameter value
             * @return the next update stage
             */
            Update withJobStorageAccount(JobStorageAccount jobStorageAccount);
        }

        /**
         * The stage of the streamingjob update allowing to specify JobType.
         */
        interface WithJobType {
            /**
             * Specifies jobType.
             * @param jobType Describes the type of the job. Valid modes are `Cloud` and 'Edge'. Possible values include: 'Cloud', 'Edge'
             * @return the next update stage
             */
            Update withJobType(JobType jobType);
        }

        /**
         * The stage of the streamingjob update allowing to specify OutputErrorPolicy.
         */
        interface WithOutputErrorPolicy {
            /**
             * Specifies outputErrorPolicy.
             * @param outputErrorPolicy Indicates the policy to apply to events that arrive at the output and cannot be written to the external storage due to being malformed (missing column values, column values of wrong type or size). Possible values include: 'Stop', 'Drop'
             * @return the next update stage
             */
            Update withOutputErrorPolicy(OutputErrorPolicy outputErrorPolicy);
        }

        /**
         * The stage of the streamingjob update allowing to specify Outputs.
         */
        interface WithOutputs {
            /**
             * Specifies outputs.
             * @param outputs A list of one or more outputs for the streaming job. The name property for each output is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual output
             * @return the next update stage
             */
            Update withOutputs(List<OutputInner> outputs);
        }

        /**
         * The stage of the streamingjob update allowing to specify OutputStartMode.
         */
        interface WithOutputStartMode {
            /**
             * Specifies outputStartMode.
             * @param outputStartMode This property should only be utilized when it is desired that the job be started immediately upon creation. Value may be JobStartTime, CustomTime, or LastOutputEventTime to indicate whether the starting point of the output event stream should start whenever the job is started, start at a custom user time stamp specified via the outputStartTime property, or start from the last event output time. Possible values include: 'JobStartTime', 'CustomTime', 'LastOutputEventTime'
             * @return the next update stage
             */
            Update withOutputStartMode(OutputStartMode outputStartMode);
        }

        /**
         * The stage of the streamingjob update allowing to specify OutputStartTime.
         */
        interface WithOutputStartTime {
            /**
             * Specifies outputStartTime.
             * @param outputStartTime Value is either an ISO-8601 formatted time stamp that indicates the starting point of the output event stream, or null to indicate that the output event stream will start whenever the streaming job is started. This property must have a value if outputStartMode is set to CustomTime
             * @return the next update stage
             */
            Update withOutputStartTime(DateTime outputStartTime);
        }

        /**
         * The stage of the streamingjob update allowing to specify Sku.
         */
        interface WithSku {
            /**
             * Specifies sku.
             * @param sku Describes the SKU of the streaming job. Required on PUT (CreateOrReplace) requests
             * @return the next update stage
             */
            Update withSku(StreamingJobSku sku);
        }

        /**
         * The stage of the streamingjob update allowing to specify Transformation.
         */
        interface WithTransformation {
            /**
             * Specifies transformation.
             * @param transformation Indicates the query and the number of streaming units to use for the streaming job. The name property of the transformation is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual transformation
             * @return the next update stage
             */
            Update withTransformation(TransformationInner transformation);
        }

    }
}
