/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.streamanalytics.v2020_03_01_preview;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.microsoft.rest.serializer.JsonFlatten;

/**
 * Describes a blob output data source.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type", defaultImpl = BlobOutputDataSource.class)
@JsonTypeName("Microsoft.Storage/Blob")
@JsonFlatten
public class BlobOutputDataSource extends OutputDataSource {
    /**
     * A list of one or more Azure Storage accounts. Required on PUT
     * (CreateOrReplace) requests.
     */
    @JsonProperty(value = "properties.storageAccounts")
    private List<StorageAccount> storageAccounts;

    /**
     * The name of a container within the associated Storage account. This
     * container contains either the blob(s) to be read from or written to.
     * Required on PUT (CreateOrReplace) requests.
     */
    @JsonProperty(value = "properties.container")
    private String container;

    /**
     * The blob path pattern. Not a regular expression. It represents a pattern
     * against which blob names will be matched to determine whether or not
     * they should be included as input or output to the job. See
     * https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input
     * or
     * https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output
     * for a more detailed explanation and example.
     */
    @JsonProperty(value = "properties.pathPattern")
    private String pathPattern;

    /**
     * The date format. Wherever {date} appears in pathPattern, the value of
     * this property is used as the date format instead.
     */
    @JsonProperty(value = "properties.dateFormat")
    private String dateFormat;

    /**
     * The time format. Wherever {time} appears in pathPattern, the value of
     * this property is used as the time format instead.
     */
    @JsonProperty(value = "properties.timeFormat")
    private String timeFormat;

    /**
     * Authentication Mode. Possible values include: 'Msi', 'UserToken',
     * 'ConnectionString'.
     */
    @JsonProperty(value = "properties.authenticationMode")
    private AuthenticationMode authenticationMode;

    /**
     * Get a list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests.
     *
     * @return the storageAccounts value
     */
    public List<StorageAccount> storageAccounts() {
        return this.storageAccounts;
    }

    /**
     * Set a list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests.
     *
     * @param storageAccounts the storageAccounts value to set
     * @return the BlobOutputDataSource object itself.
     */
    public BlobOutputDataSource withStorageAccounts(List<StorageAccount> storageAccounts) {
        this.storageAccounts = storageAccounts;
        return this;
    }

    /**
     * Get the name of a container within the associated Storage account. This container contains either the blob(s) to be read from or written to. Required on PUT (CreateOrReplace) requests.
     *
     * @return the container value
     */
    public String container() {
        return this.container;
    }

    /**
     * Set the name of a container within the associated Storage account. This container contains either the blob(s) to be read from or written to. Required on PUT (CreateOrReplace) requests.
     *
     * @param container the container value to set
     * @return the BlobOutputDataSource object itself.
     */
    public BlobOutputDataSource withContainer(String container) {
        this.container = container;
        return this;
    }

    /**
     * Get the blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a more detailed explanation and example.
     *
     * @return the pathPattern value
     */
    public String pathPattern() {
        return this.pathPattern;
    }

    /**
     * Set the blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a more detailed explanation and example.
     *
     * @param pathPattern the pathPattern value to set
     * @return the BlobOutputDataSource object itself.
     */
    public BlobOutputDataSource withPathPattern(String pathPattern) {
        this.pathPattern = pathPattern;
        return this;
    }

    /**
     * Get the date format. Wherever {date} appears in pathPattern, the value of this property is used as the date format instead.
     *
     * @return the dateFormat value
     */
    public String dateFormat() {
        return this.dateFormat;
    }

    /**
     * Set the date format. Wherever {date} appears in pathPattern, the value of this property is used as the date format instead.
     *
     * @param dateFormat the dateFormat value to set
     * @return the BlobOutputDataSource object itself.
     */
    public BlobOutputDataSource withDateFormat(String dateFormat) {
        this.dateFormat = dateFormat;
        return this;
    }

    /**
     * Get the time format. Wherever {time} appears in pathPattern, the value of this property is used as the time format instead.
     *
     * @return the timeFormat value
     */
    public String timeFormat() {
        return this.timeFormat;
    }

    /**
     * Set the time format. Wherever {time} appears in pathPattern, the value of this property is used as the time format instead.
     *
     * @param timeFormat the timeFormat value to set
     * @return the BlobOutputDataSource object itself.
     */
    public BlobOutputDataSource withTimeFormat(String timeFormat) {
        this.timeFormat = timeFormat;
        return this;
    }

    /**
     * Get authentication Mode. Possible values include: 'Msi', 'UserToken', 'ConnectionString'.
     *
     * @return the authenticationMode value
     */
    public AuthenticationMode authenticationMode() {
        return this.authenticationMode;
    }

    /**
     * Set authentication Mode. Possible values include: 'Msi', 'UserToken', 'ConnectionString'.
     *
     * @param authenticationMode the authenticationMode value to set
     * @return the BlobOutputDataSource object itself.
     */
    public BlobOutputDataSource withAuthenticationMode(AuthenticationMode authenticationMode) {
        this.authenticationMode = authenticationMode;
        return this;
    }

}
