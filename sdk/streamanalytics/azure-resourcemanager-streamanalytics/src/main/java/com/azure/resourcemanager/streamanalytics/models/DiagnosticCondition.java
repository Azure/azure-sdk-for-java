// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.streamanalytics.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Condition applicable to the resource, or to the job overall, that warrant customer attention. */
@Immutable
public final class DiagnosticCondition {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(DiagnosticCondition.class);

    /*
     * The UTC timestamp of when the condition started. Customers should be
     * able to find a corresponding event in the ops log around this time.
     */
    @JsonProperty(value = "since", access = JsonProperty.Access.WRITE_ONLY)
    private String since;

    /*
     * The opaque diagnostic code.
     */
    @JsonProperty(value = "code", access = JsonProperty.Access.WRITE_ONLY)
    private String code;

    /*
     * The human-readable message describing the condition in detail. Localized
     * in the Accept-Language of the client request.
     */
    @JsonProperty(value = "message", access = JsonProperty.Access.WRITE_ONLY)
    private String message;

    /**
     * Get the since property: The UTC timestamp of when the condition started. Customers should be able to find a
     * corresponding event in the ops log around this time.
     *
     * @return the since value.
     */
    public String since() {
        return this.since;
    }

    /**
     * Get the code property: The opaque diagnostic code.
     *
     * @return the code value.
     */
    public String code() {
        return this.code;
    }

    /**
     * Get the message property: The human-readable message describing the condition in detail. Localized in the
     * Accept-Language of the client request.
     *
     * @return the message value.
     */
    public String message() {
        return this.message;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
