// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.streamanalytics.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * An output event timestamp.
 */
@Fluent
public final class LastOutputEventTimestamp implements JsonSerializable<LastOutputEventTimestamp> {
    /*
     * The last output event time.
     */
    private String lastOutputEventTime;

    /*
     * The time that the last update happened.
     */
    private String lastUpdateTime;

    /**
     * Creates an instance of LastOutputEventTimestamp class.
     */
    public LastOutputEventTimestamp() {
    }

    /**
     * Get the lastOutputEventTime property: The last output event time.
     * 
     * @return the lastOutputEventTime value.
     */
    public String lastOutputEventTime() {
        return this.lastOutputEventTime;
    }

    /**
     * Set the lastOutputEventTime property: The last output event time.
     * 
     * @param lastOutputEventTime the lastOutputEventTime value to set.
     * @return the LastOutputEventTimestamp object itself.
     */
    public LastOutputEventTimestamp withLastOutputEventTime(String lastOutputEventTime) {
        this.lastOutputEventTime = lastOutputEventTime;
        return this;
    }

    /**
     * Get the lastUpdateTime property: The time that the last update happened.
     * 
     * @return the lastUpdateTime value.
     */
    public String lastUpdateTime() {
        return this.lastUpdateTime;
    }

    /**
     * Set the lastUpdateTime property: The time that the last update happened.
     * 
     * @param lastUpdateTime the lastUpdateTime value to set.
     * @return the LastOutputEventTimestamp object itself.
     */
    public LastOutputEventTimestamp withLastUpdateTime(String lastUpdateTime) {
        this.lastUpdateTime = lastUpdateTime;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("lastOutputEventTime", this.lastOutputEventTime);
        jsonWriter.writeStringField("lastUpdateTime", this.lastUpdateTime);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of LastOutputEventTimestamp from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of LastOutputEventTimestamp if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the LastOutputEventTimestamp.
     */
    public static LastOutputEventTimestamp fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            LastOutputEventTimestamp deserializedLastOutputEventTimestamp = new LastOutputEventTimestamp();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("lastOutputEventTime".equals(fieldName)) {
                    deserializedLastOutputEventTimestamp.lastOutputEventTime = reader.getString();
                } else if ("lastUpdateTime".equals(fieldName)) {
                    deserializedLastOutputEventTimestamp.lastUpdateTime = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedLastOutputEventTimestamp;
        });
    }
}
