// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.streamanalytics.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * An output event timestamp.
 */
@Fluent
public final class LastOutputEventTimestamp {
    /*
     * The last output event time.
     */
    @JsonProperty(value = "lastOutputEventTime")
    private String lastOutputEventTime;

    /*
     * The time that the last update happened.
     */
    @JsonProperty(value = "lastUpdateTime")
    private String lastUpdateTime;

    /**
     * Creates an instance of LastOutputEventTimestamp class.
     */
    public LastOutputEventTimestamp() {
    }

    /**
     * Get the lastOutputEventTime property: The last output event time.
     * 
     * @return the lastOutputEventTime value.
     */
    public String lastOutputEventTime() {
        return this.lastOutputEventTime;
    }

    /**
     * Set the lastOutputEventTime property: The last output event time.
     * 
     * @param lastOutputEventTime the lastOutputEventTime value to set.
     * @return the LastOutputEventTimestamp object itself.
     */
    public LastOutputEventTimestamp withLastOutputEventTime(String lastOutputEventTime) {
        this.lastOutputEventTime = lastOutputEventTime;
        return this;
    }

    /**
     * Get the lastUpdateTime property: The time that the last update happened.
     * 
     * @return the lastUpdateTime value.
     */
    public String lastUpdateTime() {
        return this.lastUpdateTime;
    }

    /**
     * Set the lastUpdateTime property: The time that the last update happened.
     * 
     * @param lastUpdateTime the lastUpdateTime value to set.
     * @return the LastOutputEventTimestamp object itself.
     */
    public LastOutputEventTimestamp withLastUpdateTime(String lastUpdateTime) {
        this.lastUpdateTime = lastUpdateTime;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
