// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.streamanalytics.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.streamanalytics.fluent.models.JavaScriptFunctionBindingRetrievalProperties;
import java.io.IOException;

/**
 * The parameters needed to retrieve the default function definition for a JavaScript function.
 */
@Fluent
public final class JavaScriptFunctionRetrieveDefaultDefinitionParameters
    extends FunctionRetrieveDefaultDefinitionParameters {
    /*
     * Indicates the function binding type.
     */
    private String bindingType = "Microsoft.StreamAnalytics/JavascriptUdf";

    /*
     * The binding retrieval properties associated with a JavaScript function.
     */
    private JavaScriptFunctionBindingRetrievalProperties innerBindingRetrievalProperties;

    /**
     * Creates an instance of JavaScriptFunctionRetrieveDefaultDefinitionParameters class.
     */
    public JavaScriptFunctionRetrieveDefaultDefinitionParameters() {
    }

    /**
     * Get the bindingType property: Indicates the function binding type.
     * 
     * @return the bindingType value.
     */
    @Override
    public String bindingType() {
        return this.bindingType;
    }

    /**
     * Get the innerBindingRetrievalProperties property: The binding retrieval properties associated with a JavaScript
     * function.
     * 
     * @return the innerBindingRetrievalProperties value.
     */
    private JavaScriptFunctionBindingRetrievalProperties innerBindingRetrievalProperties() {
        return this.innerBindingRetrievalProperties;
    }

    /**
     * Get the script property: The JavaScript code containing a single function definition. For example: 'function (x,
     * y) { return x + y; }'.
     * 
     * @return the script value.
     */
    public String script() {
        return this.innerBindingRetrievalProperties() == null ? null : this.innerBindingRetrievalProperties().script();
    }

    /**
     * Set the script property: The JavaScript code containing a single function definition. For example: 'function (x,
     * y) { return x + y; }'.
     * 
     * @param script the script value to set.
     * @return the JavaScriptFunctionRetrieveDefaultDefinitionParameters object itself.
     */
    public JavaScriptFunctionRetrieveDefaultDefinitionParameters withScript(String script) {
        if (this.innerBindingRetrievalProperties() == null) {
            this.innerBindingRetrievalProperties = new JavaScriptFunctionBindingRetrievalProperties();
        }
        this.innerBindingRetrievalProperties().withScript(script);
        return this;
    }

    /**
     * Get the udfType property: The function type.
     * 
     * @return the udfType value.
     */
    public UdfType udfType() {
        return this.innerBindingRetrievalProperties() == null ? null : this.innerBindingRetrievalProperties().udfType();
    }

    /**
     * Set the udfType property: The function type.
     * 
     * @param udfType the udfType value to set.
     * @return the JavaScriptFunctionRetrieveDefaultDefinitionParameters object itself.
     */
    public JavaScriptFunctionRetrieveDefaultDefinitionParameters withUdfType(UdfType udfType) {
        if (this.innerBindingRetrievalProperties() == null) {
            this.innerBindingRetrievalProperties = new JavaScriptFunctionBindingRetrievalProperties();
        }
        this.innerBindingRetrievalProperties().withUdfType(udfType);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        if (innerBindingRetrievalProperties() != null) {
            innerBindingRetrievalProperties().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("bindingType", this.bindingType);
        jsonWriter.writeJsonField("bindingRetrievalProperties", this.innerBindingRetrievalProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of JavaScriptFunctionRetrieveDefaultDefinitionParameters from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of JavaScriptFunctionRetrieveDefaultDefinitionParameters if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the JavaScriptFunctionRetrieveDefaultDefinitionParameters.
     */
    public static JavaScriptFunctionRetrieveDefaultDefinitionParameters fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            JavaScriptFunctionRetrieveDefaultDefinitionParameters deserializedJavaScriptFunctionRetrieveDefaultDefinitionParameters
                = new JavaScriptFunctionRetrieveDefaultDefinitionParameters();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("bindingType".equals(fieldName)) {
                    deserializedJavaScriptFunctionRetrieveDefaultDefinitionParameters.bindingType = reader.getString();
                } else if ("bindingRetrievalProperties".equals(fieldName)) {
                    deserializedJavaScriptFunctionRetrieveDefaultDefinitionParameters.innerBindingRetrievalProperties
                        = JavaScriptFunctionBindingRetrievalProperties.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedJavaScriptFunctionRetrieveDefaultDefinitionParameters;
        });
    }
}
