// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.streamanalytics.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.exception.ManagementError;
import com.azure.resourcemanager.streamanalytics.models.QueryTestingResultStatus;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The result of the query testing request.
 */
@Fluent
public final class QueryTestingResultInner {
    /*
     * The status of the query testing request.
     */
    @JsonProperty(value = "status", access = JsonProperty.Access.WRITE_ONLY)
    private QueryTestingResultStatus status;

    /*
     * The SAS URL to the outputs payload.
     */
    @JsonProperty(value = "outputUri", access = JsonProperty.Access.WRITE_ONLY)
    private String outputUri;

    /*
     * Error definition properties.
     */
    @JsonProperty(value = "error")
    private ManagementError error;

    /**
     * Creates an instance of QueryTestingResultInner class.
     */
    public QueryTestingResultInner() {
    }

    /**
     * Get the status property: The status of the query testing request.
     * 
     * @return the status value.
     */
    public QueryTestingResultStatus status() {
        return this.status;
    }

    /**
     * Get the outputUri property: The SAS URL to the outputs payload.
     * 
     * @return the outputUri value.
     */
    public String outputUri() {
        return this.outputUri;
    }

    /**
     * Get the error property: Error definition properties.
     * 
     * @return the error value.
     */
    public ManagementError error() {
        return this.error;
    }

    /**
     * Set the error property: Error definition properties.
     * 
     * @param error the error value to set.
     * @return the QueryTestingResultInner object itself.
     */
    public QueryTestingResultInner withError(ManagementError error) {
        this.error = error;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
