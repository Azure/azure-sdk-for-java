// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.streamanalytics.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.streamanalytics.models.AuthenticationMode;
import com.azure.resourcemanager.streamanalytics.models.BlobDataSourceProperties;
import com.azure.resourcemanager.streamanalytics.models.BlobWriteMode;
import com.azure.resourcemanager.streamanalytics.models.StorageAccount;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * The properties that are associated with a blob output.
 */
@Fluent
public final class BlobOutputDataSourceProperties extends BlobDataSourceProperties {
    /*
     * Blob path prefix.
     */
    @JsonProperty(value = "blobPathPrefix")
    private String blobPathPrefix;

    /*
     * Blob write mode.
     */
    @JsonProperty(value = "blobWriteMode")
    private BlobWriteMode blobWriteMode;

    /**
     * Creates an instance of BlobOutputDataSourceProperties class.
     */
    public BlobOutputDataSourceProperties() {
    }

    /**
     * Get the blobPathPrefix property: Blob path prefix.
     * 
     * @return the blobPathPrefix value.
     */
    public String blobPathPrefix() {
        return this.blobPathPrefix;
    }

    /**
     * Set the blobPathPrefix property: Blob path prefix.
     * 
     * @param blobPathPrefix the blobPathPrefix value to set.
     * @return the BlobOutputDataSourceProperties object itself.
     */
    public BlobOutputDataSourceProperties withBlobPathPrefix(String blobPathPrefix) {
        this.blobPathPrefix = blobPathPrefix;
        return this;
    }

    /**
     * Get the blobWriteMode property: Blob write mode.
     * 
     * @return the blobWriteMode value.
     */
    public BlobWriteMode blobWriteMode() {
        return this.blobWriteMode;
    }

    /**
     * Set the blobWriteMode property: Blob write mode.
     * 
     * @param blobWriteMode the blobWriteMode value to set.
     * @return the BlobOutputDataSourceProperties object itself.
     */
    public BlobOutputDataSourceProperties withBlobWriteMode(BlobWriteMode blobWriteMode) {
        this.blobWriteMode = blobWriteMode;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BlobOutputDataSourceProperties withStorageAccounts(List<StorageAccount> storageAccounts) {
        super.withStorageAccounts(storageAccounts);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BlobOutputDataSourceProperties withContainer(String container) {
        super.withContainer(container);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BlobOutputDataSourceProperties withPathPattern(String pathPattern) {
        super.withPathPattern(pathPattern);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BlobOutputDataSourceProperties withDateFormat(String dateFormat) {
        super.withDateFormat(dateFormat);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BlobOutputDataSourceProperties withTimeFormat(String timeFormat) {
        super.withTimeFormat(timeFormat);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BlobOutputDataSourceProperties withAuthenticationMode(AuthenticationMode authenticationMode) {
        super.withAuthenticationMode(authenticationMode);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
