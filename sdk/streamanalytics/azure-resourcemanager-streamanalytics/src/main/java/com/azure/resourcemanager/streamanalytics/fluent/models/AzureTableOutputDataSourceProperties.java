// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.streamanalytics.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The properties that are associated with an Azure Table output.
 */
@Fluent
public final class AzureTableOutputDataSourceProperties
    implements JsonSerializable<AzureTableOutputDataSourceProperties> {
    /*
     * The name of the Azure Storage account. Required on PUT (CreateOrReplace) requests.
     */
    private String accountName;

    /*
     * The account key for the Azure Storage account. Required on PUT (CreateOrReplace) requests.
     */
    private String accountKey;

    /*
     * The name of the Azure Table. Required on PUT (CreateOrReplace) requests.
     */
    private String table;

    /*
     * This element indicates the name of a column from the SELECT statement in the query that will be used as the
     * partition key for the Azure Table. Required on PUT (CreateOrReplace) requests.
     */
    private String partitionKey;

    /*
     * This element indicates the name of a column from the SELECT statement in the query that will be used as the row
     * key for the Azure Table. Required on PUT (CreateOrReplace) requests.
     */
    private String rowKey;

    /*
     * If specified, each item in the array is the name of a column to remove (if present) from output event entities.
     */
    private List<String> columnsToRemove;

    /*
     * The number of rows to write to the Azure Table at a time.
     */
    private Integer batchSize;

    /**
     * Creates an instance of AzureTableOutputDataSourceProperties class.
     */
    public AzureTableOutputDataSourceProperties() {
    }

    /**
     * Get the accountName property: The name of the Azure Storage account. Required on PUT (CreateOrReplace) requests.
     * 
     * @return the accountName value.
     */
    public String accountName() {
        return this.accountName;
    }

    /**
     * Set the accountName property: The name of the Azure Storage account. Required on PUT (CreateOrReplace) requests.
     * 
     * @param accountName the accountName value to set.
     * @return the AzureTableOutputDataSourceProperties object itself.
     */
    public AzureTableOutputDataSourceProperties withAccountName(String accountName) {
        this.accountName = accountName;
        return this;
    }

    /**
     * Get the accountKey property: The account key for the Azure Storage account. Required on PUT (CreateOrReplace)
     * requests.
     * 
     * @return the accountKey value.
     */
    public String accountKey() {
        return this.accountKey;
    }

    /**
     * Set the accountKey property: The account key for the Azure Storage account. Required on PUT (CreateOrReplace)
     * requests.
     * 
     * @param accountKey the accountKey value to set.
     * @return the AzureTableOutputDataSourceProperties object itself.
     */
    public AzureTableOutputDataSourceProperties withAccountKey(String accountKey) {
        this.accountKey = accountKey;
        return this;
    }

    /**
     * Get the table property: The name of the Azure Table. Required on PUT (CreateOrReplace) requests.
     * 
     * @return the table value.
     */
    public String table() {
        return this.table;
    }

    /**
     * Set the table property: The name of the Azure Table. Required on PUT (CreateOrReplace) requests.
     * 
     * @param table the table value to set.
     * @return the AzureTableOutputDataSourceProperties object itself.
     */
    public AzureTableOutputDataSourceProperties withTable(String table) {
        this.table = table;
        return this;
    }

    /**
     * Get the partitionKey property: This element indicates the name of a column from the SELECT statement in the query
     * that will be used as the partition key for the Azure Table. Required on PUT (CreateOrReplace) requests.
     * 
     * @return the partitionKey value.
     */
    public String partitionKey() {
        return this.partitionKey;
    }

    /**
     * Set the partitionKey property: This element indicates the name of a column from the SELECT statement in the query
     * that will be used as the partition key for the Azure Table. Required on PUT (CreateOrReplace) requests.
     * 
     * @param partitionKey the partitionKey value to set.
     * @return the AzureTableOutputDataSourceProperties object itself.
     */
    public AzureTableOutputDataSourceProperties withPartitionKey(String partitionKey) {
        this.partitionKey = partitionKey;
        return this;
    }

    /**
     * Get the rowKey property: This element indicates the name of a column from the SELECT statement in the query that
     * will be used as the row key for the Azure Table. Required on PUT (CreateOrReplace) requests.
     * 
     * @return the rowKey value.
     */
    public String rowKey() {
        return this.rowKey;
    }

    /**
     * Set the rowKey property: This element indicates the name of a column from the SELECT statement in the query that
     * will be used as the row key for the Azure Table. Required on PUT (CreateOrReplace) requests.
     * 
     * @param rowKey the rowKey value to set.
     * @return the AzureTableOutputDataSourceProperties object itself.
     */
    public AzureTableOutputDataSourceProperties withRowKey(String rowKey) {
        this.rowKey = rowKey;
        return this;
    }

    /**
     * Get the columnsToRemove property: If specified, each item in the array is the name of a column to remove (if
     * present) from output event entities.
     * 
     * @return the columnsToRemove value.
     */
    public List<String> columnsToRemove() {
        return this.columnsToRemove;
    }

    /**
     * Set the columnsToRemove property: If specified, each item in the array is the name of a column to remove (if
     * present) from output event entities.
     * 
     * @param columnsToRemove the columnsToRemove value to set.
     * @return the AzureTableOutputDataSourceProperties object itself.
     */
    public AzureTableOutputDataSourceProperties withColumnsToRemove(List<String> columnsToRemove) {
        this.columnsToRemove = columnsToRemove;
        return this;
    }

    /**
     * Get the batchSize property: The number of rows to write to the Azure Table at a time.
     * 
     * @return the batchSize value.
     */
    public Integer batchSize() {
        return this.batchSize;
    }

    /**
     * Set the batchSize property: The number of rows to write to the Azure Table at a time.
     * 
     * @param batchSize the batchSize value to set.
     * @return the AzureTableOutputDataSourceProperties object itself.
     */
    public AzureTableOutputDataSourceProperties withBatchSize(Integer batchSize) {
        this.batchSize = batchSize;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("accountName", this.accountName);
        jsonWriter.writeStringField("accountKey", this.accountKey);
        jsonWriter.writeStringField("table", this.table);
        jsonWriter.writeStringField("partitionKey", this.partitionKey);
        jsonWriter.writeStringField("rowKey", this.rowKey);
        jsonWriter.writeArrayField("columnsToRemove", this.columnsToRemove,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeNumberField("batchSize", this.batchSize);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureTableOutputDataSourceProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureTableOutputDataSourceProperties if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AzureTableOutputDataSourceProperties.
     */
    public static AzureTableOutputDataSourceProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AzureTableOutputDataSourceProperties deserializedAzureTableOutputDataSourceProperties
                = new AzureTableOutputDataSourceProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("accountName".equals(fieldName)) {
                    deserializedAzureTableOutputDataSourceProperties.accountName = reader.getString();
                } else if ("accountKey".equals(fieldName)) {
                    deserializedAzureTableOutputDataSourceProperties.accountKey = reader.getString();
                } else if ("table".equals(fieldName)) {
                    deserializedAzureTableOutputDataSourceProperties.table = reader.getString();
                } else if ("partitionKey".equals(fieldName)) {
                    deserializedAzureTableOutputDataSourceProperties.partitionKey = reader.getString();
                } else if ("rowKey".equals(fieldName)) {
                    deserializedAzureTableOutputDataSourceProperties.rowKey = reader.getString();
                } else if ("columnsToRemove".equals(fieldName)) {
                    List<String> columnsToRemove = reader.readArray(reader1 -> reader1.getString());
                    deserializedAzureTableOutputDataSourceProperties.columnsToRemove = columnsToRemove;
                } else if ("batchSize".equals(fieldName)) {
                    deserializedAzureTableOutputDataSourceProperties.batchSize = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAzureTableOutputDataSourceProperties;
        });
    }
}
