// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.streamanalytics.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.streamanalytics.models.TestQueryDiagnostics;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The request object for query testing.
 */
@Fluent
public final class TestQueryInner {
    /*
     * Diagnostics information related to query testing.
     */
    @JsonProperty(value = "diagnostics")
    private TestQueryDiagnostics diagnostics;

    /*
     * Stream analytics job object which defines the input, output, and transformation for the query testing.
     */
    @JsonProperty(value = "streamingJob", required = true)
    private StreamingJobInner streamingJob;

    /**
     * Creates an instance of TestQueryInner class.
     */
    public TestQueryInner() {
    }

    /**
     * Get the diagnostics property: Diagnostics information related to query testing.
     * 
     * @return the diagnostics value.
     */
    public TestQueryDiagnostics diagnostics() {
        return this.diagnostics;
    }

    /**
     * Set the diagnostics property: Diagnostics information related to query testing.
     * 
     * @param diagnostics the diagnostics value to set.
     * @return the TestQueryInner object itself.
     */
    public TestQueryInner withDiagnostics(TestQueryDiagnostics diagnostics) {
        this.diagnostics = diagnostics;
        return this;
    }

    /**
     * Get the streamingJob property: Stream analytics job object which defines the input, output, and transformation
     * for the query testing.
     * 
     * @return the streamingJob value.
     */
    public StreamingJobInner streamingJob() {
        return this.streamingJob;
    }

    /**
     * Set the streamingJob property: Stream analytics job object which defines the input, output, and transformation
     * for the query testing.
     * 
     * @param streamingJob the streamingJob value to set.
     * @return the TestQueryInner object itself.
     */
    public TestQueryInner withStreamingJob(StreamingJobInner streamingJob) {
        this.streamingJob = streamingJob;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (diagnostics() != null) {
            diagnostics().validate();
        }
        if (streamingJob() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property streamingJob in model TestQueryInner"));
        } else {
            streamingJob().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(TestQueryInner.class);
}
