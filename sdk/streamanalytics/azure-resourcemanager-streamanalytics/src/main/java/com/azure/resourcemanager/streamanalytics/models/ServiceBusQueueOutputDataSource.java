// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.streamanalytics.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.streamanalytics.fluent.models.ServiceBusQueueOutputDataSourceProperties;
import java.io.IOException;
import java.util.List;

/**
 * Describes a Service Bus Queue output data source.
 */
@Fluent
public final class ServiceBusQueueOutputDataSource extends OutputDataSource {
    /*
     * Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
     */
    private String type = "Microsoft.ServiceBus/Queue";

    /*
     * The properties that are associated with a Service Bus Queue output. Required on PUT (CreateOrReplace) requests.
     */
    private ServiceBusQueueOutputDataSourceProperties innerProperties;

    /**
     * Creates an instance of ServiceBusQueueOutputDataSource class.
     */
    public ServiceBusQueueOutputDataSource() {
    }

    /**
     * Get the type property: Indicates the type of data source output will be written to. Required on PUT
     * (CreateOrReplace) requests.
     * 
     * @return the type value.
     */
    @Override
    public String type() {
        return this.type;
    }

    /**
     * Get the innerProperties property: The properties that are associated with a Service Bus Queue output. Required on
     * PUT (CreateOrReplace) requests.
     * 
     * @return the innerProperties value.
     */
    private ServiceBusQueueOutputDataSourceProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the queueName property: The name of the Service Bus Queue. Required on PUT (CreateOrReplace) requests.
     * 
     * @return the queueName value.
     */
    public String queueName() {
        return this.innerProperties() == null ? null : this.innerProperties().queueName();
    }

    /**
     * Set the queueName property: The name of the Service Bus Queue. Required on PUT (CreateOrReplace) requests.
     * 
     * @param queueName the queueName value to set.
     * @return the ServiceBusQueueOutputDataSource object itself.
     */
    public ServiceBusQueueOutputDataSource withQueueName(String queueName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ServiceBusQueueOutputDataSourceProperties();
        }
        this.innerProperties().withQueueName(queueName);
        return this;
    }

    /**
     * Get the propertyColumns property: A string array of the names of output columns to be attached to Service Bus
     * messages as custom properties.
     * 
     * @return the propertyColumns value.
     */
    public List<String> propertyColumns() {
        return this.innerProperties() == null ? null : this.innerProperties().propertyColumns();
    }

    /**
     * Set the propertyColumns property: A string array of the names of output columns to be attached to Service Bus
     * messages as custom properties.
     * 
     * @param propertyColumns the propertyColumns value to set.
     * @return the ServiceBusQueueOutputDataSource object itself.
     */
    public ServiceBusQueueOutputDataSource withPropertyColumns(List<String> propertyColumns) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ServiceBusQueueOutputDataSourceProperties();
        }
        this.innerProperties().withPropertyColumns(propertyColumns);
        return this;
    }

    /**
     * Get the systemPropertyColumns property: The system properties associated with the Service Bus Queue. The
     * following system properties are supported: ReplyToSessionId, ContentType, To, Subject, CorrelationId, TimeToLive,
     * PartitionKey, SessionId, ScheduledEnqueueTime, MessageId, ReplyTo, Label, ScheduledEnqueueTimeUtc.
     * 
     * @return the systemPropertyColumns value.
     */
    public Object systemPropertyColumns() {
        return this.innerProperties() == null ? null : this.innerProperties().systemPropertyColumns();
    }

    /**
     * Set the systemPropertyColumns property: The system properties associated with the Service Bus Queue. The
     * following system properties are supported: ReplyToSessionId, ContentType, To, Subject, CorrelationId, TimeToLive,
     * PartitionKey, SessionId, ScheduledEnqueueTime, MessageId, ReplyTo, Label, ScheduledEnqueueTimeUtc.
     * 
     * @param systemPropertyColumns the systemPropertyColumns value to set.
     * @return the ServiceBusQueueOutputDataSource object itself.
     */
    public ServiceBusQueueOutputDataSource withSystemPropertyColumns(Object systemPropertyColumns) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ServiceBusQueueOutputDataSourceProperties();
        }
        this.innerProperties().withSystemPropertyColumns(systemPropertyColumns);
        return this;
    }

    /**
     * Get the serviceBusNamespace property: The namespace that is associated with the desired Event Hub, Service Bus
     * Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
     * 
     * @return the serviceBusNamespace value.
     */
    public String serviceBusNamespace() {
        return this.innerProperties() == null ? null : this.innerProperties().serviceBusNamespace();
    }

    /**
     * Set the serviceBusNamespace property: The namespace that is associated with the desired Event Hub, Service Bus
     * Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
     * 
     * @param serviceBusNamespace the serviceBusNamespace value to set.
     * @return the ServiceBusQueueOutputDataSource object itself.
     */
    public ServiceBusQueueOutputDataSource withServiceBusNamespace(String serviceBusNamespace) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ServiceBusQueueOutputDataSourceProperties();
        }
        this.innerProperties().withServiceBusNamespace(serviceBusNamespace);
        return this;
    }

    /**
     * Get the sharedAccessPolicyName property: The shared access policy name for the Event Hub, Service Bus Queue,
     * Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
     * 
     * @return the sharedAccessPolicyName value.
     */
    public String sharedAccessPolicyName() {
        return this.innerProperties() == null ? null : this.innerProperties().sharedAccessPolicyName();
    }

    /**
     * Set the sharedAccessPolicyName property: The shared access policy name for the Event Hub, Service Bus Queue,
     * Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
     * 
     * @param sharedAccessPolicyName the sharedAccessPolicyName value to set.
     * @return the ServiceBusQueueOutputDataSource object itself.
     */
    public ServiceBusQueueOutputDataSource withSharedAccessPolicyName(String sharedAccessPolicyName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ServiceBusQueueOutputDataSourceProperties();
        }
        this.innerProperties().withSharedAccessPolicyName(sharedAccessPolicyName);
        return this;
    }

    /**
     * Get the sharedAccessPolicyKey property: The shared access policy key for the specified shared access policy.
     * Required on PUT (CreateOrReplace) requests.
     * 
     * @return the sharedAccessPolicyKey value.
     */
    public String sharedAccessPolicyKey() {
        return this.innerProperties() == null ? null : this.innerProperties().sharedAccessPolicyKey();
    }

    /**
     * Set the sharedAccessPolicyKey property: The shared access policy key for the specified shared access policy.
     * Required on PUT (CreateOrReplace) requests.
     * 
     * @param sharedAccessPolicyKey the sharedAccessPolicyKey value to set.
     * @return the ServiceBusQueueOutputDataSource object itself.
     */
    public ServiceBusQueueOutputDataSource withSharedAccessPolicyKey(String sharedAccessPolicyKey) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ServiceBusQueueOutputDataSourceProperties();
        }
        this.innerProperties().withSharedAccessPolicyKey(sharedAccessPolicyKey);
        return this;
    }

    /**
     * Get the authenticationMode property: Authentication Mode.
     * 
     * @return the authenticationMode value.
     */
    public AuthenticationMode authenticationMode() {
        return this.innerProperties() == null ? null : this.innerProperties().authenticationMode();
    }

    /**
     * Set the authenticationMode property: Authentication Mode.
     * 
     * @param authenticationMode the authenticationMode value to set.
     * @return the ServiceBusQueueOutputDataSource object itself.
     */
    public ServiceBusQueueOutputDataSource withAuthenticationMode(AuthenticationMode authenticationMode) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ServiceBusQueueOutputDataSourceProperties();
        }
        this.innerProperties().withAuthenticationMode(authenticationMode);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("type", this.type);
        jsonWriter.writeJsonField("properties", this.innerProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ServiceBusQueueOutputDataSource from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ServiceBusQueueOutputDataSource if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ServiceBusQueueOutputDataSource.
     */
    public static ServiceBusQueueOutputDataSource fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ServiceBusQueueOutputDataSource deserializedServiceBusQueueOutputDataSource
                = new ServiceBusQueueOutputDataSource();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("type".equals(fieldName)) {
                    deserializedServiceBusQueueOutputDataSource.type = reader.getString();
                } else if ("properties".equals(fieldName)) {
                    deserializedServiceBusQueueOutputDataSource.innerProperties
                        = ServiceBusQueueOutputDataSourceProperties.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedServiceBusQueueOutputDataSource;
        });
    }
}
