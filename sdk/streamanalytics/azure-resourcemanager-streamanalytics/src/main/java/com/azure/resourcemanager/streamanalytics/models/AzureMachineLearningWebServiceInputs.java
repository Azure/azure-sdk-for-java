// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.streamanalytics.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The inputs for the Azure Machine Learning web service endpoint.
 */
@Fluent
public final class AzureMachineLearningWebServiceInputs
    implements JsonSerializable<AzureMachineLearningWebServiceInputs> {
    /*
     * The name of the input. This is the name provided while authoring the endpoint.
     */
    private String name;

    /*
     * A list of input columns for the Azure Machine Learning web service endpoint.
     */
    private List<AzureMachineLearningWebServiceInputColumn> columnNames;

    /**
     * Creates an instance of AzureMachineLearningWebServiceInputs class.
     */
    public AzureMachineLearningWebServiceInputs() {
    }

    /**
     * Get the name property: The name of the input. This is the name provided while authoring the endpoint.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: The name of the input. This is the name provided while authoring the endpoint.
     * 
     * @param name the name value to set.
     * @return the AzureMachineLearningWebServiceInputs object itself.
     */
    public AzureMachineLearningWebServiceInputs withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the columnNames property: A list of input columns for the Azure Machine Learning web service endpoint.
     * 
     * @return the columnNames value.
     */
    public List<AzureMachineLearningWebServiceInputColumn> columnNames() {
        return this.columnNames;
    }

    /**
     * Set the columnNames property: A list of input columns for the Azure Machine Learning web service endpoint.
     * 
     * @param columnNames the columnNames value to set.
     * @return the AzureMachineLearningWebServiceInputs object itself.
     */
    public AzureMachineLearningWebServiceInputs
        withColumnNames(List<AzureMachineLearningWebServiceInputColumn> columnNames) {
        this.columnNames = columnNames;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (columnNames() != null) {
            columnNames().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("name", this.name);
        jsonWriter.writeArrayField("columnNames", this.columnNames, (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureMachineLearningWebServiceInputs from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureMachineLearningWebServiceInputs if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AzureMachineLearningWebServiceInputs.
     */
    public static AzureMachineLearningWebServiceInputs fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AzureMachineLearningWebServiceInputs deserializedAzureMachineLearningWebServiceInputs
                = new AzureMachineLearningWebServiceInputs();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("name".equals(fieldName)) {
                    deserializedAzureMachineLearningWebServiceInputs.name = reader.getString();
                } else if ("columnNames".equals(fieldName)) {
                    List<AzureMachineLearningWebServiceInputColumn> columnNames
                        = reader.readArray(reader1 -> AzureMachineLearningWebServiceInputColumn.fromJson(reader1));
                    deserializedAzureMachineLearningWebServiceInputs.columnNames = columnNames;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAzureMachineLearningWebServiceInputs;
        });
    }
}
