// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.streamanalytics.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.streamanalytics.fluent.models.CSharpFunctionBindingProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The binding to a CSharp function.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type")
@JsonTypeName("Microsoft.StreamAnalytics/CLRUdf")
@Fluent
public final class CSharpFunctionBinding extends FunctionBinding {
    /*
     * The binding properties associated with a CSharp function.
     */
    @JsonProperty(value = "properties")
    private CSharpFunctionBindingProperties innerProperties;

    /**
     * Creates an instance of CSharpFunctionBinding class.
     */
    public CSharpFunctionBinding() {
    }

    /**
     * Get the innerProperties property: The binding properties associated with a CSharp function.
     * 
     * @return the innerProperties value.
     */
    private CSharpFunctionBindingProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the dllPath property: The Csharp code containing a single function definition.
     * 
     * @return the dllPath value.
     */
    public String dllPath() {
        return this.innerProperties() == null ? null : this.innerProperties().dllPath();
    }

    /**
     * Set the dllPath property: The Csharp code containing a single function definition.
     * 
     * @param dllPath the dllPath value to set.
     * @return the CSharpFunctionBinding object itself.
     */
    public CSharpFunctionBinding withDllPath(String dllPath) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CSharpFunctionBindingProperties();
        }
        this.innerProperties().withDllPath(dllPath);
        return this;
    }

    /**
     * Get the classProperty property: The Csharp code containing a single function definition.
     * 
     * @return the classProperty value.
     */
    public String classProperty() {
        return this.innerProperties() == null ? null : this.innerProperties().classProperty();
    }

    /**
     * Set the classProperty property: The Csharp code containing a single function definition.
     * 
     * @param classProperty the classProperty value to set.
     * @return the CSharpFunctionBinding object itself.
     */
    public CSharpFunctionBinding withClassProperty(String classProperty) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CSharpFunctionBindingProperties();
        }
        this.innerProperties().withClassProperty(classProperty);
        return this;
    }

    /**
     * Get the method property: The Csharp code containing a single function definition.
     * 
     * @return the method value.
     */
    public String method() {
        return this.innerProperties() == null ? null : this.innerProperties().method();
    }

    /**
     * Set the method property: The Csharp code containing a single function definition.
     * 
     * @param method the method value to set.
     * @return the CSharpFunctionBinding object itself.
     */
    public CSharpFunctionBinding withMethod(String method) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CSharpFunctionBindingProperties();
        }
        this.innerProperties().withMethod(method);
        return this;
    }

    /**
     * Get the updateMode property: Refresh modes for Stream Analytics functions.
     * 
     * @return the updateMode value.
     */
    public UpdateMode updateMode() {
        return this.innerProperties() == null ? null : this.innerProperties().updateMode();
    }

    /**
     * Set the updateMode property: Refresh modes for Stream Analytics functions.
     * 
     * @param updateMode the updateMode value to set.
     * @return the CSharpFunctionBinding object itself.
     */
    public CSharpFunctionBinding withUpdateMode(UpdateMode updateMode) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CSharpFunctionBindingProperties();
        }
        this.innerProperties().withUpdateMode(updateMode);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
