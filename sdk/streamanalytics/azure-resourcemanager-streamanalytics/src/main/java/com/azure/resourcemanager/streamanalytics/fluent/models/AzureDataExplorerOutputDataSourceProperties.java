// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.streamanalytics.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.streamanalytics.models.AuthenticationMode;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The properties that are associated with an Azure Data Explorer output.
 */
@Fluent
public final class AzureDataExplorerOutputDataSourceProperties {
    /*
     * The name of the Azure Data Explorer cluster. Required on PUT (CreateOrReplace) requests.
     */
    @JsonProperty(value = "cluster")
    private String cluster;

    /*
     * The name of the Azure Data Explorer database. Required on PUT (CreateOrReplace) requests.
     */
    @JsonProperty(value = "database")
    private String database;

    /*
     * The name of the Azure Table. Required on PUT (CreateOrReplace) requests.
     */
    @JsonProperty(value = "table")
    private String table;

    /*
     * Authentication Mode.
     */
    @JsonProperty(value = "authenticationMode")
    private AuthenticationMode authenticationMode;

    /**
     * Creates an instance of AzureDataExplorerOutputDataSourceProperties class.
     */
    public AzureDataExplorerOutputDataSourceProperties() {
    }

    /**
     * Get the cluster property: The name of the Azure Data Explorer cluster. Required on PUT (CreateOrReplace)
     * requests.
     * 
     * @return the cluster value.
     */
    public String cluster() {
        return this.cluster;
    }

    /**
     * Set the cluster property: The name of the Azure Data Explorer cluster. Required on PUT (CreateOrReplace)
     * requests.
     * 
     * @param cluster the cluster value to set.
     * @return the AzureDataExplorerOutputDataSourceProperties object itself.
     */
    public AzureDataExplorerOutputDataSourceProperties withCluster(String cluster) {
        this.cluster = cluster;
        return this;
    }

    /**
     * Get the database property: The name of the Azure Data Explorer database. Required on PUT (CreateOrReplace)
     * requests.
     * 
     * @return the database value.
     */
    public String database() {
        return this.database;
    }

    /**
     * Set the database property: The name of the Azure Data Explorer database. Required on PUT (CreateOrReplace)
     * requests.
     * 
     * @param database the database value to set.
     * @return the AzureDataExplorerOutputDataSourceProperties object itself.
     */
    public AzureDataExplorerOutputDataSourceProperties withDatabase(String database) {
        this.database = database;
        return this;
    }

    /**
     * Get the table property: The name of the Azure Table. Required on PUT (CreateOrReplace) requests.
     * 
     * @return the table value.
     */
    public String table() {
        return this.table;
    }

    /**
     * Set the table property: The name of the Azure Table. Required on PUT (CreateOrReplace) requests.
     * 
     * @param table the table value to set.
     * @return the AzureDataExplorerOutputDataSourceProperties object itself.
     */
    public AzureDataExplorerOutputDataSourceProperties withTable(String table) {
        this.table = table;
        return this;
    }

    /**
     * Get the authenticationMode property: Authentication Mode.
     * 
     * @return the authenticationMode value.
     */
    public AuthenticationMode authenticationMode() {
        return this.authenticationMode;
    }

    /**
     * Set the authenticationMode property: Authentication Mode.
     * 
     * @param authenticationMode the authenticationMode value to set.
     * @return the AzureDataExplorerOutputDataSourceProperties object itself.
     */
    public AzureDataExplorerOutputDataSourceProperties withAuthenticationMode(AuthenticationMode authenticationMode) {
        this.authenticationMode = authenticationMode;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
