// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.streamanalytics.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.streamanalytics.models.EventGridEventSchemaType;
import com.azure.resourcemanager.streamanalytics.models.EventHubV2StreamInputDataSource;
import com.azure.resourcemanager.streamanalytics.models.StorageAccount;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * The properties that are associated with an event grid input containing stream data.
 */
@Fluent
public final class EventGridStreamInputDataSourceProperties {
    /*
     * Subscribers for the Event Grid. Currently only EventHub Subscriber is supported.
     */
    @JsonProperty(value = "subscriber")
    private EventHubV2StreamInputDataSource subscriber;

    /*
     * Indicates the Event Grid schema type.
     */
    @JsonProperty(value = "schema")
    private EventGridEventSchemaType schema;

    /*
     * A list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests.
     */
    @JsonProperty(value = "storageAccounts")
    private List<StorageAccount> storageAccounts;

    /*
     * List of Event Types that are supported by the Event Grid adapter.
     */
    @JsonProperty(value = "eventTypes")
    private List<String> eventTypes;

    /**
     * Creates an instance of EventGridStreamInputDataSourceProperties class.
     */
    public EventGridStreamInputDataSourceProperties() {
    }

    /**
     * Get the subscriber property: Subscribers for the Event Grid. Currently only EventHub Subscriber is supported.
     * 
     * @return the subscriber value.
     */
    public EventHubV2StreamInputDataSource subscriber() {
        return this.subscriber;
    }

    /**
     * Set the subscriber property: Subscribers for the Event Grid. Currently only EventHub Subscriber is supported.
     * 
     * @param subscriber the subscriber value to set.
     * @return the EventGridStreamInputDataSourceProperties object itself.
     */
    public EventGridStreamInputDataSourceProperties withSubscriber(EventHubV2StreamInputDataSource subscriber) {
        this.subscriber = subscriber;
        return this;
    }

    /**
     * Get the schema property: Indicates the Event Grid schema type.
     * 
     * @return the schema value.
     */
    public EventGridEventSchemaType schema() {
        return this.schema;
    }

    /**
     * Set the schema property: Indicates the Event Grid schema type.
     * 
     * @param schema the schema value to set.
     * @return the EventGridStreamInputDataSourceProperties object itself.
     */
    public EventGridStreamInputDataSourceProperties withSchema(EventGridEventSchemaType schema) {
        this.schema = schema;
        return this;
    }

    /**
     * Get the storageAccounts property: A list of one or more Azure Storage accounts. Required on PUT
     * (CreateOrReplace) requests.
     * 
     * @return the storageAccounts value.
     */
    public List<StorageAccount> storageAccounts() {
        return this.storageAccounts;
    }

    /**
     * Set the storageAccounts property: A list of one or more Azure Storage accounts. Required on PUT
     * (CreateOrReplace) requests.
     * 
     * @param storageAccounts the storageAccounts value to set.
     * @return the EventGridStreamInputDataSourceProperties object itself.
     */
    public EventGridStreamInputDataSourceProperties withStorageAccounts(List<StorageAccount> storageAccounts) {
        this.storageAccounts = storageAccounts;
        return this;
    }

    /**
     * Get the eventTypes property: List of Event Types that are supported by the Event Grid adapter.
     * 
     * @return the eventTypes value.
     */
    public List<String> eventTypes() {
        return this.eventTypes;
    }

    /**
     * Set the eventTypes property: List of Event Types that are supported by the Event Grid adapter.
     * 
     * @param eventTypes the eventTypes value to set.
     * @return the EventGridStreamInputDataSourceProperties object itself.
     */
    public EventGridStreamInputDataSourceProperties withEventTypes(List<String> eventTypes) {
        this.eventTypes = eventTypes;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (subscriber() != null) {
            subscriber().validate();
        }
        if (storageAccounts() != null) {
            storageAccounts().forEach(e -> e.validate());
        }
    }
}
