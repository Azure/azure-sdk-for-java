// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.streamanalytics.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The properties that are associated with the CustomClr serialization type.
 */
@Fluent
public final class CustomClrSerializationProperties implements JsonSerializable<CustomClrSerializationProperties> {
    /*
     * The serialization library path.
     */
    private String serializationDllPath;

    /*
     * The serialization class name.
     */
    private String serializationClassName;

    /**
     * Creates an instance of CustomClrSerializationProperties class.
     */
    public CustomClrSerializationProperties() {
    }

    /**
     * Get the serializationDllPath property: The serialization library path.
     * 
     * @return the serializationDllPath value.
     */
    public String serializationDllPath() {
        return this.serializationDllPath;
    }

    /**
     * Set the serializationDllPath property: The serialization library path.
     * 
     * @param serializationDllPath the serializationDllPath value to set.
     * @return the CustomClrSerializationProperties object itself.
     */
    public CustomClrSerializationProperties withSerializationDllPath(String serializationDllPath) {
        this.serializationDllPath = serializationDllPath;
        return this;
    }

    /**
     * Get the serializationClassName property: The serialization class name.
     * 
     * @return the serializationClassName value.
     */
    public String serializationClassName() {
        return this.serializationClassName;
    }

    /**
     * Set the serializationClassName property: The serialization class name.
     * 
     * @param serializationClassName the serializationClassName value to set.
     * @return the CustomClrSerializationProperties object itself.
     */
    public CustomClrSerializationProperties withSerializationClassName(String serializationClassName) {
        this.serializationClassName = serializationClassName;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("serializationDllPath", this.serializationDllPath);
        jsonWriter.writeStringField("serializationClassName", this.serializationClassName);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CustomClrSerializationProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CustomClrSerializationProperties if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the CustomClrSerializationProperties.
     */
    public static CustomClrSerializationProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CustomClrSerializationProperties deserializedCustomClrSerializationProperties
                = new CustomClrSerializationProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("serializationDllPath".equals(fieldName)) {
                    deserializedCustomClrSerializationProperties.serializationDllPath = reader.getString();
                } else if ("serializationClassName".equals(fieldName)) {
                    deserializedCustomClrSerializationProperties.serializationClassName = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCustomClrSerializationProperties;
        });
    }
}
