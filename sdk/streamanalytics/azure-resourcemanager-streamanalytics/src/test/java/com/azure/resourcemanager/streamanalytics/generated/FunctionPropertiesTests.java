// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.streamanalytics.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.streamanalytics.models.FunctionBinding;
import com.azure.resourcemanager.streamanalytics.models.FunctionInput;
import com.azure.resourcemanager.streamanalytics.models.FunctionOutput;
import com.azure.resourcemanager.streamanalytics.models.FunctionProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class FunctionPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FunctionProperties model = BinaryData.fromString(
            "{\"type\":\"FunctionProperties\",\"etag\":\"fmppe\",\"properties\":{\"inputs\":[{\"dataType\":\"xsabkyqdu\",\"isConfigurationParameter\":false},{\"dataType\":\"c\",\"isConfigurationParameter\":false}],\"output\":{\"dataType\":\"evndh\"},\"binding\":{\"type\":\"FunctionBinding\"}}}")
            .toObject(FunctionProperties.class);
        Assertions.assertEquals("xsabkyqdu", model.inputs().get(0).dataType());
        Assertions.assertEquals(false, model.inputs().get(0).isConfigurationParameter());
        Assertions.assertEquals("evndh", model.output().dataType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FunctionProperties model = new FunctionProperties()
            .withInputs(Arrays.asList(new FunctionInput().withDataType("xsabkyqdu").withIsConfigurationParameter(false),
                new FunctionInput().withDataType("c").withIsConfigurationParameter(false)))
            .withOutput(new FunctionOutput().withDataType("evndh"))
            .withBinding(new FunctionBinding());
        model = BinaryData.fromObject(model).toObject(FunctionProperties.class);
        Assertions.assertEquals("xsabkyqdu", model.inputs().get(0).dataType());
        Assertions.assertEquals(false, model.inputs().get(0).isConfigurationParameter());
        Assertions.assertEquals("evndh", model.output().dataType());
    }
}
