// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.streamanalytics.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.streamanalytics.fluent.models.PrivateEndpointInner;
import com.azure.resourcemanager.streamanalytics.models.PrivateEndpointProperties;
import com.azure.resourcemanager.streamanalytics.models.PrivateLinkConnectionState;
import com.azure.resourcemanager.streamanalytics.models.PrivateLinkServiceConnection;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PrivateEndpointInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateEndpointInner model = BinaryData.fromString(
            "{\"properties\":{\"createdDate\":\"kyv\",\"manualPrivateLinkServiceConnections\":[{\"properties\":{\"privateLinkServiceId\":\"uzbpzkafku\",\"groupIds\":[\"rnwb\",\"ehhseyvjusrts\"],\"requestMessage\":\"spkdee\",\"privateLinkServiceConnectionState\":{\"status\":\"fm\",\"description\":\"gkvtmelmqkrhah\",\"actionsRequired\":\"juahaquhcdhmdual\"}}}]},\"etag\":\"xqpvfadmw\",\"id\":\"rcrgvx\",\"name\":\"vgomz\",\"type\":\"fmisg\"}")
            .toObject(PrivateEndpointInner.class);
        Assertions.assertEquals("uzbpzkafku",
            model.properties().manualPrivateLinkServiceConnections().get(0).privateLinkServiceId());
        Assertions.assertEquals("rnwb",
            model.properties().manualPrivateLinkServiceConnections().get(0).groupIds().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateEndpointInner model = new PrivateEndpointInner().withProperties(new PrivateEndpointProperties()
            .withManualPrivateLinkServiceConnections(Arrays.asList(new PrivateLinkServiceConnection()
                .withPrivateLinkServiceId("uzbpzkafku").withGroupIds(Arrays.asList("rnwb", "ehhseyvjusrts"))
                .withPrivateLinkServiceConnectionState(new PrivateLinkConnectionState()))));
        model = BinaryData.fromObject(model).toObject(PrivateEndpointInner.class);
        Assertions.assertEquals("uzbpzkafku",
            model.properties().manualPrivateLinkServiceConnections().get(0).privateLinkServiceId());
        Assertions.assertEquals("rnwb",
            model.properties().manualPrivateLinkServiceConnections().get(0).groupIds().get(0));
    }
}
