// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.streamanalytics.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.streamanalytics.models.OutputWatermarkMode;
import com.azure.resourcemanager.streamanalytics.models.OutputWatermarkProperties;
import org.junit.jupiter.api.Assertions;

public final class OutputWatermarkPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OutputWatermarkProperties model = BinaryData.fromString(
            "{\"watermarkMode\":\"SendLowestWatermarkAcrossPartitions\",\"maxWatermarkDifferenceAcrossPartitions\":\"heotusiv\"}")
            .toObject(OutputWatermarkProperties.class);
        Assertions.assertEquals(OutputWatermarkMode.SEND_LOWEST_WATERMARK_ACROSS_PARTITIONS, model.watermarkMode());
        Assertions.assertEquals("heotusiv", model.maxWatermarkDifferenceAcrossPartitions());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OutputWatermarkProperties model = new OutputWatermarkProperties()
            .withWatermarkMode(OutputWatermarkMode.SEND_LOWEST_WATERMARK_ACROSS_PARTITIONS)
            .withMaxWatermarkDifferenceAcrossPartitions("heotusiv");
        model = BinaryData.fromObject(model).toObject(OutputWatermarkProperties.class);
        Assertions.assertEquals(OutputWatermarkMode.SEND_LOWEST_WATERMARK_ACROSS_PARTITIONS, model.watermarkMode());
        Assertions.assertEquals("heotusiv", model.maxWatermarkDifferenceAcrossPartitions());
    }
}
