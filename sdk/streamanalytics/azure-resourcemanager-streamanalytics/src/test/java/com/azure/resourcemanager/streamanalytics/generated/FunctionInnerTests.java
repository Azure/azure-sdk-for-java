// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.streamanalytics.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.streamanalytics.fluent.models.FunctionInner;
import com.azure.resourcemanager.streamanalytics.models.FunctionBinding;
import com.azure.resourcemanager.streamanalytics.models.FunctionInput;
import com.azure.resourcemanager.streamanalytics.models.FunctionOutput;
import com.azure.resourcemanager.streamanalytics.models.FunctionProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class FunctionInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FunctionInner model = BinaryData.fromString(
            "{\"properties\":{\"type\":\"FunctionProperties\",\"etag\":\"hq\",\"properties\":{\"inputs\":[{\"dataType\":\"pybczmehmtzopb\",\"isConfigurationParameter\":false},{\"dataType\":\"upi\",\"isConfigurationParameter\":true},{\"dataType\":\"bb\",\"isConfigurationParameter\":false}],\"output\":{\"dataType\":\"oycmsxaobhdxbmt\"},\"binding\":{\"type\":\"FunctionBinding\"}}},\"name\":\"qj\",\"type\":\"htbmuf\",\"id\":\"wnoi\"}")
            .toObject(FunctionInner.class);
        Assertions.assertEquals("wnoi", model.id());
        Assertions.assertEquals("pybczmehmtzopb", model.properties().inputs().get(0).dataType());
        Assertions.assertEquals(false, model.properties().inputs().get(0).isConfigurationParameter());
        Assertions.assertEquals("oycmsxaobhdxbmt", model.properties().output().dataType());
        Assertions.assertEquals("qj", model.name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FunctionInner model = new FunctionInner().withId("wnoi").withProperties(new FunctionProperties()
            .withInputs(
                Arrays.asList(new FunctionInput().withDataType("pybczmehmtzopb").withIsConfigurationParameter(false),
                    new FunctionInput().withDataType("upi").withIsConfigurationParameter(true),
                    new FunctionInput().withDataType("bb").withIsConfigurationParameter(false)))
            .withOutput(new FunctionOutput().withDataType("oycmsxaobhdxbmt")).withBinding(new FunctionBinding()))
            .withName("qj");
        model = BinaryData.fromObject(model).toObject(FunctionInner.class);
        Assertions.assertEquals("wnoi", model.id());
        Assertions.assertEquals("pybczmehmtzopb", model.properties().inputs().get(0).dataType());
        Assertions.assertEquals(false, model.properties().inputs().get(0).isConfigurationParameter());
        Assertions.assertEquals("oycmsxaobhdxbmt", model.properties().output().dataType());
        Assertions.assertEquals("qj", model.name());
    }
}
