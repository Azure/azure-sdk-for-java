// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.streamanalytics.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.streamanalytics.StreamAnalyticsManager;
import com.azure.resourcemanager.streamanalytics.models.Transformation;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class TransformationsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"streamingUnits\":263453714,\"validStreamingUnits\":[576086700,1953823594],\"query\":\"sgbdhuz\",\"etag\":\"njdgkynscliq\"},\"name\":\"vhxnk\",\"type\":\"tkubotppn\",\"id\":\"xz\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        StreamAnalyticsManager manager = StreamAnalyticsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Transformation response = manager.transformations()
            .getWithResponse("auy", "vluwmncsttij", "y", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("xz", response.id());
        Assertions.assertEquals("vhxnk", response.name());
        Assertions.assertEquals(263453714, response.streamingUnits());
        Assertions.assertEquals(576086700, response.validStreamingUnits().get(0));
        Assertions.assertEquals("sgbdhuz", response.query());
    }
}
