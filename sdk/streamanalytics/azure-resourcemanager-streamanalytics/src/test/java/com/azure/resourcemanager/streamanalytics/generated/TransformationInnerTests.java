// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.streamanalytics.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.streamanalytics.fluent.models.TransformationInner;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class TransformationInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TransformationInner model = BinaryData.fromString(
            "{\"properties\":{\"streamingUnits\":545631747,\"validStreamingUnits\":[677143395],\"query\":\"f\",\"etag\":\"s\"},\"name\":\"zgvfcjrwz\",\"type\":\"xjtfelluwfzit\",\"id\":\"peqfpjkjl\"}")
            .toObject(TransformationInner.class);
        Assertions.assertEquals("peqfpjkjl", model.id());
        Assertions.assertEquals("zgvfcjrwz", model.name());
        Assertions.assertEquals(545631747, model.streamingUnits());
        Assertions.assertEquals(677143395, model.validStreamingUnits().get(0));
        Assertions.assertEquals("f", model.query());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TransformationInner model = new TransformationInner().withId("peqfpjkjl")
            .withName("zgvfcjrwz")
            .withStreamingUnits(545631747)
            .withValidStreamingUnits(Arrays.asList(677143395))
            .withQuery("f");
        model = BinaryData.fromObject(model).toObject(TransformationInner.class);
        Assertions.assertEquals("peqfpjkjl", model.id());
        Assertions.assertEquals("zgvfcjrwz", model.name());
        Assertions.assertEquals(545631747, model.streamingUnits());
        Assertions.assertEquals(677143395, model.validStreamingUnits().get(0));
        Assertions.assertEquals("f", model.query());
    }
}
