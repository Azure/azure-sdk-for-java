// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.streamanalytics.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.streamanalytics.fluent.models.TransformationInner;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class TransformationInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TransformationInner model = BinaryData.fromString(
            "{\"properties\":{\"streamingUnits\":1007195801,\"validStreamingUnits\":[1299140464,769076909],\"query\":\"cyshurzafbljjgp\",\"etag\":\"oq\"},\"name\":\"mkljavb\",\"type\":\"dtqajzyulpkudj\",\"id\":\"lkhbz\"}")
            .toObject(TransformationInner.class);
        Assertions.assertEquals("lkhbz", model.id());
        Assertions.assertEquals("mkljavb", model.name());
        Assertions.assertEquals(1007195801, model.streamingUnits());
        Assertions.assertEquals(1299140464, model.validStreamingUnits().get(0));
        Assertions.assertEquals("cyshurzafbljjgp", model.query());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TransformationInner model
            = new TransformationInner().withId("lkhbz").withName("mkljavb").withStreamingUnits(1007195801)
                .withValidStreamingUnits(Arrays.asList(1299140464, 769076909)).withQuery("cyshurzafbljjgp");
        model = BinaryData.fromObject(model).toObject(TransformationInner.class);
        Assertions.assertEquals("lkhbz", model.id());
        Assertions.assertEquals("mkljavb", model.name());
        Assertions.assertEquals(1007195801, model.streamingUnits());
        Assertions.assertEquals(1299140464, model.validStreamingUnits().get(0));
        Assertions.assertEquals("cyshurzafbljjgp", model.query());
    }
}
