// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.streamanalytics.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.streamanalytics.StreamAnalyticsManager;
import com.azure.resourcemanager.streamanalytics.models.Cluster;
import com.azure.resourcemanager.streamanalytics.models.ClusterSkuName;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ClustersListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"sku\":{\"name\":\"Default\",\"capacity\":508950619},\"etag\":\"yeozphvwauyqncy\",\"properties\":{\"createdDate\":\"2021-10-13T06:23:37Z\",\"clusterId\":\"ipmdscwx\",\"provisioningState\":\"Failed\",\"capacityAllocated\":852128353,\"capacityAssigned\":1875273166},\"location\":\"f\",\"tags\":{\"pelmcuvhixbjxyf\":\"txhojujb\",\"lrcoolsttpki\":\"n\",\"rywvtylbfpn\":\"kkbnu\"},\"id\":\"urdoi\",\"name\":\"iithtywu\",\"type\":\"xcbihw\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        StreamAnalyticsManager manager = StreamAnalyticsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Cluster> response = manager.clusters().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("f", response.iterator().next().location());
        Assertions.assertEquals("txhojujb", response.iterator().next().tags().get("pelmcuvhixbjxyf"));
        Assertions.assertEquals(ClusterSkuName.DEFAULT, response.iterator().next().sku().name());
        Assertions.assertEquals(508950619, response.iterator().next().sku().capacity());
    }
}
