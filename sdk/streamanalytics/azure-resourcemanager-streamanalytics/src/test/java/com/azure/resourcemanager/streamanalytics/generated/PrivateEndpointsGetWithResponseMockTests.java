// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.streamanalytics.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.streamanalytics.StreamAnalyticsManager;
import com.azure.resourcemanager.streamanalytics.models.PrivateEndpoint;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PrivateEndpointsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"createdDate\":\"wigdi\",\"manualPrivateLinkServiceConnections\":[{\"properties\":{\"privateLinkServiceId\":\"gomfajuwasq\",\"groupIds\":[\"e\",\"y\"],\"requestMessage\":\"xakjsqzhzb\",\"privateLinkServiceConnectionState\":{}}},{\"properties\":{\"privateLinkServiceId\":\"imsidxasicddyvvj\",\"groupIds\":[\"fmocwahpq\"],\"requestMessage\":\"tjeaahhvjhh\",\"privateLinkServiceConnectionState\":{}}}]},\"etag\":\"zybbj\",\"id\":\"idjks\",\"name\":\"xkyxvxevblbj\",\"type\":\"dnlj\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        StreamAnalyticsManager manager = StreamAnalyticsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PrivateEndpoint response = manager.privateEndpoints()
            .getWithResponse("zyqdrfegcealzx", "hcans", "moy", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("gomfajuwasq",
            response.properties().manualPrivateLinkServiceConnections().get(0).privateLinkServiceId());
        Assertions.assertEquals("e",
            response.properties().manualPrivateLinkServiceConnections().get(0).groupIds().get(0));
    }
}
