// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmosdbforpostgresql.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Authentication configuration of a cluster.
 */
@Fluent
public final class AuthConfig implements JsonSerializable<AuthConfig> {
    /*
     * The activeDirectoryAuth property.
     */
    private ActiveDirectoryAuth activeDirectoryAuth;

    /*
     * The passwordAuth property.
     */
    private PasswordAuth passwordAuth;

    /**
     * Creates an instance of AuthConfig class.
     */
    public AuthConfig() {
    }

    /**
     * Get the activeDirectoryAuth property: The activeDirectoryAuth property.
     * 
     * @return the activeDirectoryAuth value.
     */
    public ActiveDirectoryAuth activeDirectoryAuth() {
        return this.activeDirectoryAuth;
    }

    /**
     * Set the activeDirectoryAuth property: The activeDirectoryAuth property.
     * 
     * @param activeDirectoryAuth the activeDirectoryAuth value to set.
     * @return the AuthConfig object itself.
     */
    public AuthConfig withActiveDirectoryAuth(ActiveDirectoryAuth activeDirectoryAuth) {
        this.activeDirectoryAuth = activeDirectoryAuth;
        return this;
    }

    /**
     * Get the passwordAuth property: The passwordAuth property.
     * 
     * @return the passwordAuth value.
     */
    public PasswordAuth passwordAuth() {
        return this.passwordAuth;
    }

    /**
     * Set the passwordAuth property: The passwordAuth property.
     * 
     * @param passwordAuth the passwordAuth value to set.
     * @return the AuthConfig object itself.
     */
    public AuthConfig withPasswordAuth(PasswordAuth passwordAuth) {
        this.passwordAuth = passwordAuth;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("activeDirectoryAuth",
            this.activeDirectoryAuth == null ? null : this.activeDirectoryAuth.toString());
        jsonWriter.writeStringField("passwordAuth", this.passwordAuth == null ? null : this.passwordAuth.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AuthConfig from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AuthConfig if the JsonReader was pointing to an instance of it, or null if it was pointing
     * to JSON null.
     * @throws IOException If an error occurs while reading the AuthConfig.
     */
    public static AuthConfig fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AuthConfig deserializedAuthConfig = new AuthConfig();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("activeDirectoryAuth".equals(fieldName)) {
                    deserializedAuthConfig.activeDirectoryAuth = ActiveDirectoryAuth.fromString(reader.getString());
                } else if ("passwordAuth".equals(fieldName)) {
                    deserializedAuthConfig.passwordAuth = PasswordAuth.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAuthConfig;
        });
    }
}
