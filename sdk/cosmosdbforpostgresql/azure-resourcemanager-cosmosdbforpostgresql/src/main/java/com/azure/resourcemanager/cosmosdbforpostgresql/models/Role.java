// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmosdbforpostgresql.models;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.cosmosdbforpostgresql.fluent.models.RoleInner;

/**
 * An immutable client-side representation of Role.
 */
public interface Role {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the roleType property: The roleType property.
     * 
     * @return the roleType value.
     */
    RoleType roleType();

    /**
     * Gets the password property: The password of the cluster role. If an identity is used, password will not be
     * required.
     * 
     * @return the password value.
     */
    String password();

    /**
     * Gets the provisioningState property: Provisioning state of the role.
     * 
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the objectId property: The objectId property.
     * 
     * @return the objectId value.
     */
    String objectId();

    /**
     * Gets the principalType property: The principalType property.
     * 
     * @return the principalType value.
     */
    PrincipalType principalType();

    /**
     * Gets the tenantId property: The tenantId property.
     * 
     * @return the tenantId value.
     */
    String tenantId();

    /**
     * Gets the inner com.azure.resourcemanager.cosmosdbforpostgresql.fluent.models.RoleInner object.
     * 
     * @return the inner object.
     */
    RoleInner innerModel();

    /**
     * The entirety of the Role definition.
     */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }

    /**
     * The Role definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the Role definition.
         */
        interface Blank extends WithParentResource {
        }

        /**
         * The stage of the Role definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, clusterName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param clusterName The name of the cluster.
             * @return the next definition stage.
             */
            WithCreate withExistingServerGroupsv2(String resourceGroupName, String clusterName);
        }

        /**
         * The stage of the Role definition which contains all the minimum required properties for the resource to be
         * created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithRoleType, DefinitionStages.WithPassword,
            DefinitionStages.WithObjectId, DefinitionStages.WithPrincipalType, DefinitionStages.WithTenantId {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            Role create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            Role create(Context context);
        }

        /**
         * The stage of the Role definition allowing to specify roleType.
         */
        interface WithRoleType {
            /**
             * Specifies the roleType property: The roleType property..
             * 
             * @param roleType The roleType property.
             * @return the next definition stage.
             */
            WithCreate withRoleType(RoleType roleType);
        }

        /**
         * The stage of the Role definition allowing to specify password.
         */
        interface WithPassword {
            /**
             * Specifies the password property: The password of the cluster role. If an identity is used, password will
             * not be required..
             * 
             * @param password The password of the cluster role. If an identity is used, password will not be required.
             * @return the next definition stage.
             */
            WithCreate withPassword(String password);
        }

        /**
         * The stage of the Role definition allowing to specify objectId.
         */
        interface WithObjectId {
            /**
             * Specifies the objectId property: The objectId property..
             * 
             * @param objectId The objectId property.
             * @return the next definition stage.
             */
            WithCreate withObjectId(String objectId);
        }

        /**
         * The stage of the Role definition allowing to specify principalType.
         */
        interface WithPrincipalType {
            /**
             * Specifies the principalType property: The principalType property..
             * 
             * @param principalType The principalType property.
             * @return the next definition stage.
             */
            WithCreate withPrincipalType(PrincipalType principalType);
        }

        /**
         * The stage of the Role definition allowing to specify tenantId.
         */
        interface WithTenantId {
            /**
             * Specifies the tenantId property: The tenantId property..
             * 
             * @param tenantId The tenantId property.
             * @return the next definition stage.
             */
            WithCreate withTenantId(String tenantId);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    Role refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    Role refresh(Context context);
}
