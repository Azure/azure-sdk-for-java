// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmosdbforpostgresql.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cosmosdbforpostgresql.fluent.models.ConfigurationProperties;
import com.azure.resourcemanager.cosmosdbforpostgresql.models.ServerRole;
import com.azure.resourcemanager.cosmosdbforpostgresql.models.ServerRoleGroupConfiguration;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ConfigurationPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ConfigurationProperties model = BinaryData.fromString(
            "{\"description\":\"zdmohctbqvu\",\"dataType\":\"Boolean\",\"allowedValues\":\"ndnvo\",\"requiresRestart\":true,\"serverRoleGroupConfigurations\":[{\"role\":\"Worker\",\"value\":\"ugw\",\"defaultValue\":\"cglhslazjdyggdt\",\"source\":\"xhbkuofq\"},{\"role\":\"Coordinator\",\"value\":\"yk\",\"defaultValue\":\"enevfyexfwhybci\",\"source\":\"yvdcsitynnaa\"},{\"role\":\"Worker\",\"value\":\"ectehf\",\"defaultValue\":\"scjeypv\",\"source\":\"zrkgqhcjrefovg\"},{\"role\":\"Worker\",\"value\":\"qsl\",\"defaultValue\":\"yvxyqjp\",\"source\":\"attpngjcrcczsq\"}],\"provisioningState\":\"Failed\"}")
            .toObject(ConfigurationProperties.class);
        Assertions.assertEquals(true, model.requiresRestart());
        Assertions.assertEquals(ServerRole.WORKER, model.serverRoleGroupConfigurations().get(0).role());
        Assertions.assertEquals("ugw", model.serverRoleGroupConfigurations().get(0).value());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ConfigurationProperties model = new ConfigurationProperties().withRequiresRestart(true)
            .withServerRoleGroupConfigurations(
                Arrays.asList(new ServerRoleGroupConfiguration().withRole(ServerRole.WORKER).withValue("ugw"),
                    new ServerRoleGroupConfiguration().withRole(ServerRole.COORDINATOR).withValue("yk"),
                    new ServerRoleGroupConfiguration().withRole(ServerRole.WORKER).withValue("ectehf"),
                    new ServerRoleGroupConfiguration().withRole(ServerRole.WORKER).withValue("qsl")));
        model = BinaryData.fromObject(model).toObject(ConfigurationProperties.class);
        Assertions.assertEquals(true, model.requiresRestart());
        Assertions.assertEquals(ServerRole.WORKER, model.serverRoleGroupConfigurations().get(0).role());
        Assertions.assertEquals("ugw", model.serverRoleGroupConfigurations().get(0).value());
    }
}
