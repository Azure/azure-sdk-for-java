// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmosdbforpostgresql.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cosmosdbforpostgresql.fluent.models.PrivateEndpointConnectionInner;
import com.azure.resourcemanager.cosmosdbforpostgresql.models.PrivateEndpoint;
import com.azure.resourcemanager.cosmosdbforpostgresql.models.PrivateEndpointConnectionListResult;
import com.azure.resourcemanager.cosmosdbforpostgresql.models.PrivateEndpointServiceConnectionStatus;
import com.azure.resourcemanager.cosmosdbforpostgresql.models.PrivateLinkServiceConnectionState;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PrivateEndpointConnectionListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateEndpointConnectionListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"groupIds\":[\"bnlankxmyskpb\",\"enbtkcxywny\",\"nrs\",\"nlqidybyxczf\"],\"privateEndpoint\":{\"id\":\"aaxdbabphlwrq\"},\"privateLinkServiceConnectionState\":{\"status\":\"Rejected\",\"description\":\"sthsu\",\"actionsRequired\":\"cmnyyazttb\"},\"provisioningState\":\"Creating\"},\"id\":\"qpuedckzywbiex\",\"name\":\"fey\",\"type\":\"eaxib\"},{\"properties\":{\"groupIds\":[\"bhqwalmuzyoxa\",\"pdkzjancuxr\"],\"privateEndpoint\":{\"id\":\"bavxbniwdjswzt\"},\"privateLinkServiceConnectionState\":{\"status\":\"Pending\",\"description\":\"gnxytxhpzxbz\",\"actionsRequired\":\"zabglcuhxwt\"},\"provisioningState\":\"Failed\"},\"id\":\"iklbbovpl\",\"name\":\"zbhvgyuguosv\",\"type\":\"kfssxqukkf\"},{\"properties\":{\"groupIds\":[\"gsxnkjzkdeslpv\"],\"privateEndpoint\":{\"id\":\"wiyighxpkdw\"},\"privateLinkServiceConnectionState\":{\"status\":\"Rejected\",\"description\":\"uebbaumnyqup\",\"actionsRequired\":\"eojnabc\"},\"provisioningState\":\"Deleting\"},\"id\":\"txp\",\"name\":\"ie\",\"type\":\"tfhvpesapskrdqmh\"}]}")
            .toObject(PrivateEndpointConnectionListResult.class);
        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.REJECTED,
            model.value().get(0).privateLinkServiceConnectionState().status());
        Assertions.assertEquals("sthsu", model.value().get(0).privateLinkServiceConnectionState().description());
        Assertions.assertEquals("cmnyyazttb",
            model.value().get(0).privateLinkServiceConnectionState().actionsRequired());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateEndpointConnectionListResult model
            = new PrivateEndpointConnectionListResult()
                .withValue(Arrays.asList(
                    new PrivateEndpointConnectionInner().withPrivateEndpoint(new PrivateEndpoint())
                        .withPrivateLinkServiceConnectionState(new PrivateLinkServiceConnectionState()
                            .withStatus(PrivateEndpointServiceConnectionStatus.REJECTED)
                            .withDescription("sthsu")
                            .withActionsRequired("cmnyyazttb")),
                    new PrivateEndpointConnectionInner().withPrivateEndpoint(new PrivateEndpoint())
                        .withPrivateLinkServiceConnectionState(new PrivateLinkServiceConnectionState()
                            .withStatus(PrivateEndpointServiceConnectionStatus.PENDING)
                            .withDescription("gnxytxhpzxbz")
                            .withActionsRequired("zabglcuhxwt")),
                    new PrivateEndpointConnectionInner().withPrivateEndpoint(new PrivateEndpoint())
                        .withPrivateLinkServiceConnectionState(new PrivateLinkServiceConnectionState()
                            .withStatus(PrivateEndpointServiceConnectionStatus.REJECTED)
                            .withDescription("uebbaumnyqup")
                            .withActionsRequired("eojnabc"))));
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnectionListResult.class);
        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.REJECTED,
            model.value().get(0).privateLinkServiceConnectionState().status());
        Assertions.assertEquals("sthsu", model.value().get(0).privateLinkServiceConnectionState().description());
        Assertions.assertEquals("cmnyyazttb",
            model.value().get(0).privateLinkServiceConnectionState().actionsRequired());
    }
}
