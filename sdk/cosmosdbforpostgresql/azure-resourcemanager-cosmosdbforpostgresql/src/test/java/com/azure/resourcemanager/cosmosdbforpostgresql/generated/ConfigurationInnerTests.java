// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmosdbforpostgresql.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cosmosdbforpostgresql.fluent.models.ConfigurationInner;
import com.azure.resourcemanager.cosmosdbforpostgresql.models.ServerRole;
import com.azure.resourcemanager.cosmosdbforpostgresql.models.ServerRoleGroupConfiguration;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ConfigurationInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ConfigurationInner model = BinaryData.fromString(
            "{\"properties\":{\"description\":\"bxetqgtzxdpn\",\"dataType\":\"Boolean\",\"allowedValues\":\"wxrjfeallnwsub\",\"requiresRestart\":false,\"serverRoleGroupConfigurations\":[{\"role\":\"Coordinator\",\"value\":\"mpmngnzscxaqwoo\",\"defaultValue\":\"cbonqvpk\",\"source\":\"rxnjeaseipheofl\"},{\"role\":\"Coordinator\",\"value\":\"eyy\",\"defaultValue\":\"nj\",\"source\":\"lwtgrhpdj\"},{\"role\":\"Coordinator\",\"value\":\"umasxazjpq\",\"defaultValue\":\"gual\",\"source\":\"xxhejjzzvd\"},{\"role\":\"Worker\",\"value\":\"gwdslfhotwm\",\"defaultValue\":\"npwlbjnpg\",\"source\":\"ftadehxnltyfs\"}],\"provisioningState\":\"Canceled\"},\"id\":\"suesnzw\",\"name\":\"ej\",\"type\":\"avo\"}")
            .toObject(ConfigurationInner.class);
        Assertions.assertEquals(false, model.requiresRestart());
        Assertions.assertEquals(ServerRole.COORDINATOR, model.serverRoleGroupConfigurations().get(0).role());
        Assertions.assertEquals("mpmngnzscxaqwoo", model.serverRoleGroupConfigurations().get(0).value());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ConfigurationInner model = new ConfigurationInner().withRequiresRestart(false)
            .withServerRoleGroupConfigurations(Arrays.asList(
                new ServerRoleGroupConfiguration().withRole(ServerRole.COORDINATOR).withValue("mpmngnzscxaqwoo"),
                new ServerRoleGroupConfiguration().withRole(ServerRole.COORDINATOR).withValue("eyy"),
                new ServerRoleGroupConfiguration().withRole(ServerRole.COORDINATOR).withValue("umasxazjpq"),
                new ServerRoleGroupConfiguration().withRole(ServerRole.WORKER).withValue("gwdslfhotwm")));
        model = BinaryData.fromObject(model).toObject(ConfigurationInner.class);
        Assertions.assertEquals(false, model.requiresRestart());
        Assertions.assertEquals(ServerRole.COORDINATOR, model.serverRoleGroupConfigurations().get(0).role());
        Assertions.assertEquals("mpmngnzscxaqwoo", model.serverRoleGroupConfigurations().get(0).value());
    }
}
