// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmosdbforpostgresql.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.cosmosdbforpostgresql.CosmosDBForPostgreSqlManager;
import com.azure.resourcemanager.cosmosdbforpostgresql.fluent.models.ServerConfigurationInner;
import com.azure.resourcemanager.cosmosdbforpostgresql.models.ServerConfiguration;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ConfigurationsUpdateOnNodeMockTests {
    @Test
    public void testUpdateOnNode() throws Exception {
        String responseStr
            = "{\"properties\":{\"value\":\"bmrqyibahwfl\",\"source\":\"zdtmhrkwofy\",\"description\":\"oqac\",\"defaultValue\":\"expbtg\",\"dataType\":\"Integer\",\"allowedValues\":\"oenwashr\",\"requiresRestart\":false,\"provisioningState\":\"Succeeded\"},\"id\":\"qxwbpokulpiu\",\"name\":\"waasip\",\"type\":\"i\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        CosmosDBForPostgreSqlManager manager = CosmosDBForPostgreSqlManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ServerConfiguration response = manager.configurations()
            .updateOnNode("yhrfouyftaakcpw", "yzvqt", "nubexk", new ServerConfigurationInner().withValue("ksmond"),
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("bmrqyibahwfl", response.value());
    }
}
