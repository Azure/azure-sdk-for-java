// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmosdbforpostgresql.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cosmosdbforpostgresql.fluent.models.ClusterServerProperties;
import com.azure.resourcemanager.cosmosdbforpostgresql.models.ServerRole;
import org.junit.jupiter.api.Assertions;

public final class ClusterServerPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ClusterServerProperties model =
            BinaryData
                .fromString(
                    "{\"fullyQualifiedDomainName\":\"j\",\"role\":\"Worker\",\"state\":\"luwfzitonpeqfpjk\",\"haState\":\"xofpdvhpfxxypi\",\"availabilityZone\":\"nmayhuybb\",\"postgresqlVersion\":\"odepoogin\",\"citusVersion\":\"amiheognarxz\",\"serverEdition\":\"heotusiv\",\"storageQuotaInMb\":38096196,\"vCores\":401724837,\"enableHa\":false,\"enablePublicIpAccess\":false,\"isReadOnly\":true,\"administratorLogin\":\"ngbwjz\"}")
                .toObject(ClusterServerProperties.class);
        Assertions.assertEquals("heotusiv", model.serverEdition());
        Assertions.assertEquals(38096196, model.storageQuotaInMb());
        Assertions.assertEquals(401724837, model.vCores());
        Assertions.assertEquals(false, model.enableHa());
        Assertions.assertEquals(ServerRole.WORKER, model.role());
        Assertions.assertEquals("nmayhuybb", model.availabilityZone());
        Assertions.assertEquals("odepoogin", model.postgresqlVersion());
        Assertions.assertEquals("amiheognarxz", model.citusVersion());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ClusterServerProperties model =
            new ClusterServerProperties()
                .withServerEdition("heotusiv")
                .withStorageQuotaInMb(38096196)
                .withVCores(401724837)
                .withEnableHa(false)
                .withRole(ServerRole.WORKER)
                .withAvailabilityZone("nmayhuybb")
                .withPostgresqlVersion("odepoogin")
                .withCitusVersion("amiheognarxz");
        model = BinaryData.fromObject(model).toObject(ClusterServerProperties.class);
        Assertions.assertEquals("heotusiv", model.serverEdition());
        Assertions.assertEquals(38096196, model.storageQuotaInMb());
        Assertions.assertEquals(401724837, model.vCores());
        Assertions.assertEquals(false, model.enableHa());
        Assertions.assertEquals(ServerRole.WORKER, model.role());
        Assertions.assertEquals("nmayhuybb", model.availabilityZone());
        Assertions.assertEquals("odepoogin", model.postgresqlVersion());
        Assertions.assertEquals("amiheognarxz", model.citusVersion());
    }
}
