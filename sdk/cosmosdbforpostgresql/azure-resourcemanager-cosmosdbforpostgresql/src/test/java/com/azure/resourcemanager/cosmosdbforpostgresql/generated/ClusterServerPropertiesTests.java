// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmosdbforpostgresql.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cosmosdbforpostgresql.fluent.models.ClusterServerProperties;
import com.azure.resourcemanager.cosmosdbforpostgresql.models.ServerRole;
import org.junit.jupiter.api.Assertions;

public final class ClusterServerPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ClusterServerProperties model = BinaryData.fromString(
            "{\"fullyQualifiedDomainName\":\"zdzevndh\",\"role\":\"Worker\",\"state\":\"d\",\"haState\":\"p\",\"availabilityZone\":\"bdkvwrwjf\",\"postgresqlVersion\":\"snhu\",\"citusVersion\":\"eltmrldhugjzzdat\",\"serverEdition\":\"hocdgeab\",\"storageQuotaInMb\":950218840,\"vCores\":1780121294,\"enableHa\":true,\"enablePublicIpAccess\":false,\"isReadOnly\":true,\"administratorLogin\":\"aozwyiftyhxhu\"}")
            .toObject(ClusterServerProperties.class);
        Assertions.assertEquals("hocdgeab", model.serverEdition());
        Assertions.assertEquals(950218840, model.storageQuotaInMb());
        Assertions.assertEquals(1780121294, model.vCores());
        Assertions.assertEquals(true, model.enableHa());
        Assertions.assertEquals(ServerRole.WORKER, model.role());
        Assertions.assertEquals("bdkvwrwjf", model.availabilityZone());
        Assertions.assertEquals("snhu", model.postgresqlVersion());
        Assertions.assertEquals("eltmrldhugjzzdat", model.citusVersion());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ClusterServerProperties model = new ClusterServerProperties().withServerEdition("hocdgeab")
            .withStorageQuotaInMb(950218840)
            .withVCores(1780121294)
            .withEnableHa(true)
            .withRole(ServerRole.WORKER)
            .withAvailabilityZone("bdkvwrwjf")
            .withPostgresqlVersion("snhu")
            .withCitusVersion("eltmrldhugjzzdat");
        model = BinaryData.fromObject(model).toObject(ClusterServerProperties.class);
        Assertions.assertEquals("hocdgeab", model.serverEdition());
        Assertions.assertEquals(950218840, model.storageQuotaInMb());
        Assertions.assertEquals(1780121294, model.vCores());
        Assertions.assertEquals(true, model.enableHa());
        Assertions.assertEquals(ServerRole.WORKER, model.role());
        Assertions.assertEquals("bdkvwrwjf", model.availabilityZone());
        Assertions.assertEquals("snhu", model.postgresqlVersion());
        Assertions.assertEquals("eltmrldhugjzzdat", model.citusVersion());
    }
}
