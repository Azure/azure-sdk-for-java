// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmosdbforpostgresql.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.cosmosdbforpostgresql.CosmosDBForPostgreSqlManager;
import com.azure.resourcemanager.cosmosdbforpostgresql.models.Configuration;
import com.azure.resourcemanager.cosmosdbforpostgresql.models.ServerRole;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ConfigurationsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"description\":\"d\",\"dataType\":\"Numeric\",\"allowedValues\":\"hzdxssadbzm\",\"requiresRestart\":true,\"serverRoleGroupConfigurations\":[{\"role\":\"Coordinator\",\"value\":\"n\",\"defaultValue\":\"ao\",\"source\":\"xzb\"},{\"role\":\"Worker\",\"value\":\"blylpstdbh\",\"defaultValue\":\"srzdzucerscdn\",\"source\":\"evfiwjmygt\"},{\"role\":\"Worker\",\"value\":\"slswtm\",\"defaultValue\":\"riofzpyqse\",\"source\":\"abnetshh\"}],\"provisioningState\":\"Succeeded\"},\"id\":\"d\",\"name\":\"lvwiwubmwmbesl\",\"type\":\"nkww\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        CosmosDBForPostgreSqlManager manager = CosmosDBForPostgreSqlManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Configuration response = manager.configurations()
            .getWithResponse("aolps", "lqlfm", "dnbbglzps", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(true, response.requiresRestart());
        Assertions.assertEquals(ServerRole.COORDINATOR, response.serverRoleGroupConfigurations().get(0).role());
        Assertions.assertEquals("n", response.serverRoleGroupConfigurations().get(0).value());
    }
}
