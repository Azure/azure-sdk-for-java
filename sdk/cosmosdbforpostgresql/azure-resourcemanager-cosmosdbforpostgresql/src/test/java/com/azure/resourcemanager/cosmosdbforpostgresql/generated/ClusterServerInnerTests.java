// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmosdbforpostgresql.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cosmosdbforpostgresql.fluent.models.ClusterServerInner;
import com.azure.resourcemanager.cosmosdbforpostgresql.models.ServerRole;
import org.junit.jupiter.api.Assertions;

public final class ClusterServerInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ClusterServerInner model = BinaryData.fromString(
            "{\"properties\":{\"fullyQualifiedDomainName\":\"ksqrglssai\",\"role\":\"Coordinator\",\"state\":\"wnzlljfmppeeb\",\"haState\":\"gxsabkyq\",\"availabilityZone\":\"ujitcjcz\",\"postgresqlVersion\":\"evndh\",\"citusVersion\":\"wpdappdsbdkv\",\"serverEdition\":\"wjfeusnhutjel\",\"storageQuotaInMb\":391471833,\"vCores\":1969626150,\"enableHa\":true,\"enablePublicIpAccess\":false,\"isReadOnly\":true,\"administratorLogin\":\"atqxho\"},\"id\":\"geablgphuticndvk\",\"name\":\"ozwyiftyhxhuro\",\"type\":\"ftyxolniw\"}")
            .toObject(ClusterServerInner.class);
        Assertions.assertEquals(ServerRole.COORDINATOR, model.role());
        Assertions.assertEquals("ujitcjcz", model.availabilityZone());
        Assertions.assertEquals("evndh", model.postgresqlVersion());
        Assertions.assertEquals("wpdappdsbdkv", model.citusVersion());
        Assertions.assertEquals("wjfeusnhutjel", model.serverEdition());
        Assertions.assertEquals(391471833, model.storageQuotaInMb());
        Assertions.assertEquals(1969626150, model.vCores());
        Assertions.assertEquals(true, model.enableHa());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ClusterServerInner model
            = new ClusterServerInner().withRole(ServerRole.COORDINATOR).withAvailabilityZone("ujitcjcz")
                .withPostgresqlVersion("evndh").withCitusVersion("wpdappdsbdkv").withServerEdition("wjfeusnhutjel")
                .withStorageQuotaInMb(391471833).withVCores(1969626150).withEnableHa(true);
        model = BinaryData.fromObject(model).toObject(ClusterServerInner.class);
        Assertions.assertEquals(ServerRole.COORDINATOR, model.role());
        Assertions.assertEquals("ujitcjcz", model.availabilityZone());
        Assertions.assertEquals("evndh", model.postgresqlVersion());
        Assertions.assertEquals("wpdappdsbdkv", model.citusVersion());
        Assertions.assertEquals("wjfeusnhutjel", model.serverEdition());
        Assertions.assertEquals(391471833, model.storageQuotaInMb());
        Assertions.assertEquals(1969626150, model.vCores());
        Assertions.assertEquals(true, model.enableHa());
    }
}
