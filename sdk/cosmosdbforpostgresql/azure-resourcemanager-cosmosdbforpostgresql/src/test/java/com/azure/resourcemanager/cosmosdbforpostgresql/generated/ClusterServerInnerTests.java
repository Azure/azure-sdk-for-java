// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmosdbforpostgresql.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cosmosdbforpostgresql.fluent.models.ClusterServerInner;
import com.azure.resourcemanager.cosmosdbforpostgresql.models.ServerRole;
import org.junit.jupiter.api.Assertions;

public final class ClusterServerInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ClusterServerInner model = BinaryData.fromString(
            "{\"properties\":{\"fullyQualifiedDomainName\":\"asvm\",\"role\":\"Coordinator\",\"state\":\"ulngsntn\",\"haState\":\"bkzgcwrwclx\",\"availabilityZone\":\"rljdouskcqv\",\"postgresqlVersion\":\"cr\",\"citusVersion\":\"dkwt\",\"serverEdition\":\"xbnjbiksq\",\"storageQuotaInMb\":1218196264,\"vCores\":595941541,\"enableHa\":true,\"enablePublicIpAccess\":true,\"isReadOnly\":true,\"administratorLogin\":\"nzl\"},\"id\":\"fmppe\",\"name\":\"bvmgxsabkyqduuji\",\"type\":\"c\"}")
            .toObject(ClusterServerInner.class);
        Assertions.assertEquals(ServerRole.COORDINATOR, model.role());
        Assertions.assertEquals("rljdouskcqv", model.availabilityZone());
        Assertions.assertEquals("cr", model.postgresqlVersion());
        Assertions.assertEquals("dkwt", model.citusVersion());
        Assertions.assertEquals("xbnjbiksq", model.serverEdition());
        Assertions.assertEquals(1218196264, model.storageQuotaInMb());
        Assertions.assertEquals(595941541, model.vCores());
        Assertions.assertEquals(true, model.enableHa());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ClusterServerInner model = new ClusterServerInner().withRole(ServerRole.COORDINATOR)
            .withAvailabilityZone("rljdouskcqv")
            .withPostgresqlVersion("cr")
            .withCitusVersion("dkwt")
            .withServerEdition("xbnjbiksq")
            .withStorageQuotaInMb(1218196264)
            .withVCores(595941541)
            .withEnableHa(true);
        model = BinaryData.fromObject(model).toObject(ClusterServerInner.class);
        Assertions.assertEquals(ServerRole.COORDINATOR, model.role());
        Assertions.assertEquals("rljdouskcqv", model.availabilityZone());
        Assertions.assertEquals("cr", model.postgresqlVersion());
        Assertions.assertEquals("dkwt", model.citusVersion());
        Assertions.assertEquals("xbnjbiksq", model.serverEdition());
        Assertions.assertEquals(1218196264, model.storageQuotaInMb());
        Assertions.assertEquals(595941541, model.vCores());
        Assertions.assertEquals(true, model.enableHa());
    }
}
