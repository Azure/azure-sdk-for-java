// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmosdbforpostgresql.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cosmosdbforpostgresql.fluent.models.ClusterServerInner;
import com.azure.resourcemanager.cosmosdbforpostgresql.models.ServerRole;
import org.junit.jupiter.api.Assertions;

public final class ClusterServerInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ClusterServerInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"fullyQualifiedDomainName\":\"jpslwejd\",\"role\":\"Worker\",\"state\":\"yoqpsoaccta\",\"haState\":\"kljla\",\"availabilityZone\":\"cr\",\"postgresqlVersion\":\"fdfdosygexpa\",\"citusVersion\":\"akhmsbzjhcrz\",\"serverEdition\":\"dphlxaolt\",\"storageQuotaInMb\":578472109,\"vCores\":545631747,\"enableHa\":false,\"enablePublicIpAccess\":true,\"isReadOnly\":true,\"administratorLogin\":\"s\"},\"id\":\"n\",\"name\":\"gvfcj\",\"type\":\"wzo\"}")
                .toObject(ClusterServerInner.class);
        Assertions.assertEquals(ServerRole.WORKER, model.role());
        Assertions.assertEquals("cr", model.availabilityZone());
        Assertions.assertEquals("fdfdosygexpa", model.postgresqlVersion());
        Assertions.assertEquals("akhmsbzjhcrz", model.citusVersion());
        Assertions.assertEquals("dphlxaolt", model.serverEdition());
        Assertions.assertEquals(578472109, model.storageQuotaInMb());
        Assertions.assertEquals(545631747, model.vCores());
        Assertions.assertEquals(false, model.enableHa());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ClusterServerInner model =
            new ClusterServerInner()
                .withRole(ServerRole.WORKER)
                .withAvailabilityZone("cr")
                .withPostgresqlVersion("fdfdosygexpa")
                .withCitusVersion("akhmsbzjhcrz")
                .withServerEdition("dphlxaolt")
                .withStorageQuotaInMb(578472109)
                .withVCores(545631747)
                .withEnableHa(false);
        model = BinaryData.fromObject(model).toObject(ClusterServerInner.class);
        Assertions.assertEquals(ServerRole.WORKER, model.role());
        Assertions.assertEquals("cr", model.availabilityZone());
        Assertions.assertEquals("fdfdosygexpa", model.postgresqlVersion());
        Assertions.assertEquals("akhmsbzjhcrz", model.citusVersion());
        Assertions.assertEquals("dphlxaolt", model.serverEdition());
        Assertions.assertEquals(578472109, model.storageQuotaInMb());
        Assertions.assertEquals(545631747, model.vCores());
        Assertions.assertEquals(false, model.enableHa());
    }
}
