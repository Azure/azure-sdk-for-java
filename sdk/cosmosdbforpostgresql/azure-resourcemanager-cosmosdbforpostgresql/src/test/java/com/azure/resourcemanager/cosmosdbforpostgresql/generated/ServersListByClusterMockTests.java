// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmosdbforpostgresql.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.cosmosdbforpostgresql.CosmosDBForPostgreSqlManager;
import com.azure.resourcemanager.cosmosdbforpostgresql.models.ClusterServer;
import com.azure.resourcemanager.cosmosdbforpostgresql.models.ServerRole;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ServersListByClusterMockTests {
    @Test
    public void testListByCluster() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"fullyQualifiedDomainName\":\"jyofdxluusdtto\",\"role\":\"Coordinator\",\"state\":\"oekqvk\",\"haState\":\"nsmvbxwyj\",\"availabilityZone\":\"lh\",\"postgresqlVersion\":\"aalnjixi\",\"citusVersion\":\"yaw\",\"serverEdition\":\"yaqcslyjpkiidz\",\"storageQuotaInMb\":1211885049,\"vCores\":1066317539,\"enableHa\":true,\"enablePublicIpAccess\":true,\"isReadOnly\":false,\"administratorLogin\":\"ztfolhbnxk\"},\"id\":\"laulppg\",\"name\":\"dtpnapnyiropuhp\",\"type\":\"gvpgy\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        CosmosDBForPostgreSqlManager manager = CosmosDBForPostgreSqlManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<ClusterServer> response
            = manager.servers().listByCluster("dzumveekg", "wozuhkf", com.azure.core.util.Context.NONE);

        Assertions.assertEquals(ServerRole.COORDINATOR, response.iterator().next().role());
        Assertions.assertEquals("lh", response.iterator().next().availabilityZone());
        Assertions.assertEquals("aalnjixi", response.iterator().next().postgresqlVersion());
        Assertions.assertEquals("yaw", response.iterator().next().citusVersion());
        Assertions.assertEquals("yaqcslyjpkiidz", response.iterator().next().serverEdition());
        Assertions.assertEquals(1211885049, response.iterator().next().storageQuotaInMb());
        Assertions.assertEquals(1066317539, response.iterator().next().vCores());
        Assertions.assertEquals(true, response.iterator().next().enableHa());
    }
}
