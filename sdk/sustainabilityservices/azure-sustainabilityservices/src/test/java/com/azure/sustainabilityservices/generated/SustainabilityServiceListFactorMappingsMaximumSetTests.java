// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.sustainabilityservices.generated;

import com.azure.core.http.rest.PagedIterable;
import com.azure.sustainabilityservices.models.FactorMapping;
import com.azure.sustainabilityservices.models.LookupField;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class SustainabilityServiceListFactorMappingsMaximumSetTests extends SustainabilityServiceClientTestBase {
    @Test
    @Disabled
    public void testSustainabilityServiceListFactorMappingsMaximumSetTests() {
        // method invocation
        PagedIterable<FactorMapping> response
            = sustainabilityServiceClient.listFactorMappings("b7baa418-08be-430b-ae46-769cfdf91949");

        // response assertion
        Assertions.assertEquals(200, response.iterableByPage().iterator().next().getStatusCode());
        FactorMapping firstItem = response.iterator().next();
        Assertions.assertNotNull(firstItem);
        // verify property "factorMappingId"
        Assertions.assertEquals("b7baa418-08be-430b-ae46-769cfdf91949", firstItem.getFactorMappingId());
        // verify property "factorLibrary"
        LookupField firstItemFactorLibrary = firstItem.getFactorLibrary();
        Assertions.assertNotNull(firstItemFactorLibrary);
        Assertions.assertEquals("b7baa418-08be-430b-ae46-769cfdf91949", firstItemFactorLibrary.getId());
        Assertions.assertEquals("pbmfspnnuunedveu", firstItemFactorLibrary.getLogicalName());
        Assertions.assertEquals("qggwqivyfidlfquwibds", firstItemFactorLibrary.getName());
        Assertions.assertNotNull(firstItemFactorLibrary.getKeyAttributes());
        Assertions.assertEquals("mjopupgolatxymbilffp", firstItemFactorLibrary.getRowVersion());
        // verify property "name"
        Assertions.assertEquals("hdiesoxsmwwgszdbabaw", firstItem.getName());
        // verify property "factor"
        LookupField firstItemFactor = firstItem.getFactor();
        Assertions.assertNotNull(firstItemFactor);
        Assertions.assertEquals("b7baa418-08be-430b-ae46-769cfdf91949", firstItemFactor.getId());
        Assertions.assertEquals("pbmfspnnuunedveu", firstItemFactor.getLogicalName());
        Assertions.assertEquals("qggwqivyfidlfquwibds", firstItemFactor.getName());
        Assertions.assertNotNull(firstItemFactor.getKeyAttributes());
        Assertions.assertEquals("mjopupgolatxymbilffp", firstItemFactor.getRowVersion());
        // verify property "referenceData1"
        LookupField firstItemReferenceData1 = firstItem.getReferenceData1();
        Assertions.assertNotNull(firstItemReferenceData1);
        Assertions.assertEquals("b7baa418-08be-430b-ae46-769cfdf91949", firstItemReferenceData1.getId());
        Assertions.assertEquals("pbmfspnnuunedveu", firstItemReferenceData1.getLogicalName());
        Assertions.assertEquals("qggwqivyfidlfquwibds", firstItemReferenceData1.getName());
        Assertions.assertNotNull(firstItemReferenceData1.getKeyAttributes());
        Assertions.assertEquals("mjopupgolatxymbilffp", firstItemReferenceData1.getRowVersion());
        // verify property "referenceData2"
        LookupField firstItemReferenceData2 = firstItem.getReferenceData2();
        Assertions.assertNotNull(firstItemReferenceData2);
        Assertions.assertEquals("b7baa418-08be-430b-ae46-769cfdf91949", firstItemReferenceData2.getId());
        Assertions.assertEquals("pbmfspnnuunedveu", firstItemReferenceData2.getLogicalName());
        Assertions.assertEquals("qggwqivyfidlfquwibds", firstItemReferenceData2.getName());
        Assertions.assertNotNull(firstItemReferenceData2.getKeyAttributes());
        Assertions.assertEquals("mjopupgolatxymbilffp", firstItemReferenceData2.getRowVersion());
        // verify property "referenceData3"
        LookupField firstItemReferenceData3 = firstItem.getReferenceData3();
        Assertions.assertNotNull(firstItemReferenceData3);
        Assertions.assertEquals("b7baa418-08be-430b-ae46-769cfdf91949", firstItemReferenceData3.getId());
        Assertions.assertEquals("pbmfspnnuunedveu", firstItemReferenceData3.getLogicalName());
        Assertions.assertEquals("qggwqivyfidlfquwibds", firstItemReferenceData3.getName());
        Assertions.assertNotNull(firstItemReferenceData3.getKeyAttributes());
        Assertions.assertEquals("mjopupgolatxymbilffp", firstItemReferenceData3.getRowVersion());
        // verify property "referenceData4"
        LookupField firstItemReferenceData4 = firstItem.getReferenceData4();
        Assertions.assertNotNull(firstItemReferenceData4);
        Assertions.assertEquals("b7baa418-08be-430b-ae46-769cfdf91949", firstItemReferenceData4.getId());
        Assertions.assertEquals("pbmfspnnuunedveu", firstItemReferenceData4.getLogicalName());
        Assertions.assertEquals("qggwqivyfidlfquwibds", firstItemReferenceData4.getName());
        Assertions.assertNotNull(firstItemReferenceData4.getKeyAttributes());
        Assertions.assertEquals("mjopupgolatxymbilffp", firstItemReferenceData4.getRowVersion());
    }
}
