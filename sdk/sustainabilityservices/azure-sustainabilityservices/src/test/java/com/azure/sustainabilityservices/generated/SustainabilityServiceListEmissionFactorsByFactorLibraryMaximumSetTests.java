// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.sustainabilityservices.generated;

import com.azure.core.http.rest.PagedIterable;
import com.azure.sustainabilityservices.models.EmissionFactor;
import com.azure.sustainabilityservices.models.LookupField;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class SustainabilityServiceListEmissionFactorsByFactorLibraryMaximumSetTests
    extends SustainabilityServiceClientTestBase {
    @Test
    @Disabled
    public void testSustainabilityServiceListEmissionFactorsByFactorLibraryMaximumSetTests() {
        // method invocation
        PagedIterable<EmissionFactor> response
            = sustainabilityServiceClient.listEmissionFactorsByFactorLibrary("b7baa418-08be-430b-ae46-769cfdf91949");

        // response assertion
        Assertions.assertEquals(200, response.iterableByPage().iterator().next().getStatusCode());
        EmissionFactor firstItem = response.iterator().next();
        Assertions.assertNotNull(firstItem);
        // verify property "entityName"
        Assertions.assertEquals("mhysdemejmnlrixkibxbdpulaclivw", firstItem.getEntityName());
        // verify property "factorLibrary"
        LookupField firstItemFactorLibrary = firstItem.getFactorLibrary();
        Assertions.assertNotNull(firstItemFactorLibrary);
        Assertions.assertEquals("b7baa418-08be-430b-ae46-769cfdf91949", firstItemFactorLibrary.getId());
        Assertions.assertEquals("pbmfspnnuunedveu", firstItemFactorLibrary.getLogicalName());
        Assertions.assertEquals("qggwqivyfidlfquwibds", firstItemFactorLibrary.getName());
        Assertions.assertNotNull(firstItemFactorLibrary.getKeyAttributes());
        Assertions.assertEquals("mjopupgolatxymbilffp", firstItemFactorLibrary.getRowVersion());
        // verify property "ch4"
        Assertions.assertEquals(15.0D, firstItem.getCh4());
        // verify property "ch4Unit"
        LookupField firstItemCh4Unit = firstItem.getCh4Unit();
        Assertions.assertNotNull(firstItemCh4Unit);
        Assertions.assertEquals("b7baa418-08be-430b-ae46-769cfdf91949", firstItemCh4Unit.getId());
        Assertions.assertEquals("pbmfspnnuunedveu", firstItemCh4Unit.getLogicalName());
        Assertions.assertEquals("qggwqivyfidlfquwibds", firstItemCh4Unit.getName());
        Assertions.assertNotNull(firstItemCh4Unit.getKeyAttributes());
        Assertions.assertEquals("mjopupgolatxymbilffp", firstItemCh4Unit.getRowVersion());
        // verify property "co2"
        Assertions.assertEquals(12.0D, firstItem.getCo2());
        // verify property "co2Unit"
        LookupField firstItemCo2Unit = firstItem.getCo2Unit();
        Assertions.assertNotNull(firstItemCo2Unit);
        Assertions.assertEquals("b7baa418-08be-430b-ae46-769cfdf91949", firstItemCo2Unit.getId());
        Assertions.assertEquals("pbmfspnnuunedveu", firstItemCo2Unit.getLogicalName());
        Assertions.assertEquals("qggwqivyfidlfquwibds", firstItemCo2Unit.getName());
        Assertions.assertNotNull(firstItemCo2Unit.getKeyAttributes());
        Assertions.assertEquals("mjopupgolatxymbilffp", firstItemCo2Unit.getRowVersion());
        // verify property "co2e"
        Assertions.assertEquals(1.0D, firstItem.getCo2e());
        // verify property "co2eUnit"
        LookupField firstItemCo2eUnit = firstItem.getCo2eUnit();
        Assertions.assertNotNull(firstItemCo2eUnit);
        Assertions.assertEquals("b7baa418-08be-430b-ae46-769cfdf91949", firstItemCo2eUnit.getId());
        Assertions.assertEquals("pbmfspnnuunedveu", firstItemCo2eUnit.getLogicalName());
        Assertions.assertEquals("qggwqivyfidlfquwibds", firstItemCo2eUnit.getName());
        Assertions.assertNotNull(firstItemCo2eUnit.getKeyAttributes());
        Assertions.assertEquals("mjopupgolatxymbilffp", firstItemCo2eUnit.getRowVersion());
        // verify property "documentationReference"
        Assertions.assertEquals("tjvhdxkfzubx", firstItem.getDocumentationReference());
        // verify property "emissionFactorId"
        Assertions.assertEquals("b7baa418-08be-430b-ae46-769cfdf91949", firstItem.getEmissionFactorId());
        // verify property "id"
        Assertions.assertEquals("b7baa418-08be-430b-ae46-769cfdf91949", firstItem.getId());
        // verify property "hfcs"
        Assertions.assertEquals(11.0D, firstItem.getHfcs());
        // verify property "hfcsUnit"
        LookupField firstItemHfcsUnit = firstItem.getHfcsUnit();
        Assertions.assertNotNull(firstItemHfcsUnit);
        Assertions.assertEquals("b7baa418-08be-430b-ae46-769cfdf91949", firstItemHfcsUnit.getId());
        Assertions.assertEquals("pbmfspnnuunedveu", firstItemHfcsUnit.getLogicalName());
        Assertions.assertEquals("qggwqivyfidlfquwibds", firstItemHfcsUnit.getName());
        Assertions.assertNotNull(firstItemHfcsUnit.getKeyAttributes());
        Assertions.assertEquals("mjopupgolatxymbilffp", firstItemHfcsUnit.getRowVersion());
        // verify property "isBiofuel"
        Assertions.assertEquals(true, firstItem.isBiofuel());
        // verify property "name"
        Assertions.assertEquals("jprosbghrgieuoltgmecmdysjj", firstItem.getName());
        // verify property "nf3"
        Assertions.assertEquals(22.0D, firstItem.getNf3());
        // verify property "nf3Unit"
        LookupField firstItemNf3Unit = firstItem.getNf3Unit();
        Assertions.assertNotNull(firstItemNf3Unit);
        Assertions.assertEquals("b7baa418-08be-430b-ae46-769cfdf91949", firstItemNf3Unit.getId());
        Assertions.assertEquals("pbmfspnnuunedveu", firstItemNf3Unit.getLogicalName());
        Assertions.assertEquals("qggwqivyfidlfquwibds", firstItemNf3Unit.getName());
        Assertions.assertNotNull(firstItemNf3Unit.getKeyAttributes());
        Assertions.assertEquals("mjopupgolatxymbilffp", firstItemNf3Unit.getRowVersion());
        // verify property "n2o"
        Assertions.assertEquals(12.0D, firstItem.getN2o());
        // verify property "n2oUnit"
        LookupField firstItemN2oUnit = firstItem.getN2oUnit();
        Assertions.assertNotNull(firstItemN2oUnit);
        Assertions.assertEquals("b7baa418-08be-430b-ae46-769cfdf91949", firstItemN2oUnit.getId());
        Assertions.assertEquals("pbmfspnnuunedveu", firstItemN2oUnit.getLogicalName());
        Assertions.assertEquals("qggwqivyfidlfquwibds", firstItemN2oUnit.getName());
        Assertions.assertNotNull(firstItemN2oUnit.getKeyAttributes());
        Assertions.assertEquals("mjopupgolatxymbilffp", firstItemN2oUnit.getRowVersion());
        // verify property "otherGhgs"
        Assertions.assertEquals(25.0D, firstItem.getOtherGhgs());
        // verify property "otherGhgsUnit"
        LookupField firstItemOtherGhgsUnit = firstItem.getOtherGhgsUnit();
        Assertions.assertNotNull(firstItemOtherGhgsUnit);
        Assertions.assertEquals("b7baa418-08be-430b-ae46-769cfdf91949", firstItemOtherGhgsUnit.getId());
        Assertions.assertEquals("pbmfspnnuunedveu", firstItemOtherGhgsUnit.getLogicalName());
        Assertions.assertEquals("qggwqivyfidlfquwibds", firstItemOtherGhgsUnit.getName());
        Assertions.assertNotNull(firstItemOtherGhgsUnit.getKeyAttributes());
        Assertions.assertEquals("mjopupgolatxymbilffp", firstItemOtherGhgsUnit.getRowVersion());
        // verify property "pfcs"
        Assertions.assertEquals(24.0D, firstItem.getPfcs());
        // verify property "pfcsUnit"
        LookupField firstItemPfcsUnit = firstItem.getPfcsUnit();
        Assertions.assertNotNull(firstItemPfcsUnit);
        Assertions.assertEquals("b7baa418-08be-430b-ae46-769cfdf91949", firstItemPfcsUnit.getId());
        Assertions.assertEquals("pbmfspnnuunedveu", firstItemPfcsUnit.getLogicalName());
        Assertions.assertEquals("qggwqivyfidlfquwibds", firstItemPfcsUnit.getName());
        Assertions.assertNotNull(firstItemPfcsUnit.getKeyAttributes());
        Assertions.assertEquals("mjopupgolatxymbilffp", firstItemPfcsUnit.getRowVersion());
        // verify property "sf6"
        Assertions.assertEquals(8.0D, firstItem.getSf6());
        // verify property "sf6Unit"
        LookupField firstItemSf6Unit = firstItem.getSf6Unit();
        Assertions.assertNotNull(firstItemSf6Unit);
        Assertions.assertEquals("b7baa418-08be-430b-ae46-769cfdf91949", firstItemSf6Unit.getId());
        Assertions.assertEquals("pbmfspnnuunedveu", firstItemSf6Unit.getLogicalName());
        Assertions.assertEquals("qggwqivyfidlfquwibds", firstItemSf6Unit.getName());
        Assertions.assertNotNull(firstItemSf6Unit.getKeyAttributes());
        Assertions.assertEquals("mjopupgolatxymbilffp", firstItemSf6Unit.getRowVersion());
        // verify property "subtype"
        Assertions.assertEquals("oaslhlpcquf", firstItem.getSubtype());
        // verify property "type"
        Assertions.assertEquals("wtihrlbbaftknflb", firstItem.getType());
        // verify property "unit"
        LookupField firstItemUnit = firstItem.getUnit();
        Assertions.assertNotNull(firstItemUnit);
        Assertions.assertEquals("b7baa418-08be-430b-ae46-769cfdf91949", firstItemUnit.getId());
        Assertions.assertEquals("pbmfspnnuunedveu", firstItemUnit.getLogicalName());
        Assertions.assertEquals("qggwqivyfidlfquwibds", firstItemUnit.getName());
        Assertions.assertNotNull(firstItemUnit.getKeyAttributes());
        Assertions.assertEquals("mjopupgolatxymbilffp", firstItemUnit.getRowVersion());
    }
}
