// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.sustainabilityservices.generated;

import com.azure.core.http.rest.PagedIterable;
import com.azure.sustainabilityservices.models.FactorLibrary;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class SustainabilityServiceListFactorLibrariesMaximumSetTests extends SustainabilityServiceClientTestBase {
    @Test
    @Disabled
    public void testSustainabilityServiceListFactorLibrariesMaximumSetTests() {
        // method invocation
        PagedIterable<FactorLibrary> response = sustainabilityServiceClient.listFactorLibraries();

        // response assertion
        Assertions.assertEquals(200, response.iterableByPage().iterator().next().getStatusCode());
        FactorLibrary firstItem = response.iterator().next();
        Assertions.assertNotNull(firstItem);
        // verify property "factorLibraryId"
        Assertions.assertEquals("b7baa418-08be-430b-ae46-769cfdf91949", firstItem.getFactorLibraryId());
        // verify property "name"
        Assertions.assertEquals("xxjsatedcocthjfjzzkuhxk", firstItem.getName());
        // verify property "libraryType"
        Assertions.assertEquals("eklvmkzxqance", firstItem.getLibraryType());
        // verify property "attribution"
        Assertions.assertEquals("gortdjkgmtn", firstItem.getAttribution());
        // verify property "version"
        Assertions.assertEquals("zplrzyy", firstItem.getVersion());
        // verify property "description"
        Assertions.assertEquals("cfrtht", firstItem.getDescription());
        // verify property "datePublished"
        Assertions.assertEquals("qeumvdzjztfpvobwuhgnxvbxcptp", firstItem.getDatePublished());
        // verify property "documentationReference"
        Assertions.assertEquals("kjw", firstItem.getDocumentationReference());
    }
}
