// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.sustainabilityservices.generated;

import com.azure.core.http.rest.PagedIterable;
import com.azure.sustainabilityservices.models.EstimationFactor;
import com.azure.sustainabilityservices.models.LookupField;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class SustainabilityServiceListEstimationFactorsByFactorLibraryMaximumSetTests
    extends SustainabilityServiceClientTestBase {
    @Test
    @Disabled
    public void testSustainabilityServiceListEstimationFactorsByFactorLibraryMaximumSetTests() {
        // method invocation
        PagedIterable<EstimationFactor> response
            = sustainabilityServiceClient.listEstimationFactorsByFactorLibrary("b7baa418-08be-430b-ae46-769cfdf91949");

        // response assertion
        Assertions.assertEquals(200, response.iterableByPage().iterator().next().getStatusCode());
        EstimationFactor firstItem = response.iterator().next();
        Assertions.assertNotNull(firstItem);
        // verify property "entityName"
        Assertions.assertEquals("dxp", firstItem.getEntityName());
        // verify property "id"
        Assertions.assertEquals("b7baa418-08be-430b-ae46-769cfdf91949", firstItem.getId());
        // verify property "documentationReference"
        Assertions.assertEquals("mpzznkdybhkf", firstItem.getDocumentationReference());
        // verify property "estimationFactorId"
        Assertions.assertEquals("b7baa418-08be-430b-ae46-769cfdf91949", firstItem.getEstimationFactorId());
        // verify property "factorLibrary"
        LookupField firstItemFactorLibrary = firstItem.getFactorLibrary();
        Assertions.assertNotNull(firstItemFactorLibrary);
        Assertions.assertEquals("b7baa418-08be-430b-ae46-769cfdf91949", firstItemFactorLibrary.getId());
        Assertions.assertEquals("pbmfspnnuunedveu", firstItemFactorLibrary.getLogicalName());
        Assertions.assertEquals("qggwqivyfidlfquwibds", firstItemFactorLibrary.getName());
        Assertions.assertNotNull(firstItemFactorLibrary.getKeyAttributes());
        Assertions.assertEquals("mjopupgolatxymbilffp", firstItemFactorLibrary.getRowVersion());
        // verify property "factorValue"
        Assertions.assertEquals(19.0, firstItem.getFactorValue());
        // verify property "factorValueUnit"
        LookupField firstItemFactorValueUnit = firstItem.getFactorValueUnit();
        Assertions.assertNotNull(firstItemFactorValueUnit);
        Assertions.assertEquals("b7baa418-08be-430b-ae46-769cfdf91949", firstItemFactorValueUnit.getId());
        Assertions.assertEquals("pbmfspnnuunedveu", firstItemFactorValueUnit.getLogicalName());
        Assertions.assertEquals("qggwqivyfidlfquwibds", firstItemFactorValueUnit.getName());
        Assertions.assertNotNull(firstItemFactorValueUnit.getKeyAttributes());
        Assertions.assertEquals("mjopupgolatxymbilffp", firstItemFactorValueUnit.getRowVersion());
        // verify property "name"
        Assertions.assertEquals("yribs", firstItem.getName());
        // verify property "subtype"
        Assertions.assertEquals("opuhkswrndvdihbnxj", firstItem.getSubtype());
        // verify property "type"
        Assertions.assertEquals("oaijjfbo", firstItem.getType());
        // verify property "unit"
        LookupField firstItemUnit = firstItem.getUnit();
        Assertions.assertNotNull(firstItemUnit);
        Assertions.assertEquals("b7baa418-08be-430b-ae46-769cfdf91949", firstItemUnit.getId());
        Assertions.assertEquals("pbmfspnnuunedveu", firstItemUnit.getLogicalName());
        Assertions.assertEquals("qggwqivyfidlfquwibds", firstItemUnit.getName());
        Assertions.assertNotNull(firstItemUnit.getKeyAttributes());
        Assertions.assertEquals("mjopupgolatxymbilffp", firstItemUnit.getRowVersion());
    }
}
