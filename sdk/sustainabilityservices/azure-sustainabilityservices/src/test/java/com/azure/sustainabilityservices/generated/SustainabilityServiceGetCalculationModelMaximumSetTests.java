// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.sustainabilityservices.generated;

import com.azure.sustainabilityservices.models.CalculationModel;
import com.azure.sustainabilityservices.models.LookupField;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class SustainabilityServiceGetCalculationModelMaximumSetTests extends SustainabilityServiceClientTestBase {
    @Test
    @Disabled
    public void testSustainabilityServiceGetCalculationModelMaximumSetTests() {
        // method invocation
        CalculationModel response
            = sustainabilityServiceClient.getCalculationModel("b7baa418-08be-430b-ae46-769cfdf91949");

        // response assertion
        Assertions.assertNotNull(response);
        // verify property "entityName"
        Assertions.assertEquals("mrgyzzhuyw", response.getEntityName());
        // verify property "calculationModelId"
        Assertions.assertEquals("b7baa418-08be-430b-ae46-769cfdf91949", response.getCalculationModelId());
        // verify property "calculationFlowJson"
        Assertions.assertEquals("g", response.getCalculationFlowJson());
        // verify property "calculationMethod"
        Assertions.assertEquals("vssewtlgtulccramolznv", response.getCalculationMethod());
        // verify property "dataDefinitionId"
        LookupField responseDataDefinitionId = response.getDataDefinitionId();
        Assertions.assertNotNull(responseDataDefinitionId);
        Assertions.assertEquals("b7baa418-08be-430b-ae46-769cfdf91949", responseDataDefinitionId.getId());
        Assertions.assertEquals("pbmfspnnuunedveu", responseDataDefinitionId.getLogicalName());
        Assertions.assertEquals("qggwqivyfidlfquwibds", responseDataDefinitionId.getName());
        Assertions.assertNotNull(responseDataDefinitionId.getKeyAttributes());
        Assertions.assertEquals("mjopupgolatxymbilffp", responseDataDefinitionId.getRowVersion());
        // verify property "documentationReference"
        Assertions.assertEquals("xpblerxeeftidqjyvtcmilzgvhktz", response.getDocumentationReference());
        // verify property "emissionCalculationId"
        Assertions.assertEquals("b7baa418-08be-430b-ae46-769cfdf91949", response.getEmissionCalculationId());
        // verify property "emissionSource"
        LookupField responseEmissionSource = response.getEmissionSource();
        Assertions.assertNotNull(responseEmissionSource);
        Assertions.assertEquals("b7baa418-08be-430b-ae46-769cfdf91949", responseEmissionSource.getId());
        Assertions.assertEquals("pbmfspnnuunedveu", responseEmissionSource.getLogicalName());
        Assertions.assertEquals("qggwqivyfidlfquwibds", responseEmissionSource.getName());
        Assertions.assertNotNull(responseEmissionSource.getKeyAttributes());
        Assertions.assertEquals("mjopupgolatxymbilffp", responseEmissionSource.getRowVersion());
        // verify property "modelJsonVersion"
        Assertions.assertEquals("nr", response.getModelJsonVersion());
        // verify property "name"
        Assertions.assertEquals("guftftnectufbgwipbhhecaqsiyqm", response.getName());
        // verify property "sustainabilitymodule"
        LookupField responseSustainabilitymodule = response.getSustainabilitymodule();
        Assertions.assertNotNull(responseSustainabilitymodule);
        Assertions.assertEquals("b7baa418-08be-430b-ae46-769cfdf91949", responseSustainabilitymodule.getId());
        Assertions.assertEquals("pbmfspnnuunedveu", responseSustainabilitymodule.getLogicalName());
        Assertions.assertEquals("qggwqivyfidlfquwibds", responseSustainabilitymodule.getName());
        Assertions.assertNotNull(responseSustainabilitymodule.getKeyAttributes());
        Assertions.assertEquals("mjopupgolatxymbilffp", responseSustainabilitymodule.getRowVersion());
        // verify property "type"
        Assertions.assertEquals("pwrdfsnaqq", response.getType());
    }
}
