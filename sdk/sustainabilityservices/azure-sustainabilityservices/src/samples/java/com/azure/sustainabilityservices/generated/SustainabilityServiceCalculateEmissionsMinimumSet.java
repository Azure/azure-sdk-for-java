// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.sustainabilityservices.generated;

import com.azure.core.util.Configuration;
import com.azure.identity.DefaultAzureCredentialBuilder;
import com.azure.sustainabilityservices.SustainabilityServiceClient;
import com.azure.sustainabilityservices.SustainabilityServiceClientBuilder;
import com.azure.sustainabilityservices.models.EmissionActivity;
import com.azure.sustainabilityservices.models.EmissionCalculationResult;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

public class SustainabilityServiceCalculateEmissionsMinimumSet {
    public static void main(String[] args) {
        SustainabilityServiceClient sustainabilityServiceClient
            = new SustainabilityServiceClientBuilder().credential(new DefaultAzureCredentialBuilder().build())
                .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT"))
                .buildClient();
        // BEGIN:com.azure.sustainabilityservices.generated.calculate.sustainabilityservicecalculateemissionsminimumset
        EmissionCalculationResult response = sustainabilityServiceClient.calculate(
            "b7baa418-08be-430b-ae46-769cfdf91949", Arrays.asList(new EmissionActivity(mapOf())), null, null);
        // END:com.azure.sustainabilityservices.generated.calculate.sustainabilityservicecalculateemissionsminimumset
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
