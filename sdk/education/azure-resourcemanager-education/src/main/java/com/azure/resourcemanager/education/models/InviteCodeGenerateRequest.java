// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.education.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * invite code generate request.
 */
@Fluent
public final class InviteCodeGenerateRequest implements JsonSerializable<InviteCodeGenerateRequest> {
    /*
     * the total number of students that can be accepted to the lab.
     */
    private Float maxStudentCount;

    /**
     * Creates an instance of InviteCodeGenerateRequest class.
     */
    public InviteCodeGenerateRequest() {
    }

    /**
     * Get the maxStudentCount property: the total number of students that can be accepted to the lab.
     * 
     * @return the maxStudentCount value.
     */
    public Float maxStudentCount() {
        return this.maxStudentCount;
    }

    /**
     * Set the maxStudentCount property: the total number of students that can be accepted to the lab.
     * 
     * @param maxStudentCount the maxStudentCount value to set.
     * @return the InviteCodeGenerateRequest object itself.
     */
    public InviteCodeGenerateRequest withMaxStudentCount(Float maxStudentCount) {
        this.maxStudentCount = maxStudentCount;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("maxStudentCount", this.maxStudentCount);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of InviteCodeGenerateRequest from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of InviteCodeGenerateRequest if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the InviteCodeGenerateRequest.
     */
    public static InviteCodeGenerateRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            InviteCodeGenerateRequest deserializedInviteCodeGenerateRequest = new InviteCodeGenerateRequest();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("maxStudentCount".equals(fieldName)) {
                    deserializedInviteCodeGenerateRequest.maxStudentCount = reader.getNullable(JsonReader::getFloat);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedInviteCodeGenerateRequest;
        });
    }
}
