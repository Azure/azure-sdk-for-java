// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.education.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.education.fluent.GetsClient;
import com.azure.resourcemanager.education.fluent.models.GrantDetailsInner;
import com.azure.resourcemanager.education.fluent.models.LabDetailsInner;
import com.azure.resourcemanager.education.fluent.models.StudentDetailsInner;
import com.azure.resourcemanager.education.fluent.models.StudentLabDetailsInner;
import com.azure.resourcemanager.education.models.Gets;
import com.azure.resourcemanager.education.models.GrantDetails;
import com.azure.resourcemanager.education.models.LabDetails;
import com.azure.resourcemanager.education.models.StudentDetails;
import com.azure.resourcemanager.education.models.StudentLabDetails;

public final class GetsImpl implements Gets {
    private static final ClientLogger LOGGER = new ClientLogger(GetsImpl.class);

    private final GetsClient innerClient;

    private final com.azure.resourcemanager.education.EducationManager serviceManager;

    public GetsImpl(GetsClient innerClient, com.azure.resourcemanager.education.EducationManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public GrantDetails grant(String billingAccountName, String billingProfileName) {
        GrantDetailsInner inner = this.serviceClient().grant(billingAccountName, billingProfileName);
        if (inner != null) {
            return new GrantDetailsImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<GrantDetails> grantWithResponse(
        String billingAccountName, String billingProfileName, Boolean includeAllocatedBudget, Context context) {
        Response<GrantDetailsInner> inner =
            this
                .serviceClient()
                .grantWithResponse(billingAccountName, billingProfileName, includeAllocatedBudget, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new GrantDetailsImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public LabDetails lab(String billingAccountName, String billingProfileName, String invoiceSectionName) {
        LabDetailsInner inner = this.serviceClient().lab(billingAccountName, billingProfileName, invoiceSectionName);
        if (inner != null) {
            return new LabDetailsImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<LabDetails> labWithResponse(
        String billingAccountName,
        String billingProfileName,
        String invoiceSectionName,
        Boolean includeBudget,
        Context context) {
        Response<LabDetailsInner> inner =
            this
                .serviceClient()
                .labWithResponse(billingAccountName, billingProfileName, invoiceSectionName, includeBudget, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new LabDetailsImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public StudentDetails student(
        String billingAccountName, String billingProfileName, String invoiceSectionName, String studentAlias) {
        StudentDetailsInner inner =
            this.serviceClient().student(billingAccountName, billingProfileName, invoiceSectionName, studentAlias);
        if (inner != null) {
            return new StudentDetailsImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<StudentDetails> studentWithResponse(
        String billingAccountName,
        String billingProfileName,
        String invoiceSectionName,
        String studentAlias,
        Context context) {
        Response<StudentDetailsInner> inner =
            this
                .serviceClient()
                .studentWithResponse(billingAccountName, billingProfileName, invoiceSectionName, studentAlias, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new StudentDetailsImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public StudentLabDetails studentLab(String studentLabName) {
        StudentLabDetailsInner inner = this.serviceClient().studentLab(studentLabName);
        if (inner != null) {
            return new StudentLabDetailsImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<StudentLabDetails> studentLabWithResponse(String studentLabName, Context context) {
        Response<StudentLabDetailsInner> inner = this.serviceClient().studentLabWithResponse(studentLabName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new StudentLabDetailsImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    private GetsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.education.EducationManager manager() {
        return this.serviceManager;
    }
}
