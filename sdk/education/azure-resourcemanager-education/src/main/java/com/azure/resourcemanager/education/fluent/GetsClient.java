// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.education.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.education.fluent.models.GrantDetailsInner;
import com.azure.resourcemanager.education.fluent.models.LabDetailsInner;
import com.azure.resourcemanager.education.fluent.models.StudentDetailsInner;
import com.azure.resourcemanager.education.fluent.models.StudentLabDetailsInner;

/** An instance of this class provides access to all the operations defined in GetsClient. */
public interface GetsClient {
    /**
     * Get details for a specific grant linked to the provided billing account and billing profile.
     *
     * @param billingAccountName Billing account name.
     * @param billingProfileName Billing profile name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return details for a specific grant linked to the provided billing account and billing profile.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    GrantDetailsInner grant(String billingAccountName, String billingProfileName);

    /**
     * Get details for a specific grant linked to the provided billing account and billing profile.
     *
     * @param billingAccountName Billing account name.
     * @param billingProfileName Billing profile name.
     * @param includeAllocatedBudget May be used to include information about budget that has been allocated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return details for a specific grant linked to the provided billing account and billing profile along with {@link
     *     Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<GrantDetailsInner> grantWithResponse(
        String billingAccountName, String billingProfileName, Boolean includeAllocatedBudget, Context context);

    /**
     * Get the details for a specific lab associated with the provided billing account name, billing profile name, and
     * invoice section name.
     *
     * @param billingAccountName Billing account name.
     * @param billingProfileName Billing profile name.
     * @param invoiceSectionName Invoice section name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the details for a specific lab associated with the provided billing account name, billing profile name,
     *     and invoice section name.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    LabDetailsInner lab(String billingAccountName, String billingProfileName, String invoiceSectionName);

    /**
     * Get the details for a specific lab associated with the provided billing account name, billing profile name, and
     * invoice section name.
     *
     * @param billingAccountName Billing account name.
     * @param billingProfileName Billing profile name.
     * @param invoiceSectionName Invoice section name.
     * @param includeBudget May be used to include budget information.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the details for a specific lab associated with the provided billing account name, billing profile name,
     *     and invoice section name along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<LabDetailsInner> labWithResponse(
        String billingAccountName,
        String billingProfileName,
        String invoiceSectionName,
        Boolean includeBudget,
        Context context);

    /**
     * Get the details for a specific student in the specified lab by student alias.
     *
     * @param billingAccountName Billing account name.
     * @param billingProfileName Billing profile name.
     * @param invoiceSectionName Invoice section name.
     * @param studentAlias Student alias.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the details for a specific student in the specified lab by student alias.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    StudentDetailsInner student(
        String billingAccountName, String billingProfileName, String invoiceSectionName, String studentAlias);

    /**
     * Get the details for a specific student in the specified lab by student alias.
     *
     * @param billingAccountName Billing account name.
     * @param billingProfileName Billing profile name.
     * @param invoiceSectionName Invoice section name.
     * @param studentAlias Student alias.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the details for a specific student in the specified lab by student alias along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<StudentDetailsInner> studentWithResponse(
        String billingAccountName,
        String billingProfileName,
        String invoiceSectionName,
        String studentAlias,
        Context context);

    /**
     * Get the details for a specified lab associated with the student lab.
     *
     * @param studentLabName Student lab name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the details for a specified lab associated with the student lab.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    StudentLabDetailsInner studentLab(String studentLabName);

    /**
     * Get the details for a specified lab associated with the student lab.
     *
     * @param studentLabName Student lab name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the details for a specified lab associated with the student lab along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<StudentLabDetailsInner> studentLabWithResponse(String studentLabName, Context context);
}
