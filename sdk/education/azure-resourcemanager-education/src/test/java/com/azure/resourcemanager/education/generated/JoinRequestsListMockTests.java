// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.education.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.education.EducationManager;
import com.azure.resourcemanager.education.models.JoinRequestDetails;
import com.azure.resourcemanager.education.models.JoinRequestStatus;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class JoinRequestsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"firstName\":\"fsj\",\"lastName\":\"gzfbishcbk\",\"email\":\"jdeyeamdpha\",\"status\":\"Denied\"},\"id\":\"buxwgip\",\"name\":\"honowkgshwank\",\"type\":\"xzbinjeputt\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        EducationManager manager = EducationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<JoinRequestDetails> response = manager.joinRequests()
            .list("ucgygevqz", "typmrbpizcdrqjsd", "ydnfyhxdeoejz", false, com.azure.core.util.Context.NONE);

        Assertions.assertEquals("fsj", response.iterator().next().firstName());
        Assertions.assertEquals("gzfbishcbk", response.iterator().next().lastName());
        Assertions.assertEquals("jdeyeamdpha", response.iterator().next().email());
        Assertions.assertEquals(JoinRequestStatus.DENIED, response.iterator().next().status());
    }
}
