// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.education.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.education.fluent.models.Amount;
import com.azure.resourcemanager.education.fluent.models.StudentProperties;
import com.azure.resourcemanager.education.models.StudentRole;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class StudentPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        StudentProperties model = BinaryData.fromString(
            "{\"firstName\":\"km\",\"lastName\":\"jcmmxdcufufsrp\",\"email\":\"mzidnsezcxtb\",\"role\":\"Admin\",\"budget\":{\"currency\":\"fycc\",\"value\":29.16742},\"subscriptionId\":\"mdwzjeiachboo\",\"expirationDate\":\"2021-05-15T06:55:08Z\",\"status\":\"Expired\",\"effectiveDate\":\"2021-10-01T08:17:31Z\",\"subscriptionAlias\":\"fqpte\",\"subscriptionInviteLastSentDate\":\"2021-06-28T09:00:21Z\"}")
            .toObject(StudentProperties.class);
        Assertions.assertEquals("km", model.firstName());
        Assertions.assertEquals("jcmmxdcufufsrp", model.lastName());
        Assertions.assertEquals("mzidnsezcxtb", model.email());
        Assertions.assertEquals(StudentRole.ADMIN, model.role());
        Assertions.assertEquals("fycc", model.budget().currency());
        Assertions.assertEquals(29.16742F, model.budget().value());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-15T06:55:08Z"), model.expirationDate());
        Assertions.assertEquals("fqpte", model.subscriptionAlias());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-28T09:00:21Z"), model.subscriptionInviteLastSentDate());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        StudentProperties model = new StudentProperties().withFirstName("km")
            .withLastName("jcmmxdcufufsrp")
            .withEmail("mzidnsezcxtb")
            .withRole(StudentRole.ADMIN)
            .withBudget(new Amount().withCurrency("fycc").withValue(29.16742F))
            .withExpirationDate(OffsetDateTime.parse("2021-05-15T06:55:08Z"))
            .withSubscriptionAlias("fqpte")
            .withSubscriptionInviteLastSentDate(OffsetDateTime.parse("2021-06-28T09:00:21Z"));
        model = BinaryData.fromObject(model).toObject(StudentProperties.class);
        Assertions.assertEquals("km", model.firstName());
        Assertions.assertEquals("jcmmxdcufufsrp", model.lastName());
        Assertions.assertEquals("mzidnsezcxtb", model.email());
        Assertions.assertEquals(StudentRole.ADMIN, model.role());
        Assertions.assertEquals("fycc", model.budget().currency());
        Assertions.assertEquals(29.16742F, model.budget().value());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-15T06:55:08Z"), model.expirationDate());
        Assertions.assertEquals("fqpte", model.subscriptionAlias());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-28T09:00:21Z"), model.subscriptionInviteLastSentDate());
    }
}
