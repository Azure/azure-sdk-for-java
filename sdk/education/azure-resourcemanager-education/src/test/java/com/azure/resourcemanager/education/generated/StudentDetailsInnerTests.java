// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.education.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.education.fluent.models.Amount;
import com.azure.resourcemanager.education.fluent.models.StudentDetailsInner;
import com.azure.resourcemanager.education.models.StudentRole;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class StudentDetailsInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        StudentDetailsInner model = BinaryData.fromString(
            "{\"properties\":{\"firstName\":\"sszdnru\",\"lastName\":\"qguhmuo\",\"email\":\"qfprwzwbn\",\"role\":\"Student\",\"budget\":{\"currency\":\"tnwu\",\"value\":32.667892},\"subscriptionId\":\"zxufiz\",\"expirationDate\":\"2021-07-05T04:35:30Z\",\"status\":\"Active\",\"effectiveDate\":\"2021-11-21T17:04:29Z\",\"subscriptionAlias\":\"rfidfvzwdz\",\"subscriptionInviteLastSentDate\":\"2021-04-15T03:14:07Z\"},\"id\":\"mwisdkfthwxmnt\",\"name\":\"i\",\"type\":\"aop\"}")
            .toObject(StudentDetailsInner.class);
        Assertions.assertEquals("sszdnru", model.firstName());
        Assertions.assertEquals("qguhmuo", model.lastName());
        Assertions.assertEquals("qfprwzwbn", model.email());
        Assertions.assertEquals(StudentRole.STUDENT, model.role());
        Assertions.assertEquals("tnwu", model.budget().currency());
        Assertions.assertEquals(32.667892F, model.budget().value());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-05T04:35:30Z"), model.expirationDate());
        Assertions.assertEquals("rfidfvzwdz", model.subscriptionAlias());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-15T03:14:07Z"), model.subscriptionInviteLastSentDate());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        StudentDetailsInner model = new StudentDetailsInner().withFirstName("sszdnru")
            .withLastName("qguhmuo")
            .withEmail("qfprwzwbn")
            .withRole(StudentRole.STUDENT)
            .withBudget(new Amount().withCurrency("tnwu").withValue(32.667892F))
            .withExpirationDate(OffsetDateTime.parse("2021-07-05T04:35:30Z"))
            .withSubscriptionAlias("rfidfvzwdz")
            .withSubscriptionInviteLastSentDate(OffsetDateTime.parse("2021-04-15T03:14:07Z"));
        model = BinaryData.fromObject(model).toObject(StudentDetailsInner.class);
        Assertions.assertEquals("sszdnru", model.firstName());
        Assertions.assertEquals("qguhmuo", model.lastName());
        Assertions.assertEquals("qfprwzwbn", model.email());
        Assertions.assertEquals(StudentRole.STUDENT, model.role());
        Assertions.assertEquals("tnwu", model.budget().currency());
        Assertions.assertEquals(32.667892F, model.budget().value());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-05T04:35:30Z"), model.expirationDate());
        Assertions.assertEquals("rfidfvzwdz", model.subscriptionAlias());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-15T03:14:07Z"), model.subscriptionInviteLastSentDate());
    }
}
