// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.powerplatform.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.powerplatform.models.PropertiesEncryption;
import com.azure.resourcemanager.powerplatform.models.PropertiesLockbox;
import com.azure.resourcemanager.powerplatform.models.PropertiesNetworkInjection;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The properties that define configuration for the enterprise policy. */
@Fluent
public final class Properties {
    /*
     * Settings concerning lockbox.
     */
    @JsonProperty(value = "lockbox")
    private PropertiesLockbox lockbox;

    /*
     * The encryption settings for a configuration store.
     */
    @JsonProperty(value = "encryption")
    private PropertiesEncryption encryption;

    /*
     * Settings concerning network injection.
     */
    @JsonProperty(value = "networkInjection")
    private PropertiesNetworkInjection networkInjection;

    /**
     * Get the lockbox property: Settings concerning lockbox.
     *
     * @return the lockbox value.
     */
    public PropertiesLockbox lockbox() {
        return this.lockbox;
    }

    /**
     * Set the lockbox property: Settings concerning lockbox.
     *
     * @param lockbox the lockbox value to set.
     * @return the Properties object itself.
     */
    public Properties withLockbox(PropertiesLockbox lockbox) {
        this.lockbox = lockbox;
        return this;
    }

    /**
     * Get the encryption property: The encryption settings for a configuration store.
     *
     * @return the encryption value.
     */
    public PropertiesEncryption encryption() {
        return this.encryption;
    }

    /**
     * Set the encryption property: The encryption settings for a configuration store.
     *
     * @param encryption the encryption value to set.
     * @return the Properties object itself.
     */
    public Properties withEncryption(PropertiesEncryption encryption) {
        this.encryption = encryption;
        return this;
    }

    /**
     * Get the networkInjection property: Settings concerning network injection.
     *
     * @return the networkInjection value.
     */
    public PropertiesNetworkInjection networkInjection() {
        return this.networkInjection;
    }

    /**
     * Set the networkInjection property: Settings concerning network injection.
     *
     * @param networkInjection the networkInjection value to set.
     * @return the Properties object itself.
     */
    public Properties withNetworkInjection(PropertiesNetworkInjection networkInjection) {
        this.networkInjection = networkInjection;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (lockbox() != null) {
            lockbox().validate();
        }
        if (encryption() != null) {
            encryption().validate();
        }
        if (networkInjection() != null) {
            networkInjection().validate();
        }
    }
}
