// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.generated;

import com.azure.resourcemanager.hybridcompute.fluent.models.LicenseInner;
import com.azure.resourcemanager.hybridcompute.models.LicenseCoreType;
import com.azure.resourcemanager.hybridcompute.models.LicenseDetails;
import com.azure.resourcemanager.hybridcompute.models.LicenseEdition;
import com.azure.resourcemanager.hybridcompute.models.LicenseState;
import com.azure.resourcemanager.hybridcompute.models.LicenseTarget;
import com.azure.resourcemanager.hybridcompute.models.LicenseType;

/**
 * Samples for Licenses ValidateLicense.
 */
public final class LicensesValidateLicenseSamples {
    /*
     * x-ms-original-file:
     * specification/hybridcompute/resource-manager/Microsoft.HybridCompute/stable/2024-07-10/examples/license/
     * License_ValidateLicense.json
     */
    /**
     * Sample code: Validate a License.
     * 
     * @param manager Entry point to HybridComputeManager.
     */
    public static void validateALicense(com.azure.resourcemanager.hybridcompute.HybridComputeManager manager) {
        manager.licenses()
            .validateLicense(new LicenseInner().withLocation("eastus2euap")
                .withLicenseType(LicenseType.ESU)
                .withLicenseDetails(new LicenseDetails().withState(LicenseState.ACTIVATED)
                    .withTarget(LicenseTarget.WINDOWS_SERVER_2012)
                    .withEdition(LicenseEdition.DATACENTER)
                    .withType(LicenseCoreType.P_CORE)
                    .withProcessors(6)),
                com.azure.core.util.Context.NONE);
    }
}
