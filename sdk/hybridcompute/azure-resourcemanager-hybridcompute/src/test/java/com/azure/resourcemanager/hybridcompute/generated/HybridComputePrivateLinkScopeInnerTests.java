// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridcompute.fluent.models.HybridComputePrivateLinkScopeInner;
import com.azure.resourcemanager.hybridcompute.models.HybridComputePrivateLinkScopeProperties;
import com.azure.resourcemanager.hybridcompute.models.PublicNetworkAccessType;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class HybridComputePrivateLinkScopeInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HybridComputePrivateLinkScopeInner model = BinaryData.fromString(
            "{\"properties\":{\"publicNetworkAccess\":\"SecuredByPerimeter\",\"provisioningState\":\"sfraoyzko\",\"privateLinkScopeId\":\"tlmngu\",\"privateEndpointConnections\":[{\"id\":\"aldsy\",\"name\":\"ximerqfobwyznk\",\"type\":\"kutwpf\",\"properties\":{\"privateEndpoint\":{\"id\":\"m\"},\"privateLinkServiceConnectionState\":{\"status\":\"skdsnfdsdoakg\",\"description\":\"dlmkkzevdl\",\"actionsRequired\":\"wpusdsttwvogv\"},\"provisioningState\":\"ejdcngqqmoakuf\",\"groupIds\":[\"zr\",\"rdgrtw\",\"enuuzkopbm\"]}},{\"id\":\"rfdwoyu\",\"name\":\"ziuiefozbhdm\",\"type\":\"l\",\"properties\":{\"privateEndpoint\":{\"id\":\"oftrmaequia\"},\"privateLinkServiceConnectionState\":{\"status\":\"icslfaoq\",\"description\":\"piyylhalnswhccsp\",\"actionsRequired\":\"aivwitqscywu\"},\"provisioningState\":\"woluhczbwemhair\",\"groupIds\":[\"gzd\",\"msweypqwdxggicc\",\"n\"]}}]},\"location\":\"huexmk\",\"tags\":{\"dtclusiypb\":\"stvlzywemhzrnc\",\"ukyhejhzis\":\"fgytguslfeadcyg\",\"jzraehtwdwrf\":\"gfpelolppvksrpqv\"},\"id\":\"swibyr\",\"name\":\"dl\",\"type\":\"h\"}")
            .toObject(HybridComputePrivateLinkScopeInner.class);
        Assertions.assertEquals("huexmk", model.location());
        Assertions.assertEquals("stvlzywemhzrnc", model.tags().get("dtclusiypb"));
        Assertions.assertEquals(PublicNetworkAccessType.SECURED_BY_PERIMETER, model.properties().publicNetworkAccess());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HybridComputePrivateLinkScopeInner model = new HybridComputePrivateLinkScopeInner().withLocation("huexmk")
            .withTags(mapOf("dtclusiypb", "stvlzywemhzrnc", "ukyhejhzis", "fgytguslfeadcyg", "jzraehtwdwrf",
                "gfpelolppvksrpqv"))
            .withProperties(new HybridComputePrivateLinkScopeProperties()
                .withPublicNetworkAccess(PublicNetworkAccessType.SECURED_BY_PERIMETER));
        model = BinaryData.fromObject(model).toObject(HybridComputePrivateLinkScopeInner.class);
        Assertions.assertEquals("huexmk", model.location());
        Assertions.assertEquals("stvlzywemhzrnc", model.tags().get("dtclusiypb"));
        Assertions.assertEquals(PublicNetworkAccessType.SECURED_BY_PERIMETER, model.properties().publicNetworkAccess());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
