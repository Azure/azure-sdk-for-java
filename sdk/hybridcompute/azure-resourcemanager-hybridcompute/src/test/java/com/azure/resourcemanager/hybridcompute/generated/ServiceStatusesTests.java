// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridcompute.models.ServiceStatus;
import com.azure.resourcemanager.hybridcompute.models.ServiceStatuses;
import org.junit.jupiter.api.Assertions;

public final class ServiceStatusesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ServiceStatuses model = BinaryData.fromString(
            "{\"extensionService\":{\"status\":\"dndnvow\",\"startupType\":\"jjugwdkcglhslaz\"},\"guestConfigurationService\":{\"status\":\"ggd\",\"startupType\":\"ixhbkuofqweykhm\"}}")
            .toObject(ServiceStatuses.class);
        Assertions.assertEquals("dndnvow", model.extensionService().status());
        Assertions.assertEquals("jjugwdkcglhslaz", model.extensionService().startupType());
        Assertions.assertEquals("ggd", model.guestConfigurationService().status());
        Assertions.assertEquals("ixhbkuofqweykhm", model.guestConfigurationService().startupType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ServiceStatuses model = new ServiceStatuses()
            .withExtensionService(new ServiceStatus().withStatus("dndnvow").withStartupType("jjugwdkcglhslaz"))
            .withGuestConfigurationService(new ServiceStatus().withStatus("ggd").withStartupType("ixhbkuofqweykhm"));
        model = BinaryData.fromObject(model).toObject(ServiceStatuses.class);
        Assertions.assertEquals("dndnvow", model.extensionService().status());
        Assertions.assertEquals("jjugwdkcglhslaz", model.extensionService().startupType());
        Assertions.assertEquals("ggd", model.guestConfigurationService().status());
        Assertions.assertEquals("ixhbkuofqweykhm", model.guestConfigurationService().startupType());
    }
}
