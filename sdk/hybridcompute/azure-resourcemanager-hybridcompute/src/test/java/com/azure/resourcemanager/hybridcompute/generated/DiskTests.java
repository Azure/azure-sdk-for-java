// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridcompute.models.Disk;
import org.junit.jupiter.api.Assertions;

public final class DiskTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        Disk model = BinaryData.fromString(
            "{\"path\":\"uxh\",\"diskType\":\"udxorrqn\",\"generatedId\":\"oczvy\",\"id\":\"qrvkdv\",\"name\":\"llr\",\"maxSizeInBytes\":135145213418293643,\"usedSpaceInBytes\":4797144468596262897}")
            .toObject(Disk.class);
        Assertions.assertEquals("uxh", model.path());
        Assertions.assertEquals("udxorrqn", model.diskType());
        Assertions.assertEquals("oczvy", model.generatedId());
        Assertions.assertEquals("qrvkdv", model.id());
        Assertions.assertEquals("llr", model.name());
        Assertions.assertEquals(135145213418293643L, model.maxSizeInBytes());
        Assertions.assertEquals(4797144468596262897L, model.usedSpaceInBytes());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        Disk model = new Disk().withPath("uxh")
            .withDiskType("udxorrqn")
            .withGeneratedId("oczvy")
            .withId("qrvkdv")
            .withName("llr")
            .withMaxSizeInBytes(135145213418293643L)
            .withUsedSpaceInBytes(4797144468596262897L);
        model = BinaryData.fromObject(model).toObject(Disk.class);
        Assertions.assertEquals("uxh", model.path());
        Assertions.assertEquals("udxorrqn", model.diskType());
        Assertions.assertEquals("oczvy", model.generatedId());
        Assertions.assertEquals("qrvkdv", model.id());
        Assertions.assertEquals("llr", model.name());
        Assertions.assertEquals(135145213418293643L, model.maxSizeInBytes());
        Assertions.assertEquals(4797144468596262897L, model.usedSpaceInBytes());
    }
}
