// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridcompute.models.AssessmentModeTypes;
import com.azure.resourcemanager.hybridcompute.models.OSProfileLinuxConfiguration;
import com.azure.resourcemanager.hybridcompute.models.PatchModeTypes;
import org.junit.jupiter.api.Assertions;

public final class OSProfileLinuxConfigurationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OSProfileLinuxConfiguration model = BinaryData
            .fromString("{\"patchSettings\":{\"assessmentMode\":\"ImageDefault\",\"patchMode\":\"Manual\"}}")
            .toObject(OSProfileLinuxConfiguration.class);
        Assertions.assertEquals(AssessmentModeTypes.IMAGE_DEFAULT, model.assessmentMode());
        Assertions.assertEquals(PatchModeTypes.MANUAL, model.patchMode());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OSProfileLinuxConfiguration model
            = new OSProfileLinuxConfiguration().withAssessmentMode(AssessmentModeTypes.IMAGE_DEFAULT)
                .withPatchMode(PatchModeTypes.MANUAL);
        model = BinaryData.fromObject(model).toObject(OSProfileLinuxConfiguration.class);
        Assertions.assertEquals(AssessmentModeTypes.IMAGE_DEFAULT, model.assessmentMode());
        Assertions.assertEquals(PatchModeTypes.MANUAL, model.patchMode());
    }
}
