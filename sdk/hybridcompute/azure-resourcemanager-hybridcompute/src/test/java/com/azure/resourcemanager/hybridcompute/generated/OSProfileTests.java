// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridcompute.models.AssessmentModeTypes;
import com.azure.resourcemanager.hybridcompute.models.OSProfile;
import com.azure.resourcemanager.hybridcompute.models.OSProfileLinuxConfiguration;
import com.azure.resourcemanager.hybridcompute.models.OSProfileWindowsConfiguration;
import com.azure.resourcemanager.hybridcompute.models.PatchModeTypes;
import org.junit.jupiter.api.Assertions;

public final class OSProfileTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OSProfile model = BinaryData.fromString(
            "{\"computerName\":\"umasxazjpq\",\"windowsConfiguration\":{\"patchSettings\":{\"assessmentMode\":\"ImageDefault\",\"patchMode\":\"ImageDefault\"}},\"linuxConfiguration\":{\"patchSettings\":{\"assessmentMode\":\"ImageDefault\",\"patchMode\":\"ImageDefault\"}}}")
            .toObject(OSProfile.class);
        Assertions.assertEquals(AssessmentModeTypes.IMAGE_DEFAULT, model.windowsConfiguration().assessmentMode());
        Assertions.assertEquals(PatchModeTypes.IMAGE_DEFAULT, model.windowsConfiguration().patchMode());
        Assertions.assertEquals(AssessmentModeTypes.IMAGE_DEFAULT, model.linuxConfiguration().assessmentMode());
        Assertions.assertEquals(PatchModeTypes.IMAGE_DEFAULT, model.linuxConfiguration().patchMode());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OSProfile model = new OSProfile()
            .withWindowsConfiguration(
                new OSProfileWindowsConfiguration().withAssessmentMode(AssessmentModeTypes.IMAGE_DEFAULT)
                    .withPatchMode(PatchModeTypes.IMAGE_DEFAULT))
            .withLinuxConfiguration(
                new OSProfileLinuxConfiguration().withAssessmentMode(AssessmentModeTypes.IMAGE_DEFAULT)
                    .withPatchMode(PatchModeTypes.IMAGE_DEFAULT));
        model = BinaryData.fromObject(model).toObject(OSProfile.class);
        Assertions.assertEquals(AssessmentModeTypes.IMAGE_DEFAULT, model.windowsConfiguration().assessmentMode());
        Assertions.assertEquals(PatchModeTypes.IMAGE_DEFAULT, model.windowsConfiguration().patchMode());
        Assertions.assertEquals(AssessmentModeTypes.IMAGE_DEFAULT, model.linuxConfiguration().assessmentMode());
        Assertions.assertEquals(PatchModeTypes.IMAGE_DEFAULT, model.linuxConfiguration().patchMode());
    }
}
