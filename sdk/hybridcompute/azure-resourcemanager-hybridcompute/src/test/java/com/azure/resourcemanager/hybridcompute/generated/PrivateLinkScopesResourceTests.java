// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridcompute.models.PrivateLinkScopesResource;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class PrivateLinkScopesResourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateLinkScopesResource model = BinaryData.fromString(
            "{\"location\":\"rgzdwmsweyp\",\"tags\":{\"tlstvlzywem\":\"xggicccnxqhuexmk\",\"lusiy\":\"zrncsdt\",\"cy\":\"bsfgytguslfea\",\"xgfpelolppv\":\"qukyhejhzi\"},\"id\":\"srp\",\"name\":\"vu\",\"type\":\"zraehtwd\"}")
            .toObject(PrivateLinkScopesResource.class);
        Assertions.assertEquals("rgzdwmsweyp", model.location());
        Assertions.assertEquals("xggicccnxqhuexmk", model.tags().get("tlstvlzywem"));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateLinkScopesResource model = new PrivateLinkScopesResource().withLocation("rgzdwmsweyp")
            .withTags(mapOf("tlstvlzywem", "xggicccnxqhuexmk", "lusiy", "zrncsdt", "cy", "bsfgytguslfea", "xgfpelolppv",
                "qukyhejhzi"));
        model = BinaryData.fromObject(model).toObject(PrivateLinkScopesResource.class);
        Assertions.assertEquals("rgzdwmsweyp", model.location());
        Assertions.assertEquals("xggicccnxqhuexmk", model.tags().get("tlstvlzywem"));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
