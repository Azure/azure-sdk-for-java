// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.hybridcompute.HybridComputeManager;
import com.azure.resourcemanager.hybridcompute.models.NetworkSecurityPerimeterConfiguration;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class NetworkSecurityPerimeterConfigurationsGetByPrivateLinkScopeWithResponseMockTests {
    @Test
    public void testGetByPrivateLinkScopeWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"pweryekzk\",\"provisioningIssues\":[{\"name\":\"ottaw\",\"properties\":{\"issueType\":\"ConfigurationPropagationFailure\",\"severity\":\"Error\",\"description\":\"hnhjtfvpndpmi\",\"suggestedResourceIds\":[\"nwynudq\"],\"suggestedAccessRules\":[{},{}]}},{\"name\":\"auzpjlx\",\"properties\":{\"issueType\":\"Other\",\"severity\":\"Warning\",\"description\":\"hzlraymezxlsk\",\"suggestedResourceIds\":[\"xrfdsajre\",\"nw\"],\"suggestedAccessRules\":[{},{}]}}],\"networkSecurityPerimeter\":{\"id\":\"uwg\",\"perimeterGuid\":\"vuafpwzyifr\",\"location\":\"wltxeqipxgzdyims\"},\"resourceAssociation\":{\"name\":\"orpravkjoges\",\"accessMode\":\"learning\"},\"profile\":{\"name\":\"mjkwynq\",\"accessRulesVersion\":1693738620,\"accessRules\":[{\"name\":\"ykvwjtqpkevmyltj\",\"properties\":{}}],\"diagnosticSettingsVersion\":59854716,\"enabledLogCategories\":[\"l\",\"r\"]}},\"id\":\"clf\",\"name\":\"xa\",\"type\":\"n\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HybridComputeManager manager = HybridComputeManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        NetworkSecurityPerimeterConfiguration response = manager.networkSecurityPerimeterConfigurations()
            .getByPrivateLinkScopeWithResponse("rwzawnvs", "cfhzagxnvhycv", "imwrzregzgyufu",
                com.azure.core.util.Context.NONE)
            .getValue();

    }
}
