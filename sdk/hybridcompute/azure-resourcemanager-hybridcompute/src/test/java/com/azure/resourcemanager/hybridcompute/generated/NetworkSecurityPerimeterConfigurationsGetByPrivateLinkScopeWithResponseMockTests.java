// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.hybridcompute.HybridComputeManager;
import com.azure.resourcemanager.hybridcompute.models.NetworkSecurityPerimeterConfiguration;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class NetworkSecurityPerimeterConfigurationsGetByPrivateLinkScopeWithResponseMockTests {
    @Test
    public void testGetByPrivateLinkScopeWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"zolxrzvhqjwtr\",\"provisioningIssues\":[{\"name\":\"gzpcrrkolaw\",\"properties\":{\"issueType\":\"MissingPerimeterConfiguration\",\"severity\":\"Warning\",\"description\":\"okcdxfzzzwyjaf\",\"suggestedResourceIds\":[\"hguynuchlgmltxdw\",\"mozusgzvlnsnnjz\"],\"suggestedAccessRules\":[{},{},{},{}]}}],\"networkSecurityPerimeter\":{\"id\":\"lpymwamxqzragpg\",\"perimeterGuid\":\"htvdula\",\"location\":\"lejchcsr\"},\"resourceAssociation\":{\"name\":\"nmzlanru\",\"accessMode\":\"learning\"},\"profile\":{\"name\":\"phcnzqtpj\",\"accessRulesVersion\":1988862980,\"accessRules\":[{\"name\":\"thlaiwdcxs\",\"properties\":{}},{\"name\":\"zhzdtxetlgydlhqv\",\"properties\":{}},{\"name\":\"pxy\",\"properties\":{}},{\"name\":\"iqge\",\"properties\":{}}],\"diagnosticSettingsVersion\":755954714,\"enabledLogCategories\":[\"ekglklb\",\"ulidwc\",\"vmzegj\"]}},\"id\":\"nfhjirwgdnqzbr\",\"name\":\"kspzhzmtksjcit\",\"type\":\"igsxcdgljplk\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HybridComputeManager manager = HybridComputeManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        NetworkSecurityPerimeterConfiguration response = manager.networkSecurityPerimeterConfigurations()
            .getByPrivateLinkScopeWithResponse("ovvtzejetjkln", "ikyju", "k", com.azure.core.util.Context.NONE)
            .getValue();

    }
}
