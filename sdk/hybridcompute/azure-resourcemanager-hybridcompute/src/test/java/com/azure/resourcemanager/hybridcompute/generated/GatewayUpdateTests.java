// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridcompute.models.GatewayUpdate;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class GatewayUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GatewayUpdate model = BinaryData.fromString(
            "{\"properties\":{\"allowedFeatures\":[\"elsfeaen\"]},\"tags\":{\"xbjhwuaanozjosph\":\"fatkld\",\"ag\":\"oulpjrv\",\"cktqumiekkezzi\":\"rvimjwosytxitcsk\",\"bdunygaeqid\":\"hlyfjhdgqgg\"}}")
            .toObject(GatewayUpdate.class);
        Assertions.assertEquals("fatkld", model.tags().get("xbjhwuaanozjosph"));
        Assertions.assertEquals("elsfeaen", model.allowedFeatures().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GatewayUpdate model = new GatewayUpdate()
            .withTags(mapOf("xbjhwuaanozjosph", "fatkld", "ag", "oulpjrv", "cktqumiekkezzi", "rvimjwosytxitcsk",
                "bdunygaeqid", "hlyfjhdgqgg"))
            .withAllowedFeatures(Arrays.asList("elsfeaen"));
        model = BinaryData.fromObject(model).toObject(GatewayUpdate.class);
        Assertions.assertEquals("fatkld", model.tags().get("xbjhwuaanozjosph"));
        Assertions.assertEquals("elsfeaen", model.allowedFeatures().get(0));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
