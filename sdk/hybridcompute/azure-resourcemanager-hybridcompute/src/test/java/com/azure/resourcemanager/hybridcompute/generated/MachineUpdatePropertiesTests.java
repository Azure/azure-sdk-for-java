// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridcompute.fluent.models.MachineUpdateProperties;
import com.azure.resourcemanager.hybridcompute.models.AgentUpgrade;
import com.azure.resourcemanager.hybridcompute.models.AssessmentModeTypes;
import com.azure.resourcemanager.hybridcompute.models.CloudMetadata;
import com.azure.resourcemanager.hybridcompute.models.LocationData;
import com.azure.resourcemanager.hybridcompute.models.OSProfile;
import com.azure.resourcemanager.hybridcompute.models.OSProfileLinuxConfiguration;
import com.azure.resourcemanager.hybridcompute.models.OSProfileWindowsConfiguration;
import com.azure.resourcemanager.hybridcompute.models.PatchModeTypes;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;

public final class MachineUpdatePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MachineUpdateProperties model = BinaryData.fromString(
            "{\"locationData\":{\"name\":\"dg\",\"city\":\"gsj\",\"district\":\"nwqjnoba\",\"countryOrRegion\":\"hdd\"},\"osProfile\":{\"computerName\":\"cegfnmntfp\",\"windowsConfiguration\":{\"patchSettings\":{\"assessmentMode\":\"ImageDefault\",\"patchMode\":\"AutomaticByPlatform\"}},\"linuxConfiguration\":{\"patchSettings\":{\"assessmentMode\":\"ImageDefault\",\"patchMode\":\"AutomaticByOS\"}}},\"cloudMetadata\":{\"provider\":\"lxlllchpo\"},\"agentUpgrade\":{\"desiredVersion\":\"evwrdnhfuk\",\"correlationId\":\"52690f54-85dd-4058-ac46-e099d840b775\",\"enableAutomaticUpgrade\":false,\"lastAttemptDesiredVersion\":\"swsmys\",\"lastAttemptTimestamp\":\"2021-05-25T03:52:52Z\",\"lastAttemptStatus\":\"Success\",\"lastAttemptMessage\":\"pfcvlerchpqbmfp\"},\"parentClusterResourceId\":\"abwidfcxsspuun\",\"privateLinkScopeResourceId\":\"xyh\"}")
            .toObject(MachineUpdateProperties.class);
        Assertions.assertEquals("dg", model.locationData().name());
        Assertions.assertEquals("gsj", model.locationData().city());
        Assertions.assertEquals("nwqjnoba", model.locationData().district());
        Assertions.assertEquals("hdd", model.locationData().countryOrRegion());
        Assertions.assertEquals(AssessmentModeTypes.IMAGE_DEFAULT,
            model.osProfile().windowsConfiguration().assessmentMode());
        Assertions.assertEquals(PatchModeTypes.AUTOMATIC_BY_PLATFORM,
            model.osProfile().windowsConfiguration().patchMode());
        Assertions.assertEquals(AssessmentModeTypes.IMAGE_DEFAULT,
            model.osProfile().linuxConfiguration().assessmentMode());
        Assertions.assertEquals(PatchModeTypes.AUTOMATIC_BY_OS, model.osProfile().linuxConfiguration().patchMode());
        Assertions.assertEquals("evwrdnhfuk", model.agentUpgrade().desiredVersion());
        Assertions.assertEquals(UUID.fromString("52690f54-85dd-4058-ac46-e099d840b775"),
            model.agentUpgrade().correlationId());
        Assertions.assertEquals(false, model.agentUpgrade().enableAutomaticUpgrade());
        Assertions.assertEquals("abwidfcxsspuun", model.parentClusterResourceId());
        Assertions.assertEquals("xyh", model.privateLinkScopeResourceId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MachineUpdateProperties model = new MachineUpdateProperties()
            .withLocationData(
                new LocationData().withName("dg").withCity("gsj").withDistrict("nwqjnoba").withCountryOrRegion("hdd"))
            .withOsProfile(new OSProfile()
                .withWindowsConfiguration(
                    new OSProfileWindowsConfiguration().withAssessmentMode(AssessmentModeTypes.IMAGE_DEFAULT)
                        .withPatchMode(PatchModeTypes.AUTOMATIC_BY_PLATFORM))
                .withLinuxConfiguration(
                    new OSProfileLinuxConfiguration().withAssessmentMode(AssessmentModeTypes.IMAGE_DEFAULT)
                        .withPatchMode(PatchModeTypes.AUTOMATIC_BY_OS)))
            .withCloudMetadata(new CloudMetadata())
            .withAgentUpgrade(new AgentUpgrade().withDesiredVersion("evwrdnhfuk")
                .withCorrelationId(UUID.fromString("52690f54-85dd-4058-ac46-e099d840b775"))
                .withEnableAutomaticUpgrade(false))
            .withParentClusterResourceId("abwidfcxsspuun")
            .withPrivateLinkScopeResourceId("xyh");
        model = BinaryData.fromObject(model).toObject(MachineUpdateProperties.class);
        Assertions.assertEquals("dg", model.locationData().name());
        Assertions.assertEquals("gsj", model.locationData().city());
        Assertions.assertEquals("nwqjnoba", model.locationData().district());
        Assertions.assertEquals("hdd", model.locationData().countryOrRegion());
        Assertions.assertEquals(AssessmentModeTypes.IMAGE_DEFAULT,
            model.osProfile().windowsConfiguration().assessmentMode());
        Assertions.assertEquals(PatchModeTypes.AUTOMATIC_BY_PLATFORM,
            model.osProfile().windowsConfiguration().patchMode());
        Assertions.assertEquals(AssessmentModeTypes.IMAGE_DEFAULT,
            model.osProfile().linuxConfiguration().assessmentMode());
        Assertions.assertEquals(PatchModeTypes.AUTOMATIC_BY_OS, model.osProfile().linuxConfiguration().patchMode());
        Assertions.assertEquals("evwrdnhfuk", model.agentUpgrade().desiredVersion());
        Assertions.assertEquals(UUID.fromString("52690f54-85dd-4058-ac46-e099d840b775"),
            model.agentUpgrade().correlationId());
        Assertions.assertEquals(false, model.agentUpgrade().enableAutomaticUpgrade());
        Assertions.assertEquals("abwidfcxsspuun", model.parentClusterResourceId());
        Assertions.assertEquals("xyh", model.privateLinkScopeResourceId());
    }
}
