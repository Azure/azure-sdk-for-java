// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridcompute.fluent.models.MachineUpdateProperties;
import com.azure.resourcemanager.hybridcompute.models.AgentUpgrade;
import com.azure.resourcemanager.hybridcompute.models.AssessmentModeTypes;
import com.azure.resourcemanager.hybridcompute.models.CloudMetadata;
import com.azure.resourcemanager.hybridcompute.models.LocationData;
import com.azure.resourcemanager.hybridcompute.models.OSProfile;
import com.azure.resourcemanager.hybridcompute.models.OSProfileLinuxConfiguration;
import com.azure.resourcemanager.hybridcompute.models.OSProfileWindowsConfiguration;
import com.azure.resourcemanager.hybridcompute.models.PatchModeTypes;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;

public final class MachineUpdatePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MachineUpdateProperties model = BinaryData.fromString(
            "{\"locationData\":{\"name\":\"fffiak\",\"city\":\"pqqmted\",\"district\":\"mmji\",\"countryOrRegion\":\"eozphv\"},\"osProfile\":{\"computerName\":\"y\",\"windowsConfiguration\":{\"patchSettings\":{\"assessmentMode\":\"AutomaticByPlatform\",\"patchMode\":\"ImageDefault\"}},\"linuxConfiguration\":{\"patchSettings\":{\"assessmentMode\":\"ImageDefault\",\"patchMode\":\"Manual\"}}},\"cloudMetadata\":{\"provider\":\"wx\"},\"agentUpgrade\":{\"desiredVersion\":\"evzhfsto\",\"correlationId\":\"6987caf8-a707-4d0b-8b3b-0de7abb8a64a\",\"enableAutomaticUpgrade\":false,\"lastAttemptDesiredVersion\":\"ujbypelmcuvhixb\",\"lastAttemptTimestamp\":\"2021-07-14T21:41:35Z\",\"lastAttemptStatus\":\"Success\",\"lastAttemptMessage\":\"yl\"},\"parentClusterResourceId\":\"ool\",\"privateLinkScopeResourceId\":\"tpkiwkkbnujry\"}")
            .toObject(MachineUpdateProperties.class);
        Assertions.assertEquals("fffiak", model.locationData().name());
        Assertions.assertEquals("pqqmted", model.locationData().city());
        Assertions.assertEquals("mmji", model.locationData().district());
        Assertions.assertEquals("eozphv", model.locationData().countryOrRegion());
        Assertions.assertEquals(AssessmentModeTypes.AUTOMATIC_BY_PLATFORM,
            model.osProfile().windowsConfiguration().assessmentMode());
        Assertions.assertEquals(PatchModeTypes.IMAGE_DEFAULT, model.osProfile().windowsConfiguration().patchMode());
        Assertions.assertEquals(AssessmentModeTypes.IMAGE_DEFAULT,
            model.osProfile().linuxConfiguration().assessmentMode());
        Assertions.assertEquals(PatchModeTypes.MANUAL, model.osProfile().linuxConfiguration().patchMode());
        Assertions.assertEquals("evzhfsto", model.agentUpgrade().desiredVersion());
        Assertions.assertEquals(UUID.fromString("6987caf8-a707-4d0b-8b3b-0de7abb8a64a"),
            model.agentUpgrade().correlationId());
        Assertions.assertEquals(false, model.agentUpgrade().enableAutomaticUpgrade());
        Assertions.assertEquals("ool", model.parentClusterResourceId());
        Assertions.assertEquals("tpkiwkkbnujry", model.privateLinkScopeResourceId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MachineUpdateProperties model = new MachineUpdateProperties()
            .withLocationData(new LocationData().withName("fffiak")
                .withCity("pqqmted")
                .withDistrict("mmji")
                .withCountryOrRegion("eozphv"))
            .withOsProfile(new OSProfile()
                .withWindowsConfiguration(
                    new OSProfileWindowsConfiguration().withAssessmentMode(AssessmentModeTypes.AUTOMATIC_BY_PLATFORM)
                        .withPatchMode(PatchModeTypes.IMAGE_DEFAULT))
                .withLinuxConfiguration(
                    new OSProfileLinuxConfiguration().withAssessmentMode(AssessmentModeTypes.IMAGE_DEFAULT)
                        .withPatchMode(PatchModeTypes.MANUAL)))
            .withCloudMetadata(new CloudMetadata())
            .withAgentUpgrade(new AgentUpgrade().withDesiredVersion("evzhfsto")
                .withCorrelationId(UUID.fromString("6987caf8-a707-4d0b-8b3b-0de7abb8a64a"))
                .withEnableAutomaticUpgrade(false))
            .withParentClusterResourceId("ool")
            .withPrivateLinkScopeResourceId("tpkiwkkbnujry");
        model = BinaryData.fromObject(model).toObject(MachineUpdateProperties.class);
        Assertions.assertEquals("fffiak", model.locationData().name());
        Assertions.assertEquals("pqqmted", model.locationData().city());
        Assertions.assertEquals("mmji", model.locationData().district());
        Assertions.assertEquals("eozphv", model.locationData().countryOrRegion());
        Assertions.assertEquals(AssessmentModeTypes.AUTOMATIC_BY_PLATFORM,
            model.osProfile().windowsConfiguration().assessmentMode());
        Assertions.assertEquals(PatchModeTypes.IMAGE_DEFAULT, model.osProfile().windowsConfiguration().patchMode());
        Assertions.assertEquals(AssessmentModeTypes.IMAGE_DEFAULT,
            model.osProfile().linuxConfiguration().assessmentMode());
        Assertions.assertEquals(PatchModeTypes.MANUAL, model.osProfile().linuxConfiguration().patchMode());
        Assertions.assertEquals("evzhfsto", model.agentUpgrade().desiredVersion());
        Assertions.assertEquals(UUID.fromString("6987caf8-a707-4d0b-8b3b-0de7abb8a64a"),
            model.agentUpgrade().correlationId());
        Assertions.assertEquals(false, model.agentUpgrade().enableAutomaticUpgrade());
        Assertions.assertEquals("ool", model.parentClusterResourceId());
        Assertions.assertEquals("tpkiwkkbnujry", model.privateLinkScopeResourceId());
    }
}
