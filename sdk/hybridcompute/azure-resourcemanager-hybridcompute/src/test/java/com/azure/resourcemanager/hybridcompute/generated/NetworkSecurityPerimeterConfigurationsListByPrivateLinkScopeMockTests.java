// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.hybridcompute.HybridComputeManager;
import com.azure.resourcemanager.hybridcompute.models.NetworkSecurityPerimeterConfiguration;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class NetworkSecurityPerimeterConfigurationsListByPrivateLinkScopeMockTests {
    @Test
    public void testListByPrivateLinkScope() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"els\",\"provisioningIssues\":[{\"name\":\"zevxoqein\",\"properties\":{\"issueType\":\"ConfigurationPropagationFailure\",\"severity\":\"Error\",\"description\":\"lzoblqwaafr\",\"suggestedResourceIds\":[\"hmzyqbhdvafjrqpj\"],\"suggestedAccessRules\":[{}]}}],\"networkSecurityPerimeter\":{\"id\":\"crgaxwmzwdf\",\"perimeterGuid\":\"nrzorpd\",\"location\":\"bqc\"},\"resourceAssociation\":{\"name\":\"fg\",\"accessMode\":\"learning\"},\"profile\":{\"name\":\"tgzdgv\",\"accessRulesVersion\":330072728,\"accessRules\":[{\"name\":\"qqil\",\"properties\":{}},{\"name\":\"d\",\"properties\":{}},{\"name\":\"oedxngucaifpaurw\",\"properties\":{}}],\"diagnosticSettingsVersion\":72382976,\"enabledLogCategories\":[\"qqa\",\"dmkxwxdcvjwcy\",\"iakeciqc\"]}},\"id\":\"xrtuicds\",\"name\":\"wdfmmpzhzzwvywr\",\"type\":\"yngydgrpxncaki\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HybridComputeManager manager = HybridComputeManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<NetworkSecurityPerimeterConfiguration> response = manager.networkSecurityPerimeterConfigurations()
            .listByPrivateLinkScope("ehgcvkbcknjo", "gjyy", com.azure.core.util.Context.NONE);

    }
}
