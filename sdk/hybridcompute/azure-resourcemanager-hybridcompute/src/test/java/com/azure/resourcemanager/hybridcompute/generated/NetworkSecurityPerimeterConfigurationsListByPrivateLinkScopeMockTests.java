// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.hybridcompute.HybridComputeManager;
import com.azure.resourcemanager.hybridcompute.models.NetworkSecurityPerimeterConfiguration;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class NetworkSecurityPerimeterConfigurationsListByPrivateLinkScopeMockTests {
    @Test
    public void testListByPrivateLinkScope() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"gycxnmskwhqjjys\",\"provisioningIssues\":[{\"name\":\"pshhkvpedwqslsr\",\"properties\":{\"issueType\":\"MissingIdentityConfiguration\",\"severity\":\"Warning\",\"description\":\"skondcbrwimu\",\"suggestedResourceIds\":[\"josovyrrl\"],\"suggestedAccessRules\":[{}]}},{\"name\":\"inuqtljq\",\"properties\":{\"issueType\":\"MissingIdentityConfiguration\",\"severity\":\"Error\",\"description\":\"hcecybmrqbr\",\"suggestedResourceIds\":[\"mpxdlvy\",\"frexcrseqw\",\"ksghudgzhxogjgg\",\"voujkxibdafhrk\"],\"suggestedAccessRules\":[{},{},{},{}]}}],\"networkSecurityPerimeter\":{\"id\":\"kxfbvfbhdyirhp\",\"perimeterGuid\":\"gddeimaw\",\"location\":\"vgkk\"},\"resourceAssociation\":{\"name\":\"ikjcjcazt\",\"accessMode\":\"audit\"},\"profile\":{\"name\":\"qowxwcom\",\"accessRulesVersion\":1863569932,\"accessRules\":[{\"name\":\"vc\",\"properties\":{}}],\"diagnosticSettingsVersion\":726020344,\"enabledLogCategories\":[\"cvejyfdvlvhbwrn\"]}},\"id\":\"xt\",\"name\":\"ddpqt\",\"type\":\"ehnmnaoyankco\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HybridComputeManager manager = HybridComputeManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<NetworkSecurityPerimeterConfiguration> response = manager.networkSecurityPerimeterConfigurations()
            .listByPrivateLinkScope("ua", "htomflrytswfp", com.azure.core.util.Context.NONE);

    }
}
