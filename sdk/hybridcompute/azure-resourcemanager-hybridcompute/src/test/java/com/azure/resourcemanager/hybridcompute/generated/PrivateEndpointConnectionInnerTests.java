// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridcompute.fluent.models.PrivateEndpointConnectionInner;
import com.azure.resourcemanager.hybridcompute.models.PrivateEndpointConnectionProperties;
import com.azure.resourcemanager.hybridcompute.models.PrivateEndpointProperty;
import com.azure.resourcemanager.hybridcompute.models.PrivateLinkServiceConnectionStateProperty;
import org.junit.jupiter.api.Assertions;

public final class PrivateEndpointConnectionInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateEndpointConnectionInner model = BinaryData.fromString(
            "{\"properties\":{\"privateEndpoint\":{\"id\":\"tfih\"},\"privateLinkServiceConnectionState\":{\"status\":\"botzingamvppho\",\"description\":\"zqzudph\",\"actionsRequired\":\"mvdk\"},\"provisioningState\":\"ynwcvtbv\",\"groupIds\":[\"hmtnvy\",\"iatkzwpcnp\",\"zcjaesgvvsccy\"]},\"id\":\"g\",\"name\":\"qfhwyg\",\"type\":\"lvdnkfx\"}")
            .toObject(PrivateEndpointConnectionInner.class);
        Assertions.assertEquals("tfih", model.properties().privateEndpoint().id());
        Assertions.assertEquals("botzingamvppho", model.properties().privateLinkServiceConnectionState().status());
        Assertions.assertEquals("zqzudph", model.properties().privateLinkServiceConnectionState().description());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateEndpointConnectionInner model = new PrivateEndpointConnectionInner().withProperties(
            new PrivateEndpointConnectionProperties().withPrivateEndpoint(new PrivateEndpointProperty().withId("tfih"))
                .withPrivateLinkServiceConnectionState(
                    new PrivateLinkServiceConnectionStateProperty().withStatus("botzingamvppho")
                        .withDescription("zqzudph")));
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnectionInner.class);
        Assertions.assertEquals("tfih", model.properties().privateEndpoint().id());
        Assertions.assertEquals("botzingamvppho", model.properties().privateLinkServiceConnectionState().status());
        Assertions.assertEquals("zqzudph", model.properties().privateLinkServiceConnectionState().description());
    }
}
