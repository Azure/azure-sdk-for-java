// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridcompute.fluent.models.PrivateEndpointConnectionInner;
import com.azure.resourcemanager.hybridcompute.models.PrivateEndpointConnectionProperties;
import com.azure.resourcemanager.hybridcompute.models.PrivateEndpointProperty;
import com.azure.resourcemanager.hybridcompute.models.PrivateLinkServiceConnectionStateProperty;
import org.junit.jupiter.api.Assertions;

public final class PrivateEndpointConnectionInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateEndpointConnectionInner model = BinaryData.fromString(
            "{\"properties\":{\"privateEndpoint\":{\"id\":\"mrfhirctymox\"},\"privateLinkServiceConnectionState\":{\"status\":\"tpipiwyczuhx\",\"description\":\"cpqjlihhyu\",\"actionsRequired\":\"skasdvlmfwdgzxu\"},\"provisioningState\":\"cvpa\",\"groupIds\":[\"reuzvxurisjn\",\"nytx\",\"fq\",\"zgxmr\"]},\"id\":\"blwpcesutrgj\",\"name\":\"pauutpw\",\"type\":\"qhih\"}")
            .toObject(PrivateEndpointConnectionInner.class);
        Assertions.assertEquals("mrfhirctymox", model.properties().privateEndpoint().id());
        Assertions.assertEquals("tpipiwyczuhx", model.properties().privateLinkServiceConnectionState().status());
        Assertions.assertEquals("cpqjlihhyu", model.properties().privateLinkServiceConnectionState().description());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateEndpointConnectionInner model
            = new PrivateEndpointConnectionInner().withProperties(new PrivateEndpointConnectionProperties()
                .withPrivateEndpoint(new PrivateEndpointProperty().withId("mrfhirctymox"))
                .withPrivateLinkServiceConnectionState(
                    new PrivateLinkServiceConnectionStateProperty().withStatus("tpipiwyczuhx")
                        .withDescription("cpqjlihhyu")));
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnectionInner.class);
        Assertions.assertEquals("mrfhirctymox", model.properties().privateEndpoint().id());
        Assertions.assertEquals("tpipiwyczuhx", model.properties().privateLinkServiceConnectionState().status());
        Assertions.assertEquals("cpqjlihhyu", model.properties().privateLinkServiceConnectionState().description());
    }
}
