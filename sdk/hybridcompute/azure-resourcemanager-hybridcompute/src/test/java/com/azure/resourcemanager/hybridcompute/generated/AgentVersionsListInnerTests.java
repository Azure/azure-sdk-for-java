// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridcompute.fluent.models.AgentVersionInner;
import com.azure.resourcemanager.hybridcompute.fluent.models.AgentVersionsListInner;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AgentVersionsListInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AgentVersionsListInner model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"agentVersion\":\"gdrjervnaenqpe\",\"downloadLink\":\"ndoygmifthnzdnd\",\"osType\":\"gnayqigynduh\"},{\"agentVersion\":\"hqlkthumaqo\",\"downloadLink\":\"gycdu\",\"osType\":\"r\"},{\"agentVersion\":\"ccymvaolpsslql\",\"downloadLink\":\"mdnbbglzpswiy\",\"osType\":\"cwyhzdxssa\"}],\"nextLink\":\"zmnvdfznudaod\"}")
                .toObject(AgentVersionsListInner.class);
        Assertions.assertEquals("gdrjervnaenqpe", model.value().get(0).agentVersion());
        Assertions.assertEquals("ndoygmifthnzdnd", model.value().get(0).downloadLink());
        Assertions.assertEquals("gnayqigynduh", model.value().get(0).osType());
        Assertions.assertEquals("zmnvdfznudaod", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AgentVersionsListInner model =
            new AgentVersionsListInner()
                .withValue(
                    Arrays
                        .asList(
                            new AgentVersionInner()
                                .withAgentVersion("gdrjervnaenqpe")
                                .withDownloadLink("ndoygmifthnzdnd")
                                .withOsType("gnayqigynduh"),
                            new AgentVersionInner()
                                .withAgentVersion("hqlkthumaqo")
                                .withDownloadLink("gycdu")
                                .withOsType("r"),
                            new AgentVersionInner()
                                .withAgentVersion("ccymvaolpsslql")
                                .withDownloadLink("mdnbbglzpswiy")
                                .withOsType("cwyhzdxssa")))
                .withNextLink("zmnvdfznudaod");
        model = BinaryData.fromObject(model).toObject(AgentVersionsListInner.class);
        Assertions.assertEquals("gdrjervnaenqpe", model.value().get(0).agentVersion());
        Assertions.assertEquals("ndoygmifthnzdnd", model.value().get(0).downloadLink());
        Assertions.assertEquals("gnayqigynduh", model.value().get(0).osType());
        Assertions.assertEquals("zmnvdfznudaod", model.nextLink());
    }
}
