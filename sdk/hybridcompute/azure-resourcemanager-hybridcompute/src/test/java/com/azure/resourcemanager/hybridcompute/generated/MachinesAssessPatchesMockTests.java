// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.hybridcompute.HybridComputeManager;
import com.azure.resourcemanager.hybridcompute.models.MachineAssessPatchesResult;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class MachinesAssessPatchesMockTests {
    @Test
    public void testAssessPatches() throws Exception {
        String responseStr
            = "{\"status\":\"Unknown\",\"assessmentActivityId\":\"429ccadd-e3ce-4042-8fd6-898e6b442f24\",\"rebootPending\":false,\"availablePatchCountByClassification\":{\"security\":149120205,\"critical\":897576014,\"definition\":1240461141,\"updateRollup\":515034915,\"featurePack\":1955540217,\"servicePack\":1173386247,\"tools\":1481873943,\"updates\":972359949,\"other\":581977719},\"startDateTime\":\"2021-04-19T13:21:36Z\",\"lastModifiedDateTime\":\"2021-03-17T02:24:33Z\",\"startedBy\":\"Platform\",\"patchServiceUsed\":\"APT\",\"osType\":\"Linux\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HybridComputeManager manager = HybridComputeManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        MachineAssessPatchesResult response
            = manager.machines().assessPatches("ltv", "qjctzenkeif", com.azure.core.util.Context.NONE);

    }
}
