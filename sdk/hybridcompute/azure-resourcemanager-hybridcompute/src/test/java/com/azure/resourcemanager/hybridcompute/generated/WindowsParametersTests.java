// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridcompute.models.VMGuestPatchClassificationWindows;
import com.azure.resourcemanager.hybridcompute.models.WindowsParameters;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WindowsParametersTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WindowsParameters model =
            BinaryData
                .fromString(
                    "{\"classificationsToInclude\":[\"UpdateRollUp\"],\"kbNumbersToInclude\":[\"odebfqkkrbmpu\",\"gr\",\"wflzlfbxzpuzy\",\"ispnqzahmgkbrp\"],\"kbNumbersToExclude\":[\"hibnuqqkpika\",\"rgvtqag\"],\"excludeKbsRequiringReboot\":false,\"maxPatchPublishDate\":\"2021-10-07T08:50:26Z\"}")
                .toObject(WindowsParameters.class);
        Assertions
            .assertEquals(VMGuestPatchClassificationWindows.UPDATE_ROLL_UP, model.classificationsToInclude().get(0));
        Assertions.assertEquals("odebfqkkrbmpu", model.kbNumbersToInclude().get(0));
        Assertions.assertEquals("hibnuqqkpika", model.kbNumbersToExclude().get(0));
        Assertions.assertEquals(false, model.excludeKbsRequiringReboot());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-07T08:50:26Z"), model.maxPatchPublishDate());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WindowsParameters model =
            new WindowsParameters()
                .withClassificationsToInclude(Arrays.asList(VMGuestPatchClassificationWindows.UPDATE_ROLL_UP))
                .withKbNumbersToInclude(Arrays.asList("odebfqkkrbmpu", "gr", "wflzlfbxzpuzy", "ispnqzahmgkbrp"))
                .withKbNumbersToExclude(Arrays.asList("hibnuqqkpika", "rgvtqag"))
                .withExcludeKbsRequiringReboot(false)
                .withMaxPatchPublishDate(OffsetDateTime.parse("2021-10-07T08:50:26Z"));
        model = BinaryData.fromObject(model).toObject(WindowsParameters.class);
        Assertions
            .assertEquals(VMGuestPatchClassificationWindows.UPDATE_ROLL_UP, model.classificationsToInclude().get(0));
        Assertions.assertEquals("odebfqkkrbmpu", model.kbNumbersToInclude().get(0));
        Assertions.assertEquals("hibnuqqkpika", model.kbNumbersToExclude().get(0));
        Assertions.assertEquals(false, model.excludeKbsRequiringReboot());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-07T08:50:26Z"), model.maxPatchPublishDate());
    }
}
