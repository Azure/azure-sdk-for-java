// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.hybridcompute.HybridComputeManager;
import com.azure.resourcemanager.hybridcompute.models.License;
import com.azure.resourcemanager.hybridcompute.models.LicenseCoreType;
import com.azure.resourcemanager.hybridcompute.models.LicenseEdition;
import com.azure.resourcemanager.hybridcompute.models.LicenseState;
import com.azure.resourcemanager.hybridcompute.models.LicenseTarget;
import com.azure.resourcemanager.hybridcompute.models.LicenseType;
import com.azure.resourcemanager.hybridcompute.models.ProgramYear;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class LicensesGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Succeeded\",\"tenantId\":\"vuanashcxlp\",\"licenseType\":\"ESU\",\"licenseDetails\":{\"state\":\"Activated\",\"target\":\"Windows Server 2012 R2\",\"edition\":\"Datacenter\",\"type\":\"pCore\",\"processors\":2095946053,\"assignedLicenses\":665475568,\"immutableId\":\"db\",\"volumeLicenseDetails\":[{\"programYear\":\"Year 1\",\"invoiceId\":\"nfdgn\"},{\"programYear\":\"Year 3\",\"invoiceId\":\"puuw\"}]}},\"location\":\"tvuqjctzenkeifzz\",\"tags\":{\"hbxcu\":\"dasvfl\",\"boldforobwj\":\"chxgs\",\"vacqpbtuodxesz\":\"vizbfhfo\",\"rrwoycqucwyhahn\":\"bbelawumuaslzk\"},\"id\":\"mdr\",\"name\":\"ywuhpsvfuur\",\"type\":\"tlwexxwlalniexz\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HybridComputeManager manager = HybridComputeManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        License response = manager.licenses()
            .getByResourceGroupWithResponse("k", "reljeamur", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("tvuqjctzenkeifzz", response.location());
        Assertions.assertEquals("dasvfl", response.tags().get("hbxcu"));
        Assertions.assertEquals("vuanashcxlp", response.tenantId());
        Assertions.assertEquals(LicenseType.ESU, response.licenseType());
        Assertions.assertEquals(LicenseState.ACTIVATED, response.licenseDetails().state());
        Assertions.assertEquals(LicenseTarget.WINDOWS_SERVER_2012_R2, response.licenseDetails().target());
        Assertions.assertEquals(LicenseEdition.DATACENTER, response.licenseDetails().edition());
        Assertions.assertEquals(LicenseCoreType.P_CORE, response.licenseDetails().type());
        Assertions.assertEquals(2095946053, response.licenseDetails().processors());
        Assertions.assertEquals(ProgramYear.YEAR_1,
            response.licenseDetails().volumeLicenseDetails().get(0).programYear());
        Assertions.assertEquals("nfdgn", response.licenseDetails().volumeLicenseDetails().get(0).invoiceId());
    }
}
