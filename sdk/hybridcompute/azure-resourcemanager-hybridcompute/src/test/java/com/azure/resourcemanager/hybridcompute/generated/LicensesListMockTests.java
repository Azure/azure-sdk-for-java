// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.hybridcompute.HybridComputeManager;
import com.azure.resourcemanager.hybridcompute.models.License;
import com.azure.resourcemanager.hybridcompute.models.LicenseCoreType;
import com.azure.resourcemanager.hybridcompute.models.LicenseEdition;
import com.azure.resourcemanager.hybridcompute.models.LicenseState;
import com.azure.resourcemanager.hybridcompute.models.LicenseTarget;
import com.azure.resourcemanager.hybridcompute.models.LicenseType;
import com.azure.resourcemanager.hybridcompute.models.ProgramYear;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class LicensesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Deleted\",\"tenantId\":\"xxmlfmkqscazua\",\"licenseType\":\"ESU\",\"licenseDetails\":{\"state\":\"Deactivated\",\"target\":\"Windows Server 2012 R2\",\"edition\":\"Datacenter\",\"type\":\"vCore\",\"processors\":1322793238,\"assignedLicenses\":1568723374,\"immutableId\":\"cush\",\"volumeLicenseDetails\":[{\"programYear\":\"Year 1\",\"invoiceId\":\"mxyasflvgsgzw\"},{\"programYear\":\"Year 2\",\"invoiceId\":\"oi\"}]}},\"location\":\"nsmjbl\",\"tags\":{\"ryuzcbmqqv\":\"hlnymzotq\",\"fgtayxonsup\":\"mv\",\"oibgsxg\":\"ujlzqnhcvsqltn\",\"dbxiqx\":\"xfyqonmpqoxwdo\"},\"id\":\"iiqbi\",\"name\":\"htmwwinh\",\"type\":\"hfqpofv\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HybridComputeManager manager = HybridComputeManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<License> response = manager.licenses().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("nsmjbl", response.iterator().next().location());
        Assertions.assertEquals("hlnymzotq", response.iterator().next().tags().get("ryuzcbmqqv"));
        Assertions.assertEquals("xxmlfmkqscazua", response.iterator().next().tenantId());
        Assertions.assertEquals(LicenseType.ESU, response.iterator().next().licenseType());
        Assertions.assertEquals(LicenseState.DEACTIVATED, response.iterator().next().licenseDetails().state());
        Assertions.assertEquals(LicenseTarget.WINDOWS_SERVER_2012_R2,
            response.iterator().next().licenseDetails().target());
        Assertions.assertEquals(LicenseEdition.DATACENTER, response.iterator().next().licenseDetails().edition());
        Assertions.assertEquals(LicenseCoreType.V_CORE, response.iterator().next().licenseDetails().type());
        Assertions.assertEquals(1322793238, response.iterator().next().licenseDetails().processors());
        Assertions.assertEquals(ProgramYear.YEAR_1,
            response.iterator().next().licenseDetails().volumeLicenseDetails().get(0).programYear());
        Assertions.assertEquals("mxyasflvgsgzw",
            response.iterator().next().licenseDetails().volumeLicenseDetails().get(0).invoiceId());
    }
}
