// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridcompute.fluent.models.LicenseProfileArmProductProfileProperties;
import com.azure.resourcemanager.hybridcompute.models.LicenseProfileProductType;
import com.azure.resourcemanager.hybridcompute.models.LicenseProfileSubscriptionStatus;
import com.azure.resourcemanager.hybridcompute.models.ProductFeature;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class LicenseProfileArmProductProfilePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LicenseProfileArmProductProfileProperties model = BinaryData.fromString(
            "{\"subscriptionStatus\":\"Unknown\",\"productType\":\"WindowsServer\",\"enrollmentDate\":\"2021-07-31T02:25:32Z\",\"billingStartDate\":\"2021-04-15T03:02:29Z\",\"disenrollmentDate\":\"2021-04-27T23:18:31Z\",\"billingEndDate\":\"2021-05-25T01:26:18Z\",\"productFeatures\":[{\"name\":\"flbvvnchrkcciwwz\",\"subscriptionStatus\":\"Disabling\",\"enrollmentDate\":\"2021-02-07T01:05:42Z\",\"billingStartDate\":\"2021-05-03T11:30:29Z\",\"disenrollmentDate\":\"2021-05-22T18:36:22Z\",\"billingEndDate\":\"2021-10-14T07:23:56Z\"},{\"name\":\"ofoskghs\",\"subscriptionStatus\":\"Enabled\",\"enrollmentDate\":\"2021-09-27T06:41:32Z\",\"billingStartDate\":\"2021-10-21T01:55:36Z\",\"disenrollmentDate\":\"2021-06-29T03:13:35Z\",\"billingEndDate\":\"2021-01-02T07:29:36Z\"},{\"name\":\"gidyjrrf\",\"subscriptionStatus\":\"Enabled\",\"enrollmentDate\":\"2021-05-02T14:53:40Z\",\"billingStartDate\":\"2021-06-03T02:24:21Z\",\"disenrollmentDate\":\"2021-04-28T17:45:05Z\",\"billingEndDate\":\"2021-04-17T17:42:02Z\"}]}")
            .toObject(LicenseProfileArmProductProfileProperties.class);
        Assertions.assertEquals(LicenseProfileSubscriptionStatus.UNKNOWN, model.subscriptionStatus());
        Assertions.assertEquals(LicenseProfileProductType.WINDOWS_SERVER, model.productType());
        Assertions.assertEquals("flbvvnchrkcciwwz", model.productFeatures().get(0).name());
        Assertions.assertEquals(LicenseProfileSubscriptionStatus.DISABLING,
            model.productFeatures().get(0).subscriptionStatus());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LicenseProfileArmProductProfileProperties model = new LicenseProfileArmProductProfileProperties()
            .withSubscriptionStatus(LicenseProfileSubscriptionStatus.UNKNOWN)
            .withProductType(LicenseProfileProductType.WINDOWS_SERVER)
            .withProductFeatures(Arrays.asList(
                new ProductFeature().withName("flbvvnchrkcciwwz")
                    .withSubscriptionStatus(LicenseProfileSubscriptionStatus.DISABLING),
                new ProductFeature().withName("ofoskghs")
                    .withSubscriptionStatus(LicenseProfileSubscriptionStatus.ENABLED),
                new ProductFeature().withName("gidyjrrf")
                    .withSubscriptionStatus(LicenseProfileSubscriptionStatus.ENABLED)));
        model = BinaryData.fromObject(model).toObject(LicenseProfileArmProductProfileProperties.class);
        Assertions.assertEquals(LicenseProfileSubscriptionStatus.UNKNOWN, model.subscriptionStatus());
        Assertions.assertEquals(LicenseProfileProductType.WINDOWS_SERVER, model.productType());
        Assertions.assertEquals("flbvvnchrkcciwwz", model.productFeatures().get(0).name());
        Assertions.assertEquals(LicenseProfileSubscriptionStatus.DISABLING,
            model.productFeatures().get(0).subscriptionStatus());
    }
}
