// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridcompute.fluent.models.NetworkProfileInner;
import com.azure.resourcemanager.hybridcompute.models.IpAddress;
import com.azure.resourcemanager.hybridcompute.models.NetworkInterface;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NetworkProfileInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkProfileInner model =
            BinaryData
                .fromString(
                    "{\"networkInterfaces\":[{\"ipAddresses\":[{\"address\":\"uofqwe\",\"ipAddressVersion\":\"hmenevfyexfwhybc\",\"subnet\":{\"addressPrefix\":\"yvdcsitynnaa\"}}]},{\"ipAddresses\":[{\"address\":\"tehfiqscjeypvh\",\"ipAddressVersion\":\"rkgqhcjrefo\",\"subnet\":{\"addressPrefix\":\"kqsleyyvxy\"}},{\"address\":\"pkc\",\"ipAddressVersion\":\"tpngjcrcczsqpjh\",\"subnet\":{\"addressPrefix\":\"ajvnysounqe\"}}]}]}")
                .toObject(NetworkProfileInner.class);
        Assertions.assertEquals("uofqwe", model.networkInterfaces().get(0).ipAddresses().get(0).address());
        Assertions
            .assertEquals("hmenevfyexfwhybc", model.networkInterfaces().get(0).ipAddresses().get(0).ipAddressVersion());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkProfileInner model =
            new NetworkProfileInner()
                .withNetworkInterfaces(
                    Arrays
                        .asList(
                            new NetworkInterface()
                                .withIpAddresses(
                                    Arrays
                                        .asList(
                                            new IpAddress()
                                                .withAddress("uofqwe")
                                                .withIpAddressVersion("hmenevfyexfwhybc"))),
                            new NetworkInterface()
                                .withIpAddresses(
                                    Arrays
                                        .asList(
                                            new IpAddress()
                                                .withAddress("tehfiqscjeypvh")
                                                .withIpAddressVersion("rkgqhcjrefo"),
                                            new IpAddress()
                                                .withAddress("pkc")
                                                .withIpAddressVersion("tpngjcrcczsqpjh")))));
        model = BinaryData.fromObject(model).toObject(NetworkProfileInner.class);
        Assertions.assertEquals("uofqwe", model.networkInterfaces().get(0).ipAddresses().get(0).address());
        Assertions
            .assertEquals("hmenevfyexfwhybc", model.networkInterfaces().get(0).ipAddresses().get(0).ipAddressVersion());
    }
}
