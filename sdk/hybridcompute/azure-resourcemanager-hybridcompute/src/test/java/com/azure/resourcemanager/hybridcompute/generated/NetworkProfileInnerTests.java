// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridcompute.fluent.models.NetworkProfileInner;
import com.azure.resourcemanager.hybridcompute.models.IpAddress;
import com.azure.resourcemanager.hybridcompute.models.NetworkInterface;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NetworkProfileInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkProfileInner model = BinaryData.fromString(
            "{\"networkInterfaces\":[{\"ipAddresses\":[{\"address\":\"kouknvudwtiu\",\"ipAddressVersion\":\"ldngkpoci\",\"subnet\":{\"addressPrefix\":\"yxoegukgjnp\"}},{\"address\":\"cgygev\",\"ipAddressVersion\":\"ntypmrbpizcdrqj\",\"subnet\":{\"addressPrefix\":\"ydnfyhxdeoejz\"}},{\"address\":\"w\",\"ipAddressVersion\":\"sjttgzfbish\",\"subnet\":{\"addressPrefix\":\"hajdeyeamdpha\"}}]}]}")
            .toObject(NetworkProfileInner.class);
        Assertions.assertEquals("kouknvudwtiu", model.networkInterfaces().get(0).ipAddresses().get(0).address());
        Assertions.assertEquals("ldngkpoci", model.networkInterfaces().get(0).ipAddresses().get(0).ipAddressVersion());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkProfileInner model
            = new NetworkProfileInner().withNetworkInterfaces(Arrays.asList(new NetworkInterface().withIpAddresses(
                Arrays.asList(new IpAddress().withAddress("kouknvudwtiu").withIpAddressVersion("ldngkpoci"),
                    new IpAddress().withAddress("cgygev").withIpAddressVersion("ntypmrbpizcdrqj"),
                    new IpAddress().withAddress("w").withIpAddressVersion("sjttgzfbish")))));
        model = BinaryData.fromObject(model).toObject(NetworkProfileInner.class);
        Assertions.assertEquals("kouknvudwtiu", model.networkInterfaces().get(0).ipAddresses().get(0).address());
        Assertions.assertEquals("ldngkpoci", model.networkInterfaces().get(0).ipAddresses().get(0).ipAddressVersion());
    }
}
