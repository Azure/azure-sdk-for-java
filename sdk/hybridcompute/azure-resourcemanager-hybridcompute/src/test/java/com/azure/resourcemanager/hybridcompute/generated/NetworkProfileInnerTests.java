// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridcompute.fluent.models.NetworkProfileInner;
import com.azure.resourcemanager.hybridcompute.models.IpAddress;
import com.azure.resourcemanager.hybridcompute.models.NetworkInterface;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NetworkProfileInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkProfileInner model = BinaryData.fromString(
            "{\"networkInterfaces\":[{\"macAddress\":\"tkcxywnytnrsy\",\"id\":\"qidybyx\",\"name\":\"fclhaaxdbabphlwr\",\"ipAddresses\":[{\"address\":\"tsthsucocm\",\"ipAddressVersion\":\"yazttbtwwrqpue\",\"subnet\":{\"addressPrefix\":\"zywbiex\"}}]},{\"macAddress\":\"eyueaxibxujwb\",\"id\":\"walm\",\"name\":\"yoxa\",\"ipAddresses\":[{\"address\":\"zjancuxr\",\"ipAddressVersion\":\"wbavxbniwdj\",\"subnet\":{\"addressPrefix\":\"tsdbpgn\"}},{\"address\":\"txhp\",\"ipAddressVersion\":\"bzpfzab\",\"subnet\":{\"addressPrefix\":\"uhxwtctyqiklbbov\"}},{\"address\":\"wzbhvgyugu\",\"ipAddressVersion\":\"vmkfssxqu\",\"subnet\":{\"addressPrefix\":\"plgmgsxnk\"}}]},{\"macAddress\":\"kde\",\"id\":\"pvlopwiyighxpkd\",\"name\":\"baiuebbaumny\",\"ipAddresses\":[{\"address\":\"deoj\",\"ipAddressVersion\":\"bckhsmtxpsi\",\"subnet\":{\"addressPrefix\":\"fhvpesaps\"}}]},{\"macAddress\":\"dqmh\",\"id\":\"dhtldwkyz\",\"name\":\"utknc\",\"ipAddresses\":[{\"address\":\"svlxotogtwrup\",\"ipAddressVersion\":\"xvnmicykvceov\",\"subnet\":{\"addressPrefix\":\"ovnotyfjfcnjbkcn\"}},{\"address\":\"hbttkphyw\",\"ipAddressVersion\":\"vjtoqnermclfp\",\"subnet\":{\"addressPrefix\":\"oxuscrpabgyepsbj\"}},{\"address\":\"zq\",\"ipAddressVersion\":\"xywpmueefjzwfqkq\",\"subnet\":{\"addressPrefix\":\"dsuyonobgla\"}}]}]}")
            .toObject(NetworkProfileInner.class);
        Assertions.assertEquals("tkcxywnytnrsy", model.networkInterfaces().get(0).macAddress());
        Assertions.assertEquals("qidybyx", model.networkInterfaces().get(0).id());
        Assertions.assertEquals("fclhaaxdbabphlwr", model.networkInterfaces().get(0).name());
        Assertions.assertEquals("tsthsucocm", model.networkInterfaces().get(0).ipAddresses().get(0).address());
        Assertions.assertEquals("yazttbtwwrqpue",
            model.networkInterfaces().get(0).ipAddresses().get(0).ipAddressVersion());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkProfileInner model
            = new NetworkProfileInner()
                .withNetworkInterfaces(
                    Arrays.asList(
                        new NetworkInterface().withMacAddress("tkcxywnytnrsy")
                            .withId("qidybyx")
                            .withName("fclhaaxdbabphlwr")
                            .withIpAddresses(Arrays.asList(
                                new IpAddress().withAddress("tsthsucocm").withIpAddressVersion("yazttbtwwrqpue"))),
                        new NetworkInterface().withMacAddress("eyueaxibxujwb")
                            .withId("walm")
                            .withName("yoxa")
                            .withIpAddresses(Arrays
                                .asList(new IpAddress().withAddress("zjancuxr").withIpAddressVersion("wbavxbniwdj"),
                                    new IpAddress().withAddress("txhp").withIpAddressVersion("bzpfzab"),
                                    new IpAddress().withAddress("wzbhvgyugu").withIpAddressVersion("vmkfssxqu"))),
                        new NetworkInterface().withMacAddress("kde")
                            .withId("pvlopwiyighxpkd")
                            .withName("baiuebbaumny")
                            .withIpAddresses(
                                Arrays.asList(new IpAddress().withAddress("deoj").withIpAddressVersion("bckhsmtxpsi"))),
                        new NetworkInterface().withMacAddress("dqmh")
                            .withId("dhtldwkyz")
                            .withName("utknc")
                            .withIpAddresses(Arrays.asList(
                                new IpAddress().withAddress("svlxotogtwrup").withIpAddressVersion("xvnmicykvceov"),
                                new IpAddress().withAddress("hbttkphyw").withIpAddressVersion("vjtoqnermclfp"),
                                new IpAddress().withAddress("zq").withIpAddressVersion("xywpmueefjzwfqkq")))));
        model = BinaryData.fromObject(model).toObject(NetworkProfileInner.class);
        Assertions.assertEquals("tkcxywnytnrsy", model.networkInterfaces().get(0).macAddress());
        Assertions.assertEquals("qidybyx", model.networkInterfaces().get(0).id());
        Assertions.assertEquals("fclhaaxdbabphlwr", model.networkInterfaces().get(0).name());
        Assertions.assertEquals("tsthsucocm", model.networkInterfaces().get(0).ipAddresses().get(0).address());
        Assertions.assertEquals("yazttbtwwrqpue",
            model.networkInterfaces().get(0).ipAddresses().get(0).ipAddressVersion());
    }
}
