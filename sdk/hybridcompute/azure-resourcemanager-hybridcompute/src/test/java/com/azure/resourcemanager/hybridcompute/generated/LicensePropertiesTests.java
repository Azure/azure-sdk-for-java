// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridcompute.fluent.models.LicenseProperties;
import com.azure.resourcemanager.hybridcompute.models.LicenseCoreType;
import com.azure.resourcemanager.hybridcompute.models.LicenseDetails;
import com.azure.resourcemanager.hybridcompute.models.LicenseEdition;
import com.azure.resourcemanager.hybridcompute.models.LicenseState;
import com.azure.resourcemanager.hybridcompute.models.LicenseTarget;
import com.azure.resourcemanager.hybridcompute.models.LicenseType;
import org.junit.jupiter.api.Assertions;

public final class LicensePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LicenseProperties model =
            BinaryData
                .fromString(
                    "{\"provisioningState\":\"Succeeded\",\"tenantId\":\"ufo\",\"licenseType\":\"ESU\",\"licenseDetails\":{\"state\":\"Deactivated\",\"target\":\"Windows"
                        + " Server"
                        + " 2012\",\"edition\":\"Standard\",\"type\":\"pCore\",\"processors\":641449848,\"assignedLicenses\":30947494,\"immutableId\":\"glzlhjxrifkwmrv\"}}")
                .toObject(LicenseProperties.class);
        Assertions.assertEquals("ufo", model.tenantId());
        Assertions.assertEquals(LicenseType.ESU, model.licenseType());
        Assertions.assertEquals(LicenseState.DEACTIVATED, model.licenseDetails().state());
        Assertions.assertEquals(LicenseTarget.WINDOWS_SERVER_2012, model.licenseDetails().target());
        Assertions.assertEquals(LicenseEdition.STANDARD, model.licenseDetails().edition());
        Assertions.assertEquals(LicenseCoreType.P_CORE, model.licenseDetails().type());
        Assertions.assertEquals(641449848, model.licenseDetails().processors());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LicenseProperties model =
            new LicenseProperties()
                .withTenantId("ufo")
                .withLicenseType(LicenseType.ESU)
                .withLicenseDetails(
                    new LicenseDetails()
                        .withState(LicenseState.DEACTIVATED)
                        .withTarget(LicenseTarget.WINDOWS_SERVER_2012)
                        .withEdition(LicenseEdition.STANDARD)
                        .withType(LicenseCoreType.P_CORE)
                        .withProcessors(641449848));
        model = BinaryData.fromObject(model).toObject(LicenseProperties.class);
        Assertions.assertEquals("ufo", model.tenantId());
        Assertions.assertEquals(LicenseType.ESU, model.licenseType());
        Assertions.assertEquals(LicenseState.DEACTIVATED, model.licenseDetails().state());
        Assertions.assertEquals(LicenseTarget.WINDOWS_SERVER_2012, model.licenseDetails().target());
        Assertions.assertEquals(LicenseEdition.STANDARD, model.licenseDetails().edition());
        Assertions.assertEquals(LicenseCoreType.P_CORE, model.licenseDetails().type());
        Assertions.assertEquals(641449848, model.licenseDetails().processors());
    }
}
