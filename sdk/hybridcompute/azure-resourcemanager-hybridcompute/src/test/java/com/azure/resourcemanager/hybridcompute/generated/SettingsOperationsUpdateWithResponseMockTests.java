// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.hybridcompute.HybridComputeManager;
import com.azure.resourcemanager.hybridcompute.fluent.models.SettingsInner;
import com.azure.resourcemanager.hybridcompute.models.Settings;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SettingsOperationsUpdateWithResponseMockTests {
    @Test
    public void testUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"tenantId\":\"jwabmd\",\"gatewayProperties\":{\"gatewayResourceId\":\"mvcopexcmjurbuhh\"}},\"id\":\"yqltqsro\",\"name\":\"tuwkffdj\",\"type\":\"tsysi\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HybridComputeManager manager = HybridComputeManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Settings response = manager.settingsOperations()
            .updateWithResponse("rwd", "qzeqyjleziunjxdf", "antkwcegyamlbns", "qa", "jjvpilguooqja",
                new SettingsInner().withGatewayResourceId("tdtpdelqacslmo"), com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("mvcopexcmjurbuhh", response.gatewayResourceId());
    }
}
