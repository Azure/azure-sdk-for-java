// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.implementation;

import com.azure.resourcemanager.hybridcompute.fluent.models.LicenseInner;
import com.azure.resourcemanager.hybridcompute.fluent.models.LicenseProfileMachineInstanceViewEsuPropertiesInner;
import com.azure.resourcemanager.hybridcompute.models.EsuEligibility;
import com.azure.resourcemanager.hybridcompute.models.EsuKey;
import com.azure.resourcemanager.hybridcompute.models.EsuKeyState;
import com.azure.resourcemanager.hybridcompute.models.EsuServerType;
import com.azure.resourcemanager.hybridcompute.models.License;
import com.azure.resourcemanager.hybridcompute.models.LicenseAssignmentState;
import com.azure.resourcemanager.hybridcompute.models.LicenseProfileMachineInstanceViewEsuProperties;
import java.util.Collections;
import java.util.List;

public final class LicenseProfileMachineInstanceViewEsuPropertiesImpl
    implements LicenseProfileMachineInstanceViewEsuProperties {
    private LicenseProfileMachineInstanceViewEsuPropertiesInner innerObject;

    private final com.azure.resourcemanager.hybridcompute.HybridComputeManager serviceManager;

    LicenseProfileMachineInstanceViewEsuPropertiesImpl(LicenseProfileMachineInstanceViewEsuPropertiesInner innerObject,
        com.azure.resourcemanager.hybridcompute.HybridComputeManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String assignedLicenseImmutableId() {
        return this.innerModel().assignedLicenseImmutableId();
    }

    public List<EsuKey> esuKeys() {
        List<EsuKey> inner = this.innerModel().esuKeys();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public EsuServerType serverType() {
        return this.innerModel().serverType();
    }

    public EsuEligibility esuEligibility() {
        return this.innerModel().esuEligibility();
    }

    public EsuKeyState esuKeyState() {
        return this.innerModel().esuKeyState();
    }

    public License assignedLicense() {
        LicenseInner inner = this.innerModel().assignedLicense();
        if (inner != null) {
            return new LicenseImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public LicenseAssignmentState licenseAssignmentState() {
        return this.innerModel().licenseAssignmentState();
    }

    public LicenseProfileMachineInstanceViewEsuPropertiesInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.hybridcompute.HybridComputeManager manager() {
        return this.serviceManager;
    }
}
