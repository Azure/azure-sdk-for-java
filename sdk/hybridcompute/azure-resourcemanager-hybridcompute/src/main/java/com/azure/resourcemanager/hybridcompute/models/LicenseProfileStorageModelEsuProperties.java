// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * License profile storage model for ESU properties.
 */
@Immutable
public class LicenseProfileStorageModelEsuProperties {
    /*
     * The guid id of the license.
     */
    @JsonProperty(value = "assignedLicenseImmutableId", access = JsonProperty.Access.WRITE_ONLY)
    private String assignedLicenseImmutableId;

    /*
     * The list of ESU keys.
     */
    @JsonProperty(value = "esuKeys", access = JsonProperty.Access.WRITE_ONLY)
    private List<EsuKey> esuKeys;

    /**
     * Creates an instance of LicenseProfileStorageModelEsuProperties class.
     */
    public LicenseProfileStorageModelEsuProperties() {
    }

    /**
     * Get the assignedLicenseImmutableId property: The guid id of the license.
     * 
     * @return the assignedLicenseImmutableId value.
     */
    public String assignedLicenseImmutableId() {
        return this.assignedLicenseImmutableId;
    }

    /**
     * Get the esuKeys property: The list of ESU keys.
     * 
     * @return the esuKeys value.
     */
    public List<EsuKey> esuKeys() {
        return this.esuKeys;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (esuKeys() != null) {
            esuKeys().forEach(e -> e.validate());
        }
    }
}
