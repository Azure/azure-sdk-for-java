// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.hybridcompute.models.LicenseCoreType;
import com.azure.resourcemanager.hybridcompute.models.LicenseEdition;
import com.azure.resourcemanager.hybridcompute.models.LicenseState;
import com.azure.resourcemanager.hybridcompute.models.LicenseTarget;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The LicenseUpdatePropertiesLicenseDetails model.
 */
@Fluent
public final class LicenseUpdatePropertiesLicenseDetails {
    /*
     * Describes the state of the license.
     */
    @JsonProperty(value = "state")
    private LicenseState state;

    /*
     * Describes the license target server.
     */
    @JsonProperty(value = "target")
    private LicenseTarget target;

    /*
     * Describes the edition of the license. The values are either Standard or Datacenter.
     */
    @JsonProperty(value = "edition")
    private LicenseEdition edition;

    /*
     * Describes the license core type (pCore or vCore).
     */
    @JsonProperty(value = "type")
    private LicenseCoreType type;

    /*
     * Describes the number of processors.
     */
    @JsonProperty(value = "processors")
    private Integer processors;

    /**
     * Creates an instance of LicenseUpdatePropertiesLicenseDetails class.
     */
    public LicenseUpdatePropertiesLicenseDetails() {
    }

    /**
     * Get the state property: Describes the state of the license.
     * 
     * @return the state value.
     */
    public LicenseState state() {
        return this.state;
    }

    /**
     * Set the state property: Describes the state of the license.
     * 
     * @param state the state value to set.
     * @return the LicenseUpdatePropertiesLicenseDetails object itself.
     */
    public LicenseUpdatePropertiesLicenseDetails withState(LicenseState state) {
        this.state = state;
        return this;
    }

    /**
     * Get the target property: Describes the license target server.
     * 
     * @return the target value.
     */
    public LicenseTarget target() {
        return this.target;
    }

    /**
     * Set the target property: Describes the license target server.
     * 
     * @param target the target value to set.
     * @return the LicenseUpdatePropertiesLicenseDetails object itself.
     */
    public LicenseUpdatePropertiesLicenseDetails withTarget(LicenseTarget target) {
        this.target = target;
        return this;
    }

    /**
     * Get the edition property: Describes the edition of the license. The values are either Standard or Datacenter.
     * 
     * @return the edition value.
     */
    public LicenseEdition edition() {
        return this.edition;
    }

    /**
     * Set the edition property: Describes the edition of the license. The values are either Standard or Datacenter.
     * 
     * @param edition the edition value to set.
     * @return the LicenseUpdatePropertiesLicenseDetails object itself.
     */
    public LicenseUpdatePropertiesLicenseDetails withEdition(LicenseEdition edition) {
        this.edition = edition;
        return this;
    }

    /**
     * Get the type property: Describes the license core type (pCore or vCore).
     * 
     * @return the type value.
     */
    public LicenseCoreType type() {
        return this.type;
    }

    /**
     * Set the type property: Describes the license core type (pCore or vCore).
     * 
     * @param type the type value to set.
     * @return the LicenseUpdatePropertiesLicenseDetails object itself.
     */
    public LicenseUpdatePropertiesLicenseDetails withType(LicenseCoreType type) {
        this.type = type;
        return this;
    }

    /**
     * Get the processors property: Describes the number of processors.
     * 
     * @return the processors value.
     */
    public Integer processors() {
        return this.processors;
    }

    /**
     * Set the processors property: Describes the number of processors.
     * 
     * @param processors the processors value to set.
     * @return the LicenseUpdatePropertiesLicenseDetails object itself.
     */
    public LicenseUpdatePropertiesLicenseDetails withProcessors(Integer processors) {
        this.processors = processors;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
