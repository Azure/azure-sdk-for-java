// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;

/** Describes Machine Extension Update Properties. */
@Immutable
public final class MachineExtensionUpdatePropertiesAutoGenerated extends MachineExtensionUpdateProperties {
    @JsonIgnore
    private final ClientLogger logger = new ClientLogger(MachineExtensionUpdatePropertiesAutoGenerated.class);

    /** {@inheritDoc} */
    @Override
    public MachineExtensionUpdatePropertiesAutoGenerated withForceUpdateTag(String forceUpdateTag) {
        super.withForceUpdateTag(forceUpdateTag);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public MachineExtensionUpdatePropertiesAutoGenerated withPublisher(String publisher) {
        super.withPublisher(publisher);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public MachineExtensionUpdatePropertiesAutoGenerated withType(String type) {
        super.withType(type);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public MachineExtensionUpdatePropertiesAutoGenerated withTypeHandlerVersion(String typeHandlerVersion) {
        super.withTypeHandlerVersion(typeHandlerVersion);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public MachineExtensionUpdatePropertiesAutoGenerated withAutoUpgradeMinorVersion(Boolean autoUpgradeMinorVersion) {
        super.withAutoUpgradeMinorVersion(autoUpgradeMinorVersion);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public MachineExtensionUpdatePropertiesAutoGenerated withSettings(Object settings) {
        super.withSettings(settings);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public MachineExtensionUpdatePropertiesAutoGenerated withProtectedSettings(Object protectedSettings) {
        super.withProtectedSettings(protectedSettings);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
