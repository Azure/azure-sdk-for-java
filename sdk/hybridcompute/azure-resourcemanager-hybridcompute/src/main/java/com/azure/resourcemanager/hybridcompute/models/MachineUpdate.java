// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** Describes a hybrid machine Update. */
@JsonFlatten
@Fluent
public class MachineUpdate extends UpdateResource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(MachineUpdate.class);

    /*
     * Metadata pertaining to the geographic location of the resource.
     */
    @JsonProperty(value = "properties.locationData")
    private LocationData locationData;

    /*
     * The identity type.
     */
    @JsonProperty(value = "identity.type")
    private String type;

    /*
     * The identity's principal id.
     */
    @JsonProperty(value = "identity.principalId", access = JsonProperty.Access.WRITE_ONLY)
    private String principalId;

    /*
     * The identity's tenant id.
     */
    @JsonProperty(value = "identity.tenantId", access = JsonProperty.Access.WRITE_ONLY)
    private String tenantId;

    /**
     * Get the locationData property: Metadata pertaining to the geographic location of the resource.
     *
     * @return the locationData value.
     */
    public LocationData locationData() {
        return this.locationData;
    }

    /**
     * Set the locationData property: Metadata pertaining to the geographic location of the resource.
     *
     * @param locationData the locationData value to set.
     * @return the MachineUpdate object itself.
     */
    public MachineUpdate withLocationData(LocationData locationData) {
        this.locationData = locationData;
        return this;
    }

    /**
     * Get the type property: The identity type.
     *
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Set the type property: The identity type.
     *
     * @param type the type value to set.
     * @return the MachineUpdate object itself.
     */
    public MachineUpdate withType(String type) {
        this.type = type;
        return this;
    }

    /**
     * Get the principalId property: The identity's principal id.
     *
     * @return the principalId value.
     */
    public String principalId() {
        return this.principalId;
    }

    /**
     * Get the tenantId property: The identity's tenant id.
     *
     * @return the tenantId value.
     */
    public String tenantId() {
        return this.tenantId;
    }

    /** {@inheritDoc} */
    @Override
    public MachineUpdate withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (locationData() != null) {
            locationData().validate();
        }
    }
}
