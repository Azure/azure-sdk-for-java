// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.fluent.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Describes Extension Metadata properties.
 */
@Immutable
public final class ExtensionValueProperties {
    /*
     * The version of the Extension being received.
     */
    @JsonProperty(value = "version", access = JsonProperty.Access.WRITE_ONLY)
    private String version;

    /*
     * The type of the Extension being received.
     */
    @JsonProperty(value = "extensionType", access = JsonProperty.Access.WRITE_ONLY)
    private String extensionType;

    /*
     * The publisher of the Extension being received.
     */
    @JsonProperty(value = "publisher", access = JsonProperty.Access.WRITE_ONLY)
    private String publisher;

    /**
     * Creates an instance of ExtensionValueProperties class.
     */
    public ExtensionValueProperties() {
    }

    /**
     * Get the version property: The version of the Extension being received.
     * 
     * @return the version value.
     */
    public String version() {
        return this.version;
    }

    /**
     * Get the extensionType property: The type of the Extension being received.
     * 
     * @return the extensionType value.
     */
    public String extensionType() {
        return this.extensionType;
    }

    /**
     * Get the publisher property: The publisher of the Extension being received.
     * 
     * @return the publisher value.
     */
    public String publisher() {
        return this.publisher;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
