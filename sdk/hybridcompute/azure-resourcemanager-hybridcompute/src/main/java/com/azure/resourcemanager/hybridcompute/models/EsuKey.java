// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ESU key.
 */
@Fluent
public final class EsuKey {
    /*
     * SKU number.
     */
    @JsonProperty(value = "sku")
    private String sku;

    /*
     * The current status of the license profile key. Represented by the same integer value that is presented on the machine itself when querying the license key status.
     */
    @JsonProperty(value = "licenseStatus")
    private Integer licenseStatus;

    /**
     * Creates an instance of EsuKey class.
     */
    public EsuKey() {
    }

    /**
     * Get the sku property: SKU number.
     * 
     * @return the sku value.
     */
    public String sku() {
        return this.sku;
    }

    /**
     * Set the sku property: SKU number.
     * 
     * @param sku the sku value to set.
     * @return the EsuKey object itself.
     */
    public EsuKey withSku(String sku) {
        this.sku = sku;
        return this;
    }

    /**
     * Get the licenseStatus property: The current status of the license profile key. Represented by the same integer
     * value that is presented on the machine itself when querying the license key status.
     * 
     * @return the licenseStatus value.
     */
    public Integer licenseStatus() {
        return this.licenseStatus;
    }

    /**
     * Set the licenseStatus property: The current status of the license profile key. Represented by the same integer
     * value that is presented on the machine itself when querying the license key status.
     * 
     * @param licenseStatus the licenseStatus value to set.
     * @return the EsuKey object itself.
     */
    public EsuKey withLicenseStatus(Integer licenseStatus) {
        this.licenseStatus = licenseStatus;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
