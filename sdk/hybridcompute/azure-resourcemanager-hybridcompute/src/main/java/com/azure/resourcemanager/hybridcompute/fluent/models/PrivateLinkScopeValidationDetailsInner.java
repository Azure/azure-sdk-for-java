// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.hybridcompute.models.ConnectionDetail;
import com.azure.resourcemanager.hybridcompute.models.PublicNetworkAccessType;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The PrivateLinkScopeValidationDetails model. */
@Fluent
public final class PrivateLinkScopeValidationDetailsInner {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(PrivateLinkScopeValidationDetailsInner.class);

    /*
     * Azure resource Id
     */
    @JsonProperty(value = "id", access = JsonProperty.Access.WRITE_ONLY)
    private String id;

    /*
     * Indicates whether machines associated with the private link scope can
     * also use public Azure Arc service endpoints.
     */
    @JsonProperty(value = "publicNetworkAccess")
    private PublicNetworkAccessType publicNetworkAccess;

    /*
     * List of Private Endpoint Connection details.
     */
    @JsonProperty(value = "connectionDetails")
    private List<ConnectionDetail> connectionDetails;

    /**
     * Get the id property: Azure resource Id.
     *
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Get the publicNetworkAccess property: Indicates whether machines associated with the private link scope can also
     * use public Azure Arc service endpoints.
     *
     * @return the publicNetworkAccess value.
     */
    public PublicNetworkAccessType publicNetworkAccess() {
        return this.publicNetworkAccess;
    }

    /**
     * Set the publicNetworkAccess property: Indicates whether machines associated with the private link scope can also
     * use public Azure Arc service endpoints.
     *
     * @param publicNetworkAccess the publicNetworkAccess value to set.
     * @return the PrivateLinkScopeValidationDetailsInner object itself.
     */
    public PrivateLinkScopeValidationDetailsInner withPublicNetworkAccess(PublicNetworkAccessType publicNetworkAccess) {
        this.publicNetworkAccess = publicNetworkAccess;
        return this;
    }

    /**
     * Get the connectionDetails property: List of Private Endpoint Connection details.
     *
     * @return the connectionDetails value.
     */
    public List<ConnectionDetail> connectionDetails() {
        return this.connectionDetails;
    }

    /**
     * Set the connectionDetails property: List of Private Endpoint Connection details.
     *
     * @param connectionDetails the connectionDetails value to set.
     * @return the PrivateLinkScopeValidationDetailsInner object itself.
     */
    public PrivateLinkScopeValidationDetailsInner withConnectionDetails(List<ConnectionDetail> connectionDetails) {
        this.connectionDetails = connectionDetails;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (connectionDetails() != null) {
            connectionDetails().forEach(e -> e.validate());
        }
    }
}
