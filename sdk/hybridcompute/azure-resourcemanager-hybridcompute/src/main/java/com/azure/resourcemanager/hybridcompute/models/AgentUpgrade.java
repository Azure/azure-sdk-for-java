// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.UUID;

/**
 * The info w.r.t Agent Upgrade.
 */
@Fluent
public final class AgentUpgrade {
    /*
     * Specifies the version info w.r.t AgentUpgrade for the machine.
     */
    @JsonProperty(value = "desiredVersion")
    private String desiredVersion;

    /*
     * The correlation ID passed in from RSM per upgrade.
     */
    @JsonProperty(value = "correlationId")
    private UUID correlationId;

    /*
     * Specifies if RSM should try to upgrade this machine
     */
    @JsonProperty(value = "enableAutomaticUpgrade")
    private Boolean enableAutomaticUpgrade;

    /*
     * Specifies the version of the last attempt
     */
    @JsonProperty(value = "lastAttemptDesiredVersion", access = JsonProperty.Access.WRITE_ONLY)
    private String lastAttemptDesiredVersion;

    /*
     * Timestamp of last upgrade attempt
     */
    @JsonProperty(value = "lastAttemptTimestamp", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime lastAttemptTimestamp;

    /*
     * Specifies the status of Agent Upgrade.
     */
    @JsonProperty(value = "lastAttemptStatus", access = JsonProperty.Access.WRITE_ONLY)
    private LastAttemptStatusEnum lastAttemptStatus;

    /*
     * Failure message of last upgrade attempt if any.
     */
    @JsonProperty(value = "lastAttemptMessage", access = JsonProperty.Access.WRITE_ONLY)
    private String lastAttemptMessage;

    /**
     * Creates an instance of AgentUpgrade class.
     */
    public AgentUpgrade() {
    }

    /**
     * Get the desiredVersion property: Specifies the version info w.r.t AgentUpgrade for the machine.
     * 
     * @return the desiredVersion value.
     */
    public String desiredVersion() {
        return this.desiredVersion;
    }

    /**
     * Set the desiredVersion property: Specifies the version info w.r.t AgentUpgrade for the machine.
     * 
     * @param desiredVersion the desiredVersion value to set.
     * @return the AgentUpgrade object itself.
     */
    public AgentUpgrade withDesiredVersion(String desiredVersion) {
        this.desiredVersion = desiredVersion;
        return this;
    }

    /**
     * Get the correlationId property: The correlation ID passed in from RSM per upgrade.
     * 
     * @return the correlationId value.
     */
    public UUID correlationId() {
        return this.correlationId;
    }

    /**
     * Set the correlationId property: The correlation ID passed in from RSM per upgrade.
     * 
     * @param correlationId the correlationId value to set.
     * @return the AgentUpgrade object itself.
     */
    public AgentUpgrade withCorrelationId(UUID correlationId) {
        this.correlationId = correlationId;
        return this;
    }

    /**
     * Get the enableAutomaticUpgrade property: Specifies if RSM should try to upgrade this machine.
     * 
     * @return the enableAutomaticUpgrade value.
     */
    public Boolean enableAutomaticUpgrade() {
        return this.enableAutomaticUpgrade;
    }

    /**
     * Set the enableAutomaticUpgrade property: Specifies if RSM should try to upgrade this machine.
     * 
     * @param enableAutomaticUpgrade the enableAutomaticUpgrade value to set.
     * @return the AgentUpgrade object itself.
     */
    public AgentUpgrade withEnableAutomaticUpgrade(Boolean enableAutomaticUpgrade) {
        this.enableAutomaticUpgrade = enableAutomaticUpgrade;
        return this;
    }

    /**
     * Get the lastAttemptDesiredVersion property: Specifies the version of the last attempt.
     * 
     * @return the lastAttemptDesiredVersion value.
     */
    public String lastAttemptDesiredVersion() {
        return this.lastAttemptDesiredVersion;
    }

    /**
     * Get the lastAttemptTimestamp property: Timestamp of last upgrade attempt.
     * 
     * @return the lastAttemptTimestamp value.
     */
    public OffsetDateTime lastAttemptTimestamp() {
        return this.lastAttemptTimestamp;
    }

    /**
     * Get the lastAttemptStatus property: Specifies the status of Agent Upgrade.
     * 
     * @return the lastAttemptStatus value.
     */
    public LastAttemptStatusEnum lastAttemptStatus() {
        return this.lastAttemptStatus;
    }

    /**
     * Get the lastAttemptMessage property: Failure message of last upgrade attempt if any.
     * 
     * @return the lastAttemptMessage value.
     */
    public String lastAttemptMessage() {
        return this.lastAttemptMessage;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
