// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.hybridcompute.fluent.ExtensionMetadataV2sClient;
import com.azure.resourcemanager.hybridcompute.fluent.models.ExtensionValueV2Inner;
import com.azure.resourcemanager.hybridcompute.models.ExtensionMetadataV2s;
import com.azure.resourcemanager.hybridcompute.models.ExtensionValueV2;

public final class ExtensionMetadataV2sImpl implements ExtensionMetadataV2s {
    private static final ClientLogger LOGGER = new ClientLogger(ExtensionMetadataV2sImpl.class);

    private final ExtensionMetadataV2sClient innerClient;

    private final com.azure.resourcemanager.hybridcompute.HybridComputeManager serviceManager;

    public ExtensionMetadataV2sImpl(ExtensionMetadataV2sClient innerClient,
        com.azure.resourcemanager.hybridcompute.HybridComputeManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<ExtensionValueV2> getWithResponse(String location, String publisher, String extensionType,
        String version, Context context) {
        Response<ExtensionValueV2Inner> inner
            = this.serviceClient().getWithResponse(location, publisher, extensionType, version, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new ExtensionValueV2Impl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public ExtensionValueV2 get(String location, String publisher, String extensionType, String version) {
        ExtensionValueV2Inner inner = this.serviceClient().get(location, publisher, extensionType, version);
        if (inner != null) {
            return new ExtensionValueV2Impl(inner, this.manager());
        } else {
            return null;
        }
    }

    public PagedIterable<ExtensionValueV2> list(String location, String publisher, String extensionType) {
        PagedIterable<ExtensionValueV2Inner> inner = this.serviceClient().list(location, publisher, extensionType);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new ExtensionValueV2Impl(inner1, this.manager()));
    }

    public PagedIterable<ExtensionValueV2> list(String location, String publisher, String extensionType,
        Context context) {
        PagedIterable<ExtensionValueV2Inner> inner
            = this.serviceClient().list(location, publisher, extensionType, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new ExtensionValueV2Impl(inner1, this.manager()));
    }

    private ExtensionMetadataV2sClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.hybridcompute.HybridComputeManager manager() {
        return this.serviceManager;
    }
}
