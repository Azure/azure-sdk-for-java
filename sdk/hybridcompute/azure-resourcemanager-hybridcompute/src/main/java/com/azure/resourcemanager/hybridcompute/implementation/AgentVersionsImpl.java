// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.hybridcompute.fluent.AgentVersionsClient;
import com.azure.resourcemanager.hybridcompute.fluent.models.AgentVersionInner;
import com.azure.resourcemanager.hybridcompute.fluent.models.AgentVersionsListInner;
import com.azure.resourcemanager.hybridcompute.models.AgentVersion;
import com.azure.resourcemanager.hybridcompute.models.AgentVersions;
import com.azure.resourcemanager.hybridcompute.models.AgentVersionsList;

public final class AgentVersionsImpl implements AgentVersions {
    private static final ClientLogger LOGGER = new ClientLogger(AgentVersionsImpl.class);

    private final AgentVersionsClient innerClient;

    private final com.azure.resourcemanager.hybridcompute.HybridComputeManager serviceManager;

    public AgentVersionsImpl(
        AgentVersionsClient innerClient, com.azure.resourcemanager.hybridcompute.HybridComputeManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<AgentVersionsList> listWithResponse(String osType, Context context) {
        Response<AgentVersionsListInner> inner = this.serviceClient().listWithResponse(osType, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new AgentVersionsListImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public AgentVersionsList list(String osType) {
        AgentVersionsListInner inner = this.serviceClient().list(osType);
        if (inner != null) {
            return new AgentVersionsListImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<AgentVersion> getWithResponse(String osType, String version, Context context) {
        Response<AgentVersionInner> inner = this.serviceClient().getWithResponse(osType, version, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new AgentVersionImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public AgentVersion get(String osType, String version) {
        AgentVersionInner inner = this.serviceClient().get(osType, version);
        if (inner != null) {
            return new AgentVersionImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private AgentVersionsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.hybridcompute.HybridComputeManager manager() {
        return this.serviceManager;
    }
}
