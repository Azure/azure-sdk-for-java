// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of NetworkSecurityPerimeterConfigurations.
 */
public interface NetworkSecurityPerimeterConfigurations {
    /**
     * Gets the network security perimeter configuration for a private link scope.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scopeName The name of the Azure Arc PrivateLinkScope resource.
     * @param perimeterName The name, in the format {perimeterGuid}.{associationName}, of the Network Security Perimeter
     * resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the network security perimeter configuration for a private link scope along with {@link Response}.
     */
    Response<NetworkSecurityPerimeterConfiguration> getByPrivateLinkScopeWithResponse(String resourceGroupName,
        String scopeName, String perimeterName, Context context);

    /**
     * Gets the network security perimeter configuration for a private link scope.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scopeName The name of the Azure Arc PrivateLinkScope resource.
     * @param perimeterName The name, in the format {perimeterGuid}.{associationName}, of the Network Security Perimeter
     * resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the network security perimeter configuration for a private link scope.
     */
    NetworkSecurityPerimeterConfiguration getByPrivateLinkScope(String resourceGroupName, String scopeName,
        String perimeterName);

    /**
     * Lists the network security perimeter configurations for a private link scope.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scopeName The name of the Azure Arc PrivateLinkScope resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of network security perimeter configurations as paginated response with {@link PagedIterable}.
     */
    PagedIterable<NetworkSecurityPerimeterConfiguration> listByPrivateLinkScope(String resourceGroupName,
        String scopeName);

    /**
     * Lists the network security perimeter configurations for a private link scope.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scopeName The name of the Azure Arc PrivateLinkScope resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of network security perimeter configurations as paginated response with {@link PagedIterable}.
     */
    PagedIterable<NetworkSecurityPerimeterConfiguration> listByPrivateLinkScope(String resourceGroupName,
        String scopeName, Context context);

    /**
     * Forces the network security perimeter configuration to refresh for a private link scope.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scopeName The name of the Azure Arc PrivateLinkScope resource.
     * @param perimeterName The name, in the format {perimeterGuid}.{associationName}, of the Network Security Perimeter
     * resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return result of network security perimeter configurations.
     */
    NetworkSecurityPerimeterConfigurationReconcileResult reconcileForPrivateLinkScope(String resourceGroupName,
        String scopeName, String perimeterName);

    /**
     * Forces the network security perimeter configuration to refresh for a private link scope.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scopeName The name of the Azure Arc PrivateLinkScope resource.
     * @param perimeterName The name, in the format {perimeterGuid}.{associationName}, of the Network Security Perimeter
     * resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return result of network security perimeter configurations.
     */
    NetworkSecurityPerimeterConfigurationReconcileResult reconcileForPrivateLinkScope(String resourceGroupName,
        String scopeName, String perimeterName, Context context);
}
