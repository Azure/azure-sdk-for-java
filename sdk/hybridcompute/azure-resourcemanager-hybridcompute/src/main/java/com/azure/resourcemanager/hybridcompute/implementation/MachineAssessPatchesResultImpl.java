// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.implementation;

import com.azure.core.management.exception.ManagementError;
import com.azure.resourcemanager.hybridcompute.fluent.models.MachineAssessPatchesResultInner;
import com.azure.resourcemanager.hybridcompute.models.AvailablePatchCountByClassification;
import com.azure.resourcemanager.hybridcompute.models.MachineAssessPatchesResult;
import com.azure.resourcemanager.hybridcompute.models.OsType;
import com.azure.resourcemanager.hybridcompute.models.PatchOperationStartedBy;
import com.azure.resourcemanager.hybridcompute.models.PatchOperationStatus;
import com.azure.resourcemanager.hybridcompute.models.PatchServiceUsed;
import java.time.OffsetDateTime;
import java.util.UUID;

public final class MachineAssessPatchesResultImpl implements MachineAssessPatchesResult {
    private MachineAssessPatchesResultInner innerObject;

    private final com.azure.resourcemanager.hybridcompute.HybridComputeManager serviceManager;

    MachineAssessPatchesResultImpl(MachineAssessPatchesResultInner innerObject,
        com.azure.resourcemanager.hybridcompute.HybridComputeManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public PatchOperationStatus status() {
        return this.innerModel().status();
    }

    public UUID assessmentActivityId() {
        return this.innerModel().assessmentActivityId();
    }

    public Boolean rebootPending() {
        return this.innerModel().rebootPending();
    }

    public AvailablePatchCountByClassification availablePatchCountByClassification() {
        return this.innerModel().availablePatchCountByClassification();
    }

    public OffsetDateTime startDateTime() {
        return this.innerModel().startDateTime();
    }

    public OffsetDateTime lastModifiedDateTime() {
        return this.innerModel().lastModifiedDateTime();
    }

    public PatchOperationStartedBy startedBy() {
        return this.innerModel().startedBy();
    }

    public PatchServiceUsed patchServiceUsed() {
        return this.innerModel().patchServiceUsed();
    }

    public OsType osType() {
        return this.innerModel().osType();
    }

    public ManagementError errorDetails() {
        return this.innerModel().errorDetails();
    }

    public MachineAssessPatchesResultInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.hybridcompute.HybridComputeManager manager() {
        return this.serviceManager;
    }
}
