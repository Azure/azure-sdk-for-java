// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.models;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of AgentVersions. */
public interface AgentVersions {
    /**
     * Gets all Agent Versions along with the download link currently present.
     *
     * @param osType Defines the os type.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all Agent Versions along with the download link currently present along with {@link Response}.
     */
    Response<AgentVersionsList> listWithResponse(String osType, Context context);

    /**
     * Gets all Agent Versions along with the download link currently present.
     *
     * @param osType Defines the os type.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all Agent Versions along with the download link currently present.
     */
    AgentVersionsList list(String osType);

    /**
     * Gets an Agent Version along with the download link currently present.
     *
     * @param osType Defines the os type.
     * @param version Defines the agent version. To get latest, use latest or else a specific agent version.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Agent Version along with the download link currently present along with {@link Response}.
     */
    Response<AgentVersion> getWithResponse(String osType, String version, Context context);

    /**
     * Gets an Agent Version along with the download link currently present.
     *
     * @param osType Defines the os type.
     * @param version Defines the agent version. To get latest, use latest or else a specific agent version.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Agent Version along with the download link currently present.
     */
    AgentVersion get(String osType, String version);
}
