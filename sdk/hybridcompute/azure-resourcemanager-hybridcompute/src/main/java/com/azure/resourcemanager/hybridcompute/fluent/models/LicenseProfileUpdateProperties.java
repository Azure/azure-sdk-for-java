// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.fluent.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Describe the Update properties of a license profile. */
@Fluent
public final class LicenseProfileUpdateProperties {
    /*
     * Hybrid Compute ESU Profile Update properties
     */
    @JsonProperty(value = "esuProfile")
    private EsuProfileUpdateProperties innerEsuProfile;

    /** Creates an instance of LicenseProfileUpdateProperties class. */
    public LicenseProfileUpdateProperties() {
    }

    /**
     * Get the innerEsuProfile property: Hybrid Compute ESU Profile Update properties.
     *
     * @return the innerEsuProfile value.
     */
    private EsuProfileUpdateProperties innerEsuProfile() {
        return this.innerEsuProfile;
    }

    /**
     * Get the assignedLicense property: The resource id of the license.
     *
     * @return the assignedLicense value.
     */
    public String assignedLicense() {
        return this.innerEsuProfile() == null ? null : this.innerEsuProfile().assignedLicense();
    }

    /**
     * Set the assignedLicense property: The resource id of the license.
     *
     * @param assignedLicense the assignedLicense value to set.
     * @return the LicenseProfileUpdateProperties object itself.
     */
    public LicenseProfileUpdateProperties withAssignedLicense(String assignedLicense) {
        if (this.innerEsuProfile() == null) {
            this.innerEsuProfile = new EsuProfileUpdateProperties();
        }
        this.innerEsuProfile().withAssignedLicense(assignedLicense);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerEsuProfile() != null) {
            innerEsuProfile().validate();
        }
    }
}
