// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.hybridcompute.models.LicenseProfileProductType;
import com.azure.resourcemanager.hybridcompute.models.LicenseProfileSubscriptionStatusUpdate;
import com.azure.resourcemanager.hybridcompute.models.ProductFeatureUpdate;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Describes the Update properties of a Product Profile.
 */
@Fluent
public final class ProductProfileUpdateProperties {
    /*
     * Indicates the subscription status of the product.
     */
    @JsonProperty(value = "subscriptionStatus")
    private LicenseProfileSubscriptionStatusUpdate subscriptionStatus;

    /*
     * Indicates the product type of the license.
     */
    @JsonProperty(value = "productType")
    private LicenseProfileProductType productType;

    /*
     * The list of product feature updates.
     */
    @JsonProperty(value = "productFeatures")
    private List<ProductFeatureUpdate> productFeatures;

    /**
     * Creates an instance of ProductProfileUpdateProperties class.
     */
    public ProductProfileUpdateProperties() {
    }

    /**
     * Get the subscriptionStatus property: Indicates the subscription status of the product.
     * 
     * @return the subscriptionStatus value.
     */
    public LicenseProfileSubscriptionStatusUpdate subscriptionStatus() {
        return this.subscriptionStatus;
    }

    /**
     * Set the subscriptionStatus property: Indicates the subscription status of the product.
     * 
     * @param subscriptionStatus the subscriptionStatus value to set.
     * @return the ProductProfileUpdateProperties object itself.
     */
    public ProductProfileUpdateProperties
        withSubscriptionStatus(LicenseProfileSubscriptionStatusUpdate subscriptionStatus) {
        this.subscriptionStatus = subscriptionStatus;
        return this;
    }

    /**
     * Get the productType property: Indicates the product type of the license.
     * 
     * @return the productType value.
     */
    public LicenseProfileProductType productType() {
        return this.productType;
    }

    /**
     * Set the productType property: Indicates the product type of the license.
     * 
     * @param productType the productType value to set.
     * @return the ProductProfileUpdateProperties object itself.
     */
    public ProductProfileUpdateProperties withProductType(LicenseProfileProductType productType) {
        this.productType = productType;
        return this;
    }

    /**
     * Get the productFeatures property: The list of product feature updates.
     * 
     * @return the productFeatures value.
     */
    public List<ProductFeatureUpdate> productFeatures() {
        return this.productFeatures;
    }

    /**
     * Set the productFeatures property: The list of product feature updates.
     * 
     * @param productFeatures the productFeatures value to set.
     * @return the ProductProfileUpdateProperties object itself.
     */
    public ProductProfileUpdateProperties withProductFeatures(List<ProductFeatureUpdate> productFeatures) {
        this.productFeatures = productFeatures;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (productFeatures() != null) {
            productFeatures().forEach(e -> e.validate());
        }
    }
}
