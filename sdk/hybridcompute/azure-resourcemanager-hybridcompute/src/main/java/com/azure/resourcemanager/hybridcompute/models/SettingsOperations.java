// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.models;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.hybridcompute.fluent.models.SettingsInner;

/**
 * Resource collection API of SettingsOperations.
 */
public interface SettingsOperations {
    /**
     * Returns the base Settings for the target resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param baseProvider The name of the base Resource Provider.
     * @param baseResourceType The name of the base Resource Type.
     * @param baseResourceName The name of the base resource.
     * @param settingsResourceName The name of the settings resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response body along with {@link Response}.
     */
    Response<Settings> getWithResponse(String resourceGroupName, String baseProvider, String baseResourceType,
        String baseResourceName, String settingsResourceName, Context context);

    /**
     * Returns the base Settings for the target resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param baseProvider The name of the base Resource Provider.
     * @param baseResourceType The name of the base Resource Type.
     * @param baseResourceName The name of the base resource.
     * @param settingsResourceName The name of the settings resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    Settings get(String resourceGroupName, String baseProvider, String baseResourceType, String baseResourceName,
        String settingsResourceName);

    /**
     * Updates the base Settings of the target resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param baseProvider The name of the base Resource Provider.
     * @param baseResourceType The name of the base Resource Type.
     * @param baseResourceName The name of the base resource.
     * @param settingsResourceName The name of the settings resource.
     * @param parameters Settings details.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response body along with {@link Response}.
     */
    Response<Settings> updateWithResponse(String resourceGroupName, String baseProvider, String baseResourceType,
        String baseResourceName, String settingsResourceName, SettingsInner parameters, Context context);

    /**
     * Updates the base Settings of the target resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param baseProvider The name of the base Resource Provider.
     * @param baseResourceType The name of the base Resource Type.
     * @param baseResourceName The name of the base resource.
     * @param settingsResourceName The name of the settings resource.
     * @param parameters Settings details.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    Settings update(String resourceGroupName, String baseProvider, String baseResourceType, String baseResourceName,
        String settingsResourceName, SettingsInner parameters);

    /**
     * Update the base Settings of the target resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param baseProvider The name of the base Resource Provider.
     * @param baseResourceType The name of the base Resource Type.
     * @param baseResourceName The name of the base resource.
     * @param settingsResourceName The name of the settings resource.
     * @param parameters Settings details.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response body along with {@link Response}.
     */
    Response<Settings> patchWithResponse(String resourceGroupName, String baseProvider, String baseResourceType,
        String baseResourceName, String settingsResourceName, SettingsInner parameters, Context context);

    /**
     * Update the base Settings of the target resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param baseProvider The name of the base Resource Provider.
     * @param baseResourceType The name of the base Resource Type.
     * @param baseResourceName The name of the base resource.
     * @param settingsResourceName The name of the settings resource.
     * @param parameters Settings details.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    Settings patch(String resourceGroupName, String baseProvider, String baseResourceType, String baseResourceName,
        String settingsResourceName, SettingsInner parameters);
}
