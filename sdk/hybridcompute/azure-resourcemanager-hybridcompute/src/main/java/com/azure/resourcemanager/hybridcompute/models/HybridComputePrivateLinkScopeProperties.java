// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Properties that define a Azure Arc PrivateLinkScope resource. */
@Fluent
public final class HybridComputePrivateLinkScopeProperties {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(HybridComputePrivateLinkScopeProperties.class);

    /*
     * Indicates whether machines associated with the private link scope can
     * also use public Azure Arc service endpoints.
     */
    @JsonProperty(value = "publicNetworkAccess")
    private PublicNetworkAccessType publicNetworkAccess;

    /*
     * Current state of this PrivateLinkScope: whether or not is has been
     * provisioned within the resource group it is defined. Users cannot change
     * this value but are able to read from it. Values will include
     * Provisioning ,Succeeded, Canceled and Failed.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private String provisioningState;

    /*
     * The Guid id of the private link scope.
     */
    @JsonProperty(value = "privateLinkScopeId", access = JsonProperty.Access.WRITE_ONLY)
    private String privateLinkScopeId;

    /*
     * The collection of associated Private Endpoint Connections.
     */
    @JsonProperty(value = "privateEndpointConnections", access = JsonProperty.Access.WRITE_ONLY)
    private List<PrivateEndpointConnectionDataModel> privateEndpointConnections;

    /**
     * Get the publicNetworkAccess property: Indicates whether machines associated with the private link scope can also
     * use public Azure Arc service endpoints.
     *
     * @return the publicNetworkAccess value.
     */
    public PublicNetworkAccessType publicNetworkAccess() {
        return this.publicNetworkAccess;
    }

    /**
     * Set the publicNetworkAccess property: Indicates whether machines associated with the private link scope can also
     * use public Azure Arc service endpoints.
     *
     * @param publicNetworkAccess the publicNetworkAccess value to set.
     * @return the HybridComputePrivateLinkScopeProperties object itself.
     */
    public HybridComputePrivateLinkScopeProperties withPublicNetworkAccess(
        PublicNetworkAccessType publicNetworkAccess) {
        this.publicNetworkAccess = publicNetworkAccess;
        return this;
    }

    /**
     * Get the provisioningState property: Current state of this PrivateLinkScope: whether or not is has been
     * provisioned within the resource group it is defined. Users cannot change this value but are able to read from it.
     * Values will include Provisioning ,Succeeded, Canceled and Failed.
     *
     * @return the provisioningState value.
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the privateLinkScopeId property: The Guid id of the private link scope.
     *
     * @return the privateLinkScopeId value.
     */
    public String privateLinkScopeId() {
        return this.privateLinkScopeId;
    }

    /**
     * Get the privateEndpointConnections property: The collection of associated Private Endpoint Connections.
     *
     * @return the privateEndpointConnections value.
     */
    public List<PrivateEndpointConnectionDataModel> privateEndpointConnections() {
        return this.privateEndpointConnections;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (privateEndpointConnections() != null) {
            privateEndpointConnections().forEach(e -> e.validate());
        }
    }
}
