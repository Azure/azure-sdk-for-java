// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.virtualenclaves.generated;

import com.azure.resourcemanager.virtualenclaves.models.DiagnosticDestination;
import com.azure.resourcemanager.virtualenclaves.models.EnclaveDefaultSettingsPatchModel;
import com.azure.resourcemanager.virtualenclaves.models.EnclaveResource;
import com.azure.resourcemanager.virtualenclaves.models.EnclaveVirtualNetworkModel;
import com.azure.resourcemanager.virtualenclaves.models.MaintenanceModeConfigurationModelJustification;
import com.azure.resourcemanager.virtualenclaves.models.MaintenanceModeConfigurationModelMode;
import com.azure.resourcemanager.virtualenclaves.models.MaintenanceModeConfigurationPatchModel;
import com.azure.resourcemanager.virtualenclaves.models.Principal;
import com.azure.resourcemanager.virtualenclaves.models.PrincipalType;
import com.azure.resourcemanager.virtualenclaves.models.RoleAssignmentItem;
import com.azure.resourcemanager.virtualenclaves.models.SubnetConfiguration;
import com.azure.resourcemanager.virtualenclaves.models.VirtualEnclavePatchProperties;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for VirtualEnclave Update.
 */
public final class VirtualEnclaveUpdateSamples {
    /*
     * x-ms-original-file: 2025-05-01-preview/VirtualEnclave_Update.json
     */
    /**
     * Sample code: VirtualEnclave_Update.
     * 
     * @param manager Entry point to VirtualEnclavesManager.
     */
    public static void virtualEnclaveUpdate(com.azure.resourcemanager.virtualenclaves.VirtualEnclavesManager manager) {
        EnclaveResource resource = manager.virtualEnclaves()
            .getByResourceGroupWithResponse("rgopenapi", "TestMyEnclave", com.azure.core.util.Context.NONE)
            .getValue();
        resource.update()
            .withTags(mapOf("Tag1", "Value1"))
            .withProperties(new VirtualEnclavePatchProperties()
                .withEnclaveVirtualNetwork(new EnclaveVirtualNetworkModel().withNetworkSize("small")
                    .withCustomCidrRange("10.0.0.0/24")
                    .withSubnetConfigurations(
                        Arrays.asList(new SubnetConfiguration().withSubnetName("test").withNetworkPrefixSize(26)))
                    .withAllowSubnetCommunication(true))
                .withBastionEnabled(true)
                .withEnclaveRoleAssignments(Arrays.asList(
                    new RoleAssignmentItem().withRoleDefinitionId("b24988ac-6180-42a0-ab88-20f7382dd24c")
                        .withPrincipals(Arrays.asList(
                            new Principal().withId("355a6bb0-abc0-4cba-000d-12a345b678c9").withType(PrincipalType.USER),
                            new Principal().withId("355a6bb0-abc0-4cba-000d-12a345b678c0")
                                .withType(PrincipalType.USER))),
                    new RoleAssignmentItem().withRoleDefinitionId("18d7d88d-d35e-4fb5-a5c3-7773c20a72d9")
                        .withPrincipals(Arrays.asList(new Principal().withId("355a6bb0-abc0-4cba-000d-12a345b678c9")
                            .withType(PrincipalType.USER)))))
                .withWorkloadRoleAssignments(Arrays.asList(
                    new RoleAssignmentItem().withRoleDefinitionId("d73bb868-a0df-4d4d-bd69-98a00b01fccb")
                        .withPrincipals(Arrays.asList(new Principal().withId("01234567-89ab-ef01-2345-0123456789ab")
                            .withType(PrincipalType.GROUP))),
                    new RoleAssignmentItem().withRoleDefinitionId("fb879df8-f326-4884-b1cf-06f3ad86be52")
                        .withPrincipals(Arrays.asList(new Principal().withId("01234567-89ab-ef01-2345-0123456789ab")
                            .withType(PrincipalType.GROUP)))))
                .withEnclaveDefaultSettings(
                    new EnclaveDefaultSettingsPatchModel().withDiagnosticDestination(DiagnosticDestination.BOTH))
                .withMaintenanceModeConfiguration(new MaintenanceModeConfigurationPatchModel()
                    .withMode(MaintenanceModeConfigurationModelMode.OFF)
                    .withPrincipals(Arrays.asList(
                        new Principal().withId("355a6bb0-abc0-4cba-000d-12a345b678c9").withType(PrincipalType.USER)))
                    .withJustification(MaintenanceModeConfigurationModelJustification.OFF)))
            .apply();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
