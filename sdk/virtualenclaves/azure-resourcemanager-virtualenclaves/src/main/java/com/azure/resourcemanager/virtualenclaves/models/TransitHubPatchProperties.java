// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.virtualenclaves.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Transit Hub patchable Properties.
 */
@Fluent
public final class TransitHubPatchProperties implements JsonSerializable<TransitHubPatchProperties> {
    /*
     * The state of the transitHub.
     */
    private TransitHubState state;

    /*
     * The TransitOption of the transitHub.
     */
    private TransitOption transitOption;

    /**
     * Creates an instance of TransitHubPatchProperties class.
     */
    public TransitHubPatchProperties() {
    }

    /**
     * Get the state property: The state of the transitHub.
     * 
     * @return the state value.
     */
    public TransitHubState state() {
        return this.state;
    }

    /**
     * Set the state property: The state of the transitHub.
     * 
     * @param state the state value to set.
     * @return the TransitHubPatchProperties object itself.
     */
    public TransitHubPatchProperties withState(TransitHubState state) {
        this.state = state;
        return this;
    }

    /**
     * Get the transitOption property: The TransitOption of the transitHub.
     * 
     * @return the transitOption value.
     */
    public TransitOption transitOption() {
        return this.transitOption;
    }

    /**
     * Set the transitOption property: The TransitOption of the transitHub.
     * 
     * @param transitOption the transitOption value to set.
     * @return the TransitHubPatchProperties object itself.
     */
    public TransitHubPatchProperties withTransitOption(TransitOption transitOption) {
        this.transitOption = transitOption;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("state", this.state == null ? null : this.state.toString());
        jsonWriter.writeJsonField("transitOption", this.transitOption);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of TransitHubPatchProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of TransitHubPatchProperties if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the TransitHubPatchProperties.
     */
    public static TransitHubPatchProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            TransitHubPatchProperties deserializedTransitHubPatchProperties = new TransitHubPatchProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("state".equals(fieldName)) {
                    deserializedTransitHubPatchProperties.state = TransitHubState.fromString(reader.getString());
                } else if ("transitOption".equals(fieldName)) {
                    deserializedTransitHubPatchProperties.transitOption = TransitOption.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedTransitHubPatchProperties;
        });
    }
}
