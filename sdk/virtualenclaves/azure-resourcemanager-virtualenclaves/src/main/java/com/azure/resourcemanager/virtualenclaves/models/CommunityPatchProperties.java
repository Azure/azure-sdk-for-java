// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.virtualenclaves.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Community Resource Properties without default values.
 */
@Fluent
public final class CommunityPatchProperties implements JsonSerializable<CommunityPatchProperties> {
    /*
     * DNS Servers.
     */
    private List<String> dnsServers;

    /*
     * List of services governed by a community.
     */
    private List<GovernedServiceItem> governedServiceList;

    /*
     * Policy override setting for the community. Specifies whether to apply enclave-specific policies or disable policy
     * enforcement.
     */
    private CommunityPropertiesPolicyOverride policyOverride;

    /*
     * Community role assignments
     */
    private List<RoleAssignmentItem> communityRoleAssignments;

    /*
     * SKU of the community's Azure Firewall (Basic, Standard, Premium). Standard is the default
     */
    private FirewallSKU firewallSku;

    /*
     * Approval requirements for various actions on the community's resources.
     */
    private ApprovalSettingsPatchProperties approvalSettings;

    /*
     * Maintenance Mode configuration.
     */
    private MaintenanceModeConfigurationPatchModel maintenanceModeConfiguration;

    /**
     * Creates an instance of CommunityPatchProperties class.
     */
    public CommunityPatchProperties() {
    }

    /**
     * Get the dnsServers property: DNS Servers.
     * 
     * @return the dnsServers value.
     */
    public List<String> dnsServers() {
        return this.dnsServers;
    }

    /**
     * Set the dnsServers property: DNS Servers.
     * 
     * @param dnsServers the dnsServers value to set.
     * @return the CommunityPatchProperties object itself.
     */
    public CommunityPatchProperties withDnsServers(List<String> dnsServers) {
        this.dnsServers = dnsServers;
        return this;
    }

    /**
     * Get the governedServiceList property: List of services governed by a community.
     * 
     * @return the governedServiceList value.
     */
    public List<GovernedServiceItem> governedServiceList() {
        return this.governedServiceList;
    }

    /**
     * Set the governedServiceList property: List of services governed by a community.
     * 
     * @param governedServiceList the governedServiceList value to set.
     * @return the CommunityPatchProperties object itself.
     */
    public CommunityPatchProperties withGovernedServiceList(List<GovernedServiceItem> governedServiceList) {
        this.governedServiceList = governedServiceList;
        return this;
    }

    /**
     * Get the policyOverride property: Policy override setting for the community. Specifies whether to apply
     * enclave-specific policies or disable policy enforcement.
     * 
     * @return the policyOverride value.
     */
    public CommunityPropertiesPolicyOverride policyOverride() {
        return this.policyOverride;
    }

    /**
     * Set the policyOverride property: Policy override setting for the community. Specifies whether to apply
     * enclave-specific policies or disable policy enforcement.
     * 
     * @param policyOverride the policyOverride value to set.
     * @return the CommunityPatchProperties object itself.
     */
    public CommunityPatchProperties withPolicyOverride(CommunityPropertiesPolicyOverride policyOverride) {
        this.policyOverride = policyOverride;
        return this;
    }

    /**
     * Get the communityRoleAssignments property: Community role assignments.
     * 
     * @return the communityRoleAssignments value.
     */
    public List<RoleAssignmentItem> communityRoleAssignments() {
        return this.communityRoleAssignments;
    }

    /**
     * Set the communityRoleAssignments property: Community role assignments.
     * 
     * @param communityRoleAssignments the communityRoleAssignments value to set.
     * @return the CommunityPatchProperties object itself.
     */
    public CommunityPatchProperties withCommunityRoleAssignments(List<RoleAssignmentItem> communityRoleAssignments) {
        this.communityRoleAssignments = communityRoleAssignments;
        return this;
    }

    /**
     * Get the firewallSku property: SKU of the community's Azure Firewall (Basic, Standard, Premium). Standard is the
     * default.
     * 
     * @return the firewallSku value.
     */
    public FirewallSKU firewallSku() {
        return this.firewallSku;
    }

    /**
     * Set the firewallSku property: SKU of the community's Azure Firewall (Basic, Standard, Premium). Standard is the
     * default.
     * 
     * @param firewallSku the firewallSku value to set.
     * @return the CommunityPatchProperties object itself.
     */
    public CommunityPatchProperties withFirewallSku(FirewallSKU firewallSku) {
        this.firewallSku = firewallSku;
        return this;
    }

    /**
     * Get the approvalSettings property: Approval requirements for various actions on the community's resources.
     * 
     * @return the approvalSettings value.
     */
    public ApprovalSettingsPatchProperties approvalSettings() {
        return this.approvalSettings;
    }

    /**
     * Set the approvalSettings property: Approval requirements for various actions on the community's resources.
     * 
     * @param approvalSettings the approvalSettings value to set.
     * @return the CommunityPatchProperties object itself.
     */
    public CommunityPatchProperties withApprovalSettings(ApprovalSettingsPatchProperties approvalSettings) {
        this.approvalSettings = approvalSettings;
        return this;
    }

    /**
     * Get the maintenanceModeConfiguration property: Maintenance Mode configuration.
     * 
     * @return the maintenanceModeConfiguration value.
     */
    public MaintenanceModeConfigurationPatchModel maintenanceModeConfiguration() {
        return this.maintenanceModeConfiguration;
    }

    /**
     * Set the maintenanceModeConfiguration property: Maintenance Mode configuration.
     * 
     * @param maintenanceModeConfiguration the maintenanceModeConfiguration value to set.
     * @return the CommunityPatchProperties object itself.
     */
    public CommunityPatchProperties
        withMaintenanceModeConfiguration(MaintenanceModeConfigurationPatchModel maintenanceModeConfiguration) {
        this.maintenanceModeConfiguration = maintenanceModeConfiguration;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("dnsServers", this.dnsServers, (writer, element) -> writer.writeString(element));
        jsonWriter.writeArrayField("governedServiceList", this.governedServiceList,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("policyOverride",
            this.policyOverride == null ? null : this.policyOverride.toString());
        jsonWriter.writeArrayField("communityRoleAssignments", this.communityRoleAssignments,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("firewallSku", this.firewallSku == null ? null : this.firewallSku.toString());
        jsonWriter.writeJsonField("approvalSettings", this.approvalSettings);
        jsonWriter.writeJsonField("maintenanceModeConfiguration", this.maintenanceModeConfiguration);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CommunityPatchProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CommunityPatchProperties if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the CommunityPatchProperties.
     */
    public static CommunityPatchProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CommunityPatchProperties deserializedCommunityPatchProperties = new CommunityPatchProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("dnsServers".equals(fieldName)) {
                    List<String> dnsServers = reader.readArray(reader1 -> reader1.getString());
                    deserializedCommunityPatchProperties.dnsServers = dnsServers;
                } else if ("governedServiceList".equals(fieldName)) {
                    List<GovernedServiceItem> governedServiceList
                        = reader.readArray(reader1 -> GovernedServiceItem.fromJson(reader1));
                    deserializedCommunityPatchProperties.governedServiceList = governedServiceList;
                } else if ("policyOverride".equals(fieldName)) {
                    deserializedCommunityPatchProperties.policyOverride
                        = CommunityPropertiesPolicyOverride.fromString(reader.getString());
                } else if ("communityRoleAssignments".equals(fieldName)) {
                    List<RoleAssignmentItem> communityRoleAssignments
                        = reader.readArray(reader1 -> RoleAssignmentItem.fromJson(reader1));
                    deserializedCommunityPatchProperties.communityRoleAssignments = communityRoleAssignments;
                } else if ("firewallSku".equals(fieldName)) {
                    deserializedCommunityPatchProperties.firewallSku = FirewallSKU.fromString(reader.getString());
                } else if ("approvalSettings".equals(fieldName)) {
                    deserializedCommunityPatchProperties.approvalSettings
                        = ApprovalSettingsPatchProperties.fromJson(reader);
                } else if ("maintenanceModeConfiguration".equals(fieldName)) {
                    deserializedCommunityPatchProperties.maintenanceModeConfiguration
                        = MaintenanceModeConfigurationPatchModel.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCommunityPatchProperties;
        });
    }
}
