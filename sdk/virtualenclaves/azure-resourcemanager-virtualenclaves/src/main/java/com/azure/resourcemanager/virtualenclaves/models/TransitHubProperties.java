// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.virtualenclaves.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Describes the properties of an Transit Hub.
 */
@Fluent
public final class TransitHubProperties implements JsonSerializable<TransitHubProperties> {
    /*
     * The status of the last operation.
     */
    private ProvisioningState provisioningState;

    /*
     * The state of the transitHub.
     */
    private TransitHubState state;

    /*
     * The TransitOption of the transitHub.
     */
    private TransitOption transitOption;

    /*
     * List of resource ids modified by transitHubs.
     */
    private List<String> resourceCollection;

    /**
     * Creates an instance of TransitHubProperties class.
     */
    public TransitHubProperties() {
    }

    /**
     * Get the provisioningState property: The status of the last operation.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the state property: The state of the transitHub.
     * 
     * @return the state value.
     */
    public TransitHubState state() {
        return this.state;
    }

    /**
     * Set the state property: The state of the transitHub.
     * 
     * @param state the state value to set.
     * @return the TransitHubProperties object itself.
     */
    public TransitHubProperties withState(TransitHubState state) {
        this.state = state;
        return this;
    }

    /**
     * Get the transitOption property: The TransitOption of the transitHub.
     * 
     * @return the transitOption value.
     */
    public TransitOption transitOption() {
        return this.transitOption;
    }

    /**
     * Set the transitOption property: The TransitOption of the transitHub.
     * 
     * @param transitOption the transitOption value to set.
     * @return the TransitHubProperties object itself.
     */
    public TransitHubProperties withTransitOption(TransitOption transitOption) {
        this.transitOption = transitOption;
        return this;
    }

    /**
     * Get the resourceCollection property: List of resource ids modified by transitHubs.
     * 
     * @return the resourceCollection value.
     */
    public List<String> resourceCollection() {
        return this.resourceCollection;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("state", this.state == null ? null : this.state.toString());
        jsonWriter.writeJsonField("transitOption", this.transitOption);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of TransitHubProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of TransitHubProperties if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the TransitHubProperties.
     */
    public static TransitHubProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            TransitHubProperties deserializedTransitHubProperties = new TransitHubProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("provisioningState".equals(fieldName)) {
                    deserializedTransitHubProperties.provisioningState
                        = ProvisioningState.fromString(reader.getString());
                } else if ("state".equals(fieldName)) {
                    deserializedTransitHubProperties.state = TransitHubState.fromString(reader.getString());
                } else if ("transitOption".equals(fieldName)) {
                    deserializedTransitHubProperties.transitOption = TransitOption.fromJson(reader);
                } else if ("resourceCollection".equals(fieldName)) {
                    List<String> resourceCollection = reader.readArray(reader1 -> reader1.getString());
                    deserializedTransitHubProperties.resourceCollection = resourceCollection;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedTransitHubProperties;
        });
    }
}
