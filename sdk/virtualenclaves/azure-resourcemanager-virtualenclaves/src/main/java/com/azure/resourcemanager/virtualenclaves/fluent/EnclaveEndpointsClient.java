// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.virtualenclaves.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.virtualenclaves.fluent.models.ApprovalActionResponseInner;
import com.azure.resourcemanager.virtualenclaves.fluent.models.EnclaveEndpointResourceInner;
import com.azure.resourcemanager.virtualenclaves.models.ApprovalCallbackRequest;
import com.azure.resourcemanager.virtualenclaves.models.ApprovalDeletionCallbackRequest;
import com.azure.resourcemanager.virtualenclaves.models.EnclaveEndpointPatchModel;

/**
 * An instance of this class provides access to all the operations defined in EnclaveEndpointsClient.
 */
public interface EnclaveEndpointsClient {
    /**
     * Get a EnclaveEndpointResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualEnclaveName The name of the enclaveResource Resource.
     * @param enclaveEndpointName The name of the Enclave Endpoint Resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a EnclaveEndpointResource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<EnclaveEndpointResourceInner> getWithResponse(String resourceGroupName, String virtualEnclaveName,
        String enclaveEndpointName, Context context);

    /**
     * Get a EnclaveEndpointResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualEnclaveName The name of the enclaveResource Resource.
     * @param enclaveEndpointName The name of the Enclave Endpoint Resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a EnclaveEndpointResource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    EnclaveEndpointResourceInner get(String resourceGroupName, String virtualEnclaveName, String enclaveEndpointName);

    /**
     * Create a EnclaveEndpointResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualEnclaveName The name of the enclaveResource Resource.
     * @param enclaveEndpointName The name of the Enclave Endpoint Resource.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of enclaveEndpoint Model Resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<EnclaveEndpointResourceInner>, EnclaveEndpointResourceInner> beginCreateOrUpdate(
        String resourceGroupName, String virtualEnclaveName, String enclaveEndpointName,
        EnclaveEndpointResourceInner resource);

    /**
     * Create a EnclaveEndpointResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualEnclaveName The name of the enclaveResource Resource.
     * @param enclaveEndpointName The name of the Enclave Endpoint Resource.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of enclaveEndpoint Model Resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<EnclaveEndpointResourceInner>, EnclaveEndpointResourceInner> beginCreateOrUpdate(
        String resourceGroupName, String virtualEnclaveName, String enclaveEndpointName,
        EnclaveEndpointResourceInner resource, Context context);

    /**
     * Create a EnclaveEndpointResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualEnclaveName The name of the enclaveResource Resource.
     * @param enclaveEndpointName The name of the Enclave Endpoint Resource.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return enclaveEndpoint Model Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    EnclaveEndpointResourceInner createOrUpdate(String resourceGroupName, String virtualEnclaveName,
        String enclaveEndpointName, EnclaveEndpointResourceInner resource);

    /**
     * Create a EnclaveEndpointResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualEnclaveName The name of the enclaveResource Resource.
     * @param enclaveEndpointName The name of the Enclave Endpoint Resource.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return enclaveEndpoint Model Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    EnclaveEndpointResourceInner createOrUpdate(String resourceGroupName, String virtualEnclaveName,
        String enclaveEndpointName, EnclaveEndpointResourceInner resource, Context context);

    /**
     * Update a EnclaveEndpointResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualEnclaveName The name of the enclaveResource Resource.
     * @param enclaveEndpointName The name of the Enclave Endpoint Resource.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of enclaveEndpoint Model Resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<EnclaveEndpointResourceInner>, EnclaveEndpointResourceInner> beginUpdate(
        String resourceGroupName, String virtualEnclaveName, String enclaveEndpointName,
        EnclaveEndpointPatchModel properties);

    /**
     * Update a EnclaveEndpointResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualEnclaveName The name of the enclaveResource Resource.
     * @param enclaveEndpointName The name of the Enclave Endpoint Resource.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of enclaveEndpoint Model Resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<EnclaveEndpointResourceInner>, EnclaveEndpointResourceInner> beginUpdate(
        String resourceGroupName, String virtualEnclaveName, String enclaveEndpointName,
        EnclaveEndpointPatchModel properties, Context context);

    /**
     * Update a EnclaveEndpointResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualEnclaveName The name of the enclaveResource Resource.
     * @param enclaveEndpointName The name of the Enclave Endpoint Resource.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return enclaveEndpoint Model Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    EnclaveEndpointResourceInner update(String resourceGroupName, String virtualEnclaveName, String enclaveEndpointName,
        EnclaveEndpointPatchModel properties);

    /**
     * Update a EnclaveEndpointResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualEnclaveName The name of the enclaveResource Resource.
     * @param enclaveEndpointName The name of the Enclave Endpoint Resource.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return enclaveEndpoint Model Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    EnclaveEndpointResourceInner update(String resourceGroupName, String virtualEnclaveName, String enclaveEndpointName,
        EnclaveEndpointPatchModel properties, Context context);

    /**
     * Delete a EnclaveEndpointResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualEnclaveName The name of the enclaveResource Resource.
     * @param enclaveEndpointName The name of the Enclave Endpoint Resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String virtualEnclaveName,
        String enclaveEndpointName);

    /**
     * Delete a EnclaveEndpointResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualEnclaveName The name of the enclaveResource Resource.
     * @param enclaveEndpointName The name of the Enclave Endpoint Resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String virtualEnclaveName,
        String enclaveEndpointName, Context context);

    /**
     * Delete a EnclaveEndpointResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualEnclaveName The name of the enclaveResource Resource.
     * @param enclaveEndpointName The name of the Enclave Endpoint Resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String virtualEnclaveName, String enclaveEndpointName);

    /**
     * Delete a EnclaveEndpointResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualEnclaveName The name of the enclaveResource Resource.
     * @param enclaveEndpointName The name of the Enclave Endpoint Resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String virtualEnclaveName, String enclaveEndpointName, Context context);

    /**
     * List EnclaveEndpointResource resources by EnclaveResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualEnclaveName The name of the enclaveResource Resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a EnclaveEndpointResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<EnclaveEndpointResourceInner> listByEnclaveResource(String resourceGroupName,
        String virtualEnclaveName);

    /**
     * List EnclaveEndpointResource resources by EnclaveResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualEnclaveName The name of the enclaveResource Resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a EnclaveEndpointResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<EnclaveEndpointResourceInner> listByEnclaveResource(String resourceGroupName,
        String virtualEnclaveName, Context context);

    /**
     * List EnclaveEndpointResource resources by subscription ID.
     * 
     * @param virtualEnclaveName The name of the enclaveResource Resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a EnclaveEndpointResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<EnclaveEndpointResourceInner> listBySubscription(String virtualEnclaveName);

    /**
     * List EnclaveEndpointResource resources by subscription ID.
     * 
     * @param virtualEnclaveName The name of the enclaveResource Resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a EnclaveEndpointResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<EnclaveEndpointResourceInner> listBySubscription(String virtualEnclaveName, Context context);

    /**
     * Callback that triggers on approval state change.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualEnclaveName The name of the enclaveResource Resource.
     * @param enclaveEndpointName The name of the Enclave Endpoint Resource.
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ApprovalActionResponseInner>, ApprovalActionResponseInner> beginHandleApprovalCreation(
        String resourceGroupName, String virtualEnclaveName, String enclaveEndpointName, ApprovalCallbackRequest body);

    /**
     * Callback that triggers on approval state change.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualEnclaveName The name of the enclaveResource Resource.
     * @param enclaveEndpointName The name of the Enclave Endpoint Resource.
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ApprovalActionResponseInner>, ApprovalActionResponseInner> beginHandleApprovalCreation(
        String resourceGroupName, String virtualEnclaveName, String enclaveEndpointName, ApprovalCallbackRequest body,
        Context context);

    /**
     * Callback that triggers on approval state change.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualEnclaveName The name of the enclaveResource Resource.
     * @param enclaveEndpointName The name of the Enclave Endpoint Resource.
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ApprovalActionResponseInner handleApprovalCreation(String resourceGroupName, String virtualEnclaveName,
        String enclaveEndpointName, ApprovalCallbackRequest body);

    /**
     * Callback that triggers on approval state change.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualEnclaveName The name of the enclaveResource Resource.
     * @param enclaveEndpointName The name of the Enclave Endpoint Resource.
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ApprovalActionResponseInner handleApprovalCreation(String resourceGroupName, String virtualEnclaveName,
        String enclaveEndpointName, ApprovalCallbackRequest body, Context context);

    /**
     * Callback that triggers on approval deletion state change.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualEnclaveName The name of the enclaveResource Resource.
     * @param enclaveEndpointName The name of the Enclave Endpoint Resource.
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ApprovalActionResponseInner>, ApprovalActionResponseInner> beginHandleApprovalDeletion(
        String resourceGroupName, String virtualEnclaveName, String enclaveEndpointName,
        ApprovalDeletionCallbackRequest body);

    /**
     * Callback that triggers on approval deletion state change.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualEnclaveName The name of the enclaveResource Resource.
     * @param enclaveEndpointName The name of the Enclave Endpoint Resource.
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ApprovalActionResponseInner>, ApprovalActionResponseInner> beginHandleApprovalDeletion(
        String resourceGroupName, String virtualEnclaveName, String enclaveEndpointName,
        ApprovalDeletionCallbackRequest body, Context context);

    /**
     * Callback that triggers on approval deletion state change.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualEnclaveName The name of the enclaveResource Resource.
     * @param enclaveEndpointName The name of the Enclave Endpoint Resource.
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ApprovalActionResponseInner handleApprovalDeletion(String resourceGroupName, String virtualEnclaveName,
        String enclaveEndpointName, ApprovalDeletionCallbackRequest body);

    /**
     * Callback that triggers on approval deletion state change.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualEnclaveName The name of the enclaveResource Resource.
     * @param enclaveEndpointName The name of the Enclave Endpoint Resource.
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ApprovalActionResponseInner handleApprovalDeletion(String resourceGroupName, String virtualEnclaveName,
        String enclaveEndpointName, ApprovalDeletionCallbackRequest body, Context context);
}
