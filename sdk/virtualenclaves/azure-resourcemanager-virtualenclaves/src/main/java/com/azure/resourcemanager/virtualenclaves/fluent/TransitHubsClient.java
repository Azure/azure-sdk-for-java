// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.virtualenclaves.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.virtualenclaves.fluent.models.TransitHubResourceInner;
import com.azure.resourcemanager.virtualenclaves.models.TransitHubPatchModel;

/**
 * An instance of this class provides access to all the operations defined in TransitHubsClient.
 */
public interface TransitHubsClient {
    /**
     * Get a TransitHubResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param communityName The name of the communityResource Resource.
     * @param transitHubName The name of the TransitHub Resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a TransitHubResource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<TransitHubResourceInner> getWithResponse(String resourceGroupName, String communityName,
        String transitHubName, Context context);

    /**
     * Get a TransitHubResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param communityName The name of the communityResource Resource.
     * @param transitHubName The name of the TransitHub Resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a TransitHubResource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    TransitHubResourceInner get(String resourceGroupName, String communityName, String transitHubName);

    /**
     * Create a TransitHubResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param communityName The name of the communityResource Resource.
     * @param transitHubName The name of the TransitHub Resource.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of transitHub Model Resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<TransitHubResourceInner>, TransitHubResourceInner> beginCreateOrUpdate(
        String resourceGroupName, String communityName, String transitHubName, TransitHubResourceInner resource);

    /**
     * Create a TransitHubResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param communityName The name of the communityResource Resource.
     * @param transitHubName The name of the TransitHub Resource.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of transitHub Model Resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<TransitHubResourceInner>, TransitHubResourceInner> beginCreateOrUpdate(
        String resourceGroupName, String communityName, String transitHubName, TransitHubResourceInner resource,
        Context context);

    /**
     * Create a TransitHubResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param communityName The name of the communityResource Resource.
     * @param transitHubName The name of the TransitHub Resource.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return transitHub Model Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    TransitHubResourceInner createOrUpdate(String resourceGroupName, String communityName, String transitHubName,
        TransitHubResourceInner resource);

    /**
     * Create a TransitHubResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param communityName The name of the communityResource Resource.
     * @param transitHubName The name of the TransitHub Resource.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return transitHub Model Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    TransitHubResourceInner createOrUpdate(String resourceGroupName, String communityName, String transitHubName,
        TransitHubResourceInner resource, Context context);

    /**
     * Update a TransitHubResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param communityName The name of the communityResource Resource.
     * @param transitHubName The name of the TransitHub Resource.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of transitHub Model Resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<TransitHubResourceInner>, TransitHubResourceInner> beginUpdate(String resourceGroupName,
        String communityName, String transitHubName, TransitHubPatchModel properties);

    /**
     * Update a TransitHubResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param communityName The name of the communityResource Resource.
     * @param transitHubName The name of the TransitHub Resource.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of transitHub Model Resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<TransitHubResourceInner>, TransitHubResourceInner> beginUpdate(String resourceGroupName,
        String communityName, String transitHubName, TransitHubPatchModel properties, Context context);

    /**
     * Update a TransitHubResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param communityName The name of the communityResource Resource.
     * @param transitHubName The name of the TransitHub Resource.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return transitHub Model Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    TransitHubResourceInner update(String resourceGroupName, String communityName, String transitHubName,
        TransitHubPatchModel properties);

    /**
     * Update a TransitHubResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param communityName The name of the communityResource Resource.
     * @param transitHubName The name of the TransitHub Resource.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return transitHub Model Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    TransitHubResourceInner update(String resourceGroupName, String communityName, String transitHubName,
        TransitHubPatchModel properties, Context context);

    /**
     * Delete a TransitHubResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param communityName The name of the communityResource Resource.
     * @param transitHubName The name of the TransitHub Resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String communityName,
        String transitHubName);

    /**
     * Delete a TransitHubResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param communityName The name of the communityResource Resource.
     * @param transitHubName The name of the TransitHub Resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String communityName,
        String transitHubName, Context context);

    /**
     * Delete a TransitHubResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param communityName The name of the communityResource Resource.
     * @param transitHubName The name of the TransitHub Resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String communityName, String transitHubName);

    /**
     * Delete a TransitHubResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param communityName The name of the communityResource Resource.
     * @param transitHubName The name of the TransitHub Resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String communityName, String transitHubName, Context context);

    /**
     * List TransitHubResource resources by CommunityResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param communityName The name of the communityResource Resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a TransitHubResource list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<TransitHubResourceInner> listByCommunityResource(String resourceGroupName, String communityName);

    /**
     * List TransitHubResource resources by CommunityResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param communityName The name of the communityResource Resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a TransitHubResource list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<TransitHubResourceInner> listByCommunityResource(String resourceGroupName, String communityName,
        Context context);

    /**
     * List TransitHubResource resources by subscription ID.
     * 
     * @param communityName The name of the communityResource Resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a TransitHubResource list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<TransitHubResourceInner> listBySubscription(String communityName);

    /**
     * List TransitHubResource resources by subscription ID.
     * 
     * @param communityName The name of the communityResource Resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a TransitHubResource list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<TransitHubResourceInner> listBySubscription(String communityName, Context context);
}
