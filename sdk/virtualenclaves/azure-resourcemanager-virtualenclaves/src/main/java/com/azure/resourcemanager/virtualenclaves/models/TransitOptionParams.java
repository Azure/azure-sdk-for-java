// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.virtualenclaves.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * TransitOptionParams Properties.
 */
@Fluent
public final class TransitOptionParams implements JsonSerializable<TransitOptionParams> {
    /*
     * Transit Option Params scaleUnits.
     */
    private Long scaleUnits;

    /*
     * Transit Option Params remoteVirtualNetworkId.
     */
    private String remoteVirtualNetworkId;

    /**
     * Creates an instance of TransitOptionParams class.
     */
    public TransitOptionParams() {
    }

    /**
     * Get the scaleUnits property: Transit Option Params scaleUnits.
     * 
     * @return the scaleUnits value.
     */
    public Long scaleUnits() {
        return this.scaleUnits;
    }

    /**
     * Set the scaleUnits property: Transit Option Params scaleUnits.
     * 
     * @param scaleUnits the scaleUnits value to set.
     * @return the TransitOptionParams object itself.
     */
    public TransitOptionParams withScaleUnits(Long scaleUnits) {
        this.scaleUnits = scaleUnits;
        return this;
    }

    /**
     * Get the remoteVirtualNetworkId property: Transit Option Params remoteVirtualNetworkId.
     * 
     * @return the remoteVirtualNetworkId value.
     */
    public String remoteVirtualNetworkId() {
        return this.remoteVirtualNetworkId;
    }

    /**
     * Set the remoteVirtualNetworkId property: Transit Option Params remoteVirtualNetworkId.
     * 
     * @param remoteVirtualNetworkId the remoteVirtualNetworkId value to set.
     * @return the TransitOptionParams object itself.
     */
    public TransitOptionParams withRemoteVirtualNetworkId(String remoteVirtualNetworkId) {
        this.remoteVirtualNetworkId = remoteVirtualNetworkId;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("scaleUnits", this.scaleUnits);
        jsonWriter.writeStringField("remoteVirtualNetworkId", this.remoteVirtualNetworkId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of TransitOptionParams from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of TransitOptionParams if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the TransitOptionParams.
     */
    public static TransitOptionParams fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            TransitOptionParams deserializedTransitOptionParams = new TransitOptionParams();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("scaleUnits".equals(fieldName)) {
                    deserializedTransitOptionParams.scaleUnits = reader.getNullable(JsonReader::getLong);
                } else if ("remoteVirtualNetworkId".equals(fieldName)) {
                    deserializedTransitOptionParams.remoteVirtualNetworkId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedTransitOptionParams;
        });
    }
}
