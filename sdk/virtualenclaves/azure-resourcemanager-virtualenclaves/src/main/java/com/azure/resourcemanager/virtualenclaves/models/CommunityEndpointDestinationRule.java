// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.virtualenclaves.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Base type for destination rules.
 */
@Fluent
public final class CommunityEndpointDestinationRule implements JsonSerializable<CommunityEndpointDestinationRule> {
    /*
     * Destination Type.
     */
    private DestinationType destinationType;

    /*
     * Protocols. Options specified by Endpoint Protocol Enum.
     */
    private List<CommunityEndpointProtocol> protocols;

    /*
     * Transit Hub Resource Id.
     */
    private String transitHubResourceId;

    /*
     * Endpoint Rule Name.
     */
    private String endpointRuleName;

    /*
     * Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint)
     * separated by commas.
     */
    private String destination;

    /*
     * Port. Can include multiple ports separated by commas or a range indicated by a hyphen.
     */
    private String ports;

    /**
     * Creates an instance of CommunityEndpointDestinationRule class.
     */
    public CommunityEndpointDestinationRule() {
    }

    /**
     * Get the destinationType property: Destination Type.
     * 
     * @return the destinationType value.
     */
    public DestinationType destinationType() {
        return this.destinationType;
    }

    /**
     * Set the destinationType property: Destination Type.
     * 
     * @param destinationType the destinationType value to set.
     * @return the CommunityEndpointDestinationRule object itself.
     */
    public CommunityEndpointDestinationRule withDestinationType(DestinationType destinationType) {
        this.destinationType = destinationType;
        return this;
    }

    /**
     * Get the protocols property: Protocols. Options specified by Endpoint Protocol Enum.
     * 
     * @return the protocols value.
     */
    public List<CommunityEndpointProtocol> protocols() {
        return this.protocols;
    }

    /**
     * Set the protocols property: Protocols. Options specified by Endpoint Protocol Enum.
     * 
     * @param protocols the protocols value to set.
     * @return the CommunityEndpointDestinationRule object itself.
     */
    public CommunityEndpointDestinationRule withProtocols(List<CommunityEndpointProtocol> protocols) {
        this.protocols = protocols;
        return this;
    }

    /**
     * Get the transitHubResourceId property: Transit Hub Resource Id.
     * 
     * @return the transitHubResourceId value.
     */
    public String transitHubResourceId() {
        return this.transitHubResourceId;
    }

    /**
     * Set the transitHubResourceId property: Transit Hub Resource Id.
     * 
     * @param transitHubResourceId the transitHubResourceId value to set.
     * @return the CommunityEndpointDestinationRule object itself.
     */
    public CommunityEndpointDestinationRule withTransitHubResourceId(String transitHubResourceId) {
        this.transitHubResourceId = transitHubResourceId;
        return this;
    }

    /**
     * Get the endpointRuleName property: Endpoint Rule Name.
     * 
     * @return the endpointRuleName value.
     */
    public String endpointRuleName() {
        return this.endpointRuleName;
    }

    /**
     * Set the endpointRuleName property: Endpoint Rule Name.
     * 
     * @param endpointRuleName the endpointRuleName value to set.
     * @return the CommunityEndpointDestinationRule object itself.
     */
    public CommunityEndpointDestinationRule withEndpointRuleName(String endpointRuleName) {
        this.endpointRuleName = endpointRuleName;
        return this;
    }

    /**
     * Get the destination property: Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns
     * (for community endpoint) separated by commas.
     * 
     * @return the destination value.
     */
    public String destination() {
        return this.destination;
    }

    /**
     * Set the destination property: Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns
     * (for community endpoint) separated by commas.
     * 
     * @param destination the destination value to set.
     * @return the CommunityEndpointDestinationRule object itself.
     */
    public CommunityEndpointDestinationRule withDestination(String destination) {
        this.destination = destination;
        return this;
    }

    /**
     * Get the ports property: Port. Can include multiple ports separated by commas or a range indicated by a hyphen.
     * 
     * @return the ports value.
     */
    public String ports() {
        return this.ports;
    }

    /**
     * Set the ports property: Port. Can include multiple ports separated by commas or a range indicated by a hyphen.
     * 
     * @param ports the ports value to set.
     * @return the CommunityEndpointDestinationRule object itself.
     */
    public CommunityEndpointDestinationRule withPorts(String ports) {
        this.ports = ports;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("destinationType",
            this.destinationType == null ? null : this.destinationType.toString());
        jsonWriter.writeArrayField("protocols", this.protocols,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeStringField("transitHubResourceId", this.transitHubResourceId);
        jsonWriter.writeStringField("endpointRuleName", this.endpointRuleName);
        jsonWriter.writeStringField("destination", this.destination);
        jsonWriter.writeStringField("ports", this.ports);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CommunityEndpointDestinationRule from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CommunityEndpointDestinationRule if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the CommunityEndpointDestinationRule.
     */
    public static CommunityEndpointDestinationRule fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CommunityEndpointDestinationRule deserializedCommunityEndpointDestinationRule
                = new CommunityEndpointDestinationRule();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("destinationType".equals(fieldName)) {
                    deserializedCommunityEndpointDestinationRule.destinationType
                        = DestinationType.fromString(reader.getString());
                } else if ("protocols".equals(fieldName)) {
                    List<CommunityEndpointProtocol> protocols
                        = reader.readArray(reader1 -> CommunityEndpointProtocol.fromString(reader1.getString()));
                    deserializedCommunityEndpointDestinationRule.protocols = protocols;
                } else if ("transitHubResourceId".equals(fieldName)) {
                    deserializedCommunityEndpointDestinationRule.transitHubResourceId = reader.getString();
                } else if ("endpointRuleName".equals(fieldName)) {
                    deserializedCommunityEndpointDestinationRule.endpointRuleName = reader.getString();
                } else if ("destination".equals(fieldName)) {
                    deserializedCommunityEndpointDestinationRule.destination = reader.getString();
                } else if ("ports".equals(fieldName)) {
                    deserializedCommunityEndpointDestinationRule.ports = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCommunityEndpointDestinationRule;
        });
    }
}
