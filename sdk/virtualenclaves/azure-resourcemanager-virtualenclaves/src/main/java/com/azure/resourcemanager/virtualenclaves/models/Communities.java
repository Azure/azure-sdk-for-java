// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.virtualenclaves.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of Communities.
 */
public interface Communities {
    /**
     * Get a CommunityResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param communityName The name of the communityResource Resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a CommunityResource along with {@link Response}.
     */
    Response<CommunityResource> getByResourceGroupWithResponse(String resourceGroupName, String communityName,
        Context context);

    /**
     * Get a CommunityResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param communityName The name of the communityResource Resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a CommunityResource.
     */
    CommunityResource getByResourceGroup(String resourceGroupName, String communityName);

    /**
     * Delete a CommunityResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param communityName The name of the communityResource Resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String communityName);

    /**
     * Delete a CommunityResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param communityName The name of the communityResource Resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String communityName, Context context);

    /**
     * List CommunityResource resources by resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a CommunityResource list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<CommunityResource> listByResourceGroup(String resourceGroupName);

    /**
     * List CommunityResource resources by resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a CommunityResource list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<CommunityResource> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * List CommunityResource resources by subscription ID.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a CommunityResource list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<CommunityResource> list();

    /**
     * List CommunityResource resources by subscription ID.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a CommunityResource list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<CommunityResource> list(Context context);

    /**
     * Checks that the IP Address Space to be allocated for this Community is available.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param communityName The name of the communityResource Resource.
     * @param checkAddressSpaceAvailabilityRequest Check IP Address Space request body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response of availability of the requested address space along with {@link Response}.
     */
    Response<CheckAddressSpaceAvailabilityResponse> checkAddressSpaceAvailabilityWithResponse(String resourceGroupName,
        String communityName, CheckAddressSpaceAvailabilityRequest checkAddressSpaceAvailabilityRequest,
        Context context);

    /**
     * Checks that the IP Address Space to be allocated for this Community is available.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param communityName The name of the communityResource Resource.
     * @param checkAddressSpaceAvailabilityRequest Check IP Address Space request body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response of availability of the requested address space.
     */
    CheckAddressSpaceAvailabilityResponse checkAddressSpaceAvailability(String resourceGroupName, String communityName,
        CheckAddressSpaceAvailabilityRequest checkAddressSpaceAvailabilityRequest);

    /**
     * Get a CommunityResource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a CommunityResource along with {@link Response}.
     */
    CommunityResource getById(String id);

    /**
     * Get a CommunityResource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a CommunityResource along with {@link Response}.
     */
    Response<CommunityResource> getByIdWithResponse(String id, Context context);

    /**
     * Delete a CommunityResource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete a CommunityResource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new CommunityResource resource.
     * 
     * @param name resource name.
     * @return the first stage of the new CommunityResource definition.
     */
    CommunityResource.DefinitionStages.Blank define(String name);
}
