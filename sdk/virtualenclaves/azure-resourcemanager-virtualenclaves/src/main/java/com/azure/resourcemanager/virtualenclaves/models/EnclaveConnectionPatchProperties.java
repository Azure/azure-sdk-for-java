// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.virtualenclaves.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Enclave Connection patchable Properties.
 */
@Fluent
public final class EnclaveConnectionPatchProperties implements JsonSerializable<EnclaveConnectionPatchProperties> {
    /*
     * Source CIDR.
     */
    private String sourceCidr;

    /**
     * Creates an instance of EnclaveConnectionPatchProperties class.
     */
    public EnclaveConnectionPatchProperties() {
    }

    /**
     * Get the sourceCidr property: Source CIDR.
     * 
     * @return the sourceCidr value.
     */
    public String sourceCidr() {
        return this.sourceCidr;
    }

    /**
     * Set the sourceCidr property: Source CIDR.
     * 
     * @param sourceCidr the sourceCidr value to set.
     * @return the EnclaveConnectionPatchProperties object itself.
     */
    public EnclaveConnectionPatchProperties withSourceCidr(String sourceCidr) {
        this.sourceCidr = sourceCidr;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("sourceCidr", this.sourceCidr);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of EnclaveConnectionPatchProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of EnclaveConnectionPatchProperties if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the EnclaveConnectionPatchProperties.
     */
    public static EnclaveConnectionPatchProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            EnclaveConnectionPatchProperties deserializedEnclaveConnectionPatchProperties
                = new EnclaveConnectionPatchProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("sourceCidr".equals(fieldName)) {
                    deserializedEnclaveConnectionPatchProperties.sourceCidr = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedEnclaveConnectionPatchProperties;
        });
    }
}
