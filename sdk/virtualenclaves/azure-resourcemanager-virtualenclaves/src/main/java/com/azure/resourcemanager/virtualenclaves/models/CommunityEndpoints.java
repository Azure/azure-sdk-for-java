// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.virtualenclaves.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of CommunityEndpoints.
 */
public interface CommunityEndpoints {
    /**
     * Get a CommunityEndpointResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param communityName The name of the communityResource Resource.
     * @param communityEndpointName The name of the Community Endpoint Resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a CommunityEndpointResource along with {@link Response}.
     */
    Response<CommunityEndpointResource> getWithResponse(String resourceGroupName, String communityName,
        String communityEndpointName, Context context);

    /**
     * Get a CommunityEndpointResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param communityName The name of the communityResource Resource.
     * @param communityEndpointName The name of the Community Endpoint Resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a CommunityEndpointResource.
     */
    CommunityEndpointResource get(String resourceGroupName, String communityName, String communityEndpointName);

    /**
     * Delete a CommunityEndpointResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param communityName The name of the communityResource Resource.
     * @param communityEndpointName The name of the Community Endpoint Resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String communityName, String communityEndpointName);

    /**
     * Delete a CommunityEndpointResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param communityName The name of the communityResource Resource.
     * @param communityEndpointName The name of the Community Endpoint Resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String communityName, String communityEndpointName, Context context);

    /**
     * List CommunityEndpointResource resources by CommunityResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param communityName The name of the communityResource Resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a CommunityEndpointResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<CommunityEndpointResource> listByCommunityResource(String resourceGroupName, String communityName);

    /**
     * List CommunityEndpointResource resources by CommunityResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param communityName The name of the communityResource Resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a CommunityEndpointResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<CommunityEndpointResource> listByCommunityResource(String resourceGroupName, String communityName,
        Context context);

    /**
     * List CommunityEndpointResource resources by subscription ID.
     * 
     * @param communityName The name of the communityResource Resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a CommunityEndpointResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<CommunityEndpointResource> listBySubscription(String communityName);

    /**
     * List CommunityEndpointResource resources by subscription ID.
     * 
     * @param communityName The name of the communityResource Resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a CommunityEndpointResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<CommunityEndpointResource> listBySubscription(String communityName, Context context);

    /**
     * Callback that triggers on approval state change.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param communityName The name of the communityResource Resource.
     * @param communityEndpointName The name of the Community Endpoint Resource.
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    ApprovalActionResponse handleApprovalCreation(String resourceGroupName, String communityName,
        String communityEndpointName, ApprovalCallbackRequest body);

    /**
     * Callback that triggers on approval state change.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param communityName The name of the communityResource Resource.
     * @param communityEndpointName The name of the Community Endpoint Resource.
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    ApprovalActionResponse handleApprovalCreation(String resourceGroupName, String communityName,
        String communityEndpointName, ApprovalCallbackRequest body, Context context);

    /**
     * Callback that triggers on approval deletion state change.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param communityName The name of the communityResource Resource.
     * @param communityEndpointName The name of the Community Endpoint Resource.
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    ApprovalActionResponse handleApprovalDeletion(String resourceGroupName, String communityName,
        String communityEndpointName, ApprovalDeletionCallbackRequest body);

    /**
     * Callback that triggers on approval deletion state change.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param communityName The name of the communityResource Resource.
     * @param communityEndpointName The name of the Community Endpoint Resource.
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    ApprovalActionResponse handleApprovalDeletion(String resourceGroupName, String communityName,
        String communityEndpointName, ApprovalDeletionCallbackRequest body, Context context);

    /**
     * Get a CommunityEndpointResource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a CommunityEndpointResource along with {@link Response}.
     */
    CommunityEndpointResource getById(String id);

    /**
     * Get a CommunityEndpointResource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a CommunityEndpointResource along with {@link Response}.
     */
    Response<CommunityEndpointResource> getByIdWithResponse(String id, Context context);

    /**
     * Delete a CommunityEndpointResource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete a CommunityEndpointResource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new CommunityEndpointResource resource.
     * 
     * @param name resource name.
     * @return the first stage of the new CommunityEndpointResource definition.
     */
    CommunityEndpointResource.DefinitionStages.Blank define(String name);
}
