// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.virtualenclaves.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.virtualenclaves.VirtualEnclavesManager;
import com.azure.resourcemanager.virtualenclaves.models.CommunityEndpointProtocol;
import com.azure.resourcemanager.virtualenclaves.models.CommunityEndpointResource;
import com.azure.resourcemanager.virtualenclaves.models.DestinationType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CommunityEndpointsListByCommunityResourceMockTests {
    @Test
    public void testListByCommunityResource() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"ruleCollection\":[{\"destinationType\":\"PrivateNetwork\",\"protocols\":[\"HTTP\"],\"transitHubResourceId\":\"b\",\"endpointRuleName\":\"cdb\",\"destination\":\"fzndscxmxeatkd\",\"ports\":\"wnrdjyibqbnaom\"}],\"resourceCollection\":[\"mk\",\"hmaxljalfi\"],\"provisioningState\":\"NotSpecified\"},\"location\":\"obcancdexxqcw\",\"tags\":{\"zrltixldzyyf\":\"fgvaknokzwj\"},\"id\":\"tpq\",\"name\":\"ixymmpujivyql\",\"type\":\"juvsmbmslzoyovw\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        VirtualEnclavesManager manager = VirtualEnclavesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<CommunityEndpointResource> response = manager.communityEndpoints()
            .listByCommunityResource("bqsdtcjbctvi", "uzqymtuowog", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("obcancdexxqcw", response.iterator().next().location());
        Assertions.assertEquals("fgvaknokzwj", response.iterator().next().tags().get("zrltixldzyyf"));
        Assertions.assertEquals(DestinationType.PRIVATE_NETWORK,
            response.iterator().next().properties().ruleCollection().get(0).destinationType());
        Assertions.assertEquals(CommunityEndpointProtocol.HTTP,
            response.iterator().next().properties().ruleCollection().get(0).protocols().get(0));
        Assertions.assertEquals("b",
            response.iterator().next().properties().ruleCollection().get(0).transitHubResourceId());
        Assertions.assertEquals("cdb",
            response.iterator().next().properties().ruleCollection().get(0).endpointRuleName());
        Assertions.assertEquals("fzndscxmxeatkd",
            response.iterator().next().properties().ruleCollection().get(0).destination());
        Assertions.assertEquals("wnrdjyibqbnaom",
            response.iterator().next().properties().ruleCollection().get(0).ports());
    }
}
