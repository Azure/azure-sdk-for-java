// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.virtualenclaves.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.virtualenclaves.models.EnclaveEndpointDestinationRule;
import com.azure.resourcemanager.virtualenclaves.models.EnclaveEndpointPatchProperties;
import com.azure.resourcemanager.virtualenclaves.models.EnclaveEndpointProtocol;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class EnclaveEndpointPatchPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        EnclaveEndpointPatchProperties model = BinaryData.fromString(
            "{\"ruleCollection\":[{\"protocols\":[\"TCP\",\"UDP\",\"AH\",\"UDP\"],\"endpointRuleName\":\"kx\",\"destination\":\"ehvbbxurip\",\"ports\":\"fnhtbaxkgxyw\"},{\"protocols\":[\"UDP\",\"AH\"],\"endpointRuleName\":\"lyhpluodpvruud\",\"destination\":\"zibt\",\"ports\":\"stgktst\"}]}")
            .toObject(EnclaveEndpointPatchProperties.class);
        Assertions.assertEquals(EnclaveEndpointProtocol.TCP, model.ruleCollection().get(0).protocols().get(0));
        Assertions.assertEquals("kx", model.ruleCollection().get(0).endpointRuleName());
        Assertions.assertEquals("ehvbbxurip", model.ruleCollection().get(0).destination());
        Assertions.assertEquals("fnhtbaxkgxyw", model.ruleCollection().get(0).ports());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        EnclaveEndpointPatchProperties model = new EnclaveEndpointPatchProperties().withRuleCollection(Arrays.asList(
            new EnclaveEndpointDestinationRule()
                .withProtocols(Arrays.asList(EnclaveEndpointProtocol.TCP, EnclaveEndpointProtocol.UDP,
                    EnclaveEndpointProtocol.AH, EnclaveEndpointProtocol.UDP))
                .withEndpointRuleName("kx")
                .withDestination("ehvbbxurip")
                .withPorts("fnhtbaxkgxyw"),
            new EnclaveEndpointDestinationRule()
                .withProtocols(Arrays.asList(EnclaveEndpointProtocol.UDP, EnclaveEndpointProtocol.AH))
                .withEndpointRuleName("lyhpluodpvruud")
                .withDestination("zibt")
                .withPorts("stgktst")));
        model = BinaryData.fromObject(model).toObject(EnclaveEndpointPatchProperties.class);
        Assertions.assertEquals(EnclaveEndpointProtocol.TCP, model.ruleCollection().get(0).protocols().get(0));
        Assertions.assertEquals("kx", model.ruleCollection().get(0).endpointRuleName());
        Assertions.assertEquals("ehvbbxurip", model.ruleCollection().get(0).destination());
        Assertions.assertEquals("fnhtbaxkgxyw", model.ruleCollection().get(0).ports());
    }
}
