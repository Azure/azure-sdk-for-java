// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.virtualenclaves.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.virtualenclaves.models.TransitHubPatchProperties;
import com.azure.resourcemanager.virtualenclaves.models.TransitHubState;
import com.azure.resourcemanager.virtualenclaves.models.TransitOption;
import com.azure.resourcemanager.virtualenclaves.models.TransitOptionParams;
import com.azure.resourcemanager.virtualenclaves.models.TransitOptionType;
import org.junit.jupiter.api.Assertions;

public final class TransitHubPatchPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TransitHubPatchProperties model = BinaryData.fromString(
            "{\"state\":\"PendingUpdate\",\"transitOption\":{\"type\":\"Peering\",\"params\":{\"scaleUnits\":4045601352916026430,\"remoteVirtualNetworkId\":\"wbtlhflsjcdh\"}}}")
            .toObject(TransitHubPatchProperties.class);
        Assertions.assertEquals(TransitHubState.PENDING_UPDATE, model.state());
        Assertions.assertEquals(TransitOptionType.PEERING, model.transitOption().type());
        Assertions.assertEquals(4045601352916026430L, model.transitOption().params().scaleUnits());
        Assertions.assertEquals("wbtlhflsjcdh", model.transitOption().params().remoteVirtualNetworkId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TransitHubPatchProperties model = new TransitHubPatchProperties().withState(TransitHubState.PENDING_UPDATE)
            .withTransitOption(new TransitOption().withType(TransitOptionType.PEERING)
                .withParams(new TransitOptionParams().withScaleUnits(4045601352916026430L)
                    .withRemoteVirtualNetworkId("wbtlhflsjcdh")));
        model = BinaryData.fromObject(model).toObject(TransitHubPatchProperties.class);
        Assertions.assertEquals(TransitHubState.PENDING_UPDATE, model.state());
        Assertions.assertEquals(TransitOptionType.PEERING, model.transitOption().type());
        Assertions.assertEquals(4045601352916026430L, model.transitOption().params().scaleUnits());
        Assertions.assertEquals("wbtlhflsjcdh", model.transitOption().params().remoteVirtualNetworkId());
    }
}
