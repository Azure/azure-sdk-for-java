// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.virtualenclaves.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.virtualenclaves.implementation.models.ApprovalResourceListResult;
import com.azure.resourcemanager.virtualenclaves.models.ActionPerformed;
import com.azure.resourcemanager.virtualenclaves.models.ApprovalStatus;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class ApprovalResourceListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ApprovalResourceListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"provisioningState\":\"Deleting\",\"parentResourceId\":\"gwklnsr\",\"grandparentResourceId\":\"feycxcktp\",\"approvers\":[{\"approverEntraId\":\"erteeammxqiekk\",\"actionPerformed\":\"Rejected\",\"lastUpdatedAt\":\"2021-12-09T03:06:09Z\"},{\"approverEntraId\":\"rtkgdojbmxvavref\",\"actionPerformed\":\"Rejected\",\"lastUpdatedAt\":\"2021-07-20T03:47:36Z\"},{\"approverEntraId\":\"vecuijpx\",\"actionPerformed\":\"Approved\",\"lastUpdatedAt\":\"2021-07-08T16:57:24Z\"},{\"approverEntraId\":\"wprtu\",\"actionPerformed\":\"Rejected\",\"lastUpdatedAt\":\"2021-10-31T12:27:52Z\"}],\"ticketId\":\"ddjib\",\"createdAt\":\"2021-04-16T23:10:03Z\",\"stateChangedAt\":\"2021-03-17T04:25:55Z\",\"requestMetadata\":{\"resourceAction\":\"titvtzeexavox\",\"approvalCallbackRoute\":\"glecdmdqbwpypq\",\"approvalCallbackPayload\":\"sfj\",\"approvalStatus\":\"Pending\"}},\"id\":\"lhhxudbxvodhtnsi\",\"name\":\"ud\",\"type\":\"z\"},{\"properties\":{\"provisioningState\":\"Deleting\",\"parentResourceId\":\"kdlpa\",\"grandparentResourceId\":\"rcxfailcfxwmdb\",\"approvers\":[{\"approverEntraId\":\"fgsftufqob\",\"actionPerformed\":\"Approved\",\"lastUpdatedAt\":\"2021-06-10T09:16:23Z\"},{\"approverEntraId\":\"acgcckknhx\",\"actionPerformed\":\"Rejected\",\"lastUpdatedAt\":\"2021-03-12T19:47:17Z\"},{\"approverEntraId\":\"ytnrzvuljraae\",\"actionPerformed\":\"Approved\",\"lastUpdatedAt\":\"2021-10-31T19:51:57Z\"},{\"approverEntraId\":\"kqg\",\"actionPerformed\":\"Approved\",\"lastUpdatedAt\":\"2021-01-19T04:07:18Z\"}],\"ticketId\":\"nvbroylaxx\",\"createdAt\":\"2021-03-05T01:19:37Z\",\"stateChangedAt\":\"2021-04-08T11:51:17Z\",\"requestMetadata\":{\"resourceAction\":\"sdosfjbjsvgjr\",\"approvalCallbackRoute\":\"r\",\"approvalCallbackPayload\":\"ycy\",\"approvalStatus\":\"Deleted\"}},\"id\":\"xgccknfnw\",\"name\":\"btmvpdvjdhttza\",\"type\":\"fedxihchrphkm\"}],\"nextLink\":\"jdqnsdfzpbgt\"}")
            .toObject(ApprovalResourceListResult.class);
        Assertions.assertEquals("gwklnsr", model.value().get(0).properties().parentResourceId());
        Assertions.assertEquals("feycxcktp", model.value().get(0).properties().grandparentResourceId());
        Assertions.assertEquals("erteeammxqiekk",
            model.value().get(0).properties().approvers().get(0).approverEntraId());
        Assertions.assertEquals(ActionPerformed.REJECTED,
            model.value().get(0).properties().approvers().get(0).actionPerformed());
        Assertions.assertEquals(OffsetDateTime.parse("2021-12-09T03:06:09Z"),
            model.value().get(0).properties().approvers().get(0).lastUpdatedAt());
        Assertions.assertEquals("ddjib", model.value().get(0).properties().ticketId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-16T23:10:03Z"),
            model.value().get(0).properties().createdAt());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-17T04:25:55Z"),
            model.value().get(0).properties().stateChangedAt());
        Assertions.assertEquals("titvtzeexavox", model.value().get(0).properties().requestMetadata().resourceAction());
        Assertions.assertEquals("glecdmdqbwpypq",
            model.value().get(0).properties().requestMetadata().approvalCallbackRoute());
        Assertions.assertEquals("sfj", model.value().get(0).properties().requestMetadata().approvalCallbackPayload());
        Assertions.assertEquals(ApprovalStatus.PENDING,
            model.value().get(0).properties().requestMetadata().approvalStatus());
        Assertions.assertEquals("jdqnsdfzpbgt", model.nextLink());
    }
}
