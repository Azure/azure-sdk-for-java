// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.virtualenclaves.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.virtualenclaves.VirtualEnclavesManager;
import com.azure.resourcemanager.virtualenclaves.models.EnclaveConnectionResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class EnclaveConnectionsListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"state\":\"Active\",\"communityResourceId\":\"xj\",\"sourceResourceId\":\"l\",\"sourceCidr\":\"mpzqjhhhq\",\"destinationEndpointId\":\"uwyvcacoyvi\",\"provisioningState\":\"Deleting\",\"resourceCollection\":[\"usjszlbscm\",\"lzijiufehgmvflnw\"]},\"location\":\"qkxrerl\",\"tags\":{\"whghmup\":\"lylyfwxzutgqz\"},\"id\":\"xyjtcdxabbujf\",\"name\":\"abe\",\"type\":\"bbklqpxzuca\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        VirtualEnclavesManager manager = VirtualEnclavesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<EnclaveConnectionResource> response
            = manager.enclaveConnections().listByResourceGroup("zv", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("qkxrerl", response.iterator().next().location());
        Assertions.assertEquals("lylyfwxzutgqz", response.iterator().next().tags().get("whghmup"));
        Assertions.assertEquals("xj", response.iterator().next().properties().communityResourceId());
        Assertions.assertEquals("l", response.iterator().next().properties().sourceResourceId());
        Assertions.assertEquals("mpzqjhhhq", response.iterator().next().properties().sourceCidr());
        Assertions.assertEquals("uwyvcacoyvi", response.iterator().next().properties().destinationEndpointId());
    }
}
