// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.virtualenclaves.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.virtualenclaves.models.ActionPerformed;
import com.azure.resourcemanager.virtualenclaves.models.ApprovalPatchProperties;
import com.azure.resourcemanager.virtualenclaves.models.ApprovalStatus;
import com.azure.resourcemanager.virtualenclaves.models.Approver;
import com.azure.resourcemanager.virtualenclaves.models.RequestMetadataUpdatableProperties;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ApprovalPatchPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ApprovalPatchProperties model = BinaryData.fromString(
            "{\"parentResourceId\":\"kakankjpdnjzhaj\",\"grandparentResourceId\":\"lhjlmuoyxprimr\",\"approvers\":[{\"approverEntraId\":\"teecjmeislst\",\"actionPerformed\":\"Rejected\",\"lastUpdatedAt\":\"2021-10-17T18:13:46Z\"},{\"approverEntraId\":\"lwxdzaum\",\"actionPerformed\":\"Approved\",\"lastUpdatedAt\":\"2021-01-28T10:10:06Z\"}],\"ticketId\":\"guufuzboyjathwtz\",\"createdAt\":\"2021-01-15T12:49:43Z\",\"stateChangedAt\":\"2021-08-25T10:05:56Z\",\"requestMetadata\":{\"resourceAction\":\"mwmdxmebwjscjpa\",\"approvalCallbackRoute\":\"xveabf\",\"approvalCallbackPayload\":\"nmwmqtibx\",\"approvalStatus\":\"Pending\"}}")
            .toObject(ApprovalPatchProperties.class);
        Assertions.assertEquals("kakankjpdnjzhaj", model.parentResourceId());
        Assertions.assertEquals("lhjlmuoyxprimr", model.grandparentResourceId());
        Assertions.assertEquals("teecjmeislst", model.approvers().get(0).approverEntraId());
        Assertions.assertEquals(ActionPerformed.REJECTED, model.approvers().get(0).actionPerformed());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-17T18:13:46Z"), model.approvers().get(0).lastUpdatedAt());
        Assertions.assertEquals("guufuzboyjathwtz", model.ticketId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-15T12:49:43Z"), model.createdAt());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-25T10:05:56Z"), model.stateChangedAt());
        Assertions.assertEquals("mwmdxmebwjscjpa", model.requestMetadata().resourceAction());
        Assertions.assertEquals("xveabf", model.requestMetadata().approvalCallbackRoute());
        Assertions.assertEquals("nmwmqtibx", model.requestMetadata().approvalCallbackPayload());
        Assertions.assertEquals(ApprovalStatus.PENDING, model.requestMetadata().approvalStatus());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ApprovalPatchProperties model = new ApprovalPatchProperties().withParentResourceId("kakankjpdnjzhaj")
            .withGrandparentResourceId("lhjlmuoyxprimr")
            .withApprovers(Arrays.asList(
                new Approver().withApproverEntraId("teecjmeislst")
                    .withActionPerformed(ActionPerformed.REJECTED)
                    .withLastUpdatedAt(OffsetDateTime.parse("2021-10-17T18:13:46Z")),
                new Approver().withApproverEntraId("lwxdzaum")
                    .withActionPerformed(ActionPerformed.APPROVED)
                    .withLastUpdatedAt(OffsetDateTime.parse("2021-01-28T10:10:06Z"))))
            .withTicketId("guufuzboyjathwtz")
            .withCreatedAt(OffsetDateTime.parse("2021-01-15T12:49:43Z"))
            .withStateChangedAt(OffsetDateTime.parse("2021-08-25T10:05:56Z"))
            .withRequestMetadata(new RequestMetadataUpdatableProperties().withResourceAction("mwmdxmebwjscjpa")
                .withApprovalCallbackRoute("xveabf")
                .withApprovalCallbackPayload("nmwmqtibx")
                .withApprovalStatus(ApprovalStatus.PENDING));
        model = BinaryData.fromObject(model).toObject(ApprovalPatchProperties.class);
        Assertions.assertEquals("kakankjpdnjzhaj", model.parentResourceId());
        Assertions.assertEquals("lhjlmuoyxprimr", model.grandparentResourceId());
        Assertions.assertEquals("teecjmeislst", model.approvers().get(0).approverEntraId());
        Assertions.assertEquals(ActionPerformed.REJECTED, model.approvers().get(0).actionPerformed());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-17T18:13:46Z"), model.approvers().get(0).lastUpdatedAt());
        Assertions.assertEquals("guufuzboyjathwtz", model.ticketId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-15T12:49:43Z"), model.createdAt());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-25T10:05:56Z"), model.stateChangedAt());
        Assertions.assertEquals("mwmdxmebwjscjpa", model.requestMetadata().resourceAction());
        Assertions.assertEquals("xveabf", model.requestMetadata().approvalCallbackRoute());
        Assertions.assertEquals("nmwmqtibx", model.requestMetadata().approvalCallbackPayload());
        Assertions.assertEquals(ApprovalStatus.PENDING, model.requestMetadata().approvalStatus());
    }
}
