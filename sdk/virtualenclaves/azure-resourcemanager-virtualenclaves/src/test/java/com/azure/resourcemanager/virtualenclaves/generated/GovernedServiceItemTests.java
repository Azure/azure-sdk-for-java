// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.virtualenclaves.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.virtualenclaves.models.GovernedServiceItem;
import com.azure.resourcemanager.virtualenclaves.models.GovernedServiceItemEnforcement;
import com.azure.resourcemanager.virtualenclaves.models.GovernedServiceItemOption;
import com.azure.resourcemanager.virtualenclaves.models.GovernedServiceItemPolicyAction;
import com.azure.resourcemanager.virtualenclaves.models.ServiceIdentifier;
import org.junit.jupiter.api.Assertions;

public final class GovernedServiceItemTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GovernedServiceItem model = BinaryData.fromString(
            "{\"serviceId\":\"DataConnectors\",\"serviceName\":\"ureximoryocfs\",\"option\":\"Allow\",\"enforcement\":\"Disabled\",\"policyAction\":\"Enforce\",\"initiatives\":[\"tki\",\"uxh\",\"yudxorrqnbp\"]}")
            .toObject(GovernedServiceItem.class);
        Assertions.assertEquals(ServiceIdentifier.DATA_CONNECTORS, model.serviceId());
        Assertions.assertEquals(GovernedServiceItemOption.ALLOW, model.option());
        Assertions.assertEquals(GovernedServiceItemEnforcement.DISABLED, model.enforcement());
        Assertions.assertEquals(GovernedServiceItemPolicyAction.ENFORCE, model.policyAction());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GovernedServiceItem model = new GovernedServiceItem().withServiceId(ServiceIdentifier.DATA_CONNECTORS)
            .withOption(GovernedServiceItemOption.ALLOW)
            .withEnforcement(GovernedServiceItemEnforcement.DISABLED)
            .withPolicyAction(GovernedServiceItemPolicyAction.ENFORCE);
        model = BinaryData.fromObject(model).toObject(GovernedServiceItem.class);
        Assertions.assertEquals(ServiceIdentifier.DATA_CONNECTORS, model.serviceId());
        Assertions.assertEquals(GovernedServiceItemOption.ALLOW, model.option());
        Assertions.assertEquals(GovernedServiceItemEnforcement.DISABLED, model.enforcement());
        Assertions.assertEquals(GovernedServiceItemPolicyAction.ENFORCE, model.policyAction());
    }
}
