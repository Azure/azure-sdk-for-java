// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.virtualenclaves.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.virtualenclaves.VirtualEnclavesManager;
import com.azure.resourcemanager.virtualenclaves.models.ActionPerformed;
import com.azure.resourcemanager.virtualenclaves.models.ApprovalResource;
import com.azure.resourcemanager.virtualenclaves.models.ApprovalStatus;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ApprovalsListByParentMockTests {
    @Test
    public void testListByParent() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Running\",\"parentResourceId\":\"chygtvxbyjane\",\"grandparentResourceId\":\"bdpkxyqvgx\",\"approvers\":[{\"approverEntraId\":\"detv\",\"actionPerformed\":\"Rejected\",\"lastUpdatedAt\":\"2021-04-16T12:52:04Z\"}],\"ticketId\":\"xuwsai\",\"createdAt\":\"2021-06-06T00:47:44Z\",\"stateChangedAt\":\"2021-06-25T20:38Z\",\"requestMetadata\":{\"resourceAction\":\"osbz\",\"approvalCallbackRoute\":\"hg\",\"approvalCallbackPayload\":\"kb\",\"approvalStatus\":\"Rejected\"}},\"id\":\"olg\",\"name\":\"y\",\"type\":\"xpvelszerqzevxo\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        VirtualEnclavesManager manager = VirtualEnclavesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<ApprovalResource> response
            = manager.approvals().listByParent("qba", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("chygtvxbyjane", response.iterator().next().properties().parentResourceId());
        Assertions.assertEquals("bdpkxyqvgx", response.iterator().next().properties().grandparentResourceId());
        Assertions.assertEquals("detv", response.iterator().next().properties().approvers().get(0).approverEntraId());
        Assertions.assertEquals(ActionPerformed.REJECTED,
            response.iterator().next().properties().approvers().get(0).actionPerformed());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-16T12:52:04Z"),
            response.iterator().next().properties().approvers().get(0).lastUpdatedAt());
        Assertions.assertEquals("xuwsai", response.iterator().next().properties().ticketId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-06T00:47:44Z"),
            response.iterator().next().properties().createdAt());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-25T20:38Z"),
            response.iterator().next().properties().stateChangedAt());
        Assertions.assertEquals("osbz", response.iterator().next().properties().requestMetadata().resourceAction());
        Assertions.assertEquals("hg",
            response.iterator().next().properties().requestMetadata().approvalCallbackRoute());
        Assertions.assertEquals("kb",
            response.iterator().next().properties().requestMetadata().approvalCallbackPayload());
        Assertions.assertEquals(ApprovalStatus.REJECTED,
            response.iterator().next().properties().requestMetadata().approvalStatus());
    }
}
