// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.virtualenclaves.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.virtualenclaves.fluent.models.ApprovalResourceInner;
import com.azure.resourcemanager.virtualenclaves.models.ActionPerformed;
import com.azure.resourcemanager.virtualenclaves.models.ApprovalProperties;
import com.azure.resourcemanager.virtualenclaves.models.ApprovalStatus;
import com.azure.resourcemanager.virtualenclaves.models.Approver;
import com.azure.resourcemanager.virtualenclaves.models.RequestMetadata;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ApprovalResourceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ApprovalResourceInner model = BinaryData.fromString(
            "{\"properties\":{\"provisioningState\":\"NotSpecified\",\"parentResourceId\":\"vi\",\"grandparentResourceId\":\"uwivkxoy\",\"approvers\":[{\"approverEntraId\":\"bixxrt\",\"actionPerformed\":\"Rejected\",\"lastUpdatedAt\":\"2021-07-09T17:32:45Z\"},{\"approverEntraId\":\"pwpgclrci\",\"actionPerformed\":\"Approved\",\"lastUpdatedAt\":\"2021-01-12T06:52:04Z\"}],\"ticketId\":\"frkenxpmyyefrp\",\"createdAt\":\"2021-07-24T22:23:07Z\",\"stateChangedAt\":\"2021-06-23T06:19:31Z\",\"requestMetadata\":{\"resourceAction\":\"qskaw\",\"approvalCallbackRoute\":\"qvmmbn\",\"approvalCallbackPayload\":\"fr\",\"approvalStatus\":\"Approved\"}},\"id\":\"zmegnitgvk\",\"name\":\"lzyqd\",\"type\":\"fegcea\"}")
            .toObject(ApprovalResourceInner.class);
        Assertions.assertEquals("vi", model.properties().parentResourceId());
        Assertions.assertEquals("uwivkxoy", model.properties().grandparentResourceId());
        Assertions.assertEquals("bixxrt", model.properties().approvers().get(0).approverEntraId());
        Assertions.assertEquals(ActionPerformed.REJECTED, model.properties().approvers().get(0).actionPerformed());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-09T17:32:45Z"),
            model.properties().approvers().get(0).lastUpdatedAt());
        Assertions.assertEquals("frkenxpmyyefrp", model.properties().ticketId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-24T22:23:07Z"), model.properties().createdAt());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-23T06:19:31Z"), model.properties().stateChangedAt());
        Assertions.assertEquals("qskaw", model.properties().requestMetadata().resourceAction());
        Assertions.assertEquals("qvmmbn", model.properties().requestMetadata().approvalCallbackRoute());
        Assertions.assertEquals("fr", model.properties().requestMetadata().approvalCallbackPayload());
        Assertions.assertEquals(ApprovalStatus.APPROVED, model.properties().requestMetadata().approvalStatus());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ApprovalResourceInner model
            = new ApprovalResourceInner().withProperties(new ApprovalProperties().withParentResourceId("vi")
                .withGrandparentResourceId("uwivkxoy")
                .withApprovers(Arrays.asList(
                    new Approver().withApproverEntraId("bixxrt")
                        .withActionPerformed(ActionPerformed.REJECTED)
                        .withLastUpdatedAt(OffsetDateTime.parse("2021-07-09T17:32:45Z")),
                    new Approver().withApproverEntraId("pwpgclrci")
                        .withActionPerformed(ActionPerformed.APPROVED)
                        .withLastUpdatedAt(OffsetDateTime.parse("2021-01-12T06:52:04Z"))))
                .withTicketId("frkenxpmyyefrp")
                .withCreatedAt(OffsetDateTime.parse("2021-07-24T22:23:07Z"))
                .withStateChangedAt(OffsetDateTime.parse("2021-06-23T06:19:31Z"))
                .withRequestMetadata(new RequestMetadata().withResourceAction("qskaw")
                    .withApprovalCallbackRoute("qvmmbn")
                    .withApprovalCallbackPayload("fr")
                    .withApprovalStatus(ApprovalStatus.APPROVED)));
        model = BinaryData.fromObject(model).toObject(ApprovalResourceInner.class);
        Assertions.assertEquals("vi", model.properties().parentResourceId());
        Assertions.assertEquals("uwivkxoy", model.properties().grandparentResourceId());
        Assertions.assertEquals("bixxrt", model.properties().approvers().get(0).approverEntraId());
        Assertions.assertEquals(ActionPerformed.REJECTED, model.properties().approvers().get(0).actionPerformed());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-09T17:32:45Z"),
            model.properties().approvers().get(0).lastUpdatedAt());
        Assertions.assertEquals("frkenxpmyyefrp", model.properties().ticketId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-24T22:23:07Z"), model.properties().createdAt());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-23T06:19:31Z"), model.properties().stateChangedAt());
        Assertions.assertEquals("qskaw", model.properties().requestMetadata().resourceAction());
        Assertions.assertEquals("qvmmbn", model.properties().requestMetadata().approvalCallbackRoute());
        Assertions.assertEquals("fr", model.properties().requestMetadata().approvalCallbackPayload());
        Assertions.assertEquals(ApprovalStatus.APPROVED, model.properties().requestMetadata().approvalStatus());
    }
}
