// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.virtualenclaves.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.virtualenclaves.models.EnclaveConnectionProperties;
import org.junit.jupiter.api.Assertions;

public final class EnclaveConnectionPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        EnclaveConnectionProperties model = BinaryData.fromString(
            "{\"state\":\"PendingApproval\",\"communityResourceId\":\"jlwuenvrkp\",\"sourceResourceId\":\"ou\",\"sourceCidr\":\"bre\",\"destinationEndpointId\":\"qaaysjkixqt\",\"provisioningState\":\"Running\",\"resourceCollection\":[\"zlwfffiakp\"]}")
            .toObject(EnclaveConnectionProperties.class);
        Assertions.assertEquals("jlwuenvrkp", model.communityResourceId());
        Assertions.assertEquals("ou", model.sourceResourceId());
        Assertions.assertEquals("bre", model.sourceCidr());
        Assertions.assertEquals("qaaysjkixqt", model.destinationEndpointId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        EnclaveConnectionProperties model = new EnclaveConnectionProperties().withCommunityResourceId("jlwuenvrkp")
            .withSourceResourceId("ou")
            .withSourceCidr("bre")
            .withDestinationEndpointId("qaaysjkixqt");
        model = BinaryData.fromObject(model).toObject(EnclaveConnectionProperties.class);
        Assertions.assertEquals("jlwuenvrkp", model.communityResourceId());
        Assertions.assertEquals("ou", model.sourceResourceId());
        Assertions.assertEquals("bre", model.sourceCidr());
        Assertions.assertEquals("qaaysjkixqt", model.destinationEndpointId());
    }
}
