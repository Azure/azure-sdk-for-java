// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.virtualenclaves.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.virtualenclaves.models.EnclaveVirtualNetworkModel;
import com.azure.resourcemanager.virtualenclaves.models.SubnetConfiguration;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class EnclaveVirtualNetworkModelTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        EnclaveVirtualNetworkModel model = BinaryData.fromString(
            "{\"networkName\":\"jdyggdtji\",\"networkSize\":\"b\",\"customCidrRange\":\"ofqweykhmenevfye\",\"subnetConfigurations\":[{\"subnetName\":\"hybcibv\",\"subnetResourceId\":\"dcsi\",\"networkPrefixSize\":1451837179,\"subnetDelegation\":\"naamde\",\"addressPrefix\":\"eh\",\"networkSecurityGroupResourceId\":\"qsc\"},{\"subnetName\":\"eypvhezrkg\",\"subnetResourceId\":\"c\",\"networkPrefixSize\":1889311419,\"subnetDelegation\":\"fovgmkqsleyyvxy\",\"addressPrefix\":\"pkc\",\"networkSecurityGroupResourceId\":\"tpngjcrcczsqpjh\"}],\"allowSubnetCommunication\":false}")
            .toObject(EnclaveVirtualNetworkModel.class);
        Assertions.assertEquals("jdyggdtji", model.networkName());
        Assertions.assertEquals("b", model.networkSize());
        Assertions.assertEquals("ofqweykhmenevfye", model.customCidrRange());
        Assertions.assertEquals("hybcibv", model.subnetConfigurations().get(0).subnetName());
        Assertions.assertEquals(1451837179, model.subnetConfigurations().get(0).networkPrefixSize());
        Assertions.assertEquals("naamde", model.subnetConfigurations().get(0).subnetDelegation());
        Assertions.assertFalse(model.allowSubnetCommunication());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        EnclaveVirtualNetworkModel model = new EnclaveVirtualNetworkModel().withNetworkName("jdyggdtji")
            .withNetworkSize("b")
            .withCustomCidrRange("ofqweykhmenevfye")
            .withSubnetConfigurations(Arrays.asList(
                new SubnetConfiguration().withSubnetName("hybcibv")
                    .withNetworkPrefixSize(1451837179)
                    .withSubnetDelegation("naamde"),
                new SubnetConfiguration().withSubnetName("eypvhezrkg")
                    .withNetworkPrefixSize(1889311419)
                    .withSubnetDelegation("fovgmkqsleyyvxy")))
            .withAllowSubnetCommunication(false);
        model = BinaryData.fromObject(model).toObject(EnclaveVirtualNetworkModel.class);
        Assertions.assertEquals("jdyggdtji", model.networkName());
        Assertions.assertEquals("b", model.networkSize());
        Assertions.assertEquals("ofqweykhmenevfye", model.customCidrRange());
        Assertions.assertEquals("hybcibv", model.subnetConfigurations().get(0).subnetName());
        Assertions.assertEquals(1451837179, model.subnetConfigurations().get(0).networkPrefixSize());
        Assertions.assertEquals("naamde", model.subnetConfigurations().get(0).subnetDelegation());
        Assertions.assertFalse(model.allowSubnetCommunication());
    }
}
