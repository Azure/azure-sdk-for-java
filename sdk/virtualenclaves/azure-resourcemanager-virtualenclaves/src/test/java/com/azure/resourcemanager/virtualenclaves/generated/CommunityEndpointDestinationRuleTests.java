// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.virtualenclaves.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.virtualenclaves.models.CommunityEndpointDestinationRule;
import com.azure.resourcemanager.virtualenclaves.models.CommunityEndpointProtocol;
import com.azure.resourcemanager.virtualenclaves.models.DestinationType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class CommunityEndpointDestinationRuleTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CommunityEndpointDestinationRule model = BinaryData.fromString(
            "{\"destinationType\":\"PrivateNetwork\",\"protocols\":[\"UDP\",\"UDP\",\"AH\"],\"transitHubResourceId\":\"qzz\",\"endpointRuleName\":\"jvpglydzgk\",\"destination\":\"qeevt\",\"ports\":\"pryu\"}")
            .toObject(CommunityEndpointDestinationRule.class);
        Assertions.assertEquals(DestinationType.PRIVATE_NETWORK, model.destinationType());
        Assertions.assertEquals(CommunityEndpointProtocol.UDP, model.protocols().get(0));
        Assertions.assertEquals("qzz", model.transitHubResourceId());
        Assertions.assertEquals("jvpglydzgk", model.endpointRuleName());
        Assertions.assertEquals("qeevt", model.destination());
        Assertions.assertEquals("pryu", model.ports());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CommunityEndpointDestinationRule model
            = new CommunityEndpointDestinationRule().withDestinationType(DestinationType.PRIVATE_NETWORK)
                .withProtocols(Arrays.asList(CommunityEndpointProtocol.UDP, CommunityEndpointProtocol.UDP,
                    CommunityEndpointProtocol.AH))
                .withTransitHubResourceId("qzz")
                .withEndpointRuleName("jvpglydzgk")
                .withDestination("qeevt")
                .withPorts("pryu");
        model = BinaryData.fromObject(model).toObject(CommunityEndpointDestinationRule.class);
        Assertions.assertEquals(DestinationType.PRIVATE_NETWORK, model.destinationType());
        Assertions.assertEquals(CommunityEndpointProtocol.UDP, model.protocols().get(0));
        Assertions.assertEquals("qzz", model.transitHubResourceId());
        Assertions.assertEquals("jvpglydzgk", model.endpointRuleName());
        Assertions.assertEquals("qeevt", model.destination());
        Assertions.assertEquals("pryu", model.ports());
    }
}
