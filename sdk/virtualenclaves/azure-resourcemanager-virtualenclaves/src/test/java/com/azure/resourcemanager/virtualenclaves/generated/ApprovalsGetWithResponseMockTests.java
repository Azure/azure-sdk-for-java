// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.virtualenclaves.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.virtualenclaves.VirtualEnclavesManager;
import com.azure.resourcemanager.virtualenclaves.models.ActionPerformed;
import com.azure.resourcemanager.virtualenclaves.models.ApprovalResource;
import com.azure.resourcemanager.virtualenclaves.models.ApprovalStatus;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ApprovalsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"NotSpecified\",\"parentResourceId\":\"h\",\"grandparentResourceId\":\"e\",\"approvers\":[{\"approverEntraId\":\"ukaobrlbpgsnbag\",\"actionPerformed\":\"Approved\",\"lastUpdatedAt\":\"2021-10-01T12:01:51Z\"},{\"approverEntraId\":\"hg\",\"actionPerformed\":\"Approved\",\"lastUpdatedAt\":\"2021-06-14T23:57:58Z\"},{\"approverEntraId\":\"wakywalhjymxcgq\",\"actionPerformed\":\"Rejected\",\"lastUpdatedAt\":\"2021-04-13T17:52:46Z\"},{\"approverEntraId\":\"rclsso\",\"actionPerformed\":\"Rejected\",\"lastUpdatedAt\":\"2021-08-03T00:39:12Z\"}],\"ticketId\":\"vtfycnlbvgjcodk\",\"createdAt\":\"2021-09-14T01:02:16Z\",\"stateChangedAt\":\"2021-02-25T20:23:50Z\",\"requestMetadata\":{\"resourceAction\":\"ytssikiz\",\"approvalCallbackRoute\":\"ufqbvntnr\",\"approvalCallbackPayload\":\"qsorh\",\"approvalStatus\":\"Rejected\"}},\"id\":\"gnlykm\",\"name\":\"cpwzv\",\"type\":\"doksqdtiwlwxlbon\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        VirtualEnclavesManager manager = VirtualEnclavesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        ApprovalResource response
            = manager.approvals().getWithResponse("dbckyo", "kxkxhnegk", com.azure.core.util.Context.NONE).getValue();

        Assertions.assertEquals("h", response.properties().parentResourceId());
        Assertions.assertEquals("e", response.properties().grandparentResourceId());
        Assertions.assertEquals("ukaobrlbpgsnbag", response.properties().approvers().get(0).approverEntraId());
        Assertions.assertEquals(ActionPerformed.APPROVED, response.properties().approvers().get(0).actionPerformed());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-01T12:01:51Z"),
            response.properties().approvers().get(0).lastUpdatedAt());
        Assertions.assertEquals("vtfycnlbvgjcodk", response.properties().ticketId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-14T01:02:16Z"), response.properties().createdAt());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-25T20:23:50Z"), response.properties().stateChangedAt());
        Assertions.assertEquals("ytssikiz", response.properties().requestMetadata().resourceAction());
        Assertions.assertEquals("ufqbvntnr", response.properties().requestMetadata().approvalCallbackRoute());
        Assertions.assertEquals("qsorh", response.properties().requestMetadata().approvalCallbackPayload());
        Assertions.assertEquals(ApprovalStatus.REJECTED, response.properties().requestMetadata().approvalStatus());
    }
}
