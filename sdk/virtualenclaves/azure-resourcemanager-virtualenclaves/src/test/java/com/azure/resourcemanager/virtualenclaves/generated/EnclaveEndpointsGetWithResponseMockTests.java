// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.virtualenclaves.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.virtualenclaves.VirtualEnclavesManager;
import com.azure.resourcemanager.virtualenclaves.models.EnclaveEndpointProtocol;
import com.azure.resourcemanager.virtualenclaves.models.EnclaveEndpointResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class EnclaveEndpointsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"ruleCollection\":[{\"protocols\":[\"ICMP\",\"UDP\",\"UDP\"],\"endpointRuleName\":\"rvvmqfloygb\",\"destination\":\"wumgx\",\"ports\":\"dhp\"},{\"protocols\":[\"ESP\",\"TCP\"],\"endpointRuleName\":\"jddvjsaqw\",\"destination\":\"mmwllc\",\"ports\":\"srsxaptefh\"},{\"protocols\":[\"ESP\",\"UDP\",\"ICMP\",\"ANY\"],\"endpointRuleName\":\"ljnhvlqj\",\"destination\":\"kpeeksnbksdqhj\",\"ports\":\"klxesl\"},{\"protocols\":[\"ICMP\",\"ANY\",\"ANY\",\"ICMP\"],\"endpointRuleName\":\"oqmavnwqjwgo\",\"destination\":\"lejjjkxy\",\"ports\":\"fdb\"}],\"resourceCollection\":[\"ztensvkzykjtj\",\"nsxfwu\",\"hcdpkupnqrmgj\",\"bpkuwxeoio\"],\"provisioningState\":\"Updating\"},\"location\":\"fa\",\"tags\":{\"fwxrzxmdew\":\"zwfbcyaykmmfzs\",\"lbjazejww\":\"rsxkr\"},\"id\":\"iyoypsuhbrnnhj\",\"name\":\"sqwjhqkbiwetpozy\",\"type\":\"yqiq\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        VirtualEnclavesManager manager = VirtualEnclavesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        EnclaveEndpointResource response = manager.enclaveEndpoints()
            .getWithResponse("syeipqd", "mjtgrqg", "gkkileplkcsmkn", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("fa", response.location());
        Assertions.assertEquals("zwfbcyaykmmfzs", response.tags().get("fwxrzxmdew"));
        Assertions.assertEquals(EnclaveEndpointProtocol.ICMP,
            response.properties().ruleCollection().get(0).protocols().get(0));
        Assertions.assertEquals("rvvmqfloygb", response.properties().ruleCollection().get(0).endpointRuleName());
        Assertions.assertEquals("wumgx", response.properties().ruleCollection().get(0).destination());
        Assertions.assertEquals("dhp", response.properties().ruleCollection().get(0).ports());
    }
}
