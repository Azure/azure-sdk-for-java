// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.virtualenclaves.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.virtualenclaves.models.CommunityEndpointDestinationRule;
import com.azure.resourcemanager.virtualenclaves.models.CommunityEndpointProperties;
import com.azure.resourcemanager.virtualenclaves.models.CommunityEndpointProtocol;
import com.azure.resourcemanager.virtualenclaves.models.DestinationType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class CommunityEndpointPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CommunityEndpointProperties model = BinaryData.fromString(
            "{\"ruleCollection\":[{\"destinationType\":\"FQDNTag\",\"protocols\":[\"ICMP\",\"AH\",\"HTTPS\"],\"transitHubResourceId\":\"widf\",\"endpointRuleName\":\"sspuunnoxyhkx\",\"destination\":\"ddrihpf\",\"ports\":\"qcaaewdaomdjvl\"},{\"destinationType\":\"FQDN\",\"protocols\":[\"ANY\",\"TCP\",\"HTTPS\",\"AH\"],\"transitHubResourceId\":\"geivsiykzkdncj\",\"endpointRuleName\":\"onbzoggculapzwy\",\"destination\":\"gogtqxepnylbf\",\"ports\":\"jlyjtlvofq\"},{\"destinationType\":\"IPAddress\",\"protocols\":[\"UDP\"],\"transitHubResourceId\":\"yfm\",\"endpointRuleName\":\"uxrkjp\",\"destination\":\"w\",\"ports\":\"zwiivwzjbhyzs\"},{\"destinationType\":\"FQDNTag\",\"protocols\":[\"AH\",\"ICMP\",\"HTTP\"],\"transitHubResourceId\":\"negvmnvuqe\",\"endpointRuleName\":\"lds\",\"destination\":\"stjbkkdmfl\",\"ports\":\"stmjlxrri\"}],\"resourceCollection\":[\"apeewchpxlkt\",\"kuziycsle\",\"ufuztcktyhjtq\"],\"provisioningState\":\"Updating\"}")
            .toObject(CommunityEndpointProperties.class);
        Assertions.assertEquals(DestinationType.FQDNTAG, model.ruleCollection().get(0).destinationType());
        Assertions.assertEquals(CommunityEndpointProtocol.ICMP, model.ruleCollection().get(0).protocols().get(0));
        Assertions.assertEquals("widf", model.ruleCollection().get(0).transitHubResourceId());
        Assertions.assertEquals("sspuunnoxyhkx", model.ruleCollection().get(0).endpointRuleName());
        Assertions.assertEquals("ddrihpf", model.ruleCollection().get(0).destination());
        Assertions.assertEquals("qcaaewdaomdjvl", model.ruleCollection().get(0).ports());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CommunityEndpointProperties model = new CommunityEndpointProperties().withRuleCollection(Arrays.asList(
            new CommunityEndpointDestinationRule().withDestinationType(DestinationType.FQDNTAG)
                .withProtocols(Arrays.asList(CommunityEndpointProtocol.ICMP, CommunityEndpointProtocol.AH,
                    CommunityEndpointProtocol.HTTPS))
                .withTransitHubResourceId("widf")
                .withEndpointRuleName("sspuunnoxyhkx")
                .withDestination("ddrihpf")
                .withPorts("qcaaewdaomdjvl"),
            new CommunityEndpointDestinationRule().withDestinationType(DestinationType.FQDN)
                .withProtocols(Arrays.asList(CommunityEndpointProtocol.ANY, CommunityEndpointProtocol.TCP,
                    CommunityEndpointProtocol.HTTPS, CommunityEndpointProtocol.AH))
                .withTransitHubResourceId("geivsiykzkdncj")
                .withEndpointRuleName("onbzoggculapzwy")
                .withDestination("gogtqxepnylbf")
                .withPorts("jlyjtlvofq"),
            new CommunityEndpointDestinationRule().withDestinationType(DestinationType.IPADDRESS)
                .withProtocols(Arrays.asList(CommunityEndpointProtocol.UDP))
                .withTransitHubResourceId("yfm")
                .withEndpointRuleName("uxrkjp")
                .withDestination("w")
                .withPorts("zwiivwzjbhyzs"),
            new CommunityEndpointDestinationRule().withDestinationType(DestinationType.FQDNTAG)
                .withProtocols(Arrays.asList(CommunityEndpointProtocol.AH, CommunityEndpointProtocol.ICMP,
                    CommunityEndpointProtocol.HTTP))
                .withTransitHubResourceId("negvmnvuqe")
                .withEndpointRuleName("lds")
                .withDestination("stjbkkdmfl")
                .withPorts("stmjlxrri")));
        model = BinaryData.fromObject(model).toObject(CommunityEndpointProperties.class);
        Assertions.assertEquals(DestinationType.FQDNTAG, model.ruleCollection().get(0).destinationType());
        Assertions.assertEquals(CommunityEndpointProtocol.ICMP, model.ruleCollection().get(0).protocols().get(0));
        Assertions.assertEquals("widf", model.ruleCollection().get(0).transitHubResourceId());
        Assertions.assertEquals("sspuunnoxyhkx", model.ruleCollection().get(0).endpointRuleName());
        Assertions.assertEquals("ddrihpf", model.ruleCollection().get(0).destination());
        Assertions.assertEquals("qcaaewdaomdjvl", model.ruleCollection().get(0).ports());
    }
}
