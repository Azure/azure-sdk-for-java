// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.virtualenclaves.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.virtualenclaves.models.TransitHubProperties;
import com.azure.resourcemanager.virtualenclaves.models.TransitHubState;
import com.azure.resourcemanager.virtualenclaves.models.TransitOption;
import com.azure.resourcemanager.virtualenclaves.models.TransitOptionParams;
import com.azure.resourcemanager.virtualenclaves.models.TransitOptionType;
import org.junit.jupiter.api.Assertions;

public final class TransitHubPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TransitHubProperties model = BinaryData.fromString(
            "{\"provisioningState\":\"Canceled\",\"state\":\"Failed\",\"transitOption\":{\"type\":\"Gateway\",\"params\":{\"scaleUnits\":3361403308892839308,\"remoteVirtualNetworkId\":\"hqlbjbsybbq\"}},\"resourceCollection\":[\"t\",\"dgmfpgvmpipasl\",\"haq\",\"x\"]}")
            .toObject(TransitHubProperties.class);
        Assertions.assertEquals(TransitHubState.FAILED, model.state());
        Assertions.assertEquals(TransitOptionType.GATEWAY, model.transitOption().type());
        Assertions.assertEquals(3361403308892839308L, model.transitOption().params().scaleUnits());
        Assertions.assertEquals("hqlbjbsybbq", model.transitOption().params().remoteVirtualNetworkId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TransitHubProperties model = new TransitHubProperties().withState(TransitHubState.FAILED)
            .withTransitOption(new TransitOption().withType(TransitOptionType.GATEWAY)
                .withParams(new TransitOptionParams().withScaleUnits(3361403308892839308L)
                    .withRemoteVirtualNetworkId("hqlbjbsybbq")));
        model = BinaryData.fromObject(model).toObject(TransitHubProperties.class);
        Assertions.assertEquals(TransitHubState.FAILED, model.state());
        Assertions.assertEquals(TransitOptionType.GATEWAY, model.transitOption().type());
        Assertions.assertEquals(3361403308892839308L, model.transitOption().params().scaleUnits());
        Assertions.assertEquals("hqlbjbsybbq", model.transitOption().params().remoteVirtualNetworkId());
    }
}
