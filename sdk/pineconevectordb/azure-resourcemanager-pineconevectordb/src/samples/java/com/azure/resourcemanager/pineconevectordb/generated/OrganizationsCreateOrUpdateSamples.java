// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.pineconevectordb.generated;

import com.azure.resourcemanager.pineconevectordb.models.ManagedServiceIdentity;
import com.azure.resourcemanager.pineconevectordb.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.pineconevectordb.models.MarketplaceDetails;
import com.azure.resourcemanager.pineconevectordb.models.OfferDetails;
import com.azure.resourcemanager.pineconevectordb.models.OrganizationProperties;
import com.azure.resourcemanager.pineconevectordb.models.PartnerProperties;
import com.azure.resourcemanager.pineconevectordb.models.SingleSignOnPropertiesV2;
import com.azure.resourcemanager.pineconevectordb.models.SingleSignOnStates;
import com.azure.resourcemanager.pineconevectordb.models.SingleSignOnType;
import com.azure.resourcemanager.pineconevectordb.models.UserAssignedIdentity;
import com.azure.resourcemanager.pineconevectordb.models.UserDetails;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for Organizations CreateOrUpdate.
 */
public final class OrganizationsCreateOrUpdateSamples {
    /*
     * x-ms-original-file: 2024-10-22-preview/Organizations_CreateOrUpdate_MaximumSet_Gen.json
     */
    /**
     * Sample code: Organizations_CreateOrUpdate_MaximumSet.
     * 
     * @param manager Entry point to PineconeVectorDbManager.
     */
    public static void organizationsCreateOrUpdateMaximumSet(
        com.azure.resourcemanager.pineconevectordb.PineconeVectorDbManager manager) {
        manager.organizations()
            .define("example-organization-name")
            .withRegion("us-east")
            .withExistingResourceGroup("rgopenapi")
            .withTags(mapOf("my-tag", "tag.value"))
            .withProperties(new OrganizationProperties()
                .withMarketplace(new MarketplaceDetails().withSubscriptionId("76a38ef6-c8c1-4f0d-bfe0-00ec782c8077")
                    .withOfferDetails(new OfferDetails().withPublisherId("4d194daf-fa20-46a8-bfb4-5b7d96cae009")
                        .withOfferId("013124d0-bf05-4eab-a6bb-01fa83870642")
                        .withPlanId("62dda065-5acd-4ac5-b418-8610beed92a2")
                        .withPlanName("Freemium")
                        .withTermUnit("der")
                        .withTermId("a2b7ce01-f06d-4874-9f77-6ea4a4875c16")))
                .withUser(new UserDetails().withFirstName("Jimmy")
                    .withLastName("McExample")
                    .withEmailAddress("example.user@example.com")
                    .withUpn("example.user@example.com")
                    .withPhoneNumber("555-555-5555"))
                .withPartnerProperties(new PartnerProperties().withDisplayName("My Example Organization"))
                .withSingleSignOnProperties(new SingleSignOnPropertiesV2().withType(SingleSignOnType.SAML)
                    .withState(SingleSignOnStates.INITIAL)
                    .withEnterpriseAppId("44d3fb26-d8d5-41ff-9b9a-769737f22f13")
                    .withUrl("https://login.pinecone.io/?sso=true&connection=dfwgsqzkbrjqrglcsa")
                    .withAadDomains(Arrays.asList("exampledomain"))))
            .withIdentity(new ManagedServiceIdentity().withType(ManagedServiceIdentityType.NONE)
                .withUserAssignedIdentities(mapOf("ident904655400", new UserAssignedIdentity())))
            .create();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
