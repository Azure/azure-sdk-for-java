// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.pineconevectordb.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.pineconevectordb.PineconeVectorDbManager;
import com.azure.resourcemanager.pineconevectordb.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.pineconevectordb.models.OrganizationResource;
import com.azure.resourcemanager.pineconevectordb.models.SingleSignOnStates;
import com.azure.resourcemanager.pineconevectordb.models.SingleSignOnType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class OrganizationsGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"marketplace\":{\"subscriptionId\":\"kanyktzlcuiywg\",\"subscriptionStatus\":\"Unsubscribed\",\"offerDetails\":{\"publisherId\":\"gndrvynh\",\"offerId\":\"gpphrcgyn\",\"planId\":\"ocpecfvmmco\",\"planName\":\"sxlzevgbmqj\",\"termUnit\":\"bcypmi\",\"termId\":\"w\"}},\"user\":{\"firstName\":\"zuvccfwnfnbacfio\",\"lastName\":\"l\",\"emailAddress\":\"bxetqgtzxdpn\",\"upn\":\"qqwx\",\"phoneNumber\":\"feallnwsu\"},\"provisioningState\":\"Failed\",\"partnerProperties\":{\"displayName\":\"jampmngnzscxaqw\"},\"singleSignOnProperties\":{\"type\":\"OpenId\",\"state\":\"Enable\",\"enterpriseAppId\":\"onq\",\"url\":\"kvlrxnj\",\"aadDomains\":[\"eipheoflokeyy\",\"enjbdlwtgrhp\"]}},\"identity\":{\"principalId\":\"jumasx\",\"tenantId\":\"jpqyegu\",\"type\":\"SystemAssigned,UserAssigned\",\"userAssignedIdentities\":{\"pwlbjnpg\":{\"principalId\":\"xhejjzzvdud\",\"clientId\":\"dslfhotwmcy\"}}},\"location\":\"ftadehxnltyfs\",\"tags\":{\"nzwdejba\":\"usue\",\"xdn\":\"orxzdmohctbqvud\"},\"id\":\"nvowgujju\",\"name\":\"wdkcglhsl\",\"type\":\"zj\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PineconeVectorDbManager manager = PineconeVectorDbManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        OrganizationResource response = manager.organizations()
            .getByResourceGroupWithResponse("rvqdra", "hjybigehoqfbo", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("ftadehxnltyfs", response.location());
        Assertions.assertEquals("usue", response.tags().get("nzwdejba"));
        Assertions.assertEquals("kanyktzlcuiywg", response.properties().marketplace().subscriptionId());
        Assertions.assertEquals("gndrvynh", response.properties().marketplace().offerDetails().publisherId());
        Assertions.assertEquals("gpphrcgyn", response.properties().marketplace().offerDetails().offerId());
        Assertions.assertEquals("ocpecfvmmco", response.properties().marketplace().offerDetails().planId());
        Assertions.assertEquals("sxlzevgbmqj", response.properties().marketplace().offerDetails().planName());
        Assertions.assertEquals("bcypmi", response.properties().marketplace().offerDetails().termUnit());
        Assertions.assertEquals("w", response.properties().marketplace().offerDetails().termId());
        Assertions.assertEquals("zuvccfwnfnbacfio", response.properties().user().firstName());
        Assertions.assertEquals("l", response.properties().user().lastName());
        Assertions.assertEquals("bxetqgtzxdpn", response.properties().user().emailAddress());
        Assertions.assertEquals("qqwx", response.properties().user().upn());
        Assertions.assertEquals("feallnwsu", response.properties().user().phoneNumber());
        Assertions.assertEquals("jampmngnzscxaqw", response.properties().partnerProperties().displayName());
        Assertions.assertEquals(SingleSignOnType.OPEN_ID, response.properties().singleSignOnProperties().type());
        Assertions.assertEquals(SingleSignOnStates.ENABLE, response.properties().singleSignOnProperties().state());
        Assertions.assertEquals("onq", response.properties().singleSignOnProperties().enterpriseAppId());
        Assertions.assertEquals("kvlrxnj", response.properties().singleSignOnProperties().url());
        Assertions.assertEquals("eipheoflokeyy", response.properties().singleSignOnProperties().aadDomains().get(0));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED, response.identity().type());
    }
}
