// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.pineconevectordb.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.pineconevectordb.models.MarketplaceDetails;
import com.azure.resourcemanager.pineconevectordb.models.OfferDetails;
import com.azure.resourcemanager.pineconevectordb.models.OrganizationProperties;
import com.azure.resourcemanager.pineconevectordb.models.PartnerProperties;
import com.azure.resourcemanager.pineconevectordb.models.SingleSignOnPropertiesV2;
import com.azure.resourcemanager.pineconevectordb.models.SingleSignOnStates;
import com.azure.resourcemanager.pineconevectordb.models.SingleSignOnType;
import com.azure.resourcemanager.pineconevectordb.models.UserDetails;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class OrganizationPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OrganizationProperties model = BinaryData.fromString(
            "{\"marketplace\":{\"subscriptionId\":\"zrnf\",\"subscriptionStatus\":\"Unsubscribed\",\"offerDetails\":{\"publisherId\":\"gispemvtzfkufubl\",\"offerId\":\"ofx\",\"planId\":\"eofjaeqjh\",\"planName\":\"b\",\"termUnit\":\"v\",\"termId\":\"mjqulngsn\"}},\"user\":{\"firstName\":\"nbybkzgcwrwcl\",\"lastName\":\"xwrljdouskcqvkoc\",\"emailAddress\":\"cjdkwtnhxbnjbi\",\"upn\":\"qrglssainqpjwn\",\"phoneNumber\":\"ljfmppee\"},\"provisioningState\":\"Canceled\",\"partnerProperties\":{\"displayName\":\"xsabkyqdu\"},\"singleSignOnProperties\":{\"type\":\"Saml\",\"state\":\"Disable\",\"enterpriseAppId\":\"czdzev\",\"url\":\"hkr\",\"aadDomains\":[\"appd\"]}}")
            .toObject(OrganizationProperties.class);
        Assertions.assertEquals("zrnf", model.marketplace().subscriptionId());
        Assertions.assertEquals("gispemvtzfkufubl", model.marketplace().offerDetails().publisherId());
        Assertions.assertEquals("ofx", model.marketplace().offerDetails().offerId());
        Assertions.assertEquals("eofjaeqjh", model.marketplace().offerDetails().planId());
        Assertions.assertEquals("b", model.marketplace().offerDetails().planName());
        Assertions.assertEquals("v", model.marketplace().offerDetails().termUnit());
        Assertions.assertEquals("mjqulngsn", model.marketplace().offerDetails().termId());
        Assertions.assertEquals("nbybkzgcwrwcl", model.user().firstName());
        Assertions.assertEquals("xwrljdouskcqvkoc", model.user().lastName());
        Assertions.assertEquals("cjdkwtnhxbnjbi", model.user().emailAddress());
        Assertions.assertEquals("qrglssainqpjwn", model.user().upn());
        Assertions.assertEquals("ljfmppee", model.user().phoneNumber());
        Assertions.assertEquals("xsabkyqdu", model.partnerProperties().displayName());
        Assertions.assertEquals(SingleSignOnType.SAML, model.singleSignOnProperties().type());
        Assertions.assertEquals(SingleSignOnStates.DISABLE, model.singleSignOnProperties().state());
        Assertions.assertEquals("czdzev", model.singleSignOnProperties().enterpriseAppId());
        Assertions.assertEquals("hkr", model.singleSignOnProperties().url());
        Assertions.assertEquals("appd", model.singleSignOnProperties().aadDomains().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OrganizationProperties model = new OrganizationProperties()
            .withMarketplace(new MarketplaceDetails().withSubscriptionId("zrnf")
                .withOfferDetails(new OfferDetails().withPublisherId("gispemvtzfkufubl")
                    .withOfferId("ofx")
                    .withPlanId("eofjaeqjh")
                    .withPlanName("b")
                    .withTermUnit("v")
                    .withTermId("mjqulngsn")))
            .withUser(new UserDetails().withFirstName("nbybkzgcwrwcl")
                .withLastName("xwrljdouskcqvkoc")
                .withEmailAddress("cjdkwtnhxbnjbi")
                .withUpn("qrglssainqpjwn")
                .withPhoneNumber("ljfmppee"))
            .withPartnerProperties(new PartnerProperties().withDisplayName("xsabkyqdu"))
            .withSingleSignOnProperties(new SingleSignOnPropertiesV2().withType(SingleSignOnType.SAML)
                .withState(SingleSignOnStates.DISABLE)
                .withEnterpriseAppId("czdzev")
                .withUrl("hkr")
                .withAadDomains(Arrays.asList("appd")));
        model = BinaryData.fromObject(model).toObject(OrganizationProperties.class);
        Assertions.assertEquals("zrnf", model.marketplace().subscriptionId());
        Assertions.assertEquals("gispemvtzfkufubl", model.marketplace().offerDetails().publisherId());
        Assertions.assertEquals("ofx", model.marketplace().offerDetails().offerId());
        Assertions.assertEquals("eofjaeqjh", model.marketplace().offerDetails().planId());
        Assertions.assertEquals("b", model.marketplace().offerDetails().planName());
        Assertions.assertEquals("v", model.marketplace().offerDetails().termUnit());
        Assertions.assertEquals("mjqulngsn", model.marketplace().offerDetails().termId());
        Assertions.assertEquals("nbybkzgcwrwcl", model.user().firstName());
        Assertions.assertEquals("xwrljdouskcqvkoc", model.user().lastName());
        Assertions.assertEquals("cjdkwtnhxbnjbi", model.user().emailAddress());
        Assertions.assertEquals("qrglssainqpjwn", model.user().upn());
        Assertions.assertEquals("ljfmppee", model.user().phoneNumber());
        Assertions.assertEquals("xsabkyqdu", model.partnerProperties().displayName());
        Assertions.assertEquals(SingleSignOnType.SAML, model.singleSignOnProperties().type());
        Assertions.assertEquals(SingleSignOnStates.DISABLE, model.singleSignOnProperties().state());
        Assertions.assertEquals("czdzev", model.singleSignOnProperties().enterpriseAppId());
        Assertions.assertEquals("hkr", model.singleSignOnProperties().url());
        Assertions.assertEquals("appd", model.singleSignOnProperties().aadDomains().get(0));
    }
}
