// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.pineconevectordb.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.pineconevectordb.implementation.models.OrganizationResourceListResult;
import com.azure.resourcemanager.pineconevectordb.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.pineconevectordb.models.SingleSignOnStates;
import com.azure.resourcemanager.pineconevectordb.models.SingleSignOnType;
import org.junit.jupiter.api.Assertions;

public final class OrganizationResourceListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OrganizationResourceListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"marketplace\":{\"subscriptionId\":\"nb\",\"subscriptionStatus\":\"Subscribed\",\"offerDetails\":{\"publisherId\":\"abnmocpcyshu\",\"offerId\":\"zafb\",\"planId\":\"jjgpb\",\"planName\":\"qcjm\",\"termUnit\":\"javbqidtqajz\",\"termId\":\"l\"}},\"user\":{\"firstName\":\"kudjkrlkhb\",\"lastName\":\"hfepgzgqex\",\"emailAddress\":\"locx\",\"upn\":\"paierh\",\"phoneNumber\":\"csglum\"},\"provisioningState\":\"Canceled\",\"partnerProperties\":{\"displayName\":\"j\"},\"singleSignOnProperties\":{\"type\":\"Saml\",\"state\":\"Initial\",\"enterpriseAppId\":\"nbdxk\",\"url\":\"xo\",\"aadDomains\":[\"ionpimexg\",\"txgcpodgmaajr\",\"vdjwzrlovm\",\"lwhijcoejctbzaq\"]}},\"identity\":{\"principalId\":\"y\",\"tenantId\":\"kbfkg\",\"type\":\"SystemAssigned\",\"userAssignedIdentities\":{\"fjpgddtocjjxhvp\":{\"principalId\":\"xxppofm\",\"clientId\":\"x\"},\"deicbtwnpzao\":{\"principalId\":\"uexhdzx\",\"clientId\":\"qeojnxqbzvddntw\"}}},\"location\":\"uhrhcffcyddgl\",\"tags\":{\"wpyeicxmqciwqvh\":\"hjq\"},\"id\":\"hix\",\"name\":\"igdtopbob\",\"type\":\"og\"}],\"nextLink\":\"e\"}")
            .toObject(OrganizationResourceListResult.class);
        Assertions.assertEquals("uhrhcffcyddgl", model.value().get(0).location());
        Assertions.assertEquals("hjq", model.value().get(0).tags().get("wpyeicxmqciwqvh"));
        Assertions.assertEquals("nb", model.value().get(0).properties().marketplace().subscriptionId());
        Assertions.assertEquals("abnmocpcyshu",
            model.value().get(0).properties().marketplace().offerDetails().publisherId());
        Assertions.assertEquals("zafb", model.value().get(0).properties().marketplace().offerDetails().offerId());
        Assertions.assertEquals("jjgpb", model.value().get(0).properties().marketplace().offerDetails().planId());
        Assertions.assertEquals("qcjm", model.value().get(0).properties().marketplace().offerDetails().planName());
        Assertions.assertEquals("javbqidtqajz",
            model.value().get(0).properties().marketplace().offerDetails().termUnit());
        Assertions.assertEquals("l", model.value().get(0).properties().marketplace().offerDetails().termId());
        Assertions.assertEquals("kudjkrlkhb", model.value().get(0).properties().user().firstName());
        Assertions.assertEquals("hfepgzgqex", model.value().get(0).properties().user().lastName());
        Assertions.assertEquals("locx", model.value().get(0).properties().user().emailAddress());
        Assertions.assertEquals("paierh", model.value().get(0).properties().user().upn());
        Assertions.assertEquals("csglum", model.value().get(0).properties().user().phoneNumber());
        Assertions.assertEquals("j", model.value().get(0).properties().partnerProperties().displayName());
        Assertions.assertEquals(SingleSignOnType.SAML,
            model.value().get(0).properties().singleSignOnProperties().type());
        Assertions.assertEquals(SingleSignOnStates.INITIAL,
            model.value().get(0).properties().singleSignOnProperties().state());
        Assertions.assertEquals("nbdxk", model.value().get(0).properties().singleSignOnProperties().enterpriseAppId());
        Assertions.assertEquals("xo", model.value().get(0).properties().singleSignOnProperties().url());
        Assertions.assertEquals("ionpimexg",
            model.value().get(0).properties().singleSignOnProperties().aadDomains().get(0));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED, model.value().get(0).identity().type());
        Assertions.assertEquals("e", model.nextLink());
    }
}
