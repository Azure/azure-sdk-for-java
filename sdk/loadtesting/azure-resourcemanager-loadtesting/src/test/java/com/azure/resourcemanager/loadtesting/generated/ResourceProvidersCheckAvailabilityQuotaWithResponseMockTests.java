// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.loadtesting.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.loadtesting.LoadTestManager;
import com.azure.resourcemanager.loadtesting.models.CheckQuotaAvailabilityResponse;
import com.azure.resourcemanager.loadtesting.models.QuotaBucketRequest;
import com.azure.resourcemanager.loadtesting.models.QuotaBucketRequestPropertiesDimensions;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ResourceProvidersCheckAvailabilityQuotaWithResponseMockTests {
    @Test
    public void testCheckAvailabilityQuotaWithResponse() throws Exception {
        String responseStr
            = "{\"id\":\"og\",\"type\":\"m\",\"name\":\"a\",\"properties\":{\"isAvailable\":true,\"availabilityStatus\":\"z\"}}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        LoadTestManager manager = LoadTestManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        CheckQuotaAvailabilityResponse response = manager.resourceProviders()
            .checkAvailabilityQuotaWithResponse("icbtwnpzao", "vuhrhcffcyddgl",
                new QuotaBucketRequest().withCurrentUsage(553941063)
                    .withCurrentQuota(1041112743)
                    .withNewQuota(1652029285)
                    .withDimensions(new QuotaBucketRequestPropertiesDimensions().withSubscriptionId("eicxmqciwqvhkhi")
                        .withLocation("igdtopbob")),
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertTrue(response.isAvailable());
        Assertions.assertEquals("z", response.availabilityStatus());
    }
}
