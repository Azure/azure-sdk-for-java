// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.loadtesting.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.loadtesting.fluent.models.QuotaBucketRequestProperties;
import com.azure.resourcemanager.loadtesting.models.QuotaBucketRequestPropertiesDimensions;
import org.junit.jupiter.api.Assertions;

public final class QuotaBucketRequestPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        QuotaBucketRequestProperties model = BinaryData.fromString(
            "{\"currentUsage\":609393619,\"currentQuota\":693802,\"newQuota\":914724830,\"dimensions\":{\"subscriptionId\":\"bmbexppbhtqqro\",\"location\":\"p\"}}")
            .toObject(QuotaBucketRequestProperties.class);
        Assertions.assertEquals(609393619, model.currentUsage());
        Assertions.assertEquals(693802, model.currentQuota());
        Assertions.assertEquals(914724830, model.newQuota());
        Assertions.assertEquals("bmbexppbhtqqro", model.dimensions().subscriptionId());
        Assertions.assertEquals("p", model.dimensions().location());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        QuotaBucketRequestProperties model = new QuotaBucketRequestProperties().withCurrentUsage(609393619)
            .withCurrentQuota(693802)
            .withNewQuota(914724830)
            .withDimensions(
                new QuotaBucketRequestPropertiesDimensions().withSubscriptionId("bmbexppbhtqqro").withLocation("p"));
        model = BinaryData.fromObject(model).toObject(QuotaBucketRequestProperties.class);
        Assertions.assertEquals(609393619, model.currentUsage());
        Assertions.assertEquals(693802, model.currentQuota());
        Assertions.assertEquals(914724830, model.newQuota());
        Assertions.assertEquals("bmbexppbhtqqro", model.dimensions().subscriptionId());
        Assertions.assertEquals("p", model.dimensions().location());
    }
}
