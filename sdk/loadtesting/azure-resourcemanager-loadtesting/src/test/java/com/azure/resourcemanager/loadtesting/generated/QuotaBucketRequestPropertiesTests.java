// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.loadtesting.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.loadtesting.fluent.models.QuotaBucketRequestProperties;
import com.azure.resourcemanager.loadtesting.models.QuotaBucketRequestPropertiesDimensions;
import org.junit.jupiter.api.Assertions;

public final class QuotaBucketRequestPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        QuotaBucketRequestProperties model = BinaryData.fromString(
            "{\"currentUsage\":747491790,\"currentQuota\":1343054120,\"newQuota\":1034535063,\"dimensions\":{\"subscriptionId\":\"njbiksqrglssain\",\"location\":\"jwnzlljfmp\"}}")
            .toObject(QuotaBucketRequestProperties.class);
        Assertions.assertEquals(747491790, model.currentUsage());
        Assertions.assertEquals(1343054120, model.currentQuota());
        Assertions.assertEquals(1034535063, model.newQuota());
        Assertions.assertEquals("njbiksqrglssain", model.dimensions().subscriptionId());
        Assertions.assertEquals("jwnzlljfmp", model.dimensions().location());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        QuotaBucketRequestProperties model = new QuotaBucketRequestProperties().withCurrentUsage(747491790)
            .withCurrentQuota(1343054120)
            .withNewQuota(1034535063)
            .withDimensions(new QuotaBucketRequestPropertiesDimensions().withSubscriptionId("njbiksqrglssain")
                .withLocation("jwnzlljfmp"));
        model = BinaryData.fromObject(model).toObject(QuotaBucketRequestProperties.class);
        Assertions.assertEquals(747491790, model.currentUsage());
        Assertions.assertEquals(1343054120, model.currentQuota());
        Assertions.assertEquals(1034535063, model.newQuota());
        Assertions.assertEquals("njbiksqrglssain", model.dimensions().subscriptionId());
        Assertions.assertEquals("jwnzlljfmp", model.dimensions().location());
    }
}
