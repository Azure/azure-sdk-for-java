// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.loadtesting.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.loadtesting.LoadTestManager;
import com.azure.resourcemanager.loadtesting.models.CheckQuotaAvailabilityResponse;
import com.azure.resourcemanager.loadtesting.models.QuotaBucketRequest;
import com.azure.resourcemanager.loadtesting.models.QuotaBucketRequestPropertiesDimensions;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class QuotasCheckAvailabilityWithResponseMockTests {
    @Test
    public void testCheckAvailabilityWithResponse() throws Exception {
        String responseStr
            = "{\"id\":\"zscxaqwo\",\"type\":\"chcbonqvpkvlrxnj\",\"name\":\"eipheoflokeyy\",\"properties\":{\"isAvailable\":true,\"availabilityStatus\":\"dlwtgrhpdj\"}}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        LoadTestManager manager = LoadTestManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        CheckQuotaAvailabilityResponse response = manager.quotas()
            .checkAvailabilityWithResponse("ccfwnfnbacfion", "ebxetqgtzxdp",
                new QuotaBucketRequest().withCurrentUsage(847580815)
                    .withCurrentQuota(1376492737)
                    .withNewQuota(2122264998)
                    .withDimensions(new QuotaBucketRequestPropertiesDimensions().withSubscriptionId("eallnwsubisnj")
                        .withLocation("pmng")),
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(true, response.isAvailable());
        Assertions.assertEquals("dlwtgrhpdj", response.availabilityStatus());
    }
}
