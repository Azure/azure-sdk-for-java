// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.loadtesting.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.loadtesting.models.QuotaBucketRequestPropertiesDimensions;
import java.io.IOException;

/**
 * New quota request request properties.
 */
@Fluent
public final class QuotaBucketRequestProperties implements JsonSerializable<QuotaBucketRequestProperties> {
    /*
     * Current quota usage of the quota bucket.
     */
    private Integer currentUsage;

    /*
     * Current quota limit of the quota bucket.
     */
    private Integer currentQuota;

    /*
     * New quota limit of the quota bucket.
     */
    private Integer newQuota;

    /*
     * Dimensions for new quota request.
     */
    private QuotaBucketRequestPropertiesDimensions dimensions;

    /**
     * Creates an instance of QuotaBucketRequestProperties class.
     */
    public QuotaBucketRequestProperties() {
    }

    /**
     * Get the currentUsage property: Current quota usage of the quota bucket.
     * 
     * @return the currentUsage value.
     */
    public Integer currentUsage() {
        return this.currentUsage;
    }

    /**
     * Set the currentUsage property: Current quota usage of the quota bucket.
     * 
     * @param currentUsage the currentUsage value to set.
     * @return the QuotaBucketRequestProperties object itself.
     */
    public QuotaBucketRequestProperties withCurrentUsage(Integer currentUsage) {
        this.currentUsage = currentUsage;
        return this;
    }

    /**
     * Get the currentQuota property: Current quota limit of the quota bucket.
     * 
     * @return the currentQuota value.
     */
    public Integer currentQuota() {
        return this.currentQuota;
    }

    /**
     * Set the currentQuota property: Current quota limit of the quota bucket.
     * 
     * @param currentQuota the currentQuota value to set.
     * @return the QuotaBucketRequestProperties object itself.
     */
    public QuotaBucketRequestProperties withCurrentQuota(Integer currentQuota) {
        this.currentQuota = currentQuota;
        return this;
    }

    /**
     * Get the newQuota property: New quota limit of the quota bucket.
     * 
     * @return the newQuota value.
     */
    public Integer newQuota() {
        return this.newQuota;
    }

    /**
     * Set the newQuota property: New quota limit of the quota bucket.
     * 
     * @param newQuota the newQuota value to set.
     * @return the QuotaBucketRequestProperties object itself.
     */
    public QuotaBucketRequestProperties withNewQuota(Integer newQuota) {
        this.newQuota = newQuota;
        return this;
    }

    /**
     * Get the dimensions property: Dimensions for new quota request.
     * 
     * @return the dimensions value.
     */
    public QuotaBucketRequestPropertiesDimensions dimensions() {
        return this.dimensions;
    }

    /**
     * Set the dimensions property: Dimensions for new quota request.
     * 
     * @param dimensions the dimensions value to set.
     * @return the QuotaBucketRequestProperties object itself.
     */
    public QuotaBucketRequestProperties withDimensions(QuotaBucketRequestPropertiesDimensions dimensions) {
        this.dimensions = dimensions;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (dimensions() != null) {
            dimensions().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("currentUsage", this.currentUsage);
        jsonWriter.writeNumberField("currentQuota", this.currentQuota);
        jsonWriter.writeNumberField("newQuota", this.newQuota);
        jsonWriter.writeJsonField("dimensions", this.dimensions);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of QuotaBucketRequestProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of QuotaBucketRequestProperties if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the QuotaBucketRequestProperties.
     */
    public static QuotaBucketRequestProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            QuotaBucketRequestProperties deserializedQuotaBucketRequestProperties = new QuotaBucketRequestProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("currentUsage".equals(fieldName)) {
                    deserializedQuotaBucketRequestProperties.currentUsage = reader.getNullable(JsonReader::getInt);
                } else if ("currentQuota".equals(fieldName)) {
                    deserializedQuotaBucketRequestProperties.currentQuota = reader.getNullable(JsonReader::getInt);
                } else if ("newQuota".equals(fieldName)) {
                    deserializedQuotaBucketRequestProperties.newQuota = reader.getNullable(JsonReader::getInt);
                } else if ("dimensions".equals(fieldName)) {
                    deserializedQuotaBucketRequestProperties.dimensions
                        = QuotaBucketRequestPropertiesDimensions.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedQuotaBucketRequestProperties;
        });
    }
}
