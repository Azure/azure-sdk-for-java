// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.loadtesting.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Check quota availability response properties.
 */
@Fluent
public final class CheckQuotaAvailabilityResponseProperties
    implements JsonSerializable<CheckQuotaAvailabilityResponseProperties> {
    /*
     * True/False indicating whether the quota request be granted based on availability.
     */
    private Boolean isAvailable;

    /*
     * Message indicating additional details to add to quota support request.
     */
    private String availabilityStatus;

    /**
     * Creates an instance of CheckQuotaAvailabilityResponseProperties class.
     */
    public CheckQuotaAvailabilityResponseProperties() {
    }

    /**
     * Get the isAvailable property: True/False indicating whether the quota request be granted based on availability.
     * 
     * @return the isAvailable value.
     */
    public Boolean isAvailable() {
        return this.isAvailable;
    }

    /**
     * Set the isAvailable property: True/False indicating whether the quota request be granted based on availability.
     * 
     * @param isAvailable the isAvailable value to set.
     * @return the CheckQuotaAvailabilityResponseProperties object itself.
     */
    public CheckQuotaAvailabilityResponseProperties withIsAvailable(Boolean isAvailable) {
        this.isAvailable = isAvailable;
        return this;
    }

    /**
     * Get the availabilityStatus property: Message indicating additional details to add to quota support request.
     * 
     * @return the availabilityStatus value.
     */
    public String availabilityStatus() {
        return this.availabilityStatus;
    }

    /**
     * Set the availabilityStatus property: Message indicating additional details to add to quota support request.
     * 
     * @param availabilityStatus the availabilityStatus value to set.
     * @return the CheckQuotaAvailabilityResponseProperties object itself.
     */
    public CheckQuotaAvailabilityResponseProperties withAvailabilityStatus(String availabilityStatus) {
        this.availabilityStatus = availabilityStatus;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("isAvailable", this.isAvailable);
        jsonWriter.writeStringField("availabilityStatus", this.availabilityStatus);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CheckQuotaAvailabilityResponseProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CheckQuotaAvailabilityResponseProperties if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the CheckQuotaAvailabilityResponseProperties.
     */
    public static CheckQuotaAvailabilityResponseProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CheckQuotaAvailabilityResponseProperties deserializedCheckQuotaAvailabilityResponseProperties
                = new CheckQuotaAvailabilityResponseProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("isAvailable".equals(fieldName)) {
                    deserializedCheckQuotaAvailabilityResponseProperties.isAvailable
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("availabilityStatus".equals(fieldName)) {
                    deserializedCheckQuotaAvailabilityResponseProperties.availabilityStatus = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCheckQuotaAvailabilityResponseProperties;
        });
    }
}
