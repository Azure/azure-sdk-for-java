// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.developer.loadtesting.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Metric namespace class specifies the metadata for a metric namespace.
 */
@Immutable
public final class MetricNamespace implements JsonSerializable<MetricNamespace> {
    /*
     * The namespace description.
     */
    @Generated
    private String description;

    /*
     * The metric namespace name.
     */
    @Generated
    private String name;

    /**
     * Creates an instance of MetricNamespace class.
     */
    @Generated
    private MetricNamespace() {
    }

    /**
     * Get the description property: The namespace description.
     * 
     * @return the description value.
     */
    @Generated
    public String getDescription() {
        return this.description;
    }

    /**
     * Get the name property: The metric namespace name.
     * 
     * @return the name value.
     */
    @Generated
    public String getName() {
        return this.name;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("description", this.description);
        jsonWriter.writeStringField("name", this.name);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MetricNamespace from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MetricNamespace if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the MetricNamespace.
     */
    @Generated
    public static MetricNamespace fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            MetricNamespace deserializedMetricNamespace = new MetricNamespace();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("description".equals(fieldName)) {
                    deserializedMetricNamespace.description = reader.getString();
                } else if ("name".equals(fieldName)) {
                    deserializedMetricNamespace.name = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedMetricNamespace;
        });
    }
}
