// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.developer.loadtesting.models;

import com.azure.core.annotation.Generated;
import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * Aggregation functions for pass/fail criteria.
 */
public final class PassFailAggregationFunction extends ExpandableStringEnum<PassFailAggregationFunction> {
    /**
     * Criteria applies for count value.
     */
    @Generated
    public static final PassFailAggregationFunction COUNT = fromString("count");

    /**
     * Criteria applies for given percentage value.
     */
    @Generated
    public static final PassFailAggregationFunction PERCENTAGE = fromString("percentage");

    /**
     * Criteria applies for avg value.
     */
    @Generated
    public static final PassFailAggregationFunction AVG = fromString("avg");

    /**
     * Criteria applies for 50th percentile value.
     */
    @Generated
    public static final PassFailAggregationFunction P50 = fromString("p50");

    /**
     * Criteria applies for 75th percentile value.
     */
    @Generated
    public static final PassFailAggregationFunction P75 = fromString("p75");

    /**
     * Criteria applies for 90th percentile value.
     */
    @Generated
    public static final PassFailAggregationFunction P90 = fromString("p90");

    /**
     * Criteria applies for 95th percentile value.
     */
    @Generated
    public static final PassFailAggregationFunction P95 = fromString("p95");

    /**
     * Criteria applies for 96th percentile value.
     */
    @Generated
    public static final PassFailAggregationFunction P96 = fromString("p96");

    /**
     * Criteria applies for 97th percentile value.
     */
    @Generated
    public static final PassFailAggregationFunction P97 = fromString("p97");

    /**
     * Criteria applies for 98th percentile value.
     */
    @Generated
    public static final PassFailAggregationFunction P98 = fromString("p98");

    /**
     * Criteria applies for 99th percentile value.
     */
    @Generated
    public static final PassFailAggregationFunction P99 = fromString("p99");

    /**
     * Criteria applies for 99.9th percentile value.
     */
    @Generated
    public static final PassFailAggregationFunction P99_9 = fromString("p99.9");

    /**
     * Criteria applies for 99.99th percentile value.
     */
    @Generated
    public static final PassFailAggregationFunction P99_99 = fromString("p99.99");

    /**
     * Criteria applies for minimum value.
     */
    @Generated
    public static final PassFailAggregationFunction MIN = fromString("min");

    /**
     * Criteria applies for maximum value.
     */
    @Generated
    public static final PassFailAggregationFunction MAX = fromString("max");

    /**
     * Creates a new instance of PassFailAggregationFunction value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Generated
    @Deprecated
    public PassFailAggregationFunction() {
    }

    /**
     * Creates or finds a PassFailAggregationFunction from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding PassFailAggregationFunction.
     */
    @Generated
    public static PassFailAggregationFunction fromString(String name) {
        return fromString(name, PassFailAggregationFunction.class);
    }

    /**
     * Gets known PassFailAggregationFunction values.
     * 
     * @return known PassFailAggregationFunction values.
     */
    @Generated
    public static Collection<PassFailAggregationFunction> values() {
        return values(PassFailAggregationFunction.class);
    }
}
