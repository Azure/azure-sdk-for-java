// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.developer.loadtesting.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Error details if there is any failure in load test run.
 */
@Immutable
public final class ErrorDetails implements JsonSerializable<ErrorDetails> {
    /*
     * Error details in case test run was not successfully run.
     */
    @Generated
    private String message;

    /**
     * Creates an instance of ErrorDetails class.
     */
    @Generated
    private ErrorDetails() {
    }

    /**
     * Get the message property: Error details in case test run was not successfully run.
     * 
     * @return the message value.
     */
    @Generated
    public String getMessage() {
        return this.message;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ErrorDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ErrorDetails if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the ErrorDetails.
     */
    @Generated
    public static ErrorDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ErrorDetails deserializedErrorDetails = new ErrorDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("message".equals(fieldName)) {
                    deserializedErrorDetails.message = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedErrorDetails;
        });
    }
}
