// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.developer.loadtesting.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * An Azure resource object (Refer azure generic resource model
 * :https://docs.microsoft.com/en-us/rest/api/resources/resources/get-by-id#genericresource).
 */
@Fluent
public final class AppComponent implements JsonSerializable<AppComponent> {
    /*
     * fully qualified resource Id e.g
     * subscriptions/{subId}/resourceGroups/{rg}/providers/Microsoft.LoadTestService/loadtests/{resName}
     */
    @Generated
    private String resourceId;

    /*
     * Azure resource name, required while creating the app component.
     */
    @Generated
    private final String resourceName;

    /*
     * Azure resource type, required while creating the app component.
     */
    @Generated
    private final String resourceType;

    /*
     * Azure resource display name
     */
    @Generated
    private String displayName;

    /*
     * Resource group name of the Azure resource
     */
    @Generated
    private String resourceGroup;

    /*
     * Subscription Id of the Azure resource
     */
    @Generated
    private String subscriptionId;

    /*
     * Kind of Azure resource type
     */
    @Generated
    private String kind;

    /**
     * Creates an instance of AppComponent class.
     * 
     * @param resourceName the resourceName value to set.
     * @param resourceType the resourceType value to set.
     */
    @Generated
    public AppComponent(String resourceName, String resourceType) {
        this.resourceName = resourceName;
        this.resourceType = resourceType;
    }

    /**
     * Get the resourceId property: fully qualified resource Id e.g
     * subscriptions/{subId}/resourceGroups/{rg}/providers/Microsoft.LoadTestService/loadtests/{resName}.
     * 
     * @return the resourceId value.
     */
    @Generated
    public String getResourceId() {
        return this.resourceId;
    }

    /**
     * Get the resourceName property: Azure resource name, required while creating the app component.
     * 
     * @return the resourceName value.
     */
    @Generated
    public String getResourceName() {
        return this.resourceName;
    }

    /**
     * Get the resourceType property: Azure resource type, required while creating the app component.
     * 
     * @return the resourceType value.
     */
    @Generated
    public String getResourceType() {
        return this.resourceType;
    }

    /**
     * Get the displayName property: Azure resource display name.
     * 
     * @return the displayName value.
     */
    @Generated
    public String getDisplayName() {
        return this.displayName;
    }

    /**
     * Set the displayName property: Azure resource display name.
     * 
     * @param displayName the displayName value to set.
     * @return the AppComponent object itself.
     */
    @Generated
    public AppComponent setDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the resourceGroup property: Resource group name of the Azure resource.
     * 
     * @return the resourceGroup value.
     */
    @Generated
    public String getResourceGroup() {
        return this.resourceGroup;
    }

    /**
     * Get the subscriptionId property: Subscription Id of the Azure resource.
     * 
     * @return the subscriptionId value.
     */
    @Generated
    public String getSubscriptionId() {
        return this.subscriptionId;
    }

    /**
     * Get the kind property: Kind of Azure resource type.
     * 
     * @return the kind value.
     */
    @Generated
    public String getKind() {
        return this.kind;
    }

    /**
     * Set the kind property: Kind of Azure resource type.
     * 
     * @param kind the kind value to set.
     * @return the AppComponent object itself.
     */
    @Generated
    public AppComponent setKind(String kind) {
        this.kind = kind;
        return this;
    }

    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("resourceName", this.resourceName);
        jsonWriter.writeStringField("resourceType", this.resourceType);
        jsonWriter.writeStringField("displayName", this.displayName);
        jsonWriter.writeStringField("kind", this.kind);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AppComponent from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AppComponent if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AppComponent.
     */
    public static AppComponent fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String resourceId = null;
            String resourceName = null;
            String resourceType = null;
            String displayName = null;
            String resourceGroup = null;
            String subscriptionId = null;
            String kind = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("resourceId".equals(fieldName)) {
                    resourceId = reader.getString();
                } else if ("resourceName".equals(fieldName)) {
                    resourceName = reader.getString();
                } else if ("resourceType".equals(fieldName)) {
                    resourceType = reader.getString();
                } else if ("displayName".equals(fieldName)) {
                    displayName = reader.getString();
                } else if ("resourceGroup".equals(fieldName)) {
                    resourceGroup = reader.getString();
                } else if ("subscriptionId".equals(fieldName)) {
                    subscriptionId = reader.getString();
                } else if ("kind".equals(fieldName)) {
                    kind = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            AppComponent deserializedAppComponent = new AppComponent(resourceName, resourceType);
            deserializedAppComponent.resourceId = resourceId;
            deserializedAppComponent.displayName = displayName;
            deserializedAppComponent.resourceGroup = resourceGroup;
            deserializedAppComponent.subscriptionId = subscriptionId;
            deserializedAppComponent.kind = kind;

            return deserializedAppComponent;
        });
    }
}
