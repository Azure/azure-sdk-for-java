// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.developer.loadtesting.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Auto stop criteria for a test. This will automatically stop a load test if the error percentage is high for a
 * certain time window.
 */
@Fluent
public final class AutoStopCriteria implements JsonSerializable<AutoStopCriteria> {

    /*
     * Whether auto-stop should be enabled.
     */
    @Generated
    private Boolean autoStopEnabled;

    /*
     * Threshold percentage of errors on which test run should be automatically stopped. Allowed values are in range of
     * 0.0-100.0
     */
    @Generated
    private Double errorRate;

    /*
     * Time window during which the error percentage should be evaluated in seconds.
     */
    @Generated
    private Integer errorRateTimeWindow;

    /**
     * Creates an instance of AutoStopCriteria class.
     */
    @Generated
    public AutoStopCriteria() {
    }

    /**
     * Get the autoStopEnabled property: Whether auto-stop should be enabled.
     *
     * @return the autoStopEnabled value.
     */
    @Generated
    public Boolean isAutoStopEnabled() {
        return this.autoStopEnabled;
    }

    /**
     * Set the autoStopEnabled property: Whether auto-stop should be enabled.
     *
     * @param autoStopEnabled the autoStopEnabled value to set.
     * @return the AutoStopCriteria object itself.
     */
    @Generated
    public AutoStopCriteria setAutoStopEnabled(Boolean autoStopEnabled) {
        this.autoStopEnabled = autoStopEnabled;
        return this;
    }

    /**
     * Get the errorRate property: Threshold percentage of errors on which test run should be automatically stopped.
     * Allowed values are in range of 0.0-100.0.
     *
     * @return the errorRate value.
     */
    @Generated
    public Double getErrorRate() {
        return this.errorRate;
    }

    /**
     * Set the errorRate property: Threshold percentage of errors on which test run should be automatically stopped.
     * Allowed values are in range of 0.0-100.0.
     *
     * @param errorRate the errorRate value to set.
     * @return the AutoStopCriteria object itself.
     */
    @Generated
    public AutoStopCriteria setErrorRate(Double errorRate) {
        this.errorRate = errorRate;
        return this;
    }

    /**
     * Get the errorRateTimeWindow property: Time window during which the error percentage should be evaluated in
     * seconds.
     *
     * @return the errorRateTimeWindow value.
     */
    @Generated
    public Integer getErrorRateTimeWindow() {
        return this.errorRateTimeWindow;
    }

    /**
     * Set the errorRateTimeWindow property: Time window during which the error percentage should be evaluated in
     * seconds.
     *
     * @param errorRateTimeWindow the errorRateTimeWindow value to set.
     * @return the AutoStopCriteria object itself.
     */
    @Generated
    public AutoStopCriteria setErrorRateTimeWindow(Integer errorRateTimeWindow) {
        this.errorRateTimeWindow = errorRateTimeWindow;
        return this;
    }

    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("autoStopEnabled", this.autoStopEnabled);
        jsonWriter.writeNumberField("errorRate", this.errorRate);
        jsonWriter.writeNumberField("errorRateTimeWindow", this.errorRateTimeWindow);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AutoStopCriteria from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of AutoStopCriteria if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the AutoStopCriteria.
     */
    public static AutoStopCriteria fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AutoStopCriteria deserializedAutoStopCriteria = new AutoStopCriteria();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("autoStopEnabled".equals(fieldName)) {
                    deserializedAutoStopCriteria.autoStopEnabled = reader.getNullable(JsonReader::getBoolean);
                } else if ("errorRate".equals(fieldName)) {
                    deserializedAutoStopCriteria.errorRate = reader.getNullable(JsonReader::getDouble);
                } else if ("errorRateTimeWindow".equals(fieldName)) {
                    deserializedAutoStopCriteria.errorRateTimeWindow = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }
            return deserializedAutoStopCriteria;
        });
    }
}
