// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkanalytics.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.networkanalytics.models.DataTypeState;
import com.azure.resourcemanager.networkanalytics.models.DataTypeUpdate;
import com.azure.resourcemanager.networkanalytics.models.DataTypeUpdateProperties;
import org.junit.jupiter.api.Assertions;

public final class DataTypeUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DataTypeUpdate model = BinaryData.fromString(
            "{\"properties\":{\"state\":\"Stopped\",\"storageOutputRetention\":825029486,\"databaseCacheRetention\":2070328561,\"databaseRetention\":1007558597}}")
            .toObject(DataTypeUpdate.class);
        Assertions.assertEquals(DataTypeState.STOPPED, model.properties().state());
        Assertions.assertEquals(825029486, model.properties().storageOutputRetention());
        Assertions.assertEquals(2070328561, model.properties().databaseCacheRetention());
        Assertions.assertEquals(1007558597, model.properties().databaseRetention());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DataTypeUpdate model = new DataTypeUpdate().withProperties(
            new DataTypeUpdateProperties().withState(DataTypeState.STOPPED).withStorageOutputRetention(825029486)
                .withDatabaseCacheRetention(2070328561).withDatabaseRetention(1007558597));
        model = BinaryData.fromObject(model).toObject(DataTypeUpdate.class);
        Assertions.assertEquals(DataTypeState.STOPPED, model.properties().state());
        Assertions.assertEquals(825029486, model.properties().storageOutputRetention());
        Assertions.assertEquals(2070328561, model.properties().databaseCacheRetention());
        Assertions.assertEquals(1007558597, model.properties().databaseRetention());
    }
}
