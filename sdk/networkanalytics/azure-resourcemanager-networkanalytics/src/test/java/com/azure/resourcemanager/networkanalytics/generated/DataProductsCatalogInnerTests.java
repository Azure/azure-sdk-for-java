// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkanalytics.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.networkanalytics.fluent.models.DataProductsCatalogInner;
import com.azure.resourcemanager.networkanalytics.models.DataProductInformation;
import com.azure.resourcemanager.networkanalytics.models.DataProductVersion;
import com.azure.resourcemanager.networkanalytics.models.DataProductsCatalogProperties;
import com.azure.resourcemanager.networkanalytics.models.PublisherInformation;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DataProductsCatalogInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DataProductsCatalogInner model = BinaryData.fromString(
            "{\"properties\":{\"provisioningState\":\"Provisioning\",\"publishers\":[{\"publisherName\":\"uizga\",\"dataProducts\":[{\"dataProductName\":\"ufizuckyf\",\"description\":\"hr\",\"dataProductVersions\":[{\"version\":\"dfvzwdzuhty\"}]}]}]},\"id\":\"isdkfthwxmnteiw\",\"name\":\"opvkmijcm\",\"type\":\"xdcu\"}")
            .toObject(DataProductsCatalogInner.class);
        Assertions.assertEquals("uizga", model.properties().publishers().get(0).publisherName());
        Assertions.assertEquals("ufizuckyf",
            model.properties().publishers().get(0).dataProducts().get(0).dataProductName());
        Assertions.assertEquals("hr", model.properties().publishers().get(0).dataProducts().get(0).description());
        Assertions.assertEquals("dfvzwdzuhty",
            model.properties().publishers().get(0).dataProducts().get(0).dataProductVersions().get(0).version());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DataProductsCatalogInner model = new DataProductsCatalogInner()
            .withProperties(new DataProductsCatalogProperties().withPublishers(Arrays.asList(new PublisherInformation()
                .withPublisherName("uizga")
                .withDataProducts(Arrays.asList(new DataProductInformation().withDataProductName("ufizuckyf")
                    .withDescription("hr")
                    .withDataProductVersions(Arrays.asList(new DataProductVersion().withVersion("dfvzwdzuhty"))))))));
        model = BinaryData.fromObject(model).toObject(DataProductsCatalogInner.class);
        Assertions.assertEquals("uizga", model.properties().publishers().get(0).publisherName());
        Assertions.assertEquals("ufizuckyf",
            model.properties().publishers().get(0).dataProducts().get(0).dataProductName());
        Assertions.assertEquals("hr", model.properties().publishers().get(0).dataProducts().get(0).description());
        Assertions.assertEquals("dfvzwdzuhty",
            model.properties().publishers().get(0).dataProducts().get(0).dataProductVersions().get(0).version());
    }
}
