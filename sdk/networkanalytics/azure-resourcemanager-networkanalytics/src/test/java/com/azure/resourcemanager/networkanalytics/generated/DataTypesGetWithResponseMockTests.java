// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkanalytics.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.networkanalytics.NetworkAnalyticsManager;
import com.azure.resourcemanager.networkanalytics.models.DataType;
import com.azure.resourcemanager.networkanalytics.models.DataTypeState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DataTypesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Accepted\",\"state\":\"Stopped\",\"stateReason\":\"t\",\"storageOutputRetention\":1008975068,\"databaseCacheRetention\":1072156994,\"databaseRetention\":2060062752,\"visualizationUrl\":\"ygtdsslswt\"},\"id\":\"eriofzpyqs\",\"name\":\"mwabnetshhszhedp\",\"type\":\"vwiwubmwmbesld\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NetworkAnalyticsManager manager = NetworkAnalyticsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        DataType response = manager.dataTypes()
            .getWithResponse("mnvdfzn", "daodvxzbncblyl", "stdbhhxsrzdzu", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(DataTypeState.STOPPED, response.properties().state());
        Assertions.assertEquals(1008975068, response.properties().storageOutputRetention());
        Assertions.assertEquals(1072156994, response.properties().databaseCacheRetention());
        Assertions.assertEquals(2060062752, response.properties().databaseRetention());
    }
}
