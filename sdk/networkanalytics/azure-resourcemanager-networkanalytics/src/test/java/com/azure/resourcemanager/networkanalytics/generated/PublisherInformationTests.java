// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkanalytics.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.networkanalytics.models.DataProductInformation;
import com.azure.resourcemanager.networkanalytics.models.DataProductVersion;
import com.azure.resourcemanager.networkanalytics.models.PublisherInformation;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PublisherInformationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PublisherInformation model = BinaryData.fromString(
            "{\"publisherName\":\"qajzyulpkudjkr\",\"dataProducts\":[{\"dataProductName\":\"hbzhfepg\",\"description\":\"gqexzlocxs\",\"dataProductVersions\":[{\"version\":\"aierhhb\"},{\"version\":\"sglumma\"}]},{\"dataProductName\":\"tjaodxobnb\",\"description\":\"xkqpxo\",\"dataProductVersions\":[{\"version\":\"jionpimexgstxgc\"},{\"version\":\"odgmaajrmvdjwz\"},{\"version\":\"lovmclwhijcoe\"},{\"version\":\"ctbzaq\"}]},{\"dataProductName\":\"qsycbkbfkgu\",\"description\":\"dkexxppofm\",\"dataProductVersions\":[{\"version\":\"x\"},{\"version\":\"fjpgddtocjjxhvp\"},{\"version\":\"o\"},{\"version\":\"exhd\"}]}]}")
            .toObject(PublisherInformation.class);
        Assertions.assertEquals("qajzyulpkudjkr", model.publisherName());
        Assertions.assertEquals("hbzhfepg", model.dataProducts().get(0).dataProductName());
        Assertions.assertEquals("gqexzlocxs", model.dataProducts().get(0).description());
        Assertions.assertEquals("aierhhb", model.dataProducts().get(0).dataProductVersions().get(0).version());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PublisherInformation model
            = new PublisherInformation().withPublisherName("qajzyulpkudjkr")
                .withDataProducts(Arrays.asList(
                    new DataProductInformation().withDataProductName("hbzhfepg").withDescription("gqexzlocxs")
                        .withDataProductVersions(Arrays.asList(new DataProductVersion().withVersion("aierhhb"),
                            new DataProductVersion().withVersion("sglumma"))),
                    new DataProductInformation().withDataProductName("tjaodxobnb").withDescription("xkqpxo")
                        .withDataProductVersions(Arrays.asList(new DataProductVersion().withVersion("jionpimexgstxgc"),
                            new DataProductVersion().withVersion("odgmaajrmvdjwz"),
                            new DataProductVersion().withVersion("lovmclwhijcoe"),
                            new DataProductVersion().withVersion("ctbzaq"))),
                    new DataProductInformation().withDataProductName("qsycbkbfkgu").withDescription("dkexxppofm")
                        .withDataProductVersions(Arrays.asList(new DataProductVersion().withVersion("x"),
                            new DataProductVersion().withVersion("fjpgddtocjjxhvp"),
                            new DataProductVersion().withVersion("o"), new DataProductVersion().withVersion("exhd")))));
        model = BinaryData.fromObject(model).toObject(PublisherInformation.class);
        Assertions.assertEquals("qajzyulpkudjkr", model.publisherName());
        Assertions.assertEquals("hbzhfepg", model.dataProducts().get(0).dataProductName());
        Assertions.assertEquals("gqexzlocxs", model.dataProducts().get(0).description());
        Assertions.assertEquals("aierhhb", model.dataProducts().get(0).dataProductVersions().get(0).version());
    }
}
