// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkanalytics.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.networkanalytics.fluent.models.DataProductsCatalogInner;
import com.azure.resourcemanager.networkanalytics.models.DataProductInformation;
import com.azure.resourcemanager.networkanalytics.models.DataProductsCatalogListResult;
import com.azure.resourcemanager.networkanalytics.models.DataProductsCatalogProperties;
import com.azure.resourcemanager.networkanalytics.models.PublisherInformation;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DataProductsCatalogListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DataProductsCatalogListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"provisioningState\":\"Accepted\",\"publishers\":[{\"publisherName\":\"w\",\"dataProducts\":[{\"dataProductName\":\"lryplwckbasyy\",\"description\":\"nddhsgcbacph\",\"dataProductVersions\":[]},{\"dataProductName\":\"jkot\",\"description\":\"nqgoulzndli\",\"dataProductVersions\":[]},{\"dataProductName\":\"wyqkgfgibm\",\"description\":\"dgak\",\"dataProductVersions\":[]}]},{\"publisherName\":\"qsrxybzqqed\",\"dataProducts\":[{\"dataProductName\":\"tbciqfouflmm\",\"description\":\"kzsmodm\",\"dataProductVersions\":[]}]}]},\"id\":\"ougpbkwt\",\"name\":\"utduqktapspwgcu\",\"type\":\"rtumkdosvq\"},{\"properties\":{\"provisioningState\":\"Updating\",\"publishers\":[{\"publisherName\":\"gbbjfddgmbmbe\",\"dataProducts\":[{\"dataProductName\":\"pbhtqqrolfpfpsa\",\"description\":\"gbquxigj\",\"dataProductVersions\":[]},{\"dataProductName\":\"jgzjaoyfhrtx\",\"description\":\"lnerkujysvleju\",\"dataProductVersions\":[]},{\"dataProductName\":\"fqawrlyxw\",\"description\":\"kcprbnw\",\"dataProductVersions\":[]}]}]},\"id\":\"gjvtbv\",\"name\":\"ysszdnrujqguh\",\"type\":\"uouq\"}],\"nextLink\":\"rwzwbng\"}")
            .toObject(DataProductsCatalogListResult.class);
        Assertions.assertEquals("w", model.value().get(0).properties().publishers().get(0).publisherName());
        Assertions.assertEquals("lryplwckbasyy",
            model.value().get(0).properties().publishers().get(0).dataProducts().get(0).dataProductName());
        Assertions.assertEquals("nddhsgcbacph",
            model.value().get(0).properties().publishers().get(0).dataProducts().get(0).description());
        Assertions.assertEquals("rwzwbng", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DataProductsCatalogListResult model = new DataProductsCatalogListResult().withValue(Arrays.asList(
            new DataProductsCatalogInner()
                .withProperties(new DataProductsCatalogProperties().withPublishers(Arrays.asList(
                    new PublisherInformation().withPublisherName("w")
                        .withDataProducts(Arrays.asList(
                            new DataProductInformation().withDataProductName("lryplwckbasyy")
                                .withDescription("nddhsgcbacph").withDataProductVersions(Arrays.asList()),
                            new DataProductInformation().withDataProductName("jkot").withDescription("nqgoulzndli")
                                .withDataProductVersions(Arrays.asList()),
                            new DataProductInformation().withDataProductName("wyqkgfgibm").withDescription("dgak")
                                .withDataProductVersions(Arrays.asList()))),
                    new PublisherInformation().withPublisherName("qsrxybzqqed")
                        .withDataProducts(Arrays.asList(new DataProductInformation().withDataProductName("tbciqfouflmm")
                            .withDescription("kzsmodm").withDataProductVersions(Arrays.asList())))))),
            new DataProductsCatalogInner().withProperties(new DataProductsCatalogProperties()
                .withPublishers(Arrays.asList(new PublisherInformation().withPublisherName("gbbjfddgmbmbe")
                    .withDataProducts(Arrays.asList(
                        new DataProductInformation().withDataProductName("pbhtqqrolfpfpsa").withDescription("gbquxigj")
                            .withDataProductVersions(Arrays.asList()),
                        new DataProductInformation().withDataProductName("jgzjaoyfhrtx")
                            .withDescription("lnerkujysvleju").withDataProductVersions(Arrays.asList()),
                        new DataProductInformation().withDataProductName("fqawrlyxw").withDescription("kcprbnw")
                            .withDataProductVersions(Arrays.asList()))))))))
            .withNextLink("rwzwbng");
        model = BinaryData.fromObject(model).toObject(DataProductsCatalogListResult.class);
        Assertions.assertEquals("w", model.value().get(0).properties().publishers().get(0).publisherName());
        Assertions.assertEquals("lryplwckbasyy",
            model.value().get(0).properties().publishers().get(0).dataProducts().get(0).dataProductName());
        Assertions.assertEquals("nddhsgcbacph",
            model.value().get(0).properties().publishers().get(0).dataProducts().get(0).description());
        Assertions.assertEquals("rwzwbng", model.nextLink());
    }
}
