// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkanalytics.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.networkanalytics.models.DataProductNetworkAcls;
import com.azure.resourcemanager.networkanalytics.models.DefaultAction;
import com.azure.resourcemanager.networkanalytics.models.IpRules;
import com.azure.resourcemanager.networkanalytics.models.VirtualNetworkRule;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DataProductNetworkAclsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DataProductNetworkAcls model = BinaryData.fromString(
            "{\"virtualNetworkRule\":[{\"id\":\"nmayhuybb\",\"action\":\"odepoogin\",\"state\":\"amiheognarxz\"}],\"ipRules\":[{\"value\":\"eotusivyevc\",\"action\":\"iqihn\"},{\"value\":\"ngbwjz\",\"action\":\"nfygxgispemvtz\"},{\"value\":\"ufubl\",\"action\":\"ofx\"}],\"allowedQueryIpRangeList\":[\"ofjaeqjhqjb\",\"s\",\"msmjqulngsntn\"],\"defaultAction\":\"Allow\"}")
            .toObject(DataProductNetworkAcls.class);
        Assertions.assertEquals("nmayhuybb", model.virtualNetworkRule().get(0).id());
        Assertions.assertEquals("odepoogin", model.virtualNetworkRule().get(0).action());
        Assertions.assertEquals("amiheognarxz", model.virtualNetworkRule().get(0).state());
        Assertions.assertEquals("eotusivyevc", model.ipRules().get(0).value());
        Assertions.assertEquals("iqihn", model.ipRules().get(0).action());
        Assertions.assertEquals("ofjaeqjhqjb", model.allowedQueryIpRangeList().get(0));
        Assertions.assertEquals(DefaultAction.ALLOW, model.defaultAction());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DataProductNetworkAcls model = new DataProductNetworkAcls()
            .withVirtualNetworkRule(Arrays
                .asList(new VirtualNetworkRule().withId("nmayhuybb").withAction("odepoogin").withState("amiheognarxz")))
            .withIpRules(Arrays.asList(new IpRules().withValue("eotusivyevc").withAction("iqihn"),
                new IpRules().withValue("ngbwjz").withAction("nfygxgispemvtz"),
                new IpRules().withValue("ufubl").withAction("ofx")))
            .withAllowedQueryIpRangeList(Arrays.asList("ofjaeqjhqjb", "s", "msmjqulngsntn"))
            .withDefaultAction(DefaultAction.ALLOW);
        model = BinaryData.fromObject(model).toObject(DataProductNetworkAcls.class);
        Assertions.assertEquals("nmayhuybb", model.virtualNetworkRule().get(0).id());
        Assertions.assertEquals("odepoogin", model.virtualNetworkRule().get(0).action());
        Assertions.assertEquals("amiheognarxz", model.virtualNetworkRule().get(0).state());
        Assertions.assertEquals("eotusivyevc", model.ipRules().get(0).value());
        Assertions.assertEquals("iqihn", model.ipRules().get(0).action());
        Assertions.assertEquals("ofjaeqjhqjb", model.allowedQueryIpRangeList().get(0));
        Assertions.assertEquals(DefaultAction.ALLOW, model.defaultAction());
    }
}
