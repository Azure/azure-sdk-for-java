// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkanalytics.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.networkanalytics.NetworkAnalyticsManager;
import com.azure.resourcemanager.networkanalytics.models.DataProductsCatalog;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DataProductsCatalogsListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Accepted\",\"publishers\":[{\"publisherName\":\"xwyjsflhhc\",\"dataProducts\":[{\"dataProductName\":\"lnjixisxya\",\"description\":\"joya\",\"dataProductVersions\":[]}]},{\"publisherName\":\"cslyjpk\",\"dataProducts\":[{\"dataProductName\":\"dzyexznelixh\",\"description\":\"rzt\",\"dataProductVersions\":[]},{\"dataProductName\":\"o\",\"description\":\"hb\",\"dataProductVersions\":[]},{\"dataProductName\":\"xknalaulppg\",\"description\":\"dtpnapnyiropuhp\",\"dataProductVersions\":[]},{\"dataProductName\":\"gvpgy\",\"description\":\"gqgitxmedjvcsl\",\"dataProductVersions\":[]}]},{\"publisherName\":\"n\",\"dataProducts\":[{\"dataProductName\":\"wncwzzhxgktrmg\",\"description\":\"cnapkteoell\",\"dataProductVersions\":[]},{\"dataProductName\":\"pt\",\"description\":\"d\",\"dataProductVersions\":[]},{\"dataProductName\":\"gpfqbuace\",\"description\":\"pzfqrhhuaoppp\",\"dataProductVersions\":[]}]},{\"publisherName\":\"qeqxo\",\"dataProducts\":[{\"dataProductName\":\"dahzxctobg\",\"description\":\"kdmoi\",\"dataProductVersions\":[]}]}]},\"id\":\"ostmgrcf\",\"name\":\"unrmfqjhhkxb\",\"type\":\"vjymjhxxjyngud\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NetworkAnalyticsManager manager = NetworkAnalyticsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<DataProductsCatalog> response
            = manager.dataProductsCatalogs().listByResourceGroup("dttouwaboekqvkel", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("xwyjsflhhc",
            response.iterator().next().properties().publishers().get(0).publisherName());
        Assertions.assertEquals("lnjixisxya",
            response.iterator().next().properties().publishers().get(0).dataProducts().get(0).dataProductName());
        Assertions.assertEquals("joya",
            response.iterator().next().properties().publishers().get(0).dataProducts().get(0).description());
    }
}
