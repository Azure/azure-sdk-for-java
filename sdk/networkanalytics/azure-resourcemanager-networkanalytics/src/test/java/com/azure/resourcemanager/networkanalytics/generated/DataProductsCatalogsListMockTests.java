// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkanalytics.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.networkanalytics.NetworkAnalyticsManager;
import com.azure.resourcemanager.networkanalytics.models.DataProductsCatalog;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DataProductsCatalogsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Succeeded\",\"publishers\":[{\"publisherName\":\"bpbewtghfgb\",\"dataProducts\":[{\"dataProductName\":\"gw\",\"description\":\"zvlvqhjkbegib\",\"dataProductVersions\":[]}]},{\"publisherName\":\"nmxiebwwaloayqc\",\"dataProducts\":[{\"dataProductName\":\"rtzju\",\"description\":\"gwyzm\",\"dataProductVersions\":[]}]},{\"publisherName\":\"txon\",\"dataProducts\":[{\"dataProductName\":\"ts\",\"description\":\"vjcbpwxqpsrknf\",\"dataProductVersions\":[]},{\"dataProductName\":\"guvriuhprwmd\",\"description\":\"vxqtayriwwroyqbe\",\"dataProductVersions\":[]},{\"dataProductName\":\"rmcqiby\",\"description\":\"nojvknmefqsg\",\"dataProductVersions\":[]},{\"dataProductName\":\"vah\",\"description\":\"pjyzhpv\",\"dataProductVersions\":[]}]},{\"publisherName\":\"qzcjrvxdj\",\"dataProducts\":[{\"dataProductName\":\"mwlxk\",\"description\":\"ug\",\"dataProductVersions\":[]},{\"dataProductName\":\"hzovawjvzunlut\",\"description\":\"nnprn\",\"dataProductVersions\":[]},{\"dataProductName\":\"i\",\"description\":\"eilpjzuaejxdu\",\"dataProductVersions\":[]},{\"dataProductName\":\"tskzbbtdzumveek\",\"description\":\"pwo\",\"dataProductVersions\":[]}]}]},\"id\":\"hkfpbs\",\"name\":\"yofd\",\"type\":\"luu\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NetworkAnalyticsManager manager = NetworkAnalyticsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<DataProductsCatalog> response
            = manager.dataProductsCatalogs().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("bpbewtghfgb",
            response.iterator().next().properties().publishers().get(0).publisherName());
        Assertions.assertEquals("gw",
            response.iterator().next().properties().publishers().get(0).dataProducts().get(0).dataProductName());
        Assertions.assertEquals("zvlvqhjkbegib",
            response.iterator().next().properties().publishers().get(0).dataProducts().get(0).description());
    }
}
