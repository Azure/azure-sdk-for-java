// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkanalytics.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.Resource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.networkanalytics.models.ConsumptionEndpointsProperties;
import com.azure.resourcemanager.networkanalytics.models.ControlState;
import com.azure.resourcemanager.networkanalytics.models.DataProductNetworkAcls;
import com.azure.resourcemanager.networkanalytics.models.EncryptionKeyDetails;
import com.azure.resourcemanager.networkanalytics.models.ManagedResourceGroupConfiguration;
import com.azure.resourcemanager.networkanalytics.models.ManagedServiceIdentity;
import com.azure.resourcemanager.networkanalytics.models.ProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/**
 * The data product resource.
 */
@Fluent
public final class DataProductInner extends Resource {
    /*
     * The resource-specific properties for this resource.
     */
    @JsonProperty(value = "properties")
    private DataProductProperties innerProperties;

    /*
     * The managed service identities assigned to this resource.
     */
    @JsonProperty(value = "identity")
    private ManagedServiceIdentity identity;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Creates an instance of DataProductInner class.
     */
    public DataProductInner() {
    }

    /**
     * Get the innerProperties property: The resource-specific properties for this resource.
     * 
     * @return the innerProperties value.
     */
    private DataProductProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the identity property: The managed service identities assigned to this resource.
     * 
     * @return the identity value.
     */
    public ManagedServiceIdentity identity() {
        return this.identity;
    }

    /**
     * Set the identity property: The managed service identities assigned to this resource.
     * 
     * @param identity the identity value to set.
     * @return the DataProductInner object itself.
     */
    public DataProductInner withIdentity(ManagedServiceIdentity identity) {
        this.identity = identity;
        return this;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DataProductInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DataProductInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Get the resourceGuid property: The resource GUID property of the data product resource.
     * 
     * @return the resourceGuid value.
     */
    public String resourceGuid() {
        return this.innerProperties() == null ? null : this.innerProperties().resourceGuid();
    }

    /**
     * Get the provisioningState property: Latest provisioning state of data product.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Get the publisher property: Data product publisher name.
     * 
     * @return the publisher value.
     */
    public String publisher() {
        return this.innerProperties() == null ? null : this.innerProperties().publisher();
    }

    /**
     * Set the publisher property: Data product publisher name.
     * 
     * @param publisher the publisher value to set.
     * @return the DataProductInner object itself.
     */
    public DataProductInner withPublisher(String publisher) {
        if (this.innerProperties() == null) {
            this.innerProperties = new DataProductProperties();
        }
        this.innerProperties().withPublisher(publisher);
        return this;
    }

    /**
     * Get the product property: Product name of data product.
     * 
     * @return the product value.
     */
    public String product() {
        return this.innerProperties() == null ? null : this.innerProperties().product();
    }

    /**
     * Set the product property: Product name of data product.
     * 
     * @param product the product value to set.
     * @return the DataProductInner object itself.
     */
    public DataProductInner withProduct(String product) {
        if (this.innerProperties() == null) {
            this.innerProperties = new DataProductProperties();
        }
        this.innerProperties().withProduct(product);
        return this;
    }

    /**
     * Get the majorVersion property: Major version of data product.
     * 
     * @return the majorVersion value.
     */
    public String majorVersion() {
        return this.innerProperties() == null ? null : this.innerProperties().majorVersion();
    }

    /**
     * Set the majorVersion property: Major version of data product.
     * 
     * @param majorVersion the majorVersion value to set.
     * @return the DataProductInner object itself.
     */
    public DataProductInner withMajorVersion(String majorVersion) {
        if (this.innerProperties() == null) {
            this.innerProperties = new DataProductProperties();
        }
        this.innerProperties().withMajorVersion(majorVersion);
        return this;
    }

    /**
     * Get the owners property: List of name or email associated with data product resource deployment.
     * 
     * @return the owners value.
     */
    public List<String> owners() {
        return this.innerProperties() == null ? null : this.innerProperties().owners();
    }

    /**
     * Set the owners property: List of name or email associated with data product resource deployment.
     * 
     * @param owners the owners value to set.
     * @return the DataProductInner object itself.
     */
    public DataProductInner withOwners(List<String> owners) {
        if (this.innerProperties() == null) {
            this.innerProperties = new DataProductProperties();
        }
        this.innerProperties().withOwners(owners);
        return this;
    }

    /**
     * Get the redundancy property: Flag to enable or disable redundancy for data product.
     * 
     * @return the redundancy value.
     */
    public ControlState redundancy() {
        return this.innerProperties() == null ? null : this.innerProperties().redundancy();
    }

    /**
     * Set the redundancy property: Flag to enable or disable redundancy for data product.
     * 
     * @param redundancy the redundancy value to set.
     * @return the DataProductInner object itself.
     */
    public DataProductInner withRedundancy(ControlState redundancy) {
        if (this.innerProperties() == null) {
            this.innerProperties = new DataProductProperties();
        }
        this.innerProperties().withRedundancy(redundancy);
        return this;
    }

    /**
     * Get the purviewAccount property: Purview account url for data product to connect to.
     * 
     * @return the purviewAccount value.
     */
    public String purviewAccount() {
        return this.innerProperties() == null ? null : this.innerProperties().purviewAccount();
    }

    /**
     * Set the purviewAccount property: Purview account url for data product to connect to.
     * 
     * @param purviewAccount the purviewAccount value to set.
     * @return the DataProductInner object itself.
     */
    public DataProductInner withPurviewAccount(String purviewAccount) {
        if (this.innerProperties() == null) {
            this.innerProperties = new DataProductProperties();
        }
        this.innerProperties().withPurviewAccount(purviewAccount);
        return this;
    }

    /**
     * Get the purviewCollection property: Purview collection url for data product to connect to.
     * 
     * @return the purviewCollection value.
     */
    public String purviewCollection() {
        return this.innerProperties() == null ? null : this.innerProperties().purviewCollection();
    }

    /**
     * Set the purviewCollection property: Purview collection url for data product to connect to.
     * 
     * @param purviewCollection the purviewCollection value to set.
     * @return the DataProductInner object itself.
     */
    public DataProductInner withPurviewCollection(String purviewCollection) {
        if (this.innerProperties() == null) {
            this.innerProperties = new DataProductProperties();
        }
        this.innerProperties().withPurviewCollection(purviewCollection);
        return this;
    }

    /**
     * Get the privateLinksEnabled property: Flag to enable or disable private link for data product resource.
     * 
     * @return the privateLinksEnabled value.
     */
    public ControlState privateLinksEnabled() {
        return this.innerProperties() == null ? null : this.innerProperties().privateLinksEnabled();
    }

    /**
     * Set the privateLinksEnabled property: Flag to enable or disable private link for data product resource.
     * 
     * @param privateLinksEnabled the privateLinksEnabled value to set.
     * @return the DataProductInner object itself.
     */
    public DataProductInner withPrivateLinksEnabled(ControlState privateLinksEnabled) {
        if (this.innerProperties() == null) {
            this.innerProperties = new DataProductProperties();
        }
        this.innerProperties().withPrivateLinksEnabled(privateLinksEnabled);
        return this;
    }

    /**
     * Get the publicNetworkAccess property: Flag to enable or disable public access of data product resource.
     * 
     * @return the publicNetworkAccess value.
     */
    public ControlState publicNetworkAccess() {
        return this.innerProperties() == null ? null : this.innerProperties().publicNetworkAccess();
    }

    /**
     * Set the publicNetworkAccess property: Flag to enable or disable public access of data product resource.
     * 
     * @param publicNetworkAccess the publicNetworkAccess value to set.
     * @return the DataProductInner object itself.
     */
    public DataProductInner withPublicNetworkAccess(ControlState publicNetworkAccess) {
        if (this.innerProperties() == null) {
            this.innerProperties = new DataProductProperties();
        }
        this.innerProperties().withPublicNetworkAccess(publicNetworkAccess);
        return this;
    }

    /**
     * Get the customerManagedKeyEncryptionEnabled property: Flag to enable customer managed key encryption for data
     * product.
     * 
     * @return the customerManagedKeyEncryptionEnabled value.
     */
    public ControlState customerManagedKeyEncryptionEnabled() {
        return this.innerProperties() == null ? null : this.innerProperties().customerManagedKeyEncryptionEnabled();
    }

    /**
     * Set the customerManagedKeyEncryptionEnabled property: Flag to enable customer managed key encryption for data
     * product.
     * 
     * @param customerManagedKeyEncryptionEnabled the customerManagedKeyEncryptionEnabled value to set.
     * @return the DataProductInner object itself.
     */
    public DataProductInner withCustomerManagedKeyEncryptionEnabled(ControlState customerManagedKeyEncryptionEnabled) {
        if (this.innerProperties() == null) {
            this.innerProperties = new DataProductProperties();
        }
        this.innerProperties().withCustomerManagedKeyEncryptionEnabled(customerManagedKeyEncryptionEnabled);
        return this;
    }

    /**
     * Get the customerEncryptionKey property: Customer managed encryption key details for data product.
     * 
     * @return the customerEncryptionKey value.
     */
    public EncryptionKeyDetails customerEncryptionKey() {
        return this.innerProperties() == null ? null : this.innerProperties().customerEncryptionKey();
    }

    /**
     * Set the customerEncryptionKey property: Customer managed encryption key details for data product.
     * 
     * @param customerEncryptionKey the customerEncryptionKey value to set.
     * @return the DataProductInner object itself.
     */
    public DataProductInner withCustomerEncryptionKey(EncryptionKeyDetails customerEncryptionKey) {
        if (this.innerProperties() == null) {
            this.innerProperties = new DataProductProperties();
        }
        this.innerProperties().withCustomerEncryptionKey(customerEncryptionKey);
        return this;
    }

    /**
     * Get the networkacls property: Network rule set for data product.
     * 
     * @return the networkacls value.
     */
    public DataProductNetworkAcls networkacls() {
        return this.innerProperties() == null ? null : this.innerProperties().networkacls();
    }

    /**
     * Set the networkacls property: Network rule set for data product.
     * 
     * @param networkacls the networkacls value to set.
     * @return the DataProductInner object itself.
     */
    public DataProductInner withNetworkacls(DataProductNetworkAcls networkacls) {
        if (this.innerProperties() == null) {
            this.innerProperties = new DataProductProperties();
        }
        this.innerProperties().withNetworkacls(networkacls);
        return this;
    }

    /**
     * Get the managedResourceGroupConfiguration property: Managed resource group configuration.
     * 
     * @return the managedResourceGroupConfiguration value.
     */
    public ManagedResourceGroupConfiguration managedResourceGroupConfiguration() {
        return this.innerProperties() == null ? null : this.innerProperties().managedResourceGroupConfiguration();
    }

    /**
     * Set the managedResourceGroupConfiguration property: Managed resource group configuration.
     * 
     * @param managedResourceGroupConfiguration the managedResourceGroupConfiguration value to set.
     * @return the DataProductInner object itself.
     */
    public DataProductInner
        withManagedResourceGroupConfiguration(ManagedResourceGroupConfiguration managedResourceGroupConfiguration) {
        if (this.innerProperties() == null) {
            this.innerProperties = new DataProductProperties();
        }
        this.innerProperties().withManagedResourceGroupConfiguration(managedResourceGroupConfiguration);
        return this;
    }

    /**
     * Get the availableMinorVersions property: List of available minor versions of the data product resource.
     * 
     * @return the availableMinorVersions value.
     */
    public List<String> availableMinorVersions() {
        return this.innerProperties() == null ? null : this.innerProperties().availableMinorVersions();
    }

    /**
     * Get the currentMinorVersion property: Current configured minor version of the data product resource.
     * 
     * @return the currentMinorVersion value.
     */
    public String currentMinorVersion() {
        return this.innerProperties() == null ? null : this.innerProperties().currentMinorVersion();
    }

    /**
     * Set the currentMinorVersion property: Current configured minor version of the data product resource.
     * 
     * @param currentMinorVersion the currentMinorVersion value to set.
     * @return the DataProductInner object itself.
     */
    public DataProductInner withCurrentMinorVersion(String currentMinorVersion) {
        if (this.innerProperties() == null) {
            this.innerProperties = new DataProductProperties();
        }
        this.innerProperties().withCurrentMinorVersion(currentMinorVersion);
        return this;
    }

    /**
     * Get the documentation property: Documentation link for the data product based on definition file.
     * 
     * @return the documentation value.
     */
    public String documentation() {
        return this.innerProperties() == null ? null : this.innerProperties().documentation();
    }

    /**
     * Get the consumptionEndpoints property: Resource links which exposed to the customer to query the data.
     * 
     * @return the consumptionEndpoints value.
     */
    public ConsumptionEndpointsProperties consumptionEndpoints() {
        return this.innerProperties() == null ? null : this.innerProperties().consumptionEndpoints();
    }

    /**
     * Get the keyVaultUrl property: Key vault url.
     * 
     * @return the keyVaultUrl value.
     */
    public String keyVaultUrl() {
        return this.innerProperties() == null ? null : this.innerProperties().keyVaultUrl();
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
        if (identity() != null) {
            identity().validate();
        }
    }
}
