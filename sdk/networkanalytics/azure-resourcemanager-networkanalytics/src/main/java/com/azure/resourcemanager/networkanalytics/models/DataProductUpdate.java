// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkanalytics.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.networkanalytics.fluent.models.DataProductUpdateProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/** The type used for update operations of the DataProduct. */
@Fluent
public final class DataProductUpdate {
    /*
     * The managed service identities assigned to this resource.
     */
    @JsonProperty(value = "identity")
    private ManagedServiceIdentity identity;

    /*
     * Resource tags.
     */
    @JsonProperty(value = "tags")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> tags;

    /*
     * The updatable properties of the DataProduct.
     */
    @JsonProperty(value = "properties")
    private DataProductUpdateProperties innerProperties;

    /** Creates an instance of DataProductUpdate class. */
    public DataProductUpdate() {
    }

    /**
     * Get the identity property: The managed service identities assigned to this resource.
     *
     * @return the identity value.
     */
    public ManagedServiceIdentity identity() {
        return this.identity;
    }

    /**
     * Set the identity property: The managed service identities assigned to this resource.
     *
     * @param identity the identity value to set.
     * @return the DataProductUpdate object itself.
     */
    public DataProductUpdate withIdentity(ManagedServiceIdentity identity) {
        this.identity = identity;
        return this;
    }

    /**
     * Get the tags property: Resource tags.
     *
     * @return the tags value.
     */
    public Map<String, String> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: Resource tags.
     *
     * @param tags the tags value to set.
     * @return the DataProductUpdate object itself.
     */
    public DataProductUpdate withTags(Map<String, String> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get the innerProperties property: The updatable properties of the DataProduct.
     *
     * @return the innerProperties value.
     */
    private DataProductUpdateProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the owners property: List of name or email associated with data product resource deployment.
     *
     * @return the owners value.
     */
    public List<String> owners() {
        return this.innerProperties() == null ? null : this.innerProperties().owners();
    }

    /**
     * Set the owners property: List of name or email associated with data product resource deployment.
     *
     * @param owners the owners value to set.
     * @return the DataProductUpdate object itself.
     */
    public DataProductUpdate withOwners(List<String> owners) {
        if (this.innerProperties() == null) {
            this.innerProperties = new DataProductUpdateProperties();
        }
        this.innerProperties().withOwners(owners);
        return this;
    }

    /**
     * Get the purviewAccount property: Purview account url for data product to connect to.
     *
     * @return the purviewAccount value.
     */
    public String purviewAccount() {
        return this.innerProperties() == null ? null : this.innerProperties().purviewAccount();
    }

    /**
     * Set the purviewAccount property: Purview account url for data product to connect to.
     *
     * @param purviewAccount the purviewAccount value to set.
     * @return the DataProductUpdate object itself.
     */
    public DataProductUpdate withPurviewAccount(String purviewAccount) {
        if (this.innerProperties() == null) {
            this.innerProperties = new DataProductUpdateProperties();
        }
        this.innerProperties().withPurviewAccount(purviewAccount);
        return this;
    }

    /**
     * Get the purviewCollection property: Purview collection url for data product to connect to.
     *
     * @return the purviewCollection value.
     */
    public String purviewCollection() {
        return this.innerProperties() == null ? null : this.innerProperties().purviewCollection();
    }

    /**
     * Set the purviewCollection property: Purview collection url for data product to connect to.
     *
     * @param purviewCollection the purviewCollection value to set.
     * @return the DataProductUpdate object itself.
     */
    public DataProductUpdate withPurviewCollection(String purviewCollection) {
        if (this.innerProperties() == null) {
            this.innerProperties = new DataProductUpdateProperties();
        }
        this.innerProperties().withPurviewCollection(purviewCollection);
        return this;
    }

    /**
     * Get the privateLinksEnabled property: Flag to enable or disable private link for data product resource.
     *
     * @return the privateLinksEnabled value.
     */
    public ControlState privateLinksEnabled() {
        return this.innerProperties() == null ? null : this.innerProperties().privateLinksEnabled();
    }

    /**
     * Set the privateLinksEnabled property: Flag to enable or disable private link for data product resource.
     *
     * @param privateLinksEnabled the privateLinksEnabled value to set.
     * @return the DataProductUpdate object itself.
     */
    public DataProductUpdate withPrivateLinksEnabled(ControlState privateLinksEnabled) {
        if (this.innerProperties() == null) {
            this.innerProperties = new DataProductUpdateProperties();
        }
        this.innerProperties().withPrivateLinksEnabled(privateLinksEnabled);
        return this;
    }

    /**
     * Get the currentMinorVersion property: Current configured minor version of the data product resource.
     *
     * @return the currentMinorVersion value.
     */
    public String currentMinorVersion() {
        return this.innerProperties() == null ? null : this.innerProperties().currentMinorVersion();
    }

    /**
     * Set the currentMinorVersion property: Current configured minor version of the data product resource.
     *
     * @param currentMinorVersion the currentMinorVersion value to set.
     * @return the DataProductUpdate object itself.
     */
    public DataProductUpdate withCurrentMinorVersion(String currentMinorVersion) {
        if (this.innerProperties() == null) {
            this.innerProperties = new DataProductUpdateProperties();
        }
        this.innerProperties().withCurrentMinorVersion(currentMinorVersion);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (identity() != null) {
            identity().validate();
        }
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
