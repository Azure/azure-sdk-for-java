// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkanalytics.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * The data product properties.
 */
@Fluent
public final class DataProductProperties {
    /*
     * The resource GUID property of the data product resource.
     */
    @JsonProperty(value = "resourceGuid", access = JsonProperty.Access.WRITE_ONLY)
    private String resourceGuid;

    /*
     * Latest provisioning state of data product.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /*
     * Data product publisher name.
     */
    @JsonProperty(value = "publisher", required = true)
    private String publisher;

    /*
     * Product name of data product.
     */
    @JsonProperty(value = "product", required = true)
    private String product;

    /*
     * Major version of data product.
     */
    @JsonProperty(value = "majorVersion", required = true)
    private String majorVersion;

    /*
     * List of name or email associated with data product resource deployment.
     */
    @JsonProperty(value = "owners")
    private List<String> owners;

    /*
     * Flag to enable or disable redundancy for data product.
     */
    @JsonProperty(value = "redundancy")
    private ControlState redundancy;

    /*
     * Purview account url for data product to connect to.
     */
    @JsonProperty(value = "purviewAccount")
    private String purviewAccount;

    /*
     * Purview collection url for data product to connect to.
     */
    @JsonProperty(value = "purviewCollection")
    private String purviewCollection;

    /*
     * Flag to enable or disable private link for data product resource.
     */
    @JsonProperty(value = "privateLinksEnabled")
    private ControlState privateLinksEnabled;

    /*
     * Flag to enable or disable public access of data product resource.
     */
    @JsonProperty(value = "publicNetworkAccess")
    private ControlState publicNetworkAccess;

    /*
     * Flag to enable customer managed key encryption for data product.
     */
    @JsonProperty(value = "customerManagedKeyEncryptionEnabled")
    private ControlState customerManagedKeyEncryptionEnabled;

    /*
     * Customer managed encryption key details for data product.
     */
    @JsonProperty(value = "customerEncryptionKey")
    private EncryptionKeyDetails customerEncryptionKey;

    /*
     * Network rule set for data product.
     */
    @JsonProperty(value = "networkacls")
    private DataProductNetworkAcls networkacls;

    /*
     * Managed resource group configuration.
     */
    @JsonProperty(value = "managedResourceGroupConfiguration")
    private ManagedResourceGroupConfiguration managedResourceGroupConfiguration;

    /*
     * List of available minor versions of the data product resource.
     */
    @JsonProperty(value = "availableMinorVersions", access = JsonProperty.Access.WRITE_ONLY)
    private List<String> availableMinorVersions;

    /*
     * Current configured minor version of the data product resource.
     */
    @JsonProperty(value = "currentMinorVersion")
    private String currentMinorVersion;

    /*
     * Documentation link for the data product based on definition file.
     */
    @JsonProperty(value = "documentation", access = JsonProperty.Access.WRITE_ONLY)
    private String documentation;

    /*
     * Resource links which exposed to the customer to query the data.
     */
    @JsonProperty(value = "consumptionEndpoints", access = JsonProperty.Access.WRITE_ONLY)
    private ConsumptionEndpointsProperties consumptionEndpoints;

    /*
     * Key vault url.
     */
    @JsonProperty(value = "keyVaultUrl", access = JsonProperty.Access.WRITE_ONLY)
    private String keyVaultUrl;

    /**
     * Creates an instance of DataProductProperties class.
     */
    public DataProductProperties() {
    }

    /**
     * Get the resourceGuid property: The resource GUID property of the data product resource.
     * 
     * @return the resourceGuid value.
     */
    public String resourceGuid() {
        return this.resourceGuid;
    }

    /**
     * Get the provisioningState property: Latest provisioning state of data product.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the publisher property: Data product publisher name.
     * 
     * @return the publisher value.
     */
    public String publisher() {
        return this.publisher;
    }

    /**
     * Set the publisher property: Data product publisher name.
     * 
     * @param publisher the publisher value to set.
     * @return the DataProductProperties object itself.
     */
    public DataProductProperties withPublisher(String publisher) {
        this.publisher = publisher;
        return this;
    }

    /**
     * Get the product property: Product name of data product.
     * 
     * @return the product value.
     */
    public String product() {
        return this.product;
    }

    /**
     * Set the product property: Product name of data product.
     * 
     * @param product the product value to set.
     * @return the DataProductProperties object itself.
     */
    public DataProductProperties withProduct(String product) {
        this.product = product;
        return this;
    }

    /**
     * Get the majorVersion property: Major version of data product.
     * 
     * @return the majorVersion value.
     */
    public String majorVersion() {
        return this.majorVersion;
    }

    /**
     * Set the majorVersion property: Major version of data product.
     * 
     * @param majorVersion the majorVersion value to set.
     * @return the DataProductProperties object itself.
     */
    public DataProductProperties withMajorVersion(String majorVersion) {
        this.majorVersion = majorVersion;
        return this;
    }

    /**
     * Get the owners property: List of name or email associated with data product resource deployment.
     * 
     * @return the owners value.
     */
    public List<String> owners() {
        return this.owners;
    }

    /**
     * Set the owners property: List of name or email associated with data product resource deployment.
     * 
     * @param owners the owners value to set.
     * @return the DataProductProperties object itself.
     */
    public DataProductProperties withOwners(List<String> owners) {
        this.owners = owners;
        return this;
    }

    /**
     * Get the redundancy property: Flag to enable or disable redundancy for data product.
     * 
     * @return the redundancy value.
     */
    public ControlState redundancy() {
        return this.redundancy;
    }

    /**
     * Set the redundancy property: Flag to enable or disable redundancy for data product.
     * 
     * @param redundancy the redundancy value to set.
     * @return the DataProductProperties object itself.
     */
    public DataProductProperties withRedundancy(ControlState redundancy) {
        this.redundancy = redundancy;
        return this;
    }

    /**
     * Get the purviewAccount property: Purview account url for data product to connect to.
     * 
     * @return the purviewAccount value.
     */
    public String purviewAccount() {
        return this.purviewAccount;
    }

    /**
     * Set the purviewAccount property: Purview account url for data product to connect to.
     * 
     * @param purviewAccount the purviewAccount value to set.
     * @return the DataProductProperties object itself.
     */
    public DataProductProperties withPurviewAccount(String purviewAccount) {
        this.purviewAccount = purviewAccount;
        return this;
    }

    /**
     * Get the purviewCollection property: Purview collection url for data product to connect to.
     * 
     * @return the purviewCollection value.
     */
    public String purviewCollection() {
        return this.purviewCollection;
    }

    /**
     * Set the purviewCollection property: Purview collection url for data product to connect to.
     * 
     * @param purviewCollection the purviewCollection value to set.
     * @return the DataProductProperties object itself.
     */
    public DataProductProperties withPurviewCollection(String purviewCollection) {
        this.purviewCollection = purviewCollection;
        return this;
    }

    /**
     * Get the privateLinksEnabled property: Flag to enable or disable private link for data product resource.
     * 
     * @return the privateLinksEnabled value.
     */
    public ControlState privateLinksEnabled() {
        return this.privateLinksEnabled;
    }

    /**
     * Set the privateLinksEnabled property: Flag to enable or disable private link for data product resource.
     * 
     * @param privateLinksEnabled the privateLinksEnabled value to set.
     * @return the DataProductProperties object itself.
     */
    public DataProductProperties withPrivateLinksEnabled(ControlState privateLinksEnabled) {
        this.privateLinksEnabled = privateLinksEnabled;
        return this;
    }

    /**
     * Get the publicNetworkAccess property: Flag to enable or disable public access of data product resource.
     * 
     * @return the publicNetworkAccess value.
     */
    public ControlState publicNetworkAccess() {
        return this.publicNetworkAccess;
    }

    /**
     * Set the publicNetworkAccess property: Flag to enable or disable public access of data product resource.
     * 
     * @param publicNetworkAccess the publicNetworkAccess value to set.
     * @return the DataProductProperties object itself.
     */
    public DataProductProperties withPublicNetworkAccess(ControlState publicNetworkAccess) {
        this.publicNetworkAccess = publicNetworkAccess;
        return this;
    }

    /**
     * Get the customerManagedKeyEncryptionEnabled property: Flag to enable customer managed key encryption for data
     * product.
     * 
     * @return the customerManagedKeyEncryptionEnabled value.
     */
    public ControlState customerManagedKeyEncryptionEnabled() {
        return this.customerManagedKeyEncryptionEnabled;
    }

    /**
     * Set the customerManagedKeyEncryptionEnabled property: Flag to enable customer managed key encryption for data
     * product.
     * 
     * @param customerManagedKeyEncryptionEnabled the customerManagedKeyEncryptionEnabled value to set.
     * @return the DataProductProperties object itself.
     */
    public DataProductProperties
        withCustomerManagedKeyEncryptionEnabled(ControlState customerManagedKeyEncryptionEnabled) {
        this.customerManagedKeyEncryptionEnabled = customerManagedKeyEncryptionEnabled;
        return this;
    }

    /**
     * Get the customerEncryptionKey property: Customer managed encryption key details for data product.
     * 
     * @return the customerEncryptionKey value.
     */
    public EncryptionKeyDetails customerEncryptionKey() {
        return this.customerEncryptionKey;
    }

    /**
     * Set the customerEncryptionKey property: Customer managed encryption key details for data product.
     * 
     * @param customerEncryptionKey the customerEncryptionKey value to set.
     * @return the DataProductProperties object itself.
     */
    public DataProductProperties withCustomerEncryptionKey(EncryptionKeyDetails customerEncryptionKey) {
        this.customerEncryptionKey = customerEncryptionKey;
        return this;
    }

    /**
     * Get the networkacls property: Network rule set for data product.
     * 
     * @return the networkacls value.
     */
    public DataProductNetworkAcls networkacls() {
        return this.networkacls;
    }

    /**
     * Set the networkacls property: Network rule set for data product.
     * 
     * @param networkacls the networkacls value to set.
     * @return the DataProductProperties object itself.
     */
    public DataProductProperties withNetworkacls(DataProductNetworkAcls networkacls) {
        this.networkacls = networkacls;
        return this;
    }

    /**
     * Get the managedResourceGroupConfiguration property: Managed resource group configuration.
     * 
     * @return the managedResourceGroupConfiguration value.
     */
    public ManagedResourceGroupConfiguration managedResourceGroupConfiguration() {
        return this.managedResourceGroupConfiguration;
    }

    /**
     * Set the managedResourceGroupConfiguration property: Managed resource group configuration.
     * 
     * @param managedResourceGroupConfiguration the managedResourceGroupConfiguration value to set.
     * @return the DataProductProperties object itself.
     */
    public DataProductProperties
        withManagedResourceGroupConfiguration(ManagedResourceGroupConfiguration managedResourceGroupConfiguration) {
        this.managedResourceGroupConfiguration = managedResourceGroupConfiguration;
        return this;
    }

    /**
     * Get the availableMinorVersions property: List of available minor versions of the data product resource.
     * 
     * @return the availableMinorVersions value.
     */
    public List<String> availableMinorVersions() {
        return this.availableMinorVersions;
    }

    /**
     * Get the currentMinorVersion property: Current configured minor version of the data product resource.
     * 
     * @return the currentMinorVersion value.
     */
    public String currentMinorVersion() {
        return this.currentMinorVersion;
    }

    /**
     * Set the currentMinorVersion property: Current configured minor version of the data product resource.
     * 
     * @param currentMinorVersion the currentMinorVersion value to set.
     * @return the DataProductProperties object itself.
     */
    public DataProductProperties withCurrentMinorVersion(String currentMinorVersion) {
        this.currentMinorVersion = currentMinorVersion;
        return this;
    }

    /**
     * Get the documentation property: Documentation link for the data product based on definition file.
     * 
     * @return the documentation value.
     */
    public String documentation() {
        return this.documentation;
    }

    /**
     * Get the consumptionEndpoints property: Resource links which exposed to the customer to query the data.
     * 
     * @return the consumptionEndpoints value.
     */
    public ConsumptionEndpointsProperties consumptionEndpoints() {
        return this.consumptionEndpoints;
    }

    /**
     * Get the keyVaultUrl property: Key vault url.
     * 
     * @return the keyVaultUrl value.
     */
    public String keyVaultUrl() {
        return this.keyVaultUrl;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (publisher() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property publisher in model DataProductProperties"));
        }
        if (product() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property product in model DataProductProperties"));
        }
        if (majorVersion() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property majorVersion in model DataProductProperties"));
        }
        if (customerEncryptionKey() != null) {
            customerEncryptionKey().validate();
        }
        if (networkacls() != null) {
            networkacls().validate();
        }
        if (managedResourceGroupConfiguration() != null) {
            managedResourceGroupConfiguration().validate();
        }
        if (consumptionEndpoints() != null) {
            consumptionEndpoints().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(DataProductProperties.class);
}
