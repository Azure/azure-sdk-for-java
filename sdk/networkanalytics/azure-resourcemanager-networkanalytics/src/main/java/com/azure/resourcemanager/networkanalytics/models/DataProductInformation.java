// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkanalytics.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Data Product Information.
 */
@Fluent
public final class DataProductInformation {
    /*
     * Name of data product.
     */
    @JsonProperty(value = "dataProductName", required = true)
    private String dataProductName;

    /*
     * Description about data product.
     */
    @JsonProperty(value = "description", required = true)
    private String description;

    /*
     * Version information of data product.
     */
    @JsonProperty(value = "dataProductVersions", required = true)
    private List<DataProductVersion> dataProductVersions;

    /**
     * Creates an instance of DataProductInformation class.
     */
    public DataProductInformation() {
    }

    /**
     * Get the dataProductName property: Name of data product.
     * 
     * @return the dataProductName value.
     */
    public String dataProductName() {
        return this.dataProductName;
    }

    /**
     * Set the dataProductName property: Name of data product.
     * 
     * @param dataProductName the dataProductName value to set.
     * @return the DataProductInformation object itself.
     */
    public DataProductInformation withDataProductName(String dataProductName) {
        this.dataProductName = dataProductName;
        return this;
    }

    /**
     * Get the description property: Description about data product.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: Description about data product.
     * 
     * @param description the description value to set.
     * @return the DataProductInformation object itself.
     */
    public DataProductInformation withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the dataProductVersions property: Version information of data product.
     * 
     * @return the dataProductVersions value.
     */
    public List<DataProductVersion> dataProductVersions() {
        return this.dataProductVersions;
    }

    /**
     * Set the dataProductVersions property: Version information of data product.
     * 
     * @param dataProductVersions the dataProductVersions value to set.
     * @return the DataProductInformation object itself.
     */
    public DataProductInformation withDataProductVersions(List<DataProductVersion> dataProductVersions) {
        this.dataProductVersions = dataProductVersions;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (dataProductName() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property dataProductName in model DataProductInformation"));
        }
        if (description() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property description in model DataProductInformation"));
        }
        if (dataProductVersions() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property dataProductVersions in model DataProductInformation"));
        } else {
            dataProductVersions().forEach(e -> e.validate());
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(DataProductInformation.class);
}
