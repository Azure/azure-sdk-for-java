// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkanalytics.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The updatable properties of the DataProduct.
 */
@Fluent
public final class DataProductUpdateProperties implements JsonSerializable<DataProductUpdateProperties> {
    /*
     * List of name or email associated with data product resource deployment.
     */
    private List<String> owners;

    /*
     * Purview account url for data product to connect to.
     */
    private String purviewAccount;

    /*
     * Purview collection url for data product to connect to.
     */
    private String purviewCollection;

    /*
     * Flag to enable or disable private link for data product resource.
     */
    private ControlState privateLinksEnabled;

    /*
     * Current configured minor version of the data product resource.
     */
    private String currentMinorVersion;

    /**
     * Creates an instance of DataProductUpdateProperties class.
     */
    public DataProductUpdateProperties() {
    }

    /**
     * Get the owners property: List of name or email associated with data product resource deployment.
     * 
     * @return the owners value.
     */
    public List<String> owners() {
        return this.owners;
    }

    /**
     * Set the owners property: List of name or email associated with data product resource deployment.
     * 
     * @param owners the owners value to set.
     * @return the DataProductUpdateProperties object itself.
     */
    public DataProductUpdateProperties withOwners(List<String> owners) {
        this.owners = owners;
        return this;
    }

    /**
     * Get the purviewAccount property: Purview account url for data product to connect to.
     * 
     * @return the purviewAccount value.
     */
    public String purviewAccount() {
        return this.purviewAccount;
    }

    /**
     * Set the purviewAccount property: Purview account url for data product to connect to.
     * 
     * @param purviewAccount the purviewAccount value to set.
     * @return the DataProductUpdateProperties object itself.
     */
    public DataProductUpdateProperties withPurviewAccount(String purviewAccount) {
        this.purviewAccount = purviewAccount;
        return this;
    }

    /**
     * Get the purviewCollection property: Purview collection url for data product to connect to.
     * 
     * @return the purviewCollection value.
     */
    public String purviewCollection() {
        return this.purviewCollection;
    }

    /**
     * Set the purviewCollection property: Purview collection url for data product to connect to.
     * 
     * @param purviewCollection the purviewCollection value to set.
     * @return the DataProductUpdateProperties object itself.
     */
    public DataProductUpdateProperties withPurviewCollection(String purviewCollection) {
        this.purviewCollection = purviewCollection;
        return this;
    }

    /**
     * Get the privateLinksEnabled property: Flag to enable or disable private link for data product resource.
     * 
     * @return the privateLinksEnabled value.
     */
    public ControlState privateLinksEnabled() {
        return this.privateLinksEnabled;
    }

    /**
     * Set the privateLinksEnabled property: Flag to enable or disable private link for data product resource.
     * 
     * @param privateLinksEnabled the privateLinksEnabled value to set.
     * @return the DataProductUpdateProperties object itself.
     */
    public DataProductUpdateProperties withPrivateLinksEnabled(ControlState privateLinksEnabled) {
        this.privateLinksEnabled = privateLinksEnabled;
        return this;
    }

    /**
     * Get the currentMinorVersion property: Current configured minor version of the data product resource.
     * 
     * @return the currentMinorVersion value.
     */
    public String currentMinorVersion() {
        return this.currentMinorVersion;
    }

    /**
     * Set the currentMinorVersion property: Current configured minor version of the data product resource.
     * 
     * @param currentMinorVersion the currentMinorVersion value to set.
     * @return the DataProductUpdateProperties object itself.
     */
    public DataProductUpdateProperties withCurrentMinorVersion(String currentMinorVersion) {
        this.currentMinorVersion = currentMinorVersion;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("owners", this.owners, (writer, element) -> writer.writeString(element));
        jsonWriter.writeStringField("purviewAccount", this.purviewAccount);
        jsonWriter.writeStringField("purviewCollection", this.purviewCollection);
        jsonWriter.writeStringField("privateLinksEnabled",
            this.privateLinksEnabled == null ? null : this.privateLinksEnabled.toString());
        jsonWriter.writeStringField("currentMinorVersion", this.currentMinorVersion);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DataProductUpdateProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DataProductUpdateProperties if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the DataProductUpdateProperties.
     */
    public static DataProductUpdateProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            DataProductUpdateProperties deserializedDataProductUpdateProperties = new DataProductUpdateProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("owners".equals(fieldName)) {
                    List<String> owners = reader.readArray(reader1 -> reader1.getString());
                    deserializedDataProductUpdateProperties.owners = owners;
                } else if ("purviewAccount".equals(fieldName)) {
                    deserializedDataProductUpdateProperties.purviewAccount = reader.getString();
                } else if ("purviewCollection".equals(fieldName)) {
                    deserializedDataProductUpdateProperties.purviewCollection = reader.getString();
                } else if ("privateLinksEnabled".equals(fieldName)) {
                    deserializedDataProductUpdateProperties.privateLinksEnabled
                        = ControlState.fromString(reader.getString());
                } else if ("currentMinorVersion".equals(fieldName)) {
                    deserializedDataProductUpdateProperties.currentMinorVersion = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedDataProductUpdateProperties;
        });
    }
}
