// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkanalytics.models;

import com.azure.core.http.rest.Response;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.networkanalytics.fluent.models.DataTypeInner;

/** An immutable client-side representation of DataType. */
public interface DataType {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the provisioningState property: Latest provisioning state of data product.
     *
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the state property: State of data type.
     *
     * @return the state value.
     */
    DataTypeState state();

    /**
     * Gets the stateReason property: Reason for the state of data type.
     *
     * @return the stateReason value.
     */
    String stateReason();

    /**
     * Gets the storageOutputRetention property: Field for storage output retention in days.
     *
     * @return the storageOutputRetention value.
     */
    Integer storageOutputRetention();

    /**
     * Gets the databaseCacheRetention property: Field for database cache retention in days.
     *
     * @return the databaseCacheRetention value.
     */
    Integer databaseCacheRetention();

    /**
     * Gets the databaseRetention property: Field for database data retention in days.
     *
     * @return the databaseRetention value.
     */
    Integer databaseRetention();

    /**
     * Gets the visualizationUrl property: Url for data visualization.
     *
     * @return the visualizationUrl value.
     */
    String visualizationUrl();

    /**
     * Gets the name of the resource group.
     *
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.networkanalytics.fluent.models.DataTypeInner object.
     *
     * @return the inner object.
     */
    DataTypeInner innerModel();

    /** The entirety of the DataType definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }

    /** The DataType definition stages. */
    interface DefinitionStages {
        /** The first stage of the DataType definition. */
        interface Blank extends WithParentResource {
        }

        /** The stage of the DataType definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, dataProductName.
             *
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param dataProductName The data product resource name.
             * @return the next definition stage.
             */
            WithCreate withExistingDataProduct(String resourceGroupName, String dataProductName);
        }

        /**
         * The stage of the DataType definition which contains all the minimum required properties for the resource to
         * be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithState,
                DefinitionStages.WithStorageOutputRetention,
                DefinitionStages.WithDatabaseCacheRetention,
                DefinitionStages.WithDatabaseRetention {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            DataType create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            DataType create(Context context);
        }

        /** The stage of the DataType definition allowing to specify state. */
        interface WithState {
            /**
             * Specifies the state property: State of data type..
             *
             * @param state State of data type.
             * @return the next definition stage.
             */
            WithCreate withState(DataTypeState state);
        }

        /** The stage of the DataType definition allowing to specify storageOutputRetention. */
        interface WithStorageOutputRetention {
            /**
             * Specifies the storageOutputRetention property: Field for storage output retention in days..
             *
             * @param storageOutputRetention Field for storage output retention in days.
             * @return the next definition stage.
             */
            WithCreate withStorageOutputRetention(Integer storageOutputRetention);
        }

        /** The stage of the DataType definition allowing to specify databaseCacheRetention. */
        interface WithDatabaseCacheRetention {
            /**
             * Specifies the databaseCacheRetention property: Field for database cache retention in days..
             *
             * @param databaseCacheRetention Field for database cache retention in days.
             * @return the next definition stage.
             */
            WithCreate withDatabaseCacheRetention(Integer databaseCacheRetention);
        }

        /** The stage of the DataType definition allowing to specify databaseRetention. */
        interface WithDatabaseRetention {
            /**
             * Specifies the databaseRetention property: Field for database data retention in days..
             *
             * @param databaseRetention Field for database data retention in days.
             * @return the next definition stage.
             */
            WithCreate withDatabaseRetention(Integer databaseRetention);
        }
    }

    /**
     * Begins update for the DataType resource.
     *
     * @return the stage of resource update.
     */
    DataType.Update update();

    /** The template for DataType update. */
    interface Update
        extends UpdateStages.WithState,
            UpdateStages.WithStorageOutputRetention,
            UpdateStages.WithDatabaseCacheRetention,
            UpdateStages.WithDatabaseRetention {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        DataType apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        DataType apply(Context context);
    }

    /** The DataType update stages. */
    interface UpdateStages {
        /** The stage of the DataType update allowing to specify state. */
        interface WithState {
            /**
             * Specifies the state property: State of data type..
             *
             * @param state State of data type.
             * @return the next definition stage.
             */
            Update withState(DataTypeState state);
        }

        /** The stage of the DataType update allowing to specify storageOutputRetention. */
        interface WithStorageOutputRetention {
            /**
             * Specifies the storageOutputRetention property: Field for storage output retention in days..
             *
             * @param storageOutputRetention Field for storage output retention in days.
             * @return the next definition stage.
             */
            Update withStorageOutputRetention(Integer storageOutputRetention);
        }

        /** The stage of the DataType update allowing to specify databaseCacheRetention. */
        interface WithDatabaseCacheRetention {
            /**
             * Specifies the databaseCacheRetention property: Field for database cache retention in days..
             *
             * @param databaseCacheRetention Field for database cache retention in days.
             * @return the next definition stage.
             */
            Update withDatabaseCacheRetention(Integer databaseCacheRetention);
        }

        /** The stage of the DataType update allowing to specify databaseRetention. */
        interface WithDatabaseRetention {
            /**
             * Specifies the databaseRetention property: Field for database data retention in days..
             *
             * @param databaseRetention Field for database data retention in days.
             * @return the next definition stage.
             */
            Update withDatabaseRetention(Integer databaseRetention);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    DataType refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    DataType refresh(Context context);

    /**
     * Delete data for data type.
     *
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteData(Object body);

    /**
     * Delete data for data type.
     *
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteData(Object body, Context context);

    /**
     * Generate sas token for storage container.
     *
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return details of storage container account sas token along with {@link Response}.
     */
    Response<ContainerSasToken> generateStorageContainerSasTokenWithResponse(ContainerSaS body, Context context);

    /**
     * Generate sas token for storage container.
     *
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return details of storage container account sas token.
     */
    ContainerSasToken generateStorageContainerSasToken(ContainerSaS body);
}
