// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkanalytics.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.networkanalytics.fluent.models.DataTypeInner;
import com.azure.resourcemanager.networkanalytics.models.ContainerSaS;
import com.azure.resourcemanager.networkanalytics.models.ContainerSasToken;
import com.azure.resourcemanager.networkanalytics.models.DataType;
import com.azure.resourcemanager.networkanalytics.models.DataTypeState;
import com.azure.resourcemanager.networkanalytics.models.DataTypeUpdate;
import com.azure.resourcemanager.networkanalytics.models.ProvisioningState;

public final class DataTypeImpl implements DataType, DataType.Definition, DataType.Update {
    private DataTypeInner innerObject;

    private final com.azure.resourcemanager.networkanalytics.NetworkanalyticsManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public DataTypeState state() {
        return this.innerModel().state();
    }

    public String stateReason() {
        return this.innerModel().stateReason();
    }

    public Integer storageOutputRetention() {
        return this.innerModel().storageOutputRetention();
    }

    public Integer databaseCacheRetention() {
        return this.innerModel().databaseCacheRetention();
    }

    public Integer databaseRetention() {
        return this.innerModel().databaseRetention();
    }

    public String visualizationUrl() {
        return this.innerModel().visualizationUrl();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public DataTypeInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.networkanalytics.NetworkanalyticsManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String dataProductName;

    private String dataTypeName;

    private DataTypeUpdate updateProperties;

    public DataTypeImpl withExistingDataProduct(String resourceGroupName, String dataProductName) {
        this.resourceGroupName = resourceGroupName;
        this.dataProductName = dataProductName;
        return this;
    }

    public DataType create() {
        this.innerObject = serviceManager.serviceClient().getDataTypes().create(resourceGroupName, dataProductName,
            dataTypeName, this.innerModel(), Context.NONE);
        return this;
    }

    public DataType create(Context context) {
        this.innerObject = serviceManager.serviceClient().getDataTypes().create(resourceGroupName, dataProductName,
            dataTypeName, this.innerModel(), context);
        return this;
    }

    DataTypeImpl(String name, com.azure.resourcemanager.networkanalytics.NetworkanalyticsManager serviceManager) {
        this.innerObject = new DataTypeInner();
        this.serviceManager = serviceManager;
        this.dataTypeName = name;
    }

    public DataTypeImpl update() {
        this.updateProperties = new DataTypeUpdate();
        return this;
    }

    public DataType apply() {
        this.innerObject = serviceManager.serviceClient().getDataTypes().update(resourceGroupName, dataProductName,
            dataTypeName, updateProperties, Context.NONE);
        return this;
    }

    public DataType apply(Context context) {
        this.innerObject = serviceManager.serviceClient().getDataTypes().update(resourceGroupName, dataProductName,
            dataTypeName, updateProperties, context);
        return this;
    }

    DataTypeImpl(DataTypeInner innerObject,
        com.azure.resourcemanager.networkanalytics.NetworkanalyticsManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.dataProductName = Utils.getValueFromIdByName(innerObject.id(), "dataProducts");
        this.dataTypeName = Utils.getValueFromIdByName(innerObject.id(), "dataTypes");
    }

    public DataType refresh() {
        this.innerObject = serviceManager.serviceClient().getDataTypes()
            .getWithResponse(resourceGroupName, dataProductName, dataTypeName, Context.NONE).getValue();
        return this;
    }

    public DataType refresh(Context context) {
        this.innerObject = serviceManager.serviceClient().getDataTypes()
            .getWithResponse(resourceGroupName, dataProductName, dataTypeName, context).getValue();
        return this;
    }

    public void deleteData(Object body) {
        serviceManager.dataTypes().deleteData(resourceGroupName, dataProductName, dataTypeName, body);
    }

    public void deleteData(Object body, Context context) {
        serviceManager.dataTypes().deleteData(resourceGroupName, dataProductName, dataTypeName, body, context);
    }

    public Response<ContainerSasToken> generateStorageContainerSasTokenWithResponse(ContainerSaS body,
        Context context) {
        return serviceManager.dataTypes().generateStorageContainerSasTokenWithResponse(resourceGroupName,
            dataProductName, dataTypeName, body, context);
    }

    public ContainerSasToken generateStorageContainerSasToken(ContainerSaS body) {
        return serviceManager.dataTypes().generateStorageContainerSasToken(resourceGroupName, dataProductName,
            dataTypeName, body);
    }

    public DataTypeImpl withState(DataTypeState state) {
        if (isInCreateMode()) {
            this.innerModel().withState(state);
            return this;
        } else {
            this.updateProperties.withState(state);
            return this;
        }
    }

    public DataTypeImpl withStorageOutputRetention(Integer storageOutputRetention) {
        if (isInCreateMode()) {
            this.innerModel().withStorageOutputRetention(storageOutputRetention);
            return this;
        } else {
            this.updateProperties.withStorageOutputRetention(storageOutputRetention);
            return this;
        }
    }

    public DataTypeImpl withDatabaseCacheRetention(Integer databaseCacheRetention) {
        if (isInCreateMode()) {
            this.innerModel().withDatabaseCacheRetention(databaseCacheRetention);
            return this;
        } else {
            this.updateProperties.withDatabaseCacheRetention(databaseCacheRetention);
            return this;
        }
    }

    public DataTypeImpl withDatabaseRetention(Integer databaseRetention) {
        if (isInCreateMode()) {
            this.innerModel().withDatabaseRetention(databaseRetention);
            return this;
        } else {
            this.updateProperties.withDatabaseRetention(databaseRetention);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
