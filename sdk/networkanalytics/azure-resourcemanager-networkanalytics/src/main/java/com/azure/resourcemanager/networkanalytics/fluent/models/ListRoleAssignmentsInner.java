// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkanalytics.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * list role assignments.
 */
@Fluent
public final class ListRoleAssignmentsInner {
    /*
     * Count of role assignments.
     */
    @JsonProperty(value = "count", required = true)
    private int count;

    /*
     * list of role assignments
     */
    @JsonProperty(value = "roleAssignmentResponse", required = true)
    private List<RoleAssignmentDetailInner> roleAssignmentResponse;

    /**
     * Creates an instance of ListRoleAssignmentsInner class.
     */
    public ListRoleAssignmentsInner() {
    }

    /**
     * Get the count property: Count of role assignments.
     * 
     * @return the count value.
     */
    public int count() {
        return this.count;
    }

    /**
     * Set the count property: Count of role assignments.
     * 
     * @param count the count value to set.
     * @return the ListRoleAssignmentsInner object itself.
     */
    public ListRoleAssignmentsInner withCount(int count) {
        this.count = count;
        return this;
    }

    /**
     * Get the roleAssignmentResponse property: list of role assignments.
     * 
     * @return the roleAssignmentResponse value.
     */
    public List<RoleAssignmentDetailInner> roleAssignmentResponse() {
        return this.roleAssignmentResponse;
    }

    /**
     * Set the roleAssignmentResponse property: list of role assignments.
     * 
     * @param roleAssignmentResponse the roleAssignmentResponse value to set.
     * @return the ListRoleAssignmentsInner object itself.
     */
    public ListRoleAssignmentsInner withRoleAssignmentResponse(List<RoleAssignmentDetailInner> roleAssignmentResponse) {
        this.roleAssignmentResponse = roleAssignmentResponse;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (roleAssignmentResponse() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property roleAssignmentResponse in model ListRoleAssignmentsInner"));
        } else {
            roleAssignmentResponse().forEach(e -> e.validate());
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ListRoleAssignmentsInner.class);
}
