// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkanalytics.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/**
 * The details for storage account sas creation.
 */
@Fluent
public final class AccountSas {
    /*
     * Sas token start timestamp.
     */
    @JsonProperty(value = "startTimeStamp", required = true)
    private OffsetDateTime startTimestamp;

    /*
     * Sas token expiry timestamp.
     */
    @JsonProperty(value = "expiryTimeStamp", required = true)
    private OffsetDateTime expiryTimestamp;

    /*
     * Ip Address
     */
    @JsonProperty(value = "ipAddress", required = true)
    private String ipAddress;

    /**
     * Creates an instance of AccountSas class.
     */
    public AccountSas() {
    }

    /**
     * Get the startTimestamp property: Sas token start timestamp.
     * 
     * @return the startTimestamp value.
     */
    public OffsetDateTime startTimestamp() {
        return this.startTimestamp;
    }

    /**
     * Set the startTimestamp property: Sas token start timestamp.
     * 
     * @param startTimestamp the startTimestamp value to set.
     * @return the AccountSas object itself.
     */
    public AccountSas withStartTimestamp(OffsetDateTime startTimestamp) {
        this.startTimestamp = startTimestamp;
        return this;
    }

    /**
     * Get the expiryTimestamp property: Sas token expiry timestamp.
     * 
     * @return the expiryTimestamp value.
     */
    public OffsetDateTime expiryTimestamp() {
        return this.expiryTimestamp;
    }

    /**
     * Set the expiryTimestamp property: Sas token expiry timestamp.
     * 
     * @param expiryTimestamp the expiryTimestamp value to set.
     * @return the AccountSas object itself.
     */
    public AccountSas withExpiryTimestamp(OffsetDateTime expiryTimestamp) {
        this.expiryTimestamp = expiryTimestamp;
        return this;
    }

    /**
     * Get the ipAddress property: Ip Address.
     * 
     * @return the ipAddress value.
     */
    public String ipAddress() {
        return this.ipAddress;
    }

    /**
     * Set the ipAddress property: Ip Address.
     * 
     * @param ipAddress the ipAddress value to set.
     * @return the AccountSas object itself.
     */
    public AccountSas withIpAddress(String ipAddress) {
        this.ipAddress = ipAddress;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (startTimestamp() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property startTimestamp in model AccountSas"));
        }
        if (expiryTimestamp() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property expiryTimestamp in model AccountSas"));
        }
        if (ipAddress() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property ipAddress in model AccountSas"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(AccountSas.class);
}
