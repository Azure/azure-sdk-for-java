// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkanalytics.models;

import com.azure.core.http.rest.Response;
import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.networkanalytics.fluent.models.DataProductInner;
import com.azure.resourcemanager.networkanalytics.fluent.models.RoleAssignmentDetailInner;
import java.util.List;
import java.util.Map;

/**
 * An immutable client-side representation of DataProduct.
 */
public interface DataProduct {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     * 
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     * 
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the identity property: The managed service identities assigned to this resource.
     * 
     * @return the identity value.
     */
    ManagedServiceIdentity identity();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the resourceGuid property: The resource GUID property of the data product resource.
     * 
     * @return the resourceGuid value.
     */
    String resourceGuid();

    /**
     * Gets the provisioningState property: Latest provisioning state of data product.
     * 
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the publisher property: Data product publisher name.
     * 
     * @return the publisher value.
     */
    String publisher();

    /**
     * Gets the product property: Product name of data product.
     * 
     * @return the product value.
     */
    String product();

    /**
     * Gets the majorVersion property: Major version of data product.
     * 
     * @return the majorVersion value.
     */
    String majorVersion();

    /**
     * Gets the owners property: List of name or email associated with data product resource deployment.
     * 
     * @return the owners value.
     */
    List<String> owners();

    /**
     * Gets the redundancy property: Flag to enable or disable redundancy for data product.
     * 
     * @return the redundancy value.
     */
    ControlState redundancy();

    /**
     * Gets the purviewAccount property: Purview account url for data product to connect to.
     * 
     * @return the purviewAccount value.
     */
    String purviewAccount();

    /**
     * Gets the purviewCollection property: Purview collection url for data product to connect to.
     * 
     * @return the purviewCollection value.
     */
    String purviewCollection();

    /**
     * Gets the privateLinksEnabled property: Flag to enable or disable private link for data product resource.
     * 
     * @return the privateLinksEnabled value.
     */
    ControlState privateLinksEnabled();

    /**
     * Gets the publicNetworkAccess property: Flag to enable or disable public access of data product resource.
     * 
     * @return the publicNetworkAccess value.
     */
    ControlState publicNetworkAccess();

    /**
     * Gets the customerManagedKeyEncryptionEnabled property: Flag to enable customer managed key encryption for data
     * product.
     * 
     * @return the customerManagedKeyEncryptionEnabled value.
     */
    ControlState customerManagedKeyEncryptionEnabled();

    /**
     * Gets the customerEncryptionKey property: Customer managed encryption key details for data product.
     * 
     * @return the customerEncryptionKey value.
     */
    EncryptionKeyDetails customerEncryptionKey();

    /**
     * Gets the networkacls property: Network rule set for data product.
     * 
     * @return the networkacls value.
     */
    DataProductNetworkAcls networkacls();

    /**
     * Gets the managedResourceGroupConfiguration property: Managed resource group configuration.
     * 
     * @return the managedResourceGroupConfiguration value.
     */
    ManagedResourceGroupConfiguration managedResourceGroupConfiguration();

    /**
     * Gets the availableMinorVersions property: List of available minor versions of the data product resource.
     * 
     * @return the availableMinorVersions value.
     */
    List<String> availableMinorVersions();

    /**
     * Gets the currentMinorVersion property: Current configured minor version of the data product resource.
     * 
     * @return the currentMinorVersion value.
     */
    String currentMinorVersion();

    /**
     * Gets the documentation property: Documentation link for the data product based on definition file.
     * 
     * @return the documentation value.
     */
    String documentation();

    /**
     * Gets the consumptionEndpoints property: Resource links which exposed to the customer to query the data.
     * 
     * @return the consumptionEndpoints value.
     */
    ConsumptionEndpointsProperties consumptionEndpoints();

    /**
     * Gets the keyVaultUrl property: Key vault url.
     * 
     * @return the keyVaultUrl value.
     */
    String keyVaultUrl();

    /**
     * Gets the region of the resource.
     * 
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     * 
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.networkanalytics.fluent.models.DataProductInner object.
     * 
     * @return the inner object.
     */
    DataProductInner innerModel();

    /**
     * The entirety of the DataProduct definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithLocation,
        DefinitionStages.WithResourceGroup, DefinitionStages.WithCreate {
    }

    /**
     * The DataProduct definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the DataProduct definition.
         */
        interface Blank extends WithLocation {
        }

        /**
         * The stage of the DataProduct definition allowing to specify location.
         */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }

        /**
         * The stage of the DataProduct definition allowing to specify parent resource.
         */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }

        /**
         * The stage of the DataProduct definition which contains all the minimum required properties for the resource
         * to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithTags, DefinitionStages.WithIdentity,
            DefinitionStages.WithPublisher, DefinitionStages.WithProduct, DefinitionStages.WithMajorVersion,
            DefinitionStages.WithOwners, DefinitionStages.WithRedundancy, DefinitionStages.WithPurviewAccount,
            DefinitionStages.WithPurviewCollection, DefinitionStages.WithPrivateLinksEnabled,
            DefinitionStages.WithPublicNetworkAccess, DefinitionStages.WithCustomerManagedKeyEncryptionEnabled,
            DefinitionStages.WithCustomerEncryptionKey, DefinitionStages.WithNetworkacls,
            DefinitionStages.WithManagedResourceGroupConfiguration {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            DataProduct create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            DataProduct create(Context context);
        }

        /**
         * The stage of the DataProduct definition allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the DataProduct definition allowing to specify identity.
         */
        interface WithIdentity {
            /**
             * Specifies the identity property: The managed service identities assigned to this resource..
             * 
             * @param identity The managed service identities assigned to this resource.
             * @return the next definition stage.
             */
            WithCreate withIdentity(ManagedServiceIdentity identity);
        }

        /**
         * The stage of the DataProduct definition allowing to specify publisher.
         */
        interface WithPublisher {
            /**
             * Specifies the publisher property: Data product publisher name..
             * 
             * @param publisher Data product publisher name.
             * @return the next definition stage.
             */
            WithCreate withPublisher(String publisher);
        }

        /**
         * The stage of the DataProduct definition allowing to specify product.
         */
        interface WithProduct {
            /**
             * Specifies the product property: Product name of data product..
             * 
             * @param product Product name of data product.
             * @return the next definition stage.
             */
            WithCreate withProduct(String product);
        }

        /**
         * The stage of the DataProduct definition allowing to specify majorVersion.
         */
        interface WithMajorVersion {
            /**
             * Specifies the majorVersion property: Major version of data product..
             * 
             * @param majorVersion Major version of data product.
             * @return the next definition stage.
             */
            WithCreate withMajorVersion(String majorVersion);
        }

        /**
         * The stage of the DataProduct definition allowing to specify owners.
         */
        interface WithOwners {
            /**
             * Specifies the owners property: List of name or email associated with data product resource deployment..
             * 
             * @param owners List of name or email associated with data product resource deployment.
             * @return the next definition stage.
             */
            WithCreate withOwners(List<String> owners);
        }

        /**
         * The stage of the DataProduct definition allowing to specify redundancy.
         */
        interface WithRedundancy {
            /**
             * Specifies the redundancy property: Flag to enable or disable redundancy for data product..
             * 
             * @param redundancy Flag to enable or disable redundancy for data product.
             * @return the next definition stage.
             */
            WithCreate withRedundancy(ControlState redundancy);
        }

        /**
         * The stage of the DataProduct definition allowing to specify purviewAccount.
         */
        interface WithPurviewAccount {
            /**
             * Specifies the purviewAccount property: Purview account url for data product to connect to..
             * 
             * @param purviewAccount Purview account url for data product to connect to.
             * @return the next definition stage.
             */
            WithCreate withPurviewAccount(String purviewAccount);
        }

        /**
         * The stage of the DataProduct definition allowing to specify purviewCollection.
         */
        interface WithPurviewCollection {
            /**
             * Specifies the purviewCollection property: Purview collection url for data product to connect to..
             * 
             * @param purviewCollection Purview collection url for data product to connect to.
             * @return the next definition stage.
             */
            WithCreate withPurviewCollection(String purviewCollection);
        }

        /**
         * The stage of the DataProduct definition allowing to specify privateLinksEnabled.
         */
        interface WithPrivateLinksEnabled {
            /**
             * Specifies the privateLinksEnabled property: Flag to enable or disable private link for data product
             * resource..
             * 
             * @param privateLinksEnabled Flag to enable or disable private link for data product resource.
             * @return the next definition stage.
             */
            WithCreate withPrivateLinksEnabled(ControlState privateLinksEnabled);
        }

        /**
         * The stage of the DataProduct definition allowing to specify publicNetworkAccess.
         */
        interface WithPublicNetworkAccess {
            /**
             * Specifies the publicNetworkAccess property: Flag to enable or disable public access of data product
             * resource..
             * 
             * @param publicNetworkAccess Flag to enable or disable public access of data product resource.
             * @return the next definition stage.
             */
            WithCreate withPublicNetworkAccess(ControlState publicNetworkAccess);
        }

        /**
         * The stage of the DataProduct definition allowing to specify customerManagedKeyEncryptionEnabled.
         */
        interface WithCustomerManagedKeyEncryptionEnabled {
            /**
             * Specifies the customerManagedKeyEncryptionEnabled property: Flag to enable customer managed key
             * encryption for data product..
             * 
             * @param customerManagedKeyEncryptionEnabled Flag to enable customer managed key encryption for data
             * product.
             * @return the next definition stage.
             */
            WithCreate withCustomerManagedKeyEncryptionEnabled(ControlState customerManagedKeyEncryptionEnabled);
        }

        /**
         * The stage of the DataProduct definition allowing to specify customerEncryptionKey.
         */
        interface WithCustomerEncryptionKey {
            /**
             * Specifies the customerEncryptionKey property: Customer managed encryption key details for data product..
             * 
             * @param customerEncryptionKey Customer managed encryption key details for data product.
             * @return the next definition stage.
             */
            WithCreate withCustomerEncryptionKey(EncryptionKeyDetails customerEncryptionKey);
        }

        /**
         * The stage of the DataProduct definition allowing to specify networkacls.
         */
        interface WithNetworkacls {
            /**
             * Specifies the networkacls property: Network rule set for data product..
             * 
             * @param networkacls Network rule set for data product.
             * @return the next definition stage.
             */
            WithCreate withNetworkacls(DataProductNetworkAcls networkacls);
        }

        /**
         * The stage of the DataProduct definition allowing to specify managedResourceGroupConfiguration.
         */
        interface WithManagedResourceGroupConfiguration {
            /**
             * Specifies the managedResourceGroupConfiguration property: Managed resource group configuration..
             * 
             * @param managedResourceGroupConfiguration Managed resource group configuration.
             * @return the next definition stage.
             */
            WithCreate withManagedResourceGroupConfiguration(
                ManagedResourceGroupConfiguration managedResourceGroupConfiguration);
        }
    }

    /**
     * Begins update for the DataProduct resource.
     * 
     * @return the stage of resource update.
     */
    DataProduct.Update update();

    /**
     * The template for DataProduct update.
     */
    interface Update extends UpdateStages.WithTags, UpdateStages.WithIdentity, UpdateStages.WithOwners,
        UpdateStages.WithPurviewAccount, UpdateStages.WithPurviewCollection, UpdateStages.WithPrivateLinksEnabled,
        UpdateStages.WithCurrentMinorVersion {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        DataProduct apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        DataProduct apply(Context context);
    }

    /**
     * The DataProduct update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the DataProduct update allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }

        /**
         * The stage of the DataProduct update allowing to specify identity.
         */
        interface WithIdentity {
            /**
             * Specifies the identity property: The managed service identities assigned to this resource..
             * 
             * @param identity The managed service identities assigned to this resource.
             * @return the next definition stage.
             */
            Update withIdentity(ManagedServiceIdentity identity);
        }

        /**
         * The stage of the DataProduct update allowing to specify owners.
         */
        interface WithOwners {
            /**
             * Specifies the owners property: List of name or email associated with data product resource deployment..
             * 
             * @param owners List of name or email associated with data product resource deployment.
             * @return the next definition stage.
             */
            Update withOwners(List<String> owners);
        }

        /**
         * The stage of the DataProduct update allowing to specify purviewAccount.
         */
        interface WithPurviewAccount {
            /**
             * Specifies the purviewAccount property: Purview account url for data product to connect to..
             * 
             * @param purviewAccount Purview account url for data product to connect to.
             * @return the next definition stage.
             */
            Update withPurviewAccount(String purviewAccount);
        }

        /**
         * The stage of the DataProduct update allowing to specify purviewCollection.
         */
        interface WithPurviewCollection {
            /**
             * Specifies the purviewCollection property: Purview collection url for data product to connect to..
             * 
             * @param purviewCollection Purview collection url for data product to connect to.
             * @return the next definition stage.
             */
            Update withPurviewCollection(String purviewCollection);
        }

        /**
         * The stage of the DataProduct update allowing to specify privateLinksEnabled.
         */
        interface WithPrivateLinksEnabled {
            /**
             * Specifies the privateLinksEnabled property: Flag to enable or disable private link for data product
             * resource..
             * 
             * @param privateLinksEnabled Flag to enable or disable private link for data product resource.
             * @return the next definition stage.
             */
            Update withPrivateLinksEnabled(ControlState privateLinksEnabled);
        }

        /**
         * The stage of the DataProduct update allowing to specify currentMinorVersion.
         */
        interface WithCurrentMinorVersion {
            /**
             * Specifies the currentMinorVersion property: Current configured minor version of the data product
             * resource..
             * 
             * @param currentMinorVersion Current configured minor version of the data product resource.
             * @return the next definition stage.
             */
            Update withCurrentMinorVersion(String currentMinorVersion);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    DataProduct refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    DataProduct refresh(Context context);

    /**
     * Assign role to the data product.
     * 
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the details for role assignment response along with {@link Response}.
     */
    Response<RoleAssignmentDetail> addUserRoleWithResponse(RoleAssignmentCommonProperties body, Context context);

    /**
     * Assign role to the data product.
     * 
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the details for role assignment response.
     */
    RoleAssignmentDetail addUserRole(RoleAssignmentCommonProperties body);

    /**
     * Generate sas token for storage account.
     * 
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return details of storage account sas token along with {@link Response}.
     */
    Response<AccountSasToken> generateStorageAccountSasTokenWithResponse(AccountSas body, Context context);

    /**
     * Generate sas token for storage account.
     * 
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return details of storage account sas token.
     */
    AccountSasToken generateStorageAccountSasToken(AccountSas body);

    /**
     * List user roles associated with the data product.
     * 
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list role assignments along with {@link Response}.
     */
    Response<ListRoleAssignments> listRolesAssignmentsWithResponse(Object body, Context context);

    /**
     * List user roles associated with the data product.
     * 
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list role assignments.
     */
    ListRoleAssignments listRolesAssignments(Object body);

    /**
     * Remove role from the data product.
     * 
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> removeUserRoleWithResponse(RoleAssignmentDetailInner body, Context context);

    /**
     * Remove role from the data product.
     * 
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void removeUserRole(RoleAssignmentDetailInner body);

    /**
     * Initiate key rotation on Data Product.
     * 
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> rotateKeyWithResponse(KeyVaultInfo body, Context context);

    /**
     * Initiate key rotation on Data Product.
     * 
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void rotateKey(KeyVaultInfo body);
}
