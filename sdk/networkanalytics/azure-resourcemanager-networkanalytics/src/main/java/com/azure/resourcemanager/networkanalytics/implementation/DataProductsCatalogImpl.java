// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkanalytics.implementation;

import com.azure.core.management.SystemData;
import com.azure.resourcemanager.networkanalytics.fluent.models.DataProductsCatalogInner;
import com.azure.resourcemanager.networkanalytics.models.DataProductsCatalog;
import com.azure.resourcemanager.networkanalytics.models.ProvisioningState;
import com.azure.resourcemanager.networkanalytics.models.PublisherInformation;
import java.util.Collections;
import java.util.List;

public final class DataProductsCatalogImpl implements DataProductsCatalog {
    private DataProductsCatalogInner innerObject;

    private final com.azure.resourcemanager.networkanalytics.NetworkanalyticsManager serviceManager;

    DataProductsCatalogImpl(DataProductsCatalogInner innerObject,
        com.azure.resourcemanager.networkanalytics.NetworkanalyticsManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public List<PublisherInformation> publishers() {
        List<PublisherInformation> inner = this.innerModel().publishers();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public DataProductsCatalogInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.networkanalytics.NetworkanalyticsManager manager() {
        return this.serviceManager;
    }
}
