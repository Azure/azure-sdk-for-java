// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkanalytics.generated;

import com.azure.resourcemanager.networkanalytics.models.ControlState;
import com.azure.resourcemanager.networkanalytics.models.DataProductNetworkAcls;
import com.azure.resourcemanager.networkanalytics.models.DataProductProperties;
import com.azure.resourcemanager.networkanalytics.models.DefaultAction;
import com.azure.resourcemanager.networkanalytics.models.EncryptionKeyDetails;
import com.azure.resourcemanager.networkanalytics.models.IpRules;
import com.azure.resourcemanager.networkanalytics.models.ManagedResourceGroupConfiguration;
import com.azure.resourcemanager.networkanalytics.models.ManagedServiceIdentity;
import com.azure.resourcemanager.networkanalytics.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.networkanalytics.models.UserAssignedIdentity;
import com.azure.resourcemanager.networkanalytics.models.VirtualNetworkRule;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for DataProducts Create.
 */
public final class DataProductsCreateSamples {
    /*
     * x-ms-original-file:
     * specification/networkanalytics/resource-manager/Microsoft.NetworkAnalytics/stable/2023-11-15/examples/
     * DataProducts_Create_MaximumSet_Gen.json
     */
    /**
     * Sample code: DataProducts_Create_MaximumSet_Gen.
     * 
     * @param manager Entry point to NetworkAnalyticsManager.
     */
    public static void
        dataProductsCreateMaximumSetGen(com.azure.resourcemanager.networkanalytics.NetworkAnalyticsManager manager) {
        manager.dataProducts().define("dataproduct01").withRegion("eastus")
            .withExistingResourceGroup("aoiresourceGroupName")
            .withTags(mapOf("userSpecifiedKeyName", "fakeTokenPlaceholder"))
            .withProperties(new DataProductProperties().withPublisher("Microsoft").withProduct("MCC")
                .withMajorVersion("1.0.0").withOwners(Arrays.asList("abc@micros.com"))
                .withRedundancy(ControlState.DISABLED).withPurviewAccount("testpurview")
                .withPurviewCollection("134567890").withPrivateLinksEnabled(ControlState.DISABLED)
                .withPublicNetworkAccess(ControlState.ENABLED)
                .withCustomerManagedKeyEncryptionEnabled(ControlState.ENABLED)
                .withCustomerEncryptionKey(new EncryptionKeyDetails().withKeyVaultUri("fakeTokenPlaceholder")
                    .withKeyName("fakeTokenPlaceholder").withKeyVersion("fakeTokenPlaceholder"))
                .withNetworkacls(new DataProductNetworkAcls()
                    .withVirtualNetworkRule(Arrays.asList(new VirtualNetworkRule().withId(
                        "/subscriptions/subscriptionId/resourcegroups/resourceGroupName/providers/Microsoft.Network/virtualNetworks/virtualNetworkName/subnets/subnetName")
                        .withAction("Allow").withState("")))
                    .withIpRules(Arrays.asList(new IpRules().withValue("1.1.1.1").withAction("Allow")))
                    .withAllowedQueryIpRangeList(Arrays.asList("1.1.1.1")).withDefaultAction(DefaultAction.ALLOW))
                .withManagedResourceGroupConfiguration(
                    new ManagedResourceGroupConfiguration().withName("managedResourceGroupName").withLocation("eastus"))
                .withCurrentMinorVersion("1.0.1"))
            .withIdentity(new ManagedServiceIdentity().withType(ManagedServiceIdentityType.USER_ASSIGNED)
                .withUserAssignedIdentities(mapOf(
                    "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.ManagedIdentity/userAssignedIdentities/id1",
                    new UserAssignedIdentity())))
            .create();
    }

    /*
     * x-ms-original-file:
     * specification/networkanalytics/resource-manager/Microsoft.NetworkAnalytics/stable/2023-11-15/examples/
     * DataProducts_Create_MinimumSet_Gen.json
     */
    /**
     * Sample code: DataProducts_Create_MaximumSet_Gen - generated by [MinimumSet] rule_MinimumSet_Gen.
     * 
     * @param manager Entry point to NetworkAnalyticsManager.
     */
    public static void dataProductsCreateMaximumSetGenGeneratedByMinimumSetRuleMinimumSetGen(
        com.azure.resourcemanager.networkanalytics.NetworkAnalyticsManager manager) {
        manager.dataProducts().define("dataproduct01").withRegion("eastus")
            .withExistingResourceGroup("aoiresourceGroupName")
            .withTags(mapOf("userSpecifiedKeyName", "fakeTokenPlaceholder"))
            .withProperties(
                new DataProductProperties().withPublisher("Microsoft").withProduct("MCC").withMajorVersion("1.0.0"))
            .create();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
