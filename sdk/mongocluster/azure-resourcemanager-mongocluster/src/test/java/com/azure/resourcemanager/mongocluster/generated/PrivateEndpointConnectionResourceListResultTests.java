// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mongocluster.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.mongocluster.fluent.models.PrivateEndpointConnectionResourceInner;
import com.azure.resourcemanager.mongocluster.models.PrivateEndpoint;
import com.azure.resourcemanager.mongocluster.models.PrivateEndpointConnectionProperties;
import com.azure.resourcemanager.mongocluster.models.PrivateEndpointConnectionResourceListResult;
import com.azure.resourcemanager.mongocluster.models.PrivateEndpointServiceConnectionStatus;
import com.azure.resourcemanager.mongocluster.models.PrivateLinkServiceConnectionState;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PrivateEndpointConnectionResourceListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateEndpointConnectionResourceListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"groupIds\":[\"uqktap\",\"pwgcuertu\"],\"privateEndpoint\":{\"id\":\"o\"},\"privateLinkServiceConnectionState\":{\"status\":\"Pending\",\"description\":\"hbmdgbbjfdd\",\"actionsRequired\":\"bmbexppbhtqqro\"},\"provisioningState\":\"Succeeded\"},\"id\":\"psalgbqux\",\"name\":\"gjyjgzjaoyfhrtxi\",\"type\":\"n\"},{\"properties\":{\"groupIds\":[\"jysvl\",\"juvf\"],\"privateEndpoint\":{\"id\":\"rlyxwjkcprbnw\"},\"privateLinkServiceConnectionState\":{\"status\":\"Approved\",\"description\":\"vtb\",\"actionsRequired\":\"ysszdnrujqguh\"},\"provisioningState\":\"Creating\"},\"id\":\"qfprwzwbn\",\"name\":\"uitnwuiz\",\"type\":\"a\"},{\"properties\":{\"groupIds\":[\"izuckyfihrfidfvz\",\"dzuhtymwi\"],\"privateEndpoint\":{\"id\":\"fthwxmnteiwa\"},\"privateLinkServiceConnectionState\":{\"status\":\"Rejected\",\"description\":\"mijcmmxdcufufs\",\"actionsRequired\":\"ymzidn\"},\"provisioningState\":\"Failed\"},\"id\":\"xtbzsgfyccsne\",\"name\":\"mdwzjeiachboo\",\"type\":\"flnrosfqpteehzz\"}],\"nextLink\":\"pyqr\"}")
            .toObject(PrivateEndpointConnectionResourceListResult.class);
        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.PENDING,
            model.value().get(0).properties().privateLinkServiceConnectionState().status());
        Assertions.assertEquals("hbmdgbbjfdd",
            model.value().get(0).properties().privateLinkServiceConnectionState().description());
        Assertions.assertEquals("bmbexppbhtqqro",
            model.value().get(0).properties().privateLinkServiceConnectionState().actionsRequired());
        Assertions.assertEquals("pyqr", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateEndpointConnectionResourceListResult model
            = new PrivateEndpointConnectionResourceListResult().withValue(Arrays.asList(
                new PrivateEndpointConnectionResourceInner()
                    .withProperties(new PrivateEndpointConnectionProperties().withPrivateEndpoint(new PrivateEndpoint())
                        .withPrivateLinkServiceConnectionState(new PrivateLinkServiceConnectionState()
                            .withStatus(PrivateEndpointServiceConnectionStatus.PENDING)
                            .withDescription("hbmdgbbjfdd")
                            .withActionsRequired("bmbexppbhtqqro"))),
                new PrivateEndpointConnectionResourceInner()
                    .withProperties(new PrivateEndpointConnectionProperties().withPrivateEndpoint(new PrivateEndpoint())
                        .withPrivateLinkServiceConnectionState(new PrivateLinkServiceConnectionState()
                            .withStatus(PrivateEndpointServiceConnectionStatus.APPROVED)
                            .withDescription("vtb")
                            .withActionsRequired("ysszdnrujqguh"))),
                new PrivateEndpointConnectionResourceInner()
                    .withProperties(new PrivateEndpointConnectionProperties().withPrivateEndpoint(new PrivateEndpoint())
                        .withPrivateLinkServiceConnectionState(new PrivateLinkServiceConnectionState()
                            .withStatus(PrivateEndpointServiceConnectionStatus.REJECTED)
                            .withDescription("mijcmmxdcufufs")
                            .withActionsRequired("ymzidn")))))
                .withNextLink("pyqr");
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnectionResourceListResult.class);
        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.PENDING,
            model.value().get(0).properties().privateLinkServiceConnectionState().status());
        Assertions.assertEquals("hbmdgbbjfdd",
            model.value().get(0).properties().privateLinkServiceConnectionState().description());
        Assertions.assertEquals("bmbexppbhtqqro",
            model.value().get(0).properties().privateLinkServiceConnectionState().actionsRequired());
        Assertions.assertEquals("pyqr", model.nextLink());
    }
}
