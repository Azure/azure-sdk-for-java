// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.mongocluster;

import com.azure.core.credential.TokenCredential;
import com.azure.core.http.HttpPipeline;
import com.azure.core.management.profile.AzureProfile;
import com.azure.resourcemanager.mongocluster.fluent.DocumentDBClient;
import com.azure.resourcemanager.mongocluster.implementation.DocumentDBClientBuilder;
import com.azure.resourcemanager.mongocluster.implementation.FirewallRulesImpl;
import com.azure.resourcemanager.mongocluster.implementation.MongoClustersImpl;
import com.azure.resourcemanager.mongocluster.implementation.OperationsImpl;
import com.azure.resourcemanager.mongocluster.implementation.PrivateEndpointConnectionsImpl;
import com.azure.resourcemanager.mongocluster.implementation.PrivateLinksImpl;
import com.azure.resourcemanager.mongocluster.models.FirewallRules;
import com.azure.resourcemanager.mongocluster.models.MongoClusters;
import com.azure.resourcemanager.mongocluster.models.Operations;
import com.azure.resourcemanager.mongocluster.models.PrivateEndpointConnections;
import com.azure.resourcemanager.mongocluster.models.PrivateLinks;
import java.time.Duration;
import java.util.Objects;

/**
 * Entry point to MongoClusterManager.
 * The Microsoft Azure management API provides create, read, update, and delete functionality for Azure Cosmos DB for
 * MongoDB vCore resources including clusters and firewall rules.
 */
public final class MongoClusterManager {
    private Operations operations;

    private MongoClusters mongoClusters;

    private FirewallRules firewallRules;

    private PrivateEndpointConnections privateEndpointConnections;

    private PrivateLinks privateLinks;

    private final DocumentDBClient clientObject;

    private MongoClusterManager(HttpPipeline httpPipeline, AzureProfile profile, Duration defaultPollInterval) {
        Objects.requireNonNull(httpPipeline, "'httpPipeline' cannot be null.");
        Objects.requireNonNull(profile, "'profile' cannot be null.");
        this.clientObject = new DocumentDBClientBuilder().pipeline(httpPipeline)
            .endpoint(profile.getEnvironment().getResourceManagerEndpoint())
            .subscriptionId(profile.getSubscriptionId())
            .defaultPollInterval(defaultPollInterval)
            .buildClient();
    }

    /**
     * Creates an instance of Mongo Cluster service API entry point.
     * 
     * @param credential the credential to use.
     * @param profile the Azure profile for client.
     * @return the Mongo Cluster service API instance.
     */
    public static MongoClusterManager authenticate(TokenCredential credential, AzureProfile profile) {
        Objects.requireNonNull(credential, "'credential' cannot be null.");
        Objects.requireNonNull(profile, "'profile' cannot be null.");
        return configure().authenticate(credential, profile);
    }

    /**
     * Creates an instance of Mongo Cluster service API entry point.
     * 
     * @param httpPipeline the {@link HttpPipeline} configured with Azure authentication credential.
     * @param profile the Azure profile for client.
     * @return the Mongo Cluster service API instance.
     */
    public static MongoClusterManager authenticate(HttpPipeline httpPipeline, AzureProfile profile) {
        Objects.requireNonNull(httpPipeline, "'httpPipeline' cannot be null.");
        Objects.requireNonNull(profile, "'profile' cannot be null.");
        return new MongoClusterManager(httpPipeline, profile, null);
    }

    /**
     * Gets a Configurable instance that can be used to create MongoClusterManager with optional configuration.
     * 
     * @return the Configurable instance allowing configurations.
     */
    public static Configurable configure() {
        return new MongoClusterManager.Configurable();
    }

    /**
     * Gets the resource collection API of Operations.
     * 
     * @return Resource collection API of Operations.
     */
    public Operations operations() {
        if (this.operations == null) {
            this.operations = new OperationsImpl(clientObject.getOperations(), this);
        }
        return operations;
    }

    /**
     * Gets the resource collection API of MongoClusters. It manages MongoCluster.
     * 
     * @return Resource collection API of MongoClusters.
     */
    public MongoClusters mongoClusters() {
        if (this.mongoClusters == null) {
            this.mongoClusters = new MongoClustersImpl(clientObject.getMongoClusters(), this);
        }
        return mongoClusters;
    }

    /**
     * Gets the resource collection API of FirewallRules. It manages FirewallRule.
     * 
     * @return Resource collection API of FirewallRules.
     */
    public FirewallRules firewallRules() {
        if (this.firewallRules == null) {
            this.firewallRules = new FirewallRulesImpl(clientObject.getFirewallRules(), this);
        }
        return firewallRules;
    }

    /**
     * Gets the resource collection API of PrivateEndpointConnections. It manages PrivateEndpointConnectionResource.
     * 
     * @return Resource collection API of PrivateEndpointConnections.
     */
    public PrivateEndpointConnections privateEndpointConnections() {
        if (this.privateEndpointConnections == null) {
            this.privateEndpointConnections
                = new PrivateEndpointConnectionsImpl(clientObject.getPrivateEndpointConnections(), this);
        }
        return privateEndpointConnections;
    }

    /**
     * Gets the resource collection API of PrivateLinks.
     * 
     * @return Resource collection API of PrivateLinks.
     */
    public PrivateLinks privateLinks() {
        if (this.privateLinks == null) {
            this.privateLinks = new PrivateLinksImpl(clientObject.getPrivateLinks(), this);
        }
        return privateLinks;
    }

    /**
     * Gets wrapped service client DocumentDBClient providing direct access to the underlying auto-generated API
     * implementation, based on Azure REST API.
     * 
     * @return Wrapped service client DocumentDBClient.
     */
    public DocumentDBClient serviceClient() {
        return this.clientObject;
    }
}
