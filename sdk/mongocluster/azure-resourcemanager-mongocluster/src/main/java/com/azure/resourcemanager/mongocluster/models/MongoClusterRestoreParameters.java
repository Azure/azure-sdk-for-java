// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.mongocluster.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;

/**
 * Parameters used for restore operations.
 */
@Fluent
public final class MongoClusterRestoreParameters implements JsonSerializable<MongoClusterRestoreParameters> {
    /*
     * UTC point in time to restore a mongo cluster
     */
    private OffsetDateTime pointInTimeUTC;

    /*
     * Resource ID to locate the source cluster to restore
     */
    private String sourceResourceId;

    /**
     * Creates an instance of MongoClusterRestoreParameters class.
     */
    public MongoClusterRestoreParameters() {
    }

    /**
     * Get the pointInTimeUTC property: UTC point in time to restore a mongo cluster.
     * 
     * @return the pointInTimeUTC value.
     */
    public OffsetDateTime pointInTimeUTC() {
        return this.pointInTimeUTC;
    }

    /**
     * Set the pointInTimeUTC property: UTC point in time to restore a mongo cluster.
     * 
     * @param pointInTimeUTC the pointInTimeUTC value to set.
     * @return the MongoClusterRestoreParameters object itself.
     */
    public MongoClusterRestoreParameters withPointInTimeUTC(OffsetDateTime pointInTimeUTC) {
        this.pointInTimeUTC = pointInTimeUTC;
        return this;
    }

    /**
     * Get the sourceResourceId property: Resource ID to locate the source cluster to restore.
     * 
     * @return the sourceResourceId value.
     */
    public String sourceResourceId() {
        return this.sourceResourceId;
    }

    /**
     * Set the sourceResourceId property: Resource ID to locate the source cluster to restore.
     * 
     * @param sourceResourceId the sourceResourceId value to set.
     * @return the MongoClusterRestoreParameters object itself.
     */
    public MongoClusterRestoreParameters withSourceResourceId(String sourceResourceId) {
        this.sourceResourceId = sourceResourceId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("pointInTimeUTC",
            this.pointInTimeUTC == null ? null : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.pointInTimeUTC));
        jsonWriter.writeStringField("sourceResourceId", this.sourceResourceId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MongoClusterRestoreParameters from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MongoClusterRestoreParameters if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the MongoClusterRestoreParameters.
     */
    public static MongoClusterRestoreParameters fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            MongoClusterRestoreParameters deserializedMongoClusterRestoreParameters
                = new MongoClusterRestoreParameters();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("pointInTimeUTC".equals(fieldName)) {
                    deserializedMongoClusterRestoreParameters.pointInTimeUTC = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("sourceResourceId".equals(fieldName)) {
                    deserializedMongoClusterRestoreParameters.sourceResourceId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedMongoClusterRestoreParameters;
        });
    }
}
