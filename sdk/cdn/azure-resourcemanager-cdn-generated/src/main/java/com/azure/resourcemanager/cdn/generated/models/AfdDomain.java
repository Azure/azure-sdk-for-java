// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cdn.generated.models;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.cdn.generated.fluent.models.AfdDomainInner;

/** An immutable client-side representation of AfdDomain. */
public interface AfdDomain {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the tlsSettings property: The configuration specifying how to enable HTTPS for the domain - using
     * AzureFrontDoor managed certificate or user's own certificate. If not specified, enabling ssl uses AzureFrontDoor
     * managed certificate by default.
     *
     * @return the tlsSettings value.
     */
    AfdDomainHttpsParameters tlsSettings();

    /**
     * Gets the azureDnsZone property: Resource reference to the Azure DNS zone.
     *
     * @return the azureDnsZone value.
     */
    ResourceReference azureDnsZone();

    /**
     * Gets the provisioningState property: Provisioning status.
     *
     * @return the provisioningState value.
     */
    AfdProvisioningState provisioningState();

    /**
     * Gets the deploymentStatus property: The deploymentStatus property.
     *
     * @return the deploymentStatus value.
     */
    DeploymentStatus deploymentStatus();

    /**
     * Gets the domainValidationState property: Provisioning substate shows the progress of custom HTTPS
     * enabling/disabling process step by step. DCV stands for DomainControlValidation.
     *
     * @return the domainValidationState value.
     */
    DomainValidationState domainValidationState();

    /**
     * Gets the hostname property: The host name of the domain. Must be a domain name.
     *
     * @return the hostname value.
     */
    String hostname();

    /**
     * Gets the validationProperties property: Values the customer needs to validate domain ownership.
     *
     * @return the validationProperties value.
     */
    DomainValidationProperties validationProperties();

    /**
     * Gets the systemData property: Read only system data.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the inner com.azure.resourcemanager.cdn.generated.fluent.models.AfdDomainInner object.
     *
     * @return the inner object.
     */
    AfdDomainInner innerModel();

    /** The entirety of the AfdDomain definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The AfdDomain definition stages. */
    interface DefinitionStages {
        /** The first stage of the AfdDomain definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the AfdDomain definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, profileName.
             *
             * @param resourceGroupName Name of the Resource group within the Azure subscription.
             * @param profileName Name of the CDN profile which is unique within the resource group.
             * @return the next definition stage.
             */
            WithCreate withExistingProfile(String resourceGroupName, String profileName);
        }
        /**
         * The stage of the AfdDomain definition which contains all the minimum required properties for the resource to
         * be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTlsSettings, DefinitionStages.WithAzureDnsZone, DefinitionStages.WithHostname {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            AfdDomain create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            AfdDomain create(Context context);
        }
        /** The stage of the AfdDomain definition allowing to specify tlsSettings. */
        interface WithTlsSettings {
            /**
             * Specifies the tlsSettings property: The configuration specifying how to enable HTTPS for the domain -
             * using AzureFrontDoor managed certificate or user's own certificate. If not specified, enabling ssl uses
             * AzureFrontDoor managed certificate by default..
             *
             * @param tlsSettings The configuration specifying how to enable HTTPS for the domain - using AzureFrontDoor
             *     managed certificate or user's own certificate. If not specified, enabling ssl uses AzureFrontDoor
             *     managed certificate by default.
             * @return the next definition stage.
             */
            WithCreate withTlsSettings(AfdDomainHttpsParameters tlsSettings);
        }
        /** The stage of the AfdDomain definition allowing to specify azureDnsZone. */
        interface WithAzureDnsZone {
            /**
             * Specifies the azureDnsZone property: Resource reference to the Azure DNS zone.
             *
             * @param azureDnsZone Resource reference to the Azure DNS zone.
             * @return the next definition stage.
             */
            WithCreate withAzureDnsZone(ResourceReference azureDnsZone);
        }
        /** The stage of the AfdDomain definition allowing to specify hostname. */
        interface WithHostname {
            /**
             * Specifies the hostname property: The host name of the domain. Must be a domain name..
             *
             * @param hostname The host name of the domain. Must be a domain name.
             * @return the next definition stage.
             */
            WithCreate withHostname(String hostname);
        }
    }
    /**
     * Begins update for the AfdDomain resource.
     *
     * @return the stage of resource update.
     */
    AfdDomain.Update update();

    /** The template for AfdDomain update. */
    interface Update extends UpdateStages.WithTlsSettings, UpdateStages.WithAzureDnsZone {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        AfdDomain apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        AfdDomain apply(Context context);
    }
    /** The AfdDomain update stages. */
    interface UpdateStages {
        /** The stage of the AfdDomain update allowing to specify tlsSettings. */
        interface WithTlsSettings {
            /**
             * Specifies the tlsSettings property: The configuration specifying how to enable HTTPS for the domain -
             * using AzureFrontDoor managed certificate or user's own certificate. If not specified, enabling ssl uses
             * AzureFrontDoor managed certificate by default..
             *
             * @param tlsSettings The configuration specifying how to enable HTTPS for the domain - using AzureFrontDoor
             *     managed certificate or user's own certificate. If not specified, enabling ssl uses AzureFrontDoor
             *     managed certificate by default.
             * @return the next definition stage.
             */
            Update withTlsSettings(AfdDomainHttpsParameters tlsSettings);
        }
        /** The stage of the AfdDomain update allowing to specify azureDnsZone. */
        interface WithAzureDnsZone {
            /**
             * Specifies the azureDnsZone property: Resource reference to the Azure DNS zone.
             *
             * @param azureDnsZone Resource reference to the Azure DNS zone.
             * @return the next definition stage.
             */
            Update withAzureDnsZone(ResourceReference azureDnsZone);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    AfdDomain refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    AfdDomain refresh(Context context);

    /**
     * Updates the domain validation token.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the validation token.
     */
    ValidationToken refreshValidationToken();

    /**
     * Updates the domain validation token.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the validation token.
     */
    ValidationToken refreshValidationToken(Context context);
}
