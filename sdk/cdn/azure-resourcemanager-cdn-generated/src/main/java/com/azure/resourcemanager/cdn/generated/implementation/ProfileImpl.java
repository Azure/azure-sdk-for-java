// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cdn.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.cdn.generated.fluent.models.ProfileInner;
import com.azure.resourcemanager.cdn.generated.models.Profile;
import com.azure.resourcemanager.cdn.generated.models.ProfileResourceState;
import com.azure.resourcemanager.cdn.generated.models.ProfileUpdateParameters;
import com.azure.resourcemanager.cdn.generated.models.ResourceUsage;
import com.azure.resourcemanager.cdn.generated.models.Sku;
import com.azure.resourcemanager.cdn.generated.models.SsoUri;
import com.azure.resourcemanager.cdn.generated.models.SupportedOptimizationTypesListResult;
import java.util.Collections;
import java.util.Map;

public final class ProfileImpl implements Profile, Profile.Definition, Profile.Update {
    private ProfileInner innerObject;

    private final com.azure.resourcemanager.cdn.generated.CdnManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public Sku sku() {
        return this.innerModel().sku();
    }

    public ProfileResourceState resourceState() {
        return this.innerModel().resourceState();
    }

    public String provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String frontdoorId() {
        return this.innerModel().frontdoorId();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public ProfileInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.cdn.generated.CdnManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String profileName;

    private ProfileUpdateParameters updateProfileUpdateParameters;

    public ProfileImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public Profile create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getProfiles()
                .create(resourceGroupName, profileName, this.innerModel(), Context.NONE);
        return this;
    }

    public Profile create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getProfiles()
                .create(resourceGroupName, profileName, this.innerModel(), context);
        return this;
    }

    ProfileImpl(String name, com.azure.resourcemanager.cdn.generated.CdnManager serviceManager) {
        this.innerObject = new ProfileInner();
        this.serviceManager = serviceManager;
        this.profileName = name;
    }

    public ProfileImpl update() {
        this.updateProfileUpdateParameters = new ProfileUpdateParameters();
        return this;
    }

    public Profile apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getProfiles()
                .update(resourceGroupName, profileName, updateProfileUpdateParameters, Context.NONE);
        return this;
    }

    public Profile apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getProfiles()
                .update(resourceGroupName, profileName, updateProfileUpdateParameters, context);
        return this;
    }

    ProfileImpl(ProfileInner innerObject, com.azure.resourcemanager.cdn.generated.CdnManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.profileName = Utils.getValueFromIdByName(innerObject.id(), "profiles");
    }

    public Profile refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getProfiles()
                .getByResourceGroupWithResponse(resourceGroupName, profileName, Context.NONE)
                .getValue();
        return this;
    }

    public Profile refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getProfiles()
                .getByResourceGroupWithResponse(resourceGroupName, profileName, context)
                .getValue();
        return this;
    }

    public SsoUri generateSsoUri() {
        return serviceManager.profiles().generateSsoUri(resourceGroupName, profileName);
    }

    public Response<SsoUri> generateSsoUriWithResponse(Context context) {
        return serviceManager.profiles().generateSsoUriWithResponse(resourceGroupName, profileName, context);
    }

    public SupportedOptimizationTypesListResult listSupportedOptimizationTypes() {
        return serviceManager.profiles().listSupportedOptimizationTypes(resourceGroupName, profileName);
    }

    public Response<SupportedOptimizationTypesListResult> listSupportedOptimizationTypesWithResponse(Context context) {
        return serviceManager
            .profiles()
            .listSupportedOptimizationTypesWithResponse(resourceGroupName, profileName, context);
    }

    public PagedIterable<ResourceUsage> listResourceUsage() {
        return serviceManager.profiles().listResourceUsage(resourceGroupName, profileName);
    }

    public PagedIterable<ResourceUsage> listResourceUsage(Context context) {
        return serviceManager.profiles().listResourceUsage(resourceGroupName, profileName, context);
    }

    public ProfileImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public ProfileImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public ProfileImpl withSku(Sku sku) {
        this.innerModel().withSku(sku);
        return this;
    }

    public ProfileImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateProfileUpdateParameters.withTags(tags);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
