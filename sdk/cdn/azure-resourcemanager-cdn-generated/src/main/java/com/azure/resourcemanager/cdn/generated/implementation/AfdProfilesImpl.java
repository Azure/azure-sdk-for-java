// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cdn.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.cdn.generated.CdnManager;
import com.azure.resourcemanager.cdn.generated.fluent.AfdProfilesClient;
import com.azure.resourcemanager.cdn.generated.fluent.models.UsageInner;
import com.azure.resourcemanager.cdn.generated.fluent.models.ValidateCustomDomainOutputInner;
import com.azure.resourcemanager.cdn.generated.models.AfdProfiles;
import com.azure.resourcemanager.cdn.generated.models.Usage;
import com.azure.resourcemanager.cdn.generated.models.ValidateCustomDomainInput;
import com.azure.resourcemanager.cdn.generated.models.ValidateCustomDomainOutput;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class AfdProfilesImpl implements AfdProfiles {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(AfdProfilesImpl.class);

    private final AfdProfilesClient innerClient;

    private final CdnManager serviceManager;

    public AfdProfilesImpl(AfdProfilesClient innerClient, CdnManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<Usage> listResourceUsage(String resourceGroupName, String profileName) {
        PagedIterable<UsageInner> inner = this.serviceClient().listResourceUsage(resourceGroupName, profileName);
        return inner.mapPage(inner1 -> new UsageImpl(inner1, this.manager()));
    }

    public PagedIterable<Usage> listResourceUsage(String resourceGroupName, String profileName, Context context) {
        PagedIterable<UsageInner> inner =
            this.serviceClient().listResourceUsage(resourceGroupName, profileName, context);
        return inner.mapPage(inner1 -> new UsageImpl(inner1, this.manager()));
    }

    public ValidateCustomDomainOutput checkHostnameAvailability(
        String resourceGroupName, String profileName, ValidateCustomDomainInput checkHostnameAvailabilityInput) {
        ValidateCustomDomainOutputInner inner =
            this
                .serviceClient()
                .checkHostnameAvailability(resourceGroupName, profileName, checkHostnameAvailabilityInput);
        if (inner != null) {
            return new ValidateCustomDomainOutputImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<ValidateCustomDomainOutput> checkHostnameAvailabilityWithResponse(
        String resourceGroupName,
        String profileName,
        ValidateCustomDomainInput checkHostnameAvailabilityInput,
        Context context) {
        Response<ValidateCustomDomainOutputInner> inner =
            this
                .serviceClient()
                .checkHostnameAvailabilityWithResponse(
                    resourceGroupName, profileName, checkHostnameAvailabilityInput, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new ValidateCustomDomainOutputImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    private AfdProfilesClient serviceClient() {
        return this.innerClient;
    }

    private CdnManager manager() {
        return this.serviceManager;
    }
}
