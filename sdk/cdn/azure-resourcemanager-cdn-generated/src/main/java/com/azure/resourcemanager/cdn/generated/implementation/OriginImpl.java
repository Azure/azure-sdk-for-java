// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cdn.generated.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.cdn.generated.CdnManager;
import com.azure.resourcemanager.cdn.generated.fluent.models.OriginInner;
import com.azure.resourcemanager.cdn.generated.models.Origin;
import com.azure.resourcemanager.cdn.generated.models.OriginResourceState;
import com.azure.resourcemanager.cdn.generated.models.OriginUpdateParameters;
import com.azure.resourcemanager.cdn.generated.models.PrivateEndpointStatus;
import com.azure.resourcemanager.cdn.generated.models.SystemData;

public final class OriginImpl implements Origin, Origin.Definition, Origin.Update {
    private OriginInner innerObject;

    private final CdnManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String hostname() {
        return this.innerModel().hostname();
    }

    public Integer httpPort() {
        return this.innerModel().httpPort();
    }

    public Integer httpsPort() {
        return this.innerModel().httpsPort();
    }

    public String originHostHeader() {
        return this.innerModel().originHostHeader();
    }

    public Integer priority() {
        return this.innerModel().priority();
    }

    public Integer weight() {
        return this.innerModel().weight();
    }

    public Boolean enabled() {
        return this.innerModel().enabled();
    }

    public String privateLinkAlias() {
        return this.innerModel().privateLinkAlias();
    }

    public String privateLinkResourceId() {
        return this.innerModel().privateLinkResourceId();
    }

    public String privateLinkLocation() {
        return this.innerModel().privateLinkLocation();
    }

    public String privateLinkApprovalMessage() {
        return this.innerModel().privateLinkApprovalMessage();
    }

    public OriginResourceState resourceState() {
        return this.innerModel().resourceState();
    }

    public String provisioningState() {
        return this.innerModel().provisioningState();
    }

    public PrivateEndpointStatus privateEndpointStatus() {
        return this.innerModel().privateEndpointStatus();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public OriginInner innerModel() {
        return this.innerObject;
    }

    private CdnManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String profileName;

    private String endpointName;

    private String originName;

    private OriginUpdateParameters updateOriginUpdateProperties;

    public OriginImpl withExistingEndpoint(String resourceGroupName, String profileName, String endpointName) {
        this.resourceGroupName = resourceGroupName;
        this.profileName = profileName;
        this.endpointName = endpointName;
        return this;
    }

    public Origin create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getOrigins()
                .create(resourceGroupName, profileName, endpointName, originName, this.innerModel(), Context.NONE);
        return this;
    }

    public Origin create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getOrigins()
                .create(resourceGroupName, profileName, endpointName, originName, this.innerModel(), context);
        return this;
    }

    public OriginImpl(String name, CdnManager serviceManager) {
        this.innerObject = new OriginInner();
        this.serviceManager = serviceManager;
        this.originName = name;
    }

    public OriginImpl update() {
        this.updateOriginUpdateProperties = new OriginUpdateParameters();
        return this;
    }

    public Origin apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getOrigins()
                .update(
                    resourceGroupName,
                    profileName,
                    endpointName,
                    originName,
                    updateOriginUpdateProperties,
                    Context.NONE);
        return this;
    }

    public Origin apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getOrigins()
                .update(
                    resourceGroupName, profileName, endpointName, originName, updateOriginUpdateProperties, context);
        return this;
    }

    public OriginImpl(OriginInner innerObject, CdnManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.profileName = Utils.getValueFromIdByName(innerObject.id(), "profiles");
        this.endpointName = Utils.getValueFromIdByName(innerObject.id(), "endpoints");
        this.originName = Utils.getValueFromIdByName(innerObject.id(), "origins");
    }

    public Origin refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getOrigins()
                .getWithResponse(resourceGroupName, profileName, endpointName, originName, Context.NONE)
                .getValue();
        return this;
    }

    public Origin refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getOrigins()
                .getWithResponse(resourceGroupName, profileName, endpointName, originName, context)
                .getValue();
        return this;
    }

    public OriginImpl withHostname(String hostname) {
        if (isInCreateMode()) {
            this.innerModel().withHostname(hostname);
            return this;
        } else {
            this.updateOriginUpdateProperties.withHostname(hostname);
            return this;
        }
    }

    public OriginImpl withHttpPort(Integer httpPort) {
        if (isInCreateMode()) {
            this.innerModel().withHttpPort(httpPort);
            return this;
        } else {
            this.updateOriginUpdateProperties.withHttpPort(httpPort);
            return this;
        }
    }

    public OriginImpl withHttpsPort(Integer httpsPort) {
        if (isInCreateMode()) {
            this.innerModel().withHttpsPort(httpsPort);
            return this;
        } else {
            this.updateOriginUpdateProperties.withHttpsPort(httpsPort);
            return this;
        }
    }

    public OriginImpl withOriginHostHeader(String originHostHeader) {
        if (isInCreateMode()) {
            this.innerModel().withOriginHostHeader(originHostHeader);
            return this;
        } else {
            this.updateOriginUpdateProperties.withOriginHostHeader(originHostHeader);
            return this;
        }
    }

    public OriginImpl withPriority(Integer priority) {
        if (isInCreateMode()) {
            this.innerModel().withPriority(priority);
            return this;
        } else {
            this.updateOriginUpdateProperties.withPriority(priority);
            return this;
        }
    }

    public OriginImpl withWeight(Integer weight) {
        if (isInCreateMode()) {
            this.innerModel().withWeight(weight);
            return this;
        } else {
            this.updateOriginUpdateProperties.withWeight(weight);
            return this;
        }
    }

    public OriginImpl withEnabled(Boolean enabled) {
        if (isInCreateMode()) {
            this.innerModel().withEnabled(enabled);
            return this;
        } else {
            this.updateOriginUpdateProperties.withEnabled(enabled);
            return this;
        }
    }

    public OriginImpl withPrivateLinkAlias(String privateLinkAlias) {
        if (isInCreateMode()) {
            this.innerModel().withPrivateLinkAlias(privateLinkAlias);
            return this;
        } else {
            this.updateOriginUpdateProperties.withPrivateLinkAlias(privateLinkAlias);
            return this;
        }
    }

    public OriginImpl withPrivateLinkResourceId(String privateLinkResourceId) {
        if (isInCreateMode()) {
            this.innerModel().withPrivateLinkResourceId(privateLinkResourceId);
            return this;
        } else {
            this.updateOriginUpdateProperties.withPrivateLinkResourceId(privateLinkResourceId);
            return this;
        }
    }

    public OriginImpl withPrivateLinkLocation(String privateLinkLocation) {
        if (isInCreateMode()) {
            this.innerModel().withPrivateLinkLocation(privateLinkLocation);
            return this;
        } else {
            this.updateOriginUpdateProperties.withPrivateLinkLocation(privateLinkLocation);
            return this;
        }
    }

    public OriginImpl withPrivateLinkApprovalMessage(String privateLinkApprovalMessage) {
        if (isInCreateMode()) {
            this.innerModel().withPrivateLinkApprovalMessage(privateLinkApprovalMessage);
            return this;
        } else {
            this.updateOriginUpdateProperties.withPrivateLinkApprovalMessage(privateLinkApprovalMessage);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
