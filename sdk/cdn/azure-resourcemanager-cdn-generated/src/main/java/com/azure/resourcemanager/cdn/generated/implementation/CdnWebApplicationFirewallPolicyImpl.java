// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cdn.generated.implementation;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.cdn.generated.CdnManager;
import com.azure.resourcemanager.cdn.generated.fluent.models.CdnWebApplicationFirewallPolicyInner;
import com.azure.resourcemanager.cdn.generated.models.CdnEndpoint;
import com.azure.resourcemanager.cdn.generated.models.CdnWebApplicationFirewallPolicy;
import com.azure.resourcemanager.cdn.generated.models.CdnWebApplicationFirewallPolicyPatchParameters;
import com.azure.resourcemanager.cdn.generated.models.CustomRuleList;
import com.azure.resourcemanager.cdn.generated.models.ManagedRuleSetList;
import com.azure.resourcemanager.cdn.generated.models.PolicyResourceState;
import com.azure.resourcemanager.cdn.generated.models.PolicySettings;
import com.azure.resourcemanager.cdn.generated.models.ProvisioningState;
import com.azure.resourcemanager.cdn.generated.models.RateLimitRuleList;
import com.azure.resourcemanager.cdn.generated.models.Sku;
import com.azure.resourcemanager.cdn.generated.models.SystemData;
import java.util.Collections;
import java.util.List;
import java.util.Map;

public final class CdnWebApplicationFirewallPolicyImpl
    implements CdnWebApplicationFirewallPolicy,
        CdnWebApplicationFirewallPolicy.Definition,
        CdnWebApplicationFirewallPolicy.Update {
    private CdnWebApplicationFirewallPolicyInner innerObject;

    private final CdnManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public String etag() {
        return this.innerModel().etag();
    }

    public Sku sku() {
        return this.innerModel().sku();
    }

    public PolicySettings policySettings() {
        return this.innerModel().policySettings();
    }

    public RateLimitRuleList rateLimitRules() {
        return this.innerModel().rateLimitRules();
    }

    public CustomRuleList customRules() {
        return this.innerModel().customRules();
    }

    public ManagedRuleSetList managedRules() {
        return this.innerModel().managedRules();
    }

    public List<CdnEndpoint> endpointLinks() {
        List<CdnEndpoint> inner = this.innerModel().endpointLinks();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public PolicyResourceState resourceState() {
        return this.innerModel().resourceState();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public CdnWebApplicationFirewallPolicyInner innerModel() {
        return this.innerObject;
    }

    private CdnManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String policyName;

    private CdnWebApplicationFirewallPolicyPatchParameters updateCdnWebApplicationFirewallPolicyPatchParameters;

    public CdnWebApplicationFirewallPolicyImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public CdnWebApplicationFirewallPolicy create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getPolicies()
                .createOrUpdate(resourceGroupName, policyName, this.innerModel(), Context.NONE);
        return this;
    }

    public CdnWebApplicationFirewallPolicy create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getPolicies()
                .createOrUpdate(resourceGroupName, policyName, this.innerModel(), context);
        return this;
    }

    public CdnWebApplicationFirewallPolicyImpl(String name, CdnManager serviceManager) {
        this.innerObject = new CdnWebApplicationFirewallPolicyInner();
        this.serviceManager = serviceManager;
        this.policyName = name;
    }

    public CdnWebApplicationFirewallPolicyImpl update() {
        this.updateCdnWebApplicationFirewallPolicyPatchParameters =
            new CdnWebApplicationFirewallPolicyPatchParameters();
        return this;
    }

    public CdnWebApplicationFirewallPolicy apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getPolicies()
                .update(
                    resourceGroupName, policyName, updateCdnWebApplicationFirewallPolicyPatchParameters, Context.NONE);
        return this;
    }

    public CdnWebApplicationFirewallPolicy apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getPolicies()
                .update(resourceGroupName, policyName, updateCdnWebApplicationFirewallPolicyPatchParameters, context);
        return this;
    }

    public CdnWebApplicationFirewallPolicyImpl(
        CdnWebApplicationFirewallPolicyInner innerObject, CdnManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.policyName = Utils.getValueFromIdByName(innerObject.id(), "CdnWebApplicationFirewallPolicies");
    }

    public CdnWebApplicationFirewallPolicy refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getPolicies()
                .getByResourceGroupWithResponse(resourceGroupName, policyName, Context.NONE)
                .getValue();
        return this;
    }

    public CdnWebApplicationFirewallPolicy refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getPolicies()
                .getByResourceGroupWithResponse(resourceGroupName, policyName, context)
                .getValue();
        return this;
    }

    public CdnWebApplicationFirewallPolicyImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public CdnWebApplicationFirewallPolicyImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public CdnWebApplicationFirewallPolicyImpl withSku(Sku sku) {
        this.innerModel().withSku(sku);
        return this;
    }

    public CdnWebApplicationFirewallPolicyImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateCdnWebApplicationFirewallPolicyPatchParameters.withTags(tags);
            return this;
        }
    }

    public CdnWebApplicationFirewallPolicyImpl withEtag(String etag) {
        this.innerModel().withEtag(etag);
        return this;
    }

    public CdnWebApplicationFirewallPolicyImpl withPolicySettings(PolicySettings policySettings) {
        this.innerModel().withPolicySettings(policySettings);
        return this;
    }

    public CdnWebApplicationFirewallPolicyImpl withRateLimitRules(RateLimitRuleList rateLimitRules) {
        this.innerModel().withRateLimitRules(rateLimitRules);
        return this;
    }

    public CdnWebApplicationFirewallPolicyImpl withCustomRules(CustomRuleList customRules) {
        this.innerModel().withCustomRules(customRules);
        return this;
    }

    public CdnWebApplicationFirewallPolicyImpl withManagedRules(ManagedRuleSetList managedRules) {
        this.innerModel().withManagedRules(managedRules);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
