// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cdn.generated.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.cdn.generated.CdnManager;
import com.azure.resourcemanager.cdn.generated.fluent.models.RuleInner;
import com.azure.resourcemanager.cdn.generated.models.AfdProvisioningState;
import com.azure.resourcemanager.cdn.generated.models.DeliveryRuleAction;
import com.azure.resourcemanager.cdn.generated.models.DeliveryRuleCondition;
import com.azure.resourcemanager.cdn.generated.models.DeploymentStatus;
import com.azure.resourcemanager.cdn.generated.models.MatchProcessingBehavior;
import com.azure.resourcemanager.cdn.generated.models.Rule;
import com.azure.resourcemanager.cdn.generated.models.RuleUpdateParameters;
import com.azure.resourcemanager.cdn.generated.models.SystemData;
import java.util.Collections;
import java.util.List;

public final class RuleImpl implements Rule, Rule.Definition, Rule.Update {
    private RuleInner innerObject;

    private final CdnManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public Integer order() {
        return this.innerModel().order();
    }

    public List<DeliveryRuleCondition> conditions() {
        List<DeliveryRuleCondition> inner = this.innerModel().conditions();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<DeliveryRuleAction> actions() {
        List<DeliveryRuleAction> inner = this.innerModel().actions();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public MatchProcessingBehavior matchProcessingBehavior() {
        return this.innerModel().matchProcessingBehavior();
    }

    public AfdProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public DeploymentStatus deploymentStatus() {
        return this.innerModel().deploymentStatus();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public RuleInner innerModel() {
        return this.innerObject;
    }

    private CdnManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String profileName;

    private String ruleSetName;

    private String ruleName;

    private RuleUpdateParameters updateRuleUpdateProperties;

    public RuleImpl withExistingRuleSet(String resourceGroupName, String profileName, String ruleSetName) {
        this.resourceGroupName = resourceGroupName;
        this.profileName = profileName;
        this.ruleSetName = ruleSetName;
        return this;
    }

    public Rule create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getRules()
                .create(resourceGroupName, profileName, ruleSetName, ruleName, this.innerModel(), Context.NONE);
        return this;
    }

    public Rule create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getRules()
                .create(resourceGroupName, profileName, ruleSetName, ruleName, this.innerModel(), context);
        return this;
    }

    public RuleImpl(String name, CdnManager serviceManager) {
        this.innerObject = new RuleInner();
        this.serviceManager = serviceManager;
        this.ruleName = name;
    }

    public RuleImpl update() {
        this.updateRuleUpdateProperties = new RuleUpdateParameters();
        return this;
    }

    public Rule apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getRules()
                .update(
                    resourceGroupName, profileName, ruleSetName, ruleName, updateRuleUpdateProperties, Context.NONE);
        return this;
    }

    public Rule apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getRules()
                .update(resourceGroupName, profileName, ruleSetName, ruleName, updateRuleUpdateProperties, context);
        return this;
    }

    public RuleImpl(RuleInner innerObject, CdnManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.profileName = Utils.getValueFromIdByName(innerObject.id(), "profiles");
        this.ruleSetName = Utils.getValueFromIdByName(innerObject.id(), "ruleSets");
        this.ruleName = Utils.getValueFromIdByName(innerObject.id(), "rules");
    }

    public Rule refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getRules()
                .getWithResponse(resourceGroupName, profileName, ruleSetName, ruleName, Context.NONE)
                .getValue();
        return this;
    }

    public Rule refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getRules()
                .getWithResponse(resourceGroupName, profileName, ruleSetName, ruleName, context)
                .getValue();
        return this;
    }

    public RuleImpl withOrder(Integer order) {
        if (isInCreateMode()) {
            this.innerModel().withOrder(order);
            return this;
        } else {
            this.updateRuleUpdateProperties.withOrder(order);
            return this;
        }
    }

    public RuleImpl withConditions(List<DeliveryRuleCondition> conditions) {
        if (isInCreateMode()) {
            this.innerModel().withConditions(conditions);
            return this;
        } else {
            this.updateRuleUpdateProperties.withConditions(conditions);
            return this;
        }
    }

    public RuleImpl withActions(List<DeliveryRuleAction> actions) {
        if (isInCreateMode()) {
            this.innerModel().withActions(actions);
            return this;
        } else {
            this.updateRuleUpdateProperties.withActions(actions);
            return this;
        }
    }

    public RuleImpl withMatchProcessingBehavior(MatchProcessingBehavior matchProcessingBehavior) {
        if (isInCreateMode()) {
            this.innerModel().withMatchProcessingBehavior(matchProcessingBehavior);
            return this;
        } else {
            this.updateRuleUpdateProperties.withMatchProcessingBehavior(matchProcessingBehavior);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
