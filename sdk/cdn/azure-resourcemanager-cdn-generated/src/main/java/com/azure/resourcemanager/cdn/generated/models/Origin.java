// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cdn.generated.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.cdn.generated.fluent.models.OriginInner;

/** An immutable client-side representation of Origin. */
public interface Origin {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the hostname property: The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are
     * supported.This should be unique across all origins in an endpoint.
     *
     * @return the hostname value.
     */
    String hostname();

    /**
     * Gets the httpPort property: The value of the HTTP port. Must be between 1 and 65535.
     *
     * @return the httpPort value.
     */
    Integer httpPort();

    /**
     * Gets the httpsPort property: The value of the HTTPS port. Must be between 1 and 65535.
     *
     * @return the httpsPort value.
     */
    Integer httpsPort();

    /**
     * Gets the originHostHeader property: The host header value sent to the origin with each request. If you leave this
     * blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud
     * Services require this host header value to match the origin hostname by default. This overrides the host header
     * defined at Endpoint.
     *
     * @return the originHostHeader value.
     */
    String originHostHeader();

    /**
     * Gets the priority property: Priority of origin in given origin group for load balancing. Higher priorities will
     * not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5.
     *
     * @return the priority value.
     */
    Integer priority();

    /**
     * Gets the weight property: Weight of the origin in given origin group for load balancing. Must be between 1 and
     * 1000.
     *
     * @return the weight value.
     */
    Integer weight();

    /**
     * Gets the enabled property: Origin is enabled for load balancing or not.
     *
     * @return the enabled value.
     */
    Boolean enabled();

    /**
     * Gets the privateLinkAlias property: The Alias of the Private Link resource. Populating this optional field
     * indicates that this origin is 'Private'.
     *
     * @return the privateLinkAlias value.
     */
    String privateLinkAlias();

    /**
     * Gets the privateLinkResourceId property: The Resource Id of the Private Link resource. Populating this optional
     * field indicates that this backend is 'Private'.
     *
     * @return the privateLinkResourceId value.
     */
    String privateLinkResourceId();

    /**
     * Gets the privateLinkLocation property: The location of the Private Link resource. Required only if
     * 'privateLinkResourceId' is populated.
     *
     * @return the privateLinkLocation value.
     */
    String privateLinkLocation();

    /**
     * Gets the privateLinkApprovalMessage property: A custom message to be included in the approval request to connect
     * to the Private Link.
     *
     * @return the privateLinkApprovalMessage value.
     */
    String privateLinkApprovalMessage();

    /**
     * Gets the resourceState property: Resource status of the origin.
     *
     * @return the resourceState value.
     */
    OriginResourceState resourceState();

    /**
     * Gets the provisioningState property: Provisioning status of the origin.
     *
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * Gets the privateEndpointStatus property: The approval status for the connection to the Private Link.
     *
     * @return the privateEndpointStatus value.
     */
    PrivateEndpointStatus privateEndpointStatus();

    /**
     * Gets the inner com.azure.resourcemanager.cdn.generated.fluent.models.OriginInner object.
     *
     * @return the inner object.
     */
    OriginInner innerModel();

    /** The entirety of the Origin definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The Origin definition stages. */
    interface DefinitionStages {
        /** The first stage of the Origin definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the Origin definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, profileName, endpointName.
             *
             * @param resourceGroupName Name of the Resource group within the Azure subscription.
             * @param profileName Name of the CDN profile which is unique within the resource group.
             * @param endpointName Name of the endpoint under the profile which is unique globally.
             * @return the next definition stage.
             */
            WithCreate withExistingEndpoint(String resourceGroupName, String profileName, String endpointName);
        }
        /**
         * The stage of the Origin definition which contains all the minimum required properties for the resource to be
         * created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithHostname,
                DefinitionStages.WithHttpPort,
                DefinitionStages.WithHttpsPort,
                DefinitionStages.WithOriginHostHeader,
                DefinitionStages.WithPriority,
                DefinitionStages.WithWeight,
                DefinitionStages.WithEnabled,
                DefinitionStages.WithPrivateLinkAlias,
                DefinitionStages.WithPrivateLinkResourceId,
                DefinitionStages.WithPrivateLinkLocation,
                DefinitionStages.WithPrivateLinkApprovalMessage {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            Origin create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            Origin create(Context context);
        }
        /** The stage of the Origin definition allowing to specify hostname. */
        interface WithHostname {
            /**
             * Specifies the hostname property: The address of the origin. Domain names, IPv4 addresses, and IPv6
             * addresses are supported.This should be unique across all origins in an endpoint..
             *
             * @param hostname The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are
             *     supported.This should be unique across all origins in an endpoint.
             * @return the next definition stage.
             */
            WithCreate withHostname(String hostname);
        }
        /** The stage of the Origin definition allowing to specify httpPort. */
        interface WithHttpPort {
            /**
             * Specifies the httpPort property: The value of the HTTP port. Must be between 1 and 65535..
             *
             * @param httpPort The value of the HTTP port. Must be between 1 and 65535.
             * @return the next definition stage.
             */
            WithCreate withHttpPort(Integer httpPort);
        }
        /** The stage of the Origin definition allowing to specify httpsPort. */
        interface WithHttpsPort {
            /**
             * Specifies the httpsPort property: The value of the HTTPS port. Must be between 1 and 65535..
             *
             * @param httpsPort The value of the HTTPS port. Must be between 1 and 65535.
             * @return the next definition stage.
             */
            WithCreate withHttpsPort(Integer httpsPort);
        }
        /** The stage of the Origin definition allowing to specify originHostHeader. */
        interface WithOriginHostHeader {
            /**
             * Specifies the originHostHeader property: The host header value sent to the origin with each request. If
             * you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps,
             * Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.
             * This overrides the host header defined at Endpoint.
             *
             * @param originHostHeader The host header value sent to the origin with each request. If you leave this
             *     blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage,
             *     and Cloud Services require this host header value to match the origin hostname by default. This
             *     overrides the host header defined at Endpoint.
             * @return the next definition stage.
             */
            WithCreate withOriginHostHeader(String originHostHeader);
        }
        /** The stage of the Origin definition allowing to specify priority. */
        interface WithPriority {
            /**
             * Specifies the priority property: Priority of origin in given origin group for load balancing. Higher
             * priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1
             * and 5.
             *
             * @param priority Priority of origin in given origin group for load balancing. Higher priorities will not
             *     be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5.
             * @return the next definition stage.
             */
            WithCreate withPriority(Integer priority);
        }
        /** The stage of the Origin definition allowing to specify weight. */
        interface WithWeight {
            /**
             * Specifies the weight property: Weight of the origin in given origin group for load balancing. Must be
             * between 1 and 1000.
             *
             * @param weight Weight of the origin in given origin group for load balancing. Must be between 1 and 1000.
             * @return the next definition stage.
             */
            WithCreate withWeight(Integer weight);
        }
        /** The stage of the Origin definition allowing to specify enabled. */
        interface WithEnabled {
            /**
             * Specifies the enabled property: Origin is enabled for load balancing or not.
             *
             * @param enabled Origin is enabled for load balancing or not.
             * @return the next definition stage.
             */
            WithCreate withEnabled(Boolean enabled);
        }
        /** The stage of the Origin definition allowing to specify privateLinkAlias. */
        interface WithPrivateLinkAlias {
            /**
             * Specifies the privateLinkAlias property: The Alias of the Private Link resource. Populating this optional
             * field indicates that this origin is 'Private'.
             *
             * @param privateLinkAlias The Alias of the Private Link resource. Populating this optional field indicates
             *     that this origin is 'Private'.
             * @return the next definition stage.
             */
            WithCreate withPrivateLinkAlias(String privateLinkAlias);
        }
        /** The stage of the Origin definition allowing to specify privateLinkResourceId. */
        interface WithPrivateLinkResourceId {
            /**
             * Specifies the privateLinkResourceId property: The Resource Id of the Private Link resource. Populating
             * this optional field indicates that this backend is 'Private'.
             *
             * @param privateLinkResourceId The Resource Id of the Private Link resource. Populating this optional field
             *     indicates that this backend is 'Private'.
             * @return the next definition stage.
             */
            WithCreate withPrivateLinkResourceId(String privateLinkResourceId);
        }
        /** The stage of the Origin definition allowing to specify privateLinkLocation. */
        interface WithPrivateLinkLocation {
            /**
             * Specifies the privateLinkLocation property: The location of the Private Link resource. Required only if
             * 'privateLinkResourceId' is populated.
             *
             * @param privateLinkLocation The location of the Private Link resource. Required only if
             *     'privateLinkResourceId' is populated.
             * @return the next definition stage.
             */
            WithCreate withPrivateLinkLocation(String privateLinkLocation);
        }
        /** The stage of the Origin definition allowing to specify privateLinkApprovalMessage. */
        interface WithPrivateLinkApprovalMessage {
            /**
             * Specifies the privateLinkApprovalMessage property: A custom message to be included in the approval
             * request to connect to the Private Link..
             *
             * @param privateLinkApprovalMessage A custom message to be included in the approval request to connect to
             *     the Private Link.
             * @return the next definition stage.
             */
            WithCreate withPrivateLinkApprovalMessage(String privateLinkApprovalMessage);
        }
    }
    /**
     * Begins update for the Origin resource.
     *
     * @return the stage of resource update.
     */
    Origin.Update update();

    /** The template for Origin update. */
    interface Update
        extends UpdateStages.WithHostname,
            UpdateStages.WithHttpPort,
            UpdateStages.WithHttpsPort,
            UpdateStages.WithOriginHostHeader,
            UpdateStages.WithPriority,
            UpdateStages.WithWeight,
            UpdateStages.WithEnabled,
            UpdateStages.WithPrivateLinkAlias,
            UpdateStages.WithPrivateLinkResourceId,
            UpdateStages.WithPrivateLinkLocation,
            UpdateStages.WithPrivateLinkApprovalMessage {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        Origin apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        Origin apply(Context context);
    }
    /** The Origin update stages. */
    interface UpdateStages {
        /** The stage of the Origin update allowing to specify hostname. */
        interface WithHostname {
            /**
             * Specifies the hostname property: The address of the origin. Domain names, IPv4 addresses, and IPv6
             * addresses are supported.This should be unique across all origins in an endpoint..
             *
             * @param hostname The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are
             *     supported.This should be unique across all origins in an endpoint.
             * @return the next definition stage.
             */
            Update withHostname(String hostname);
        }
        /** The stage of the Origin update allowing to specify httpPort. */
        interface WithHttpPort {
            /**
             * Specifies the httpPort property: The value of the HTTP port. Must be between 1 and 65535..
             *
             * @param httpPort The value of the HTTP port. Must be between 1 and 65535.
             * @return the next definition stage.
             */
            Update withHttpPort(Integer httpPort);
        }
        /** The stage of the Origin update allowing to specify httpsPort. */
        interface WithHttpsPort {
            /**
             * Specifies the httpsPort property: The value of the HTTPS port. Must be between 1 and 65535..
             *
             * @param httpsPort The value of the HTTPS port. Must be between 1 and 65535.
             * @return the next definition stage.
             */
            Update withHttpsPort(Integer httpsPort);
        }
        /** The stage of the Origin update allowing to specify originHostHeader. */
        interface WithOriginHostHeader {
            /**
             * Specifies the originHostHeader property: The host header value sent to the origin with each request. If
             * you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps,
             * Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.
             * This overrides the host header defined at Endpoint.
             *
             * @param originHostHeader The host header value sent to the origin with each request. If you leave this
             *     blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage,
             *     and Cloud Services require this host header value to match the origin hostname by default. This
             *     overrides the host header defined at Endpoint.
             * @return the next definition stage.
             */
            Update withOriginHostHeader(String originHostHeader);
        }
        /** The stage of the Origin update allowing to specify priority. */
        interface WithPriority {
            /**
             * Specifies the priority property: Priority of origin in given origin group for load balancing. Higher
             * priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1
             * and 5.
             *
             * @param priority Priority of origin in given origin group for load balancing. Higher priorities will not
             *     be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5.
             * @return the next definition stage.
             */
            Update withPriority(Integer priority);
        }
        /** The stage of the Origin update allowing to specify weight. */
        interface WithWeight {
            /**
             * Specifies the weight property: Weight of the origin in given origin group for load balancing. Must be
             * between 1 and 1000.
             *
             * @param weight Weight of the origin in given origin group for load balancing. Must be between 1 and 1000.
             * @return the next definition stage.
             */
            Update withWeight(Integer weight);
        }
        /** The stage of the Origin update allowing to specify enabled. */
        interface WithEnabled {
            /**
             * Specifies the enabled property: Origin is enabled for load balancing or not.
             *
             * @param enabled Origin is enabled for load balancing or not.
             * @return the next definition stage.
             */
            Update withEnabled(Boolean enabled);
        }
        /** The stage of the Origin update allowing to specify privateLinkAlias. */
        interface WithPrivateLinkAlias {
            /**
             * Specifies the privateLinkAlias property: The Alias of the Private Link resource. Populating this optional
             * field indicates that this origin is 'Private'.
             *
             * @param privateLinkAlias The Alias of the Private Link resource. Populating this optional field indicates
             *     that this origin is 'Private'.
             * @return the next definition stage.
             */
            Update withPrivateLinkAlias(String privateLinkAlias);
        }
        /** The stage of the Origin update allowing to specify privateLinkResourceId. */
        interface WithPrivateLinkResourceId {
            /**
             * Specifies the privateLinkResourceId property: The Resource Id of the Private Link resource. Populating
             * this optional field indicates that this backend is 'Private'.
             *
             * @param privateLinkResourceId The Resource Id of the Private Link resource. Populating this optional field
             *     indicates that this backend is 'Private'.
             * @return the next definition stage.
             */
            Update withPrivateLinkResourceId(String privateLinkResourceId);
        }
        /** The stage of the Origin update allowing to specify privateLinkLocation. */
        interface WithPrivateLinkLocation {
            /**
             * Specifies the privateLinkLocation property: The location of the Private Link resource. Required only if
             * 'privateLinkResourceId' is populated.
             *
             * @param privateLinkLocation The location of the Private Link resource. Required only if
             *     'privateLinkResourceId' is populated.
             * @return the next definition stage.
             */
            Update withPrivateLinkLocation(String privateLinkLocation);
        }
        /** The stage of the Origin update allowing to specify privateLinkApprovalMessage. */
        interface WithPrivateLinkApprovalMessage {
            /**
             * Specifies the privateLinkApprovalMessage property: A custom message to be included in the approval
             * request to connect to the Private Link..
             *
             * @param privateLinkApprovalMessage A custom message to be included in the approval request to connect to
             *     the Private Link.
             * @return the next definition stage.
             */
            Update withPrivateLinkApprovalMessage(String privateLinkApprovalMessage);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    Origin refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    Origin refresh(Context context);
}
