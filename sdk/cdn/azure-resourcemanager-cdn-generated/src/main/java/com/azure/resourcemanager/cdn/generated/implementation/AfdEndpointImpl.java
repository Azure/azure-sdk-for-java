// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cdn.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.cdn.generated.fluent.models.AfdEndpointInner;
import com.azure.resourcemanager.cdn.generated.models.AfdEndpoint;
import com.azure.resourcemanager.cdn.generated.models.AfdEndpointUpdateParameters;
import com.azure.resourcemanager.cdn.generated.models.AfdProvisioningState;
import com.azure.resourcemanager.cdn.generated.models.AfdPurgeParameters;
import com.azure.resourcemanager.cdn.generated.models.DeploymentStatus;
import com.azure.resourcemanager.cdn.generated.models.EnabledState;
import com.azure.resourcemanager.cdn.generated.models.Usage;
import com.azure.resourcemanager.cdn.generated.models.ValidateCustomDomainInput;
import com.azure.resourcemanager.cdn.generated.models.ValidateCustomDomainOutput;
import java.util.Collections;
import java.util.Map;

public final class AfdEndpointImpl implements AfdEndpoint, AfdEndpoint.Definition, AfdEndpoint.Update {
    private AfdEndpointInner innerObject;

    private final com.azure.resourcemanager.cdn.generated.CdnManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public Integer originResponseTimeoutSeconds() {
        return this.innerModel().originResponseTimeoutSeconds();
    }

    public EnabledState enabledState() {
        return this.innerModel().enabledState();
    }

    public AfdProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public DeploymentStatus deploymentStatus() {
        return this.innerModel().deploymentStatus();
    }

    public String hostname() {
        return this.innerModel().hostname();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public AfdEndpointInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.cdn.generated.CdnManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String profileName;

    private String endpointName;

    private AfdEndpointUpdateParameters updateEndpointUpdateProperties;

    public AfdEndpointImpl withExistingProfile(String resourceGroupName, String profileName) {
        this.resourceGroupName = resourceGroupName;
        this.profileName = profileName;
        return this;
    }

    public AfdEndpoint create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAfdEndpoints()
                .create(resourceGroupName, profileName, endpointName, this.innerModel(), Context.NONE);
        return this;
    }

    public AfdEndpoint create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAfdEndpoints()
                .create(resourceGroupName, profileName, endpointName, this.innerModel(), context);
        return this;
    }

    AfdEndpointImpl(String name, com.azure.resourcemanager.cdn.generated.CdnManager serviceManager) {
        this.innerObject = new AfdEndpointInner();
        this.serviceManager = serviceManager;
        this.endpointName = name;
    }

    public AfdEndpointImpl update() {
        this.updateEndpointUpdateProperties = new AfdEndpointUpdateParameters();
        return this;
    }

    public AfdEndpoint apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAfdEndpoints()
                .update(resourceGroupName, profileName, endpointName, updateEndpointUpdateProperties, Context.NONE);
        return this;
    }

    public AfdEndpoint apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAfdEndpoints()
                .update(resourceGroupName, profileName, endpointName, updateEndpointUpdateProperties, context);
        return this;
    }

    AfdEndpointImpl(AfdEndpointInner innerObject, com.azure.resourcemanager.cdn.generated.CdnManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.profileName = Utils.getValueFromIdByName(innerObject.id(), "profiles");
        this.endpointName = Utils.getValueFromIdByName(innerObject.id(), "afdEndpoints");
    }

    public AfdEndpoint refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAfdEndpoints()
                .getWithResponse(resourceGroupName, profileName, endpointName, Context.NONE)
                .getValue();
        return this;
    }

    public AfdEndpoint refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAfdEndpoints()
                .getWithResponse(resourceGroupName, profileName, endpointName, context)
                .getValue();
        return this;
    }

    public void purgeContent(AfdPurgeParameters contents) {
        serviceManager.afdEndpoints().purgeContent(resourceGroupName, profileName, endpointName, contents);
    }

    public void purgeContent(AfdPurgeParameters contents, Context context) {
        serviceManager.afdEndpoints().purgeContent(resourceGroupName, profileName, endpointName, contents, context);
    }

    public PagedIterable<Usage> listResourceUsage() {
        return serviceManager.afdEndpoints().listResourceUsage(resourceGroupName, profileName, endpointName);
    }

    public PagedIterable<Usage> listResourceUsage(Context context) {
        return serviceManager.afdEndpoints().listResourceUsage(resourceGroupName, profileName, endpointName, context);
    }

    public ValidateCustomDomainOutput validateCustomDomain(ValidateCustomDomainInput customDomainProperties) {
        return serviceManager
            .afdEndpoints()
            .validateCustomDomain(resourceGroupName, profileName, endpointName, customDomainProperties);
    }

    public Response<ValidateCustomDomainOutput> validateCustomDomainWithResponse(
        ValidateCustomDomainInput customDomainProperties, Context context) {
        return serviceManager
            .afdEndpoints()
            .validateCustomDomainWithResponse(
                resourceGroupName, profileName, endpointName, customDomainProperties, context);
    }

    public AfdEndpointImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public AfdEndpointImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public AfdEndpointImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateEndpointUpdateProperties.withTags(tags);
            return this;
        }
    }

    public AfdEndpointImpl withOriginResponseTimeoutSeconds(Integer originResponseTimeoutSeconds) {
        if (isInCreateMode()) {
            this.innerModel().withOriginResponseTimeoutSeconds(originResponseTimeoutSeconds);
            return this;
        } else {
            this.updateEndpointUpdateProperties.withOriginResponseTimeoutSeconds(originResponseTimeoutSeconds);
            return this;
        }
    }

    public AfdEndpointImpl withEnabledState(EnabledState enabledState) {
        if (isInCreateMode()) {
            this.innerModel().withEnabledState(enabledState);
            return this;
        } else {
            this.updateEndpointUpdateProperties.withEnabledState(enabledState);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
