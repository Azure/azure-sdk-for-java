// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cdn.generated.implementation;

import com.azure.resourcemanager.cdn.generated.CdnManager;
import com.azure.resourcemanager.cdn.generated.fluent.models.ManagedRuleSetDefinitionInner;
import com.azure.resourcemanager.cdn.generated.models.ManagedRuleGroupDefinition;
import com.azure.resourcemanager.cdn.generated.models.ManagedRuleSetDefinition;
import com.azure.resourcemanager.cdn.generated.models.Sku;
import java.util.Collections;
import java.util.List;

public final class ManagedRuleSetDefinitionImpl implements ManagedRuleSetDefinition {
    private ManagedRuleSetDefinitionInner innerObject;

    private final CdnManager serviceManager;

    public ManagedRuleSetDefinitionImpl(ManagedRuleSetDefinitionInner innerObject, CdnManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public Sku sku() {
        return this.innerModel().sku();
    }

    public String provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String ruleSetType() {
        return this.innerModel().ruleSetType();
    }

    public String ruleSetVersion() {
        return this.innerModel().ruleSetVersion();
    }

    public List<ManagedRuleGroupDefinition> ruleGroups() {
        List<ManagedRuleGroupDefinition> inner = this.innerModel().ruleGroups();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public ManagedRuleSetDefinitionInner innerModel() {
        return this.innerObject;
    }

    private CdnManager manager() {
        return this.serviceManager;
    }
}
