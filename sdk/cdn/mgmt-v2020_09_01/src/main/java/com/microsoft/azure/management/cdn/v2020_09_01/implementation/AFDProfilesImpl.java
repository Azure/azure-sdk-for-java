/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * abc
 */

package com.microsoft.azure.management.cdn.v2020_09_01.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.cdn.v2020_09_01.AFDProfiles;
import rx.functions.Func1;
import rx.Observable;
import com.microsoft.azure.Page;
import com.microsoft.azure.management.cdn.v2020_09_01.Usage;
import com.microsoft.azure.management.cdn.v2020_09_01.ValidateCustomDomainOutput;

class AFDProfilesImpl extends WrapperImpl<AFDProfilesInner> implements AFDProfiles {
    private final CdnManager manager;

    AFDProfilesImpl(CdnManager manager) {
        super(manager.inner().aFDProfiles());
        this.manager = manager;
    }

    public CdnManager manager() {
        return this.manager;
    }

    @Override
    public Observable<Usage> listResourceUsageAsync(final String resourceGroupName, final String profileName) {
        AFDProfilesInner client = this.inner();
        return client.listResourceUsageAsync(resourceGroupName, profileName)
        .flatMapIterable(new Func1<Page<UsageInner>, Iterable<UsageInner>>() {
            @Override
            public Iterable<UsageInner> call(Page<UsageInner> page) {
                return page.items();
            }
        })
        .map(new Func1<UsageInner, Usage>() {
            @Override
            public Usage call(UsageInner inner) {
                return new UsageImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<ValidateCustomDomainOutput> checkHostNameAvailabilityAsync(String resourceGroupName, String profileName, String hostName) {
        AFDProfilesInner client = this.inner();
        return client.checkHostNameAvailabilityAsync(resourceGroupName, profileName, hostName)
        .map(new Func1<ValidateCustomDomainOutputInner, ValidateCustomDomainOutput>() {
            @Override
            public ValidateCustomDomainOutput call(ValidateCustomDomainOutputInner inner) {
                return new ValidateCustomDomainOutputImpl(inner, manager());
            }
        });
    }

}
