/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 *
 */

package com.microsoft.azure.management.cdn.v2020_09_01.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.cdn.v2020_09_01.AFDOrigins;
import rx.Completable;
import rx.Observable;
import rx.functions.Func1;
import com.microsoft.azure.Page;
import com.microsoft.azure.management.cdn.v2020_09_01.AFDOrigin;

class AFDOriginsImpl extends WrapperImpl<AFDOriginsInner> implements AFDOrigins {
    private final CdnManager manager;

    AFDOriginsImpl(CdnManager manager) {
        super(manager.inner().aFDOrigins());
        this.manager = manager;
    }

    public CdnManager manager() {
        return this.manager;
    }

    @Override
    public AFDOriginImpl define(String name) {
        return wrapModel(name);
    }

    private AFDOriginImpl wrapModel(AFDOriginInner inner) {
        return  new AFDOriginImpl(inner, manager());
    }

    private AFDOriginImpl wrapModel(String name) {
        return new AFDOriginImpl(name, this.manager());
    }

    @Override
    public Observable<AFDOrigin> listByOriginGroupAsync(final String resourceGroupName, final String profileName, final String originGroupName) {
        AFDOriginsInner client = this.inner();
        return client.listByOriginGroupAsync(resourceGroupName, profileName, originGroupName)
        .flatMapIterable(new Func1<Page<AFDOriginInner>, Iterable<AFDOriginInner>>() {
            @Override
            public Iterable<AFDOriginInner> call(Page<AFDOriginInner> page) {
                return page.items();
            }
        })
        .map(new Func1<AFDOriginInner, AFDOrigin>() {
            @Override
            public AFDOrigin call(AFDOriginInner inner) {
                return wrapModel(inner);
            }
        });
    }

    @Override
    public Observable<AFDOrigin> getAsync(String resourceGroupName, String profileName, String originGroupName, String originName) {
        AFDOriginsInner client = this.inner();
        return client.getAsync(resourceGroupName, profileName, originGroupName, originName)
        .flatMap(new Func1<AFDOriginInner, Observable<AFDOrigin>>() {
            @Override
            public Observable<AFDOrigin> call(AFDOriginInner inner) {
                if (inner == null) {
                    return Observable.empty();
                } else {
                    return Observable.just((AFDOrigin)wrapModel(inner));
                }
            }
       });
    }

    @Override
    public Completable deleteAsync(String resourceGroupName, String profileName, String originGroupName, String originName) {
        AFDOriginsInner client = this.inner();
        return client.deleteAsync(resourceGroupName, profileName, originGroupName, originName).toCompletable();
    }

}
