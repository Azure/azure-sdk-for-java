/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.cdn.v2020_09_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.cdn.v2020_09_01.implementation.AFDDomainInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.cdn.v2020_09_01.implementation.CdnManager;

/**
 * Type representing AFDDomain.
 */
public interface AFDDomain extends HasInner<AFDDomainInner>, Indexable, Refreshable<AFDDomain>, Updatable<AFDDomain.Update>, HasManager<CdnManager> {
    /**
     * @return the azureDnsZone value.
     */
    ResourceReference azureDnsZone();

    /**
     * @return the deploymentStatus value.
     */
    DeploymentStatus deploymentStatus();

    /**
     * @return the domainValidationState value.
     */
    DomainValidationState domainValidationState();

    /**
     * @return the hostName value.
     */
    String hostName();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the provisioningState value.
     */
    AfdProvisioningState provisioningState();

    /**
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * @return the tlsSettings value.
     */
    AFDDomainHttpsParameters tlsSettings();

    /**
     * @return the type value.
     */
    String type();

    /**
     * @return the validationProperties value.
     */
    DomainValidationProperties validationProperties();

    /**
     * The entirety of the AFDDomain definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithProfile, DefinitionStages.WithHostName, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of AFDDomain definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a AFDDomain definition.
         */
        interface Blank extends WithProfile {
        }

        /**
         * The stage of the afddomain definition allowing to specify Profile.
         */
        interface WithProfile {
           /**
            * Specifies resourceGroupName, profileName.
            * @param resourceGroupName Name of the Resource group within the Azure subscription
            * @param profileName Name of the CDN profile which is unique within the resource group
            * @return the next definition stage
            */
            WithHostName withExistingProfile(String resourceGroupName, String profileName);
        }

        /**
         * The stage of the afddomain definition allowing to specify HostName.
         */
        interface WithHostName {
           /**
            * Specifies hostName.
            * @param hostName The host name of the domain. Must be a domain name
            * @return the next definition stage
            */
            WithCreate withHostName(String hostName);
        }

        /**
         * The stage of the afddomain definition allowing to specify AzureDnsZone.
         */
        interface WithAzureDnsZone {
            /**
             * Specifies azureDnsZone.
             * @param azureDnsZone Resource reference to the Azure DNS zone
             * @return the next definition stage
             */
            WithCreate withAzureDnsZone(ResourceReference azureDnsZone);
        }

        /**
         * The stage of the afddomain definition allowing to specify TlsSettings.
         */
        interface WithTlsSettings {
            /**
             * Specifies tlsSettings.
             * @param tlsSettings The configuration specifying how to enable HTTPS for the domain - using AzureFrontDoor managed certificate or user's own certificate. If not specified, enabling ssl uses AzureFrontDoor managed certificate by default
             * @return the next definition stage
             */
            WithCreate withTlsSettings(AFDDomainHttpsParameters tlsSettings);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<AFDDomain>, DefinitionStages.WithAzureDnsZone, DefinitionStages.WithTlsSettings {
        }
    }
    /**
     * The template for a AFDDomain update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<AFDDomain>, UpdateStages.WithAzureDnsZone, UpdateStages.WithTlsSettings {
    }

    /**
     * Grouping of AFDDomain update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the afddomain update allowing to specify AzureDnsZone.
         */
        interface WithAzureDnsZone {
            /**
             * Specifies azureDnsZone.
             * @param azureDnsZone Resource reference to the Azure DNS zone
             * @return the next update stage
             */
            Update withAzureDnsZone(ResourceReference azureDnsZone);
        }

        /**
         * The stage of the afddomain update allowing to specify TlsSettings.
         */
        interface WithTlsSettings {
            /**
             * Specifies tlsSettings.
             * @param tlsSettings The configuration specifying how to enable HTTPS for the domain - using AzureFrontDoor managed certificate or user's own certificate. If not specified, enabling ssl uses AzureFrontDoor managed certificate by default
             * @return the next update stage
             */
            Update withTlsSettings(AFDDomainHttpsParameters tlsSettings);
        }

    }
}
