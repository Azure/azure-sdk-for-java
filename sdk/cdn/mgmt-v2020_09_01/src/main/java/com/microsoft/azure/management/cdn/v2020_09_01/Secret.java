/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.cdn.v2020_09_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.cdn.v2020_09_01.implementation.SecretInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.cdn.v2020_09_01.implementation.CdnManager;

/**
 * Type representing Secret.
 */
public interface Secret extends HasInner<SecretInner>, Indexable, Refreshable<Secret>, Updatable<Secret.Update>, HasManager<CdnManager> {
    /**
     * @return the deploymentStatus value.
     */
    DeploymentStatus deploymentStatus();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the parameters value.
     */
    SecretParameters parameters();

    /**
     * @return the provisioningState value.
     */
    AfdProvisioningState provisioningState();

    /**
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * @return the type value.
     */
    String type();

    /**
     * The entirety of the Secret definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithProfile, DefinitionStages.WithParameters, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of Secret definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a Secret definition.
         */
        interface Blank extends WithProfile {
        }

        /**
         * The stage of the secret definition allowing to specify Profile.
         */
        interface WithProfile {
           /**
            * Specifies resourceGroupName, profileName.
            * @param resourceGroupName Name of the Resource group within the Azure subscription
            * @param profileName Name of the CDN profile which is unique within the resource group
            * @return the next definition stage
            */
            WithParameters withExistingProfile(String resourceGroupName, String profileName);
        }

        /**
         * The stage of the secret definition allowing to specify Parameters.
         */
        interface WithParameters {
           /**
            * Specifies parameters.
            * @param parameters object which contains secret parameters
            * @return the next definition stage
            */
            WithCreate withParameters(SecretParameters parameters);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<Secret> {
        }
    }
    /**
     * The template for a Secret update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<Secret>, UpdateStages.WithParameters {
    }

    /**
     * Grouping of Secret update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the secret update allowing to specify Parameters.
         */
        interface WithParameters {
            /**
             * Specifies parameters.
             * @param parameters object which contains secret parameters
             * @return the next update stage
             */
            Update withParameters(SecretParameters parameters);
        }

    }
}
