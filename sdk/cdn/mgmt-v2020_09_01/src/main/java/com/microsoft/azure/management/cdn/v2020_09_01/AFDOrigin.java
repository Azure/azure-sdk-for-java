/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.cdn.v2020_09_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.cdn.v2020_09_01.implementation.AFDOriginInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.cdn.v2020_09_01.implementation.CdnManager;

/**
 * Type representing AFDOrigin.
 */
public interface AFDOrigin extends HasInner<AFDOriginInner>, Indexable, Refreshable<AFDOrigin>, Updatable<AFDOrigin.Update>, HasManager<CdnManager> {
    /**
     * @return the azureOrigin value.
     */
    ResourceReference azureOrigin();

    /**
     * @return the deploymentStatus value.
     */
    DeploymentStatus deploymentStatus();

    /**
     * @return the enabledState value.
     */
    EnabledState enabledState();

    /**
     * @return the hostName value.
     */
    String hostName();

    /**
     * @return the httpPort value.
     */
    Integer httpPort();

    /**
     * @return the httpsPort value.
     */
    Integer httpsPort();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the originHostHeader value.
     */
    String originHostHeader();

    /**
     * @return the priority value.
     */
    Integer priority();

    /**
     * @return the provisioningState value.
     */
    AfdProvisioningState provisioningState();

    /**
     * @return the sharedPrivateLinkResource value.
     */
    Object sharedPrivateLinkResource();

    /**
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * @return the type value.
     */
    String type();

    /**
     * @return the weight value.
     */
    Integer weight();

    /**
     * The entirety of the AFDOrigin definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithOriginGroup, DefinitionStages.WithHostName, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of AFDOrigin definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a AFDOrigin definition.
         */
        interface Blank extends WithOriginGroup {
        }

        /**
         * The stage of the afdorigin definition allowing to specify OriginGroup.
         */
        interface WithOriginGroup {
           /**
            * Specifies resourceGroupName, profileName, originGroupName.
            * @param resourceGroupName Name of the Resource group within the Azure subscription
            * @param profileName Name of the CDN profile which is unique within the resource group
            * @param originGroupName Name of the origin group which is unique within the profile
            * @return the next definition stage
            */
            WithHostName withExistingOriginGroup(String resourceGroupName, String profileName, String originGroupName);
        }

        /**
         * The stage of the afdorigin definition allowing to specify HostName.
         */
        interface WithHostName {
           /**
            * Specifies hostName.
            * @param hostName The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across all origins in an endpoint
            * @return the next definition stage
            */
            WithCreate withHostName(String hostName);
        }

        /**
         * The stage of the afdorigin definition allowing to specify AzureOrigin.
         */
        interface WithAzureOrigin {
            /**
             * Specifies azureOrigin.
             * @param azureOrigin Resource reference to the Azure origin resource
             * @return the next definition stage
             */
            WithCreate withAzureOrigin(ResourceReference azureOrigin);
        }

        /**
         * The stage of the afdorigin definition allowing to specify EnabledState.
         */
        interface WithEnabledState {
            /**
             * Specifies enabledState.
             * @param enabledState Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool. Possible values include: 'Enabled', 'Disabled'
             * @return the next definition stage
             */
            WithCreate withEnabledState(EnabledState enabledState);
        }

        /**
         * The stage of the afdorigin definition allowing to specify HttpPort.
         */
        interface WithHttpPort {
            /**
             * Specifies httpPort.
             * @param httpPort The value of the HTTP port. Must be between 1 and 65535
             * @return the next definition stage
             */
            WithCreate withHttpPort(Integer httpPort);
        }

        /**
         * The stage of the afdorigin definition allowing to specify HttpsPort.
         */
        interface WithHttpsPort {
            /**
             * Specifies httpsPort.
             * @param httpsPort The value of the HTTPS port. Must be between 1 and 65535
             * @return the next definition stage
             */
            WithCreate withHttpsPort(Integer httpsPort);
        }

        /**
         * The stage of the afdorigin definition allowing to specify OriginHostHeader.
         */
        interface WithOriginHostHeader {
            /**
             * Specifies originHostHeader.
             * @param originHostHeader The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. This overrides the host header defined at Endpoint
             * @return the next definition stage
             */
            WithCreate withOriginHostHeader(String originHostHeader);
        }

        /**
         * The stage of the afdorigin definition allowing to specify Priority.
         */
        interface WithPriority {
            /**
             * Specifies priority.
             * @param priority Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5
             * @return the next definition stage
             */
            WithCreate withPriority(Integer priority);
        }

        /**
         * The stage of the afdorigin definition allowing to specify SharedPrivateLinkResource.
         */
        interface WithSharedPrivateLinkResource {
            /**
             * Specifies sharedPrivateLinkResource.
             * @param sharedPrivateLinkResource The properties of the private link resource for private origin
             * @return the next definition stage
             */
            WithCreate withSharedPrivateLinkResource(Object sharedPrivateLinkResource);
        }

        /**
         * The stage of the afdorigin definition allowing to specify Weight.
         */
        interface WithWeight {
            /**
             * Specifies weight.
             * @param weight Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
             * @return the next definition stage
             */
            WithCreate withWeight(Integer weight);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<AFDOrigin>, DefinitionStages.WithAzureOrigin, DefinitionStages.WithEnabledState, DefinitionStages.WithHttpPort, DefinitionStages.WithHttpsPort, DefinitionStages.WithOriginHostHeader, DefinitionStages.WithPriority, DefinitionStages.WithSharedPrivateLinkResource, DefinitionStages.WithWeight {
        }
    }
    /**
     * The template for a AFDOrigin update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<AFDOrigin>, UpdateStages.WithAzureOrigin, UpdateStages.WithEnabledState, UpdateStages.WithHostName, UpdateStages.WithHttpPort, UpdateStages.WithHttpsPort, UpdateStages.WithOriginHostHeader, UpdateStages.WithPriority, UpdateStages.WithSharedPrivateLinkResource, UpdateStages.WithWeight {
    }

    /**
     * Grouping of AFDOrigin update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the afdorigin update allowing to specify AzureOrigin.
         */
        interface WithAzureOrigin {
            /**
             * Specifies azureOrigin.
             * @param azureOrigin Resource reference to the Azure origin resource
             * @return the next update stage
             */
            Update withAzureOrigin(ResourceReference azureOrigin);
        }

        /**
         * The stage of the afdorigin update allowing to specify EnabledState.
         */
        interface WithEnabledState {
            /**
             * Specifies enabledState.
             * @param enabledState Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool. Possible values include: 'Enabled', 'Disabled'
             * @return the next update stage
             */
            Update withEnabledState(EnabledState enabledState);
        }

        /**
         * The stage of the afdorigin update allowing to specify HostName.
         */
        interface WithHostName {
            /**
             * Specifies hostName.
             * @param hostName The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across all origins in an endpoint
             * @return the next update stage
             */
            Update withHostName(String hostName);
        }

        /**
         * The stage of the afdorigin update allowing to specify HttpPort.
         */
        interface WithHttpPort {
            /**
             * Specifies httpPort.
             * @param httpPort The value of the HTTP port. Must be between 1 and 65535
             * @return the next update stage
             */
            Update withHttpPort(Integer httpPort);
        }

        /**
         * The stage of the afdorigin update allowing to specify HttpsPort.
         */
        interface WithHttpsPort {
            /**
             * Specifies httpsPort.
             * @param httpsPort The value of the HTTPS port. Must be between 1 and 65535
             * @return the next update stage
             */
            Update withHttpsPort(Integer httpsPort);
        }

        /**
         * The stage of the afdorigin update allowing to specify OriginHostHeader.
         */
        interface WithOriginHostHeader {
            /**
             * Specifies originHostHeader.
             * @param originHostHeader The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. This overrides the host header defined at Endpoint
             * @return the next update stage
             */
            Update withOriginHostHeader(String originHostHeader);
        }

        /**
         * The stage of the afdorigin update allowing to specify Priority.
         */
        interface WithPriority {
            /**
             * Specifies priority.
             * @param priority Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5
             * @return the next update stage
             */
            Update withPriority(Integer priority);
        }

        /**
         * The stage of the afdorigin update allowing to specify SharedPrivateLinkResource.
         */
        interface WithSharedPrivateLinkResource {
            /**
             * Specifies sharedPrivateLinkResource.
             * @param sharedPrivateLinkResource The properties of the private link resource for private origin
             * @return the next update stage
             */
            Update withSharedPrivateLinkResource(Object sharedPrivateLinkResource);
        }

        /**
         * The stage of the afdorigin update allowing to specify Weight.
         */
        interface WithWeight {
            /**
             * Specifies weight.
             * @param weight Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
             * @return the next update stage
             */
            Update withWeight(Integer weight);
        }

    }
}
