/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.storage.v2019_06_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.storage.v2019_06_01.implementation.StorageQueueInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.storage.v2019_06_01.implementation.StorageManager;
import java.util.Map;

/**
 * Type representing StorageQueue.
 */
public interface StorageQueue extends HasInner<StorageQueueInner>, Indexable, Updatable<StorageQueue.Update>, HasManager<StorageManager> {
    /**
     * @return the approximateMessageCount value.
     */
    Integer approximateMessageCount();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the metadata value.
     */
    Map<String, String> metadata();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the type value.
     */
    String type();

    /**
     * The entirety of the StorageQueue definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithQueueService, DefinitionStages.WithMetadata, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of StorageQueue definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a StorageQueue definition.
         */
        interface Blank extends WithQueueService {
        }

        /**
         * The stage of the storagequeue definition allowing to specify QueueService.
         */
        interface WithQueueService {
           /**
            * Specifies resourceGroupName, accountName.
            * @param resourceGroupName The name of the resource group within the user's subscription. The name is case insensitive
            * @param accountName The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only
            * @return the next definition stage
            */
            WithMetadata withExistingQueueService(String resourceGroupName, String accountName);
        }

        /**
         * The stage of the storagequeue definition allowing to specify Metadata.
         */
        interface WithMetadata {
           /**
            * Specifies metadata.
            * @param metadata A name-value pair that represents queue metadata
            * @return the next definition stage
            */
            WithCreate withMetadata(Map<String, String> metadata);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<StorageQueue> {
        }
    }
    /**
     * The template for a StorageQueue update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<StorageQueue>, UpdateStages.WithMetadata {
    }

    /**
     * Grouping of StorageQueue update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the storagequeue update allowing to specify Metadata.
         */
        interface WithMetadata {
            /**
             * Specifies metadata.
             * @param metadata A name-value pair that represents queue metadata
             * @return the next update stage
             */
            Update withMetadata(Map<String, String> metadata);
        }

    }
}
