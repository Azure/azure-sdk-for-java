// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.storage.file.datalake.implementation.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Additional parameters for a set of operations, such as: Paths_create,
 * Paths_update.
 */
@Fluent
public final class PathHTTPHeaders {
    /*
     * Optional. Sets the blob's cache control. If specified, this property is
     * stored with the blob and returned with a read request.
     */
    @JsonProperty(value = "")
    private String cacheControl;

    /*
     * Optional. Sets the blob's content encoding. If specified, this property
     * is stored with the blob and returned with a read request.
     */
    @JsonProperty(value = "")
    private String contentEncoding;

    /*
     * Optional. Sets the blob's Content-Disposition header.
     */
    @JsonProperty(value = "")
    private String contentDisposition;

    /**
     * Get the cacheControl property: Optional. Sets the blob's cache control.
     * If specified, this property is stored with the blob and returned with a
     * read request.
     *
     * @return the cacheControl value.
     */
    public String getCacheControl() {
        return this.cacheControl;
    }

    /**
     * Set the cacheControl property: Optional. Sets the blob's cache control.
     * If specified, this property is stored with the blob and returned with a
     * read request.
     *
     * @param cacheControl the cacheControl value to set.
     * @return the PathHTTPHeaders object itself.
     */
    public PathHTTPHeaders setCacheControl(String cacheControl) {
        this.cacheControl = cacheControl;
        return this;
    }

    /**
     * Get the contentEncoding property: Optional. Sets the blob's content
     * encoding. If specified, this property is stored with the blob and
     * returned with a read request.
     *
     * @return the contentEncoding value.
     */
    public String getContentEncoding() {
        return this.contentEncoding;
    }

    /**
     * Set the contentEncoding property: Optional. Sets the blob's content
     * encoding. If specified, this property is stored with the blob and
     * returned with a read request.
     *
     * @param contentEncoding the contentEncoding value to set.
     * @return the PathHTTPHeaders object itself.
     */
    public PathHTTPHeaders setContentEncoding(String contentEncoding) {
        this.contentEncoding = contentEncoding;
        return this;
    }

    /**
     * Get the contentDisposition property: Optional. Sets the blob's
     * Content-Disposition header.
     *
     * @return the contentDisposition value.
     */
    public String getContentDisposition() {
        return this.contentDisposition;
    }

    /**
     * Set the contentDisposition property: Optional. Sets the blob's
     * Content-Disposition header.
     *
     * @param contentDisposition the contentDisposition value to set.
     * @return the PathHTTPHeaders object itself.
     */
    public PathHTTPHeaders setContentDisposition(String contentDisposition) {
        this.contentDisposition = contentDisposition;
        return this;
    }
}
