// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.storage.file.datalake.implementation;

import com.azure.core.http.HttpPipeline;
import com.azure.core.implementation.RestProxy;

/**
 * Initializes a new instance of the DataLakeStorageClient type.
 */
public final class DataLakeStorageClientImpl {
    /**
     * Specifies the version of the REST protocol used for processing the request. This is required when using shared key authorization.
     */
    private String xMsVersion;

    /**
     * Gets Specifies the version of the REST protocol used for processing the request. This is required when using shared key authorization.
     *
     * @return the xMsVersion value.
     */
    public String getXMsVersion() {
        return this.xMsVersion;
    }

    /**
     * Sets Specifies the version of the REST protocol used for processing the request. This is required when using shared key authorization.
     *
     * @param xMsVersion the xMsVersion value.
     */
    DataLakeStorageClientImpl setXMsVersion(String xMsVersion) {
        this.xMsVersion = xMsVersion;
        return this;
    }

    /**
     * The Azure Storage account name.
     */
    private String accountName;

    /**
     * Gets The Azure Storage account name.
     *
     * @return the accountName value.
     */
    public String getAccountName() {
        return this.accountName;
    }

    /**
     * Sets The Azure Storage account name.
     *
     * @param accountName the accountName value.
     */
    DataLakeStorageClientImpl setAccountName(String accountName) {
        this.accountName = accountName;
        return this;
    }

    /**
     * The DNS suffix for the Azure Data Lake Storage endpoint.
     */
    private String dnsSuffix;

    /**
     * Gets The DNS suffix for the Azure Data Lake Storage endpoint.
     *
     * @return the dnsSuffix value.
     */
    public String getDnsSuffix() {
        return this.dnsSuffix;
    }

    /**
     * Sets The DNS suffix for the Azure Data Lake Storage endpoint.
     *
     * @param dnsSuffix the dnsSuffix value.
     */
    DataLakeStorageClientImpl setDnsSuffix(String dnsSuffix) {
        this.dnsSuffix = dnsSuffix;
        return this;
    }

    /**
     * The HTTP pipeline to send requests through.
     */
    private HttpPipeline httpPipeline;

    /**
     * Gets The HTTP pipeline to send requests through.
     *
     * @return the httpPipeline value.
     */
    public HttpPipeline getHttpPipeline() {
        return this.httpPipeline;
    }

    /**
     * The FilesystemsImpl object to access its operations.
     */
    private FilesystemsImpl filesystems;

    /**
     * Gets the FilesystemsImpl object to access its operations.
     *
     * @return the FilesystemsImpl object.
     */
    public FilesystemsImpl filesystems() {
        return this.filesystems;
    }

    /**
     * The PathsImpl object to access its operations.
     */
    private PathsImpl paths;

    /**
     * Gets the PathsImpl object to access its operations.
     *
     * @return the PathsImpl object.
     */
    public PathsImpl paths() {
        return this.paths;
    }

    /**
     * Initializes an instance of DataLakeStorageClient client.
     */
    public DataLakeStorageClientImpl() {
        this(RestProxy.createDefaultPipeline());
    }

    /**
     * Initializes an instance of DataLakeStorageClient client.
     *
     * @param httpPipeline The HTTP pipeline to send requests through.
     */
    public DataLakeStorageClientImpl(HttpPipeline httpPipeline) {
        this.httpPipeline = httpPipeline;
        this.filesystems = new FilesystemsImpl(this);
        this.paths = new PathsImpl(this);
    }
}
