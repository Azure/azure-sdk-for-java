// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.management.storage.models;

import com.azure.core.http.HttpPipeline;
import com.azure.core.http.HttpPipelineBuilder;
import com.azure.core.http.policy.CookiePolicy;
import com.azure.core.http.policy.RetryPolicy;
import com.azure.core.http.policy.UserAgentPolicy;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.util.logging.ClientLogger;
import com.azure.management.AzureServiceClient;

/** Initializes a new instance of the StorageManagementClientImpl type. */
public final class StorageManagementClientImpl extends AzureServiceClient {
    private final ClientLogger logger = new ClientLogger(StorageManagementClientImpl.class);

    /** The ID of the target subscription. */
    private String subscriptionId;

    /**
     * Gets The ID of the target subscription.
     *
     * @return the subscriptionId value.
     */
    public String getSubscriptionId() {
        return this.subscriptionId;
    }

    /**
     * Sets The ID of the target subscription.
     *
     * @param subscriptionId the subscriptionId value.
     * @return the service client itself.
     */
    public StorageManagementClientImpl setSubscriptionId(String subscriptionId) {
        this.subscriptionId = subscriptionId;
        return this;
    }

    /** server parameter. */
    private String host;

    /**
     * Gets server parameter.
     *
     * @return the host value.
     */
    public String getHost() {
        return this.host;
    }

    /**
     * Sets server parameter.
     *
     * @param host the host value.
     * @return the service client itself.
     */
    public StorageManagementClientImpl setHost(String host) {
        this.host = host;
        return this;
    }

    /** Api Version. */
    private String apiVersion;

    /**
     * Gets Api Version.
     *
     * @return the apiVersion value.
     */
    public String getApiVersion() {
        return this.apiVersion;
    }

    /**
     * Sets Api Version.
     *
     * @param apiVersion the apiVersion value.
     * @return the service client itself.
     */
    public StorageManagementClientImpl setApiVersion(String apiVersion) {
        this.apiVersion = apiVersion;
        return this;
    }

    /** The HTTP pipeline to send requests through. */
    private final HttpPipeline httpPipeline;

    /**
     * Gets The HTTP pipeline to send requests through.
     *
     * @return the httpPipeline value.
     */
    public HttpPipeline getHttpPipeline() {
        return this.httpPipeline;
    }

    /** The OperationsInner object to access its operations. */
    private final OperationsInner operations;

    /**
     * Gets the OperationsInner object to access its operations.
     *
     * @return the OperationsInner object.
     */
    public OperationsInner operations() {
        return this.operations;
    }

    /** The SkusInner object to access its operations. */
    private final SkusInner skus;

    /**
     * Gets the SkusInner object to access its operations.
     *
     * @return the SkusInner object.
     */
    public SkusInner skus() {
        return this.skus;
    }

    /** The StorageAccountsInner object to access its operations. */
    private final StorageAccountsInner storageAccounts;

    /**
     * Gets the StorageAccountsInner object to access its operations.
     *
     * @return the StorageAccountsInner object.
     */
    public StorageAccountsInner storageAccounts() {
        return this.storageAccounts;
    }

    /** The UsagesInner object to access its operations. */
    private final UsagesInner usages;

    /**
     * Gets the UsagesInner object to access its operations.
     *
     * @return the UsagesInner object.
     */
    public UsagesInner usages() {
        return this.usages;
    }

    /** The ManagementPoliciesInner object to access its operations. */
    private final ManagementPoliciesInner managementPolicies;

    /**
     * Gets the ManagementPoliciesInner object to access its operations.
     *
     * @return the ManagementPoliciesInner object.
     */
    public ManagementPoliciesInner managementPolicies() {
        return this.managementPolicies;
    }

    /** The PrivateEndpointConnectionsInner object to access its operations. */
    private final PrivateEndpointConnectionsInner privateEndpointConnections;

    /**
     * Gets the PrivateEndpointConnectionsInner object to access its operations.
     *
     * @return the PrivateEndpointConnectionsInner object.
     */
    public PrivateEndpointConnectionsInner privateEndpointConnections() {
        return this.privateEndpointConnections;
    }

    /** The PrivateLinkResourcesInner object to access its operations. */
    private final PrivateLinkResourcesInner privateLinkResources;

    /**
     * Gets the PrivateLinkResourcesInner object to access its operations.
     *
     * @return the PrivateLinkResourcesInner object.
     */
    public PrivateLinkResourcesInner privateLinkResources() {
        return this.privateLinkResources;
    }

    /** The ObjectReplicationPoliciesOperationsInner object to access its operations. */
    private final ObjectReplicationPoliciesOperationsInner objectReplicationPoliciesOperations;

    /**
     * Gets the ObjectReplicationPoliciesOperationsInner object to access its operations.
     *
     * @return the ObjectReplicationPoliciesOperationsInner object.
     */
    public ObjectReplicationPoliciesOperationsInner objectReplicationPoliciesOperations() {
        return this.objectReplicationPoliciesOperations;
    }

    /** The EncryptionScopesInner object to access its operations. */
    private final EncryptionScopesInner encryptionScopes;

    /**
     * Gets the EncryptionScopesInner object to access its operations.
     *
     * @return the EncryptionScopesInner object.
     */
    public EncryptionScopesInner encryptionScopes() {
        return this.encryptionScopes;
    }

    /** The BlobServicesInner object to access its operations. */
    private final BlobServicesInner blobServices;

    /**
     * Gets the BlobServicesInner object to access its operations.
     *
     * @return the BlobServicesInner object.
     */
    public BlobServicesInner blobServices() {
        return this.blobServices;
    }

    /** The BlobContainersInner object to access its operations. */
    private final BlobContainersInner blobContainers;

    /**
     * Gets the BlobContainersInner object to access its operations.
     *
     * @return the BlobContainersInner object.
     */
    public BlobContainersInner blobContainers() {
        return this.blobContainers;
    }

    /** The FileServicesInner object to access its operations. */
    private final FileServicesInner fileServices;

    /**
     * Gets the FileServicesInner object to access its operations.
     *
     * @return the FileServicesInner object.
     */
    public FileServicesInner fileServices() {
        return this.fileServices;
    }

    /** The FileSharesInner object to access its operations. */
    private final FileSharesInner fileShares;

    /**
     * Gets the FileSharesInner object to access its operations.
     *
     * @return the FileSharesInner object.
     */
    public FileSharesInner fileShares() {
        return this.fileShares;
    }

    /** The QueueServicesInner object to access its operations. */
    private final QueueServicesInner queueServices;

    /**
     * Gets the QueueServicesInner object to access its operations.
     *
     * @return the QueueServicesInner object.
     */
    public QueueServicesInner queueServices() {
        return this.queueServices;
    }

    /** The QueuesInner object to access its operations. */
    private final QueuesInner queues;

    /**
     * Gets the QueuesInner object to access its operations.
     *
     * @return the QueuesInner object.
     */
    public QueuesInner queues() {
        return this.queues;
    }

    /** The TableServicesInner object to access its operations. */
    private final TableServicesInner tableServices;

    /**
     * Gets the TableServicesInner object to access its operations.
     *
     * @return the TableServicesInner object.
     */
    public TableServicesInner tableServices() {
        return this.tableServices;
    }

    /** The TablesInner object to access its operations. */
    private final TablesInner tables;

    /**
     * Gets the TablesInner object to access its operations.
     *
     * @return the TablesInner object.
     */
    public TablesInner tables() {
        return this.tables;
    }

    /** Initializes an instance of StorageManagementClient client. */
    public StorageManagementClientImpl() {
        this(
            new HttpPipelineBuilder().policies(new UserAgentPolicy(), new RetryPolicy(), new CookiePolicy()).build(),
            AzureEnvironment.AZURE);
    }

    /**
     * Initializes an instance of StorageManagementClient client.
     *
     * @param httpPipeline The HTTP pipeline to send requests through.
     */
    public StorageManagementClientImpl(HttpPipeline httpPipeline) {
        this(httpPipeline, AzureEnvironment.AZURE);
    }

    /**
     * Initializes an instance of StorageManagementClient client.
     *
     * @param httpPipeline The HTTP pipeline to send requests through.
     * @param environment The Azure environment.
     */
    public StorageManagementClientImpl(HttpPipeline httpPipeline, AzureEnvironment environment) {
        super(httpPipeline, environment);
        this.httpPipeline = httpPipeline;
        this.operations = new OperationsInner(this);
        this.skus = new SkusInner(this);
        this.storageAccounts = new StorageAccountsInner(this);
        this.usages = new UsagesInner(this);
        this.managementPolicies = new ManagementPoliciesInner(this);
        this.privateEndpointConnections = new PrivateEndpointConnectionsInner(this);
        this.privateLinkResources = new PrivateLinkResourcesInner(this);
        this.objectReplicationPoliciesOperations = new ObjectReplicationPoliciesOperationsInner(this);
        this.encryptionScopes = new EncryptionScopesInner(this);
        this.blobServices = new BlobServicesInner(this);
        this.blobContainers = new BlobContainersInner(this);
        this.fileServices = new FileServicesInner(this);
        this.fileShares = new FileSharesInner(this);
        this.queueServices = new QueueServicesInner(this);
        this.queues = new QueuesInner(this);
        this.tableServices = new TableServicesInner(this);
        this.tables = new TablesInner(this);
    }
}
