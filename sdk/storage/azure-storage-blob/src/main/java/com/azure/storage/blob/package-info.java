// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator

/**
 * <p>Azure Storage Blob Service is a cloud-based object storage service provided by Microsoft Azure. It is part of
 * the Azure Storage platform and is designed to store and manage unstructured data, such as documents, images, videos,
 * backups, and other types of binary or text data. Azure Storage Blob Service is commonly used for various storage and
 * data management scenarios in cloud applications and services.</p>
 *
 * <p>The Azure Storage Blob client library for Java is a set of Java libraries provided by Microsoft Azure for
 * interacting with Azure Blob Storage. Azure Blob Storage is a cloud-based object storage service offered by
 * Microsoft Azure, and the Azure Storage Blob client library for Java allows developers to create, manage, and work
 * with data stored in Azure Blob containers.</p>
 *
 * <p>Key features and capabilities of the Azure Storage Blob client library for Java include:</p>
 *
 * <ul>
 *     <li>Blob Operations: You can use this library to perform various blob operations, such as uploading,
 *     downloading, and deleting blobs in Azure Blob Storage.</li>
 *
 *     <li>Container Operations: It provides APIs for creating and managing blob containers, which are logical
 *     containers for organizing your blobs.</li>
 *
 *     <li>Asynchronous Programming: The library is designed to work with asynchronous programming patterns,
 *     allowing you to build efficient and responsive applications.</li>
 *
 *     <li>Authentication and Security: You can configure the library to work with Azure authentication, including
 *     using Azure Active Directory (Azure AD) or shared access signatures (SAS) for securing access to your storage
 *     resources.</li>
 *
 *     <li>Blob Metadata: You can set and retrieve metadata associated with blobs to store additional information
 *     about your data.</li>
 *
 *     <li>Parallelism: The library supports parallel uploading and downloading of blobs to maximize data transfer
 *     performance.</li>
 * </ul>
 *
 * <h2>Getting Started</h2>
 *
 * <h3>Authenticate a Client</h3>
 *
 * <p>In order to build a valid table client or table service client, you will need to authenticate the client using an accepted method of authentication. The supported forms of authentication are:
 *
 * <ul>
 *  <li><a href="https://learn.microsoft.com/azure/data-explorer/kusto/api/connection-strings/storage-connection-strings">Connection String</a></li>
 *  <li><a href="https://learn.microsoft.com/java/api/com.azure.core.credential.azurenamedkeycredential?view=azure-java-stable">Shared Key</a></li>
 *  <li><a href="https://learn.microsoft.com/java/api/com.azure.core.credential.azuresascredential?view=azure-java-stable">Shared Access Signature (SAS)</a></li>
 *  <li><a href="https://learn.microsoft.com/java/api/com.azure.core.credential.tokencredential?view=azure-java-stable">Token Credential</a></li>
 * </ul>
 *
 * <p>See client builder class documentation {@link com.azure.storage.blob.BlobServiceClientBuilder BlobServiceClientBuilder} and {@link com.azure.storage.blob.BlobClientBuilder BlobClientBuilder}
 * for examples of authenticating a client.</p>
 *
 * <p>For more information on authentication types, see <a href=https://learn.microsoft.com/azure/developer/java/sdk/identity>the identity documentation</a>.</p>
 *
 * <em>Blob service clients utilize their authentication information to create Blob clients. Blob clients created via a blob service client will inherit the authentication information of the blob
 *  service client.</em>
 *
 * <hr/>
 *
 * <h3>Overview</h3>
 *
 * <p>The {@link com.azure.storage.blob.BlobServiceClient BlobServiceClient} and {@link com.azure.storage.blob.BlobServiceAsyncClient BlobServiceAsyncClient} provide access to the storage account.
 * A blob service client can create, list, and delete containers. It also provides access to a blob client that can be used to perform CRUD operations on storage blobs.
 * You can instantiate a blob service client using an instance of {@link com.azure.storage.blob.BlobServiceClientBuilder BlobServiceClientBuilder}.</p>
 *
 * <p>The {@link com.azure.storage.blob.BlobContainerClient BlobContainerClient} and {@link com.azure.storage.blob.BlobContainerAsyncClient} provide access to a specific blob container within an Azure Storage account.
 * A blob container client can be used to perform  CRUD operations, list blobs and configure access policies on the storage blob container. An instance of a blob container client can be returned via a blob service client or can be instantiated using an instance of
 * {@link com.azure.storage.blob.BlobContainerClientBuilder BlobContainerClientBuilder}.</p>
 *
 * <p>The {@link com.azure.storage.blob.BlobClient BlobClient} and {@link com.azure.storage.blob.BlobAsyncClient} provide access to a specific blob within an Azure Storage account.
 * A blob client can be used to perform download, upload and CRUD operations on the storage blob. An instance of a blob client can be returned via a blob container client or can be instantiated using an instance of
 * {@link com.azure.storage.blob.BlobClientBuilder BlobClientBuilder}.</p>
 *
 * <p>See methods in client level class below to explore all capabilities the library provides.</p>
 *
 * <hr/>
 *
 * <h3>Create a {@link com.azure.storage.blob.BlobServiceClient BlobServiceClient} using a {@link com.azure.storage.blob.BlobServiceClientBuilder BlobServiceClientBuilder}</h3>
 *
 * <p>The {@link com.azure.storage.blob.BlobServiceClient BlobServiceClient} and {@link com.azure.storage.blob.BlobServiceAsyncClient BlobServiceAsyncClient} both provide access to the storage account.
 * A blob service client can create, list, and delete containers. It also provides access to a blob client that can be used to perform download, upload and CRUD operations on storage blob.
 * You can instantiate a blob service client using an instance of {@link com.azure.storage.blob.BlobServiceClientBuilder BlobServiceClientBuilder}.</p>
 *
 * <p>Here's an example of creating a synchronous blob service client using the {@link com.azure.storage.blob.BlobServiceClientBuilder#buildClient()}  buildClient} method:</p>
 *
 * <!-- src_embed com.azure.storage.blob.BlobServiceClientBuilder.buildClient -->
 * <!-- end com.azure.storage.blob.BlobServiceClientBuilder.buildClient -->
 *
 * <p><strong>Note:</strong> To create an asynchronous blob service client, call {@link com.azure.storage.blob.BlobServiceClientBuilder#buildAsyncClient() buildAsyncClient()} instead of {@link com.azure.storage.blob.BlobServiceClientBuilder#buildClient() buildClient()}.</p>
 *
 * <hr/>
 *
 * <h3>Create a Blob Container using {@link com.azure.storage.blob.BlobServiceClient BlobServiceClient}</h3>
 *
 * <p>The {@link com.azure.storage.blob.BlobServiceClient#createBlobContainer(java.lang.String) createBlobContainer} method can be used to create a blob container.</p>
 *
 * <p>The following example creates a blob container with the name "containerName".</p>
 *
 * <!-- src_embed com.azure.storage.blob.BlobServiceClient.createBlobContainer#String -->
 * <!-- end com.azure.storage.blob.BlobServiceClient.createBlobContainer#String -->
 *
 * <p><strong>Note:</strong> For asynchronous sample, refer to {@link com.azure.storage.blob.BlobServiceAsyncClient BlobServiceAsyncClient}</p>
 *
 * <hr/>
 *
 * <h3>List Containers using {@link com.azure.storage.blob.BlobServiceClient BlobServiceClient}</h3>
 *
 * <p>The {@link com.azure.storage.blob.BlobServiceClient#listBlobContainers() listBlobContainers} method can be used to list the blob containers that are within an Azure Storage account.</p>
 *
 * <p>The following example lists all the containers in the account.</p>
 *
 * <!-- src_embed com.azure.storage.blob.BlobServiceAsyncClient.listBlobContainers -->
 * <!-- end com.azure.storage.blob.BlobServiceAsyncClient.listBlobContainers -->
 *
 * <p><strong>Note:</strong> For asynchronous sample, refer to {@link com.azure.storage.blob.BlobServiceAsyncClient BlobServiceAsyncClient}</p>
 *
 * <hr/>
 *
 * <h3>Retrieve a {@link com.azure.storage.blob.BlobContainerClient BlobContainerClient} from a {@link com.azure.storage.blob.BlobServiceClient BlobServiceClient}</h3>
 *
 * <p>The {@link com.azure.storage.blob.BlobServiceClient#getBlobContainerClient(java.lang.String) getBlobContainerClient} method can be used to retrieve a TableClient for a specified table that is stored within your Azure Storage account.</p>
 *
 * <p>The following example returns a blob container client for a container with the name "containerName".</p>
 *
 * <!-- src_embed com.azure.storage.blob.BlobServiceClient.getBlobContainerClient#String -->
 * <!-- end com.azure.storage.blob.BlobServiceClient.getBlobContainerClient#String -->
 *
 * <p><strong>Note:</strong> For asynchronous sample, refer to {@link com.azure.storage.blob.BlobServiceAsyncClient BlobServiceAsyncClient}</p>
 *
 * <hr/>
 *
 * <h3>Create a {@link com.azure.storage.blob.BlobContainerClient BlobContainerClient} using a {@link com.azure.storage.blob.BlobContainerClientBuilder BlobContainerClientBuilder}</h3>
 *
 * <p>The {@link com.azure.storage.blob.BlobContainerClient BlobContainerClient} and {@link com.azure.storage.blob.BlobContainerAsyncClient} provide access to a specific blob container within an Azure Storage account.
 * The {@link com.azure.storage.blob.BlobContainerClientBuilder#buildClient() BlobContainerClientBuilder buildClient} method can be used to create a {@link com.azure.storage.blob.BlobContainerClient BlobContainerClient}</p>
 *
 * <p>Here's an example of creating a BlobContainerClient using a builder:</p>
 *
 * <!-- src_embed com.azure.storage.blob.BlobContainerClientBuilder.buildClient -->
 * <!-- end com.azure.storage.blob.BlobContainerClientBuilder.buildClient -->
 *
 * <p><strong>Note:</strong> To create a BlobContainerAsyncClient, call {@link com.azure.storage.blob.BlobContainerClientBuilder#buildAsyncClient() buildAsyncClient()} instead of {@link com.azure.data.tables.TableClientBuilder#buildClient() buildClient()}.</p>
 *
 * <hr/>
 *
 * <h3>Create the Blob Container using {@link com.azure.storage.blob.BlobContainerClient}</h3>
 *
 * <p>The {@link com.azure.storage.blob.BlobContainerClient#create() create} method can be used create the blob container within an Azure Storage account.</p>
 *
 * <p>Here's an example of creating a blob container:</p>
 *
 * <!-- src_embed com.azure.storage.blob.BlobContainerClient.create -->
 * <!-- end com.azure.storage.blob.BlobContainerClient.create -->
 *
 * <p><strong>Note:</strong> For asynchronous sample, refer to {@link com.azure.storage.blob.BlobContainerAsyncClient#create()} method.</p>
 *
 * <hr/>
 *
 * <h3>List the Blobs in the container using {@link com.azure.storage.blob.BlobContainerClient}</h3>
 *
 * <p>The {@link com.azure.storage.blob.BlobContainerClient#listBlobs()} method can be used create list the blobs in the storage container.</p>
 *
 * <p>Here's an example of creating a blob container:</p>
 *
 * <!-- src_embed com.azure.storage.blob.BlobContainerClient.listBlobs -->
 * <!-- end com.azure.storage.blob.BlobContainerClient.listBlobs -->
 *
 * <p><strong>Note:</strong> For asynchronous sample, refer to {@link com.azure.storage.blob.BlobContainerAsyncClient#create()} method.</p>
 *
 * <hr/>
 *
 * <h3>Retrieve a {@link com.azure.storage.blob.BlobClient BlobCClient} from a {@link com.azure.storage.blob.BlobContainerClient BlobContainerClient}</h3>
 *
 * <p>The {@link com.azure.storage.blob.BlobContainerClient#getBlobClient(java.lang.String)} getBlobClient} method can be used to retrieve a BlobClient for a specified table that is stored within your Azure Storage account.</p>
 *
 * <p>The following example returns a blob container client for a container with the name "containerName".</p>
 *
 * <!-- src_embed com.azure.storage.blob.BlobServiceClient.getBlobContainerClient#String -->
 * <!-- end com.azure.storage.blob.BlobServiceClient.getBlobContainerClient#String -->
 *
 * <p><strong>Note:</strong> For asynchronous sample, refer to {@link com.azure.storage.blob.BlobServiceAsyncClient BlobServiceAsyncClient}</p>
 *
 * <hr/>
 *
 * <h3>Create a {@link com.azure.storage.blob.BlobClient BlobClient} using a {@link com.azure.storage.blob.BlobClientBuilder BlobClientBuilder}</h3>
 *
 * <p>The {@link com.azure.storage.blob.BlobClient BlobContainerClient} and {@link com.azure.storage.blob.BlobAsyncClient} provide access to a specific blob.
 * The {@link com.azure.storage.blob.BlobClientBuilder#buildClient() BlobClientBuilder buildClient} method can be used to create a {@link com.azure.storage.blob.BlobClient BlobClient}</p>
 *
 * <p>Here's an example of creating a BlobClient using a builder:</p>
 *
 * <!-- src_embed com.azure.storage.blob.BlobContainerClientBuilder.buildClient -->
 * <!-- end com.azure.storage.blob.BlobContainerClientBuilder.buildClient -->
 *
 * <p><strong>Note:</strong> To create a BlobContainerAsyncClient, call {@link com.azure.storage.blob.BlobContainerClientBuilder#buildAsyncClient() buildAsyncClient()} instead of {@link com.azure.data.tables.TableClientBuilder#buildClient() buildClient()}.</p>
 *
 * <hr/>
 *
 *
 * @see com.azure.storage.blob.BlobServiceClient
 * @see com.azure.storage.blob.BlobServiceAsyncClient
 * @see com.azure.storage.blob.BlobContainerClient
 * @see com.azure.storage.blob.BlobContainerAsyncClient
 * @see com.azure.storage.blob.BlobClient
 * @see com.azure.storage.blob.BlobAsyncClient
 * @see com.azure.storage.blob.BlobServiceClientBuilder
 * @see com.azure.storage.blob.BlobContainerClientBuilder
 * @see com.azure.storage.blob.BlobClientBuilder
 */
package com.azure.storage.blob;
