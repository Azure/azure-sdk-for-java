// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storage.generated.models;

import com.azure.resourcemanager.storage.generated.fluent.models.FileShareItemInner;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;

/** An immutable client-side representation of FileShareItem. */
public interface FileShareItem {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the etag property: Resource Etag.
     *
     * @return the etag value.
     */
    String etag();

    /**
     * Gets the lastModifiedTime property: Returns the date and time the share was last modified.
     *
     * @return the lastModifiedTime value.
     */
    OffsetDateTime lastModifiedTime();

    /**
     * Gets the metadata property: A name-value pair to associate with the share as metadata.
     *
     * @return the metadata value.
     */
    Map<String, String> metadata();

    /**
     * Gets the shareQuota property: The maximum size of the share, in gigabytes. Must be greater than 0, and less than
     * or equal to 5TB (5120). For Large File Shares, the maximum size is 102400.
     *
     * @return the shareQuota value.
     */
    Integer shareQuota();

    /**
     * Gets the enabledProtocols property: The authentication protocol that is used for the file share. Can only be
     * specified when creating a share.
     *
     * @return the enabledProtocols value.
     */
    EnabledProtocols enabledProtocols();

    /**
     * Gets the rootSquash property: The property is for NFS share only. The default is NoRootSquash.
     *
     * @return the rootSquash value.
     */
    RootSquashType rootSquash();

    /**
     * Gets the version property: The version of the share.
     *
     * @return the version value.
     */
    String version();

    /**
     * Gets the deleted property: Indicates whether the share was deleted.
     *
     * @return the deleted value.
     */
    Boolean deleted();

    /**
     * Gets the deletedTime property: The deleted time if the share was deleted.
     *
     * @return the deletedTime value.
     */
    OffsetDateTime deletedTime();

    /**
     * Gets the remainingRetentionDays property: Remaining retention days for share that was soft deleted.
     *
     * @return the remainingRetentionDays value.
     */
    Integer remainingRetentionDays();

    /**
     * Gets the accessTier property: Access tier for specific share. GpV2 account can choose between
     * TransactionOptimized (default), Hot, and Cool. FileStorage account can choose Premium.
     *
     * @return the accessTier value.
     */
    ShareAccessTier accessTier();

    /**
     * Gets the accessTierChangeTime property: Indicates the last modification time for share access tier.
     *
     * @return the accessTierChangeTime value.
     */
    OffsetDateTime accessTierChangeTime();

    /**
     * Gets the accessTierStatus property: Indicates if there is a pending transition for access tier.
     *
     * @return the accessTierStatus value.
     */
    String accessTierStatus();

    /**
     * Gets the shareUsageBytes property: The approximate size of the data stored on the share. Note that this value may
     * not include all recently created or recently resized files.
     *
     * @return the shareUsageBytes value.
     */
    Long shareUsageBytes();

    /**
     * Gets the leaseStatus property: The lease status of the share.
     *
     * @return the leaseStatus value.
     */
    LeaseStatus leaseStatus();

    /**
     * Gets the leaseState property: Lease state of the share.
     *
     * @return the leaseState value.
     */
    LeaseState leaseState();

    /**
     * Gets the leaseDuration property: Specifies whether the lease on a share is of infinite or fixed duration, only
     * when the share is leased.
     *
     * @return the leaseDuration value.
     */
    LeaseDuration leaseDuration();

    /**
     * Gets the signedIdentifiers property: List of stored access policies specified on the share.
     *
     * @return the signedIdentifiers value.
     */
    List<SignedIdentifier> signedIdentifiers();

    /**
     * Gets the snapshotTime property: Creation time of share snapshot returned in the response of list shares with
     * expand param "snapshots".
     *
     * @return the snapshotTime value.
     */
    OffsetDateTime snapshotTime();

    /**
     * Gets the inner com.azure.resourcemanager.storage.generated.fluent.models.FileShareItemInner object.
     *
     * @return the inner object.
     */
    FileShareItemInner innerModel();
}
