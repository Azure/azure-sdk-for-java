// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storage.generated.models;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.storage.generated.fluent.models.BlobInventoryPolicyInner;
import java.time.OffsetDateTime;

/** An immutable client-side representation of BlobInventoryPolicy. */
public interface BlobInventoryPolicy {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the systemData property: Metadata pertaining to creation and last modification of the resource.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the lastModifiedTime property: Returns the last modified date and time of the blob inventory policy.
     *
     * @return the lastModifiedTime value.
     */
    OffsetDateTime lastModifiedTime();

    /**
     * Gets the policy property: The storage account blob inventory policy object. It is composed of policy rules.
     *
     * @return the policy value.
     */
    BlobInventoryPolicySchema policy();

    /**
     * Gets the inner com.azure.resourcemanager.storage.generated.fluent.models.BlobInventoryPolicyInner object.
     *
     * @return the inner object.
     */
    BlobInventoryPolicyInner innerModel();

    /** The entirety of the BlobInventoryPolicy definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The BlobInventoryPolicy definition stages. */
    interface DefinitionStages {
        /** The first stage of the BlobInventoryPolicy definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the BlobInventoryPolicy definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, accountName.
             *
             * @param resourceGroupName The name of the resource group within the user's subscription. The name is case
             *     insensitive.
             * @param accountName The name of the storage account within the specified resource group. Storage account
             *     names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
             * @return the next definition stage.
             */
            WithCreate withExistingStorageAccount(String resourceGroupName, String accountName);
        }
        /**
         * The stage of the BlobInventoryPolicy definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithPolicy {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            BlobInventoryPolicy create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            BlobInventoryPolicy create(Context context);
        }
        /** The stage of the BlobInventoryPolicy definition allowing to specify policy. */
        interface WithPolicy {
            /**
             * Specifies the policy property: The storage account blob inventory policy object. It is composed of policy
             * rules..
             *
             * @param policy The storage account blob inventory policy object. It is composed of policy rules.
             * @return the next definition stage.
             */
            WithCreate withPolicy(BlobInventoryPolicySchema policy);
        }
    }
    /**
     * Begins update for the BlobInventoryPolicy resource.
     *
     * @return the stage of resource update.
     */
    BlobInventoryPolicy.Update update();

    /** The template for BlobInventoryPolicy update. */
    interface Update extends UpdateStages.WithPolicy {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        BlobInventoryPolicy apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        BlobInventoryPolicy apply(Context context);
    }
    /** The BlobInventoryPolicy update stages. */
    interface UpdateStages {
        /** The stage of the BlobInventoryPolicy update allowing to specify policy. */
        interface WithPolicy {
            /**
             * Specifies the policy property: The storage account blob inventory policy object. It is composed of policy
             * rules..
             *
             * @param policy The storage account blob inventory policy object. It is composed of policy rules.
             * @return the next definition stage.
             */
            Update withPolicy(BlobInventoryPolicySchema policy);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    BlobInventoryPolicy refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    BlobInventoryPolicy refresh(Context context);
}
