// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storage.generated.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.storage.generated.fluent.models.BlobServicePropertiesInner;

/** An immutable client-side representation of BlobServiceProperties. */
public interface BlobServiceProperties {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the sku property: Sku name and tier.
     *
     * @return the sku value.
     */
    Sku sku();

    /**
     * Gets the cors property: Specifies CORS rules for the Blob service. You can include up to five CorsRule elements
     * in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and
     * CORS will be disabled for the Blob service.
     *
     * @return the cors value.
     */
    CorsRules cors();

    /**
     * Gets the defaultServiceVersion property: DefaultServiceVersion indicates the default version to use for requests
     * to the Blob service if an incoming request’s version is not specified. Possible values include version 2008-10-27
     * and all more recent versions.
     *
     * @return the defaultServiceVersion value.
     */
    String defaultServiceVersion();

    /**
     * Gets the deleteRetentionPolicy property: The blob service properties for blob soft delete.
     *
     * @return the deleteRetentionPolicy value.
     */
    DeleteRetentionPolicy deleteRetentionPolicy();

    /**
     * Gets the isVersioningEnabled property: Versioning is enabled if set to true.
     *
     * @return the isVersioningEnabled value.
     */
    Boolean isVersioningEnabled();

    /**
     * Gets the automaticSnapshotPolicyEnabled property: Deprecated in favor of isVersioningEnabled property.
     *
     * @return the automaticSnapshotPolicyEnabled value.
     */
    Boolean automaticSnapshotPolicyEnabled();

    /**
     * Gets the changeFeed property: The blob service properties for change feed events.
     *
     * @return the changeFeed value.
     */
    ChangeFeed changeFeed();

    /**
     * Gets the restorePolicy property: The blob service properties for blob restore policy.
     *
     * @return the restorePolicy value.
     */
    RestorePolicyProperties restorePolicy();

    /**
     * Gets the containerDeleteRetentionPolicy property: The blob service properties for container soft delete.
     *
     * @return the containerDeleteRetentionPolicy value.
     */
    DeleteRetentionPolicy containerDeleteRetentionPolicy();

    /**
     * Gets the lastAccessTimeTrackingPolicy property: The blob service property to configure last access time based
     * tracking policy.
     *
     * @return the lastAccessTimeTrackingPolicy value.
     */
    LastAccessTimeTrackingPolicy lastAccessTimeTrackingPolicy();

    /**
     * Gets the inner com.azure.resourcemanager.storage.generated.fluent.models.BlobServicePropertiesInner object.
     *
     * @return the inner object.
     */
    BlobServicePropertiesInner innerModel();

    /** The entirety of the BlobServiceProperties definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The BlobServiceProperties definition stages. */
    interface DefinitionStages {
        /** The first stage of the BlobServiceProperties definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the BlobServiceProperties definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, accountName.
             *
             * @param resourceGroupName The name of the resource group within the user's subscription. The name is case
             *     insensitive.
             * @param accountName The name of the storage account within the specified resource group. Storage account
             *     names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
             * @return the next definition stage.
             */
            WithCreate withExistingStorageAccount(String resourceGroupName, String accountName);
        }
        /**
         * The stage of the BlobServiceProperties definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithCors,
                DefinitionStages.WithDefaultServiceVersion,
                DefinitionStages.WithDeleteRetentionPolicy,
                DefinitionStages.WithIsVersioningEnabled,
                DefinitionStages.WithAutomaticSnapshotPolicyEnabled,
                DefinitionStages.WithChangeFeed,
                DefinitionStages.WithRestorePolicy,
                DefinitionStages.WithContainerDeleteRetentionPolicy,
                DefinitionStages.WithLastAccessTimeTrackingPolicy {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            BlobServiceProperties create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            BlobServiceProperties create(Context context);
        }
        /** The stage of the BlobServiceProperties definition allowing to specify cors. */
        interface WithCors {
            /**
             * Specifies the cors property: Specifies CORS rules for the Blob service. You can include up to five
             * CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS
             * rules will be deleted, and CORS will be disabled for the Blob service..
             *
             * @param cors Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in
             *     the request. If no CorsRule elements are included in the request body, all CORS rules will be
             *     deleted, and CORS will be disabled for the Blob service.
             * @return the next definition stage.
             */
            WithCreate withCors(CorsRules cors);
        }
        /** The stage of the BlobServiceProperties definition allowing to specify defaultServiceVersion. */
        interface WithDefaultServiceVersion {
            /**
             * Specifies the defaultServiceVersion property: DefaultServiceVersion indicates the default version to use
             * for requests to the Blob service if an incoming request’s version is not specified. Possible values
             * include version 2008-10-27 and all more recent versions..
             *
             * @param defaultServiceVersion DefaultServiceVersion indicates the default version to use for requests to
             *     the Blob service if an incoming request’s version is not specified. Possible values include version
             *     2008-10-27 and all more recent versions.
             * @return the next definition stage.
             */
            WithCreate withDefaultServiceVersion(String defaultServiceVersion);
        }
        /** The stage of the BlobServiceProperties definition allowing to specify deleteRetentionPolicy. */
        interface WithDeleteRetentionPolicy {
            /**
             * Specifies the deleteRetentionPolicy property: The blob service properties for blob soft delete..
             *
             * @param deleteRetentionPolicy The blob service properties for blob soft delete.
             * @return the next definition stage.
             */
            WithCreate withDeleteRetentionPolicy(DeleteRetentionPolicy deleteRetentionPolicy);
        }
        /** The stage of the BlobServiceProperties definition allowing to specify isVersioningEnabled. */
        interface WithIsVersioningEnabled {
            /**
             * Specifies the isVersioningEnabled property: Versioning is enabled if set to true..
             *
             * @param isVersioningEnabled Versioning is enabled if set to true.
             * @return the next definition stage.
             */
            WithCreate withIsVersioningEnabled(Boolean isVersioningEnabled);
        }
        /** The stage of the BlobServiceProperties definition allowing to specify automaticSnapshotPolicyEnabled. */
        interface WithAutomaticSnapshotPolicyEnabled {
            /**
             * Specifies the automaticSnapshotPolicyEnabled property: Deprecated in favor of isVersioningEnabled
             * property..
             *
             * @param automaticSnapshotPolicyEnabled Deprecated in favor of isVersioningEnabled property.
             * @return the next definition stage.
             */
            WithCreate withAutomaticSnapshotPolicyEnabled(Boolean automaticSnapshotPolicyEnabled);
        }
        /** The stage of the BlobServiceProperties definition allowing to specify changeFeed. */
        interface WithChangeFeed {
            /**
             * Specifies the changeFeed property: The blob service properties for change feed events..
             *
             * @param changeFeed The blob service properties for change feed events.
             * @return the next definition stage.
             */
            WithCreate withChangeFeed(ChangeFeed changeFeed);
        }
        /** The stage of the BlobServiceProperties definition allowing to specify restorePolicy. */
        interface WithRestorePolicy {
            /**
             * Specifies the restorePolicy property: The blob service properties for blob restore policy..
             *
             * @param restorePolicy The blob service properties for blob restore policy.
             * @return the next definition stage.
             */
            WithCreate withRestorePolicy(RestorePolicyProperties restorePolicy);
        }
        /** The stage of the BlobServiceProperties definition allowing to specify containerDeleteRetentionPolicy. */
        interface WithContainerDeleteRetentionPolicy {
            /**
             * Specifies the containerDeleteRetentionPolicy property: The blob service properties for container soft
             * delete..
             *
             * @param containerDeleteRetentionPolicy The blob service properties for container soft delete.
             * @return the next definition stage.
             */
            WithCreate withContainerDeleteRetentionPolicy(DeleteRetentionPolicy containerDeleteRetentionPolicy);
        }
        /** The stage of the BlobServiceProperties definition allowing to specify lastAccessTimeTrackingPolicy. */
        interface WithLastAccessTimeTrackingPolicy {
            /**
             * Specifies the lastAccessTimeTrackingPolicy property: The blob service property to configure last access
             * time based tracking policy..
             *
             * @param lastAccessTimeTrackingPolicy The blob service property to configure last access time based
             *     tracking policy.
             * @return the next definition stage.
             */
            WithCreate withLastAccessTimeTrackingPolicy(LastAccessTimeTrackingPolicy lastAccessTimeTrackingPolicy);
        }
    }
    /**
     * Begins update for the BlobServiceProperties resource.
     *
     * @return the stage of resource update.
     */
    BlobServiceProperties.Update update();

    /** The template for BlobServiceProperties update. */
    interface Update
        extends UpdateStages.WithCors,
            UpdateStages.WithDefaultServiceVersion,
            UpdateStages.WithDeleteRetentionPolicy,
            UpdateStages.WithIsVersioningEnabled,
            UpdateStages.WithAutomaticSnapshotPolicyEnabled,
            UpdateStages.WithChangeFeed,
            UpdateStages.WithRestorePolicy,
            UpdateStages.WithContainerDeleteRetentionPolicy,
            UpdateStages.WithLastAccessTimeTrackingPolicy {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        BlobServiceProperties apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        BlobServiceProperties apply(Context context);
    }
    /** The BlobServiceProperties update stages. */
    interface UpdateStages {
        /** The stage of the BlobServiceProperties update allowing to specify cors. */
        interface WithCors {
            /**
             * Specifies the cors property: Specifies CORS rules for the Blob service. You can include up to five
             * CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS
             * rules will be deleted, and CORS will be disabled for the Blob service..
             *
             * @param cors Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in
             *     the request. If no CorsRule elements are included in the request body, all CORS rules will be
             *     deleted, and CORS will be disabled for the Blob service.
             * @return the next definition stage.
             */
            Update withCors(CorsRules cors);
        }
        /** The stage of the BlobServiceProperties update allowing to specify defaultServiceVersion. */
        interface WithDefaultServiceVersion {
            /**
             * Specifies the defaultServiceVersion property: DefaultServiceVersion indicates the default version to use
             * for requests to the Blob service if an incoming request’s version is not specified. Possible values
             * include version 2008-10-27 and all more recent versions..
             *
             * @param defaultServiceVersion DefaultServiceVersion indicates the default version to use for requests to
             *     the Blob service if an incoming request’s version is not specified. Possible values include version
             *     2008-10-27 and all more recent versions.
             * @return the next definition stage.
             */
            Update withDefaultServiceVersion(String defaultServiceVersion);
        }
        /** The stage of the BlobServiceProperties update allowing to specify deleteRetentionPolicy. */
        interface WithDeleteRetentionPolicy {
            /**
             * Specifies the deleteRetentionPolicy property: The blob service properties for blob soft delete..
             *
             * @param deleteRetentionPolicy The blob service properties for blob soft delete.
             * @return the next definition stage.
             */
            Update withDeleteRetentionPolicy(DeleteRetentionPolicy deleteRetentionPolicy);
        }
        /** The stage of the BlobServiceProperties update allowing to specify isVersioningEnabled. */
        interface WithIsVersioningEnabled {
            /**
             * Specifies the isVersioningEnabled property: Versioning is enabled if set to true..
             *
             * @param isVersioningEnabled Versioning is enabled if set to true.
             * @return the next definition stage.
             */
            Update withIsVersioningEnabled(Boolean isVersioningEnabled);
        }
        /** The stage of the BlobServiceProperties update allowing to specify automaticSnapshotPolicyEnabled. */
        interface WithAutomaticSnapshotPolicyEnabled {
            /**
             * Specifies the automaticSnapshotPolicyEnabled property: Deprecated in favor of isVersioningEnabled
             * property..
             *
             * @param automaticSnapshotPolicyEnabled Deprecated in favor of isVersioningEnabled property.
             * @return the next definition stage.
             */
            Update withAutomaticSnapshotPolicyEnabled(Boolean automaticSnapshotPolicyEnabled);
        }
        /** The stage of the BlobServiceProperties update allowing to specify changeFeed. */
        interface WithChangeFeed {
            /**
             * Specifies the changeFeed property: The blob service properties for change feed events..
             *
             * @param changeFeed The blob service properties for change feed events.
             * @return the next definition stage.
             */
            Update withChangeFeed(ChangeFeed changeFeed);
        }
        /** The stage of the BlobServiceProperties update allowing to specify restorePolicy. */
        interface WithRestorePolicy {
            /**
             * Specifies the restorePolicy property: The blob service properties for blob restore policy..
             *
             * @param restorePolicy The blob service properties for blob restore policy.
             * @return the next definition stage.
             */
            Update withRestorePolicy(RestorePolicyProperties restorePolicy);
        }
        /** The stage of the BlobServiceProperties update allowing to specify containerDeleteRetentionPolicy. */
        interface WithContainerDeleteRetentionPolicy {
            /**
             * Specifies the containerDeleteRetentionPolicy property: The blob service properties for container soft
             * delete..
             *
             * @param containerDeleteRetentionPolicy The blob service properties for container soft delete.
             * @return the next definition stage.
             */
            Update withContainerDeleteRetentionPolicy(DeleteRetentionPolicy containerDeleteRetentionPolicy);
        }
        /** The stage of the BlobServiceProperties update allowing to specify lastAccessTimeTrackingPolicy. */
        interface WithLastAccessTimeTrackingPolicy {
            /**
             * Specifies the lastAccessTimeTrackingPolicy property: The blob service property to configure last access
             * time based tracking policy..
             *
             * @param lastAccessTimeTrackingPolicy The blob service property to configure last access time based
             *     tracking policy.
             * @return the next definition stage.
             */
            Update withLastAccessTimeTrackingPolicy(LastAccessTimeTrackingPolicy lastAccessTimeTrackingPolicy);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    BlobServiceProperties refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    BlobServiceProperties refresh(Context context);
}
