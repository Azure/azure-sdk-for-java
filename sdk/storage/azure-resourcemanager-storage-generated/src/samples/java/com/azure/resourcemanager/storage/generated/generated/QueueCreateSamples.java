// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storage.generated.generated;

import java.util.HashMap;
import java.util.Map;

/** Samples for Queue Create. */
public final class QueueCreateSamples {
    /*
     * x-ms-original-file: specification/storage/resource-manager/Microsoft.Storage/stable/2021-09-01/examples/QueueOperationPut.json
     */
    /**
     * Sample code: QueueOperationPut.
     *
     * @param manager Entry point to StorageManager.
     */
    public static void queueOperationPut(com.azure.resourcemanager.storage.generated.StorageManager manager) {
        manager.queues().define("queue6185").withExistingStorageAccount("res3376", "sto328").create();
    }

    /*
     * x-ms-original-file: specification/storage/resource-manager/Microsoft.Storage/stable/2021-09-01/examples/QueueOperationPutWithMetadata.json
     */
    /**
     * Sample code: QueueOperationPutWithMetadata.
     *
     * @param manager Entry point to StorageManager.
     */
    public static void queueOperationPutWithMetadata(
        com.azure.resourcemanager.storage.generated.StorageManager manager) {
        manager
            .queues()
            .define("queue6185")
            .withExistingStorageAccount("res3376", "sto328")
            .withMetadata(mapOf("sample1", "meta1", "sample2", "meta2"))
            .create();
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
