// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storage.generated.generated;

import com.azure.core.util.Context;
import com.azure.resourcemanager.storage.generated.models.LocalUser;
import com.azure.resourcemanager.storage.generated.models.PermissionScope;
import com.azure.resourcemanager.storage.generated.models.SshPublicKey;
import java.util.Arrays;

/** Samples for LocalUsersOperation CreateOrUpdate. */
public final class LocalUsersOperationCreateOrUpdateSamples {
    /*
     * x-ms-original-file: specification/storage/resource-manager/Microsoft.Storage/stable/2021-09-01/examples/LocalUserCreate.json
     */
    /**
     * Sample code: CreateLocalUser.
     *
     * @param manager Entry point to StorageManager.
     */
    public static void createLocalUser(com.azure.resourcemanager.storage.generated.StorageManager manager) {
        manager
            .localUsersOperations()
            .define("user1")
            .withExistingStorageAccount("res6977", "sto2527")
            .withPermissionScopes(
                Arrays
                    .asList(
                        new PermissionScope().withPermissions("rwd").withService("file").withResourceName("share1"),
                        new PermissionScope().withPermissions("rw").withService("file").withResourceName("share2")))
            .withHomeDirectory("homedirectory")
            .withSshAuthorizedKeys(
                Arrays.asList(new SshPublicKey().withDescription("key name").withKey("ssh-rsa keykeykeykeykey=")))
            .withHasSshPassword(true)
            .create();
    }

    /*
     * x-ms-original-file: specification/storage/resource-manager/Microsoft.Storage/stable/2021-09-01/examples/LocalUserUpdate.json
     */
    /**
     * Sample code: UpdateLocalUser.
     *
     * @param manager Entry point to StorageManager.
     */
    public static void updateLocalUser(com.azure.resourcemanager.storage.generated.StorageManager manager) {
        LocalUser resource =
            manager.localUsersOperations().getWithResponse("res6977", "sto2527", "user1", Context.NONE).getValue();
        resource
            .update()
            .withHomeDirectory("homedirectory2")
            .withHasSharedKey(false)
            .withHasSshKey(false)
            .withHasSshPassword(false)
            .apply();
    }
}
