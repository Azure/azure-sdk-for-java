{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 1,
      "content": {
        "json": "## Storage for Java stress testing\n\nEnter the test runId - it matches Storage resource name and is a suffix in AppInsights role name."
      },
      "name": "text - 2"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "ab5bb927-f8a4-4491-8621-d300820d2ff3",
            "version": "KqlParameterItem/1.0",
            "name": "timeRange",
            "label": "Time Range",
            "type": 4,
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 900000
                },
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                }
              ],
              "allowCustom": true
            },
            "value": {
              "durationMs": 1800000
            }
          },
          {
            "id": "1b563bbe-70e0-48e6-ae33-d71d97ab8332",
            "version": "KqlParameterItem/1.0",
            "name": "runId",
            "type": 2,
            "isRequired": true,
            "query": "traces \r\n| where timestamp >= {timeRange:start} and timestamp <= {timeRange:end}\r\n| where sdkVersion contains \"java\" \r\n| extend runId = tostring(split(cloud_RoleName, \"-\")[1])\r\n| summarize start=min(timestamp) by runId \r\n| order by start asc\r\n| project-away start",
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "queryType": 0,
            "resourceType": "microsoft.insights/components",
            "value": ""
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.insights/components"
      },
      "customWidth": "30",
      "name": "parameters - 2",
      "styleSettings": {
        "maxWidth": "30"
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let runs = traces \r\n| where timestamp >= {timeRange:start} and timestamp <= {timeRange:end}\r\n| where sdkVersion contains \"java\"\r\n| extend runId = tostring(split(cloud_RoleName, \"-\")[1])\r\n| summarize start=min(timestamp), end=max(timestamp) by runId, cloud_RoleInstance;\r\nlet azSdkLogs = traces\r\n| where timestamp >= {timeRange:start} and timestamp <= {timeRange:end}\r\n| where cloud_RoleName startswith \"storage-\"\r\n| extend runId = tostring(split(cloud_RoleName, \"-\")[1])\r\n| where sdkVersion contains \"java\" and message startswith \"{\\\"az.sdk.message\"\r\n| project timestamp, azSdkContext=parse_json(message), runId, cloud_RoleInstance\r\n| evaluate bag_unpack(azSdkContext)\r\n| where [\"az.sdk.message\"] == \"starting test\"\r\n| project storageBlobPackageVersion, scenarioName, sync, concurrency, blobSize, runId, cloud_RoleInstance;\r\nruns \r\n| join kind = innerunique azSdkLogs on runId\r\n| order by start desc\r\n| project-away runId1, cloud_RoleInstance1\r\n| project runId, start, end, storageBlobPackageVersion, scenarioName, sync, concurrency, blobSize\r\n",
        "size": 0,
        "title": "Runs in {timeRange:label}",
        "noDataMessageStyle": 5,
        "queryType": 0,
        "resourceType": "microsoft.insights/components",
        "gridSettings": {
          "sortBy": [
            {
              "itemKey": "start",
              "sortOrder": 1
            }
          ]
        },
        "sortBy": [
          {
            "itemKey": "start",
            "sortOrder": 1
          }
        ]
      },
      "customWidth": "70",
      "name": "query - 8",
      "styleSettings": {
        "maxWidth": "100"
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "// rate\r\nlet runId = \"{runId}\";\r\nlet role_name=strcat(\"storage-\", runId);\r\ndependencies\r\n| where timestamp >= {timeRange:start} and timestamp <= {timeRange:end}\r\n| where cloud_RoleName == role_name and (name == \"run\" or name == \"runAsync\")\r\n| extend status =  case(isempty(customDimensions[\"error.type\"]), \"ok\", customDimensions[\"error.type\"])\r\n| summarize downloads=count() by bin(timestamp, 1m), status\r\n| render timechart",
        "size": 0,
        "title": "Download rate (per minute)",
        "noDataMessageStyle": 5,
        "queryType": 0,
        "resourceType": "microsoft.insights/components"
      },
      "customWidth": "50",
      "name": "query - 3",
      "styleSettings": {
        "maxWidth": "50",
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let runId = \"{runId}\";\r\nlet role_name=strcat(\"storage-\", runId);\r\ndependencies\r\n| where timestamp >= {timeRange:start} and timestamp <= {timeRange:end}\r\n| where cloud_RoleName == role_name and (name == \"run\" or name == \"runAsync\")\r\n| where isempty(customDimensions[\"error.type\"])\r\n| summarize duration_avg_ms=avg(duration) by bin(timestamp, 1m)\r\n| render timechart",
        "size": 0,
        "title": "Duration (ms), average per minute, successful only",
        "noDataMessageStyle": 5,
        "queryType": 0,
        "resourceType": "microsoft.insights/components"
      },
      "customWidth": "50",
      "name": "query - 5",
      "styleSettings": {
        "maxWidth": "50"
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let runId = \"{runId}\";\r\nlet role_name=strcat(\"storage-\", runId);\r\nlet downloads=dependencies \r\n| where timestamp >= {timeRange:start} and timestamp <= {timeRange:end}\r\n| where cloud_RoleName == role_name and (name == \"run\" or name == \"runAsync\")\r\n| project timestamp, duration, name, traceId=operation_Id, status=tostring(customDimensions[\"error.type\"]), success;\r\nlet faultInjections=traces \r\n| where cloud_RoleName == role_name\r\n| where message startswith \"{\\\"az.sdk.message\"\r\n| project timestamp, logger=customDimensions[\"LoggerName\"], level=customDimensions[\"LoggingLevel\"], thread=customDimensions[\"ThreadName\"], azSdkContext=parse_json(message)\r\n| extend fault = coalesce(azSdkContext[\"x-ms-faultinjector-response-option\"], \"none\")\r\n| extend traceId=tostring(split(azSdkContext[\"traceparent\"], \"-\")[1])\r\n| where azSdkContext[\"az.sdk.message\"] == \"HTTP response with fault injection\"\r\n| project fault, traceId;\r\ndownloads \r\n| join kind=leftouter faultInjections on traceId\r\n| where success == False\r\n| summarize faults = make_list(fault) by timestamp, status, duration, traceId\r\n",
        "size": 0,
        "title": "Failed operations",
        "noDataMessage": "No failed operations!",
        "queryType": 0,
        "resourceType": "microsoft.insights/components",
        "sortBy": []
      },
      "customWidth": "100",
      "name": "query - 9",
      "styleSettings": {
        "maxWidth": "100"
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let runId = \"{runId}\";\r\nlet role_name=strcat(\"storage-\", runId);\r\nlet metrics = customMetrics\r\n| where timestamp >= {timeRange:start} and timestamp <= {timeRange:end}\r\n| where cloud_RoleName == role_name\r\n| where sdkVersion contains \"java\";\r\nmetrics\r\n| where name == \"Heap Memory Used (MB)\"\r\n| summarize avg_memory = avg(value) by cloud_RoleInstance, bin(timestamp, 1m)\r\n| render areachart",
        "size": 0,
        "title": "Heap memory used (MB)",
        "queryType": 0,
        "resourceType": "microsoft.insights/components"
      },
      "customWidth": "50",
      "name": "query - 8",
      "styleSettings": {
        "maxWidth": "50"
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let runId = \"{runId}\";\r\nlet role_name=strcat(\"storage-\", runId);\r\nlet metrics = performanceCounters\r\n| where timestamp >= {timeRange:start} and timestamp <= {timeRange:end}\r\n| where cloud_RoleName == role_name\r\n| where sdkVersion contains \"java\";\r\nmetrics\r\n| where name == \"% Processor Time Normalized\"\r\n| summarize avg_cpu = avg(value) by cloud_RoleInstance, bin(timestamp, 1m)\r\n| render timechart",
        "size": 0,
        "title": "CPU %",
        "queryType": 0,
        "resourceType": "microsoft.insights/components"
      },
      "customWidth": "50",
      "name": "query - 9",
      "styleSettings": {
        "maxWidth": "50"
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let runId = \"{runId}\";\r\nlet role_name=strcat(\"storage-\", runId);\r\nlet downloads = dependencies\r\n| where timestamp >= {timeRange:start} and timestamp <= {timeRange:end}\r\n| where cloud_RoleName == role_name and (name == \"run\" or name == \"runAsync\")\r\n| where isnotempty(customDimensions[\"error.type\"])\r\n| summarize download_errors = count() by bin(timestamp, 1m), tostring(customDimensions[\"error.type\"]);\r\nlet logs = traces \r\n| union exceptions\r\n| where timestamp >= {timeRange:start} and timestamp <= {timeRange:end}\r\n| where cloud_RoleName == role_name and severityLevel > 1\r\n| summarize errors_in_logs = count() by bin(timestamp, 1m);\r\ndownloads \r\n| join kind = fullouter (logs) on timestamp\r\n| project timestamp = coalesce(timestamp, timestamp1), download_errors, errors_in_logs\r\n| render timechart\r\n",
        "size": 0,
        "title": "Errors by time",
        "queryType": 0,
        "resourceType": "microsoft.insights/components"
      },
      "customWidth": "40",
      "name": "query - 10",
      "styleSettings": {
        "maxWidth": "40"
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "traces \r\n| union exceptions\r\n| where timestamp >= {timeRange:start} and timestamp <= {timeRange:end}\r\n| where cloud_RoleName == \"storage-{runId}\" and severityLevel > 1\r\n| extend category = tostring(customDimensions[\"LoggerName\"]), message=substring(coalesce(message, outerMessage), 0, 48)\r\n| project timestamp, category, message, severity = case(severityLevel == 2, \"Warning\", severityLevel == 3, \"Error\", severityLevel == 1, \"Info\", \"\"), cloud_RoleName\r\n| summarize occurences = count() by severity, category, message, cloud_RoleName\r\n| order by occurences desc\r\n",
        "size": 0,
        "title": "Warnings and errors in logs",
        "queryType": 0,
        "resourceType": "microsoft.insights/components",
        "sortBy": []
      },
      "customWidth": "60",
      "name": "query - 6",
      "styleSettings": {
        "maxWidth": "60",
        "showBorder": true
      }
    }
  ],
  "fallbackResourceIds": [],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
