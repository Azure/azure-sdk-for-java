/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.dns.v2017_10_01.implementation;

import com.microsoft.azure.arm.resources.models.implementation.GroupableResourceCoreImpl;
import com.microsoft.azure.management.dns.v2017_10_01.Zone;
import rx.Observable;
import java.util.List;

class ZoneImpl extends GroupableResourceCoreImpl<Zone, ZoneInner, ZoneImpl, NetworkManager> implements Zone, Zone.Definition, Zone.Update {
    private String cifMatch;
    private String cifNoneMatch;
    private String uifMatch;
    private String uifNoneMatch;
    ZoneImpl(String name, ZoneInner inner, NetworkManager manager) {
        super(name, inner, manager);
    }

    @Override
    public Observable<Zone> createResourceAsync() {
        ZonesInner client = this.manager().inner().zones();
        return client.createOrUpdateAsync(this.resourceGroupName(), this.name(), this.inner(), this.cifMatch, this.cifNoneMatch)
            .map(innerToFluentMap(this));
    }

    @Override
    public Observable<Zone> updateResourceAsync() {
        ZonesInner client = this.manager().inner().zones();
        return client.createOrUpdateAsync(this.resourceGroupName(), this.name(), this.inner(), this.uifMatch, this.uifNoneMatch)
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<ZoneInner> getInnerAsync() {
        ZonesInner client = this.manager().inner().zones();
        return client.getByResourceGroupAsync(this.resourceGroupName(), this.name());
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }


    @Override
    public String etag() {
        return this.inner().etag();
    }

    @Override
    public Long maxNumberOfRecordSets() {
        return this.inner().maxNumberOfRecordSets();
    }

    @Override
    public List<String> nameServers() {
        return this.inner().nameServers();
    }

    @Override
    public Long numberOfRecordSets() {
        return this.inner().numberOfRecordSets();
    }

    @Override
    public ZoneImpl withIfMatch(String ifMatch) {
        if (isInCreateMode()) {
            this.cifMatch = ifMatch;
        } else {
            this.uifMatch = ifMatch;
        }
        return this;
    }

    @Override
    public ZoneImpl withIfNoneMatch(String ifNoneMatch) {
        if (isInCreateMode()) {
            this.cifNoneMatch = ifNoneMatch;
        } else {
            this.uifNoneMatch = ifNoneMatch;
        }
        return this;
    }

    @Override
    public ZoneImpl withEtag(String etag) {
        this.inner().withEtag(etag);
        return this;
    }

}
