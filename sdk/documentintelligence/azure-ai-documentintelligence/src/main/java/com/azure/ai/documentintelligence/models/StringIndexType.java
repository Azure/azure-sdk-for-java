// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.documentintelligence.models;

/**
 * Method used to compute string offset and length.
 */
public enum StringIndexType {
    /**
     * User-perceived display character, or grapheme cluster, as defined by Unicode
     * 8.0.0.
     */
    TEXT_ELEMENTS("textElements"),

    /**
     * Character unit represented by a single unicode code point. Used by Python 3.
     */
    UNICODE_CODE_POINT("unicodeCodePoint"),

    /**
     * Character unit represented by a 16-bit Unicode code unit. Used by JavaScript,
     * Java, and .NET.
     */
    UTF16CODE_UNIT("utf16CodeUnit");

    /**
     * The actual serialized value for a StringIndexType instance.
     */
    private final String value;

    StringIndexType(String value) {
        this.value = value;
    }

    /**
     * Parses a serialized value to a StringIndexType instance.
     * 
     * @param value the serialized value to parse.
     * @return the parsed StringIndexType object, or null if unable to parse.
     */
    public static StringIndexType fromString(String value) {
        if (value == null) {
            return null;
        }
        StringIndexType[] items = StringIndexType.values();
        for (StringIndexType item : items) {
            if (item.toString().equalsIgnoreCase(value)) {
                return item;
            }
        }
        return null;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String toString() {
        return this.value;
    }
}
