// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.documentintelligence.models;

/**
 * Document analysis features to enable.
 */
public enum DocumentAnalysisFeature {
    /**
     * Perform OCR at a higher resolution to handle documents with fine print.
     */
    OCR_HIGH_RESOLUTION("ocrHighResolution"),

    /**
     * Enable the detection of the text content language.
     */
    LANGUAGES("languages"),

    /**
     * Enable the detection of barcodes in the document.
     */
    BARCODES("barcodes"),

    /**
     * Enable the detection of mathematical expressions in the document.
     */
    FORMULAS("formulas"),

    /**
     * Enable the detection of general key value pairs (form fields) in the document.
     */
    KEY_VALUE_PAIRS("keyValuePairs"),

    /**
     * Enable the recognition of various font styles.
     */
    STYLE_FONT("styleFont"),

    /**
     * Enable the extraction of additional fields via the queryFields query parameter.
     */
    QUERY_FIELDS("queryFields");

    /**
     * The actual serialized value for a DocumentAnalysisFeature instance.
     */
    private final String value;

    DocumentAnalysisFeature(String value) {
        this.value = value;
    }

    /**
     * Parses a serialized value to a DocumentAnalysisFeature instance.
     * 
     * @param value the serialized value to parse.
     * @return the parsed DocumentAnalysisFeature object, or null if unable to parse.
     */
    public static DocumentAnalysisFeature fromString(String value) {
        if (value == null) {
            return null;
        }
        DocumentAnalysisFeature[] items = DocumentAnalysisFeature.values();
        for (DocumentAnalysisFeature item : items) {
            if (item.toString().equalsIgnoreCase(value)) {
                return item;
            }
        }
        return null;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String toString() {
        return this.value;
    }
}
