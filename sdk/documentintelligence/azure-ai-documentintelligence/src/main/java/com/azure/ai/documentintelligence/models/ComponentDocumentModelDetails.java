// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.documentintelligence.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * A component of a composed document model.
 */
@Immutable
public final class ComponentDocumentModelDetails implements JsonSerializable<ComponentDocumentModelDetails> {
    /*
     * Unique document model name.
     */
    @Generated
    private final String modelId;

    /**
     * Creates an instance of ComponentDocumentModelDetails class.
     * 
     * @param modelId the modelId value to set.
     */
    @Generated
    public ComponentDocumentModelDetails(String modelId) {
        this.modelId = modelId;
    }

    /**
     * Get the modelId property: Unique document model name.
     * 
     * @return the modelId value.
     */
    @Generated
    public String getModelId() {
        return this.modelId;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("modelId", this.modelId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ComponentDocumentModelDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ComponentDocumentModelDetails if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the ComponentDocumentModelDetails.
     */
    @Generated
    public static ComponentDocumentModelDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String modelId = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("modelId".equals(fieldName)) {
                    modelId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            return new ComponentDocumentModelDetails(modelId);
        });
    }
}
