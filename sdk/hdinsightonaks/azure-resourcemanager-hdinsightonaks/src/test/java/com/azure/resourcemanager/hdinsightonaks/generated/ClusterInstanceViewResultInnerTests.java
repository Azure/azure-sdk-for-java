// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsightonaks.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hdinsightonaks.fluent.models.ClusterInstanceViewResultInner;
import com.azure.resourcemanager.hdinsightonaks.models.ClusterInstanceViewPropertiesStatus;
import com.azure.resourcemanager.hdinsightonaks.models.ServiceStatus;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ClusterInstanceViewResultInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ClusterInstanceViewResultInner model =
            BinaryData
                .fromString(
                    "{\"name\":\"yuhhziu\",\"properties\":{\"status\":{\"ready\":\"efozbhdms\",\"reason\":\"mzqhoftrmaequi\",\"message\":\"xicslfao\"},\"serviceStatuses\":[{\"kind\":\"piyylhalnswhccsp\",\"ready\":\"kaivwit\",\"message\":\"cywuggwol\"}]}}")
                .toObject(ClusterInstanceViewResultInner.class);
        Assertions.assertEquals("yuhhziu", model.name());
        Assertions.assertEquals("efozbhdms", model.status().ready());
        Assertions.assertEquals("mzqhoftrmaequi", model.status().reason());
        Assertions.assertEquals("xicslfao", model.status().message());
        Assertions.assertEquals("piyylhalnswhccsp", model.serviceStatuses().get(0).kind());
        Assertions.assertEquals("kaivwit", model.serviceStatuses().get(0).ready());
        Assertions.assertEquals("cywuggwol", model.serviceStatuses().get(0).message());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ClusterInstanceViewResultInner model =
            new ClusterInstanceViewResultInner()
                .withName("yuhhziu")
                .withStatus(
                    new ClusterInstanceViewPropertiesStatus()
                        .withReady("efozbhdms")
                        .withReason("mzqhoftrmaequi")
                        .withMessage("xicslfao"))
                .withServiceStatuses(
                    Arrays
                        .asList(
                            new ServiceStatus()
                                .withKind("piyylhalnswhccsp")
                                .withReady("kaivwit")
                                .withMessage("cywuggwol")));
        model = BinaryData.fromObject(model).toObject(ClusterInstanceViewResultInner.class);
        Assertions.assertEquals("yuhhziu", model.name());
        Assertions.assertEquals("efozbhdms", model.status().ready());
        Assertions.assertEquals("mzqhoftrmaequi", model.status().reason());
        Assertions.assertEquals("xicslfao", model.status().message());
        Assertions.assertEquals("piyylhalnswhccsp", model.serviceStatuses().get(0).kind());
        Assertions.assertEquals("kaivwit", model.serviceStatuses().get(0).ready());
        Assertions.assertEquals("cywuggwol", model.serviceStatuses().get(0).message());
    }
}
