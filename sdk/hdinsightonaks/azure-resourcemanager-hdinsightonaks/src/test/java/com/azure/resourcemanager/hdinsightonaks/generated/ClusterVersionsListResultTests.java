// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsightonaks.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hdinsightonaks.fluent.models.ClusterVersionInner;
import com.azure.resourcemanager.hdinsightonaks.models.ClusterVersionsListResult;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ClusterVersionsListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ClusterVersionsListResult model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"clusterType\":\"yhko\",\"clusterVersion\":\"pg\",\"ossVersion\":\"dkow\",\"clusterPoolVersion\":\"bqpc\",\"isPreview\":false,\"components\":[{\"name\":\"csnjvcdwxlpqekft\",\"version\":\"htjsying\"},{\"name\":\"qatmtdhtmdvy\",\"version\":\"ikdgszywkbir\"},{\"name\":\"uzhlhkjoqrv\",\"version\":\"aatjinrvgoupmfi\"},{\"name\":\"fggjioolvr\",\"version\":\"kvtkkg\"}]},\"id\":\"lqwjygvjayvblm\",\"name\":\"vkzuhbxvvyhgso\",\"type\":\"byrqufeg\"},{\"properties\":{\"clusterType\":\"wz\",\"clusterVersion\":\"nhlmctlpdng\",\"ossVersion\":\"vgbmhr\",\"clusterPoolVersion\":\"kw\",\"isPreview\":true,\"components\":[{\"name\":\"veg\",\"version\":\"bpnaixexccbdre\"},{\"name\":\"hcexdrrvqa\",\"version\":\"kghtpwijnh\"},{\"name\":\"svfycxzbfv\",\"version\":\"wvrvmtg\"},{\"name\":\"ppyostronzmyhgf\",\"version\":\"nsxkmcwaekrrjr\"}]},\"id\":\"afxtsgum\",\"name\":\"jglikkxwslolb\",\"type\":\"pvuzlmv\"},{\"properties\":{\"clusterType\":\"fktgplc\",\"clusterVersion\":\"wjxeznoigbr\",\"ossVersion\":\"w\",\"clusterPoolVersion\":\"kpnb\",\"isPreview\":false,\"components\":[{\"name\":\"oqkag\",\"version\":\"sxtta\"},{\"name\":\"zxnfaaz\",\"version\":\"dtnkdmkq\"}]},\"id\":\"jlwuenvrkp\",\"name\":\"ou\",\"type\":\"ibreb\"}],\"nextLink\":\"aysjkixqtnqttez\"}")
                .toObject(ClusterVersionsListResult.class);
        Assertions.assertEquals("yhko", model.value().get(0).clusterType());
        Assertions.assertEquals("pg", model.value().get(0).clusterVersion());
        Assertions.assertEquals("dkow", model.value().get(0).ossVersion());
        Assertions.assertEquals("bqpc", model.value().get(0).clusterPoolVersion());
        Assertions.assertEquals(false, model.value().get(0).isPreview());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ClusterVersionsListResult model =
            new ClusterVersionsListResult()
                .withValue(
                    Arrays
                        .asList(
                            new ClusterVersionInner()
                                .withClusterType("yhko")
                                .withClusterVersion("pg")
                                .withOssVersion("dkow")
                                .withClusterPoolVersion("bqpc")
                                .withIsPreview(false),
                            new ClusterVersionInner()
                                .withClusterType("wz")
                                .withClusterVersion("nhlmctlpdng")
                                .withOssVersion("vgbmhr")
                                .withClusterPoolVersion("kw")
                                .withIsPreview(true),
                            new ClusterVersionInner()
                                .withClusterType("fktgplc")
                                .withClusterVersion("wjxeznoigbr")
                                .withOssVersion("w")
                                .withClusterPoolVersion("kpnb")
                                .withIsPreview(false)));
        model = BinaryData.fromObject(model).toObject(ClusterVersionsListResult.class);
        Assertions.assertEquals("yhko", model.value().get(0).clusterType());
        Assertions.assertEquals("pg", model.value().get(0).clusterVersion());
        Assertions.assertEquals("dkow", model.value().get(0).ossVersion());
        Assertions.assertEquals("bqpc", model.value().get(0).clusterPoolVersion());
        Assertions.assertEquals(false, model.value().get(0).isPreview());
    }
}
