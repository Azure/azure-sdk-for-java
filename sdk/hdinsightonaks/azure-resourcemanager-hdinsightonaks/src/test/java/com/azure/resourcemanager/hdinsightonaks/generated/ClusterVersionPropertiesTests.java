// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsightonaks.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hdinsightonaks.fluent.models.ClusterVersionProperties;
import org.junit.jupiter.api.Assertions;

public final class ClusterVersionPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ClusterVersionProperties model =
            BinaryData
                .fromString(
                    "{\"clusterType\":\"iithtywu\",\"clusterVersion\":\"cbihwqk\",\"ossVersion\":\"dntwjchrdgo\",\"clusterPoolVersion\":\"xum\",\"isPreview\":false,\"components\":[{\"name\":\"zj\",\"version\":\"udfdlwgg\"}]}")
                .toObject(ClusterVersionProperties.class);
        Assertions.assertEquals("iithtywu", model.clusterType());
        Assertions.assertEquals("cbihwqk", model.clusterVersion());
        Assertions.assertEquals("dntwjchrdgo", model.ossVersion());
        Assertions.assertEquals("xum", model.clusterPoolVersion());
        Assertions.assertEquals(false, model.isPreview());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ClusterVersionProperties model =
            new ClusterVersionProperties()
                .withClusterType("iithtywu")
                .withClusterVersion("cbihwqk")
                .withOssVersion("dntwjchrdgo")
                .withClusterPoolVersion("xum")
                .withIsPreview(false);
        model = BinaryData.fromObject(model).toObject(ClusterVersionProperties.class);
        Assertions.assertEquals("iithtywu", model.clusterType());
        Assertions.assertEquals("cbihwqk", model.clusterVersion());
        Assertions.assertEquals("dntwjchrdgo", model.ossVersion());
        Assertions.assertEquals("xum", model.clusterPoolVersion());
        Assertions.assertEquals(false, model.isPreview());
    }
}
