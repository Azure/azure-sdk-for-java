// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsightonaks.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hdinsightonaks.models.ScriptActionProfile;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ScriptActionProfileTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ScriptActionProfile model =
            BinaryData
                .fromString(
                    "{\"type\":\"eli\",\"name\":\"hnrztfol\",\"url\":\"bnxknalaulppg\",\"parameters\":\"tpnapnyiropuhpig\",\"services\":[\"gylgqgitxmedjvcs\",\"ynqwwncwzzhxgk\"],\"timeoutInMinutes\":1481822403,\"shouldPersist\":true}")
                .toObject(ScriptActionProfile.class);
        Assertions.assertEquals("eli", model.type());
        Assertions.assertEquals("hnrztfol", model.name());
        Assertions.assertEquals("bnxknalaulppg", model.url());
        Assertions.assertEquals("tpnapnyiropuhpig", model.parameters());
        Assertions.assertEquals("gylgqgitxmedjvcs", model.services().get(0));
        Assertions.assertEquals(1481822403, model.timeoutInMinutes());
        Assertions.assertEquals(true, model.shouldPersist());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ScriptActionProfile model =
            new ScriptActionProfile()
                .withType("eli")
                .withName("hnrztfol")
                .withUrl("bnxknalaulppg")
                .withParameters("tpnapnyiropuhpig")
                .withServices(Arrays.asList("gylgqgitxmedjvcs", "ynqwwncwzzhxgk"))
                .withTimeoutInMinutes(1481822403)
                .withShouldPersist(true);
        model = BinaryData.fromObject(model).toObject(ScriptActionProfile.class);
        Assertions.assertEquals("eli", model.type());
        Assertions.assertEquals("hnrztfol", model.name());
        Assertions.assertEquals("bnxknalaulppg", model.url());
        Assertions.assertEquals("tpnapnyiropuhpig", model.parameters());
        Assertions.assertEquals("gylgqgitxmedjvcs", model.services().get(0));
        Assertions.assertEquals(1481822403, model.timeoutInMinutes());
        Assertions.assertEquals(true, model.shouldPersist());
    }
}
