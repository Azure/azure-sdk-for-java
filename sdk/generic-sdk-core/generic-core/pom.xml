<!--
  ~ Copyright (c) Microsoft Corporation. All rights reserved.
  ~ Licensed under the MIT License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.azure</groupId>
    <artifactId>azure-client-sdk-parent</artifactId>
    <version>1.7.0</version> <!-- {x-version-update;com.azure:azure-client-sdk-parent;current} -->
    <relativePath>../parents/azure-client-sdk-parent/pom.xml</relativePath>
  </parent>

  <groupId>com.generic</groupId>
  <artifactId>generic-core</artifactId>
  <packaging>pom</packaging>
  <version>1.0.0</version> <!-- {x-version-update;com.generic:generic-core;current} -->

  <name>Java Core Library</name>
  <description>This package contains core types for Java clients.</description>
  <url>https://github.com/Azure/azure-sdk-for-java</url>

  <licenses>
    <license>
      <name>The MIT License (MIT)</name>
      <url>http://opensource.org/licenses/MIT</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <scm>
    <url>https://github.com/Azure/azure-sdk-for-java</url>
    <connection>scm:git:https://github.com/Azure/azure-sdk-for-java.git</connection>
    <developerConnection>scm:git:https://github.com/Azure/azure-sdk-for-java.git</developerConnection>
  </scm>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <javaModulesSurefireArgLine>
      --add-exports com.generic.core/com.generic.core.implementation.http=ALL-UNNAMED
      --add-exports com.generic.core/com.generic.core.implementation.http.rest=ALL-UNNAMED
      --add-exports com.generic.core/com.generic.core.implementation.serializer=ALL-UNNAMED

      --add-opens com.generic.core/com.generic.core=ALL-UNNAMED
      --add-opens com.generic.core/com.generic.core.credential=ALL-UNNAMED
      --add-opens com.generic.core/com.generic.core.http=ALL-UNNAMED
      --add-opens com.generic.core/com.generic.core.http.policy=ALL-UNNAMED
      --add-opens com.generic.core/com.generic.core.http.rest=ALL-UNNAMED
      --add-opens com.generic.core/com.generic.core.implementation=ALL-UNNAMED
      --add-opens com.generic.core/com.generic.core.implementation.http=ALL-UNNAMED
      --add-opens com.generic.core/com.generic.core.implementation.http.rest=ALL-UNNAMED
      --add-opens com.generic.core/com.generic.core.implementation.serializer=ALL-UNNAMED
      --add-opens com.generic.core/com.generic.core.implementation.logging=ALL-UNNAMED
      --add-opens com.generic.core/com.generic.core.util=ALL-UNNAMED
      --add-opens com.generic.core/com.generic.core.util.logging=ALL-UNNAMED
      --add-opens com.generic.core/com.generic.core.util.serializer=ALL-UNNAMED

      --add-reads com.generic.core=ALL-UNNAMED
    </javaModulesSurefireArgLine>

    <!-- Enables fail on deprecated API usage. -->
    <compiler.failondeprecatedstatus/>
    <javadoc.excludePackageNames>com.generic.json</javadoc.excludePackageNames>

  </properties>


  <dependencies>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.36</version> <!-- {x-version-update;org.slf4j:slf4j-api;external_dependency} -->
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- RestProxyTests is inherited by tests in azure-core-http-netty -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.2.2</version> <!-- {x-version-update;org.apache.maven.plugins:maven-jar-plugin;external_dependency} -->
        <executions>
          <execution>
            <id>test-jar</id>
            <phase>test-compile</phase>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.0.0-M3</version> <!-- {x-version-update;org.apache.maven.plugins:maven-enforcer-plugin;external_dependency} -->
        <configuration>
          <rules>
            <bannedDependencies>
              <includes>
                <include>org.slf4j:slf4j-api:[1.7.36]</include> <!-- {x-include-update;org.slf4j:slf4j-api;external_dependency} -->
              </includes>
            </bannedDependencies>
          </rules>
        </configuration>
      </plugin>

      <!-- This plugin scans reports spotbugs in the code -->
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>4.2.2</version> <!-- {x-version-update;com.github.spotbugs:spotbugs-maven-plugin;external_dependency} -->
        <configuration>
          <plugins>
            <plugin>
              <groupId>com.h3xstream.findsecbugs</groupId>
              <artifactId>findsecbugs-plugin</artifactId>
              <version>1.9.0</version> <!-- {x-version-update;com.h3xstream.findsecbugs:findsecbugs-plugin;external_dependency} -->
            </plugin>
          </plugins>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>9</source>
          <target>9</target>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>jmh-benchmark</id>
      <activation>
        <property>
          <name>jmh-benchmark</name>
        </property>
      </activation>

      <properties>
        <!-- JMH needs annotation processing on, so disable proc == none -->
        <compiler.proc></compiler.proc>
      </properties>

      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.10.1</version> <!-- {x-version-update;org.apache.maven.plugins:maven-compiler-plugin;external_dependency} -->
            <configuration>
              <!-- Add the JMH annotation processor to the classpath. -->
              <annotationProcessorPaths>
                <path>
                  <groupId>org.openjdk.jmh</groupId>
                  <artifactId>jmh-generator-annprocess</artifactId>
                  <version>1.36</version> <!-- {x-version-update;org.openjdk.jmh:jmh-generator-annprocess;external_dependency} -->
                </path>
              </annotationProcessorPaths>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
