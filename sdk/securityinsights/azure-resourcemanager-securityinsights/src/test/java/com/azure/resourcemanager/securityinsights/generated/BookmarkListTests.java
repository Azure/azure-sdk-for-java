// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.securityinsights.fluent.models.BookmarkInner;
import com.azure.resourcemanager.securityinsights.models.BookmarkList;
import com.azure.resourcemanager.securityinsights.models.IncidentInfo;
import com.azure.resourcemanager.securityinsights.models.IncidentSeverity;
import com.azure.resourcemanager.securityinsights.models.UserInfo;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;

public final class BookmarkListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BookmarkList model = BinaryData.fromString(
            "{\"nextLink\":\"zidnsezcxtbzsgfy\",\"value\":[{\"properties\":{\"created\":\"2021-04-28T14:26:37Z\",\"createdBy\":{\"email\":\"dwzjeiach\",\"name\":\"osfln\",\"objectId\":\"0296629a-3485-4e09-9e99-92d0788328ba\"},\"displayName\":\"sfqpteehz\",\"labels\":[\"pyqr\",\"mzinpvswjdk\",\"rsoodqxhcrmnoh\"],\"notes\":\"ckwhds\",\"query\":\"ifiyipjxsqwpgrj\",\"queryResult\":\"norcjxvsnbyxqab\",\"updated\":\"2021-01-31T04:10:32Z\",\"updatedBy\":{\"email\":\"cyshurzafbljjgp\",\"name\":\"oq\",\"objectId\":\"40d76acc-6403-4303-9e1c-377f943dd4e0\"},\"eventTime\":\"2021-08-23T17:30:32Z\",\"queryStartTime\":\"2021-06-12T13:13:31Z\",\"queryEndTime\":\"2021-09-28T22:54:32Z\",\"incidentInfo\":{\"incidentId\":\"idtqajzyu\",\"severity\":\"Low\",\"title\":\"dj\",\"relationName\":\"lkhbz\"}},\"etag\":\"epgzgqexz\",\"id\":\"c\",\"name\":\"scpai\",\"type\":\"rhhbcs\"}]}")
            .toObject(BookmarkList.class);
        Assertions.assertEquals("epgzgqexz", model.value().get(0).etag());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-28T14:26:37Z"), model.value().get(0).created());
        Assertions.assertEquals(UUID.fromString("0296629a-3485-4e09-9e99-92d0788328ba"),
            model.value().get(0).createdBy().objectId());
        Assertions.assertEquals("sfqpteehz", model.value().get(0).displayName());
        Assertions.assertEquals("pyqr", model.value().get(0).labels().get(0));
        Assertions.assertEquals("ckwhds", model.value().get(0).notes());
        Assertions.assertEquals("ifiyipjxsqwpgrj", model.value().get(0).query());
        Assertions.assertEquals("norcjxvsnbyxqab", model.value().get(0).queryResult());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-31T04:10:32Z"), model.value().get(0).updated());
        Assertions.assertEquals(UUID.fromString("40d76acc-6403-4303-9e1c-377f943dd4e0"),
            model.value().get(0).updatedBy().objectId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-23T17:30:32Z"), model.value().get(0).eventTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-12T13:13:31Z"), model.value().get(0).queryStartTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-28T22:54:32Z"), model.value().get(0).queryEndTime());
        Assertions.assertEquals("idtqajzyu", model.value().get(0).incidentInfo().incidentId());
        Assertions.assertEquals(IncidentSeverity.LOW, model.value().get(0).incidentInfo().severity());
        Assertions.assertEquals("dj", model.value().get(0).incidentInfo().title());
        Assertions.assertEquals("lkhbz", model.value().get(0).incidentInfo().relationName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BookmarkList model = new BookmarkList().withValue(Arrays.asList(new BookmarkInner().withEtag("epgzgqexz")
            .withCreated(OffsetDateTime.parse("2021-04-28T14:26:37Z"))
            .withCreatedBy(new UserInfo().withObjectId(UUID.fromString("0296629a-3485-4e09-9e99-92d0788328ba")))
            .withDisplayName("sfqpteehz")
            .withLabels(Arrays.asList("pyqr", "mzinpvswjdk", "rsoodqxhcrmnoh"))
            .withNotes("ckwhds")
            .withQuery("ifiyipjxsqwpgrj")
            .withQueryResult("norcjxvsnbyxqab")
            .withUpdated(OffsetDateTime.parse("2021-01-31T04:10:32Z"))
            .withUpdatedBy(new UserInfo().withObjectId(UUID.fromString("40d76acc-6403-4303-9e1c-377f943dd4e0")))
            .withEventTime(OffsetDateTime.parse("2021-08-23T17:30:32Z"))
            .withQueryStartTime(OffsetDateTime.parse("2021-06-12T13:13:31Z"))
            .withQueryEndTime(OffsetDateTime.parse("2021-09-28T22:54:32Z"))
            .withIncidentInfo(new IncidentInfo().withIncidentId("idtqajzyu")
                .withSeverity(IncidentSeverity.LOW)
                .withTitle("dj")
                .withRelationName("lkhbz"))));
        model = BinaryData.fromObject(model).toObject(BookmarkList.class);
        Assertions.assertEquals("epgzgqexz", model.value().get(0).etag());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-28T14:26:37Z"), model.value().get(0).created());
        Assertions.assertEquals(UUID.fromString("0296629a-3485-4e09-9e99-92d0788328ba"),
            model.value().get(0).createdBy().objectId());
        Assertions.assertEquals("sfqpteehz", model.value().get(0).displayName());
        Assertions.assertEquals("pyqr", model.value().get(0).labels().get(0));
        Assertions.assertEquals("ckwhds", model.value().get(0).notes());
        Assertions.assertEquals("ifiyipjxsqwpgrj", model.value().get(0).query());
        Assertions.assertEquals("norcjxvsnbyxqab", model.value().get(0).queryResult());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-31T04:10:32Z"), model.value().get(0).updated());
        Assertions.assertEquals(UUID.fromString("40d76acc-6403-4303-9e1c-377f943dd4e0"),
            model.value().get(0).updatedBy().objectId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-23T17:30:32Z"), model.value().get(0).eventTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-12T13:13:31Z"), model.value().get(0).queryStartTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-28T22:54:32Z"), model.value().get(0).queryEndTime());
        Assertions.assertEquals("idtqajzyu", model.value().get(0).incidentInfo().incidentId());
        Assertions.assertEquals(IncidentSeverity.LOW, model.value().get(0).incidentInfo().severity());
        Assertions.assertEquals("dj", model.value().get(0).incidentInfo().title());
        Assertions.assertEquals("lkhbz", model.value().get(0).incidentInfo().relationName());
    }
}
