// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.securityinsights.SecurityInsightsManager;
import com.azure.resourcemanager.securityinsights.models.IncidentComment;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class IncidentCommentsCreateOrUpdateWithResponseMockTests {
    @Test
    public void testCreateOrUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"createdTimeUtc\":\"2021-10-26T16:10:33Z\",\"lastModifiedTimeUtc\":\"2021-01-01T12:15:18Z\",\"message\":\"qkfrbzgowoxqmj\",\"author\":{\"email\":\"cxn\",\"name\":\"gxhlusr\",\"objectId\":\"2075d9be-78f7-465f-b998-fd1aebf9d9f2\",\"userPrincipalName\":\"simjceagbjqvlsu\"}},\"etag\":\"wzas\",\"id\":\"gon\",\"name\":\"yjfqipubyznc\",\"type\":\"k\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityInsightsManager manager = SecurityInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        IncidentComment response = manager.incidentComments()
            .define("bxbhmedeilbj")
            .withExistingIncident("cxetyvkunmignoh", "k", "gqogjwpindedva")
            .withEtag("jsllfryvd")
            .withMessage("zir")
            .create();

        Assertions.assertEquals("wzas", response.etag());
        Assertions.assertEquals("qkfrbzgowoxqmj", response.message());
    }
}
