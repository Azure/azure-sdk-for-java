// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.securityinsights.models.Kind;
import com.azure.resourcemanager.securityinsights.models.MetadataDependencies;
import com.azure.resourcemanager.securityinsights.models.Operator;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class MetadataDependenciesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MetadataDependencies model = BinaryData.fromString(
            "{\"contentId\":\"ejwabmdujtmvco\",\"kind\":\"DataType\",\"version\":\"m\",\"name\":\"rbuhhlky\",\"operator\":\"OR\",\"criteria\":[{\"contentId\":\"ogtu\",\"kind\":\"LogicAppsCustomConnector\",\"version\":\"djk\",\"name\":\"ysidfvclgl\",\"operator\":\"OR\",\"criteria\":[{\"contentId\":\"tkbu\",\"kind\":\"PlaybookTemplate\",\"version\":\"sfikayiansharuj\",\"name\":\"iqxf\",\"operator\":\"AND\",\"criteria\":[{},{}]}]},{\"contentId\":\"vwkpqh\",\"kind\":\"AnalyticsRuleTemplate\",\"version\":\"uygb\",\"name\":\"qqekewvnqvcdlgu\",\"operator\":\"OR\",\"criteria\":[{\"contentId\":\"jwnlax\",\"kind\":\"Watchlist\",\"version\":\"qikczvvita\",\"name\":\"xmfcsserxhtv\",\"operator\":\"AND\",\"criteria\":[{},{},{}]}]}]}")
            .toObject(MetadataDependencies.class);
        Assertions.assertEquals("ejwabmdujtmvco", model.contentId());
        Assertions.assertEquals(Kind.DATA_TYPE, model.kind());
        Assertions.assertEquals("m", model.version());
        Assertions.assertEquals("rbuhhlky", model.name());
        Assertions.assertEquals(Operator.OR, model.operator());
        Assertions.assertEquals("ogtu", model.criteria().get(0).contentId());
        Assertions.assertEquals(Kind.LOGIC_APPS_CUSTOM_CONNECTOR, model.criteria().get(0).kind());
        Assertions.assertEquals("djk", model.criteria().get(0).version());
        Assertions.assertEquals("ysidfvclgl", model.criteria().get(0).name());
        Assertions.assertEquals(Operator.OR, model.criteria().get(0).operator());
        Assertions.assertEquals("tkbu", model.criteria().get(0).criteria().get(0).contentId());
        Assertions.assertEquals(Kind.PLAYBOOK_TEMPLATE, model.criteria().get(0).criteria().get(0).kind());
        Assertions.assertEquals("sfikayiansharuj", model.criteria().get(0).criteria().get(0).version());
        Assertions.assertEquals("iqxf", model.criteria().get(0).criteria().get(0).name());
        Assertions.assertEquals(Operator.AND, model.criteria().get(0).criteria().get(0).operator());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MetadataDependencies model = new MetadataDependencies().withContentId("ejwabmdujtmvco")
            .withKind(Kind.DATA_TYPE)
            .withVersion("m")
            .withName("rbuhhlky")
            .withOperator(Operator.OR)
            .withCriteria(Arrays.asList(
                new MetadataDependencies().withContentId("ogtu")
                    .withKind(Kind.LOGIC_APPS_CUSTOM_CONNECTOR)
                    .withVersion("djk")
                    .withName("ysidfvclgl")
                    .withOperator(Operator.OR)
                    .withCriteria(Arrays.asList(new MetadataDependencies().withContentId("tkbu")
                        .withKind(Kind.PLAYBOOK_TEMPLATE)
                        .withVersion("sfikayiansharuj")
                        .withName("iqxf")
                        .withOperator(Operator.AND)
                        .withCriteria(Arrays.asList(new MetadataDependencies(), new MetadataDependencies())))),
                new MetadataDependencies().withContentId("vwkpqh")
                    .withKind(Kind.ANALYTICS_RULE_TEMPLATE)
                    .withVersion("uygb")
                    .withName("qqekewvnqvcdlgu")
                    .withOperator(Operator.OR)
                    .withCriteria(Arrays.asList(new MetadataDependencies().withContentId("jwnlax")
                        .withKind(Kind.WATCHLIST)
                        .withVersion("qikczvvita")
                        .withName("xmfcsserxhtv")
                        .withOperator(Operator.AND)
                        .withCriteria(Arrays.asList(new MetadataDependencies(), new MetadataDependencies(),
                            new MetadataDependencies()))))));
        model = BinaryData.fromObject(model).toObject(MetadataDependencies.class);
        Assertions.assertEquals("ejwabmdujtmvco", model.contentId());
        Assertions.assertEquals(Kind.DATA_TYPE, model.kind());
        Assertions.assertEquals("m", model.version());
        Assertions.assertEquals("rbuhhlky", model.name());
        Assertions.assertEquals(Operator.OR, model.operator());
        Assertions.assertEquals("ogtu", model.criteria().get(0).contentId());
        Assertions.assertEquals(Kind.LOGIC_APPS_CUSTOM_CONNECTOR, model.criteria().get(0).kind());
        Assertions.assertEquals("djk", model.criteria().get(0).version());
        Assertions.assertEquals("ysidfvclgl", model.criteria().get(0).name());
        Assertions.assertEquals(Operator.OR, model.criteria().get(0).operator());
        Assertions.assertEquals("tkbu", model.criteria().get(0).criteria().get(0).contentId());
        Assertions.assertEquals(Kind.PLAYBOOK_TEMPLATE, model.criteria().get(0).criteria().get(0).kind());
        Assertions.assertEquals("sfikayiansharuj", model.criteria().get(0).criteria().get(0).version());
        Assertions.assertEquals("iqxf", model.criteria().get(0).criteria().get(0).name());
        Assertions.assertEquals(Operator.AND, model.criteria().get(0).criteria().get(0).operator());
    }
}
