// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.securityinsights.models.HuntingBookmark;
import com.azure.resourcemanager.securityinsights.models.IncidentInfo;
import com.azure.resourcemanager.securityinsights.models.IncidentSeverity;
import com.azure.resourcemanager.securityinsights.models.UserInfo;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;

public final class HuntingBookmarkTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HuntingBookmark model = BinaryData.fromString(
            "{\"kind\":\"Bookmark\",\"properties\":{\"created\":\"2021-06-28T21:32:59Z\",\"createdBy\":{\"email\":\"xzbujrtrhqvwr\",\"name\":\"khgn\",\"objectId\":\"f4201bbc-a5b5-4648-9e74-42e6303e2331\"},\"displayName\":\"zonzlrpiqywnc\",\"eventTime\":\"2021-05-30T03:29:47Z\",\"labels\":[\"cof\"],\"notes\":\"e\",\"query\":\"tdhgbjkvrelj\",\"queryResult\":\"murvzm\",\"updated\":\"2021-05-28T09:11:12Z\",\"updatedBy\":{\"email\":\"nashcxlp\",\"name\":\"erbdk\",\"objectId\":\"5a86f080-db49-4d34-8708-0751dba8cbff\"},\"incidentInfo\":{\"incidentId\":\"di\",\"severity\":\"Low\",\"title\":\"db\",\"relationName\":\"xjmonf\"},\"additionalData\":{\"cypuuwwlt\":\"dataw\",\"tzenk\":\"datauqj\",\"zhmkdasvflyh\":\"dataif\"},\"friendlyName\":\"cu\"},\"id\":\"hxgsrboldfor\",\"name\":\"bwjl\",\"type\":\"izbfhfovvacq\"}")
            .toObject(HuntingBookmark.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-28T21:32:59Z"), model.created());
        Assertions.assertEquals(UUID.fromString("f4201bbc-a5b5-4648-9e74-42e6303e2331"), model.createdBy().objectId());
        Assertions.assertEquals("zonzlrpiqywnc", model.displayName());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-30T03:29:47Z"), model.eventTime());
        Assertions.assertEquals("cof", model.labels().get(0));
        Assertions.assertEquals("e", model.notes());
        Assertions.assertEquals("tdhgbjkvrelj", model.query());
        Assertions.assertEquals("murvzm", model.queryResult());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-28T09:11:12Z"), model.updated());
        Assertions.assertEquals(UUID.fromString("5a86f080-db49-4d34-8708-0751dba8cbff"), model.updatedBy().objectId());
        Assertions.assertEquals("di", model.incidentInfo().incidentId());
        Assertions.assertEquals(IncidentSeverity.LOW, model.incidentInfo().severity());
        Assertions.assertEquals("db", model.incidentInfo().title());
        Assertions.assertEquals("xjmonf", model.incidentInfo().relationName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HuntingBookmark model = new HuntingBookmark().withCreated(OffsetDateTime.parse("2021-06-28T21:32:59Z"))
            .withCreatedBy(new UserInfo().withObjectId(UUID.fromString("f4201bbc-a5b5-4648-9e74-42e6303e2331")))
            .withDisplayName("zonzlrpiqywnc")
            .withEventTime(OffsetDateTime.parse("2021-05-30T03:29:47Z"))
            .withLabels(Arrays.asList("cof"))
            .withNotes("e")
            .withQuery("tdhgbjkvrelj")
            .withQueryResult("murvzm")
            .withUpdated(OffsetDateTime.parse("2021-05-28T09:11:12Z"))
            .withUpdatedBy(new UserInfo().withObjectId(UUID.fromString("5a86f080-db49-4d34-8708-0751dba8cbff")))
            .withIncidentInfo(new IncidentInfo().withIncidentId("di")
                .withSeverity(IncidentSeverity.LOW)
                .withTitle("db")
                .withRelationName("xjmonf"));
        model = BinaryData.fromObject(model).toObject(HuntingBookmark.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-28T21:32:59Z"), model.created());
        Assertions.assertEquals(UUID.fromString("f4201bbc-a5b5-4648-9e74-42e6303e2331"), model.createdBy().objectId());
        Assertions.assertEquals("zonzlrpiqywnc", model.displayName());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-30T03:29:47Z"), model.eventTime());
        Assertions.assertEquals("cof", model.labels().get(0));
        Assertions.assertEquals("e", model.notes());
        Assertions.assertEquals("tdhgbjkvrelj", model.query());
        Assertions.assertEquals("murvzm", model.queryResult());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-28T09:11:12Z"), model.updated());
        Assertions.assertEquals(UUID.fromString("5a86f080-db49-4d34-8708-0751dba8cbff"), model.updatedBy().objectId());
        Assertions.assertEquals("di", model.incidentInfo().incidentId());
        Assertions.assertEquals(IncidentSeverity.LOW, model.incidentInfo().severity());
        Assertions.assertEquals("db", model.incidentInfo().title());
        Assertions.assertEquals("xjmonf", model.incidentInfo().relationName());
    }
}
