// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.securityinsights.SecurityInsightsManager;
import com.azure.resourcemanager.securityinsights.models.IncidentComment;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class IncidentCommentsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"createdTimeUtc\":\"2021-08-14T18:10:59Z\",\"lastModifiedTimeUtc\":\"2021-01-24T07:28:27Z\",\"message\":\"bgmlamoa\",\"author\":{\"email\":\"ytn\",\"name\":\"vbpbl\",\"objectId\":\"41085b51-1059-4263-9259-c46da0be63de\",\"userPrincipalName\":\"sexheeocnqoubvep\"}},\"etag\":\"ryszfhdxyfh\",\"id\":\"hzbzhhavz\",\"name\":\"uxnvkdslcof\",\"type\":\"vtf\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityInsightsManager manager = SecurityInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        IncidentComment response = manager.incidentComments()
            .getWithResponse("xmnctigpksywi", "k", "ktgkdprtqjytdc", "efuhb", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("ryszfhdxyfh", response.etag());
        Assertions.assertEquals("bgmlamoa", response.message());
    }
}
