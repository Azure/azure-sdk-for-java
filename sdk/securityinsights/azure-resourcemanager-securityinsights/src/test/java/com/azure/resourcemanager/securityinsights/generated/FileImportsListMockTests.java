// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.securityinsights.SecurityInsightsManager;
import com.azure.resourcemanager.securityinsights.models.FileFormat;
import com.azure.resourcemanager.securityinsights.models.FileImport;
import com.azure.resourcemanager.securityinsights.models.FileImportContentType;
import com.azure.resourcemanager.securityinsights.models.IngestionMode;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class FileImportsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"ingestionMode\":\"Unspecified\",\"contentType\":\"Unspecified\",\"createdTimeUTC\":\"2021-07-07T17:34:20Z\",\"errorFile\":{\"fileFormat\":\"JSON\",\"fileName\":\"eqbmxq\",\"fileSize\":1948291269,\"fileContentUri\":\"njqswshesgcsqos\",\"deleteStatus\":\"Deleted\"},\"errorsPreview\":[{\"recordIndex\":2089712260,\"errorMessages\":[\"pizpbm\"]},{\"recordIndex\":338583099,\"errorMessages\":[\"fyvsl\",\"zipplxg\",\"dumjtycildrzn\",\"axozqthkwxf\"]},{\"recordIndex\":1188651893,\"errorMessages\":[\"zy\",\"duyjnqzbr\",\"cakmfckviyjuca\"]},{\"recordIndex\":175480971,\"errorMessages\":[\"oitwhmucjiuh\",\"xy\",\"ehyklelyqdvpqfbx\"]}],\"importFile\":{\"fileFormat\":\"JSON\",\"fileName\":\"d\",\"fileSize\":1407726853,\"fileContentUri\":\"tx\",\"deleteStatus\":\"NotDeleted\"},\"ingestedRecordCount\":321256998,\"source\":\"oheywvfopky\",\"state\":\"WaitingForUpload\",\"totalRecordCount\":651423328,\"validRecordCount\":462181416,\"filesValidUntilTimeUTC\":\"2021-09-21T02:26:01Z\",\"importValidUntilTimeUTC\":\"2021-07-25T08:48:48Z\"},\"id\":\"sfwtwrsvev\",\"name\":\"neqswxhqhgkhtbzv\",\"type\":\"lqevvjncpmyhtxg\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityInsightsManager manager = SecurityInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<FileImport> response = manager.fileImports()
            .list("xup", "tzckjbcbkgnr", "rjschjxncqzah", "tvbgdobi", 776904492, "rzol",
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals(IngestionMode.UNSPECIFIED, response.iterator().next().ingestionMode());
        Assertions.assertEquals(FileImportContentType.UNSPECIFIED, response.iterator().next().contentType());
        Assertions.assertEquals(FileFormat.JSON, response.iterator().next().importFile().fileFormat());
        Assertions.assertEquals("d", response.iterator().next().importFile().fileName());
        Assertions.assertEquals(1407726853, response.iterator().next().importFile().fileSize());
        Assertions.assertEquals("oheywvfopky", response.iterator().next().source());
    }
}
