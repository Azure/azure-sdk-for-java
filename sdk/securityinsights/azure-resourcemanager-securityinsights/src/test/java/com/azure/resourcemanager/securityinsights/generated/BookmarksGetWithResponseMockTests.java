// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.securityinsights.SecurityInsightsManager;
import com.azure.resourcemanager.securityinsights.models.AttackTactic;
import com.azure.resourcemanager.securityinsights.models.Bookmark;
import com.azure.resourcemanager.securityinsights.models.IncidentSeverity;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class BookmarksGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"created\":\"2021-01-22T11:06:18Z\",\"createdBy\":{\"email\":\"pbqs\",\"name\":\"kpsbqsbbmitaftaz\",\"objectId\":\"422de859-1284-4503-bb9e-a888eec1dbd5\"},\"displayName\":\"xsvqlcqufyla\",\"labels\":[\"wbg\"],\"notes\":\"oyutehlk\",\"query\":\"rvtipquks\",\"queryResult\":\"kn\",\"updated\":\"2021-09-06T07:15:34Z\",\"updatedBy\":{\"email\":\"nswhpcek\",\"name\":\"vmfnnbbxn\",\"objectId\":\"0d17a895-6d0f-4a2f-80eb-a90957ee1625\"},\"eventTime\":\"2021-12-09T15:53:25Z\",\"queryStartTime\":\"2021-09-06T01:27:56Z\",\"queryEndTime\":\"2021-06-13T18:27:15Z\",\"incidentInfo\":{\"incidentId\":\"xtpwcvgi\",\"severity\":\"Informational\",\"title\":\"njzijaciwm\",\"relationName\":\"dtqdo\"},\"entityMappings\":[{\"entityType\":\"snfzyviiwsuanz\",\"fieldMappings\":[{},{},{},{}]},{\"entityType\":\"uifkzqqhb\",\"fieldMappings\":[{},{},{}]}],\"tactics\":[\"Exfiltration\"],\"techniques\":[\"f\",\"eoiipjpngvyvu\"]},\"etag\":\"kdlpsxntugfwim\",\"id\":\"ryclo\",\"name\":\"fmvswx\",\"type\":\"jeleifqhdxt\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityInsightsManager manager = SecurityInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Bookmark response = manager.bookmarks()
            .getWithResponse("meqmduvtvodqxxpq", "ml", "ibtblmcvrjazno", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("kdlpsxntugfwim", response.etag());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-22T11:06:18Z"), response.created());
        Assertions.assertEquals(UUID.fromString("422de859-1284-4503-bb9e-a888eec1dbd5"),
            response.createdBy().objectId());
        Assertions.assertEquals("xsvqlcqufyla", response.displayName());
        Assertions.assertEquals("wbg", response.labels().get(0));
        Assertions.assertEquals("oyutehlk", response.notes());
        Assertions.assertEquals("rvtipquks", response.query());
        Assertions.assertEquals("kn", response.queryResult());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-06T07:15:34Z"), response.updated());
        Assertions.assertEquals(UUID.fromString("0d17a895-6d0f-4a2f-80eb-a90957ee1625"),
            response.updatedBy().objectId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-12-09T15:53:25Z"), response.eventTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-06T01:27:56Z"), response.queryStartTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-13T18:27:15Z"), response.queryEndTime());
        Assertions.assertEquals("xtpwcvgi", response.incidentInfo().incidentId());
        Assertions.assertEquals(IncidentSeverity.INFORMATIONAL, response.incidentInfo().severity());
        Assertions.assertEquals("njzijaciwm", response.incidentInfo().title());
        Assertions.assertEquals("dtqdo", response.incidentInfo().relationName());
        Assertions.assertEquals("snfzyviiwsuanz", response.entityMappings().get(0).entityType());
        Assertions.assertEquals(AttackTactic.EXFILTRATION, response.tactics().get(0));
        Assertions.assertEquals("f", response.techniques().get(0));
    }
}
