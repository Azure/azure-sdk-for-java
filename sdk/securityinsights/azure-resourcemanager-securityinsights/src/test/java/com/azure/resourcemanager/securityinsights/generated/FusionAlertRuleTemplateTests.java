// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.securityinsights.models.AlertRuleTemplateDataSource;
import com.azure.resourcemanager.securityinsights.models.AlertSeverity;
import com.azure.resourcemanager.securityinsights.models.AttackTactic;
import com.azure.resourcemanager.securityinsights.models.FusionAlertRuleTemplate;
import com.azure.resourcemanager.securityinsights.models.FusionTemplateSourceSetting;
import com.azure.resourcemanager.securityinsights.models.FusionTemplateSourceSubType;
import com.azure.resourcemanager.securityinsights.models.FusionTemplateSubTypeSeverityFilter;
import com.azure.resourcemanager.securityinsights.models.TemplateStatus;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class FusionAlertRuleTemplateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FusionAlertRuleTemplate model = BinaryData.fromString(
            "{\"kind\":\"Fusion\",\"properties\":{\"alertRulesCreatedByTemplateCount\":1408166178,\"createdDateUTC\":\"2021-04-12T01:27:50Z\",\"lastUpdatedDateUTC\":\"2021-09-25T20:37:43Z\",\"description\":\"yjanepubdp\",\"displayName\":\"yqvgxia\",\"requiredDataConnectors\":[{\"connectorId\":\"vohkxdxuws\",\"dataTypes\":[\"m\",\"wnosbzlehgcvkbck\"]},{\"connectorId\":\"olg\",\"dataTypes\":[\"xpvelszerqzevxo\",\"eintxwaljglzobl\",\"waafrqulh\",\"zyqbhd\"]},{\"connectorId\":\"fjrqpjiyr\",\"dataTypes\":[\"rgaxwmzwdf\",\"bnrzorpdltbqctq\",\"fg\"]},{\"connectorId\":\"saetgzdgvpyig\",\"dataTypes\":[\"qilzdc\"]}],\"status\":\"NotAvailable\",\"severity\":\"Informational\",\"tactics\":[\"DefenseEvasion\",\"Execution\",\"CredentialAccess\"],\"techniques\":[\"aifpaurwwgil\",\"jqqacdmkx\",\"xdcvjwcy\"],\"sourceSettings\":[{\"sourceName\":\"keciqchxrtuicd\",\"sourceSubTypes\":[{\"sourceSubTypeName\":\"dfmmpzhzzwvy\",\"sourceSubTypeDisplayName\":\"gyngydgrpxncak\",\"severityFilter\":{\"isSupported\":false}},{\"sourceSubTypeName\":\"aondjrkclamgg\",\"sourceSubTypeDisplayName\":\"lmf\",\"severityFilter\":{\"isSupported\":false}},{\"sourceSubTypeName\":\"doqey\",\"sourceSubTypeDisplayName\":\"ltygxhqfgqkayej\",\"severityFilter\":{\"isSupported\":true}},{\"sourceSubTypeName\":\"tlgflwfgz\",\"sourceSubTypeDisplayName\":\"u\",\"severityFilter\":{\"isSupported\":false}}]},{\"sourceName\":\"jjceatlijjjr\",\"sourceSubTypes\":[{\"sourceSubTypeName\":\"mcaszknxkv\",\"sourceSubTypeDisplayName\":\"xetyvku\",\"severityFilter\":{\"isSupported\":true}}]},{\"sourceName\":\"ignohi\",\"sourceSubTypes\":[{\"sourceSubTypeName\":\"qo\",\"sourceSubTypeDisplayName\":\"wpin\",\"severityFilter\":{\"isSupported\":true}},{\"sourceSubTypeName\":\"dvabbxbhmedeilb\",\"sourceSubTypeDisplayName\":\"wfcfxzirzz\",\"severityFilter\":{\"isSupported\":false}},{\"sourceSubTypeName\":\"vwypusuvjsl\",\"sourceSubTypeDisplayName\":\"wci\",\"severityFilter\":{\"isSupported\":false}},{\"sourceSubTypeName\":\"jsllfryvd\",\"sourceSubTypeDisplayName\":\"x\",\"severityFilter\":{\"isSupported\":true}}]}]},\"id\":\"acfrgna\",\"name\":\"bab\",\"type\":\"fbktyjmfczlf\"}")
            .toObject(FusionAlertRuleTemplate.class);
        Assertions.assertEquals(1408166178, model.alertRulesCreatedByTemplateCount());
        Assertions.assertEquals("yjanepubdp", model.description());
        Assertions.assertEquals("yqvgxia", model.displayName());
        Assertions.assertEquals("vohkxdxuws", model.requiredDataConnectors().get(0).connectorId());
        Assertions.assertEquals("m", model.requiredDataConnectors().get(0).dataTypes().get(0));
        Assertions.assertEquals(TemplateStatus.NOT_AVAILABLE, model.status());
        Assertions.assertEquals(AlertSeverity.INFORMATIONAL, model.severity());
        Assertions.assertEquals(AttackTactic.DEFENSE_EVASION, model.tactics().get(0));
        Assertions.assertEquals("aifpaurwwgil", model.techniques().get(0));
        Assertions.assertEquals("keciqchxrtuicd", model.sourceSettings().get(0).sourceName());
        Assertions.assertEquals("dfmmpzhzzwvy",
            model.sourceSettings().get(0).sourceSubTypes().get(0).sourceSubTypeName());
        Assertions.assertEquals(false,
            model.sourceSettings().get(0).sourceSubTypes().get(0).severityFilter().isSupported());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FusionAlertRuleTemplate model
            = new FusionAlertRuleTemplate().withAlertRulesCreatedByTemplateCount(1408166178)
                .withDescription("yjanepubdp")
                .withDisplayName("yqvgxia")
                .withRequiredDataConnectors(Arrays.asList(
                    new AlertRuleTemplateDataSource().withConnectorId("vohkxdxuws")
                        .withDataTypes(Arrays.asList("m", "wnosbzlehgcvkbck")),
                    new AlertRuleTemplateDataSource().withConnectorId("olg")
                        .withDataTypes(Arrays.asList("xpvelszerqzevxo", "eintxwaljglzobl", "waafrqulh", "zyqbhd")),
                    new AlertRuleTemplateDataSource().withConnectorId("fjrqpjiyr")
                        .withDataTypes(Arrays.asList("rgaxwmzwdf", "bnrzorpdltbqctq", "fg")),
                    new AlertRuleTemplateDataSource().withConnectorId("saetgzdgvpyig")
                        .withDataTypes(Arrays.asList("qilzdc"))))
                .withStatus(TemplateStatus.NOT_AVAILABLE)
                .withSeverity(AlertSeverity.INFORMATIONAL)
                .withTactics(
                    Arrays.asList(AttackTactic.DEFENSE_EVASION, AttackTactic.EXECUTION, AttackTactic.CREDENTIAL_ACCESS))
                .withTechniques(Arrays.asList("aifpaurwwgil", "jqqacdmkx", "xdcvjwcy"))
                .withSourceSettings(Arrays.asList(
                    new FusionTemplateSourceSetting().withSourceName("keciqchxrtuicd")
                        .withSourceSubTypes(Arrays.asList(
                            new FusionTemplateSourceSubType().withSourceSubTypeName("dfmmpzhzzwvy")
                                .withSeverityFilter(new FusionTemplateSubTypeSeverityFilter().withIsSupported(false)),
                            new FusionTemplateSourceSubType().withSourceSubTypeName("aondjrkclamgg")
                                .withSeverityFilter(new FusionTemplateSubTypeSeverityFilter().withIsSupported(false)),
                            new FusionTemplateSourceSubType().withSourceSubTypeName("doqey")
                                .withSeverityFilter(new FusionTemplateSubTypeSeverityFilter().withIsSupported(true)),
                            new FusionTemplateSourceSubType().withSourceSubTypeName("tlgflwfgz")
                                .withSeverityFilter(new FusionTemplateSubTypeSeverityFilter().withIsSupported(false)))),
                    new FusionTemplateSourceSetting().withSourceName("jjceatlijjjr")
                        .withSourceSubTypes(Arrays
                            .asList(new FusionTemplateSourceSubType().withSourceSubTypeName("mcaszknxkv")
                                .withSeverityFilter(new FusionTemplateSubTypeSeverityFilter().withIsSupported(true)))),
                    new FusionTemplateSourceSetting().withSourceName("ignohi")
                        .withSourceSubTypes(Arrays.asList(
                            new FusionTemplateSourceSubType().withSourceSubTypeName("qo")
                                .withSeverityFilter(new FusionTemplateSubTypeSeverityFilter().withIsSupported(true)),
                            new FusionTemplateSourceSubType().withSourceSubTypeName("dvabbxbhmedeilb")
                                .withSeverityFilter(new FusionTemplateSubTypeSeverityFilter().withIsSupported(false)),
                            new FusionTemplateSourceSubType().withSourceSubTypeName("vwypusuvjsl")
                                .withSeverityFilter(new FusionTemplateSubTypeSeverityFilter().withIsSupported(false)),
                            new FusionTemplateSourceSubType().withSourceSubTypeName("jsllfryvd")
                                .withSeverityFilter(
                                    new FusionTemplateSubTypeSeverityFilter().withIsSupported(true))))));
        model = BinaryData.fromObject(model).toObject(FusionAlertRuleTemplate.class);
        Assertions.assertEquals(1408166178, model.alertRulesCreatedByTemplateCount());
        Assertions.assertEquals("yjanepubdp", model.description());
        Assertions.assertEquals("yqvgxia", model.displayName());
        Assertions.assertEquals("vohkxdxuws", model.requiredDataConnectors().get(0).connectorId());
        Assertions.assertEquals("m", model.requiredDataConnectors().get(0).dataTypes().get(0));
        Assertions.assertEquals(TemplateStatus.NOT_AVAILABLE, model.status());
        Assertions.assertEquals(AlertSeverity.INFORMATIONAL, model.severity());
        Assertions.assertEquals(AttackTactic.DEFENSE_EVASION, model.tactics().get(0));
        Assertions.assertEquals("aifpaurwwgil", model.techniques().get(0));
        Assertions.assertEquals("keciqchxrtuicd", model.sourceSettings().get(0).sourceName());
        Assertions.assertEquals("dfmmpzhzzwvy",
            model.sourceSettings().get(0).sourceSubTypes().get(0).sourceSubTypeName());
        Assertions.assertEquals(false,
            model.sourceSettings().get(0).sourceSubTypes().get(0).severityFilter().isSupported());
    }
}
