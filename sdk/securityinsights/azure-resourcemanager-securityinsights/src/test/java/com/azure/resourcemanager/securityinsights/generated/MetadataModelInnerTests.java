// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.securityinsights.fluent.models.MetadataModelInner;
import com.azure.resourcemanager.securityinsights.models.Kind;
import com.azure.resourcemanager.securityinsights.models.MetadataAuthor;
import com.azure.resourcemanager.securityinsights.models.MetadataCategories;
import com.azure.resourcemanager.securityinsights.models.MetadataDependencies;
import com.azure.resourcemanager.securityinsights.models.MetadataSource;
import com.azure.resourcemanager.securityinsights.models.MetadataSupport;
import com.azure.resourcemanager.securityinsights.models.Operator;
import com.azure.resourcemanager.securityinsights.models.SourceKind;
import com.azure.resourcemanager.securityinsights.models.SupportTier;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class MetadataModelInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MetadataModelInner model = BinaryData.fromString(
            "{\"properties\":{\"contentId\":\"mwmxqhndvnoamld\",\"parentId\":\"ehaohdjhh\",\"version\":\"z\",\"kind\":\"AnalyticsRuleTemplate\",\"source\":{\"kind\":\"Solution\",\"name\":\"xpelnjetagltsx\",\"sourceId\":\"tft\"},\"author\":{\"name\":\"npbs\",\"email\":\"e\",\"link\":\"occsr\"},\"support\":{\"tier\":\"Microsoft\",\"name\":\"hmipgawtxxpkyjc\",\"email\":\"jxgrytfmp\",\"link\":\"cil\"},\"dependencies\":{\"contentId\":\"aykggnoxu\",\"kind\":\"Workbook\",\"version\":\"sxwpndfcpfnznthj\",\"name\":\"kjaosrxuzv\",\"operator\":\"OR\",\"criteria\":[{\"contentId\":\"q\",\"kind\":\"LogicAppsCustomConnector\",\"version\":\"gbzahgxqdlyr\",\"name\":\"tlaprltzkatb\",\"operator\":\"OR\",\"criteria\":[{},{},{}]},{\"contentId\":\"bsoqeqala\",\"kind\":\"Parser\",\"version\":\"gunbtgfebwlnbm\",\"name\":\"reeudzqavb\",\"operator\":\"OR\",\"criteria\":[{},{},{},{}]}]},\"categories\":{\"domains\":[\"yzglgo\",\"wtlmjjyuo\",\"qtobaxkjeyt\",\"nlb\"],\"verticals\":[\"wrus\"]},\"providers\":[\"bhsy\",\"qunjqh\"],\"customVersion\":\"aulk\",\"contentSchemaVersion\":\"kdk\",\"icon\":\"mjnnawtq\",\"threatAnalysisTactics\":[\"xuckpggqoweyir\",\"hlisngw\",\"lqqmpiz\"],\"threatAnalysisTechniques\":[\"n\"],\"previewImages\":[\"pxiwf\",\"ngjsaasi\",\"xtmkzjvkviir\"],\"previewImagesDark\":[\"grwsdp\",\"ra\",\"zvzbglbyv\",\"ctctbrxkjz\"]},\"etag\":\"gxffmshkwf\",\"id\":\"gozxw\",\"name\":\"pdbydpizqacln\",\"type\":\"pxbiygnugjknfs\"}")
            .toObject(MetadataModelInner.class);
        Assertions.assertEquals("gxffmshkwf", model.etag());
        Assertions.assertEquals("mwmxqhndvnoamld", model.contentId());
        Assertions.assertEquals("ehaohdjhh", model.parentId());
        Assertions.assertEquals("z", model.version());
        Assertions.assertEquals(Kind.ANALYTICS_RULE_TEMPLATE, model.kind());
        Assertions.assertEquals(SourceKind.SOLUTION, model.source().kind());
        Assertions.assertEquals("xpelnjetagltsx", model.source().name());
        Assertions.assertEquals("tft", model.source().sourceId());
        Assertions.assertEquals("npbs", model.author().name());
        Assertions.assertEquals("e", model.author().email());
        Assertions.assertEquals("occsr", model.author().link());
        Assertions.assertEquals(SupportTier.MICROSOFT, model.support().tier());
        Assertions.assertEquals("hmipgawtxxpkyjc", model.support().name());
        Assertions.assertEquals("jxgrytfmp", model.support().email());
        Assertions.assertEquals("cil", model.support().link());
        Assertions.assertEquals("aykggnoxu", model.dependencies().contentId());
        Assertions.assertEquals(Kind.WORKBOOK, model.dependencies().kind());
        Assertions.assertEquals("sxwpndfcpfnznthj", model.dependencies().version());
        Assertions.assertEquals("kjaosrxuzv", model.dependencies().name());
        Assertions.assertEquals(Operator.OR, model.dependencies().operator());
        Assertions.assertEquals("q", model.dependencies().criteria().get(0).contentId());
        Assertions.assertEquals(Kind.LOGIC_APPS_CUSTOM_CONNECTOR, model.dependencies().criteria().get(0).kind());
        Assertions.assertEquals("gbzahgxqdlyr", model.dependencies().criteria().get(0).version());
        Assertions.assertEquals("tlaprltzkatb", model.dependencies().criteria().get(0).name());
        Assertions.assertEquals(Operator.OR, model.dependencies().criteria().get(0).operator());
        Assertions.assertEquals("yzglgo", model.categories().domains().get(0));
        Assertions.assertEquals("wrus", model.categories().verticals().get(0));
        Assertions.assertEquals("bhsy", model.providers().get(0));
        Assertions.assertEquals("aulk", model.customVersion());
        Assertions.assertEquals("kdk", model.contentSchemaVersion());
        Assertions.assertEquals("mjnnawtq", model.icon());
        Assertions.assertEquals("xuckpggqoweyir", model.threatAnalysisTactics().get(0));
        Assertions.assertEquals("n", model.threatAnalysisTechniques().get(0));
        Assertions.assertEquals("pxiwf", model.previewImages().get(0));
        Assertions.assertEquals("grwsdp", model.previewImagesDark().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MetadataModelInner model = new MetadataModelInner().withEtag("gxffmshkwf")
            .withContentId("mwmxqhndvnoamld")
            .withParentId("ehaohdjhh")
            .withVersion("z")
            .withKind(Kind.ANALYTICS_RULE_TEMPLATE)
            .withSource(
                new MetadataSource().withKind(SourceKind.SOLUTION).withName("xpelnjetagltsx").withSourceId("tft"))
            .withAuthor(new MetadataAuthor().withName("npbs").withEmail("e").withLink("occsr"))
            .withSupport(new MetadataSupport().withTier(SupportTier.MICROSOFT)
                .withName("hmipgawtxxpkyjc")
                .withEmail("jxgrytfmp")
                .withLink("cil"))
            .withDependencies(new MetadataDependencies().withContentId("aykggnoxu")
                .withKind(Kind.WORKBOOK)
                .withVersion("sxwpndfcpfnznthj")
                .withName("kjaosrxuzv")
                .withOperator(Operator.OR)
                .withCriteria(Arrays.asList(
                    new MetadataDependencies().withContentId("q")
                        .withKind(Kind.LOGIC_APPS_CUSTOM_CONNECTOR)
                        .withVersion("gbzahgxqdlyr")
                        .withName("tlaprltzkatb")
                        .withOperator(Operator.OR)
                        .withCriteria(Arrays.asList(new MetadataDependencies(), new MetadataDependencies(),
                            new MetadataDependencies())),
                    new MetadataDependencies().withContentId("bsoqeqala")
                        .withKind(Kind.PARSER)
                        .withVersion("gunbtgfebwlnbm")
                        .withName("reeudzqavb")
                        .withOperator(Operator.OR)
                        .withCriteria(Arrays.asList(new MetadataDependencies(), new MetadataDependencies(),
                            new MetadataDependencies(), new MetadataDependencies())))))
            .withCategories(
                new MetadataCategories().withDomains(Arrays.asList("yzglgo", "wtlmjjyuo", "qtobaxkjeyt", "nlb"))
                    .withVerticals(Arrays.asList("wrus")))
            .withProviders(Arrays.asList("bhsy", "qunjqh"))
            .withCustomVersion("aulk")
            .withContentSchemaVersion("kdk")
            .withIcon("mjnnawtq")
            .withThreatAnalysisTactics(Arrays.asList("xuckpggqoweyir", "hlisngw", "lqqmpiz"))
            .withThreatAnalysisTechniques(Arrays.asList("n"))
            .withPreviewImages(Arrays.asList("pxiwf", "ngjsaasi", "xtmkzjvkviir"))
            .withPreviewImagesDark(Arrays.asList("grwsdp", "ra", "zvzbglbyv", "ctctbrxkjz"));
        model = BinaryData.fromObject(model).toObject(MetadataModelInner.class);
        Assertions.assertEquals("gxffmshkwf", model.etag());
        Assertions.assertEquals("mwmxqhndvnoamld", model.contentId());
        Assertions.assertEquals("ehaohdjhh", model.parentId());
        Assertions.assertEquals("z", model.version());
        Assertions.assertEquals(Kind.ANALYTICS_RULE_TEMPLATE, model.kind());
        Assertions.assertEquals(SourceKind.SOLUTION, model.source().kind());
        Assertions.assertEquals("xpelnjetagltsx", model.source().name());
        Assertions.assertEquals("tft", model.source().sourceId());
        Assertions.assertEquals("npbs", model.author().name());
        Assertions.assertEquals("e", model.author().email());
        Assertions.assertEquals("occsr", model.author().link());
        Assertions.assertEquals(SupportTier.MICROSOFT, model.support().tier());
        Assertions.assertEquals("hmipgawtxxpkyjc", model.support().name());
        Assertions.assertEquals("jxgrytfmp", model.support().email());
        Assertions.assertEquals("cil", model.support().link());
        Assertions.assertEquals("aykggnoxu", model.dependencies().contentId());
        Assertions.assertEquals(Kind.WORKBOOK, model.dependencies().kind());
        Assertions.assertEquals("sxwpndfcpfnznthj", model.dependencies().version());
        Assertions.assertEquals("kjaosrxuzv", model.dependencies().name());
        Assertions.assertEquals(Operator.OR, model.dependencies().operator());
        Assertions.assertEquals("q", model.dependencies().criteria().get(0).contentId());
        Assertions.assertEquals(Kind.LOGIC_APPS_CUSTOM_CONNECTOR, model.dependencies().criteria().get(0).kind());
        Assertions.assertEquals("gbzahgxqdlyr", model.dependencies().criteria().get(0).version());
        Assertions.assertEquals("tlaprltzkatb", model.dependencies().criteria().get(0).name());
        Assertions.assertEquals(Operator.OR, model.dependencies().criteria().get(0).operator());
        Assertions.assertEquals("yzglgo", model.categories().domains().get(0));
        Assertions.assertEquals("wrus", model.categories().verticals().get(0));
        Assertions.assertEquals("bhsy", model.providers().get(0));
        Assertions.assertEquals("aulk", model.customVersion());
        Assertions.assertEquals("kdk", model.contentSchemaVersion());
        Assertions.assertEquals("mjnnawtq", model.icon());
        Assertions.assertEquals("xuckpggqoweyir", model.threatAnalysisTactics().get(0));
        Assertions.assertEquals("n", model.threatAnalysisTechniques().get(0));
        Assertions.assertEquals("pxiwf", model.previewImages().get(0));
        Assertions.assertEquals("grwsdp", model.previewImagesDark().get(0));
    }
}
