// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.securityinsights.models.AutomationRuleModifyPropertiesAction;
import com.azure.resourcemanager.securityinsights.models.IncidentClassification;
import com.azure.resourcemanager.securityinsights.models.IncidentClassificationReason;
import com.azure.resourcemanager.securityinsights.models.IncidentLabel;
import com.azure.resourcemanager.securityinsights.models.IncidentOwnerInfo;
import com.azure.resourcemanager.securityinsights.models.IncidentPropertiesAction;
import com.azure.resourcemanager.securityinsights.models.IncidentSeverity;
import com.azure.resourcemanager.securityinsights.models.IncidentStatus;
import com.azure.resourcemanager.securityinsights.models.OwnerType;
import java.util.Arrays;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;

public final class AutomationRuleModifyPropertiesActionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AutomationRuleModifyPropertiesAction model = BinaryData.fromString(
            "{\"actionType\":\"ModifyProperties\",\"actionConfiguration\":{\"severity\":\"High\",\"status\":\"Active\",\"classification\":\"BenignPositive\",\"classificationReason\":\"IncorrectAlertLogic\",\"classificationComment\":\"lduwzorxsb\",\"owner\":{\"email\":\"qk\",\"assignedTo\":\"ymxkqvfqepdx\",\"objectId\":\"1b2377c8-a1b0-4eec-8628-a52df32cb7a2\",\"userPrincipalName\":\"uubwyvpjb\",\"ownerType\":\"Group\"},\"labels\":[{\"labelName\":\"qduqgixexkydf\",\"labelType\":\"User\"},{\"labelName\":\"javh\",\"labelType\":\"User\"},{\"labelName\":\"k\",\"labelType\":\"AutoAssigned\"}]},\"order\":547560371}")
            .toObject(AutomationRuleModifyPropertiesAction.class);
        Assertions.assertEquals(547560371, model.order());
        Assertions.assertEquals(IncidentSeverity.HIGH, model.actionConfiguration().severity());
        Assertions.assertEquals(IncidentStatus.ACTIVE, model.actionConfiguration().status());
        Assertions.assertEquals(IncidentClassification.BENIGN_POSITIVE, model.actionConfiguration().classification());
        Assertions.assertEquals(IncidentClassificationReason.INCORRECT_ALERT_LOGIC,
            model.actionConfiguration().classificationReason());
        Assertions.assertEquals("lduwzorxsb", model.actionConfiguration().classificationComment());
        Assertions.assertEquals("qk", model.actionConfiguration().owner().email());
        Assertions.assertEquals("ymxkqvfqepdx", model.actionConfiguration().owner().assignedTo());
        Assertions.assertEquals(UUID.fromString("1b2377c8-a1b0-4eec-8628-a52df32cb7a2"),
            model.actionConfiguration().owner().objectId());
        Assertions.assertEquals("uubwyvpjb", model.actionConfiguration().owner().userPrincipalName());
        Assertions.assertEquals(OwnerType.GROUP, model.actionConfiguration().owner().ownerType());
        Assertions.assertEquals("qduqgixexkydf", model.actionConfiguration().labels().get(0).labelName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AutomationRuleModifyPropertiesAction model = new AutomationRuleModifyPropertiesAction().withOrder(547560371)
            .withActionConfiguration(new IncidentPropertiesAction().withSeverity(IncidentSeverity.HIGH)
                .withStatus(IncidentStatus.ACTIVE)
                .withClassification(IncidentClassification.BENIGN_POSITIVE)
                .withClassificationReason(IncidentClassificationReason.INCORRECT_ALERT_LOGIC)
                .withClassificationComment("lduwzorxsb")
                .withOwner(new IncidentOwnerInfo().withEmail("qk")
                    .withAssignedTo("ymxkqvfqepdx")
                    .withObjectId(UUID.fromString("1b2377c8-a1b0-4eec-8628-a52df32cb7a2"))
                    .withUserPrincipalName("uubwyvpjb")
                    .withOwnerType(OwnerType.GROUP))
                .withLabels(Arrays.asList(new IncidentLabel().withLabelName("qduqgixexkydf"),
                    new IncidentLabel().withLabelName("javh"), new IncidentLabel().withLabelName("k"))));
        model = BinaryData.fromObject(model).toObject(AutomationRuleModifyPropertiesAction.class);
        Assertions.assertEquals(547560371, model.order());
        Assertions.assertEquals(IncidentSeverity.HIGH, model.actionConfiguration().severity());
        Assertions.assertEquals(IncidentStatus.ACTIVE, model.actionConfiguration().status());
        Assertions.assertEquals(IncidentClassification.BENIGN_POSITIVE, model.actionConfiguration().classification());
        Assertions.assertEquals(IncidentClassificationReason.INCORRECT_ALERT_LOGIC,
            model.actionConfiguration().classificationReason());
        Assertions.assertEquals("lduwzorxsb", model.actionConfiguration().classificationComment());
        Assertions.assertEquals("qk", model.actionConfiguration().owner().email());
        Assertions.assertEquals("ymxkqvfqepdx", model.actionConfiguration().owner().assignedTo());
        Assertions.assertEquals(UUID.fromString("1b2377c8-a1b0-4eec-8628-a52df32cb7a2"),
            model.actionConfiguration().owner().objectId());
        Assertions.assertEquals("uubwyvpjb", model.actionConfiguration().owner().userPrincipalName());
        Assertions.assertEquals(OwnerType.GROUP, model.actionConfiguration().owner().ownerType());
        Assertions.assertEquals("qduqgixexkydf", model.actionConfiguration().labels().get(0).labelName());
    }
}
