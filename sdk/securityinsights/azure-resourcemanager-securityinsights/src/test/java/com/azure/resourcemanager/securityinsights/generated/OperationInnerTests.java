// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.securityinsights.fluent.models.OperationInner;
import com.azure.resourcemanager.securityinsights.models.OperationDisplay;
import org.junit.jupiter.api.Assertions;

public final class OperationInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationInner model = BinaryData.fromString(
            "{\"display\":{\"description\":\"a\",\"operation\":\"nyuffat\",\"provider\":\"ftipwcxbyubhiq\",\"resource\":\"yurnpnuhzafc\"},\"name\":\"uhiigbyl\",\"origin\":\"igvxvatvcrk\",\"isDataAction\":false}")
            .toObject(OperationInner.class);
        Assertions.assertEquals("a", model.display().description());
        Assertions.assertEquals("nyuffat", model.display().operation());
        Assertions.assertEquals("ftipwcxbyubhiq", model.display().provider());
        Assertions.assertEquals("yurnpnuhzafc", model.display().resource());
        Assertions.assertEquals("uhiigbyl", model.name());
        Assertions.assertEquals("igvxvatvcrk", model.origin());
        Assertions.assertEquals(false, model.isDataAction());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationInner model
            = new OperationInner()
                .withDisplay(new OperationDisplay().withDescription("a")
                    .withOperation("nyuffat")
                    .withProvider("ftipwcxbyubhiq")
                    .withResource("yurnpnuhzafc"))
                .withName("uhiigbyl")
                .withOrigin("igvxvatvcrk")
                .withIsDataAction(false);
        model = BinaryData.fromObject(model).toObject(OperationInner.class);
        Assertions.assertEquals("a", model.display().description());
        Assertions.assertEquals("nyuffat", model.display().operation());
        Assertions.assertEquals("ftipwcxbyubhiq", model.display().provider());
        Assertions.assertEquals("yurnpnuhzafc", model.display().resource());
        Assertions.assertEquals("uhiigbyl", model.name());
        Assertions.assertEquals("igvxvatvcrk", model.origin());
        Assertions.assertEquals(false, model.isDataAction());
    }
}
