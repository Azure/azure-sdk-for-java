// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.securityinsights.fluent.models.OperationInner;
import com.azure.resourcemanager.securityinsights.models.OperationDisplay;
import org.junit.jupiter.api.Assertions;

public final class OperationInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationInner model = BinaryData.fromString(
            "{\"display\":{\"description\":\"nssxmojmsvpk\",\"operation\":\"rvkwc\",\"provider\":\"ql\",\"resource\":\"x\"},\"name\":\"czheyd\",\"origin\":\"dshmkxmaehvbbx\",\"isDataAction\":false}")
            .toObject(OperationInner.class);
        Assertions.assertEquals("nssxmojmsvpk", model.display().description());
        Assertions.assertEquals("rvkwc", model.display().operation());
        Assertions.assertEquals("ql", model.display().provider());
        Assertions.assertEquals("x", model.display().resource());
        Assertions.assertEquals("czheyd", model.name());
        Assertions.assertEquals("dshmkxmaehvbbx", model.origin());
        Assertions.assertEquals(false, model.isDataAction());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationInner model = new OperationInner().withDisplay(new OperationDisplay().withDescription("nssxmojmsvpk")
            .withOperation("rvkwc")
            .withProvider("ql")
            .withResource("x")).withName("czheyd").withOrigin("dshmkxmaehvbbx").withIsDataAction(false);
        model = BinaryData.fromObject(model).toObject(OperationInner.class);
        Assertions.assertEquals("nssxmojmsvpk", model.display().description());
        Assertions.assertEquals("rvkwc", model.display().operation());
        Assertions.assertEquals("ql", model.display().provider());
        Assertions.assertEquals("x", model.display().resource());
        Assertions.assertEquals("czheyd", model.name());
        Assertions.assertEquals("dshmkxmaehvbbx", model.origin());
        Assertions.assertEquals(false, model.isDataAction());
    }
}
