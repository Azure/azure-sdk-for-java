// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.securityinsights.models.BookmarkTimelineItem;
import com.azure.resourcemanager.securityinsights.models.UserInfo;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;

public final class BookmarkTimelineItemTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BookmarkTimelineItem model = BinaryData.fromString(
            "{\"kind\":\"Bookmark\",\"azureResourceId\":\"voinwo\",\"displayName\":\"rtwy\",\"notes\":\"i\",\"endTimeUtc\":\"2021-08-01T11:14:17Z\",\"startTimeUtc\":\"2021-03-25T18:15:11Z\",\"eventTime\":\"2021-11-13T19:27:14Z\",\"createdBy\":{\"email\":\"vuqmcbymsfobj\",\"name\":\"uvjezcjumvps\",\"objectId\":\"302aeb79-6ca4-49bf-b69f-fa2116a33668\"},\"labels\":[\"yoi\",\"l\",\"miqwnnrac\"]}")
            .toObject(BookmarkTimelineItem.class);
        Assertions.assertEquals("voinwo", model.azureResourceId());
        Assertions.assertEquals("rtwy", model.displayName());
        Assertions.assertEquals("i", model.notes());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-01T11:14:17Z"), model.endTimeUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-25T18:15:11Z"), model.startTimeUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-13T19:27:14Z"), model.eventTime());
        Assertions.assertEquals(UUID.fromString("302aeb79-6ca4-49bf-b69f-fa2116a33668"), model.createdBy().objectId());
        Assertions.assertEquals("yoi", model.labels().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BookmarkTimelineItem model = new BookmarkTimelineItem().withAzureResourceId("voinwo")
            .withDisplayName("rtwy")
            .withNotes("i")
            .withEndTimeUtc(OffsetDateTime.parse("2021-08-01T11:14:17Z"))
            .withStartTimeUtc(OffsetDateTime.parse("2021-03-25T18:15:11Z"))
            .withEventTime(OffsetDateTime.parse("2021-11-13T19:27:14Z"))
            .withCreatedBy(new UserInfo().withObjectId(UUID.fromString("302aeb79-6ca4-49bf-b69f-fa2116a33668")))
            .withLabels(Arrays.asList("yoi", "l", "miqwnnrac"));
        model = BinaryData.fromObject(model).toObject(BookmarkTimelineItem.class);
        Assertions.assertEquals("voinwo", model.azureResourceId());
        Assertions.assertEquals("rtwy", model.displayName());
        Assertions.assertEquals("i", model.notes());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-01T11:14:17Z"), model.endTimeUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-25T18:15:11Z"), model.startTimeUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-13T19:27:14Z"), model.eventTime());
        Assertions.assertEquals(UUID.fromString("302aeb79-6ca4-49bf-b69f-fa2116a33668"), model.createdBy().objectId());
        Assertions.assertEquals("yoi", model.labels().get(0));
    }
}
