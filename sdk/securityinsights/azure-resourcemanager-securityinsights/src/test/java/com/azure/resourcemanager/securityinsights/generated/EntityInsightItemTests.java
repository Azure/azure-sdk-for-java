// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.securityinsights.models.EntityInsightItem;
import com.azure.resourcemanager.securityinsights.models.EntityInsightItemQueryTimeInterval;
import com.azure.resourcemanager.securityinsights.models.InsightsTableResult;
import com.azure.resourcemanager.securityinsights.models.InsightsTableResultColumnsItem;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class EntityInsightItemTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        EntityInsightItem model = BinaryData.fromString(
            "{\"queryId\":\"hbxvvyhgsopbyrqu\",\"queryTimeInterval\":{\"startTime\":\"2021-11-09T13:44:26Z\",\"endTime\":\"2021-08-31T05:13:54Z\"},\"tableQueryResults\":{\"columns\":[{\"type\":\"nhlmctlpdng\",\"name\":\"vgbmhr\"}],\"rows\":[[\"myijejvegr\",\"bpnaixexccbdre\",\"xhcexdrrvqahq\"]]},\"chartQueryResults\":[{\"columns\":[{\"type\":\"ijnhyjsvfycxzbf\",\"name\":\"owvrvmtgjqppyos\"},{\"type\":\"on\",\"name\":\"yhgfipnsx\"}],\"rows\":[[\"a\",\"krrjrea\",\"xt\",\"gumhjglikkxws\"],[\"lbqpvuzlmvfelf\"],[\"gplcrpwjxeznoigb\"]]},{\"columns\":[{\"type\":\"mw\",\"name\":\"nbsazejjoqkag\"},{\"type\":\"sxtta\",\"name\":\"zxnfaaz\"},{\"type\":\"dtnkdmkq\",\"name\":\"lwuenvrkp\"}],\"rows\":[[\"ibreb\",\"aays\",\"kixqtnqtt\",\"zlwfffiakp\"],[\"qqmtedltmmji\",\"yeozphvwauyqncy\"],[\"p\",\"vipmdscwxqupevzh\",\"stotxh\"],[\"ujbypelmcuvhixb\",\"xyfwnylrcool\",\"ttpkiwkkbnujrywv\",\"y\"]]}]}")
            .toObject(EntityInsightItem.class);
        Assertions.assertEquals("hbxvvyhgsopbyrqu", model.queryId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-09T13:44:26Z"), model.queryTimeInterval().startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-31T05:13:54Z"), model.queryTimeInterval().endTime());
        Assertions.assertEquals("nhlmctlpdng", model.tableQueryResults().columns().get(0).type());
        Assertions.assertEquals("vgbmhr", model.tableQueryResults().columns().get(0).name());
        Assertions.assertEquals("myijejvegr", model.tableQueryResults().rows().get(0).get(0));
        Assertions.assertEquals("ijnhyjsvfycxzbf", model.chartQueryResults().get(0).columns().get(0).type());
        Assertions.assertEquals("owvrvmtgjqppyos", model.chartQueryResults().get(0).columns().get(0).name());
        Assertions.assertEquals("a", model.chartQueryResults().get(0).rows().get(0).get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        EntityInsightItem model
            = new EntityInsightItem().withQueryId("hbxvvyhgsopbyrqu")
                .withQueryTimeInterval(
                    new EntityInsightItemQueryTimeInterval().withStartTime(OffsetDateTime.parse("2021-11-09T13:44:26Z"))
                        .withEndTime(OffsetDateTime.parse("2021-08-31T05:13:54Z")))
                .withTableQueryResults(new InsightsTableResult()
                    .withColumns(
                        Arrays.asList(new InsightsTableResultColumnsItem().withType("nhlmctlpdng").withName("vgbmhr")))
                    .withRows(Arrays.asList(Arrays.asList("myijejvegr", "bpnaixexccbdre", "xhcexdrrvqahq"))))
                .withChartQueryResults(Arrays.asList(
                    new InsightsTableResult()
                        .withColumns(Arrays.asList(
                            new InsightsTableResultColumnsItem().withType("ijnhyjsvfycxzbf")
                                .withName("owvrvmtgjqppyos"),
                            new InsightsTableResultColumnsItem().withType("on").withName("yhgfipnsx")))
                        .withRows(Arrays.asList(Arrays.asList("a", "krrjrea", "xt", "gumhjglikkxws"),
                            Arrays.asList("lbqpvuzlmvfelf"), Arrays.asList("gplcrpwjxeznoigb"))),
                    new InsightsTableResult()
                        .withColumns(
                            Arrays.asList(new InsightsTableResultColumnsItem().withType("mw").withName("nbsazejjoqkag"),
                                new InsightsTableResultColumnsItem().withType("sxtta").withName("zxnfaaz"),
                                new InsightsTableResultColumnsItem().withType("dtnkdmkq").withName("lwuenvrkp")))
                        .withRows(Arrays.asList(Arrays.asList("ibreb", "aays", "kixqtnqtt", "zlwfffiakp"),
                            Arrays.asList("qqmtedltmmji", "yeozphvwauyqncy"),
                            Arrays.asList("p", "vipmdscwxqupevzh", "stotxh"),
                            Arrays.asList("ujbypelmcuvhixb", "xyfwnylrcool", "ttpkiwkkbnujrywv", "y")))));
        model = BinaryData.fromObject(model).toObject(EntityInsightItem.class);
        Assertions.assertEquals("hbxvvyhgsopbyrqu", model.queryId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-09T13:44:26Z"), model.queryTimeInterval().startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-31T05:13:54Z"), model.queryTimeInterval().endTime());
        Assertions.assertEquals("nhlmctlpdng", model.tableQueryResults().columns().get(0).type());
        Assertions.assertEquals("vgbmhr", model.tableQueryResults().columns().get(0).name());
        Assertions.assertEquals("myijejvegr", model.tableQueryResults().rows().get(0).get(0));
        Assertions.assertEquals("ijnhyjsvfycxzbf", model.chartQueryResults().get(0).columns().get(0).type());
        Assertions.assertEquals("owvrvmtgjqppyos", model.chartQueryResults().get(0).columns().get(0).name());
        Assertions.assertEquals("a", model.chartQueryResults().get(0).rows().get(0).get(0));
    }
}
