// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.securityinsights.fluent.models.AutomationRuleInner;
import com.azure.resourcemanager.securityinsights.models.AutomationRuleAction;
import com.azure.resourcemanager.securityinsights.models.AutomationRuleCondition;
import com.azure.resourcemanager.securityinsights.models.AutomationRuleTriggeringLogic;
import com.azure.resourcemanager.securityinsights.models.AutomationRulesList;
import com.azure.resourcemanager.securityinsights.models.TriggersOn;
import com.azure.resourcemanager.securityinsights.models.TriggersWhen;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AutomationRulesListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AutomationRulesList model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"displayName\":\"qkgfgibma\",\"order\":1793250583,\"triggeringLogic\":{\"isEnabled\":false,\"expirationTimeUtc\":\"2021-10-30T15:28:22Z\",\"triggersOn\":\"Alerts\",\"triggersWhen\":\"Created\",\"conditions\":[{\"conditionType\":\"AutomationRuleCondition\"}]},\"actions\":[{\"actionType\":\"AutomationRuleAction\",\"order\":1109303076}],\"lastModifiedTimeUtc\":\"2021-07-21T07:36:15Z\",\"createdTimeUtc\":\"2021-07-27T23:28:20Z\",\"lastModifiedBy\":{\"email\":\"ytb\",\"name\":\"qfou\",\"objectId\":\"d0287df1-f755-4ddd-89a2-445dd4afc6bd\",\"userPrincipalName\":\"mnkzsmod\"},\"createdBy\":{\"email\":\"ougpbkwt\",\"name\":\"tduqktapspwgcuer\",\"objectId\":\"8ae8b4bb-a8b9-40e8-964c-15568742b6ca\",\"userPrincipalName\":\"kdosvqw\"}},\"etag\":\"mdgbbjfdd\",\"id\":\"bmbexppbhtqqro\",\"name\":\"fpfpsalgbquxigj\",\"type\":\"jgzjaoyfhrtx\"},{\"properties\":{\"displayName\":\"lnerkujysvleju\",\"order\":140485038,\"triggeringLogic\":{\"isEnabled\":true,\"expirationTimeUtc\":\"2021-11-11T16:20:30Z\",\"triggersOn\":\"Alerts\",\"triggersWhen\":\"Updated\",\"conditions\":[{\"conditionType\":\"AutomationRuleCondition\"},{\"conditionType\":\"AutomationRuleCondition\"},{\"conditionType\":\"AutomationRuleCondition\"},{\"conditionType\":\"AutomationRuleCondition\"}]},\"actions\":[{\"actionType\":\"AutomationRuleAction\",\"order\":1106115756},{\"actionType\":\"AutomationRuleAction\",\"order\":1769432566}],\"lastModifiedTimeUtc\":\"2021-05-18T18:45:02Z\",\"createdTimeUtc\":\"2021-08-01T09:30:41Z\",\"lastModifiedBy\":{\"email\":\"xgjvtbv\",\"name\":\"sszdnru\",\"objectId\":\"5b0bfc4f-dd45-4b62-a007-8bd0a965e9a3\",\"userPrincipalName\":\"uhmuouqfprwzwbn\"},\"createdBy\":{\"email\":\"tnwu\",\"name\":\"gazxuf\",\"objectId\":\"bf38305f-e118-4128-8534-7536e0a5076b\",\"userPrincipalName\":\"ckyfih\"}},\"etag\":\"idf\",\"id\":\"wdzuhtymwisd\",\"name\":\"fthwxmnteiwa\",\"type\":\"pvkmijcmmxdcuf\"}],\"nextLink\":\"srp\"}")
            .toObject(AutomationRulesList.class);
        Assertions.assertEquals("mdgbbjfdd", model.value().get(0).etag());
        Assertions.assertEquals("qkgfgibma", model.value().get(0).displayName());
        Assertions.assertEquals(1793250583, model.value().get(0).order());
        Assertions.assertEquals(false, model.value().get(0).triggeringLogic().isEnabled());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-30T15:28:22Z"),
            model.value().get(0).triggeringLogic().expirationTimeUtc());
        Assertions.assertEquals(TriggersOn.ALERTS, model.value().get(0).triggeringLogic().triggersOn());
        Assertions.assertEquals(TriggersWhen.CREATED, model.value().get(0).triggeringLogic().triggersWhen());
        Assertions.assertEquals(1109303076, model.value().get(0).actions().get(0).order());
        Assertions.assertEquals("srp", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AutomationRulesList model = new AutomationRulesList().withValue(Arrays.asList(
            new AutomationRuleInner().withEtag("mdgbbjfdd")
                .withDisplayName("qkgfgibma")
                .withOrder(1793250583)
                .withTriggeringLogic(new AutomationRuleTriggeringLogic().withIsEnabled(false)
                    .withExpirationTimeUtc(OffsetDateTime.parse("2021-10-30T15:28:22Z"))
                    .withTriggersOn(TriggersOn.ALERTS)
                    .withTriggersWhen(TriggersWhen.CREATED)
                    .withConditions(Arrays.asList(new AutomationRuleCondition())))
                .withActions(Arrays.asList(new AutomationRuleAction().withOrder(1109303076))),
            new AutomationRuleInner().withEtag("idf")
                .withDisplayName("lnerkujysvleju")
                .withOrder(140485038)
                .withTriggeringLogic(new AutomationRuleTriggeringLogic().withIsEnabled(true)
                    .withExpirationTimeUtc(OffsetDateTime.parse("2021-11-11T16:20:30Z"))
                    .withTriggersOn(TriggersOn.ALERTS)
                    .withTriggersWhen(TriggersWhen.UPDATED)
                    .withConditions(Arrays.asList(new AutomationRuleCondition(), new AutomationRuleCondition(),
                        new AutomationRuleCondition(), new AutomationRuleCondition())))
                .withActions(Arrays.asList(new AutomationRuleAction().withOrder(1106115756),
                    new AutomationRuleAction().withOrder(1769432566)))))
            .withNextLink("srp");
        model = BinaryData.fromObject(model).toObject(AutomationRulesList.class);
        Assertions.assertEquals("mdgbbjfdd", model.value().get(0).etag());
        Assertions.assertEquals("qkgfgibma", model.value().get(0).displayName());
        Assertions.assertEquals(1793250583, model.value().get(0).order());
        Assertions.assertEquals(false, model.value().get(0).triggeringLogic().isEnabled());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-30T15:28:22Z"),
            model.value().get(0).triggeringLogic().expirationTimeUtc());
        Assertions.assertEquals(TriggersOn.ALERTS, model.value().get(0).triggeringLogic().triggersOn());
        Assertions.assertEquals(TriggersWhen.CREATED, model.value().get(0).triggeringLogic().triggersWhen());
        Assertions.assertEquals(1109303076, model.value().get(0).actions().get(0).order());
        Assertions.assertEquals("srp", model.nextLink());
    }
}
