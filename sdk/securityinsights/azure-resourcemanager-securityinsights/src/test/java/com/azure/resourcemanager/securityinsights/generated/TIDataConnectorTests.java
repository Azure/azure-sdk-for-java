// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.securityinsights.models.DataTypeState;
import com.azure.resourcemanager.securityinsights.models.TIDataConnector;
import com.azure.resourcemanager.securityinsights.models.TIDataConnectorDataTypes;
import com.azure.resourcemanager.securityinsights.models.TIDataConnectorDataTypesIndicators;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class TIDataConnectorTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TIDataConnector model = BinaryData.fromString(
            "{\"kind\":\"ThreatIntelligence\",\"properties\":{\"tipLookbackPeriod\":\"2021-02-03T11:09:59Z\",\"dataTypes\":{\"indicators\":{\"state\":\"Disabled\"}},\"tenantId\":\"bnbmxlxm\"},\"etag\":\"ygeqzusito\",\"id\":\"ahfsgb\",\"name\":\"mlree\",\"type\":\"rfwss\"}")
            .toObject(TIDataConnector.class);
        Assertions.assertEquals("ygeqzusito", model.etag());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-03T11:09:59Z"), model.tipLookbackPeriod());
        Assertions.assertEquals(DataTypeState.DISABLED, model.dataTypes().indicators().state());
        Assertions.assertEquals("bnbmxlxm", model.tenantId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TIDataConnector model = new TIDataConnector().withEtag("ygeqzusito")
            .withTipLookbackPeriod(OffsetDateTime.parse("2021-02-03T11:09:59Z"))
            .withDataTypes(new TIDataConnectorDataTypes()
                .withIndicators(new TIDataConnectorDataTypesIndicators().withState(DataTypeState.DISABLED)))
            .withTenantId("bnbmxlxm");
        model = BinaryData.fromObject(model).toObject(TIDataConnector.class);
        Assertions.assertEquals("ygeqzusito", model.etag());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-03T11:09:59Z"), model.tipLookbackPeriod());
        Assertions.assertEquals(DataTypeState.DISABLED, model.dataTypes().indicators().state());
        Assertions.assertEquals("bnbmxlxm", model.tenantId());
    }
}
