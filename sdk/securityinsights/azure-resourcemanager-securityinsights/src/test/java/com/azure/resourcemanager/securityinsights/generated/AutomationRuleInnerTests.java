// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.securityinsights.fluent.models.AutomationRuleInner;
import com.azure.resourcemanager.securityinsights.models.AutomationRuleAction;
import com.azure.resourcemanager.securityinsights.models.AutomationRuleCondition;
import com.azure.resourcemanager.securityinsights.models.AutomationRuleTriggeringLogic;
import com.azure.resourcemanager.securityinsights.models.TriggersOn;
import com.azure.resourcemanager.securityinsights.models.TriggersWhen;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AutomationRuleInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AutomationRuleInner model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"nmayhuybb\",\"order\":1813280112,\"triggeringLogic\":{\"isEnabled\":true,\"expirationTimeUtc\":\"2021-04-30T05:44:17Z\",\"triggersOn\":\"Incidents\",\"triggersWhen\":\"Updated\",\"conditions\":[{\"conditionType\":\"AutomationRuleCondition\"},{\"conditionType\":\"AutomationRuleCondition\"},{\"conditionType\":\"AutomationRuleCondition\"}]},\"actions\":[{\"actionType\":\"AutomationRuleAction\",\"order\":895630833},{\"actionType\":\"AutomationRuleAction\",\"order\":1899394591},{\"actionType\":\"AutomationRuleAction\",\"order\":1290742637}],\"lastModifiedTimeUtc\":\"2021-09-02T14:02:48Z\",\"createdTimeUtc\":\"2021-08-22T21:04:42Z\",\"lastModifiedBy\":{\"email\":\"gnarxzxtheo\",\"name\":\"si\",\"objectId\":\"9855681c-ee23-4c63-819c-6e077902cbaa\",\"userPrincipalName\":\"v\"},\"createdBy\":{\"email\":\"qi\",\"name\":\"hungbwjzrnf\",\"objectId\":\"a5d67a67-7de6-4990-b65c-66cd0c960607\",\"userPrincipalName\":\"gispemvtzfkufubl\"}},\"etag\":\"fxqeof\",\"id\":\"e\",\"name\":\"jhqjbasvmsmjqul\",\"type\":\"gsntnbybkzgcwr\"}")
            .toObject(AutomationRuleInner.class);
        Assertions.assertEquals("fxqeof", model.etag());
        Assertions.assertEquals("nmayhuybb", model.displayName());
        Assertions.assertEquals(1813280112, model.order());
        Assertions.assertEquals(true, model.triggeringLogic().isEnabled());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-30T05:44:17Z"),
            model.triggeringLogic().expirationTimeUtc());
        Assertions.assertEquals(TriggersOn.INCIDENTS, model.triggeringLogic().triggersOn());
        Assertions.assertEquals(TriggersWhen.UPDATED, model.triggeringLogic().triggersWhen());
        Assertions.assertEquals(895630833, model.actions().get(0).order());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AutomationRuleInner model = new AutomationRuleInner().withEtag("fxqeof")
            .withDisplayName("nmayhuybb")
            .withOrder(1813280112)
            .withTriggeringLogic(new AutomationRuleTriggeringLogic().withIsEnabled(true)
                .withExpirationTimeUtc(OffsetDateTime.parse("2021-04-30T05:44:17Z"))
                .withTriggersOn(TriggersOn.INCIDENTS)
                .withTriggersWhen(TriggersWhen.UPDATED)
                .withConditions(Arrays.asList(new AutomationRuleCondition(), new AutomationRuleCondition(),
                    new AutomationRuleCondition())))
            .withActions(Arrays.asList(new AutomationRuleAction().withOrder(895630833),
                new AutomationRuleAction().withOrder(1899394591), new AutomationRuleAction().withOrder(1290742637)));
        model = BinaryData.fromObject(model).toObject(AutomationRuleInner.class);
        Assertions.assertEquals("fxqeof", model.etag());
        Assertions.assertEquals("nmayhuybb", model.displayName());
        Assertions.assertEquals(1813280112, model.order());
        Assertions.assertEquals(true, model.triggeringLogic().isEnabled());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-30T05:44:17Z"),
            model.triggeringLogic().expirationTimeUtc());
        Assertions.assertEquals(TriggersOn.INCIDENTS, model.triggeringLogic().triggersOn());
        Assertions.assertEquals(TriggersWhen.UPDATED, model.triggeringLogic().triggersWhen());
        Assertions.assertEquals(895630833, model.actions().get(0).order());
    }
}
