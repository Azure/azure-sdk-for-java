// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.securityinsights.fluent.models.AutomationRuleInner;
import com.azure.resourcemanager.securityinsights.models.AutomationRuleAction;
import com.azure.resourcemanager.securityinsights.models.AutomationRuleCondition;
import com.azure.resourcemanager.securityinsights.models.AutomationRuleTriggeringLogic;
import com.azure.resourcemanager.securityinsights.models.TriggersOn;
import com.azure.resourcemanager.securityinsights.models.TriggersWhen;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AutomationRuleInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AutomationRuleInner model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"fublj\",\"order\":1488023344,\"triggeringLogic\":{\"isEnabled\":true,\"expirationTimeUtc\":\"2021-09-01T11:04:48Z\",\"triggersOn\":\"Alerts\",\"triggersWhen\":\"Created\",\"conditions\":[{\"conditionType\":\"AutomationRuleCondition\"},{\"conditionType\":\"AutomationRuleCondition\"},{\"conditionType\":\"AutomationRuleCondition\"},{\"conditionType\":\"AutomationRuleCondition\"}]},\"actions\":[{\"actionType\":\"AutomationRuleAction\",\"order\":1887671612}],\"lastModifiedTimeUtc\":\"2021-01-23T13:20:17Z\",\"createdTimeUtc\":\"2021-11-28T09:58Z\",\"lastModifiedBy\":{\"email\":\"s\",\"name\":\"smjqulngsntnbyb\",\"objectId\":\"38e16d6d-321d-402d-9e1a-e8ca9de546c2\",\"userPrincipalName\":\"cwrwclxxwrljdous\"},\"createdBy\":{\"email\":\"vkocrcjdkwtn\",\"name\":\"bnjbiksqrglssain\",\"objectId\":\"4c8a18d6-c9d2-4ae9-b3e2-bc30b3b2ec9e\",\"userPrincipalName\":\"wnzlljfmppeeb\"}},\"etag\":\"gxsabkyq\",\"id\":\"ujitcjcz\",\"name\":\"zevndhkrwpdappds\",\"type\":\"dkvwrwjfe\"}")
            .toObject(AutomationRuleInner.class);
        Assertions.assertEquals("gxsabkyq", model.etag());
        Assertions.assertEquals("fublj", model.displayName());
        Assertions.assertEquals(1488023344, model.order());
        Assertions.assertEquals(true, model.triggeringLogic().isEnabled());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-01T11:04:48Z"),
            model.triggeringLogic().expirationTimeUtc());
        Assertions.assertEquals(TriggersOn.ALERTS, model.triggeringLogic().triggersOn());
        Assertions.assertEquals(TriggersWhen.CREATED, model.triggeringLogic().triggersWhen());
        Assertions.assertEquals(1887671612, model.actions().get(0).order());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AutomationRuleInner model = new AutomationRuleInner().withEtag("gxsabkyq")
            .withDisplayName("fublj")
            .withOrder(1488023344)
            .withTriggeringLogic(new AutomationRuleTriggeringLogic().withIsEnabled(true)
                .withExpirationTimeUtc(OffsetDateTime.parse("2021-09-01T11:04:48Z"))
                .withTriggersOn(TriggersOn.ALERTS)
                .withTriggersWhen(TriggersWhen.CREATED)
                .withConditions(Arrays.asList(new AutomationRuleCondition(), new AutomationRuleCondition(),
                    new AutomationRuleCondition(), new AutomationRuleCondition())))
            .withActions(Arrays.asList(new AutomationRuleAction().withOrder(1887671612)));
        model = BinaryData.fromObject(model).toObject(AutomationRuleInner.class);
        Assertions.assertEquals("gxsabkyq", model.etag());
        Assertions.assertEquals("fublj", model.displayName());
        Assertions.assertEquals(1488023344, model.order());
        Assertions.assertEquals(true, model.triggeringLogic().isEnabled());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-01T11:04:48Z"),
            model.triggeringLogic().expirationTimeUtc());
        Assertions.assertEquals(TriggersOn.ALERTS, model.triggeringLogic().triggersOn());
        Assertions.assertEquals(TriggersWhen.CREATED, model.triggeringLogic().triggersWhen());
        Assertions.assertEquals(1887671612, model.actions().get(0).order());
    }
}
