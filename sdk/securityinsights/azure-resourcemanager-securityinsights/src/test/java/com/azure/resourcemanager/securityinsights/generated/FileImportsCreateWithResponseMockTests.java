// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.securityinsights.SecurityInsightsManager;
import com.azure.resourcemanager.securityinsights.models.FileFormat;
import com.azure.resourcemanager.securityinsights.models.FileImport;
import com.azure.resourcemanager.securityinsights.models.FileImportContentType;
import com.azure.resourcemanager.securityinsights.models.FileMetadata;
import com.azure.resourcemanager.securityinsights.models.IngestionMode;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class FileImportsCreateWithResponseMockTests {
    @Test
    public void testCreateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"ingestionMode\":\"IngestAnyValidRecords\",\"contentType\":\"BasicIndicator\",\"createdTimeUTC\":\"2021-05-26T20:58:28Z\",\"errorFile\":{\"fileFormat\":\"Unspecified\",\"fileName\":\"cyuzlybqscibv\",\"fileSize\":837498555,\"fileContentUri\":\"ckcafnwqh\",\"deleteStatus\":\"NotDeleted\"},\"errorsPreview\":[{\"recordIndex\":1230159362,\"errorMessages\":[\"bylmgjzrycwpbg\",\"mwhmxpuckns\",\"s\",\"lpsm\"]},{\"recordIndex\":1953407640,\"errorMessages\":[\"ttrvlvvjmxokxxa\"]},{\"recordIndex\":1013974008,\"errorMessages\":[\"rzvlcivqxdemkl\",\"hxwwwlojkbg\"]},{\"recordIndex\":593687159,\"errorMessages\":[\"jvfsu\"]}],\"importFile\":{\"fileFormat\":\"JSON\",\"fileName\":\"vlahxczywy\",\"fileSize\":557023393,\"fileContentUri\":\"wcorewcnnaaxqj\",\"deleteStatus\":\"Unspecified\"},\"ingestedRecordCount\":2077153775,\"source\":\"fgi\",\"state\":\"FatalError\",\"totalRecordCount\":1163484440,\"validRecordCount\":989854616,\"filesValidUntilTimeUTC\":\"2021-07-31T19:50:45Z\",\"importValidUntilTimeUTC\":\"2021-05-30T07:36:17Z\"},\"id\":\"x\",\"name\":\"yznvussu\",\"type\":\"kslws\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 201, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityInsightsManager manager = SecurityInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        FileImport response = manager.fileImports()
            .define("crzhnsbylg")
            .withExistingWorkspace("cngkwxjsjqu", "ohufzdtsrpjuvgz")
            .withIngestionMode(IngestionMode.INGEST_ONLY_IF_ALL_ARE_VALID)
            .withContentType(FileImportContentType.BASIC_INDICATOR)
            .withImportFile(new FileMetadata().withFileFormat(FileFormat.UNSPECIFIED)
                .withFileName("vdhdgdiwmlgs")
                .withFileSize(809862376))
            .withSource("kakhgkrv")
            .create();

        Assertions.assertEquals(IngestionMode.INGEST_ANY_VALID_RECORDS, response.ingestionMode());
        Assertions.assertEquals(FileImportContentType.BASIC_INDICATOR, response.contentType());
        Assertions.assertEquals(FileFormat.JSON, response.importFile().fileFormat());
        Assertions.assertEquals("vlahxczywy", response.importFile().fileName());
        Assertions.assertEquals(557023393, response.importFile().fileSize());
        Assertions.assertEquals("fgi", response.source());
    }
}
