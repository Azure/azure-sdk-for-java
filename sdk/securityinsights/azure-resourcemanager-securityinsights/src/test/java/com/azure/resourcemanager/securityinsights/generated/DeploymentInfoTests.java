// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.securityinsights.models.Deployment;
import com.azure.resourcemanager.securityinsights.models.DeploymentFetchStatus;
import com.azure.resourcemanager.securityinsights.models.DeploymentInfo;
import com.azure.resourcemanager.securityinsights.models.DeploymentResult;
import com.azure.resourcemanager.securityinsights.models.DeploymentState;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class DeploymentInfoTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DeploymentInfo model = BinaryData.fromString(
            "{\"deploymentFetchStatus\":\"Success\",\"deployment\":{\"deploymentId\":\"uuvbx\",\"deploymentState\":\"Queued\",\"deploymentResult\":\"Success\",\"deploymentTime\":\"2021-04-05T17:37:26Z\",\"deploymentLogsUrl\":\"ahttzlswvajqfut\"},\"message\":\"joqza\"}")
            .toObject(DeploymentInfo.class);
        Assertions.assertEquals(DeploymentFetchStatus.SUCCESS, model.deploymentFetchStatus());
        Assertions.assertEquals("uuvbx", model.deployment().deploymentId());
        Assertions.assertEquals(DeploymentState.QUEUED, model.deployment().deploymentState());
        Assertions.assertEquals(DeploymentResult.SUCCESS, model.deployment().deploymentResult());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-05T17:37:26Z"), model.deployment().deploymentTime());
        Assertions.assertEquals("ahttzlswvajqfut", model.deployment().deploymentLogsUrl());
        Assertions.assertEquals("joqza", model.message());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DeploymentInfo model = new DeploymentInfo().withDeploymentFetchStatus(DeploymentFetchStatus.SUCCESS)
            .withDeployment(new Deployment().withDeploymentId("uuvbx")
                .withDeploymentState(DeploymentState.QUEUED)
                .withDeploymentResult(DeploymentResult.SUCCESS)
                .withDeploymentTime(OffsetDateTime.parse("2021-04-05T17:37:26Z"))
                .withDeploymentLogsUrl("ahttzlswvajqfut"))
            .withMessage("joqza");
        model = BinaryData.fromObject(model).toObject(DeploymentInfo.class);
        Assertions.assertEquals(DeploymentFetchStatus.SUCCESS, model.deploymentFetchStatus());
        Assertions.assertEquals("uuvbx", model.deployment().deploymentId());
        Assertions.assertEquals(DeploymentState.QUEUED, model.deployment().deploymentState());
        Assertions.assertEquals(DeploymentResult.SUCCESS, model.deployment().deploymentResult());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-05T17:37:26Z"), model.deployment().deploymentTime());
        Assertions.assertEquals("ahttzlswvajqfut", model.deployment().deploymentLogsUrl());
        Assertions.assertEquals("joqza", model.message());
    }
}
