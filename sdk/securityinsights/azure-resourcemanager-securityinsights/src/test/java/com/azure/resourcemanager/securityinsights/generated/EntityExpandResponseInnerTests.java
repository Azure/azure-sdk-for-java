// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.securityinsights.fluent.models.EntityExpandResponseInner;
import com.azure.resourcemanager.securityinsights.fluent.models.EntityInner;
import com.azure.resourcemanager.securityinsights.models.EntityEdges;
import com.azure.resourcemanager.securityinsights.models.EntityExpandResponseValue;
import com.azure.resourcemanager.securityinsights.models.EntityKind;
import com.azure.resourcemanager.securityinsights.models.ExpansionResultAggregation;
import com.azure.resourcemanager.securityinsights.models.ExpansionResultsMetadata;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class EntityExpandResponseInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        EntityExpandResponseInner model = BinaryData.fromString(
            "{\"metaData\":{\"aggregations\":[{\"aggregationType\":\"rvxaglrvimjwosy\",\"count\":861887507,\"displayName\":\"tcs\",\"entityKind\":\"File\"},{\"aggregationType\":\"k\",\"count\":1489104850,\"displayName\":\"miekkezzikhlyfjh\",\"entityKind\":\"Mailbox\"}]},\"value\":{\"entities\":[{\"kind\":\"Entity\",\"id\":\"bdunygaeqid\",\"name\":\"qfatpxllrxcyjm\",\"type\":\"a\"},{\"kind\":\"Entity\",\"id\":\"uvarmywdmjsjq\",\"name\":\"jhhyxxrwlycoduhp\",\"type\":\"xkgymareqnajxqu\"},{\"kind\":\"Entity\",\"id\":\"hky\",\"name\":\"ubeddg\",\"type\":\"sofwqmzqalkrmnji\"}],\"edges\":[{\"targetEntityId\":\"cqqudf\",\"additionalData\":{\"yffimrzrtuzqogs\":\"dataxbaaabjyv\",\"mewzsyyc\":\"dataxnevfdnwn\",\"judpfrxt\":\"datauzsoi\",\"paxh\":\"datathzvaytdwkqbrqu\"}},{\"targetEntityId\":\"iilivpdtiirqtd\",\"additionalData\":{\"l\":\"dataxoruzfgsquyfxrx\",\"zwl\":\"dataptramxj\",\"tdooaoj\":\"datanwxuqlcvydyp\"}},{\"targetEntityId\":\"iodkooebwnujhem\",\"additionalData\":{\"nfwjlfltkacjvefk\":\"datavdkcrodtj\",\"kfpagao\":\"datalfoakg\",\"jnsjervtiagxsd\":\"datapulpqblylsyxk\"}}]}}")
            .toObject(EntityExpandResponseInner.class);
        Assertions.assertEquals("rvxaglrvimjwosy", model.metadata().aggregations().get(0).aggregationType());
        Assertions.assertEquals(861887507, model.metadata().aggregations().get(0).count());
        Assertions.assertEquals("tcs", model.metadata().aggregations().get(0).displayName());
        Assertions.assertEquals(EntityKind.FILE, model.metadata().aggregations().get(0).entityKind());
        Assertions.assertEquals("cqqudf", model.value().edges().get(0).targetEntityId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        EntityExpandResponseInner model
            = new EntityExpandResponseInner()
                .withMetadata(new ExpansionResultsMetadata().withAggregations(Arrays.asList(
                    new ExpansionResultAggregation().withAggregationType("rvxaglrvimjwosy")
                        .withCount(861887507)
                        .withDisplayName("tcs")
                        .withEntityKind(EntityKind.FILE),
                    new ExpansionResultAggregation().withAggregationType("k")
                        .withCount(1489104850)
                        .withDisplayName("miekkezzikhlyfjh")
                        .withEntityKind(EntityKind.MAILBOX))))
                .withValue(
                    new EntityExpandResponseValue()
                        .withEntities(Arrays.asList(new EntityInner(), new EntityInner(), new EntityInner()))
                        .withEdges(Arrays.asList(
                            new EntityEdges().withTargetEntityId("cqqudf")
                                .withAdditionalData(mapOf("yffimrzrtuzqogs", "dataxbaaabjyv", "mewzsyyc",
                                    "dataxnevfdnwn", "judpfrxt", "datauzsoi", "paxh", "datathzvaytdwkqbrqu")),
                            new EntityEdges().withTargetEntityId("iilivpdtiirqtd")
                                .withAdditionalData(mapOf("l", "dataxoruzfgsquyfxrx", "zwl", "dataptramxj", "tdooaoj",
                                    "datanwxuqlcvydyp")),
                            new EntityEdges().withTargetEntityId("iodkooebwnujhem")
                                .withAdditionalData(mapOf("nfwjlfltkacjvefk", "datavdkcrodtj", "kfpagao", "datalfoakg",
                                    "jnsjervtiagxsd", "datapulpqblylsyxk")))));
        model = BinaryData.fromObject(model).toObject(EntityExpandResponseInner.class);
        Assertions.assertEquals("rvxaglrvimjwosy", model.metadata().aggregations().get(0).aggregationType());
        Assertions.assertEquals(861887507, model.metadata().aggregations().get(0).count());
        Assertions.assertEquals("tcs", model.metadata().aggregations().get(0).displayName());
        Assertions.assertEquals(EntityKind.FILE, model.metadata().aggregations().get(0).entityKind());
        Assertions.assertEquals("cqqudf", model.value().edges().get(0).targetEntityId());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
