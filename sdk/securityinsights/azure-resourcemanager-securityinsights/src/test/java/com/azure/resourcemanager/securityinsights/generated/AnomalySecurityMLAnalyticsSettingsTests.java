// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.securityinsights.models.AnomalySecurityMLAnalyticsSettings;
import com.azure.resourcemanager.securityinsights.models.AttackTactic;
import com.azure.resourcemanager.securityinsights.models.SecurityMLAnalyticsSettingsDataSource;
import com.azure.resourcemanager.securityinsights.models.SettingsStatus;
import java.time.Duration;
import java.util.Arrays;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;

public final class AnomalySecurityMLAnalyticsSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AnomalySecurityMLAnalyticsSettings model = BinaryData.fromString(
            "{\"kind\":\"Anomaly\",\"properties\":{\"description\":\"nqzi\",\"displayName\":\"kfkbgbzbowxeqocl\",\"enabled\":true,\"lastModifiedUtc\":\"2021-01-04T04:03:18Z\",\"requiredDataConnectors\":[{\"connectorId\":\"qkjjeokbz\",\"dataTypes\":[\"zrxcczurt\",\"e\",\"pqxbkwvzgnzvdf\",\"zdix\"]}],\"tactics\":[\"InhibitResponseFunction\"],\"techniques\":[\"d\",\"wopqhewjptmcgs\",\"ostzelndlatu\",\"mzlbiojlvfhrb\"],\"anomalyVersion\":\"pn\",\"customizableObservations\":\"datavcwwyyurmochppr\",\"frequency\":\"PT151H32M19S\",\"settingsStatus\":\"Flighting\",\"isDefaultSettings\":true,\"anomalySettingsVersion\":1135076177,\"settingsDefinitionId\":\"8af64da2-e0a9-4296-9e40-0abb55fb4dc1\"},\"etag\":\"yzejnhlbk\",\"id\":\"z\",\"name\":\"cpilj\",\"type\":\"a\"}")
            .toObject(AnomalySecurityMLAnalyticsSettings.class);
        Assertions.assertEquals("yzejnhlbk", model.etag());
        Assertions.assertEquals("nqzi", model.description());
        Assertions.assertEquals("kfkbgbzbowxeqocl", model.displayName());
        Assertions.assertEquals(true, model.enabled());
        Assertions.assertEquals("qkjjeokbz", model.requiredDataConnectors().get(0).connectorId());
        Assertions.assertEquals("zrxcczurt", model.requiredDataConnectors().get(0).dataTypes().get(0));
        Assertions.assertEquals(AttackTactic.INHIBIT_RESPONSE_FUNCTION, model.tactics().get(0));
        Assertions.assertEquals("d", model.techniques().get(0));
        Assertions.assertEquals("pn", model.anomalyVersion());
        Assertions.assertEquals(Duration.parse("PT151H32M19S"), model.frequency());
        Assertions.assertEquals(SettingsStatus.FLIGHTING, model.settingsStatus());
        Assertions.assertEquals(true, model.isDefaultSettings());
        Assertions.assertEquals(1135076177, model.anomalySettingsVersion());
        Assertions.assertEquals(UUID.fromString("8af64da2-e0a9-4296-9e40-0abb55fb4dc1"), model.settingsDefinitionId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AnomalySecurityMLAnalyticsSettings model = new AnomalySecurityMLAnalyticsSettings().withEtag("yzejnhlbk")
            .withDescription("nqzi")
            .withDisplayName("kfkbgbzbowxeqocl")
            .withEnabled(true)
            .withRequiredDataConnectors(
                Arrays.asList(new SecurityMLAnalyticsSettingsDataSource().withConnectorId("qkjjeokbz")
                    .withDataTypes(Arrays.asList("zrxcczurt", "e", "pqxbkwvzgnzvdf", "zdix"))))
            .withTactics(Arrays.asList(AttackTactic.INHIBIT_RESPONSE_FUNCTION))
            .withTechniques(Arrays.asList("d", "wopqhewjptmcgs", "ostzelndlatu", "mzlbiojlvfhrb"))
            .withAnomalyVersion("pn")
            .withCustomizableObservations("datavcwwyyurmochppr")
            .withFrequency(Duration.parse("PT151H32M19S"))
            .withSettingsStatus(SettingsStatus.FLIGHTING)
            .withIsDefaultSettings(true)
            .withAnomalySettingsVersion(1135076177)
            .withSettingsDefinitionId(UUID.fromString("8af64da2-e0a9-4296-9e40-0abb55fb4dc1"));
        model = BinaryData.fromObject(model).toObject(AnomalySecurityMLAnalyticsSettings.class);
        Assertions.assertEquals("yzejnhlbk", model.etag());
        Assertions.assertEquals("nqzi", model.description());
        Assertions.assertEquals("kfkbgbzbowxeqocl", model.displayName());
        Assertions.assertEquals(true, model.enabled());
        Assertions.assertEquals("qkjjeokbz", model.requiredDataConnectors().get(0).connectorId());
        Assertions.assertEquals("zrxcczurt", model.requiredDataConnectors().get(0).dataTypes().get(0));
        Assertions.assertEquals(AttackTactic.INHIBIT_RESPONSE_FUNCTION, model.tactics().get(0));
        Assertions.assertEquals("d", model.techniques().get(0));
        Assertions.assertEquals("pn", model.anomalyVersion());
        Assertions.assertEquals(Duration.parse("PT151H32M19S"), model.frequency());
        Assertions.assertEquals(SettingsStatus.FLIGHTING, model.settingsStatus());
        Assertions.assertEquals(true, model.isDefaultSettings());
        Assertions.assertEquals(1135076177, model.anomalySettingsVersion());
        Assertions.assertEquals(UUID.fromString("8af64da2-e0a9-4296-9e40-0abb55fb4dc1"), model.settingsDefinitionId());
    }
}
