// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.securityinsights.models.AnomalySecurityMLAnalyticsSettings;
import com.azure.resourcemanager.securityinsights.models.AttackTactic;
import com.azure.resourcemanager.securityinsights.models.SecurityMLAnalyticsSettingsDataSource;
import com.azure.resourcemanager.securityinsights.models.SettingsStatus;
import java.time.Duration;
import java.util.Arrays;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;

public final class AnomalySecurityMLAnalyticsSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AnomalySecurityMLAnalyticsSettings model = BinaryData.fromString(
            "{\"kind\":\"Anomaly\",\"properties\":{\"description\":\"drnzkjthf\",\"displayName\":\"eyjncjmlfuy\",\"enabled\":false,\"lastModifiedUtc\":\"2021-08-31T04:50:59Z\",\"requiredDataConnectors\":[{\"connectorId\":\"dhlrufzcqyjmq\",\"dataTypes\":[\"iocuselqkr\",\"azrhxudd\",\"mdtff\",\"sjmrkkhm\"]},{\"connectorId\":\"mdlgy\",\"dataTypes\":[\"okwtjawhvagnqfqq\",\"lcvmyolcaymjch\",\"vsnvlaq\",\"nzyzawatuwqko\"]},{\"connectorId\":\"czothymgo\",\"dataTypes\":[\"msn\",\"gwi\"]}],\"tactics\":[\"Discovery\"],\"techniques\":[\"khtmhobcyanrfv\",\"tvkhgvo\",\"gxkfnaoaqymhccto\",\"uowyrnskbyhqu\"],\"anomalyVersion\":\"czygxv\",\"customizableObservations\":\"datajpxecxqnwhsco\",\"frequency\":\"PT21H43M45S\",\"settingsStatus\":\"Flighting\",\"isDefaultSettings\":true,\"anomalySettingsVersion\":1995633814,\"settingsDefinitionId\":\"9701d308-0fcb-408f-8971-3009248c8686\"},\"etag\":\"mpk\",\"id\":\"wirfljf\",\"name\":\"wxqouoxudnmc\",\"type\":\"aprhknqiijgencdg\"}")
            .toObject(AnomalySecurityMLAnalyticsSettings.class);
        Assertions.assertEquals("mpk", model.etag());
        Assertions.assertEquals("drnzkjthf", model.description());
        Assertions.assertEquals("eyjncjmlfuy", model.displayName());
        Assertions.assertEquals(false, model.enabled());
        Assertions.assertEquals("dhlrufzcqyjmq", model.requiredDataConnectors().get(0).connectorId());
        Assertions.assertEquals("iocuselqkr", model.requiredDataConnectors().get(0).dataTypes().get(0));
        Assertions.assertEquals(AttackTactic.DISCOVERY, model.tactics().get(0));
        Assertions.assertEquals("khtmhobcyanrfv", model.techniques().get(0));
        Assertions.assertEquals("czygxv", model.anomalyVersion());
        Assertions.assertEquals(Duration.parse("PT21H43M45S"), model.frequency());
        Assertions.assertEquals(SettingsStatus.FLIGHTING, model.settingsStatus());
        Assertions.assertEquals(true, model.isDefaultSettings());
        Assertions.assertEquals(1995633814, model.anomalySettingsVersion());
        Assertions.assertEquals(UUID.fromString("9701d308-0fcb-408f-8971-3009248c8686"), model.settingsDefinitionId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AnomalySecurityMLAnalyticsSettings model = new AnomalySecurityMLAnalyticsSettings().withEtag("mpk")
            .withDescription("drnzkjthf")
            .withDisplayName("eyjncjmlfuy")
            .withEnabled(false)
            .withRequiredDataConnectors(Arrays.asList(
                new SecurityMLAnalyticsSettingsDataSource().withConnectorId("dhlrufzcqyjmq")
                    .withDataTypes(Arrays.asList("iocuselqkr", "azrhxudd", "mdtff", "sjmrkkhm")),
                new SecurityMLAnalyticsSettingsDataSource().withConnectorId("mdlgy")
                    .withDataTypes(Arrays.asList("okwtjawhvagnqfqq", "lcvmyolcaymjch", "vsnvlaq", "nzyzawatuwqko")),
                new SecurityMLAnalyticsSettingsDataSource().withConnectorId("czothymgo")
                    .withDataTypes(Arrays.asList("msn", "gwi"))))
            .withTactics(Arrays.asList(AttackTactic.DISCOVERY))
            .withTechniques(Arrays.asList("khtmhobcyanrfv", "tvkhgvo", "gxkfnaoaqymhccto", "uowyrnskbyhqu"))
            .withAnomalyVersion("czygxv")
            .withCustomizableObservations("datajpxecxqnwhsco")
            .withFrequency(Duration.parse("PT21H43M45S"))
            .withSettingsStatus(SettingsStatus.FLIGHTING)
            .withIsDefaultSettings(true)
            .withAnomalySettingsVersion(1995633814)
            .withSettingsDefinitionId(UUID.fromString("9701d308-0fcb-408f-8971-3009248c8686"));
        model = BinaryData.fromObject(model).toObject(AnomalySecurityMLAnalyticsSettings.class);
        Assertions.assertEquals("mpk", model.etag());
        Assertions.assertEquals("drnzkjthf", model.description());
        Assertions.assertEquals("eyjncjmlfuy", model.displayName());
        Assertions.assertEquals(false, model.enabled());
        Assertions.assertEquals("dhlrufzcqyjmq", model.requiredDataConnectors().get(0).connectorId());
        Assertions.assertEquals("iocuselqkr", model.requiredDataConnectors().get(0).dataTypes().get(0));
        Assertions.assertEquals(AttackTactic.DISCOVERY, model.tactics().get(0));
        Assertions.assertEquals("khtmhobcyanrfv", model.techniques().get(0));
        Assertions.assertEquals("czygxv", model.anomalyVersion());
        Assertions.assertEquals(Duration.parse("PT21H43M45S"), model.frequency());
        Assertions.assertEquals(SettingsStatus.FLIGHTING, model.settingsStatus());
        Assertions.assertEquals(true, model.isDefaultSettings());
        Assertions.assertEquals(1995633814, model.anomalySettingsVersion());
        Assertions.assertEquals(UUID.fromString("9701d308-0fcb-408f-8971-3009248c8686"), model.settingsDefinitionId());
    }
}
