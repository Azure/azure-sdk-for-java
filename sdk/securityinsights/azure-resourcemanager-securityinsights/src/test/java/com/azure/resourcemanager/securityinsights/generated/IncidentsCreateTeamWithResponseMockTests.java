// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.securityinsights.SecurityInsightsManager;
import com.azure.resourcemanager.securityinsights.models.TeamInformation;
import com.azure.resourcemanager.securityinsights.models.TeamProperties;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.UUID;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class IncidentsCreateTeamWithResponseMockTests {
    @Test
    public void testCreateTeamWithResponse() throws Exception {
        String responseStr
            = "{\"teamId\":\"zkwd\",\"primaryChannelUrl\":\"cjgpvcqzvzrb\",\"teamCreationTimeUtc\":\"2021-04-09T13:40:56Z\",\"name\":\"hlx\",\"description\":\"xvmdr\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityInsightsManager manager = SecurityInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        TeamInformation response = manager.incidents()
            .createTeamWithResponse("mfjihv", "jcq", "tt",
                new TeamProperties().withTeamName("fuqmmfjewfeqb")
                    .withTeamDescription("dostwygufmwe")
                    .withMemberIds(Arrays.asList(UUID.fromString("c0541531-be02-4d41-b59b-bdba4d4c849e"),
                        UUID.fromString("676c2aae-dbd2-4a6b-b795-1b5daf7ee77e")))
                    .withGroupIds(Arrays.asList(UUID.fromString("73092323-867f-487e-b913-1fab66d90369"))),
                com.azure.core.util.Context.NONE)
            .getValue();

    }
}
