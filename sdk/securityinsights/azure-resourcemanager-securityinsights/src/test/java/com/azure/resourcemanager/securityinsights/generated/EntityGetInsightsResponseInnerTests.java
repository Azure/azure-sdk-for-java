// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.securityinsights.fluent.models.EntityGetInsightsResponseInner;
import com.azure.resourcemanager.securityinsights.models.EntityInsightItem;
import com.azure.resourcemanager.securityinsights.models.EntityInsightItemQueryTimeInterval;
import com.azure.resourcemanager.securityinsights.models.GetInsightsError;
import com.azure.resourcemanager.securityinsights.models.GetInsightsErrorKind;
import com.azure.resourcemanager.securityinsights.models.GetInsightsResultsMetadata;
import com.azure.resourcemanager.securityinsights.models.InsightsTableResult;
import com.azure.resourcemanager.securityinsights.models.InsightsTableResultColumnsItem;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class EntityGetInsightsResponseInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        EntityGetInsightsResponseInner model = BinaryData.fromString(
            "{\"metaData\":{\"totalCount\":1174203733,\"errors\":[{\"kind\":\"Insight\",\"queryId\":\"brgz\",\"errorMessage\":\"wmsweypqwd\"}]},\"value\":[{\"queryId\":\"cccnxqhuexmktt\",\"queryTimeInterval\":{\"startTime\":\"2021-07-22T04:42:33Z\",\"endTime\":\"2021-09-29T19:52:13Z\"},\"tableQueryResults\":{\"columns\":[{\"type\":\"hz\",\"name\":\"csdtclusiypbs\"},{\"type\":\"ytguslf\",\"name\":\"dcygqukyhejhz\"},{\"type\":\"xgfpelolppv\",\"name\":\"r\"}],\"rows\":[[\"jzraehtwdwrf\",\"swibyr\"]]},\"chartQueryResults\":[{\"columns\":[{}],\"rows\":[[\"wpracstwitykhev\",\"c\",\"edcpnmdyodnwzxl\"],[\"cvnhltiugc\"],[\"avvwxqi\",\"y\"]]}]},{\"queryId\":\"nyowxwlmdjrkvfg\",\"queryTimeInterval\":{\"startTime\":\"2021-11-30T14:41:11Z\",\"endTime\":\"2020-12-25T17:04:25Z\"},\"tableQueryResults\":{\"columns\":[{\"type\":\"cizsjqlhkrribdei\",\"name\":\"ipqkghvxndzwm\"},{\"type\":\"efajpj\",\"name\":\"wkqnyhg\"}],\"rows\":[[\"jivfxzsjabib\",\"ystawfsdjpvkvp\",\"jxbkzbzkdvn\",\"jabudurgkakmo\"]]},\"chartQueryResults\":[{\"columns\":[{}],\"rows\":[[\"fhmouwq\",\"gzrf\",\"eeyebi\"],[\"kayuhqlbjbs\",\"bbqwrvtldg\",\"fp\",\"vm\"],[\"paslthaqfxssmwu\",\"wbdsr\",\"zpdrhneu\",\"owqkdwytisi\"]]},{\"columns\":[{}],\"rows\":[[\"ikpzimejza\",\"lfzxiavrmbzonoki\"],[\"jq\"],[\"rgz\",\"frl\"]]}]},{\"queryId\":\"szrnwo\",\"queryTimeInterval\":{\"startTime\":\"2021-03-11T03:05:15Z\",\"endTime\":\"2021-01-06T22:30:17Z\"},\"tableQueryResults\":{\"columns\":[{\"type\":\"lwbtlhf\",\"name\":\"jcdh\"},{\"type\":\"fjvfbgofeljagr\",\"name\":\"qhl\"},{\"type\":\"riiiojnalghfkv\",\"name\":\"sexso\"}],\"rows\":[[\"uqhhahhxvrh\",\"zkw\",\"jgwwspughftq\"]]},\"chartQueryResults\":[{\"columns\":[{},{}],\"rows\":[[\"ukndxdigrjgu\",\"fzdm\",\"yqtfihwh\"]]},{\"columns\":[{},{},{}],\"rows\":[[\"gamv\",\"phoszqz\",\"dphqamv\"],[\"fwynwcvtbvkay\",\"mtnvyq\"]]},{\"columns\":[{},{},{}],\"rows\":[[\"pcnp\"],[\"cjaesgvvs\",\"cyajguqf\",\"wygzlvdnkfxusem\",\"wzrmuh\"],[\"fcqdpsq\",\"qvpsvuoymg\"],[\"elvezrypq\",\"mfe\"]]},{\"columns\":[{},{},{},{}],\"rows\":[[\"kyhkobopg\",\"edkowepbqpcrfk\",\"wccsnjvcdwxlpqek\"],[\"nkhtjsyingw\"],[\"atmtdhtmdvy\",\"gikdgsz\",\"w\"]]}]}]}")
            .toObject(EntityGetInsightsResponseInner.class);
        Assertions.assertEquals(1174203733, model.metadata().totalCount());
        Assertions.assertEquals(GetInsightsError.INSIGHT, model.metadata().errors().get(0).kind());
        Assertions.assertEquals("brgz", model.metadata().errors().get(0).queryId());
        Assertions.assertEquals("wmsweypqwd", model.metadata().errors().get(0).errorMessage());
        Assertions.assertEquals("cccnxqhuexmktt", model.value().get(0).queryId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-22T04:42:33Z"),
            model.value().get(0).queryTimeInterval().startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-29T19:52:13Z"),
            model.value().get(0).queryTimeInterval().endTime());
        Assertions.assertEquals("hz", model.value().get(0).tableQueryResults().columns().get(0).type());
        Assertions.assertEquals("csdtclusiypbs", model.value().get(0).tableQueryResults().columns().get(0).name());
        Assertions.assertEquals("jzraehtwdwrf", model.value().get(0).tableQueryResults().rows().get(0).get(0));
        Assertions.assertEquals("wpracstwitykhev",
            model.value().get(0).chartQueryResults().get(0).rows().get(0).get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        EntityGetInsightsResponseInner model
            = new EntityGetInsightsResponseInner()
                .withMetadata(
                    new GetInsightsResultsMetadata().withTotalCount(1174203733)
                        .withErrors(Arrays.asList(new GetInsightsErrorKind().withKind(GetInsightsError.INSIGHT)
                            .withQueryId("brgz")
                            .withErrorMessage("wmsweypqwd"))))
                .withValue(
                    Arrays
                        .asList(
                            new EntityInsightItem().withQueryId("cccnxqhuexmktt")
                                .withQueryTimeInterval(new EntityInsightItemQueryTimeInterval()
                                    .withStartTime(OffsetDateTime.parse("2021-07-22T04:42:33Z"))
                                    .withEndTime(OffsetDateTime.parse("2021-09-29T19:52:13Z")))
                                .withTableQueryResults(new InsightsTableResult()
                                    .withColumns(Arrays.asList(
                                        new InsightsTableResultColumnsItem().withType("hz").withName("csdtclusiypbs"),
                                        new InsightsTableResultColumnsItem().withType("ytguslf")
                                            .withName("dcygqukyhejhz"),
                                        new InsightsTableResultColumnsItem().withType("xgfpelolppv").withName("r")))
                                    .withRows(Arrays.asList(Arrays.asList("jzraehtwdwrf", "swibyr"))))
                                .withChartQueryResults(Arrays.asList(new InsightsTableResult()
                                    .withColumns(Arrays.asList(new InsightsTableResultColumnsItem()))
                                    .withRows(
                                        Arrays.asList(Arrays.asList("wpracstwitykhev", "c", "edcpnmdyodnwzxl"),
                                            Arrays.asList("cvnhltiugc"), Arrays.asList("avvwxqi", "y"))))),
                            new EntityInsightItem().withQueryId("nyowxwlmdjrkvfg")
                                .withQueryTimeInterval(new EntityInsightItemQueryTimeInterval()
                                    .withStartTime(OffsetDateTime.parse("2021-11-30T14:41:11Z"))
                                    .withEndTime(OffsetDateTime.parse("2020-12-25T17:04:25Z")))
                                .withTableQueryResults(new InsightsTableResult()
                                    .withColumns(Arrays.asList(
                                        new InsightsTableResultColumnsItem().withType("cizsjqlhkrribdei")
                                            .withName("ipqkghvxndzwm"),
                                        new InsightsTableResultColumnsItem().withType("efajpj").withName("wkqnyhg")))
                                    .withRows(Arrays.asList(Arrays.asList("jivfxzsjabib", "ystawfsdjpvkvp",
                                        "jxbkzbzkdvn", "jabudurgkakmo"))))
                                .withChartQueryResults(
                                    Arrays
                                        .asList(
                                            new InsightsTableResult()
                                                .withColumns(Arrays.asList(new InsightsTableResultColumnsItem()))
                                                .withRows(Arrays.asList(Arrays.asList("fhmouwq", "gzrf", "eeyebi"),
                                                    Arrays.asList("kayuhqlbjbs", "bbqwrvtldg", "fp", "vm"),
                                                    Arrays.asList("paslthaqfxssmwu", "wbdsr", "zpdrhneu",
                                                        "owqkdwytisi"))),
                                            new InsightsTableResult()
                                                .withColumns(Arrays.asList(new InsightsTableResultColumnsItem()))
                                                .withRows(
                                                    Arrays.asList(Arrays.asList("ikpzimejza", "lfzxiavrmbzonoki"),
                                                        Arrays.asList("jq"), Arrays.asList("rgz", "frl"))))),
                            new EntityInsightItem().withQueryId("szrnwo")
                                .withQueryTimeInterval(new EntityInsightItemQueryTimeInterval()
                                    .withStartTime(OffsetDateTime.parse("2021-03-11T03:05:15Z"))
                                    .withEndTime(OffsetDateTime.parse("2021-01-06T22:30:17Z")))
                                .withTableQueryResults(new InsightsTableResult()
                                    .withColumns(Arrays.asList(
                                        new InsightsTableResultColumnsItem().withType("lwbtlhf").withName("jcdh"),
                                        new InsightsTableResultColumnsItem().withType("fjvfbgofeljagr").withName("qhl"),
                                        new InsightsTableResultColumnsItem().withType("riiiojnalghfkv")
                                            .withName("sexso")))
                                    .withRows(Arrays.asList(Arrays.asList("uqhhahhxvrh", "zkw", "jgwwspughftq"))))
                                .withChartQueryResults(Arrays.asList(
                                    new InsightsTableResult().withColumns(Arrays.asList(
                                        new InsightsTableResultColumnsItem(), new InsightsTableResultColumnsItem()))
                                        .withRows(Arrays.asList(Arrays.asList("ukndxdigrjgu", "fzdm", "yqtfihwh"))),
                                    new InsightsTableResult()
                                        .withColumns(Arrays.asList(new InsightsTableResultColumnsItem(),
                                            new InsightsTableResultColumnsItem(), new InsightsTableResultColumnsItem()))
                                        .withRows(Arrays.asList(Arrays.asList("gamv", "phoszqz", "dphqamv"),
                                            Arrays.asList("fwynwcvtbvkay", "mtnvyq"))),
                                    new InsightsTableResult()
                                        .withColumns(Arrays.asList(new InsightsTableResultColumnsItem(),
                                            new InsightsTableResultColumnsItem(), new InsightsTableResultColumnsItem()))
                                        .withRows(Arrays.asList(Arrays.asList("pcnp"),
                                            Arrays.asList("cjaesgvvs", "cyajguqf", "wygzlvdnkfxusem", "wzrmuh"),
                                            Arrays.asList("fcqdpsq", "qvpsvuoymg"), Arrays.asList("elvezrypq", "mfe"))),
                                    new InsightsTableResult()
                                        .withColumns(Arrays.asList(new InsightsTableResultColumnsItem(),
                                            new InsightsTableResultColumnsItem(), new InsightsTableResultColumnsItem(),
                                            new InsightsTableResultColumnsItem()))
                                        .withRows(Arrays.asList(
                                            Arrays.asList("kyhkobopg", "edkowepbqpcrfk", "wccsnjvcdwxlpqek"),
                                            Arrays.asList("nkhtjsyingw"),
                                            Arrays.asList("atmtdhtmdvy", "gikdgsz", "w")))))));
        model = BinaryData.fromObject(model).toObject(EntityGetInsightsResponseInner.class);
        Assertions.assertEquals(1174203733, model.metadata().totalCount());
        Assertions.assertEquals(GetInsightsError.INSIGHT, model.metadata().errors().get(0).kind());
        Assertions.assertEquals("brgz", model.metadata().errors().get(0).queryId());
        Assertions.assertEquals("wmsweypqwd", model.metadata().errors().get(0).errorMessage());
        Assertions.assertEquals("cccnxqhuexmktt", model.value().get(0).queryId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-22T04:42:33Z"),
            model.value().get(0).queryTimeInterval().startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-29T19:52:13Z"),
            model.value().get(0).queryTimeInterval().endTime());
        Assertions.assertEquals("hz", model.value().get(0).tableQueryResults().columns().get(0).type());
        Assertions.assertEquals("csdtclusiypbs", model.value().get(0).tableQueryResults().columns().get(0).name());
        Assertions.assertEquals("jzraehtwdwrf", model.value().get(0).tableQueryResults().rows().get(0).get(0));
        Assertions.assertEquals("wpracstwitykhev",
            model.value().get(0).chartQueryResults().get(0).rows().get(0).get(0));
    }
}
