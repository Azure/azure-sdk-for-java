// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.securityinsights.models.Availability;
import com.azure.resourcemanager.securityinsights.models.AvailabilityStatus;
import com.azure.resourcemanager.securityinsights.models.CodelessUiConnectorConfigProperties;
import com.azure.resourcemanager.securityinsights.models.CodelessUiConnectorConfigPropertiesConnectivityCriteriaItem;
import com.azure.resourcemanager.securityinsights.models.CodelessUiConnectorConfigPropertiesDataTypesItem;
import com.azure.resourcemanager.securityinsights.models.CodelessUiConnectorConfigPropertiesGraphQueriesItem;
import com.azure.resourcemanager.securityinsights.models.CodelessUiConnectorConfigPropertiesInstructionStepsItem;
import com.azure.resourcemanager.securityinsights.models.CodelessUiConnectorConfigPropertiesSampleQueriesItem;
import com.azure.resourcemanager.securityinsights.models.CodelessUiDataConnector;
import com.azure.resourcemanager.securityinsights.models.ConnectivityType;
import com.azure.resourcemanager.securityinsights.models.InstructionStepsInstructionsItem;
import com.azure.resourcemanager.securityinsights.models.PermissionProviderScope;
import com.azure.resourcemanager.securityinsights.models.Permissions;
import com.azure.resourcemanager.securityinsights.models.PermissionsCustomsItem;
import com.azure.resourcemanager.securityinsights.models.PermissionsResourceProviderItem;
import com.azure.resourcemanager.securityinsights.models.ProviderName;
import com.azure.resourcemanager.securityinsights.models.RequiredPermissions;
import com.azure.resourcemanager.securityinsights.models.SettingType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class CodelessUiDataConnectorTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CodelessUiDataConnector model = BinaryData.fromString(
            "{\"kind\":\"GenericUI\",\"properties\":{\"connectorUiConfig\":{\"title\":\"bj\",\"publisher\":\"fveglabtvkb\",\"descriptionMarkdown\":\"wznhtfgfic\",\"customImage\":\"yhizpaczmu\",\"graphQueriesTableName\":\"bcakzn\",\"graphQueries\":[{\"metricName\":\"hoitwhrjsdmmaz\",\"legend\":\"ckidbjpglhzqpxzb\",\"baseQuery\":\"kikc\"}],\"sampleQueries\":[{\"description\":\"hbssdpjeyo\",\"query\":\"dedecfiwh\"},{\"description\":\"xsure\",\"query\":\"rshzzbgullcxiqqz\"},{\"description\":\"oxdu\",\"query\":\"amglrouig\"},{\"description\":\"fivjqterdqqigdy\",\"query\":\"ghpcvrwqirvt\"}],\"dataTypes\":[{\"name\":\"hhmvf\",\"lastDataReceivedQuery\":\"apj\"},{\"name\":\"odmkrrwepgqv\",\"lastDataReceivedQuery\":\"kqlujqgira\"},{\"name\":\"lyvxchp\",\"lastDataReceivedQuery\":\"ctsfaeuhwwsknst\"},{\"name\":\"uzhasupmlppdpgz\",\"lastDataReceivedQuery\":\"qazvbkarkptgo\"}],\"connectivityCriteria\":[{\"type\":\"IsConnectedQuery\",\"value\":[\"s\",\"iysjqhe\"]},{\"type\":\"IsConnectedQuery\",\"value\":[\"qnguba\"]},{\"type\":\"IsConnectedQuery\",\"value\":[\"ayscseydzje\",\"exmnv\"]},{\"type\":\"IsConnectedQuery\",\"value\":[\"rxl\",\"iwm\",\"pm\",\"rdlhvdvmiphbe\"]}],\"availability\":{\"status\":1,\"isPreview\":true},\"permissions\":{\"resourceProvider\":[{\"provider\":\"Microsoft.OperationalInsights/solutions\",\"permissionsDisplayText\":\"lacro\",\"providerDisplayName\":\"fmunerkelu\",\"scope\":\"Workspace\",\"requiredPermissions\":{}},{\"provider\":\"Microsoft.Authorization/policyAssignments\",\"permissionsDisplayText\":\"zbzuzudlev\",\"providerDisplayName\":\"kejcgwfsgqksty\",\"scope\":\"ResourceGroup\",\"requiredPermissions\":{}}],\"customs\":[{\"name\":\"jparda\",\"description\":\"jcfmazpzdqw\"},{\"name\":\"vcmc\",\"description\":\"xizekuvfrjwucao\"},{\"name\":\"vajbvbnkrdemdid\",\"description\":\"kzidgzwdyd\"}]},\"instructionSteps\":[{\"title\":\"svpz\",\"description\":\"ivykp\",\"instructions\":[{\"type\":\"CopyableLabel\"},{\"type\":\"InfoMessage\"},{\"type\":\"InstructionStepsGroup\"},{\"type\":\"CopyableLabel\"}]},{\"title\":\"fojiunrlsh\",\"description\":\"knsykdtoiboan\",\"instructions\":[{\"type\":\"CopyableLabel\"},{\"type\":\"InfoMessage\"},{\"type\":\"InstructionStepsGroup\"}]}]}},\"etag\":\"vx\",\"id\":\"dxonckbn\",\"name\":\"blfxlupibaqzi\",\"type\":\"xz\"}")
            .toObject(CodelessUiDataConnector.class);
        Assertions.assertEquals("vx", model.etag());
        Assertions.assertEquals("bj", model.connectorUiConfig().title());
        Assertions.assertEquals("fveglabtvkb", model.connectorUiConfig().publisher());
        Assertions.assertEquals("wznhtfgfic", model.connectorUiConfig().descriptionMarkdown());
        Assertions.assertEquals("yhizpaczmu", model.connectorUiConfig().customImage());
        Assertions.assertEquals("bcakzn", model.connectorUiConfig().graphQueriesTableName());
        Assertions.assertEquals("hoitwhrjsdmmaz", model.connectorUiConfig().graphQueries().get(0).metricName());
        Assertions.assertEquals("ckidbjpglhzqpxzb", model.connectorUiConfig().graphQueries().get(0).legend());
        Assertions.assertEquals("kikc", model.connectorUiConfig().graphQueries().get(0).baseQuery());
        Assertions.assertEquals("hbssdpjeyo", model.connectorUiConfig().sampleQueries().get(0).description());
        Assertions.assertEquals("dedecfiwh", model.connectorUiConfig().sampleQueries().get(0).query());
        Assertions.assertEquals("hhmvf", model.connectorUiConfig().dataTypes().get(0).name());
        Assertions.assertEquals("apj", model.connectorUiConfig().dataTypes().get(0).lastDataReceivedQuery());
        Assertions.assertEquals(ConnectivityType.IS_CONNECTED_QUERY,
            model.connectorUiConfig().connectivityCriteria().get(0).type());
        Assertions.assertEquals("s", model.connectorUiConfig().connectivityCriteria().get(0).value().get(0));
        Assertions.assertEquals(AvailabilityStatus.ONE, model.connectorUiConfig().availability().status());
        Assertions.assertEquals(true, model.connectorUiConfig().availability().isPreview());
        Assertions.assertEquals(ProviderName.MICROSOFT_OPERATIONAL_INSIGHTS_SOLUTIONS,
            model.connectorUiConfig().permissions().resourceProvider().get(0).provider());
        Assertions.assertEquals("lacro",
            model.connectorUiConfig().permissions().resourceProvider().get(0).permissionsDisplayText());
        Assertions.assertEquals("fmunerkelu",
            model.connectorUiConfig().permissions().resourceProvider().get(0).providerDisplayName());
        Assertions.assertEquals(PermissionProviderScope.WORKSPACE,
            model.connectorUiConfig().permissions().resourceProvider().get(0).scope());
        Assertions.assertEquals("jparda", model.connectorUiConfig().permissions().customs().get(0).name());
        Assertions.assertEquals("jcfmazpzdqw", model.connectorUiConfig().permissions().customs().get(0).description());
        Assertions.assertEquals("svpz", model.connectorUiConfig().instructionSteps().get(0).title());
        Assertions.assertEquals("ivykp", model.connectorUiConfig().instructionSteps().get(0).description());
        Assertions.assertEquals(SettingType.COPYABLE_LABEL,
            model.connectorUiConfig().instructionSteps().get(0).instructions().get(0).type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CodelessUiDataConnector model = new CodelessUiDataConnector().withEtag("vx")
            .withConnectorUiConfig(new CodelessUiConnectorConfigProperties().withTitle("bj")
                .withPublisher("fveglabtvkb")
                .withDescriptionMarkdown("wznhtfgfic")
                .withCustomImage("yhizpaczmu")
                .withGraphQueriesTableName("bcakzn")
                .withGraphQueries(Arrays
                    .asList(new CodelessUiConnectorConfigPropertiesGraphQueriesItem().withMetricName("hoitwhrjsdmmaz")
                        .withLegend("ckidbjpglhzqpxzb")
                        .withBaseQuery("kikc")))
                .withSampleQueries(Arrays.asList(
                    new CodelessUiConnectorConfigPropertiesSampleQueriesItem().withDescription("hbssdpjeyo")
                        .withQuery("dedecfiwh"),
                    new CodelessUiConnectorConfigPropertiesSampleQueriesItem().withDescription("xsure")
                        .withQuery("rshzzbgullcxiqqz"),
                    new CodelessUiConnectorConfigPropertiesSampleQueriesItem().withDescription("oxdu")
                        .withQuery("amglrouig"),
                    new CodelessUiConnectorConfigPropertiesSampleQueriesItem().withDescription("fivjqterdqqigdy")
                        .withQuery("ghpcvrwqirvt")))
                .withDataTypes(Arrays.asList(
                    new CodelessUiConnectorConfigPropertiesDataTypesItem().withName("hhmvf")
                        .withLastDataReceivedQuery("apj"),
                    new CodelessUiConnectorConfigPropertiesDataTypesItem().withName("odmkrrwepgqv")
                        .withLastDataReceivedQuery("kqlujqgira"),
                    new CodelessUiConnectorConfigPropertiesDataTypesItem().withName("lyvxchp")
                        .withLastDataReceivedQuery("ctsfaeuhwwsknst"),
                    new CodelessUiConnectorConfigPropertiesDataTypesItem().withName("uzhasupmlppdpgz")
                        .withLastDataReceivedQuery("qazvbkarkptgo")))
                .withConnectivityCriteria(Arrays.asList(
                    new CodelessUiConnectorConfigPropertiesConnectivityCriteriaItem()
                        .withType(ConnectivityType.IS_CONNECTED_QUERY)
                        .withValue(Arrays.asList("s", "iysjqhe")),
                    new CodelessUiConnectorConfigPropertiesConnectivityCriteriaItem()
                        .withType(ConnectivityType.IS_CONNECTED_QUERY)
                        .withValue(Arrays.asList("qnguba")),
                    new CodelessUiConnectorConfigPropertiesConnectivityCriteriaItem()
                        .withType(ConnectivityType.IS_CONNECTED_QUERY)
                        .withValue(Arrays.asList("ayscseydzje", "exmnv")),
                    new CodelessUiConnectorConfigPropertiesConnectivityCriteriaItem()
                        .withType(ConnectivityType.IS_CONNECTED_QUERY)
                        .withValue(Arrays.asList("rxl", "iwm", "pm", "rdlhvdvmiphbe"))))
                .withAvailability(new Availability().withStatus(AvailabilityStatus.ONE).withIsPreview(true))
                .withPermissions(new Permissions()
                    .withResourceProvider(Arrays.asList(
                        new PermissionsResourceProviderItem()
                            .withProvider(ProviderName.MICROSOFT_OPERATIONAL_INSIGHTS_SOLUTIONS)
                            .withPermissionsDisplayText("lacro")
                            .withProviderDisplayName("fmunerkelu")
                            .withScope(PermissionProviderScope.WORKSPACE)
                            .withRequiredPermissions(new RequiredPermissions()),
                        new PermissionsResourceProviderItem()
                            .withProvider(ProviderName.MICROSOFT_AUTHORIZATION_POLICY_ASSIGNMENTS)
                            .withPermissionsDisplayText("zbzuzudlev")
                            .withProviderDisplayName("kejcgwfsgqksty")
                            .withScope(PermissionProviderScope.RESOURCE_GROUP)
                            .withRequiredPermissions(new RequiredPermissions())))
                    .withCustoms(
                        Arrays.asList(new PermissionsCustomsItem().withName("jparda").withDescription("jcfmazpzdqw"),
                            new PermissionsCustomsItem().withName("vcmc").withDescription("xizekuvfrjwucao"),
                            new PermissionsCustomsItem().withName("vajbvbnkrdemdid").withDescription("kzidgzwdyd"))))
                .withInstructionSteps(
                    Arrays.asList(
                        new CodelessUiConnectorConfigPropertiesInstructionStepsItem().withTitle("svpz")
                            .withDescription("ivykp")
                            .withInstructions(Arrays.asList(
                                new InstructionStepsInstructionsItem().withType(SettingType.COPYABLE_LABEL),
                                new InstructionStepsInstructionsItem().withType(SettingType.INFO_MESSAGE),
                                new InstructionStepsInstructionsItem()
                                    .withType(SettingType.INSTRUCTION_STEPS_GROUP),
                                new InstructionStepsInstructionsItem().withType(SettingType.COPYABLE_LABEL))),
                        new CodelessUiConnectorConfigPropertiesInstructionStepsItem().withTitle("fojiunrlsh")
                            .withDescription("knsykdtoiboan")
                            .withInstructions(Arrays.asList(
                                new InstructionStepsInstructionsItem().withType(SettingType.COPYABLE_LABEL),
                                new InstructionStepsInstructionsItem().withType(SettingType.INFO_MESSAGE),
                                new InstructionStepsInstructionsItem()
                                    .withType(SettingType.INSTRUCTION_STEPS_GROUP))))));
        model = BinaryData.fromObject(model).toObject(CodelessUiDataConnector.class);
        Assertions.assertEquals("vx", model.etag());
        Assertions.assertEquals("bj", model.connectorUiConfig().title());
        Assertions.assertEquals("fveglabtvkb", model.connectorUiConfig().publisher());
        Assertions.assertEquals("wznhtfgfic", model.connectorUiConfig().descriptionMarkdown());
        Assertions.assertEquals("yhizpaczmu", model.connectorUiConfig().customImage());
        Assertions.assertEquals("bcakzn", model.connectorUiConfig().graphQueriesTableName());
        Assertions.assertEquals("hoitwhrjsdmmaz", model.connectorUiConfig().graphQueries().get(0).metricName());
        Assertions.assertEquals("ckidbjpglhzqpxzb", model.connectorUiConfig().graphQueries().get(0).legend());
        Assertions.assertEquals("kikc", model.connectorUiConfig().graphQueries().get(0).baseQuery());
        Assertions.assertEquals("hbssdpjeyo", model.connectorUiConfig().sampleQueries().get(0).description());
        Assertions.assertEquals("dedecfiwh", model.connectorUiConfig().sampleQueries().get(0).query());
        Assertions.assertEquals("hhmvf", model.connectorUiConfig().dataTypes().get(0).name());
        Assertions.assertEquals("apj", model.connectorUiConfig().dataTypes().get(0).lastDataReceivedQuery());
        Assertions.assertEquals(ConnectivityType.IS_CONNECTED_QUERY,
            model.connectorUiConfig().connectivityCriteria().get(0).type());
        Assertions.assertEquals("s", model.connectorUiConfig().connectivityCriteria().get(0).value().get(0));
        Assertions.assertEquals(AvailabilityStatus.ONE, model.connectorUiConfig().availability().status());
        Assertions.assertEquals(true, model.connectorUiConfig().availability().isPreview());
        Assertions.assertEquals(ProviderName.MICROSOFT_OPERATIONAL_INSIGHTS_SOLUTIONS,
            model.connectorUiConfig().permissions().resourceProvider().get(0).provider());
        Assertions.assertEquals("lacro",
            model.connectorUiConfig().permissions().resourceProvider().get(0).permissionsDisplayText());
        Assertions.assertEquals("fmunerkelu",
            model.connectorUiConfig().permissions().resourceProvider().get(0).providerDisplayName());
        Assertions.assertEquals(PermissionProviderScope.WORKSPACE,
            model.connectorUiConfig().permissions().resourceProvider().get(0).scope());
        Assertions.assertEquals("jparda", model.connectorUiConfig().permissions().customs().get(0).name());
        Assertions.assertEquals("jcfmazpzdqw", model.connectorUiConfig().permissions().customs().get(0).description());
        Assertions.assertEquals("svpz", model.connectorUiConfig().instructionSteps().get(0).title());
        Assertions.assertEquals("ivykp", model.connectorUiConfig().instructionSteps().get(0).description());
        Assertions.assertEquals(SettingType.COPYABLE_LABEL,
            model.connectorUiConfig().instructionSteps().get(0).instructions().get(0).type());
    }
}
