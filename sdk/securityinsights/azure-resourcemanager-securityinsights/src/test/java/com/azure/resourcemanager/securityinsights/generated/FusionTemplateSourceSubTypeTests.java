// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.securityinsights.models.AlertSeverity;
import com.azure.resourcemanager.securityinsights.models.FusionTemplateSourceSubType;
import com.azure.resourcemanager.securityinsights.models.FusionTemplateSubTypeSeverityFilter;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class FusionTemplateSourceSubTypeTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FusionTemplateSourceSubType model = BinaryData.fromString(
            "{\"sourceSubTypeName\":\"bjufptbjczjnciu\",\"sourceSubTypeDisplayName\":\"qvldaswvppisqqzl\",\"severityFilter\":{\"isSupported\":true,\"severityFilters\":[\"Informational\",\"Medium\",\"Low\"]}}")
            .toObject(FusionTemplateSourceSubType.class);
        Assertions.assertEquals("bjufptbjczjnciu", model.sourceSubTypeName());
        Assertions.assertEquals(true, model.severityFilter().isSupported());
        Assertions.assertEquals(AlertSeverity.INFORMATIONAL, model.severityFilter().severityFilters().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FusionTemplateSourceSubType model = new FusionTemplateSourceSubType().withSourceSubTypeName("bjufptbjczjnciu")
            .withSeverityFilter(new FusionTemplateSubTypeSeverityFilter().withIsSupported(true)
                .withSeverityFilters(
                    Arrays.asList(AlertSeverity.INFORMATIONAL, AlertSeverity.MEDIUM, AlertSeverity.LOW)));
        model = BinaryData.fromObject(model).toObject(FusionTemplateSourceSubType.class);
        Assertions.assertEquals("bjufptbjczjnciu", model.sourceSubTypeName());
        Assertions.assertEquals(true, model.severityFilter().isSupported());
        Assertions.assertEquals(AlertSeverity.INFORMATIONAL, model.severityFilter().severityFilters().get(0));
    }
}
