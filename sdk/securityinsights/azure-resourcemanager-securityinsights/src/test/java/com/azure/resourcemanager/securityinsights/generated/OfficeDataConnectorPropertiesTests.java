// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.securityinsights.fluent.models.OfficeDataConnectorProperties;
import com.azure.resourcemanager.securityinsights.models.DataTypeState;
import com.azure.resourcemanager.securityinsights.models.OfficeDataConnectorDataTypes;
import com.azure.resourcemanager.securityinsights.models.OfficeDataConnectorDataTypesExchange;
import com.azure.resourcemanager.securityinsights.models.OfficeDataConnectorDataTypesSharePoint;
import com.azure.resourcemanager.securityinsights.models.OfficeDataConnectorDataTypesTeams;
import org.junit.jupiter.api.Assertions;

public final class OfficeDataConnectorPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OfficeDataConnectorProperties model = BinaryData.fromString(
            "{\"tenantId\":\"sufco\",\"dataTypes\":{\"exchange\":{\"state\":\"Disabled\"},\"sharePoint\":{\"state\":\"Disabled\"},\"teams\":{\"state\":\"Enabled\"}}}")
            .toObject(OfficeDataConnectorProperties.class);
        Assertions.assertEquals("sufco", model.tenantId());
        Assertions.assertEquals(DataTypeState.DISABLED, model.dataTypes().exchange().state());
        Assertions.assertEquals(DataTypeState.DISABLED, model.dataTypes().sharePoint().state());
        Assertions.assertEquals(DataTypeState.ENABLED, model.dataTypes().teams().state());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OfficeDataConnectorProperties model = new OfficeDataConnectorProperties().withTenantId("sufco")
            .withDataTypes(new OfficeDataConnectorDataTypes()
                .withExchange(new OfficeDataConnectorDataTypesExchange().withState(DataTypeState.DISABLED))
                .withSharePoint(new OfficeDataConnectorDataTypesSharePoint().withState(DataTypeState.DISABLED))
                .withTeams(new OfficeDataConnectorDataTypesTeams().withState(DataTypeState.ENABLED)));
        model = BinaryData.fromObject(model).toObject(OfficeDataConnectorProperties.class);
        Assertions.assertEquals("sufco", model.tenantId());
        Assertions.assertEquals(DataTypeState.DISABLED, model.dataTypes().exchange().state());
        Assertions.assertEquals(DataTypeState.DISABLED, model.dataTypes().sharePoint().state());
        Assertions.assertEquals(DataTypeState.ENABLED, model.dataTypes().teams().state());
    }
}
