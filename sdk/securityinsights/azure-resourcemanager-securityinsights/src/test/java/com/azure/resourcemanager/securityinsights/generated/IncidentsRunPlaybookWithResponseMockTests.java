// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.securityinsights.SecurityInsightsManager;
import com.azure.resourcemanager.securityinsights.models.ManualTriggerRequestBody;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.UUID;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class IncidentsRunPlaybookWithResponseMockTests {
    @Test
    public void testRunPlaybookWithResponse() throws Exception {
        String responseStr = "\"datacve\"";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 204, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityInsightsManager manager = SecurityInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Object response = manager.incidents()
            .runPlaybookWithResponse("fjc", "lojhhyl", "devfi",
                new ManualTriggerRequestBody().withTenantId(UUID.fromString("6e99998b-0a7b-4f50-b460-da304855c553"))
                    .withLogicAppsResourceId("motuzbybwjmtf"),
                com.azure.core.util.Context.NONE)
            .getValue();

    }
}
