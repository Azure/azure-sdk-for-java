// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.securityinsights.models.AutomationRulePropertyChangedConditionSupportedChangedType;
import com.azure.resourcemanager.securityinsights.models.AutomationRulePropertyChangedConditionSupportedPropertyType;
import com.azure.resourcemanager.securityinsights.models.AutomationRulePropertyConditionSupportedOperator;
import com.azure.resourcemanager.securityinsights.models.AutomationRulePropertyValuesChangedCondition;
import com.azure.resourcemanager.securityinsights.models.PropertyChangedConditionProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PropertyChangedConditionPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PropertyChangedConditionProperties model = BinaryData.fromString(
            "{\"conditionType\":\"PropertyChanged\",\"conditionProperties\":{\"propertyName\":\"IncidentStatus\",\"changeType\":\"ChangedTo\",\"operator\":\"NotStartsWith\",\"propertyValues\":[\"kdasvflyhbxcudch\",\"gsrboldforobw\"]}}")
            .toObject(PropertyChangedConditionProperties.class);
        Assertions.assertEquals(AutomationRulePropertyChangedConditionSupportedPropertyType.INCIDENT_STATUS,
            model.conditionProperties().propertyName());
        Assertions.assertEquals(AutomationRulePropertyChangedConditionSupportedChangedType.CHANGED_TO,
            model.conditionProperties().changeType());
        Assertions.assertEquals(AutomationRulePropertyConditionSupportedOperator.NOT_STARTS_WITH,
            model.conditionProperties().operator());
        Assertions.assertEquals("kdasvflyhbxcudch", model.conditionProperties().propertyValues().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PropertyChangedConditionProperties model = new PropertyChangedConditionProperties()
            .withConditionProperties(new AutomationRulePropertyValuesChangedCondition()
                .withPropertyName(AutomationRulePropertyChangedConditionSupportedPropertyType.INCIDENT_STATUS)
                .withChangeType(AutomationRulePropertyChangedConditionSupportedChangedType.CHANGED_TO)
                .withOperator(AutomationRulePropertyConditionSupportedOperator.NOT_STARTS_WITH)
                .withPropertyValues(Arrays.asList("kdasvflyhbxcudch", "gsrboldforobw")));
        model = BinaryData.fromObject(model).toObject(PropertyChangedConditionProperties.class);
        Assertions.assertEquals(AutomationRulePropertyChangedConditionSupportedPropertyType.INCIDENT_STATUS,
            model.conditionProperties().propertyName());
        Assertions.assertEquals(AutomationRulePropertyChangedConditionSupportedChangedType.CHANGED_TO,
            model.conditionProperties().changeType());
        Assertions.assertEquals(AutomationRulePropertyConditionSupportedOperator.NOT_STARTS_WITH,
            model.conditionProperties().operator());
        Assertions.assertEquals("kdasvflyhbxcudch", model.conditionProperties().propertyValues().get(0));
    }
}
