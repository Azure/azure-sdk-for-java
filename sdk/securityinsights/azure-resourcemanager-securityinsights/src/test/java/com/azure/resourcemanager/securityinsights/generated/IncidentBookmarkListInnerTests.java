// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.securityinsights.fluent.models.IncidentBookmarkListInner;
import com.azure.resourcemanager.securityinsights.models.HuntingBookmark;
import com.azure.resourcemanager.securityinsights.models.IncidentInfo;
import com.azure.resourcemanager.securityinsights.models.IncidentSeverity;
import com.azure.resourcemanager.securityinsights.models.UserInfo;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;

public final class IncidentBookmarkListInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IncidentBookmarkListInner model = BinaryData.fromString(
            "{\"value\":[{\"kind\":\"Bookmark\",\"properties\":{\"created\":\"2021-03-12T03:59:06Z\",\"createdBy\":{\"email\":\"nrmfqjhhk\",\"name\":\"pvjymjhxxjyng\",\"objectId\":\"26664c69-561c-4b8e-a986-de91e1c01c3a\"},\"displayName\":\"ivkrtsw\",\"eventTime\":\"2021-05-30T10:12:47Z\",\"labels\":[\"szjfauvjfdxxivet\",\"t\",\"qaqtdoqmcbxvwvxy\",\"lqbhsf\"],\"notes\":\"blytk\",\"query\":\"lmpewwwfbkr\",\"queryResult\":\"nsvs\",\"updated\":\"2021-08-09T19:40:16Z\",\"updatedBy\":{\"email\":\"xc\",\"name\":\"bfovasrruvwbhsq\",\"objectId\":\"0ace2d25-4fd3-4679-a42d-1c2692bef03a\"},\"incidentInfo\":{\"incidentId\":\"cgjbirxbp\",\"severity\":\"Low\",\"title\":\"fbjfdtwssotftpvj\",\"relationName\":\"exilzznfqqnvwpmq\"},\"additionalData\":{\"jrybnwjewgdrjer\":\"datauoujmkcjhwqy\",\"gmifthnzd\":\"datanaenqpehindo\"},\"friendlyName\":\"sl\"},\"id\":\"ayqigynduhav\",\"name\":\"qlkth\",\"type\":\"maqolbgycduie\"},{\"kind\":\"Bookmark\",\"properties\":{\"created\":\"2021-07-05T23:49:12Z\",\"createdBy\":{\"email\":\"mvaolps\",\"name\":\"qlfmmdnbb\",\"objectId\":\"657cef19-7d3e-48be-a899-30180ad5dbbd\"},\"displayName\":\"zpswiydmc\",\"eventTime\":\"2021-03-06T05:36:52Z\",\"labels\":[\"xssadbzmnvdf\",\"n\",\"daodvxzbncblyl\"],\"notes\":\"tdbhhxsrzdzu\",\"query\":\"erscdntne\",\"queryResult\":\"iwjmygtdssls\",\"updated\":\"2021-06-02T21:20:03Z\",\"updatedBy\":{\"email\":\"riofzpyqse\",\"name\":\"abnetshh\",\"objectId\":\"ea075571-b064-48d2-89d6-dae2f96eb97a\"},\"incidentInfo\":{\"incidentId\":\"d\",\"severity\":\"Informational\",\"title\":\"iwubmwmbesldnk\",\"relationName\":\"tppjflcx\"},\"additionalData\":{\"qqkdltfzxmhhvhgu\":\"dataokonzmnsikvmkqz\",\"xtibqdxbxwakbog\":\"dataeodkwobda\",\"iplbpodxunkbebxm\":\"dataxndlkzgxhu\"},\"friendlyName\":\"yyntwl\"},\"id\":\"qtkoievs\",\"name\":\"otgqrlltmu\",\"type\":\"lauwzizxbmpgcjef\"}]}")
            .toObject(IncidentBookmarkListInner.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-12T03:59:06Z"), model.value().get(0).created());
        Assertions.assertEquals(UUID.fromString("26664c69-561c-4b8e-a986-de91e1c01c3a"),
            model.value().get(0).createdBy().objectId());
        Assertions.assertEquals("ivkrtsw", model.value().get(0).displayName());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-30T10:12:47Z"), model.value().get(0).eventTime());
        Assertions.assertEquals("szjfauvjfdxxivet", model.value().get(0).labels().get(0));
        Assertions.assertEquals("blytk", model.value().get(0).notes());
        Assertions.assertEquals("lmpewwwfbkr", model.value().get(0).query());
        Assertions.assertEquals("nsvs", model.value().get(0).queryResult());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-09T19:40:16Z"), model.value().get(0).updated());
        Assertions.assertEquals(UUID.fromString("0ace2d25-4fd3-4679-a42d-1c2692bef03a"),
            model.value().get(0).updatedBy().objectId());
        Assertions.assertEquals("cgjbirxbp", model.value().get(0).incidentInfo().incidentId());
        Assertions.assertEquals(IncidentSeverity.LOW, model.value().get(0).incidentInfo().severity());
        Assertions.assertEquals("fbjfdtwssotftpvj", model.value().get(0).incidentInfo().title());
        Assertions.assertEquals("exilzznfqqnvwpmq", model.value().get(0).incidentInfo().relationName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IncidentBookmarkListInner model
            = new IncidentBookmarkListInner()
                .withValue(
                    Arrays
                        .asList(
                            new HuntingBookmark().withCreated(OffsetDateTime.parse("2021-03-12T03:59:06Z"))
                                .withCreatedBy(new UserInfo()
                                    .withObjectId(UUID.fromString("26664c69-561c-4b8e-a986-de91e1c01c3a")))
                                .withDisplayName("ivkrtsw")
                                .withEventTime(OffsetDateTime.parse("2021-05-30T10:12:47Z"))
                                .withLabels(Arrays.asList("szjfauvjfdxxivet", "t", "qaqtdoqmcbxvwvxy", "lqbhsf"))
                                .withNotes("blytk")
                                .withQuery("lmpewwwfbkr")
                                .withQueryResult("nsvs")
                                .withUpdated(OffsetDateTime.parse("2021-08-09T19:40:16Z"))
                                .withUpdatedBy(new UserInfo()
                                    .withObjectId(UUID.fromString("0ace2d25-4fd3-4679-a42d-1c2692bef03a")))
                                .withIncidentInfo(new IncidentInfo()
                                    .withIncidentId("cgjbirxbp")
                                    .withSeverity(IncidentSeverity.LOW)
                                    .withTitle("fbjfdtwssotftpvj")
                                    .withRelationName("exilzznfqqnvwpmq")),
                            new HuntingBookmark().withCreated(OffsetDateTime.parse("2021-07-05T23:49:12Z"))
                                .withCreatedBy(new UserInfo()
                                    .withObjectId(UUID.fromString("657cef19-7d3e-48be-a899-30180ad5dbbd")))
                                .withDisplayName("zpswiydmc")
                                .withEventTime(OffsetDateTime.parse("2021-03-06T05:36:52Z"))
                                .withLabels(Arrays.asList("xssadbzmnvdf", "n", "daodvxzbncblyl"))
                                .withNotes("tdbhhxsrzdzu")
                                .withQuery("erscdntne")
                                .withQueryResult("iwjmygtdssls")
                                .withUpdated(OffsetDateTime.parse("2021-06-02T21:20:03Z"))
                                .withUpdatedBy(new UserInfo()
                                    .withObjectId(UUID.fromString("ea075571-b064-48d2-89d6-dae2f96eb97a")))
                                .withIncidentInfo(new IncidentInfo().withIncidentId("d")
                                    .withSeverity(IncidentSeverity.INFORMATIONAL)
                                    .withTitle("iwubmwmbesldnk")
                                    .withRelationName("tppjflcx"))));
        model = BinaryData.fromObject(model).toObject(IncidentBookmarkListInner.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-12T03:59:06Z"), model.value().get(0).created());
        Assertions.assertEquals(UUID.fromString("26664c69-561c-4b8e-a986-de91e1c01c3a"),
            model.value().get(0).createdBy().objectId());
        Assertions.assertEquals("ivkrtsw", model.value().get(0).displayName());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-30T10:12:47Z"), model.value().get(0).eventTime());
        Assertions.assertEquals("szjfauvjfdxxivet", model.value().get(0).labels().get(0));
        Assertions.assertEquals("blytk", model.value().get(0).notes());
        Assertions.assertEquals("lmpewwwfbkr", model.value().get(0).query());
        Assertions.assertEquals("nsvs", model.value().get(0).queryResult());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-09T19:40:16Z"), model.value().get(0).updated());
        Assertions.assertEquals(UUID.fromString("0ace2d25-4fd3-4679-a42d-1c2692bef03a"),
            model.value().get(0).updatedBy().objectId());
        Assertions.assertEquals("cgjbirxbp", model.value().get(0).incidentInfo().incidentId());
        Assertions.assertEquals(IncidentSeverity.LOW, model.value().get(0).incidentInfo().severity());
        Assertions.assertEquals("fbjfdtwssotftpvj", model.value().get(0).incidentInfo().title());
        Assertions.assertEquals("exilzznfqqnvwpmq", model.value().get(0).incidentInfo().relationName());
    }
}
