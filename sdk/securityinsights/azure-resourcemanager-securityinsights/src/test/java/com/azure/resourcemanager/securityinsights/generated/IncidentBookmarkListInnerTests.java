// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.securityinsights.fluent.models.IncidentBookmarkListInner;
import com.azure.resourcemanager.securityinsights.models.HuntingBookmark;
import com.azure.resourcemanager.securityinsights.models.IncidentInfo;
import com.azure.resourcemanager.securityinsights.models.IncidentSeverity;
import com.azure.resourcemanager.securityinsights.models.UserInfo;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;

public final class IncidentBookmarkListInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IncidentBookmarkListInner model = BinaryData.fromString(
            "{\"value\":[{\"kind\":\"Bookmark\",\"properties\":{\"created\":\"2021-02-17T00:55:17Z\",\"createdBy\":{\"email\":\"ha\",\"name\":\"ylhjlm\",\"objectId\":\"4910e3a1-1bc9-4452-9da6-2f73216844cc\"},\"displayName\":\"y\",\"eventTime\":\"2021-01-19T18:48:39Z\",\"labels\":[\"rsopteecjm\",\"islstv\"],\"notes\":\"ylw\",\"query\":\"dzaumweooh\",\"queryResult\":\"ufuzboy\",\"updated\":\"2021-11-03T21:38:56Z\",\"updatedBy\":{\"email\":\"tzolbaemwmdxmeb\",\"name\":\"scjpahlxv\",\"objectId\":\"eb90c977-3108-4186-ba61-7cb944f02ca9\"},\"incidentInfo\":{\"incidentId\":\"qxnmwmqt\",\"severity\":\"High\",\"title\":\"ijddtvqc\",\"relationName\":\"adijaeukmrsie\"},\"additionalData\":{\"eqw\":\"datandzaapmudq\",\"bu\":\"datagp\",\"znrtffyaqit\":\"dataqwyxebeybpm\",\"qyrxp\":\"datahheioqaqhvseuf\"},\"friendlyName\":\"cgq\"},\"id\":\"ismjqfrddgamqu\",\"name\":\"iosrsjuivfcdis\",\"type\":\"irnxz\"}]}")
            .toObject(IncidentBookmarkListInner.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-17T00:55:17Z"), model.value().get(0).created());
        Assertions.assertEquals(UUID.fromString("4910e3a1-1bc9-4452-9da6-2f73216844cc"),
            model.value().get(0).createdBy().objectId());
        Assertions.assertEquals("y", model.value().get(0).displayName());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-19T18:48:39Z"), model.value().get(0).eventTime());
        Assertions.assertEquals("rsopteecjm", model.value().get(0).labels().get(0));
        Assertions.assertEquals("ylw", model.value().get(0).notes());
        Assertions.assertEquals("dzaumweooh", model.value().get(0).query());
        Assertions.assertEquals("ufuzboy", model.value().get(0).queryResult());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-03T21:38:56Z"), model.value().get(0).updated());
        Assertions.assertEquals(UUID.fromString("eb90c977-3108-4186-ba61-7cb944f02ca9"),
            model.value().get(0).updatedBy().objectId());
        Assertions.assertEquals("qxnmwmqt", model.value().get(0).incidentInfo().incidentId());
        Assertions.assertEquals(IncidentSeverity.HIGH, model.value().get(0).incidentInfo().severity());
        Assertions.assertEquals("ijddtvqc", model.value().get(0).incidentInfo().title());
        Assertions.assertEquals("adijaeukmrsie", model.value().get(0).incidentInfo().relationName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IncidentBookmarkListInner model = new IncidentBookmarkListInner()
            .withValue(Arrays.asList(new HuntingBookmark().withCreated(OffsetDateTime.parse("2021-02-17T00:55:17Z"))
                .withCreatedBy(new UserInfo().withObjectId(UUID.fromString("4910e3a1-1bc9-4452-9da6-2f73216844cc")))
                .withDisplayName("y")
                .withEventTime(OffsetDateTime.parse("2021-01-19T18:48:39Z"))
                .withLabels(Arrays.asList("rsopteecjm", "islstv"))
                .withNotes("ylw")
                .withQuery("dzaumweooh")
                .withQueryResult("ufuzboy")
                .withUpdated(OffsetDateTime.parse("2021-11-03T21:38:56Z"))
                .withUpdatedBy(new UserInfo().withObjectId(UUID.fromString("eb90c977-3108-4186-ba61-7cb944f02ca9")))
                .withIncidentInfo(new IncidentInfo().withIncidentId("qxnmwmqt")
                    .withSeverity(IncidentSeverity.HIGH)
                    .withTitle("ijddtvqc")
                    .withRelationName("adijaeukmrsie"))));
        model = BinaryData.fromObject(model).toObject(IncidentBookmarkListInner.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-17T00:55:17Z"), model.value().get(0).created());
        Assertions.assertEquals(UUID.fromString("4910e3a1-1bc9-4452-9da6-2f73216844cc"),
            model.value().get(0).createdBy().objectId());
        Assertions.assertEquals("y", model.value().get(0).displayName());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-19T18:48:39Z"), model.value().get(0).eventTime());
        Assertions.assertEquals("rsopteecjm", model.value().get(0).labels().get(0));
        Assertions.assertEquals("ylw", model.value().get(0).notes());
        Assertions.assertEquals("dzaumweooh", model.value().get(0).query());
        Assertions.assertEquals("ufuzboy", model.value().get(0).queryResult());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-03T21:38:56Z"), model.value().get(0).updated());
        Assertions.assertEquals(UUID.fromString("eb90c977-3108-4186-ba61-7cb944f02ca9"),
            model.value().get(0).updatedBy().objectId());
        Assertions.assertEquals("qxnmwmqt", model.value().get(0).incidentInfo().incidentId());
        Assertions.assertEquals(IncidentSeverity.HIGH, model.value().get(0).incidentInfo().severity());
        Assertions.assertEquals("ijddtvqc", model.value().get(0).incidentInfo().title());
        Assertions.assertEquals("adijaeukmrsie", model.value().get(0).incidentInfo().relationName());
    }
}
