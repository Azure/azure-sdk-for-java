// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.securityinsights.models.EntityGetInsightsParameters;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;

public final class EntityGetInsightsParametersTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        EntityGetInsightsParameters model = BinaryData.fromString(
            "{\"startTime\":\"2021-06-28T10:10:54Z\",\"endTime\":\"2021-10-17T17:30:07Z\",\"addDefaultExtendedTimeRange\":true,\"insightQueryIds\":[\"fc362d71-e245-4558-b4fa-e2699ad15c5e\"]}")
            .toObject(EntityGetInsightsParameters.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-28T10:10:54Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-17T17:30:07Z"), model.endTime());
        Assertions.assertEquals(true, model.addDefaultExtendedTimeRange());
        Assertions.assertEquals(UUID.fromString("fc362d71-e245-4558-b4fa-e2699ad15c5e"),
            model.insightQueryIds().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        EntityGetInsightsParameters model
            = new EntityGetInsightsParameters().withStartTime(OffsetDateTime.parse("2021-06-28T10:10:54Z"))
                .withEndTime(OffsetDateTime.parse("2021-10-17T17:30:07Z"))
                .withAddDefaultExtendedTimeRange(true)
                .withInsightQueryIds(Arrays.asList(UUID.fromString("fc362d71-e245-4558-b4fa-e2699ad15c5e")));
        model = BinaryData.fromObject(model).toObject(EntityGetInsightsParameters.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-28T10:10:54Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-17T17:30:07Z"), model.endTime());
        Assertions.assertEquals(true, model.addDefaultExtendedTimeRange());
        Assertions.assertEquals(UUID.fromString("fc362d71-e245-4558-b4fa-e2699ad15c5e"),
            model.insightQueryIds().get(0));
    }
}
