// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.securityinsights.models.ContentPathMap;
import com.azure.resourcemanager.securityinsights.models.ContentType;
import com.azure.resourcemanager.securityinsights.models.Repository;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RepositoryTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        Repository model = BinaryData.fromString(
            "{\"url\":\"acigel\",\"branch\":\"hdbvqvwzkjop\",\"displayUrl\":\"eonrlkwzdqybxce\",\"deploymentLogsUrl\":\"xcptsoqfyiaseqc\",\"pathMapping\":[{\"contentType\":\"Workbook\",\"path\":\"razisg\"},{\"contentType\":\"Workbook\",\"path\":\"emv\"},{\"contentType\":\"Workbook\",\"path\":\"zohmnrxxbs\"},{\"contentType\":\"Workbook\",\"path\":\"inhmdptys\"}]}")
            .toObject(Repository.class);
        Assertions.assertEquals("acigel", model.url());
        Assertions.assertEquals("hdbvqvwzkjop", model.branch());
        Assertions.assertEquals("eonrlkwzdqybxce", model.displayUrl());
        Assertions.assertEquals("xcptsoqfyiaseqc", model.deploymentLogsUrl());
        Assertions.assertEquals(ContentType.WORKBOOK, model.pathMapping().get(0).contentType());
        Assertions.assertEquals("razisg", model.pathMapping().get(0).path());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        Repository model = new Repository().withUrl("acigel")
            .withBranch("hdbvqvwzkjop")
            .withDisplayUrl("eonrlkwzdqybxce")
            .withDeploymentLogsUrl("xcptsoqfyiaseqc")
            .withPathMapping(
                Arrays.asList(new ContentPathMap().withContentType(ContentType.WORKBOOK).withPath("razisg"),
                    new ContentPathMap().withContentType(ContentType.WORKBOOK).withPath("emv"),
                    new ContentPathMap().withContentType(ContentType.WORKBOOK).withPath("zohmnrxxbs"),
                    new ContentPathMap().withContentType(ContentType.WORKBOOK).withPath("inhmdptys")));
        model = BinaryData.fromObject(model).toObject(Repository.class);
        Assertions.assertEquals("acigel", model.url());
        Assertions.assertEquals("hdbvqvwzkjop", model.branch());
        Assertions.assertEquals("eonrlkwzdqybxce", model.displayUrl());
        Assertions.assertEquals("xcptsoqfyiaseqc", model.deploymentLogsUrl());
        Assertions.assertEquals(ContentType.WORKBOOK, model.pathMapping().get(0).contentType());
        Assertions.assertEquals("razisg", model.pathMapping().get(0).path());
    }
}
