// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.securityinsights.fluent.models.OperationInner;
import com.azure.resourcemanager.securityinsights.models.OperationDisplay;
import com.azure.resourcemanager.securityinsights.models.OperationsList;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class OperationsListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationsList model = BinaryData.fromString(
            "{\"nextLink\":\"ylkvecjuj\",\"value\":[{\"display\":{\"description\":\"adyedmzrgjfok\",\"operation\":\"bnoit\",\"provider\":\"pz\",\"resource\":\"gdgxvcoqraswug\"},\"name\":\"pqitwe\",\"origin\":\"l\",\"isDataAction\":true},{\"display\":{\"description\":\"uhz\",\"operation\":\"aq\",\"provider\":\"ltcoqc\",\"resource\":\"pdsxzakuejkm\"},\"name\":\"iztjof\",\"origin\":\"vovjufycsjmlbe\",\"isDataAction\":false},{\"display\":{\"description\":\"riuxegthortuda\",\"operation\":\"pjfe\",\"provider\":\"erppt\",\"resource\":\"gqnzm\"},\"name\":\"iilialwc\",\"origin\":\"ckbbcc\",\"isDataAction\":false}]}")
            .toObject(OperationsList.class);
        Assertions.assertEquals("adyedmzrgjfok", model.value().get(0).display().description());
        Assertions.assertEquals("bnoit", model.value().get(0).display().operation());
        Assertions.assertEquals("pz", model.value().get(0).display().provider());
        Assertions.assertEquals("gdgxvcoqraswug", model.value().get(0).display().resource());
        Assertions.assertEquals("pqitwe", model.value().get(0).name());
        Assertions.assertEquals("l", model.value().get(0).origin());
        Assertions.assertEquals(true, model.value().get(0).isDataAction());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationsList model
            = new OperationsList()
                .withValue(
                    Arrays.asList(
                        new OperationInner()
                            .withDisplay(new OperationDisplay().withDescription("adyedmzrgjfok")
                                .withOperation("bnoit")
                                .withProvider("pz")
                                .withResource("gdgxvcoqraswug"))
                            .withName("pqitwe")
                            .withOrigin("l")
                            .withIsDataAction(true),
                        new OperationInner()
                            .withDisplay(new OperationDisplay().withDescription("uhz")
                                .withOperation("aq")
                                .withProvider("ltcoqc")
                                .withResource("pdsxzakuejkm"))
                            .withName("iztjof")
                            .withOrigin("vovjufycsjmlbe")
                            .withIsDataAction(false),
                        new OperationInner()
                            .withDisplay(new OperationDisplay().withDescription("riuxegthortuda")
                                .withOperation("pjfe")
                                .withProvider("erppt")
                                .withResource("gqnzm"))
                            .withName("iilialwc")
                            .withOrigin("ckbbcc")
                            .withIsDataAction(false)));
        model = BinaryData.fromObject(model).toObject(OperationsList.class);
        Assertions.assertEquals("adyedmzrgjfok", model.value().get(0).display().description());
        Assertions.assertEquals("bnoit", model.value().get(0).display().operation());
        Assertions.assertEquals("pz", model.value().get(0).display().provider());
        Assertions.assertEquals("gdgxvcoqraswug", model.value().get(0).display().resource());
        Assertions.assertEquals("pqitwe", model.value().get(0).name());
        Assertions.assertEquals("l", model.value().get(0).origin());
        Assertions.assertEquals(true, model.value().get(0).isDataAction());
    }
}
