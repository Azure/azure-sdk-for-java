// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.securityinsights.fluent.models.BookmarkInner;
import com.azure.resourcemanager.securityinsights.models.IncidentInfo;
import com.azure.resourcemanager.securityinsights.models.IncidentSeverity;
import com.azure.resourcemanager.securityinsights.models.UserInfo;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;

public final class BookmarkInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BookmarkInner model = BinaryData.fromString(
            "{\"properties\":{\"created\":\"2021-07-20T05:11Z\",\"createdBy\":{\"email\":\"jtjaodxobnbdxkq\",\"name\":\"okaj\",\"objectId\":\"c1a4425e-086a-4b66-9aee-d404f04561ab\"},\"displayName\":\"npime\",\"labels\":[\"txgcpodgmaajr\",\"vdjwzrlovm\"],\"notes\":\"whijcoejctbza\",\"query\":\"s\",\"queryResult\":\"y\",\"updated\":\"2021-02-18T20:34:43Z\",\"updatedBy\":{\"email\":\"k\",\"name\":\"kdkexxp\",\"objectId\":\"33887cc7-0b9c-4218-a246-cecf4ea52dd4\"},\"eventTime\":\"2021-08-26T06:38:07Z\",\"queryStartTime\":\"2021-05-26T04:34:13Z\",\"queryEndTime\":\"2021-11-01T06:54:57Z\",\"incidentInfo\":{\"incidentId\":\"pg\",\"severity\":\"High\",\"title\":\"c\",\"relationName\":\"xhvpmoue\"}},\"etag\":\"dzxibqeojnxqbzvd\",\"id\":\"t\",\"name\":\"ndei\",\"type\":\"btwnpzaoqvuhrhcf\"}")
            .toObject(BookmarkInner.class);
        Assertions.assertEquals("dzxibqeojnxqbzvd", model.etag());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-20T05:11Z"), model.created());
        Assertions.assertEquals(UUID.fromString("c1a4425e-086a-4b66-9aee-d404f04561ab"), model.createdBy().objectId());
        Assertions.assertEquals("npime", model.displayName());
        Assertions.assertEquals("txgcpodgmaajr", model.labels().get(0));
        Assertions.assertEquals("whijcoejctbza", model.notes());
        Assertions.assertEquals("s", model.query());
        Assertions.assertEquals("y", model.queryResult());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-18T20:34:43Z"), model.updated());
        Assertions.assertEquals(UUID.fromString("33887cc7-0b9c-4218-a246-cecf4ea52dd4"), model.updatedBy().objectId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-26T06:38:07Z"), model.eventTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-26T04:34:13Z"), model.queryStartTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-01T06:54:57Z"), model.queryEndTime());
        Assertions.assertEquals("pg", model.incidentInfo().incidentId());
        Assertions.assertEquals(IncidentSeverity.HIGH, model.incidentInfo().severity());
        Assertions.assertEquals("c", model.incidentInfo().title());
        Assertions.assertEquals("xhvpmoue", model.incidentInfo().relationName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BookmarkInner model = new BookmarkInner().withEtag("dzxibqeojnxqbzvd")
            .withCreated(OffsetDateTime.parse("2021-07-20T05:11Z"))
            .withCreatedBy(new UserInfo().withObjectId(UUID.fromString("c1a4425e-086a-4b66-9aee-d404f04561ab")))
            .withDisplayName("npime")
            .withLabels(Arrays.asList("txgcpodgmaajr", "vdjwzrlovm"))
            .withNotes("whijcoejctbza")
            .withQuery("s")
            .withQueryResult("y")
            .withUpdated(OffsetDateTime.parse("2021-02-18T20:34:43Z"))
            .withUpdatedBy(new UserInfo().withObjectId(UUID.fromString("33887cc7-0b9c-4218-a246-cecf4ea52dd4")))
            .withEventTime(OffsetDateTime.parse("2021-08-26T06:38:07Z"))
            .withQueryStartTime(OffsetDateTime.parse("2021-05-26T04:34:13Z"))
            .withQueryEndTime(OffsetDateTime.parse("2021-11-01T06:54:57Z"))
            .withIncidentInfo(new IncidentInfo().withIncidentId("pg")
                .withSeverity(IncidentSeverity.HIGH)
                .withTitle("c")
                .withRelationName("xhvpmoue"));
        model = BinaryData.fromObject(model).toObject(BookmarkInner.class);
        Assertions.assertEquals("dzxibqeojnxqbzvd", model.etag());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-20T05:11Z"), model.created());
        Assertions.assertEquals(UUID.fromString("c1a4425e-086a-4b66-9aee-d404f04561ab"), model.createdBy().objectId());
        Assertions.assertEquals("npime", model.displayName());
        Assertions.assertEquals("txgcpodgmaajr", model.labels().get(0));
        Assertions.assertEquals("whijcoejctbza", model.notes());
        Assertions.assertEquals("s", model.query());
        Assertions.assertEquals("y", model.queryResult());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-18T20:34:43Z"), model.updated());
        Assertions.assertEquals(UUID.fromString("33887cc7-0b9c-4218-a246-cecf4ea52dd4"), model.updatedBy().objectId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-26T06:38:07Z"), model.eventTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-26T04:34:13Z"), model.queryStartTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-01T06:54:57Z"), model.queryEndTime());
        Assertions.assertEquals("pg", model.incidentInfo().incidentId());
        Assertions.assertEquals(IncidentSeverity.HIGH, model.incidentInfo().severity());
        Assertions.assertEquals("c", model.incidentInfo().title());
        Assertions.assertEquals("xhvpmoue", model.incidentInfo().relationName());
    }
}
