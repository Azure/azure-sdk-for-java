// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.securityinsights.fluent.models.TIDataConnectorProperties;
import com.azure.resourcemanager.securityinsights.models.DataTypeState;
import com.azure.resourcemanager.securityinsights.models.TIDataConnectorDataTypes;
import com.azure.resourcemanager.securityinsights.models.TIDataConnectorDataTypesIndicators;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class TIDataConnectorPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TIDataConnectorProperties model = BinaryData.fromString(
            "{\"tipLookbackPeriod\":\"2020-12-26T17:04:35Z\",\"dataTypes\":{\"indicators\":{\"state\":\"Disabled\"}},\"tenantId\":\"wliso\"}")
            .toObject(TIDataConnectorProperties.class);
        Assertions.assertEquals("wliso", model.tenantId());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-26T17:04:35Z"), model.tipLookbackPeriod());
        Assertions.assertEquals(DataTypeState.DISABLED, model.dataTypes().indicators().state());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TIDataConnectorProperties model = new TIDataConnectorProperties().withTenantId("wliso")
            .withTipLookbackPeriod(OffsetDateTime.parse("2020-12-26T17:04:35Z"))
            .withDataTypes(new TIDataConnectorDataTypes()
                .withIndicators(new TIDataConnectorDataTypesIndicators().withState(DataTypeState.DISABLED)));
        model = BinaryData.fromObject(model).toObject(TIDataConnectorProperties.class);
        Assertions.assertEquals("wliso", model.tenantId());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-26T17:04:35Z"), model.tipLookbackPeriod());
        Assertions.assertEquals(DataTypeState.DISABLED, model.dataTypes().indicators().state());
    }
}
