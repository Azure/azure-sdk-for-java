// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.securityinsights.models.EntityEdges;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class EntityEdgesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        EntityEdges model = BinaryData.fromString(
            "{\"targetEntityId\":\"eburu\",\"additionalData\":{\"l\":\"dataovsm\",\"oefki\":\"datawabm\",\"qujmqlgkf\":\"datarvtp\",\"tujitcjedft\":\"datatndoaongbjc\"}}")
            .toObject(EntityEdges.class);
        Assertions.assertEquals("eburu", model.targetEntityId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        EntityEdges model = new EntityEdges().withTargetEntityId("eburu")
            .withAdditionalData(
                mapOf("l", "dataovsm", "oefki", "datawabm", "qujmqlgkf", "datarvtp", "tujitcjedft", "datatndoaongbjc"));
        model = BinaryData.fromObject(model).toObject(EntityEdges.class);
        Assertions.assertEquals("eburu", model.targetEntityId());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
