// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.securityinsights.models.AutomationRuleCondition;
import com.azure.resourcemanager.securityinsights.models.AutomationRuleTriggeringLogic;
import com.azure.resourcemanager.securityinsights.models.TriggersOn;
import com.azure.resourcemanager.securityinsights.models.TriggersWhen;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AutomationRuleTriggeringLogicTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AutomationRuleTriggeringLogic model = BinaryData.fromString(
            "{\"isEnabled\":false,\"expirationTimeUtc\":\"2021-07-12T14:06:09Z\",\"triggersOn\":\"Alerts\",\"triggersWhen\":\"Created\",\"conditions\":[{\"conditionType\":\"AutomationRuleCondition\"}]}")
            .toObject(AutomationRuleTriggeringLogic.class);
        Assertions.assertEquals(false, model.isEnabled());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-12T14:06:09Z"), model.expirationTimeUtc());
        Assertions.assertEquals(TriggersOn.ALERTS, model.triggersOn());
        Assertions.assertEquals(TriggersWhen.CREATED, model.triggersWhen());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AutomationRuleTriggeringLogic model = new AutomationRuleTriggeringLogic().withIsEnabled(false)
            .withExpirationTimeUtc(OffsetDateTime.parse("2021-07-12T14:06:09Z"))
            .withTriggersOn(TriggersOn.ALERTS)
            .withTriggersWhen(TriggersWhen.CREATED)
            .withConditions(Arrays.asList(new AutomationRuleCondition()));
        model = BinaryData.fromObject(model).toObject(AutomationRuleTriggeringLogic.class);
        Assertions.assertEquals(false, model.isEnabled());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-12T14:06:09Z"), model.expirationTimeUtc());
        Assertions.assertEquals(TriggersOn.ALERTS, model.triggersOn());
        Assertions.assertEquals(TriggersWhen.CREATED, model.triggersWhen());
    }
}
