// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.securityinsights.models.IncidentClassification;
import com.azure.resourcemanager.securityinsights.models.IncidentClassificationReason;
import com.azure.resourcemanager.securityinsights.models.IncidentLabel;
import com.azure.resourcemanager.securityinsights.models.IncidentOwnerInfo;
import com.azure.resourcemanager.securityinsights.models.IncidentPropertiesAction;
import com.azure.resourcemanager.securityinsights.models.IncidentSeverity;
import com.azure.resourcemanager.securityinsights.models.IncidentStatus;
import com.azure.resourcemanager.securityinsights.models.OwnerType;
import java.util.Arrays;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;

public final class IncidentPropertiesActionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IncidentPropertiesAction model = BinaryData.fromString(
            "{\"severity\":\"Informational\",\"status\":\"Closed\",\"classification\":\"FalsePositive\",\"classificationReason\":\"IncorrectAlertLogic\",\"classificationComment\":\"vbiiftksdwgdnk\",\"owner\":{\"email\":\"mwdhcebuvczldbg\",\"assignedTo\":\"outbaaqgzeka\",\"objectId\":\"5d0e32ba-0dd7-4dd0-9914-2cc1c138c74e\",\"userPrincipalName\":\"yzgsnorbjgmnz\",\"ownerType\":\"User\"},\"labels\":[{\"labelName\":\"rxkhlob\",\"labelType\":\"AutoAssigned\"},{\"labelName\":\"bhvhdiqay\",\"labelType\":\"User\"},{\"labelName\":\"iyu\",\"labelType\":\"User\"}]}")
            .toObject(IncidentPropertiesAction.class);
        Assertions.assertEquals(IncidentSeverity.INFORMATIONAL, model.severity());
        Assertions.assertEquals(IncidentStatus.CLOSED, model.status());
        Assertions.assertEquals(IncidentClassification.FALSE_POSITIVE, model.classification());
        Assertions.assertEquals(IncidentClassificationReason.INCORRECT_ALERT_LOGIC, model.classificationReason());
        Assertions.assertEquals("vbiiftksdwgdnk", model.classificationComment());
        Assertions.assertEquals("mwdhcebuvczldbg", model.owner().email());
        Assertions.assertEquals("outbaaqgzeka", model.owner().assignedTo());
        Assertions.assertEquals(UUID.fromString("5d0e32ba-0dd7-4dd0-9914-2cc1c138c74e"), model.owner().objectId());
        Assertions.assertEquals("yzgsnorbjgmnz", model.owner().userPrincipalName());
        Assertions.assertEquals(OwnerType.USER, model.owner().ownerType());
        Assertions.assertEquals("rxkhlob", model.labels().get(0).labelName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IncidentPropertiesAction model = new IncidentPropertiesAction().withSeverity(IncidentSeverity.INFORMATIONAL)
            .withStatus(IncidentStatus.CLOSED)
            .withClassification(IncidentClassification.FALSE_POSITIVE)
            .withClassificationReason(IncidentClassificationReason.INCORRECT_ALERT_LOGIC)
            .withClassificationComment("vbiiftksdwgdnk")
            .withOwner(new IncidentOwnerInfo().withEmail("mwdhcebuvczldbg")
                .withAssignedTo("outbaaqgzeka")
                .withObjectId(UUID.fromString("5d0e32ba-0dd7-4dd0-9914-2cc1c138c74e"))
                .withUserPrincipalName("yzgsnorbjgmnz")
                .withOwnerType(OwnerType.USER))
            .withLabels(Arrays.asList(new IncidentLabel().withLabelName("rxkhlob"),
                new IncidentLabel().withLabelName("bhvhdiqay"), new IncidentLabel().withLabelName("iyu")));
        model = BinaryData.fromObject(model).toObject(IncidentPropertiesAction.class);
        Assertions.assertEquals(IncidentSeverity.INFORMATIONAL, model.severity());
        Assertions.assertEquals(IncidentStatus.CLOSED, model.status());
        Assertions.assertEquals(IncidentClassification.FALSE_POSITIVE, model.classification());
        Assertions.assertEquals(IncidentClassificationReason.INCORRECT_ALERT_LOGIC, model.classificationReason());
        Assertions.assertEquals("vbiiftksdwgdnk", model.classificationComment());
        Assertions.assertEquals("mwdhcebuvczldbg", model.owner().email());
        Assertions.assertEquals("outbaaqgzeka", model.owner().assignedTo());
        Assertions.assertEquals(UUID.fromString("5d0e32ba-0dd7-4dd0-9914-2cc1c138c74e"), model.owner().objectId());
        Assertions.assertEquals("yzgsnorbjgmnz", model.owner().userPrincipalName());
        Assertions.assertEquals(OwnerType.USER, model.owner().ownerType());
        Assertions.assertEquals("rxkhlob", model.labels().get(0).labelName());
    }
}
