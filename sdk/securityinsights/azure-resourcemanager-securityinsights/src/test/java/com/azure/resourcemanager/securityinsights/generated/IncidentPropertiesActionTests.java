// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.securityinsights.models.IncidentClassification;
import com.azure.resourcemanager.securityinsights.models.IncidentClassificationReason;
import com.azure.resourcemanager.securityinsights.models.IncidentLabel;
import com.azure.resourcemanager.securityinsights.models.IncidentOwnerInfo;
import com.azure.resourcemanager.securityinsights.models.IncidentPropertiesAction;
import com.azure.resourcemanager.securityinsights.models.IncidentSeverity;
import com.azure.resourcemanager.securityinsights.models.IncidentStatus;
import com.azure.resourcemanager.securityinsights.models.OwnerType;
import java.util.Arrays;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;

public final class IncidentPropertiesActionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IncidentPropertiesAction model = BinaryData.fromString(
            "{\"severity\":\"Low\",\"status\":\"Closed\",\"classification\":\"FalsePositive\",\"classificationReason\":\"SuspiciousButExpected\",\"classificationComment\":\"rddga\",\"owner\":{\"email\":\"hiosrsjuiv\",\"assignedTo\":\"disyirnxz\",\"objectId\":\"1947767a-4bde-49e4-bfcc-d92753ab77d6\",\"userPrincipalName\":\"exrxzbujrtrhq\",\"ownerType\":\"Group\"},\"labels\":[{\"labelName\":\"khgn\",\"labelType\":\"AutoAssigned\"}]}")
            .toObject(IncidentPropertiesAction.class);
        Assertions.assertEquals(IncidentSeverity.LOW, model.severity());
        Assertions.assertEquals(IncidentStatus.CLOSED, model.status());
        Assertions.assertEquals(IncidentClassification.FALSE_POSITIVE, model.classification());
        Assertions.assertEquals(IncidentClassificationReason.SUSPICIOUS_BUT_EXPECTED, model.classificationReason());
        Assertions.assertEquals("rddga", model.classificationComment());
        Assertions.assertEquals("hiosrsjuiv", model.owner().email());
        Assertions.assertEquals("disyirnxz", model.owner().assignedTo());
        Assertions.assertEquals(UUID.fromString("1947767a-4bde-49e4-bfcc-d92753ab77d6"), model.owner().objectId());
        Assertions.assertEquals("exrxzbujrtrhq", model.owner().userPrincipalName());
        Assertions.assertEquals(OwnerType.GROUP, model.owner().ownerType());
        Assertions.assertEquals("khgn", model.labels().get(0).labelName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IncidentPropertiesAction model = new IncidentPropertiesAction().withSeverity(IncidentSeverity.LOW)
            .withStatus(IncidentStatus.CLOSED)
            .withClassification(IncidentClassification.FALSE_POSITIVE)
            .withClassificationReason(IncidentClassificationReason.SUSPICIOUS_BUT_EXPECTED)
            .withClassificationComment("rddga")
            .withOwner(new IncidentOwnerInfo().withEmail("hiosrsjuiv")
                .withAssignedTo("disyirnxz")
                .withObjectId(UUID.fromString("1947767a-4bde-49e4-bfcc-d92753ab77d6"))
                .withUserPrincipalName("exrxzbujrtrhq")
                .withOwnerType(OwnerType.GROUP))
            .withLabels(Arrays.asList(new IncidentLabel().withLabelName("khgn")));
        model = BinaryData.fromObject(model).toObject(IncidentPropertiesAction.class);
        Assertions.assertEquals(IncidentSeverity.LOW, model.severity());
        Assertions.assertEquals(IncidentStatus.CLOSED, model.status());
        Assertions.assertEquals(IncidentClassification.FALSE_POSITIVE, model.classification());
        Assertions.assertEquals(IncidentClassificationReason.SUSPICIOUS_BUT_EXPECTED, model.classificationReason());
        Assertions.assertEquals("rddga", model.classificationComment());
        Assertions.assertEquals("hiosrsjuiv", model.owner().email());
        Assertions.assertEquals("disyirnxz", model.owner().assignedTo());
        Assertions.assertEquals(UUID.fromString("1947767a-4bde-49e4-bfcc-d92753ab77d6"), model.owner().objectId());
        Assertions.assertEquals("exrxzbujrtrhq", model.owner().userPrincipalName());
        Assertions.assertEquals(OwnerType.GROUP, model.owner().ownerType());
        Assertions.assertEquals("khgn", model.labels().get(0).labelName());
    }
}
