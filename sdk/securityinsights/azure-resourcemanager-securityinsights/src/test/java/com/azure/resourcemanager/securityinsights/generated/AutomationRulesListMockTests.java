// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.securityinsights.SecurityInsightsManager;
import com.azure.resourcemanager.securityinsights.models.AutomationRule;
import com.azure.resourcemanager.securityinsights.models.TriggersOn;
import com.azure.resourcemanager.securityinsights.models.TriggersWhen;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AutomationRulesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"displayName\":\"jkgqxnhmbkez\",\"order\":1006468867,\"triggeringLogic\":{\"isEnabled\":false,\"expirationTimeUtc\":\"2021-09-27T18:55:36Z\",\"triggersOn\":\"Alerts\",\"triggersWhen\":\"Created\",\"conditions\":[{\"conditionType\":\"AutomationRuleCondition\"},{\"conditionType\":\"AutomationRuleCondition\"},{\"conditionType\":\"AutomationRuleCondition\"},{\"conditionType\":\"AutomationRuleCondition\"}]},\"actions\":[{\"actionType\":\"AutomationRuleAction\",\"order\":1703232234},{\"actionType\":\"AutomationRuleAction\",\"order\":2077139001},{\"actionType\":\"AutomationRuleAction\",\"order\":1985576592}],\"lastModifiedTimeUtc\":\"2021-06-09T08:46Z\",\"createdTimeUtc\":\"2021-10-28T20:38:38Z\",\"lastModifiedBy\":{\"email\":\"aawxwfeka\",\"name\":\"rrqmbzmqk\",\"objectId\":\"fbaef790-263f-44ce-ad78-26456bc6dacc\",\"userPrincipalName\":\"bnxwbjsidbirkf\"},\"createdBy\":{\"email\":\"okdgoge\",\"name\":\"jymrhbg\",\"objectId\":\"2c270371-966a-4d29-a522-f6250fd085c2\",\"userPrincipalName\":\"zkye\"}},\"etag\":\"f\",\"id\":\"hhhqosm\",\"name\":\"fjkutycyarnroo\",\"type\":\"g\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityInsightsManager manager = SecurityInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<AutomationRule> response
            = manager.automationRules().list("xxahmrnadzyqegxy", "vpinbmhwbj", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("f", response.iterator().next().etag());
        Assertions.assertEquals("jkgqxnhmbkez", response.iterator().next().displayName());
        Assertions.assertEquals(1006468867, response.iterator().next().order());
        Assertions.assertEquals(false, response.iterator().next().triggeringLogic().isEnabled());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-27T18:55:36Z"),
            response.iterator().next().triggeringLogic().expirationTimeUtc());
        Assertions.assertEquals(TriggersOn.ALERTS, response.iterator().next().triggeringLogic().triggersOn());
        Assertions.assertEquals(TriggersWhen.CREATED, response.iterator().next().triggeringLogic().triggersWhen());
        Assertions.assertEquals(1703232234, response.iterator().next().actions().get(0).order());
    }
}
