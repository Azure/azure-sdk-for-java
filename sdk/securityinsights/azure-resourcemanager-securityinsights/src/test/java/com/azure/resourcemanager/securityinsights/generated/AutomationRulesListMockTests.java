// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.securityinsights.SecurityInsightsManager;
import com.azure.resourcemanager.securityinsights.models.AutomationRule;
import com.azure.resourcemanager.securityinsights.models.TriggersOn;
import com.azure.resourcemanager.securityinsights.models.TriggersWhen;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AutomationRulesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"displayName\":\"kb\",\"order\":1640013792,\"triggeringLogic\":{\"isEnabled\":false,\"expirationTimeUtc\":\"2021-07-27T03:57:42Z\",\"triggersOn\":\"Alerts\",\"triggersWhen\":\"Created\",\"conditions\":[{\"conditionType\":\"AutomationRuleCondition\"}]},\"actions\":[{\"actionType\":\"AutomationRuleAction\",\"order\":146997851},{\"actionType\":\"AutomationRuleAction\",\"order\":413470744}],\"lastModifiedTimeUtc\":\"2021-02-14T08:11:01Z\",\"createdTimeUtc\":\"2021-11-22T05:07:11Z\",\"lastModifiedBy\":{\"email\":\"kqgvxrktj\",\"name\":\"igcwtspanbqxase\",\"objectId\":\"1d61855a-23e9-4f69-9dbc-30e5e8abcccd\",\"userPrincipalName\":\"efpgeedyyb\"},\"createdBy\":{\"email\":\"olaemwcgi\",\"name\":\"rima\",\"objectId\":\"547f0ca7-da8f-4705-a669-67e273f9452f\",\"userPrincipalName\":\"qqlonbzaowcah\"}},\"etag\":\"m\",\"id\":\"smihrijezbfsjwfc\",\"name\":\"glkvbgukbsv\",\"type\":\"wyo\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityInsightsManager manager = SecurityInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<AutomationRule> response
            = manager.automationRules().list("btqhvmmniiqyhol", "jn", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("m", response.iterator().next().etag());
        Assertions.assertEquals("kb", response.iterator().next().displayName());
        Assertions.assertEquals(1640013792, response.iterator().next().order());
        Assertions.assertEquals(false, response.iterator().next().triggeringLogic().isEnabled());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-27T03:57:42Z"),
            response.iterator().next().triggeringLogic().expirationTimeUtc());
        Assertions.assertEquals(TriggersOn.ALERTS, response.iterator().next().triggeringLogic().triggersOn());
        Assertions.assertEquals(TriggersWhen.CREATED, response.iterator().next().triggeringLogic().triggersWhen());
        Assertions.assertEquals(146997851, response.iterator().next().actions().get(0).order());
    }
}
