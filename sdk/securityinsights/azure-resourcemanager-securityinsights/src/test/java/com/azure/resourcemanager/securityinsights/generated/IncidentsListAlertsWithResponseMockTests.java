// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.securityinsights.SecurityInsightsManager;
import com.azure.resourcemanager.securityinsights.models.AlertSeverity;
import com.azure.resourcemanager.securityinsights.models.IncidentAlertList;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class IncidentsListAlertsWithResponseMockTests {
    @Test
    public void testListAlertsWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"kind\":\"SecurityAlert\",\"properties\":{\"alertDisplayName\":\"slpkcvmwfauxxep\",\"alertType\":\"wbormcqmi\",\"compromisedEntity\":\"ijqpkzfbojxjmcs\",\"confidenceLevel\":\"High\",\"confidenceReasons\":[{},{},{},{}],\"confidenceScore\":46.701227253553256,\"confidenceScoreStatus\":\"NotFinal\",\"description\":\"kwywzwofalic\",\"endTimeUtc\":\"2021-09-02T12:29:07Z\",\"intent\":\"PrivilegeEscalation\",\"providerAlertId\":\"tamtyv\",\"processingEndTime\":\"2021-02-15T11:04:24Z\",\"productComponentName\":\"rwzawnvs\",\"productName\":\"fhzag\",\"productVersion\":\"vhycvdimwrzregzg\",\"remediationSteps\":[\"utrwpweryekz\",\"dhme\",\"tta\",\"jyosxwwh\"],\"severity\":\"Informational\",\"startTimeUtc\":\"2021-06-06T09:18:05Z\",\"status\":\"Dismissed\",\"systemAlertId\":\"dpmiljpn\",\"tactics\":[\"Discovery\",\"ResourceDevelopment\"],\"timeGenerated\":\"2021-10-23T23:22:48Z\",\"vendorName\":\"zsauzp\",\"alertLink\":\"xee\",\"resourceIdentifiers\":[\"dataiqhzlr\",\"datayme\",\"dataxls\",\"dataihmxrfdsajredn\"],\"additionalData\":{\"vuafpwzyifr\":\"datashtuwgm\",\"gzdyimsfayorp\":\"datagwltxeqip\",\"sl\":\"dataavkjog\"},\"friendlyName\":\"nsmjkwynqxaekqs\"},\"id\":\"vwjtqpkevmyltjc\",\"name\":\"spxklu\",\"type\":\"cclfgxannn\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityInsightsManager manager = SecurityInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        IncidentAlertList response = manager.incidents()
            .listAlertsWithResponse("v", "atbwbqam", "e", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(AlertSeverity.INFORMATIONAL, response.value().get(0).severity());
    }
}
