// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.securityinsights.SecurityInsightsManager;
import com.azure.resourcemanager.securityinsights.models.AlertSeverity;
import com.azure.resourcemanager.securityinsights.models.IncidentAlertList;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class IncidentsListAlertsWithResponseMockTests {
    @Test
    public void testListAlertsWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"kind\":\"SecurityAlert\",\"properties\":{\"alertDisplayName\":\"armhpwbuklv\",\"alertType\":\"fasgtlvhqpo\",\"compromisedEntity\":\"osjaemc\",\"confidenceLevel\":\"Unknown\",\"confidenceReasons\":[{}],\"confidenceScore\":48.50701351769373,\"confidenceScoreStatus\":\"NotApplicable\",\"description\":\"okjyghzt\",\"endTimeUtc\":\"2021-02-20T19:49:56Z\",\"intent\":\"Collection\",\"providerAlertId\":\"pcflcezswwvwift\",\"processingEndTime\":\"2021-09-20T01:40:05Z\",\"productComponentName\":\"bfpfhruptsyq\",\"productName\":\"nqswxdowumxquk\",\"productVersion\":\"diohclqddn\",\"remediationSteps\":[\"nebweddpnyzcwyj\"],\"severity\":\"Informational\",\"startTimeUtc\":\"2021-10-18T18:48:14Z\",\"status\":\"InProgress\",\"systemAlertId\":\"abnwvpa\",\"tactics\":[\"Exfiltration\",\"Persistence\",\"CommandAndControl\",\"InhibitResponseFunction\"],\"timeGenerated\":\"2021-02-17T14:22:48Z\",\"vendorName\":\"fddofxnf\",\"alertLink\":\"jyyrqaedw\",\"resourceIdentifiers\":[\"datacytjgoea\",\"dataokrwfmihw\",\"dataadhed\",\"datafobdczvothm\"],\"additionalData\":{\"scmyhrhjvszf\":\"dataaozvbwfcnjhbpoel\"},\"friendlyName\":\"okndwpppqwojoevz\"},\"id\":\"fytdxmly\",\"name\":\"zlyvapbkrbuog\",\"type\":\"tdlt\"},{\"kind\":\"SecurityAlert\",\"properties\":{\"alertDisplayName\":\"haizijv\",\"alertType\":\"lz\",\"compromisedEntity\":\"hlpsftqkrvmhv\",\"confidenceLevel\":\"Low\",\"confidenceReasons\":[{},{},{},{}],\"confidenceScore\":9.038132234601747,\"confidenceScoreStatus\":\"NotApplicable\",\"description\":\"pnhmzy\",\"endTimeUtc\":\"2021-03-16T04:26:47Z\",\"intent\":\"Exploitation\",\"providerAlertId\":\"vrntfk\",\"processingEndTime\":\"2021-04-15T06:37:36Z\",\"productComponentName\":\"ycsyotctkh\",\"productName\":\"fsatvcsx\",\"productVersion\":\"hnmizhvprhqq\",\"remediationSteps\":[\"blehhkplo\",\"zgottaksadzighmm\",\"b\"],\"severity\":\"Low\",\"startTimeUtc\":\"2021-08-03T02:57:38Z\",\"status\":\"New\",\"systemAlertId\":\"raabeurdeewlsuxp\",\"tactics\":[\"DefenseEvasion\",\"Impact\",\"PreAttack\",\"Execution\"],\"timeGenerated\":\"2021-05-25T13:04:18Z\",\"vendorName\":\"zni\",\"alertLink\":\"o\",\"resourceIdentifiers\":[\"dataftaspmcr\"],\"additionalData\":{\"hminuwqxungrobgw\":\"datauftrni\"},\"friendlyName\":\"sxjwdy\"},\"id\":\"xmvzjow\",\"name\":\"ugeerclbltbhpwac\",\"type\":\"yeurjwmv\"},{\"kind\":\"SecurityAlert\",\"properties\":{\"alertDisplayName\":\"vdifkiikg\",\"alertType\":\"uccwme\",\"compromisedEntity\":\"txsytrtexegwmrq\",\"confidenceLevel\":\"Unknown\",\"confidenceReasons\":[{},{},{}],\"confidenceScore\":66.7341506034754,\"confidenceScoreStatus\":\"NotFinal\",\"description\":\"ncindilo\",\"endTimeUtc\":\"2021-02-27T15:18:14Z\",\"intent\":\"DefenseEvasion\",\"providerAlertId\":\"uriarsbcl\",\"processingEndTime\":\"2021-10-06T05:52:34Z\",\"productComponentName\":\"zc\",\"productName\":\"jxizbaxdygzk\",\"productVersion\":\"xfexwacy\",\"remediationSteps\":[\"lxppd\",\"dzkf\",\"vuiiu\",\"ibfkcjytq\"],\"severity\":\"High\",\"startTimeUtc\":\"2021-05-13T00:50:27Z\",\"status\":\"Dismissed\",\"systemAlertId\":\"opvnopmot\",\"tactics\":[\"ImpairProcessControl\",\"Execution\",\"CommandAndControl\",\"Reconnaissance\"],\"timeGenerated\":\"2021-02-19T14:59:55Z\",\"vendorName\":\"a\",\"alertLink\":\"fbkmvldzmxojzsv\",\"resourceIdentifiers\":[\"datagbqkvhyejthgeecb\",\"dataergwlckihbam\",\"dataqsokknpug\"],\"additionalData\":{\"x\":\"datadizcrj\",\"ksykkbxktxbbwlm\":\"dataujzkcsexgkrs\"},\"friendlyName\":\"zokn\"},\"id\":\"qddlggbq\",\"name\":\"olgzubakdlkv\",\"type\":\"gcmfnsffetpkmixw\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityInsightsManager manager = SecurityInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        IncidentAlertList response = manager.incidents()
            .listAlertsWithResponse("ynbgovazoymdvhhp", "khwwdkatve", "mgkcswzey", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(AlertSeverity.INFORMATIONAL, response.value().get(0).severity());
    }
}
