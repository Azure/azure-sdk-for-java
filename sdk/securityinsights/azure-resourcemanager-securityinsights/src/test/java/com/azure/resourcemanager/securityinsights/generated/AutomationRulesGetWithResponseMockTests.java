// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.securityinsights.SecurityInsightsManager;
import com.azure.resourcemanager.securityinsights.models.AutomationRule;
import com.azure.resourcemanager.securityinsights.models.TriggersOn;
import com.azure.resourcemanager.securityinsights.models.TriggersWhen;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AutomationRulesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"displayName\":\"jxcjrmmuabwib\",\"order\":1982955250,\"triggeringLogic\":{\"isEnabled\":false,\"expirationTimeUtc\":\"2021-03-07T23:51:24Z\",\"triggersOn\":\"Alerts\",\"triggersWhen\":\"Created\",\"conditions\":[{\"conditionType\":\"AutomationRuleCondition\"},{\"conditionType\":\"AutomationRuleCondition\"},{\"conditionType\":\"AutomationRuleCondition\"},{\"conditionType\":\"AutomationRuleCondition\"}]},\"actions\":[{\"actionType\":\"AutomationRuleAction\",\"order\":164118392},{\"actionType\":\"AutomationRuleAction\",\"order\":1088019488},{\"actionType\":\"AutomationRuleAction\",\"order\":1568139443},{\"actionType\":\"AutomationRuleAction\",\"order\":45684576}],\"lastModifiedTimeUtc\":\"2021-02-25T08:15:11Z\",\"createdTimeUtc\":\"2021-05-22T21:47:24Z\",\"lastModifiedBy\":{\"email\":\"neo\",\"name\":\"fkak\",\"objectId\":\"8774f628-4738-484b-88a7-fc5f3f291ba1\",\"userPrincipalName\":\"dt\"},\"createdBy\":{\"email\":\"boclzhzjknyuxgv\",\"name\":\"xpn\",\"objectId\":\"3e3e771d-9638-4784-813a-c986e2b726c0\",\"userPrincipalName\":\"zaamrdixtrekid\"}},\"etag\":\"yskbruff\",\"id\":\"lukkutvlxhrpqhvm\",\"name\":\"lcouqehbhbcdszir\",\"type\":\"randoypmb\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityInsightsManager manager = SecurityInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        AutomationRule response = manager.automationRules()
            .getWithResponse("mbtsuahxsg", "jcmmzrrscub", "wsdrnpxqwodif", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("yskbruff", response.etag());
        Assertions.assertEquals("jxcjrmmuabwib", response.displayName());
        Assertions.assertEquals(1982955250, response.order());
        Assertions.assertEquals(false, response.triggeringLogic().isEnabled());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-07T23:51:24Z"),
            response.triggeringLogic().expirationTimeUtc());
        Assertions.assertEquals(TriggersOn.ALERTS, response.triggeringLogic().triggersOn());
        Assertions.assertEquals(TriggersWhen.CREATED, response.triggeringLogic().triggersWhen());
        Assertions.assertEquals(164118392, response.actions().get(0).order());
    }
}
