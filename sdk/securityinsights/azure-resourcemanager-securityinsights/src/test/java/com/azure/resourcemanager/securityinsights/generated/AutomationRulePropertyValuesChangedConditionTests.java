// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.securityinsights.models.AutomationRulePropertyChangedConditionSupportedChangedType;
import com.azure.resourcemanager.securityinsights.models.AutomationRulePropertyChangedConditionSupportedPropertyType;
import com.azure.resourcemanager.securityinsights.models.AutomationRulePropertyConditionSupportedOperator;
import com.azure.resourcemanager.securityinsights.models.AutomationRulePropertyValuesChangedCondition;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AutomationRulePropertyValuesChangedConditionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AutomationRulePropertyValuesChangedCondition model = BinaryData.fromString(
            "{\"propertyName\":\"IncidentSeverity\",\"changeType\":\"ChangedFrom\",\"operator\":\"NotEquals\",\"propertyValues\":[\"buubpyrowt\",\"oxztfwfqch\"]}")
            .toObject(AutomationRulePropertyValuesChangedCondition.class);
        Assertions.assertEquals(AutomationRulePropertyChangedConditionSupportedPropertyType.INCIDENT_SEVERITY,
            model.propertyName());
        Assertions.assertEquals(AutomationRulePropertyChangedConditionSupportedChangedType.CHANGED_FROM,
            model.changeType());
        Assertions.assertEquals(AutomationRulePropertyConditionSupportedOperator.NOT_EQUALS, model.operator());
        Assertions.assertEquals("buubpyrowt", model.propertyValues().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AutomationRulePropertyValuesChangedCondition model = new AutomationRulePropertyValuesChangedCondition()
            .withPropertyName(AutomationRulePropertyChangedConditionSupportedPropertyType.INCIDENT_SEVERITY)
            .withChangeType(AutomationRulePropertyChangedConditionSupportedChangedType.CHANGED_FROM)
            .withOperator(AutomationRulePropertyConditionSupportedOperator.NOT_EQUALS)
            .withPropertyValues(Arrays.asList("buubpyrowt", "oxztfwfqch"));
        model = BinaryData.fromObject(model).toObject(AutomationRulePropertyValuesChangedCondition.class);
        Assertions.assertEquals(AutomationRulePropertyChangedConditionSupportedPropertyType.INCIDENT_SEVERITY,
            model.propertyName());
        Assertions.assertEquals(AutomationRulePropertyChangedConditionSupportedChangedType.CHANGED_FROM,
            model.changeType());
        Assertions.assertEquals(AutomationRulePropertyConditionSupportedOperator.NOT_EQUALS, model.operator());
        Assertions.assertEquals("buubpyrowt", model.propertyValues().get(0));
    }
}
