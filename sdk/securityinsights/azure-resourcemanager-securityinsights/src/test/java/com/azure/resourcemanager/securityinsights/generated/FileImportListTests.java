// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.securityinsights.fluent.models.FileImportInner;
import com.azure.resourcemanager.securityinsights.models.FileFormat;
import com.azure.resourcemanager.securityinsights.models.FileImportContentType;
import com.azure.resourcemanager.securityinsights.models.FileImportList;
import com.azure.resourcemanager.securityinsights.models.FileMetadata;
import com.azure.resourcemanager.securityinsights.models.IngestionMode;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class FileImportListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FileImportList model = BinaryData.fromString(
            "{\"nextLink\":\"sdvlmfwdgzxulucv\",\"value\":[{\"properties\":{\"ingestionMode\":\"IngestAnyValidRecords\",\"contentType\":\"BasicIndicator\",\"createdTimeUTC\":\"2021-04-21T20:41:03Z\",\"errorFile\":{\"fileFormat\":\"CSV\",\"fileName\":\"urisjnhnytxifqj\",\"fileSize\":1170712777,\"fileContentUri\":\"rhublwpcesutrg\",\"deleteStatus\":\"Deleted\"},\"errorsPreview\":[{\"recordIndex\":657567576,\"errorMessages\":[\"oqh\",\"hej\"]},{\"recordIndex\":248529956,\"errorMessages\":[\"nfqn\",\"cypsxjv\",\"oimwkslirc\"]},{\"recordIndex\":772864922,\"errorMessages\":[\"ydfce\",\"cvlhv\",\"gdyftumrtwna\",\"jslb\"]}],\"importFile\":{\"fileFormat\":\"Unspecified\",\"fileName\":\"jgcyztsfmznba\",\"fileSize\":419128665,\"fileContentUri\":\"chqnrnrpxehuwry\",\"deleteStatus\":\"NotDeleted\"},\"ingestedRecordCount\":861432652,\"source\":\"fmviklby\",\"state\":\"Unspecified\",\"totalRecordCount\":172604162,\"validRecordCount\":725495584,\"filesValidUntilTimeUTC\":\"2021-06-15T02:11:05Z\",\"importValidUntilTimeUTC\":\"2021-11-07T23:40:15Z\"},\"id\":\"vdsrhnjiv\",\"name\":\"lvtno\",\"type\":\"qfzgemjdftul\"},{\"properties\":{\"ingestionMode\":\"IngestOnlyIfAllAreValid\",\"contentType\":\"BasicIndicator\",\"createdTimeUTC\":\"2021-04-12T02:20:30Z\",\"errorFile\":{\"fileFormat\":\"CSV\",\"fileName\":\"mczuo\",\"fileSize\":418634069,\"fileContentUri\":\"cwwqiokn\",\"deleteStatus\":\"NotDeleted\"},\"errorsPreview\":[{\"recordIndex\":2132194654,\"errorMessages\":[\"p\",\"jpr\"]},{\"recordIndex\":592293204,\"errorMessages\":[\"zqljyxgtczh\"]},{\"recordIndex\":1722960093,\"errorMessages\":[\"dshmkxmaehvbbx\",\"ripltf\",\"htba\",\"kgxywr\"]},{\"recordIndex\":1619197472,\"errorMessages\":[\"lyhpluodpvruud\"]}],\"importFile\":{\"fileFormat\":\"JSON\",\"fileName\":\"bth\",\"fileSize\":777690092,\"fileContentUri\":\"ktst\",\"deleteStatus\":\"Deleted\"},\"ingestedRecordCount\":318971885,\"source\":\"lzedqbcvhzlhplo\",\"state\":\"FatalError\",\"totalRecordCount\":1774431759,\"validRecordCount\":2085050001,\"filesValidUntilTimeUTC\":\"2021-06-02T22:55:20Z\",\"importValidUntilTimeUTC\":\"2021-04-24T09:11:55Z\"},\"id\":\"lkxt\",\"name\":\"qjfsmlmbtxhw\",\"type\":\"fwsrtawcoezbrhu\"},{\"properties\":{\"ingestionMode\":\"IngestOnlyIfAllAreValid\",\"contentType\":\"StixIndicator\",\"createdTimeUTC\":\"2021-11-07T13:16:26Z\",\"errorFile\":{\"fileFormat\":\"CSV\",\"fileName\":\"okkqfqjbvleo\",\"fileSize\":471659562,\"fileContentUri\":\"uiqtqzfavy\",\"deleteStatus\":\"Unspecified\"},\"errorsPreview\":[{\"recordIndex\":1266667587,\"errorMessages\":[\"euayjkqabqgzsles\"]}],\"importFile\":{\"fileFormat\":\"CSV\",\"fileName\":\"ernntiewdjcvbquw\",\"fileSize\":1678889630,\"fileContentUri\":\"wagohbuffk\",\"deleteStatus\":\"NotDeleted\"},\"ingestedRecordCount\":1538670364,\"source\":\"vvhmxtdrj\",\"state\":\"Invalid\",\"totalRecordCount\":730644177,\"validRecordCount\":658775576,\"filesValidUntilTimeUTC\":\"2021-11-14T08:47:21Z\",\"importValidUntilTimeUTC\":\"2021-06-12T20:57:35Z\"},\"id\":\"zcjznmwcpmgua\",\"name\":\"draufactkah\",\"type\":\"ovajjziuxxps\"}]}")
            .toObject(FileImportList.class);
        Assertions.assertEquals(IngestionMode.INGEST_ANY_VALID_RECORDS, model.value().get(0).ingestionMode());
        Assertions.assertEquals(FileImportContentType.BASIC_INDICATOR, model.value().get(0).contentType());
        Assertions.assertEquals(FileFormat.UNSPECIFIED, model.value().get(0).importFile().fileFormat());
        Assertions.assertEquals("jgcyztsfmznba", model.value().get(0).importFile().fileName());
        Assertions.assertEquals(419128665, model.value().get(0).importFile().fileSize());
        Assertions.assertEquals("fmviklby", model.value().get(0).source());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FileImportList model = new FileImportList().withValue(Arrays.asList(
            new FileImportInner().withIngestionMode(IngestionMode.INGEST_ANY_VALID_RECORDS)
                .withContentType(FileImportContentType.BASIC_INDICATOR)
                .withImportFile(new FileMetadata().withFileFormat(FileFormat.UNSPECIFIED)
                    .withFileName("jgcyztsfmznba")
                    .withFileSize(419128665))
                .withSource("fmviklby"),
            new FileImportInner().withIngestionMode(IngestionMode.INGEST_ONLY_IF_ALL_ARE_VALID)
                .withContentType(FileImportContentType.BASIC_INDICATOR)
                .withImportFile(
                    new FileMetadata().withFileFormat(FileFormat.JSON).withFileName("bth").withFileSize(777690092))
                .withSource("lzedqbcvhzlhplo"),
            new FileImportInner().withIngestionMode(IngestionMode.INGEST_ONLY_IF_ALL_ARE_VALID)
                .withContentType(FileImportContentType.STIX_INDICATOR)
                .withImportFile(new FileMetadata().withFileFormat(FileFormat.CSV)
                    .withFileName("ernntiewdjcvbquw")
                    .withFileSize(1678889630))
                .withSource("vvhmxtdrj")));
        model = BinaryData.fromObject(model).toObject(FileImportList.class);
        Assertions.assertEquals(IngestionMode.INGEST_ANY_VALID_RECORDS, model.value().get(0).ingestionMode());
        Assertions.assertEquals(FileImportContentType.BASIC_INDICATOR, model.value().get(0).contentType());
        Assertions.assertEquals(FileFormat.UNSPECIFIED, model.value().get(0).importFile().fileFormat());
        Assertions.assertEquals("jgcyztsfmznba", model.value().get(0).importFile().fileName());
        Assertions.assertEquals(419128665, model.value().get(0).importFile().fileSize());
        Assertions.assertEquals("fmviklby", model.value().get(0).source());
    }
}
