// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of IpGeodatas. */
public interface IpGeodatas {
    /**
     * Get geodata for a single IP address.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param ipAddress IP address (v4 or v6) to be enriched.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return geodata for a single IP address.
     */
    EnrichmentIpGeodata get(String resourceGroupName, String ipAddress);

    /**
     * Get geodata for a single IP address.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param ipAddress IP address (v4 or v6) to be enriched.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return geodata for a single IP address along with {@link Response}.
     */
    Response<EnrichmentIpGeodata> getWithResponse(String resourceGroupName, String ipAddress, Context context);
}
