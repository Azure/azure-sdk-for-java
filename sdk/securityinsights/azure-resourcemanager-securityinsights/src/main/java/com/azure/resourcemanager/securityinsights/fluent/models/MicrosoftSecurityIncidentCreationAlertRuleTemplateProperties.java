// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.securityinsights.models.AlertRuleTemplateDataSource;
import com.azure.resourcemanager.securityinsights.models.AlertSeverity;
import com.azure.resourcemanager.securityinsights.models.MicrosoftSecurityProductName;
import com.azure.resourcemanager.securityinsights.models.TemplateStatus;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.List;

/**
 * MicrosoftSecurityIncidentCreation rule template properties.
 */
@Fluent
public final class MicrosoftSecurityIncidentCreationAlertRuleTemplateProperties
    implements JsonSerializable<MicrosoftSecurityIncidentCreationAlertRuleTemplateProperties> {
    /*
     * the number of alert rules that were created by this template
     */
    private Integer alertRulesCreatedByTemplateCount;

    /*
     * The time that this alert rule template has been added.
     */
    private OffsetDateTime createdDateUtc;

    /*
     * The time that this alert rule template was last updated.
     */
    private OffsetDateTime lastUpdatedDateUtc;

    /*
     * The description of the alert rule template.
     */
    private String description;

    /*
     * The display name for alert rule template.
     */
    private String displayName;

    /*
     * The required data connectors for this template
     */
    private List<AlertRuleTemplateDataSource> requiredDataConnectors;

    /*
     * The alert rule template status.
     */
    private TemplateStatus status;

    /*
     * the alerts' displayNames on which the cases will be generated
     */
    private List<String> displayNamesFilter;

    /*
     * the alerts' displayNames on which the cases will not be generated
     */
    private List<String> displayNamesExcludeFilter;

    /*
     * The alerts' productName on which the cases will be generated
     */
    private MicrosoftSecurityProductName productFilter;

    /*
     * the alerts' severities on which the cases will be generated
     */
    private List<AlertSeverity> severitiesFilter;

    /**
     * Creates an instance of MicrosoftSecurityIncidentCreationAlertRuleTemplateProperties class.
     */
    public MicrosoftSecurityIncidentCreationAlertRuleTemplateProperties() {
    }

    /**
     * Get the alertRulesCreatedByTemplateCount property: the number of alert rules that were created by this template.
     * 
     * @return the alertRulesCreatedByTemplateCount value.
     */
    public Integer alertRulesCreatedByTemplateCount() {
        return this.alertRulesCreatedByTemplateCount;
    }

    /**
     * Set the alertRulesCreatedByTemplateCount property: the number of alert rules that were created by this template.
     * 
     * @param alertRulesCreatedByTemplateCount the alertRulesCreatedByTemplateCount value to set.
     * @return the MicrosoftSecurityIncidentCreationAlertRuleTemplateProperties object itself.
     */
    public MicrosoftSecurityIncidentCreationAlertRuleTemplateProperties
        withAlertRulesCreatedByTemplateCount(Integer alertRulesCreatedByTemplateCount) {
        this.alertRulesCreatedByTemplateCount = alertRulesCreatedByTemplateCount;
        return this;
    }

    /**
     * Get the createdDateUtc property: The time that this alert rule template has been added.
     * 
     * @return the createdDateUtc value.
     */
    public OffsetDateTime createdDateUtc() {
        return this.createdDateUtc;
    }

    /**
     * Get the lastUpdatedDateUtc property: The time that this alert rule template was last updated.
     * 
     * @return the lastUpdatedDateUtc value.
     */
    public OffsetDateTime lastUpdatedDateUtc() {
        return this.lastUpdatedDateUtc;
    }

    /**
     * Get the description property: The description of the alert rule template.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: The description of the alert rule template.
     * 
     * @param description the description value to set.
     * @return the MicrosoftSecurityIncidentCreationAlertRuleTemplateProperties object itself.
     */
    public MicrosoftSecurityIncidentCreationAlertRuleTemplateProperties withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the displayName property: The display name for alert rule template.
     * 
     * @return the displayName value.
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set the displayName property: The display name for alert rule template.
     * 
     * @param displayName the displayName value to set.
     * @return the MicrosoftSecurityIncidentCreationAlertRuleTemplateProperties object itself.
     */
    public MicrosoftSecurityIncidentCreationAlertRuleTemplateProperties withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the requiredDataConnectors property: The required data connectors for this template.
     * 
     * @return the requiredDataConnectors value.
     */
    public List<AlertRuleTemplateDataSource> requiredDataConnectors() {
        return this.requiredDataConnectors;
    }

    /**
     * Set the requiredDataConnectors property: The required data connectors for this template.
     * 
     * @param requiredDataConnectors the requiredDataConnectors value to set.
     * @return the MicrosoftSecurityIncidentCreationAlertRuleTemplateProperties object itself.
     */
    public MicrosoftSecurityIncidentCreationAlertRuleTemplateProperties
        withRequiredDataConnectors(List<AlertRuleTemplateDataSource> requiredDataConnectors) {
        this.requiredDataConnectors = requiredDataConnectors;
        return this;
    }

    /**
     * Get the status property: The alert rule template status.
     * 
     * @return the status value.
     */
    public TemplateStatus status() {
        return this.status;
    }

    /**
     * Set the status property: The alert rule template status.
     * 
     * @param status the status value to set.
     * @return the MicrosoftSecurityIncidentCreationAlertRuleTemplateProperties object itself.
     */
    public MicrosoftSecurityIncidentCreationAlertRuleTemplateProperties withStatus(TemplateStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Get the displayNamesFilter property: the alerts' displayNames on which the cases will be generated.
     * 
     * @return the displayNamesFilter value.
     */
    public List<String> displayNamesFilter() {
        return this.displayNamesFilter;
    }

    /**
     * Set the displayNamesFilter property: the alerts' displayNames on which the cases will be generated.
     * 
     * @param displayNamesFilter the displayNamesFilter value to set.
     * @return the MicrosoftSecurityIncidentCreationAlertRuleTemplateProperties object itself.
     */
    public MicrosoftSecurityIncidentCreationAlertRuleTemplateProperties
        withDisplayNamesFilter(List<String> displayNamesFilter) {
        this.displayNamesFilter = displayNamesFilter;
        return this;
    }

    /**
     * Get the displayNamesExcludeFilter property: the alerts' displayNames on which the cases will not be generated.
     * 
     * @return the displayNamesExcludeFilter value.
     */
    public List<String> displayNamesExcludeFilter() {
        return this.displayNamesExcludeFilter;
    }

    /**
     * Set the displayNamesExcludeFilter property: the alerts' displayNames on which the cases will not be generated.
     * 
     * @param displayNamesExcludeFilter the displayNamesExcludeFilter value to set.
     * @return the MicrosoftSecurityIncidentCreationAlertRuleTemplateProperties object itself.
     */
    public MicrosoftSecurityIncidentCreationAlertRuleTemplateProperties
        withDisplayNamesExcludeFilter(List<String> displayNamesExcludeFilter) {
        this.displayNamesExcludeFilter = displayNamesExcludeFilter;
        return this;
    }

    /**
     * Get the productFilter property: The alerts' productName on which the cases will be generated.
     * 
     * @return the productFilter value.
     */
    public MicrosoftSecurityProductName productFilter() {
        return this.productFilter;
    }

    /**
     * Set the productFilter property: The alerts' productName on which the cases will be generated.
     * 
     * @param productFilter the productFilter value to set.
     * @return the MicrosoftSecurityIncidentCreationAlertRuleTemplateProperties object itself.
     */
    public MicrosoftSecurityIncidentCreationAlertRuleTemplateProperties
        withProductFilter(MicrosoftSecurityProductName productFilter) {
        this.productFilter = productFilter;
        return this;
    }

    /**
     * Get the severitiesFilter property: the alerts' severities on which the cases will be generated.
     * 
     * @return the severitiesFilter value.
     */
    public List<AlertSeverity> severitiesFilter() {
        return this.severitiesFilter;
    }

    /**
     * Set the severitiesFilter property: the alerts' severities on which the cases will be generated.
     * 
     * @param severitiesFilter the severitiesFilter value to set.
     * @return the MicrosoftSecurityIncidentCreationAlertRuleTemplateProperties object itself.
     */
    public MicrosoftSecurityIncidentCreationAlertRuleTemplateProperties
        withSeveritiesFilter(List<AlertSeverity> severitiesFilter) {
        this.severitiesFilter = severitiesFilter;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (requiredDataConnectors() != null) {
            requiredDataConnectors().forEach(e -> e.validate());
        }
        if (productFilter() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property productFilter in model MicrosoftSecurityIncidentCreationAlertRuleTemplateProperties"));
        }
    }

    private static final ClientLogger LOGGER
        = new ClientLogger(MicrosoftSecurityIncidentCreationAlertRuleTemplateProperties.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("productFilter", this.productFilter == null ? null : this.productFilter.toString());
        jsonWriter.writeNumberField("alertRulesCreatedByTemplateCount", this.alertRulesCreatedByTemplateCount);
        jsonWriter.writeStringField("description", this.description);
        jsonWriter.writeStringField("displayName", this.displayName);
        jsonWriter.writeArrayField("requiredDataConnectors", this.requiredDataConnectors,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("status", this.status == null ? null : this.status.toString());
        jsonWriter.writeArrayField("displayNamesFilter", this.displayNamesFilter,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeArrayField("displayNamesExcludeFilter", this.displayNamesExcludeFilter,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeArrayField("severitiesFilter", this.severitiesFilter,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MicrosoftSecurityIncidentCreationAlertRuleTemplateProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MicrosoftSecurityIncidentCreationAlertRuleTemplateProperties if the JsonReader was
     * pointing to an instance of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the
     * MicrosoftSecurityIncidentCreationAlertRuleTemplateProperties.
     */
    public static MicrosoftSecurityIncidentCreationAlertRuleTemplateProperties fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            MicrosoftSecurityIncidentCreationAlertRuleTemplateProperties deserializedMicrosoftSecurityIncidentCreationAlertRuleTemplateProperties
                = new MicrosoftSecurityIncidentCreationAlertRuleTemplateProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("productFilter".equals(fieldName)) {
                    deserializedMicrosoftSecurityIncidentCreationAlertRuleTemplateProperties.productFilter
                        = MicrosoftSecurityProductName.fromString(reader.getString());
                } else if ("alertRulesCreatedByTemplateCount".equals(fieldName)) {
                    deserializedMicrosoftSecurityIncidentCreationAlertRuleTemplateProperties.alertRulesCreatedByTemplateCount
                        = reader.getNullable(JsonReader::getInt);
                } else if ("createdDateUTC".equals(fieldName)) {
                    deserializedMicrosoftSecurityIncidentCreationAlertRuleTemplateProperties.createdDateUtc = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("lastUpdatedDateUTC".equals(fieldName)) {
                    deserializedMicrosoftSecurityIncidentCreationAlertRuleTemplateProperties.lastUpdatedDateUtc = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("description".equals(fieldName)) {
                    deserializedMicrosoftSecurityIncidentCreationAlertRuleTemplateProperties.description
                        = reader.getString();
                } else if ("displayName".equals(fieldName)) {
                    deserializedMicrosoftSecurityIncidentCreationAlertRuleTemplateProperties.displayName
                        = reader.getString();
                } else if ("requiredDataConnectors".equals(fieldName)) {
                    List<AlertRuleTemplateDataSource> requiredDataConnectors
                        = reader.readArray(reader1 -> AlertRuleTemplateDataSource.fromJson(reader1));
                    deserializedMicrosoftSecurityIncidentCreationAlertRuleTemplateProperties.requiredDataConnectors
                        = requiredDataConnectors;
                } else if ("status".equals(fieldName)) {
                    deserializedMicrosoftSecurityIncidentCreationAlertRuleTemplateProperties.status
                        = TemplateStatus.fromString(reader.getString());
                } else if ("displayNamesFilter".equals(fieldName)) {
                    List<String> displayNamesFilter = reader.readArray(reader1 -> reader1.getString());
                    deserializedMicrosoftSecurityIncidentCreationAlertRuleTemplateProperties.displayNamesFilter
                        = displayNamesFilter;
                } else if ("displayNamesExcludeFilter".equals(fieldName)) {
                    List<String> displayNamesExcludeFilter = reader.readArray(reader1 -> reader1.getString());
                    deserializedMicrosoftSecurityIncidentCreationAlertRuleTemplateProperties.displayNamesExcludeFilter
                        = displayNamesExcludeFilter;
                } else if ("severitiesFilter".equals(fieldName)) {
                    List<AlertSeverity> severitiesFilter
                        = reader.readArray(reader1 -> AlertSeverity.fromString(reader1.getString()));
                    deserializedMicrosoftSecurityIncidentCreationAlertRuleTemplateProperties.severitiesFilter
                        = severitiesFilter;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedMicrosoftSecurityIncidentCreationAlertRuleTemplateProperties;
        });
    }
}
