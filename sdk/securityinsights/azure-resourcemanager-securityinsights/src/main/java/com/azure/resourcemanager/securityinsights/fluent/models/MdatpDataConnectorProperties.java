// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.securityinsights.models.AlertsDataTypeOfDataConnector;
import java.io.IOException;

/**
 * MDATP (Microsoft Defender Advanced Threat Protection) data connector properties.
 */
@Fluent
public final class MdatpDataConnectorProperties implements JsonSerializable<MdatpDataConnectorProperties> {
    /*
     * The tenant id to connect to, and get the data from.
     */
    private String tenantId;

    /*
     * The available data types for the connector.
     */
    private AlertsDataTypeOfDataConnector dataTypes;

    /**
     * Creates an instance of MdatpDataConnectorProperties class.
     */
    public MdatpDataConnectorProperties() {
    }

    /**
     * Get the tenantId property: The tenant id to connect to, and get the data from.
     * 
     * @return the tenantId value.
     */
    public String tenantId() {
        return this.tenantId;
    }

    /**
     * Set the tenantId property: The tenant id to connect to, and get the data from.
     * 
     * @param tenantId the tenantId value to set.
     * @return the MdatpDataConnectorProperties object itself.
     */
    public MdatpDataConnectorProperties withTenantId(String tenantId) {
        this.tenantId = tenantId;
        return this;
    }

    /**
     * Get the dataTypes property: The available data types for the connector.
     * 
     * @return the dataTypes value.
     */
    public AlertsDataTypeOfDataConnector dataTypes() {
        return this.dataTypes;
    }

    /**
     * Set the dataTypes property: The available data types for the connector.
     * 
     * @param dataTypes the dataTypes value to set.
     * @return the MdatpDataConnectorProperties object itself.
     */
    public MdatpDataConnectorProperties withDataTypes(AlertsDataTypeOfDataConnector dataTypes) {
        this.dataTypes = dataTypes;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (dataTypes() != null) {
            dataTypes().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("tenantId", this.tenantId);
        jsonWriter.writeJsonField("dataTypes", this.dataTypes);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MdatpDataConnectorProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MdatpDataConnectorProperties if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the MdatpDataConnectorProperties.
     */
    public static MdatpDataConnectorProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            MdatpDataConnectorProperties deserializedMdatpDataConnectorProperties = new MdatpDataConnectorProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("tenantId".equals(fieldName)) {
                    deserializedMdatpDataConnectorProperties.tenantId = reader.getString();
                } else if ("dataTypes".equals(fieldName)) {
                    deserializedMdatpDataConnectorProperties.dataTypes = AlertsDataTypeOfDataConnector.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedMdatpDataConnectorProperties;
        });
    }
}
