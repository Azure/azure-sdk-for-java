// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.securityinsights.models.EntityCommonProperties;
import com.azure.resourcemanager.securityinsights.models.OSFamily;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Host entity property bag. */
@Fluent
public final class HostEntityProperties extends EntityCommonProperties {
    /*
     * The azure resource id of the VM.
     */
    @JsonProperty(value = "azureID", access = JsonProperty.Access.WRITE_ONLY)
    private String azureId;

    /*
     * The DNS domain that this host belongs to. Should contain the compete DNS suffix for the domain
     */
    @JsonProperty(value = "dnsDomain", access = JsonProperty.Access.WRITE_ONLY)
    private String dnsDomain;

    /*
     * The hostname without the domain suffix.
     */
    @JsonProperty(value = "hostName", access = JsonProperty.Access.WRITE_ONLY)
    private String hostname;

    /*
     * Determines whether this host belongs to a domain.
     */
    @JsonProperty(value = "isDomainJoined", access = JsonProperty.Access.WRITE_ONLY)
    private Boolean isDomainJoined;

    /*
     * The host name (pre-windows2000).
     */
    @JsonProperty(value = "netBiosName", access = JsonProperty.Access.WRITE_ONLY)
    private String netBiosName;

    /*
     * The NT domain that this host belongs to.
     */
    @JsonProperty(value = "ntDomain", access = JsonProperty.Access.WRITE_ONLY)
    private String ntDomain;

    /*
     * The OMS agent id, if the host has OMS agent installed.
     */
    @JsonProperty(value = "omsAgentID", access = JsonProperty.Access.WRITE_ONLY)
    private String omsAgentId;

    /*
     * The operating system type.
     */
    @JsonProperty(value = "osFamily")
    private OSFamily osFamily;

    /*
     * A free text representation of the operating system. This field is meant to hold specific versions the are more
     * fine grained than OSFamily or future values not supported by OSFamily enumeration
     */
    @JsonProperty(value = "osVersion", access = JsonProperty.Access.WRITE_ONLY)
    private String osVersion;

    /**
     * Get the azureId property: The azure resource id of the VM.
     *
     * @return the azureId value.
     */
    public String azureId() {
        return this.azureId;
    }

    /**
     * Get the dnsDomain property: The DNS domain that this host belongs to. Should contain the compete DNS suffix for
     * the domain.
     *
     * @return the dnsDomain value.
     */
    public String dnsDomain() {
        return this.dnsDomain;
    }

    /**
     * Get the hostname property: The hostname without the domain suffix.
     *
     * @return the hostname value.
     */
    public String hostname() {
        return this.hostname;
    }

    /**
     * Get the isDomainJoined property: Determines whether this host belongs to a domain.
     *
     * @return the isDomainJoined value.
     */
    public Boolean isDomainJoined() {
        return this.isDomainJoined;
    }

    /**
     * Get the netBiosName property: The host name (pre-windows2000).
     *
     * @return the netBiosName value.
     */
    public String netBiosName() {
        return this.netBiosName;
    }

    /**
     * Get the ntDomain property: The NT domain that this host belongs to.
     *
     * @return the ntDomain value.
     */
    public String ntDomain() {
        return this.ntDomain;
    }

    /**
     * Get the omsAgentId property: The OMS agent id, if the host has OMS agent installed.
     *
     * @return the omsAgentId value.
     */
    public String omsAgentId() {
        return this.omsAgentId;
    }

    /**
     * Get the osFamily property: The operating system type.
     *
     * @return the osFamily value.
     */
    public OSFamily osFamily() {
        return this.osFamily;
    }

    /**
     * Set the osFamily property: The operating system type.
     *
     * @param osFamily the osFamily value to set.
     * @return the HostEntityProperties object itself.
     */
    public HostEntityProperties withOsFamily(OSFamily osFamily) {
        this.osFamily = osFamily;
        return this;
    }

    /**
     * Get the osVersion property: A free text representation of the operating system. This field is meant to hold
     * specific versions the are more fine grained than OSFamily or future values not supported by OSFamily enumeration.
     *
     * @return the osVersion value.
     */
    public String osVersion() {
        return this.osVersion;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
