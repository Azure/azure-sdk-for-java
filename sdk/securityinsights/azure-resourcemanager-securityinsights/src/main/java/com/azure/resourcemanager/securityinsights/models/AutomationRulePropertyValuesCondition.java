// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/** Describes an automation rule condition that evaluates a property's value. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "conditionType")
@JsonTypeName("Property")
@Fluent
public final class AutomationRulePropertyValuesCondition extends AutomationRuleCondition {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(AutomationRulePropertyValuesCondition.class);

    /*
     * The configuration of the automation rule condition
     */
    @JsonProperty(value = "conditionProperties", required = true)
    private AutomationRulePropertyValuesConditionProperties conditionProperties;

    /**
     * Get the conditionProperties property: The configuration of the automation rule condition.
     *
     * @return the conditionProperties value.
     */
    public AutomationRulePropertyValuesConditionProperties conditionProperties() {
        return this.conditionProperties;
    }

    /**
     * Set the conditionProperties property: The configuration of the automation rule condition.
     *
     * @param conditionProperties the conditionProperties value to set.
     * @return the AutomationRulePropertyValuesCondition object itself.
     */
    public AutomationRulePropertyValuesCondition withConditionProperties(
        AutomationRulePropertyValuesConditionProperties conditionProperties) {
        this.conditionProperties = conditionProperties;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (conditionProperties() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property conditionProperties in model"
                            + " AutomationRulePropertyValuesCondition"));
        } else {
            conditionProperties().validate();
        }
    }
}
