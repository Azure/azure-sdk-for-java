// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * ies for the solution content item.
 */
@Fluent
public final class MetadataCategories implements JsonSerializable<MetadataCategories> {
    /*
     * domain for the solution content item
     */
    private List<String> domains;

    /*
     * Industry verticals for the solution content item
     */
    private List<String> verticals;

    /**
     * Creates an instance of MetadataCategories class.
     */
    public MetadataCategories() {
    }

    /**
     * Get the domains property: domain for the solution content item.
     * 
     * @return the domains value.
     */
    public List<String> domains() {
        return this.domains;
    }

    /**
     * Set the domains property: domain for the solution content item.
     * 
     * @param domains the domains value to set.
     * @return the MetadataCategories object itself.
     */
    public MetadataCategories withDomains(List<String> domains) {
        this.domains = domains;
        return this;
    }

    /**
     * Get the verticals property: Industry verticals for the solution content item.
     * 
     * @return the verticals value.
     */
    public List<String> verticals() {
        return this.verticals;
    }

    /**
     * Set the verticals property: Industry verticals for the solution content item.
     * 
     * @param verticals the verticals value to set.
     * @return the MetadataCategories object itself.
     */
    public MetadataCategories withVerticals(List<String> verticals) {
        this.verticals = verticals;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("domains", this.domains, (writer, element) -> writer.writeString(element));
        jsonWriter.writeArrayField("verticals", this.verticals, (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MetadataCategories from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MetadataCategories if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the MetadataCategories.
     */
    public static MetadataCategories fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            MetadataCategories deserializedMetadataCategories = new MetadataCategories();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("domains".equals(fieldName)) {
                    List<String> domains = reader.readArray(reader1 -> reader1.getString());
                    deserializedMetadataCategories.domains = domains;
                } else if ("verticals".equals(fieldName)) {
                    List<String> verticals = reader.readArray(reader1 -> reader1.getString());
                    deserializedMetadataCategories.verticals = verticals;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedMetadataCategories;
        });
    }
}
