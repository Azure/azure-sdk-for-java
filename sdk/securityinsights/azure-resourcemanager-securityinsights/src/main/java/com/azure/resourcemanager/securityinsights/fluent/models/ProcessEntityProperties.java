// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.securityinsights.models.ElevationToken;
import com.azure.resourcemanager.securityinsights.models.EntityCommonProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** Process entity property bag. */
@Fluent
public final class ProcessEntityProperties extends EntityCommonProperties {
    /*
     * The account entity id running the processes.
     */
    @JsonProperty(value = "accountEntityId", access = JsonProperty.Access.WRITE_ONLY)
    private String accountEntityId;

    /*
     * The command line used to create the process
     */
    @JsonProperty(value = "commandLine", access = JsonProperty.Access.WRITE_ONLY)
    private String commandLine;

    /*
     * The time when the process started to run
     */
    @JsonProperty(value = "creationTimeUtc", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime creationTimeUtc;

    /*
     * The elevation token associated with the process.
     */
    @JsonProperty(value = "elevationToken")
    private ElevationToken elevationToken;

    /*
     * The host entity id on which the process was running
     */
    @JsonProperty(value = "hostEntityId", access = JsonProperty.Access.WRITE_ONLY)
    private String hostEntityId;

    /*
     * The session entity id in which the process was running
     */
    @JsonProperty(value = "hostLogonSessionEntityId", access = JsonProperty.Access.WRITE_ONLY)
    private String hostLogonSessionEntityId;

    /*
     * Image file entity id
     */
    @JsonProperty(value = "imageFileEntityId", access = JsonProperty.Access.WRITE_ONLY)
    private String imageFileEntityId;

    /*
     * The parent process entity id.
     */
    @JsonProperty(value = "parentProcessEntityId", access = JsonProperty.Access.WRITE_ONLY)
    private String parentProcessEntityId;

    /*
     * The process ID
     */
    @JsonProperty(value = "processId", access = JsonProperty.Access.WRITE_ONLY)
    private String processId;

    /**
     * Get the accountEntityId property: The account entity id running the processes.
     *
     * @return the accountEntityId value.
     */
    public String accountEntityId() {
        return this.accountEntityId;
    }

    /**
     * Get the commandLine property: The command line used to create the process.
     *
     * @return the commandLine value.
     */
    public String commandLine() {
        return this.commandLine;
    }

    /**
     * Get the creationTimeUtc property: The time when the process started to run.
     *
     * @return the creationTimeUtc value.
     */
    public OffsetDateTime creationTimeUtc() {
        return this.creationTimeUtc;
    }

    /**
     * Get the elevationToken property: The elevation token associated with the process.
     *
     * @return the elevationToken value.
     */
    public ElevationToken elevationToken() {
        return this.elevationToken;
    }

    /**
     * Set the elevationToken property: The elevation token associated with the process.
     *
     * @param elevationToken the elevationToken value to set.
     * @return the ProcessEntityProperties object itself.
     */
    public ProcessEntityProperties withElevationToken(ElevationToken elevationToken) {
        this.elevationToken = elevationToken;
        return this;
    }

    /**
     * Get the hostEntityId property: The host entity id on which the process was running.
     *
     * @return the hostEntityId value.
     */
    public String hostEntityId() {
        return this.hostEntityId;
    }

    /**
     * Get the hostLogonSessionEntityId property: The session entity id in which the process was running.
     *
     * @return the hostLogonSessionEntityId value.
     */
    public String hostLogonSessionEntityId() {
        return this.hostLogonSessionEntityId;
    }

    /**
     * Get the imageFileEntityId property: Image file entity id.
     *
     * @return the imageFileEntityId value.
     */
    public String imageFileEntityId() {
        return this.imageFileEntityId;
    }

    /**
     * Get the parentProcessEntityId property: The parent process entity id.
     *
     * @return the parentProcessEntityId value.
     */
    public String parentProcessEntityId() {
        return this.parentProcessEntityId;
    }

    /**
     * Get the processId property: The process ID.
     *
     * @return the processId value.
     */
    public String processId() {
        return this.processId;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
