// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.securityinsights.models.EntityCommonProperties;
import com.azure.resourcemanager.securityinsights.models.ThreatIntelligenceExternalReference;
import com.azure.resourcemanager.securityinsights.models.ThreatIntelligenceGranularMarkingModel;
import com.azure.resourcemanager.securityinsights.models.ThreatIntelligenceKillChainPhase;
import com.azure.resourcemanager.securityinsights.models.ThreatIntelligenceParsedPattern;
import java.io.IOException;
import java.util.List;
import java.util.Map;

/**
 * Describes threat intelligence entity properties.
 */
@Fluent
public final class ThreatIntelligenceIndicatorProperties extends EntityCommonProperties {
    /*
     * List of tags
     */
    private List<String> threatIntelligenceTags;

    /*
     * Last updated time in UTC
     */
    private String lastUpdatedTimeUtc;

    /*
     * Source of a threat intelligence entity
     */
    private String source;

    /*
     * Display name of a threat intelligence entity
     */
    private String displayName;

    /*
     * Description of a threat intelligence entity
     */
    private String description;

    /*
     * Indicator types of threat intelligence entities
     */
    private List<String> indicatorTypes;

    /*
     * Pattern of a threat intelligence entity
     */
    private String pattern;

    /*
     * Pattern type of a threat intelligence entity
     */
    private String patternType;

    /*
     * Pattern version of a threat intelligence entity
     */
    private String patternVersion;

    /*
     * Kill chain phases
     */
    private List<ThreatIntelligenceKillChainPhase> killChainPhases;

    /*
     * Parsed patterns
     */
    private List<ThreatIntelligenceParsedPattern> parsedPattern;

    /*
     * External ID of threat intelligence entity
     */
    private String externalId;

    /*
     * Created by reference of threat intelligence entity
     */
    private String createdByRef;

    /*
     * Is threat intelligence entity defanged
     */
    private Boolean defanged;

    /*
     * External last updated time in UTC
     */
    private String externalLastUpdatedTimeUtc;

    /*
     * External References
     */
    private List<ThreatIntelligenceExternalReference> externalReferences;

    /*
     * Granular Markings
     */
    private List<ThreatIntelligenceGranularMarkingModel> granularMarkings;

    /*
     * Labels of threat intelligence entity
     */
    private List<String> labels;

    /*
     * Is threat intelligence entity revoked
     */
    private Boolean revoked;

    /*
     * Confidence of threat intelligence entity
     */
    private Integer confidence;

    /*
     * Threat intelligence entity object marking references
     */
    private List<String> objectMarkingRefs;

    /*
     * Language of threat intelligence entity
     */
    private String language;

    /*
     * Threat types
     */
    private List<String> threatTypes;

    /*
     * Valid from
     */
    private String validFrom;

    /*
     * Valid until
     */
    private String validUntil;

    /*
     * Created by
     */
    private String created;

    /*
     * Modified by
     */
    private String modified;

    /*
     * Extensions map
     */
    private Map<String, Object> extensions;

    /*
     * The graph item display name which is a short humanly readable description of the graph item instance. This
     * property is optional and might be system generated.
     */
    private String friendlyName;

    /*
     * A bag of custom fields that should be part of the entity and will be presented to the user.
     */
    private Map<String, Object> additionalData;

    /**
     * Creates an instance of ThreatIntelligenceIndicatorProperties class.
     */
    public ThreatIntelligenceIndicatorProperties() {
    }

    /**
     * Get the threatIntelligenceTags property: List of tags.
     * 
     * @return the threatIntelligenceTags value.
     */
    public List<String> threatIntelligenceTags() {
        return this.threatIntelligenceTags;
    }

    /**
     * Set the threatIntelligenceTags property: List of tags.
     * 
     * @param threatIntelligenceTags the threatIntelligenceTags value to set.
     * @return the ThreatIntelligenceIndicatorProperties object itself.
     */
    public ThreatIntelligenceIndicatorProperties withThreatIntelligenceTags(List<String> threatIntelligenceTags) {
        this.threatIntelligenceTags = threatIntelligenceTags;
        return this;
    }

    /**
     * Get the lastUpdatedTimeUtc property: Last updated time in UTC.
     * 
     * @return the lastUpdatedTimeUtc value.
     */
    public String lastUpdatedTimeUtc() {
        return this.lastUpdatedTimeUtc;
    }

    /**
     * Set the lastUpdatedTimeUtc property: Last updated time in UTC.
     * 
     * @param lastUpdatedTimeUtc the lastUpdatedTimeUtc value to set.
     * @return the ThreatIntelligenceIndicatorProperties object itself.
     */
    public ThreatIntelligenceIndicatorProperties withLastUpdatedTimeUtc(String lastUpdatedTimeUtc) {
        this.lastUpdatedTimeUtc = lastUpdatedTimeUtc;
        return this;
    }

    /**
     * Get the source property: Source of a threat intelligence entity.
     * 
     * @return the source value.
     */
    public String source() {
        return this.source;
    }

    /**
     * Set the source property: Source of a threat intelligence entity.
     * 
     * @param source the source value to set.
     * @return the ThreatIntelligenceIndicatorProperties object itself.
     */
    public ThreatIntelligenceIndicatorProperties withSource(String source) {
        this.source = source;
        return this;
    }

    /**
     * Get the displayName property: Display name of a threat intelligence entity.
     * 
     * @return the displayName value.
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set the displayName property: Display name of a threat intelligence entity.
     * 
     * @param displayName the displayName value to set.
     * @return the ThreatIntelligenceIndicatorProperties object itself.
     */
    public ThreatIntelligenceIndicatorProperties withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the description property: Description of a threat intelligence entity.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: Description of a threat intelligence entity.
     * 
     * @param description the description value to set.
     * @return the ThreatIntelligenceIndicatorProperties object itself.
     */
    public ThreatIntelligenceIndicatorProperties withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the indicatorTypes property: Indicator types of threat intelligence entities.
     * 
     * @return the indicatorTypes value.
     */
    public List<String> indicatorTypes() {
        return this.indicatorTypes;
    }

    /**
     * Set the indicatorTypes property: Indicator types of threat intelligence entities.
     * 
     * @param indicatorTypes the indicatorTypes value to set.
     * @return the ThreatIntelligenceIndicatorProperties object itself.
     */
    public ThreatIntelligenceIndicatorProperties withIndicatorTypes(List<String> indicatorTypes) {
        this.indicatorTypes = indicatorTypes;
        return this;
    }

    /**
     * Get the pattern property: Pattern of a threat intelligence entity.
     * 
     * @return the pattern value.
     */
    public String pattern() {
        return this.pattern;
    }

    /**
     * Set the pattern property: Pattern of a threat intelligence entity.
     * 
     * @param pattern the pattern value to set.
     * @return the ThreatIntelligenceIndicatorProperties object itself.
     */
    public ThreatIntelligenceIndicatorProperties withPattern(String pattern) {
        this.pattern = pattern;
        return this;
    }

    /**
     * Get the patternType property: Pattern type of a threat intelligence entity.
     * 
     * @return the patternType value.
     */
    public String patternType() {
        return this.patternType;
    }

    /**
     * Set the patternType property: Pattern type of a threat intelligence entity.
     * 
     * @param patternType the patternType value to set.
     * @return the ThreatIntelligenceIndicatorProperties object itself.
     */
    public ThreatIntelligenceIndicatorProperties withPatternType(String patternType) {
        this.patternType = patternType;
        return this;
    }

    /**
     * Get the patternVersion property: Pattern version of a threat intelligence entity.
     * 
     * @return the patternVersion value.
     */
    public String patternVersion() {
        return this.patternVersion;
    }

    /**
     * Set the patternVersion property: Pattern version of a threat intelligence entity.
     * 
     * @param patternVersion the patternVersion value to set.
     * @return the ThreatIntelligenceIndicatorProperties object itself.
     */
    public ThreatIntelligenceIndicatorProperties withPatternVersion(String patternVersion) {
        this.patternVersion = patternVersion;
        return this;
    }

    /**
     * Get the killChainPhases property: Kill chain phases.
     * 
     * @return the killChainPhases value.
     */
    public List<ThreatIntelligenceKillChainPhase> killChainPhases() {
        return this.killChainPhases;
    }

    /**
     * Set the killChainPhases property: Kill chain phases.
     * 
     * @param killChainPhases the killChainPhases value to set.
     * @return the ThreatIntelligenceIndicatorProperties object itself.
     */
    public ThreatIntelligenceIndicatorProperties
        withKillChainPhases(List<ThreatIntelligenceKillChainPhase> killChainPhases) {
        this.killChainPhases = killChainPhases;
        return this;
    }

    /**
     * Get the parsedPattern property: Parsed patterns.
     * 
     * @return the parsedPattern value.
     */
    public List<ThreatIntelligenceParsedPattern> parsedPattern() {
        return this.parsedPattern;
    }

    /**
     * Set the parsedPattern property: Parsed patterns.
     * 
     * @param parsedPattern the parsedPattern value to set.
     * @return the ThreatIntelligenceIndicatorProperties object itself.
     */
    public ThreatIntelligenceIndicatorProperties
        withParsedPattern(List<ThreatIntelligenceParsedPattern> parsedPattern) {
        this.parsedPattern = parsedPattern;
        return this;
    }

    /**
     * Get the externalId property: External ID of threat intelligence entity.
     * 
     * @return the externalId value.
     */
    public String externalId() {
        return this.externalId;
    }

    /**
     * Set the externalId property: External ID of threat intelligence entity.
     * 
     * @param externalId the externalId value to set.
     * @return the ThreatIntelligenceIndicatorProperties object itself.
     */
    public ThreatIntelligenceIndicatorProperties withExternalId(String externalId) {
        this.externalId = externalId;
        return this;
    }

    /**
     * Get the createdByRef property: Created by reference of threat intelligence entity.
     * 
     * @return the createdByRef value.
     */
    public String createdByRef() {
        return this.createdByRef;
    }

    /**
     * Set the createdByRef property: Created by reference of threat intelligence entity.
     * 
     * @param createdByRef the createdByRef value to set.
     * @return the ThreatIntelligenceIndicatorProperties object itself.
     */
    public ThreatIntelligenceIndicatorProperties withCreatedByRef(String createdByRef) {
        this.createdByRef = createdByRef;
        return this;
    }

    /**
     * Get the defanged property: Is threat intelligence entity defanged.
     * 
     * @return the defanged value.
     */
    public Boolean defanged() {
        return this.defanged;
    }

    /**
     * Set the defanged property: Is threat intelligence entity defanged.
     * 
     * @param defanged the defanged value to set.
     * @return the ThreatIntelligenceIndicatorProperties object itself.
     */
    public ThreatIntelligenceIndicatorProperties withDefanged(Boolean defanged) {
        this.defanged = defanged;
        return this;
    }

    /**
     * Get the externalLastUpdatedTimeUtc property: External last updated time in UTC.
     * 
     * @return the externalLastUpdatedTimeUtc value.
     */
    public String externalLastUpdatedTimeUtc() {
        return this.externalLastUpdatedTimeUtc;
    }

    /**
     * Set the externalLastUpdatedTimeUtc property: External last updated time in UTC.
     * 
     * @param externalLastUpdatedTimeUtc the externalLastUpdatedTimeUtc value to set.
     * @return the ThreatIntelligenceIndicatorProperties object itself.
     */
    public ThreatIntelligenceIndicatorProperties withExternalLastUpdatedTimeUtc(String externalLastUpdatedTimeUtc) {
        this.externalLastUpdatedTimeUtc = externalLastUpdatedTimeUtc;
        return this;
    }

    /**
     * Get the externalReferences property: External References.
     * 
     * @return the externalReferences value.
     */
    public List<ThreatIntelligenceExternalReference> externalReferences() {
        return this.externalReferences;
    }

    /**
     * Set the externalReferences property: External References.
     * 
     * @param externalReferences the externalReferences value to set.
     * @return the ThreatIntelligenceIndicatorProperties object itself.
     */
    public ThreatIntelligenceIndicatorProperties
        withExternalReferences(List<ThreatIntelligenceExternalReference> externalReferences) {
        this.externalReferences = externalReferences;
        return this;
    }

    /**
     * Get the granularMarkings property: Granular Markings.
     * 
     * @return the granularMarkings value.
     */
    public List<ThreatIntelligenceGranularMarkingModel> granularMarkings() {
        return this.granularMarkings;
    }

    /**
     * Set the granularMarkings property: Granular Markings.
     * 
     * @param granularMarkings the granularMarkings value to set.
     * @return the ThreatIntelligenceIndicatorProperties object itself.
     */
    public ThreatIntelligenceIndicatorProperties
        withGranularMarkings(List<ThreatIntelligenceGranularMarkingModel> granularMarkings) {
        this.granularMarkings = granularMarkings;
        return this;
    }

    /**
     * Get the labels property: Labels of threat intelligence entity.
     * 
     * @return the labels value.
     */
    public List<String> labels() {
        return this.labels;
    }

    /**
     * Set the labels property: Labels of threat intelligence entity.
     * 
     * @param labels the labels value to set.
     * @return the ThreatIntelligenceIndicatorProperties object itself.
     */
    public ThreatIntelligenceIndicatorProperties withLabels(List<String> labels) {
        this.labels = labels;
        return this;
    }

    /**
     * Get the revoked property: Is threat intelligence entity revoked.
     * 
     * @return the revoked value.
     */
    public Boolean revoked() {
        return this.revoked;
    }

    /**
     * Set the revoked property: Is threat intelligence entity revoked.
     * 
     * @param revoked the revoked value to set.
     * @return the ThreatIntelligenceIndicatorProperties object itself.
     */
    public ThreatIntelligenceIndicatorProperties withRevoked(Boolean revoked) {
        this.revoked = revoked;
        return this;
    }

    /**
     * Get the confidence property: Confidence of threat intelligence entity.
     * 
     * @return the confidence value.
     */
    public Integer confidence() {
        return this.confidence;
    }

    /**
     * Set the confidence property: Confidence of threat intelligence entity.
     * 
     * @param confidence the confidence value to set.
     * @return the ThreatIntelligenceIndicatorProperties object itself.
     */
    public ThreatIntelligenceIndicatorProperties withConfidence(Integer confidence) {
        this.confidence = confidence;
        return this;
    }

    /**
     * Get the objectMarkingRefs property: Threat intelligence entity object marking references.
     * 
     * @return the objectMarkingRefs value.
     */
    public List<String> objectMarkingRefs() {
        return this.objectMarkingRefs;
    }

    /**
     * Set the objectMarkingRefs property: Threat intelligence entity object marking references.
     * 
     * @param objectMarkingRefs the objectMarkingRefs value to set.
     * @return the ThreatIntelligenceIndicatorProperties object itself.
     */
    public ThreatIntelligenceIndicatorProperties withObjectMarkingRefs(List<String> objectMarkingRefs) {
        this.objectMarkingRefs = objectMarkingRefs;
        return this;
    }

    /**
     * Get the language property: Language of threat intelligence entity.
     * 
     * @return the language value.
     */
    public String language() {
        return this.language;
    }

    /**
     * Set the language property: Language of threat intelligence entity.
     * 
     * @param language the language value to set.
     * @return the ThreatIntelligenceIndicatorProperties object itself.
     */
    public ThreatIntelligenceIndicatorProperties withLanguage(String language) {
        this.language = language;
        return this;
    }

    /**
     * Get the threatTypes property: Threat types.
     * 
     * @return the threatTypes value.
     */
    public List<String> threatTypes() {
        return this.threatTypes;
    }

    /**
     * Set the threatTypes property: Threat types.
     * 
     * @param threatTypes the threatTypes value to set.
     * @return the ThreatIntelligenceIndicatorProperties object itself.
     */
    public ThreatIntelligenceIndicatorProperties withThreatTypes(List<String> threatTypes) {
        this.threatTypes = threatTypes;
        return this;
    }

    /**
     * Get the validFrom property: Valid from.
     * 
     * @return the validFrom value.
     */
    public String validFrom() {
        return this.validFrom;
    }

    /**
     * Set the validFrom property: Valid from.
     * 
     * @param validFrom the validFrom value to set.
     * @return the ThreatIntelligenceIndicatorProperties object itself.
     */
    public ThreatIntelligenceIndicatorProperties withValidFrom(String validFrom) {
        this.validFrom = validFrom;
        return this;
    }

    /**
     * Get the validUntil property: Valid until.
     * 
     * @return the validUntil value.
     */
    public String validUntil() {
        return this.validUntil;
    }

    /**
     * Set the validUntil property: Valid until.
     * 
     * @param validUntil the validUntil value to set.
     * @return the ThreatIntelligenceIndicatorProperties object itself.
     */
    public ThreatIntelligenceIndicatorProperties withValidUntil(String validUntil) {
        this.validUntil = validUntil;
        return this;
    }

    /**
     * Get the created property: Created by.
     * 
     * @return the created value.
     */
    public String created() {
        return this.created;
    }

    /**
     * Set the created property: Created by.
     * 
     * @param created the created value to set.
     * @return the ThreatIntelligenceIndicatorProperties object itself.
     */
    public ThreatIntelligenceIndicatorProperties withCreated(String created) {
        this.created = created;
        return this;
    }

    /**
     * Get the modified property: Modified by.
     * 
     * @return the modified value.
     */
    public String modified() {
        return this.modified;
    }

    /**
     * Set the modified property: Modified by.
     * 
     * @param modified the modified value to set.
     * @return the ThreatIntelligenceIndicatorProperties object itself.
     */
    public ThreatIntelligenceIndicatorProperties withModified(String modified) {
        this.modified = modified;
        return this;
    }

    /**
     * Get the extensions property: Extensions map.
     * 
     * @return the extensions value.
     */
    public Map<String, Object> extensions() {
        return this.extensions;
    }

    /**
     * Set the extensions property: Extensions map.
     * 
     * @param extensions the extensions value to set.
     * @return the ThreatIntelligenceIndicatorProperties object itself.
     */
    public ThreatIntelligenceIndicatorProperties withExtensions(Map<String, Object> extensions) {
        this.extensions = extensions;
        return this;
    }

    /**
     * Get the friendlyName property: The graph item display name which is a short humanly readable description of the
     * graph item instance. This property is optional and might be system generated.
     * 
     * @return the friendlyName value.
     */
    @Override
    public String friendlyName() {
        return this.friendlyName;
    }

    /**
     * Get the additionalData property: A bag of custom fields that should be part of the entity and will be presented
     * to the user.
     * 
     * @return the additionalData value.
     */
    @Override
    public Map<String, Object> additionalData() {
        return this.additionalData;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        if (killChainPhases() != null) {
            killChainPhases().forEach(e -> e.validate());
        }
        if (parsedPattern() != null) {
            parsedPattern().forEach(e -> e.validate());
        }
        if (externalReferences() != null) {
            externalReferences().forEach(e -> e.validate());
        }
        if (granularMarkings() != null) {
            granularMarkings().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("threatIntelligenceTags", this.threatIntelligenceTags,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeStringField("lastUpdatedTimeUtc", this.lastUpdatedTimeUtc);
        jsonWriter.writeStringField("source", this.source);
        jsonWriter.writeStringField("displayName", this.displayName);
        jsonWriter.writeStringField("description", this.description);
        jsonWriter.writeArrayField("indicatorTypes", this.indicatorTypes,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeStringField("pattern", this.pattern);
        jsonWriter.writeStringField("patternType", this.patternType);
        jsonWriter.writeStringField("patternVersion", this.patternVersion);
        jsonWriter.writeArrayField("killChainPhases", this.killChainPhases,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeArrayField("parsedPattern", this.parsedPattern, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("externalId", this.externalId);
        jsonWriter.writeStringField("createdByRef", this.createdByRef);
        jsonWriter.writeBooleanField("defanged", this.defanged);
        jsonWriter.writeStringField("externalLastUpdatedTimeUtc", this.externalLastUpdatedTimeUtc);
        jsonWriter.writeArrayField("externalReferences", this.externalReferences,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeArrayField("granularMarkings", this.granularMarkings,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeArrayField("labels", this.labels, (writer, element) -> writer.writeString(element));
        jsonWriter.writeBooleanField("revoked", this.revoked);
        jsonWriter.writeNumberField("confidence", this.confidence);
        jsonWriter.writeArrayField("objectMarkingRefs", this.objectMarkingRefs,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeStringField("language", this.language);
        jsonWriter.writeArrayField("threatTypes", this.threatTypes, (writer, element) -> writer.writeString(element));
        jsonWriter.writeStringField("validFrom", this.validFrom);
        jsonWriter.writeStringField("validUntil", this.validUntil);
        jsonWriter.writeStringField("created", this.created);
        jsonWriter.writeStringField("modified", this.modified);
        jsonWriter.writeMapField("extensions", this.extensions, (writer, element) -> writer.writeUntyped(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ThreatIntelligenceIndicatorProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ThreatIntelligenceIndicatorProperties if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ThreatIntelligenceIndicatorProperties.
     */
    public static ThreatIntelligenceIndicatorProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ThreatIntelligenceIndicatorProperties deserializedThreatIntelligenceIndicatorProperties
                = new ThreatIntelligenceIndicatorProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("additionalData".equals(fieldName)) {
                    Map<String, Object> additionalData = reader.readMap(reader1 -> reader1.readUntyped());
                    deserializedThreatIntelligenceIndicatorProperties.additionalData = additionalData;
                } else if ("friendlyName".equals(fieldName)) {
                    deserializedThreatIntelligenceIndicatorProperties.friendlyName = reader.getString();
                } else if ("threatIntelligenceTags".equals(fieldName)) {
                    List<String> threatIntelligenceTags = reader.readArray(reader1 -> reader1.getString());
                    deserializedThreatIntelligenceIndicatorProperties.threatIntelligenceTags = threatIntelligenceTags;
                } else if ("lastUpdatedTimeUtc".equals(fieldName)) {
                    deserializedThreatIntelligenceIndicatorProperties.lastUpdatedTimeUtc = reader.getString();
                } else if ("source".equals(fieldName)) {
                    deserializedThreatIntelligenceIndicatorProperties.source = reader.getString();
                } else if ("displayName".equals(fieldName)) {
                    deserializedThreatIntelligenceIndicatorProperties.displayName = reader.getString();
                } else if ("description".equals(fieldName)) {
                    deserializedThreatIntelligenceIndicatorProperties.description = reader.getString();
                } else if ("indicatorTypes".equals(fieldName)) {
                    List<String> indicatorTypes = reader.readArray(reader1 -> reader1.getString());
                    deserializedThreatIntelligenceIndicatorProperties.indicatorTypes = indicatorTypes;
                } else if ("pattern".equals(fieldName)) {
                    deserializedThreatIntelligenceIndicatorProperties.pattern = reader.getString();
                } else if ("patternType".equals(fieldName)) {
                    deserializedThreatIntelligenceIndicatorProperties.patternType = reader.getString();
                } else if ("patternVersion".equals(fieldName)) {
                    deserializedThreatIntelligenceIndicatorProperties.patternVersion = reader.getString();
                } else if ("killChainPhases".equals(fieldName)) {
                    List<ThreatIntelligenceKillChainPhase> killChainPhases
                        = reader.readArray(reader1 -> ThreatIntelligenceKillChainPhase.fromJson(reader1));
                    deserializedThreatIntelligenceIndicatorProperties.killChainPhases = killChainPhases;
                } else if ("parsedPattern".equals(fieldName)) {
                    List<ThreatIntelligenceParsedPattern> parsedPattern
                        = reader.readArray(reader1 -> ThreatIntelligenceParsedPattern.fromJson(reader1));
                    deserializedThreatIntelligenceIndicatorProperties.parsedPattern = parsedPattern;
                } else if ("externalId".equals(fieldName)) {
                    deserializedThreatIntelligenceIndicatorProperties.externalId = reader.getString();
                } else if ("createdByRef".equals(fieldName)) {
                    deserializedThreatIntelligenceIndicatorProperties.createdByRef = reader.getString();
                } else if ("defanged".equals(fieldName)) {
                    deserializedThreatIntelligenceIndicatorProperties.defanged
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("externalLastUpdatedTimeUtc".equals(fieldName)) {
                    deserializedThreatIntelligenceIndicatorProperties.externalLastUpdatedTimeUtc = reader.getString();
                } else if ("externalReferences".equals(fieldName)) {
                    List<ThreatIntelligenceExternalReference> externalReferences
                        = reader.readArray(reader1 -> ThreatIntelligenceExternalReference.fromJson(reader1));
                    deserializedThreatIntelligenceIndicatorProperties.externalReferences = externalReferences;
                } else if ("granularMarkings".equals(fieldName)) {
                    List<ThreatIntelligenceGranularMarkingModel> granularMarkings
                        = reader.readArray(reader1 -> ThreatIntelligenceGranularMarkingModel.fromJson(reader1));
                    deserializedThreatIntelligenceIndicatorProperties.granularMarkings = granularMarkings;
                } else if ("labels".equals(fieldName)) {
                    List<String> labels = reader.readArray(reader1 -> reader1.getString());
                    deserializedThreatIntelligenceIndicatorProperties.labels = labels;
                } else if ("revoked".equals(fieldName)) {
                    deserializedThreatIntelligenceIndicatorProperties.revoked
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("confidence".equals(fieldName)) {
                    deserializedThreatIntelligenceIndicatorProperties.confidence
                        = reader.getNullable(JsonReader::getInt);
                } else if ("objectMarkingRefs".equals(fieldName)) {
                    List<String> objectMarkingRefs = reader.readArray(reader1 -> reader1.getString());
                    deserializedThreatIntelligenceIndicatorProperties.objectMarkingRefs = objectMarkingRefs;
                } else if ("language".equals(fieldName)) {
                    deserializedThreatIntelligenceIndicatorProperties.language = reader.getString();
                } else if ("threatTypes".equals(fieldName)) {
                    List<String> threatTypes = reader.readArray(reader1 -> reader1.getString());
                    deserializedThreatIntelligenceIndicatorProperties.threatTypes = threatTypes;
                } else if ("validFrom".equals(fieldName)) {
                    deserializedThreatIntelligenceIndicatorProperties.validFrom = reader.getString();
                } else if ("validUntil".equals(fieldName)) {
                    deserializedThreatIntelligenceIndicatorProperties.validUntil = reader.getString();
                } else if ("created".equals(fieldName)) {
                    deserializedThreatIntelligenceIndicatorProperties.created = reader.getString();
                } else if ("modified".equals(fieldName)) {
                    deserializedThreatIntelligenceIndicatorProperties.modified = reader.getString();
                } else if ("extensions".equals(fieldName)) {
                    Map<String, Object> extensions = reader.readMap(reader1 -> reader1.readUntyped());
                    deserializedThreatIntelligenceIndicatorProperties.extensions = extensions;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedThreatIntelligenceIndicatorProperties;
        });
    }
}
