// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.securityinsights.fluent.models.WatchlistInner;

/** An instance of this class provides access to all the operations defined in WatchlistsClient. */
public interface WatchlistsClient {
    /**
     * Gets all watchlists, without watchlist items.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all watchlists, without watchlist items.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<WatchlistInner> list(String resourceGroupName, String workspaceName);

    /**
     * Gets all watchlists, without watchlist items.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all watchlists, without watchlist items.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<WatchlistInner> list(String resourceGroupName, String workspaceName, Context context);

    /**
     * Gets a watchlist, without its watchlist items.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param watchlistAlias Watchlist Alias.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a watchlist, without its watchlist items.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    WatchlistInner get(String resourceGroupName, String workspaceName, String watchlistAlias);

    /**
     * Gets a watchlist, without its watchlist items.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param watchlistAlias Watchlist Alias.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a watchlist, without its watchlist items along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<WatchlistInner> getWithResponse(
        String resourceGroupName, String workspaceName, String watchlistAlias, Context context);

    /**
     * Delete a watchlist.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param watchlistAlias Watchlist Alias.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String workspaceName, String watchlistAlias);

    /**
     * Delete a watchlist.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param watchlistAlias Watchlist Alias.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(
        String resourceGroupName, String workspaceName, String watchlistAlias, Context context);

    /**
     * Creates or updates a watchlist and its watchlist items (bulk creation, e.g. through text/csv content type). To
     * create a Watchlist and its items, we should call this endpoint with rawContent and contentType properties.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param watchlistAlias Watchlist Alias.
     * @param watchlist The watchlist.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a Watchlist in Azure Security Insights.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    WatchlistInner createOrUpdate(
        String resourceGroupName, String workspaceName, String watchlistAlias, WatchlistInner watchlist);

    /**
     * Creates or updates a watchlist and its watchlist items (bulk creation, e.g. through text/csv content type). To
     * create a Watchlist and its items, we should call this endpoint with rawContent and contentType properties.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param watchlistAlias Watchlist Alias.
     * @param watchlist The watchlist.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a Watchlist in Azure Security Insights along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<WatchlistInner> createOrUpdateWithResponse(
        String resourceGroupName,
        String workspaceName,
        String watchlistAlias,
        WatchlistInner watchlist,
        Context context);
}
