// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Represents a source signal consumed in Fusion detection. */
@Fluent
public final class FusionTemplateSourceSetting {
    /*
     * The name of a source signal consumed in Fusion detection.
     */
    @JsonProperty(value = "sourceName", required = true)
    private String sourceName;

    /*
     * All supported source subtypes under this source signal consumed in fusion detection.
     */
    @JsonProperty(value = "sourceSubTypes")
    private List<FusionTemplateSourceSubType> sourceSubTypes;

    /**
     * Get the sourceName property: The name of a source signal consumed in Fusion detection.
     *
     * @return the sourceName value.
     */
    public String sourceName() {
        return this.sourceName;
    }

    /**
     * Set the sourceName property: The name of a source signal consumed in Fusion detection.
     *
     * @param sourceName the sourceName value to set.
     * @return the FusionTemplateSourceSetting object itself.
     */
    public FusionTemplateSourceSetting withSourceName(String sourceName) {
        this.sourceName = sourceName;
        return this;
    }

    /**
     * Get the sourceSubTypes property: All supported source subtypes under this source signal consumed in fusion
     * detection.
     *
     * @return the sourceSubTypes value.
     */
    public List<FusionTemplateSourceSubType> sourceSubTypes() {
        return this.sourceSubTypes;
    }

    /**
     * Set the sourceSubTypes property: All supported source subtypes under this source signal consumed in fusion
     * detection.
     *
     * @param sourceSubTypes the sourceSubTypes value to set.
     * @return the FusionTemplateSourceSetting object itself.
     */
    public FusionTemplateSourceSetting withSourceSubTypes(List<FusionTemplateSourceSubType> sourceSubTypes) {
        this.sourceSubTypes = sourceSubTypes;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (sourceName() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property sourceName in model FusionTemplateSourceSetting"));
        }
        if (sourceSubTypes() != null) {
            sourceSubTypes().forEach(e -> e.validate());
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(FusionTemplateSourceSetting.class);
}
