// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * List of available columns for sorting.
 */
@Fluent
public final class ThreatIntelligenceSortingCriteria implements JsonSerializable<ThreatIntelligenceSortingCriteria> {
    /*
     * Column name
     */
    private String itemKey;

    /*
     * Sorting order (ascending/descending/unsorted).
     */
    private ThreatIntelligenceSortingCriteriaEnum sortOrder;

    /**
     * Creates an instance of ThreatIntelligenceSortingCriteria class.
     */
    public ThreatIntelligenceSortingCriteria() {
    }

    /**
     * Get the itemKey property: Column name.
     * 
     * @return the itemKey value.
     */
    public String itemKey() {
        return this.itemKey;
    }

    /**
     * Set the itemKey property: Column name.
     * 
     * @param itemKey the itemKey value to set.
     * @return the ThreatIntelligenceSortingCriteria object itself.
     */
    public ThreatIntelligenceSortingCriteria withItemKey(String itemKey) {
        this.itemKey = itemKey;
        return this;
    }

    /**
     * Get the sortOrder property: Sorting order (ascending/descending/unsorted).
     * 
     * @return the sortOrder value.
     */
    public ThreatIntelligenceSortingCriteriaEnum sortOrder() {
        return this.sortOrder;
    }

    /**
     * Set the sortOrder property: Sorting order (ascending/descending/unsorted).
     * 
     * @param sortOrder the sortOrder value to set.
     * @return the ThreatIntelligenceSortingCriteria object itself.
     */
    public ThreatIntelligenceSortingCriteria withSortOrder(ThreatIntelligenceSortingCriteriaEnum sortOrder) {
        this.sortOrder = sortOrder;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("itemKey", this.itemKey);
        jsonWriter.writeStringField("sortOrder", this.sortOrder == null ? null : this.sortOrder.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ThreatIntelligenceSortingCriteria from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ThreatIntelligenceSortingCriteria if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ThreatIntelligenceSortingCriteria.
     */
    public static ThreatIntelligenceSortingCriteria fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ThreatIntelligenceSortingCriteria deserializedThreatIntelligenceSortingCriteria
                = new ThreatIntelligenceSortingCriteria();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("itemKey".equals(fieldName)) {
                    deserializedThreatIntelligenceSortingCriteria.itemKey = reader.getString();
                } else if ("sortOrder".equals(fieldName)) {
                    deserializedThreatIntelligenceSortingCriteria.sortOrder
                        = ThreatIntelligenceSortingCriteriaEnum.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedThreatIntelligenceSortingCriteria;
        });
    }
}
