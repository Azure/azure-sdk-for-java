// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.securityinsights.models.AlertDetailsOverride;
import com.azure.resourcemanager.securityinsights.models.AlertSeverity;
import com.azure.resourcemanager.securityinsights.models.AttackTactic;
import com.azure.resourcemanager.securityinsights.models.EntityMapping;
import com.azure.resourcemanager.securityinsights.models.IncidentConfiguration;
import com.azure.resourcemanager.securityinsights.models.QueryBasedAlertRuleProperties;
import com.fasterxml.jackson.annotation.JsonIgnore;
import java.time.Duration;
import java.util.List;
import java.util.Map;

/** Nrt alert rule base property bag. */
@Fluent
public final class NrtAlertRuleProperties extends QueryBasedAlertRuleProperties {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(NrtAlertRuleProperties.class);

    /** {@inheritDoc} */
    @Override
    public NrtAlertRuleProperties withAlertRuleTemplateName(String alertRuleTemplateName) {
        super.withAlertRuleTemplateName(alertRuleTemplateName);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public NrtAlertRuleProperties withTemplateVersion(String templateVersion) {
        super.withTemplateVersion(templateVersion);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public NrtAlertRuleProperties withDescription(String description) {
        super.withDescription(description);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public NrtAlertRuleProperties withQuery(String query) {
        super.withQuery(query);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public NrtAlertRuleProperties withDisplayName(String displayName) {
        super.withDisplayName(displayName);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public NrtAlertRuleProperties withEnabled(boolean enabled) {
        super.withEnabled(enabled);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public NrtAlertRuleProperties withSuppressionDuration(Duration suppressionDuration) {
        super.withSuppressionDuration(suppressionDuration);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public NrtAlertRuleProperties withSuppressionEnabled(boolean suppressionEnabled) {
        super.withSuppressionEnabled(suppressionEnabled);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public NrtAlertRuleProperties withSeverity(AlertSeverity severity) {
        super.withSeverity(severity);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public NrtAlertRuleProperties withTactics(List<AttackTactic> tactics) {
        super.withTactics(tactics);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public NrtAlertRuleProperties withIncidentConfiguration(IncidentConfiguration incidentConfiguration) {
        super.withIncidentConfiguration(incidentConfiguration);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public NrtAlertRuleProperties withCustomDetails(Map<String, String> customDetails) {
        super.withCustomDetails(customDetails);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public NrtAlertRuleProperties withEntityMappings(List<EntityMapping> entityMappings) {
        super.withEntityMappings(entityMappings);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public NrtAlertRuleProperties withAlertDetailsOverride(AlertDetailsOverride alertDetailsOverride) {
        super.withAlertDetailsOverride(alertDetailsOverride);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
