// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Resources created in Azure DevOps repository. */
@Fluent
public final class AzureDevOpsResourceInfo {
    /*
     * Id of the pipeline created for the source-control.
     */
    @JsonProperty(value = "pipelineId")
    private String pipelineId;

    /*
     * Id of the service-connection created for the source-control.
     */
    @JsonProperty(value = "serviceConnectionId")
    private String serviceConnectionId;

    /**
     * Get the pipelineId property: Id of the pipeline created for the source-control.
     *
     * @return the pipelineId value.
     */
    public String pipelineId() {
        return this.pipelineId;
    }

    /**
     * Set the pipelineId property: Id of the pipeline created for the source-control.
     *
     * @param pipelineId the pipelineId value to set.
     * @return the AzureDevOpsResourceInfo object itself.
     */
    public AzureDevOpsResourceInfo withPipelineId(String pipelineId) {
        this.pipelineId = pipelineId;
        return this;
    }

    /**
     * Get the serviceConnectionId property: Id of the service-connection created for the source-control.
     *
     * @return the serviceConnectionId value.
     */
    public String serviceConnectionId() {
        return this.serviceConnectionId;
    }

    /**
     * Set the serviceConnectionId property: Id of the service-connection created for the source-control.
     *
     * @param serviceConnectionId the serviceConnectionId value to set.
     * @return the AzureDevOpsResourceInfo object itself.
     */
    public AzureDevOpsResourceInfo withServiceConnectionId(String serviceConnectionId) {
        this.serviceConnectionId = serviceConnectionId;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
