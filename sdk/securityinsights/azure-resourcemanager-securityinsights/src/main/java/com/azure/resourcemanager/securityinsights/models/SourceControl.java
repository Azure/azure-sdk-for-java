// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.securityinsights.fluent.models.SourceControlInner;
import java.util.List;

/** An immutable client-side representation of SourceControl. */
public interface SourceControl {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the etag property: Etag of the azure resource.
     *
     * @return the etag value.
     */
    String etag();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the idPropertiesId property: The id (a Guid) of the source control.
     *
     * @return the idPropertiesId value.
     */
    String idPropertiesId();

    /**
     * Gets the version property: The version number associated with the source control.
     *
     * @return the version value.
     */
    Version version();

    /**
     * Gets the displayName property: The display name of the source control.
     *
     * @return the displayName value.
     */
    String displayName();

    /**
     * Gets the description property: A description of the source control.
     *
     * @return the description value.
     */
    String description();

    /**
     * Gets the repoType property: The repository type of the source control.
     *
     * @return the repoType value.
     */
    RepoType repoType();

    /**
     * Gets the contentTypes property: Array of source control content types.
     *
     * @return the contentTypes value.
     */
    List<ContentType> contentTypes();

    /**
     * Gets the repository property: Repository metadata.
     *
     * @return the repository value.
     */
    Repository repository();

    /**
     * Gets the repositoryResourceInfo property: Information regarding the resources created in user's repository.
     *
     * @return the repositoryResourceInfo value.
     */
    RepositoryResourceInfo repositoryResourceInfo();

    /**
     * Gets the lastDeploymentInfo property: Information regarding the latest deployment for the source control.
     *
     * @return the lastDeploymentInfo value.
     */
    DeploymentInfo lastDeploymentInfo();

    /**
     * Gets the inner com.azure.resourcemanager.securityinsights.fluent.models.SourceControlInner object.
     *
     * @return the inner object.
     */
    SourceControlInner innerModel();

    /** The entirety of the SourceControl definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The SourceControl definition stages. */
    interface DefinitionStages {
        /** The first stage of the SourceControl definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the SourceControl definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, workspaceName.
             *
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param workspaceName The name of the workspace.
             * @return the next definition stage.
             */
            WithCreate withExistingWorkspace(String resourceGroupName, String workspaceName);
        }
        /**
         * The stage of the SourceControl definition which contains all the minimum required properties for the resource
         * to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithEtag,
                DefinitionStages.WithIdPropertiesId,
                DefinitionStages.WithVersion,
                DefinitionStages.WithDisplayName,
                DefinitionStages.WithDescription,
                DefinitionStages.WithRepoType,
                DefinitionStages.WithContentTypes,
                DefinitionStages.WithRepository,
                DefinitionStages.WithRepositoryResourceInfo,
                DefinitionStages.WithLastDeploymentInfo {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            SourceControl create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            SourceControl create(Context context);
        }
        /** The stage of the SourceControl definition allowing to specify etag. */
        interface WithEtag {
            /**
             * Specifies the etag property: Etag of the azure resource.
             *
             * @param etag Etag of the azure resource.
             * @return the next definition stage.
             */
            WithCreate withEtag(String etag);
        }
        /** The stage of the SourceControl definition allowing to specify idPropertiesId. */
        interface WithIdPropertiesId {
            /**
             * Specifies the idPropertiesId property: The id (a Guid) of the source control.
             *
             * @param idPropertiesId The id (a Guid) of the source control.
             * @return the next definition stage.
             */
            WithCreate withIdPropertiesId(String idPropertiesId);
        }
        /** The stage of the SourceControl definition allowing to specify version. */
        interface WithVersion {
            /**
             * Specifies the version property: The version number associated with the source control.
             *
             * @param version The version number associated with the source control.
             * @return the next definition stage.
             */
            WithCreate withVersion(Version version);
        }
        /** The stage of the SourceControl definition allowing to specify displayName. */
        interface WithDisplayName {
            /**
             * Specifies the displayName property: The display name of the source control.
             *
             * @param displayName The display name of the source control.
             * @return the next definition stage.
             */
            WithCreate withDisplayName(String displayName);
        }
        /** The stage of the SourceControl definition allowing to specify description. */
        interface WithDescription {
            /**
             * Specifies the description property: A description of the source control.
             *
             * @param description A description of the source control.
             * @return the next definition stage.
             */
            WithCreate withDescription(String description);
        }
        /** The stage of the SourceControl definition allowing to specify repoType. */
        interface WithRepoType {
            /**
             * Specifies the repoType property: The repository type of the source control.
             *
             * @param repoType The repository type of the source control.
             * @return the next definition stage.
             */
            WithCreate withRepoType(RepoType repoType);
        }
        /** The stage of the SourceControl definition allowing to specify contentTypes. */
        interface WithContentTypes {
            /**
             * Specifies the contentTypes property: Array of source control content types..
             *
             * @param contentTypes Array of source control content types.
             * @return the next definition stage.
             */
            WithCreate withContentTypes(List<ContentType> contentTypes);
        }
        /** The stage of the SourceControl definition allowing to specify repository. */
        interface WithRepository {
            /**
             * Specifies the repository property: Repository metadata..
             *
             * @param repository Repository metadata.
             * @return the next definition stage.
             */
            WithCreate withRepository(Repository repository);
        }
        /** The stage of the SourceControl definition allowing to specify repositoryResourceInfo. */
        interface WithRepositoryResourceInfo {
            /**
             * Specifies the repositoryResourceInfo property: Information regarding the resources created in user's
             * repository..
             *
             * @param repositoryResourceInfo Information regarding the resources created in user's repository.
             * @return the next definition stage.
             */
            WithCreate withRepositoryResourceInfo(RepositoryResourceInfo repositoryResourceInfo);
        }
        /** The stage of the SourceControl definition allowing to specify lastDeploymentInfo. */
        interface WithLastDeploymentInfo {
            /**
             * Specifies the lastDeploymentInfo property: Information regarding the latest deployment for the source
             * control..
             *
             * @param lastDeploymentInfo Information regarding the latest deployment for the source control.
             * @return the next definition stage.
             */
            WithCreate withLastDeploymentInfo(DeploymentInfo lastDeploymentInfo);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    SourceControl refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    SourceControl refresh(Context context);
}
