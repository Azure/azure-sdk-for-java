// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.securityinsights.models.AntispamMailDirection;
import com.azure.resourcemanager.securityinsights.models.DeliveryAction;
import com.azure.resourcemanager.securityinsights.models.DeliveryLocation;
import com.azure.resourcemanager.securityinsights.models.EntityCommonProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.UUID;

/** Mail message entity property bag. */
@Fluent
public final class MailMessageEntityProperties extends EntityCommonProperties {
    /*
     * The File entity ids of this mail message's attachments
     */
    @JsonProperty(value = "fileEntityIds", access = JsonProperty.Access.WRITE_ONLY)
    private List<String> fileEntityIds;

    /*
     * The recipient of this mail message. Note that in case of multiple recipients the mail message is forked and each
     * copy has one recipient
     */
    @JsonProperty(value = "recipient", access = JsonProperty.Access.WRITE_ONLY)
    private String recipient;

    /*
     * The Urls contained in this mail message
     */
    @JsonProperty(value = "urls", access = JsonProperty.Access.WRITE_ONLY)
    private List<String> urls;

    /*
     * The threats of this mail message
     */
    @JsonProperty(value = "threats", access = JsonProperty.Access.WRITE_ONLY)
    private List<String> threats;

    /*
     * The p1 sender's email address
     */
    @JsonProperty(value = "p1Sender", access = JsonProperty.Access.WRITE_ONLY)
    private String p1Sender;

    /*
     * The p1 sender's display name
     */
    @JsonProperty(value = "p1SenderDisplayName", access = JsonProperty.Access.WRITE_ONLY)
    private String p1SenderDisplayName;

    /*
     * The p1 sender's domain
     */
    @JsonProperty(value = "p1SenderDomain", access = JsonProperty.Access.WRITE_ONLY)
    private String p1SenderDomain;

    /*
     * The sender's IP address
     */
    @JsonProperty(value = "senderIP", access = JsonProperty.Access.WRITE_ONLY)
    private String senderIp;

    /*
     * The p2 sender's email address
     */
    @JsonProperty(value = "p2Sender", access = JsonProperty.Access.WRITE_ONLY)
    private String p2Sender;

    /*
     * The p2 sender's display name
     */
    @JsonProperty(value = "p2SenderDisplayName", access = JsonProperty.Access.WRITE_ONLY)
    private String p2SenderDisplayName;

    /*
     * The p2 sender's domain
     */
    @JsonProperty(value = "p2SenderDomain", access = JsonProperty.Access.WRITE_ONLY)
    private String p2SenderDomain;

    /*
     * The receive date of this message
     */
    @JsonProperty(value = "receiveDate", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime receiveDate;

    /*
     * The network message id of this mail message
     */
    @JsonProperty(value = "networkMessageId", access = JsonProperty.Access.WRITE_ONLY)
    private UUID networkMessageId;

    /*
     * The internet message id of this mail message
     */
    @JsonProperty(value = "internetMessageId", access = JsonProperty.Access.WRITE_ONLY)
    private String internetMessageId;

    /*
     * The subject of this mail message
     */
    @JsonProperty(value = "subject", access = JsonProperty.Access.WRITE_ONLY)
    private String subject;

    /*
     * The language of this mail message
     */
    @JsonProperty(value = "language", access = JsonProperty.Access.WRITE_ONLY)
    private String language;

    /*
     * The threat detection methods
     */
    @JsonProperty(value = "threatDetectionMethods", access = JsonProperty.Access.WRITE_ONLY)
    private List<String> threatDetectionMethods;

    /*
     * The bodyFingerprintBin1
     */
    @JsonProperty(value = "bodyFingerprintBin1")
    private Integer bodyFingerprintBin1;

    /*
     * The bodyFingerprintBin2
     */
    @JsonProperty(value = "bodyFingerprintBin2")
    private Integer bodyFingerprintBin2;

    /*
     * The bodyFingerprintBin3
     */
    @JsonProperty(value = "bodyFingerprintBin3")
    private Integer bodyFingerprintBin3;

    /*
     * The bodyFingerprintBin4
     */
    @JsonProperty(value = "bodyFingerprintBin4")
    private Integer bodyFingerprintBin4;

    /*
     * The bodyFingerprintBin5
     */
    @JsonProperty(value = "bodyFingerprintBin5")
    private Integer bodyFingerprintBin5;

    /*
     * The directionality of this mail message
     */
    @JsonProperty(value = "antispamDirection")
    private AntispamMailDirection antispamDirection;

    /*
     * The delivery action of this mail message like Delivered, Blocked, Replaced etc
     */
    @JsonProperty(value = "deliveryAction")
    private DeliveryAction deliveryAction;

    /*
     * The delivery location of this mail message like Inbox, JunkFolder etc
     */
    @JsonProperty(value = "deliveryLocation")
    private DeliveryLocation deliveryLocation;

    /**
     * Get the fileEntityIds property: The File entity ids of this mail message's attachments.
     *
     * @return the fileEntityIds value.
     */
    public List<String> fileEntityIds() {
        return this.fileEntityIds;
    }

    /**
     * Get the recipient property: The recipient of this mail message. Note that in case of multiple recipients the mail
     * message is forked and each copy has one recipient.
     *
     * @return the recipient value.
     */
    public String recipient() {
        return this.recipient;
    }

    /**
     * Get the urls property: The Urls contained in this mail message.
     *
     * @return the urls value.
     */
    public List<String> urls() {
        return this.urls;
    }

    /**
     * Get the threats property: The threats of this mail message.
     *
     * @return the threats value.
     */
    public List<String> threats() {
        return this.threats;
    }

    /**
     * Get the p1Sender property: The p1 sender's email address.
     *
     * @return the p1Sender value.
     */
    public String p1Sender() {
        return this.p1Sender;
    }

    /**
     * Get the p1SenderDisplayName property: The p1 sender's display name.
     *
     * @return the p1SenderDisplayName value.
     */
    public String p1SenderDisplayName() {
        return this.p1SenderDisplayName;
    }

    /**
     * Get the p1SenderDomain property: The p1 sender's domain.
     *
     * @return the p1SenderDomain value.
     */
    public String p1SenderDomain() {
        return this.p1SenderDomain;
    }

    /**
     * Get the senderIp property: The sender's IP address.
     *
     * @return the senderIp value.
     */
    public String senderIp() {
        return this.senderIp;
    }

    /**
     * Get the p2Sender property: The p2 sender's email address.
     *
     * @return the p2Sender value.
     */
    public String p2Sender() {
        return this.p2Sender;
    }

    /**
     * Get the p2SenderDisplayName property: The p2 sender's display name.
     *
     * @return the p2SenderDisplayName value.
     */
    public String p2SenderDisplayName() {
        return this.p2SenderDisplayName;
    }

    /**
     * Get the p2SenderDomain property: The p2 sender's domain.
     *
     * @return the p2SenderDomain value.
     */
    public String p2SenderDomain() {
        return this.p2SenderDomain;
    }

    /**
     * Get the receiveDate property: The receive date of this message.
     *
     * @return the receiveDate value.
     */
    public OffsetDateTime receiveDate() {
        return this.receiveDate;
    }

    /**
     * Get the networkMessageId property: The network message id of this mail message.
     *
     * @return the networkMessageId value.
     */
    public UUID networkMessageId() {
        return this.networkMessageId;
    }

    /**
     * Get the internetMessageId property: The internet message id of this mail message.
     *
     * @return the internetMessageId value.
     */
    public String internetMessageId() {
        return this.internetMessageId;
    }

    /**
     * Get the subject property: The subject of this mail message.
     *
     * @return the subject value.
     */
    public String subject() {
        return this.subject;
    }

    /**
     * Get the language property: The language of this mail message.
     *
     * @return the language value.
     */
    public String language() {
        return this.language;
    }

    /**
     * Get the threatDetectionMethods property: The threat detection methods.
     *
     * @return the threatDetectionMethods value.
     */
    public List<String> threatDetectionMethods() {
        return this.threatDetectionMethods;
    }

    /**
     * Get the bodyFingerprintBin1 property: The bodyFingerprintBin1.
     *
     * @return the bodyFingerprintBin1 value.
     */
    public Integer bodyFingerprintBin1() {
        return this.bodyFingerprintBin1;
    }

    /**
     * Set the bodyFingerprintBin1 property: The bodyFingerprintBin1.
     *
     * @param bodyFingerprintBin1 the bodyFingerprintBin1 value to set.
     * @return the MailMessageEntityProperties object itself.
     */
    public MailMessageEntityProperties withBodyFingerprintBin1(Integer bodyFingerprintBin1) {
        this.bodyFingerprintBin1 = bodyFingerprintBin1;
        return this;
    }

    /**
     * Get the bodyFingerprintBin2 property: The bodyFingerprintBin2.
     *
     * @return the bodyFingerprintBin2 value.
     */
    public Integer bodyFingerprintBin2() {
        return this.bodyFingerprintBin2;
    }

    /**
     * Set the bodyFingerprintBin2 property: The bodyFingerprintBin2.
     *
     * @param bodyFingerprintBin2 the bodyFingerprintBin2 value to set.
     * @return the MailMessageEntityProperties object itself.
     */
    public MailMessageEntityProperties withBodyFingerprintBin2(Integer bodyFingerprintBin2) {
        this.bodyFingerprintBin2 = bodyFingerprintBin2;
        return this;
    }

    /**
     * Get the bodyFingerprintBin3 property: The bodyFingerprintBin3.
     *
     * @return the bodyFingerprintBin3 value.
     */
    public Integer bodyFingerprintBin3() {
        return this.bodyFingerprintBin3;
    }

    /**
     * Set the bodyFingerprintBin3 property: The bodyFingerprintBin3.
     *
     * @param bodyFingerprintBin3 the bodyFingerprintBin3 value to set.
     * @return the MailMessageEntityProperties object itself.
     */
    public MailMessageEntityProperties withBodyFingerprintBin3(Integer bodyFingerprintBin3) {
        this.bodyFingerprintBin3 = bodyFingerprintBin3;
        return this;
    }

    /**
     * Get the bodyFingerprintBin4 property: The bodyFingerprintBin4.
     *
     * @return the bodyFingerprintBin4 value.
     */
    public Integer bodyFingerprintBin4() {
        return this.bodyFingerprintBin4;
    }

    /**
     * Set the bodyFingerprintBin4 property: The bodyFingerprintBin4.
     *
     * @param bodyFingerprintBin4 the bodyFingerprintBin4 value to set.
     * @return the MailMessageEntityProperties object itself.
     */
    public MailMessageEntityProperties withBodyFingerprintBin4(Integer bodyFingerprintBin4) {
        this.bodyFingerprintBin4 = bodyFingerprintBin4;
        return this;
    }

    /**
     * Get the bodyFingerprintBin5 property: The bodyFingerprintBin5.
     *
     * @return the bodyFingerprintBin5 value.
     */
    public Integer bodyFingerprintBin5() {
        return this.bodyFingerprintBin5;
    }

    /**
     * Set the bodyFingerprintBin5 property: The bodyFingerprintBin5.
     *
     * @param bodyFingerprintBin5 the bodyFingerprintBin5 value to set.
     * @return the MailMessageEntityProperties object itself.
     */
    public MailMessageEntityProperties withBodyFingerprintBin5(Integer bodyFingerprintBin5) {
        this.bodyFingerprintBin5 = bodyFingerprintBin5;
        return this;
    }

    /**
     * Get the antispamDirection property: The directionality of this mail message.
     *
     * @return the antispamDirection value.
     */
    public AntispamMailDirection antispamDirection() {
        return this.antispamDirection;
    }

    /**
     * Set the antispamDirection property: The directionality of this mail message.
     *
     * @param antispamDirection the antispamDirection value to set.
     * @return the MailMessageEntityProperties object itself.
     */
    public MailMessageEntityProperties withAntispamDirection(AntispamMailDirection antispamDirection) {
        this.antispamDirection = antispamDirection;
        return this;
    }

    /**
     * Get the deliveryAction property: The delivery action of this mail message like Delivered, Blocked, Replaced etc.
     *
     * @return the deliveryAction value.
     */
    public DeliveryAction deliveryAction() {
        return this.deliveryAction;
    }

    /**
     * Set the deliveryAction property: The delivery action of this mail message like Delivered, Blocked, Replaced etc.
     *
     * @param deliveryAction the deliveryAction value to set.
     * @return the MailMessageEntityProperties object itself.
     */
    public MailMessageEntityProperties withDeliveryAction(DeliveryAction deliveryAction) {
        this.deliveryAction = deliveryAction;
        return this;
    }

    /**
     * Get the deliveryLocation property: The delivery location of this mail message like Inbox, JunkFolder etc.
     *
     * @return the deliveryLocation value.
     */
    public DeliveryLocation deliveryLocation() {
        return this.deliveryLocation;
    }

    /**
     * Set the deliveryLocation property: The delivery location of this mail message like Inbox, JunkFolder etc.
     *
     * @param deliveryLocation the deliveryLocation value to set.
     * @return the MailMessageEntityProperties object itself.
     */
    public MailMessageEntityProperties withDeliveryLocation(DeliveryLocation deliveryLocation) {
        this.deliveryLocation = deliveryLocation;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
