// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** security ml analytics settings data sources. */
@Fluent
public final class SecurityMLAnalyticsSettingsDataSource {
    /*
     * The connector id that provides the following data types
     */
    @JsonProperty(value = "connectorId")
    private String connectorId;

    /*
     * The data types used by the security ml analytics settings
     */
    @JsonProperty(value = "dataTypes")
    private List<String> dataTypes;

    /**
     * Get the connectorId property: The connector id that provides the following data types.
     *
     * @return the connectorId value.
     */
    public String connectorId() {
        return this.connectorId;
    }

    /**
     * Set the connectorId property: The connector id that provides the following data types.
     *
     * @param connectorId the connectorId value to set.
     * @return the SecurityMLAnalyticsSettingsDataSource object itself.
     */
    public SecurityMLAnalyticsSettingsDataSource withConnectorId(String connectorId) {
        this.connectorId = connectorId;
        return this;
    }

    /**
     * Get the dataTypes property: The data types used by the security ml analytics settings.
     *
     * @return the dataTypes value.
     */
    public List<String> dataTypes() {
        return this.dataTypes;
    }

    /**
     * Set the dataTypes property: The data types used by the security ml analytics settings.
     *
     * @param dataTypes the dataTypes value to set.
     * @return the SecurityMLAnalyticsSettingsDataSource object itself.
     */
    public SecurityMLAnalyticsSettingsDataSource withDataTypes(List<String> dataTypes) {
        this.dataTypes = dataTypes;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
