// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.securityinsights.fluent.models.EntityExpandResponseInner;
import com.azure.resourcemanager.securityinsights.fluent.models.EntityGetInsightsResponseInner;
import com.azure.resourcemanager.securityinsights.fluent.models.EntityInner;
import com.azure.resourcemanager.securityinsights.fluent.models.GetQueriesResponseInner;
import com.azure.resourcemanager.securityinsights.models.EntityExpandParameters;
import com.azure.resourcemanager.securityinsights.models.EntityGetInsightsParameters;
import com.azure.resourcemanager.securityinsights.models.EntityItemQueryKind;

/** An instance of this class provides access to all the operations defined in EntitiesClient. */
public interface EntitiesClient {
    /**
     * Gets all entities.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all entities as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<EntityInner> list(String resourceGroupName, String workspaceName);

    /**
     * Gets all entities.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all entities as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<EntityInner> list(String resourceGroupName, String workspaceName, Context context);

    /**
     * Gets an entity.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param entityId entity ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an entity.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    EntityInner get(String resourceGroupName, String workspaceName, String entityId);

    /**
     * Gets an entity.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param entityId entity ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an entity along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<EntityInner> getWithResponse(
        String resourceGroupName, String workspaceName, String entityId, Context context);

    /**
     * Expands an entity.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param entityId entity ID.
     * @param parameters The parameters required to execute an expand operation on the given entity.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the entity expansion result operation response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    EntityExpandResponseInner expand(
        String resourceGroupName, String workspaceName, String entityId, EntityExpandParameters parameters);

    /**
     * Expands an entity.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param entityId entity ID.
     * @param parameters The parameters required to execute an expand operation on the given entity.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the entity expansion result operation response along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<EntityExpandResponseInner> expandWithResponse(
        String resourceGroupName,
        String workspaceName,
        String entityId,
        EntityExpandParameters parameters,
        Context context);

    /**
     * Get Insights and Activities for an entity.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param entityId entity ID.
     * @param kind The Kind parameter for queries.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return insights and Activities for an entity.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    GetQueriesResponseInner queries(
        String resourceGroupName, String workspaceName, String entityId, EntityItemQueryKind kind);

    /**
     * Get Insights and Activities for an entity.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param entityId entity ID.
     * @param kind The Kind parameter for queries.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return insights and Activities for an entity along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<GetQueriesResponseInner> queriesWithResponse(
        String resourceGroupName, String workspaceName, String entityId, EntityItemQueryKind kind, Context context);

    /**
     * Execute Insights for an entity.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param entityId entity ID.
     * @param parameters The parameters required to execute insights on the given entity.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Get Insights result operation response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    EntityGetInsightsResponseInner getInsights(
        String resourceGroupName, String workspaceName, String entityId, EntityGetInsightsParameters parameters);

    /**
     * Execute Insights for an entity.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param entityId entity ID.
     * @param parameters The parameters required to execute insights on the given entity.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Get Insights result operation response along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<EntityGetInsightsResponseInner> getInsightsWithResponse(
        String resourceGroupName,
        String workspaceName,
        String entityId,
        EntityGetInsightsParameters parameters,
        Context context);
}
