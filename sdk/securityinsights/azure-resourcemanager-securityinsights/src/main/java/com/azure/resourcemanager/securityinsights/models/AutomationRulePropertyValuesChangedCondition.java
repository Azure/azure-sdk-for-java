// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The AutomationRulePropertyValuesChangedCondition model. */
@Fluent
public final class AutomationRulePropertyValuesChangedCondition {
    /*
     * The propertyName property.
     */
    @JsonProperty(value = "propertyName")
    private AutomationRulePropertyChangedConditionSupportedPropertyType propertyName;

    /*
     * The changeType property.
     */
    @JsonProperty(value = "changeType")
    private AutomationRulePropertyChangedConditionSupportedChangedType changeType;

    /*
     * The operator property.
     */
    @JsonProperty(value = "operator")
    private AutomationRulePropertyConditionSupportedOperator operator;

    /*
     * The propertyValues property.
     */
    @JsonProperty(value = "propertyValues")
    private List<String> propertyValues;

    /**
     * Get the propertyName property: The propertyName property.
     *
     * @return the propertyName value.
     */
    public AutomationRulePropertyChangedConditionSupportedPropertyType propertyName() {
        return this.propertyName;
    }

    /**
     * Set the propertyName property: The propertyName property.
     *
     * @param propertyName the propertyName value to set.
     * @return the AutomationRulePropertyValuesChangedCondition object itself.
     */
    public AutomationRulePropertyValuesChangedCondition withPropertyName(
        AutomationRulePropertyChangedConditionSupportedPropertyType propertyName) {
        this.propertyName = propertyName;
        return this;
    }

    /**
     * Get the changeType property: The changeType property.
     *
     * @return the changeType value.
     */
    public AutomationRulePropertyChangedConditionSupportedChangedType changeType() {
        return this.changeType;
    }

    /**
     * Set the changeType property: The changeType property.
     *
     * @param changeType the changeType value to set.
     * @return the AutomationRulePropertyValuesChangedCondition object itself.
     */
    public AutomationRulePropertyValuesChangedCondition withChangeType(
        AutomationRulePropertyChangedConditionSupportedChangedType changeType) {
        this.changeType = changeType;
        return this;
    }

    /**
     * Get the operator property: The operator property.
     *
     * @return the operator value.
     */
    public AutomationRulePropertyConditionSupportedOperator operator() {
        return this.operator;
    }

    /**
     * Set the operator property: The operator property.
     *
     * @param operator the operator value to set.
     * @return the AutomationRulePropertyValuesChangedCondition object itself.
     */
    public AutomationRulePropertyValuesChangedCondition withOperator(
        AutomationRulePropertyConditionSupportedOperator operator) {
        this.operator = operator;
        return this;
    }

    /**
     * Get the propertyValues property: The propertyValues property.
     *
     * @return the propertyValues value.
     */
    public List<String> propertyValues() {
        return this.propertyValues;
    }

    /**
     * Set the propertyValues property: The propertyValues property.
     *
     * @param propertyValues the propertyValues value to set.
     * @return the AutomationRulePropertyValuesChangedCondition object itself.
     */
    public AutomationRulePropertyValuesChangedCondition withPropertyValues(List<String> propertyValues) {
        this.propertyValues = propertyValues;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
