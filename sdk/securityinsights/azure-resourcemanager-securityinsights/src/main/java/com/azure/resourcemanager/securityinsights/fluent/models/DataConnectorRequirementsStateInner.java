// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.securityinsights.models.DataConnectorAuthorizationState;
import com.azure.resourcemanager.securityinsights.models.DataConnectorLicenseState;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Data connector requirements status. */
@Fluent
public final class DataConnectorRequirementsStateInner {
    /*
     * Authorization state for this connector
     */
    @JsonProperty(value = "authorizationState")
    private DataConnectorAuthorizationState authorizationState;

    /*
     * License state for this connector
     */
    @JsonProperty(value = "licenseState")
    private DataConnectorLicenseState licenseState;

    /**
     * Get the authorizationState property: Authorization state for this connector.
     *
     * @return the authorizationState value.
     */
    public DataConnectorAuthorizationState authorizationState() {
        return this.authorizationState;
    }

    /**
     * Set the authorizationState property: Authorization state for this connector.
     *
     * @param authorizationState the authorizationState value to set.
     * @return the DataConnectorRequirementsStateInner object itself.
     */
    public DataConnectorRequirementsStateInner withAuthorizationState(
        DataConnectorAuthorizationState authorizationState) {
        this.authorizationState = authorizationState;
        return this;
    }

    /**
     * Get the licenseState property: License state for this connector.
     *
     * @return the licenseState value.
     */
    public DataConnectorLicenseState licenseState() {
        return this.licenseState;
    }

    /**
     * Set the licenseState property: License state for this connector.
     *
     * @param licenseState the licenseState value to set.
     * @return the DataConnectorRequirementsStateInner object itself.
     */
    public DataConnectorRequirementsStateInner withLicenseState(DataConnectorLicenseState licenseState) {
        this.licenseState = licenseState;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
