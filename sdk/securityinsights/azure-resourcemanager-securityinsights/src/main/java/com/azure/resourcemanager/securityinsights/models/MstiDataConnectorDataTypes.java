// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The available data types for Microsoft Threat Intelligence Platforms data connector.
 */
@Fluent
public final class MstiDataConnectorDataTypes implements JsonSerializable<MstiDataConnectorDataTypes> {
    /*
     * Data type for Microsoft Threat Intelligence Platforms data connector.
     */
    private MstiDataConnectorDataTypesBingSafetyPhishingUrl bingSafetyPhishingUrl;

    /*
     * Data type for Microsoft Threat Intelligence Platforms data connector.
     */
    private MstiDataConnectorDataTypesMicrosoftEmergingThreatFeed microsoftEmergingThreatFeed;

    /**
     * Creates an instance of MstiDataConnectorDataTypes class.
     */
    public MstiDataConnectorDataTypes() {
    }

    /**
     * Get the bingSafetyPhishingUrl property: Data type for Microsoft Threat Intelligence Platforms data connector.
     * 
     * @return the bingSafetyPhishingUrl value.
     */
    public MstiDataConnectorDataTypesBingSafetyPhishingUrl bingSafetyPhishingUrl() {
        return this.bingSafetyPhishingUrl;
    }

    /**
     * Set the bingSafetyPhishingUrl property: Data type for Microsoft Threat Intelligence Platforms data connector.
     * 
     * @param bingSafetyPhishingUrl the bingSafetyPhishingUrl value to set.
     * @return the MstiDataConnectorDataTypes object itself.
     */
    public MstiDataConnectorDataTypes
        withBingSafetyPhishingUrl(MstiDataConnectorDataTypesBingSafetyPhishingUrl bingSafetyPhishingUrl) {
        this.bingSafetyPhishingUrl = bingSafetyPhishingUrl;
        return this;
    }

    /**
     * Get the microsoftEmergingThreatFeed property: Data type for Microsoft Threat Intelligence Platforms data
     * connector.
     * 
     * @return the microsoftEmergingThreatFeed value.
     */
    public MstiDataConnectorDataTypesMicrosoftEmergingThreatFeed microsoftEmergingThreatFeed() {
        return this.microsoftEmergingThreatFeed;
    }

    /**
     * Set the microsoftEmergingThreatFeed property: Data type for Microsoft Threat Intelligence Platforms data
     * connector.
     * 
     * @param microsoftEmergingThreatFeed the microsoftEmergingThreatFeed value to set.
     * @return the MstiDataConnectorDataTypes object itself.
     */
    public MstiDataConnectorDataTypes withMicrosoftEmergingThreatFeed(
        MstiDataConnectorDataTypesMicrosoftEmergingThreatFeed microsoftEmergingThreatFeed) {
        this.microsoftEmergingThreatFeed = microsoftEmergingThreatFeed;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (bingSafetyPhishingUrl() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property bingSafetyPhishingUrl in model MstiDataConnectorDataTypes"));
        } else {
            bingSafetyPhishingUrl().validate();
        }
        if (microsoftEmergingThreatFeed() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property microsoftEmergingThreatFeed in model MstiDataConnectorDataTypes"));
        } else {
            microsoftEmergingThreatFeed().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(MstiDataConnectorDataTypes.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("bingSafetyPhishingURL", this.bingSafetyPhishingUrl);
        jsonWriter.writeJsonField("microsoftEmergingThreatFeed", this.microsoftEmergingThreatFeed);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MstiDataConnectorDataTypes from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MstiDataConnectorDataTypes if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the MstiDataConnectorDataTypes.
     */
    public static MstiDataConnectorDataTypes fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            MstiDataConnectorDataTypes deserializedMstiDataConnectorDataTypes = new MstiDataConnectorDataTypes();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("bingSafetyPhishingURL".equals(fieldName)) {
                    deserializedMstiDataConnectorDataTypes.bingSafetyPhishingUrl
                        = MstiDataConnectorDataTypesBingSafetyPhishingUrl.fromJson(reader);
                } else if ("microsoftEmergingThreatFeed".equals(fieldName)) {
                    deserializedMstiDataConnectorDataTypes.microsoftEmergingThreatFeed
                        = MstiDataConnectorDataTypesMicrosoftEmergingThreatFeed.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedMstiDataConnectorDataTypes;
        });
    }
}
