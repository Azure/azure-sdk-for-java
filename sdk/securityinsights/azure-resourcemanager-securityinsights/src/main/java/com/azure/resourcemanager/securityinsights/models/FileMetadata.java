// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Represents a file. */
@Fluent
public final class FileMetadata {
    /*
     * The format of the file
     */
    @JsonProperty(value = "fileFormat")
    private FileFormat fileFormat;

    /*
     * The name of the file.
     */
    @JsonProperty(value = "fileName")
    private String fileName;

    /*
     * The size of the file.
     */
    @JsonProperty(value = "fileSize")
    private Integer fileSize;

    /*
     * A URI with a valid SAS token to allow uploading / downloading the file.
     */
    @JsonProperty(value = "fileContentUri", access = JsonProperty.Access.WRITE_ONLY)
    private String fileContentUri;

    /*
     * Indicates whether the file was deleted from the storage account.
     */
    @JsonProperty(value = "deleteStatus", access = JsonProperty.Access.WRITE_ONLY)
    private DeleteStatus deleteStatus;

    /**
     * Get the fileFormat property: The format of the file.
     *
     * @return the fileFormat value.
     */
    public FileFormat fileFormat() {
        return this.fileFormat;
    }

    /**
     * Set the fileFormat property: The format of the file.
     *
     * @param fileFormat the fileFormat value to set.
     * @return the FileMetadata object itself.
     */
    public FileMetadata withFileFormat(FileFormat fileFormat) {
        this.fileFormat = fileFormat;
        return this;
    }

    /**
     * Get the fileName property: The name of the file.
     *
     * @return the fileName value.
     */
    public String fileName() {
        return this.fileName;
    }

    /**
     * Set the fileName property: The name of the file.
     *
     * @param fileName the fileName value to set.
     * @return the FileMetadata object itself.
     */
    public FileMetadata withFileName(String fileName) {
        this.fileName = fileName;
        return this;
    }

    /**
     * Get the fileSize property: The size of the file.
     *
     * @return the fileSize value.
     */
    public Integer fileSize() {
        return this.fileSize;
    }

    /**
     * Set the fileSize property: The size of the file.
     *
     * @param fileSize the fileSize value to set.
     * @return the FileMetadata object itself.
     */
    public FileMetadata withFileSize(Integer fileSize) {
        this.fileSize = fileSize;
        return this;
    }

    /**
     * Get the fileContentUri property: A URI with a valid SAS token to allow uploading / downloading the file.
     *
     * @return the fileContentUri value.
     */
    public String fileContentUri() {
        return this.fileContentUri;
    }

    /**
     * Get the deleteStatus property: Indicates whether the file was deleted from the storage account.
     *
     * @return the deleteStatus value.
     */
    public DeleteStatus deleteStatus() {
        return this.deleteStatus;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
