// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * An individual contact associated with this domain.
 */
@Fluent
public final class EnrichmentDomainWhoisContact implements JsonSerializable<EnrichmentDomainWhoisContact> {
    /*
     * The name of this contact
     */
    private String name;

    /*
     * The organization for this contact
     */
    private String org;

    /*
     * A list describing the street address for this contact
     */
    private List<String> street;

    /*
     * The city for this contact
     */
    private String city;

    /*
     * The state for this contact
     */
    private String state;

    /*
     * The postal code for this contact
     */
    private String postal;

    /*
     * The country for this contact
     */
    private String country;

    /*
     * The phone number for this contact
     */
    private String phone;

    /*
     * The fax number for this contact
     */
    private String fax;

    /*
     * The email address for this contact
     */
    private String email;

    /**
     * Creates an instance of EnrichmentDomainWhoisContact class.
     */
    public EnrichmentDomainWhoisContact() {
    }

    /**
     * Get the name property: The name of this contact.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: The name of this contact.
     * 
     * @param name the name value to set.
     * @return the EnrichmentDomainWhoisContact object itself.
     */
    public EnrichmentDomainWhoisContact withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the org property: The organization for this contact.
     * 
     * @return the org value.
     */
    public String org() {
        return this.org;
    }

    /**
     * Set the org property: The organization for this contact.
     * 
     * @param org the org value to set.
     * @return the EnrichmentDomainWhoisContact object itself.
     */
    public EnrichmentDomainWhoisContact withOrg(String org) {
        this.org = org;
        return this;
    }

    /**
     * Get the street property: A list describing the street address for this contact.
     * 
     * @return the street value.
     */
    public List<String> street() {
        return this.street;
    }

    /**
     * Set the street property: A list describing the street address for this contact.
     * 
     * @param street the street value to set.
     * @return the EnrichmentDomainWhoisContact object itself.
     */
    public EnrichmentDomainWhoisContact withStreet(List<String> street) {
        this.street = street;
        return this;
    }

    /**
     * Get the city property: The city for this contact.
     * 
     * @return the city value.
     */
    public String city() {
        return this.city;
    }

    /**
     * Set the city property: The city for this contact.
     * 
     * @param city the city value to set.
     * @return the EnrichmentDomainWhoisContact object itself.
     */
    public EnrichmentDomainWhoisContact withCity(String city) {
        this.city = city;
        return this;
    }

    /**
     * Get the state property: The state for this contact.
     * 
     * @return the state value.
     */
    public String state() {
        return this.state;
    }

    /**
     * Set the state property: The state for this contact.
     * 
     * @param state the state value to set.
     * @return the EnrichmentDomainWhoisContact object itself.
     */
    public EnrichmentDomainWhoisContact withState(String state) {
        this.state = state;
        return this;
    }

    /**
     * Get the postal property: The postal code for this contact.
     * 
     * @return the postal value.
     */
    public String postal() {
        return this.postal;
    }

    /**
     * Set the postal property: The postal code for this contact.
     * 
     * @param postal the postal value to set.
     * @return the EnrichmentDomainWhoisContact object itself.
     */
    public EnrichmentDomainWhoisContact withPostal(String postal) {
        this.postal = postal;
        return this;
    }

    /**
     * Get the country property: The country for this contact.
     * 
     * @return the country value.
     */
    public String country() {
        return this.country;
    }

    /**
     * Set the country property: The country for this contact.
     * 
     * @param country the country value to set.
     * @return the EnrichmentDomainWhoisContact object itself.
     */
    public EnrichmentDomainWhoisContact withCountry(String country) {
        this.country = country;
        return this;
    }

    /**
     * Get the phone property: The phone number for this contact.
     * 
     * @return the phone value.
     */
    public String phone() {
        return this.phone;
    }

    /**
     * Set the phone property: The phone number for this contact.
     * 
     * @param phone the phone value to set.
     * @return the EnrichmentDomainWhoisContact object itself.
     */
    public EnrichmentDomainWhoisContact withPhone(String phone) {
        this.phone = phone;
        return this;
    }

    /**
     * Get the fax property: The fax number for this contact.
     * 
     * @return the fax value.
     */
    public String fax() {
        return this.fax;
    }

    /**
     * Set the fax property: The fax number for this contact.
     * 
     * @param fax the fax value to set.
     * @return the EnrichmentDomainWhoisContact object itself.
     */
    public EnrichmentDomainWhoisContact withFax(String fax) {
        this.fax = fax;
        return this;
    }

    /**
     * Get the email property: The email address for this contact.
     * 
     * @return the email value.
     */
    public String email() {
        return this.email;
    }

    /**
     * Set the email property: The email address for this contact.
     * 
     * @param email the email value to set.
     * @return the EnrichmentDomainWhoisContact object itself.
     */
    public EnrichmentDomainWhoisContact withEmail(String email) {
        this.email = email;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("name", this.name);
        jsonWriter.writeStringField("org", this.org);
        jsonWriter.writeArrayField("street", this.street, (writer, element) -> writer.writeString(element));
        jsonWriter.writeStringField("city", this.city);
        jsonWriter.writeStringField("state", this.state);
        jsonWriter.writeStringField("postal", this.postal);
        jsonWriter.writeStringField("country", this.country);
        jsonWriter.writeStringField("phone", this.phone);
        jsonWriter.writeStringField("fax", this.fax);
        jsonWriter.writeStringField("email", this.email);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of EnrichmentDomainWhoisContact from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of EnrichmentDomainWhoisContact if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the EnrichmentDomainWhoisContact.
     */
    public static EnrichmentDomainWhoisContact fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            EnrichmentDomainWhoisContact deserializedEnrichmentDomainWhoisContact = new EnrichmentDomainWhoisContact();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("name".equals(fieldName)) {
                    deserializedEnrichmentDomainWhoisContact.name = reader.getString();
                } else if ("org".equals(fieldName)) {
                    deserializedEnrichmentDomainWhoisContact.org = reader.getString();
                } else if ("street".equals(fieldName)) {
                    List<String> street = reader.readArray(reader1 -> reader1.getString());
                    deserializedEnrichmentDomainWhoisContact.street = street;
                } else if ("city".equals(fieldName)) {
                    deserializedEnrichmentDomainWhoisContact.city = reader.getString();
                } else if ("state".equals(fieldName)) {
                    deserializedEnrichmentDomainWhoisContact.state = reader.getString();
                } else if ("postal".equals(fieldName)) {
                    deserializedEnrichmentDomainWhoisContact.postal = reader.getString();
                } else if ("country".equals(fieldName)) {
                    deserializedEnrichmentDomainWhoisContact.country = reader.getString();
                } else if ("phone".equals(fieldName)) {
                    deserializedEnrichmentDomainWhoisContact.phone = reader.getString();
                } else if ("fax".equals(fieldName)) {
                    deserializedEnrichmentDomainWhoisContact.fax = reader.getString();
                } else if ("email".equals(fieldName)) {
                    deserializedEnrichmentDomainWhoisContact.email = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedEnrichmentDomainWhoisContact;
        });
    }
}
