// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.time.OffsetDateTime;
import java.util.Map;

/** AzureWorkload SAP Hana -specific restore. Specifically for PointInTime/Log restore. */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    include = JsonTypeInfo.As.PROPERTY,
    property = "objectType",
    defaultImpl = AzureWorkloadSapHanaPointInTimeRestoreRequest.class)
@JsonTypeName("AzureWorkloadSAPHanaPointInTimeRestoreRequest")
@JsonSubTypes({
    @JsonSubTypes.Type(
        name = "AzureWorkloadSAPHanaPointInTimeRestoreWithRehydrateRequest",
        value = AzureWorkloadSapHanaPointInTimeRestoreWithRehydrateRequest.class)
})
@Fluent
public class AzureWorkloadSapHanaPointInTimeRestoreRequest extends AzureWorkloadSapHanaRestoreRequest {
    @JsonIgnore
    private final ClientLogger logger = new ClientLogger(AzureWorkloadSapHanaPointInTimeRestoreRequest.class);

    /*
     * PointInTime value
     */
    @JsonProperty(value = "pointInTime")
    private OffsetDateTime pointInTime;

    /**
     * Get the pointInTime property: PointInTime value.
     *
     * @return the pointInTime value.
     */
    public OffsetDateTime pointInTime() {
        return this.pointInTime;
    }

    /**
     * Set the pointInTime property: PointInTime value.
     *
     * @param pointInTime the pointInTime value to set.
     * @return the AzureWorkloadSapHanaPointInTimeRestoreRequest object itself.
     */
    public AzureWorkloadSapHanaPointInTimeRestoreRequest withPointInTime(OffsetDateTime pointInTime) {
        this.pointInTime = pointInTime;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AzureWorkloadSapHanaPointInTimeRestoreRequest withRecoveryType(RecoveryType recoveryType) {
        super.withRecoveryType(recoveryType);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AzureWorkloadSapHanaPointInTimeRestoreRequest withSourceResourceId(String sourceResourceId) {
        super.withSourceResourceId(sourceResourceId);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AzureWorkloadSapHanaPointInTimeRestoreRequest withPropertyBag(Map<String, String> propertyBag) {
        super.withPropertyBag(propertyBag);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AzureWorkloadSapHanaPointInTimeRestoreRequest withTargetInfo(TargetRestoreInfo targetInfo) {
        super.withTargetInfo(targetInfo);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AzureWorkloadSapHanaPointInTimeRestoreRequest withRecoveryMode(RecoveryMode recoveryMode) {
        super.withRecoveryMode(recoveryMode);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
