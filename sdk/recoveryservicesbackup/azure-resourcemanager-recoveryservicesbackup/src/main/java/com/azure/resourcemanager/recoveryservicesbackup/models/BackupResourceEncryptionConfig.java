// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The BackupResourceEncryptionConfig model.
 */
@Fluent
public class BackupResourceEncryptionConfig implements JsonSerializable<BackupResourceEncryptionConfig> {
    /*
     * Encryption At Rest Type
     */
    private EncryptionAtRestType encryptionAtRestType;

    /*
     * Key Vault Key URI
     */
    private String keyUri;

    /*
     * Key Vault Subscription Id
     */
    private String subscriptionId;

    /*
     * The lastUpdateStatus property.
     */
    private LastUpdateStatus lastUpdateStatus;

    /*
     * The infrastructureEncryptionState property.
     */
    private InfrastructureEncryptionState infrastructureEncryptionState;

    /**
     * Creates an instance of BackupResourceEncryptionConfig class.
     */
    public BackupResourceEncryptionConfig() {
    }

    /**
     * Get the encryptionAtRestType property: Encryption At Rest Type.
     * 
     * @return the encryptionAtRestType value.
     */
    public EncryptionAtRestType encryptionAtRestType() {
        return this.encryptionAtRestType;
    }

    /**
     * Set the encryptionAtRestType property: Encryption At Rest Type.
     * 
     * @param encryptionAtRestType the encryptionAtRestType value to set.
     * @return the BackupResourceEncryptionConfig object itself.
     */
    public BackupResourceEncryptionConfig withEncryptionAtRestType(EncryptionAtRestType encryptionAtRestType) {
        this.encryptionAtRestType = encryptionAtRestType;
        return this;
    }

    /**
     * Get the keyUri property: Key Vault Key URI.
     * 
     * @return the keyUri value.
     */
    public String keyUri() {
        return this.keyUri;
    }

    /**
     * Set the keyUri property: Key Vault Key URI.
     * 
     * @param keyUri the keyUri value to set.
     * @return the BackupResourceEncryptionConfig object itself.
     */
    public BackupResourceEncryptionConfig withKeyUri(String keyUri) {
        this.keyUri = keyUri;
        return this;
    }

    /**
     * Get the subscriptionId property: Key Vault Subscription Id.
     * 
     * @return the subscriptionId value.
     */
    public String subscriptionId() {
        return this.subscriptionId;
    }

    /**
     * Set the subscriptionId property: Key Vault Subscription Id.
     * 
     * @param subscriptionId the subscriptionId value to set.
     * @return the BackupResourceEncryptionConfig object itself.
     */
    public BackupResourceEncryptionConfig withSubscriptionId(String subscriptionId) {
        this.subscriptionId = subscriptionId;
        return this;
    }

    /**
     * Get the lastUpdateStatus property: The lastUpdateStatus property.
     * 
     * @return the lastUpdateStatus value.
     */
    public LastUpdateStatus lastUpdateStatus() {
        return this.lastUpdateStatus;
    }

    /**
     * Set the lastUpdateStatus property: The lastUpdateStatus property.
     * 
     * @param lastUpdateStatus the lastUpdateStatus value to set.
     * @return the BackupResourceEncryptionConfig object itself.
     */
    public BackupResourceEncryptionConfig withLastUpdateStatus(LastUpdateStatus lastUpdateStatus) {
        this.lastUpdateStatus = lastUpdateStatus;
        return this;
    }

    /**
     * Get the infrastructureEncryptionState property: The infrastructureEncryptionState property.
     * 
     * @return the infrastructureEncryptionState value.
     */
    public InfrastructureEncryptionState infrastructureEncryptionState() {
        return this.infrastructureEncryptionState;
    }

    /**
     * Set the infrastructureEncryptionState property: The infrastructureEncryptionState property.
     * 
     * @param infrastructureEncryptionState the infrastructureEncryptionState value to set.
     * @return the BackupResourceEncryptionConfig object itself.
     */
    public BackupResourceEncryptionConfig
        withInfrastructureEncryptionState(InfrastructureEncryptionState infrastructureEncryptionState) {
        this.infrastructureEncryptionState = infrastructureEncryptionState;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("encryptionAtRestType",
            this.encryptionAtRestType == null ? null : this.encryptionAtRestType.toString());
        jsonWriter.writeStringField("keyUri", this.keyUri);
        jsonWriter.writeStringField("subscriptionId", this.subscriptionId);
        jsonWriter.writeStringField("lastUpdateStatus",
            this.lastUpdateStatus == null ? null : this.lastUpdateStatus.toString());
        jsonWriter.writeStringField("infrastructureEncryptionState",
            this.infrastructureEncryptionState == null ? null : this.infrastructureEncryptionState.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of BackupResourceEncryptionConfig from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of BackupResourceEncryptionConfig if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the BackupResourceEncryptionConfig.
     */
    public static BackupResourceEncryptionConfig fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            BackupResourceEncryptionConfig deserializedBackupResourceEncryptionConfig
                = new BackupResourceEncryptionConfig();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("encryptionAtRestType".equals(fieldName)) {
                    deserializedBackupResourceEncryptionConfig.encryptionAtRestType
                        = EncryptionAtRestType.fromString(reader.getString());
                } else if ("keyUri".equals(fieldName)) {
                    deserializedBackupResourceEncryptionConfig.keyUri = reader.getString();
                } else if ("subscriptionId".equals(fieldName)) {
                    deserializedBackupResourceEncryptionConfig.subscriptionId = reader.getString();
                } else if ("lastUpdateStatus".equals(fieldName)) {
                    deserializedBackupResourceEncryptionConfig.lastUpdateStatus
                        = LastUpdateStatus.fromString(reader.getString());
                } else if ("infrastructureEncryptionState".equals(fieldName)) {
                    deserializedBackupResourceEncryptionConfig.infrastructureEncryptionState
                        = InfrastructureEncryptionState.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedBackupResourceEncryptionConfig;
        });
    }
}
