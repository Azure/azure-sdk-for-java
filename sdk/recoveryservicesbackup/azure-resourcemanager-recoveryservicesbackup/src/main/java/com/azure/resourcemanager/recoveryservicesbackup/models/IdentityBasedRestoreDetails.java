// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * IaaS VM workload specific restore details for restores using managed identity.
 */
@Fluent
public final class IdentityBasedRestoreDetails implements JsonSerializable<IdentityBasedRestoreDetails> {
    /*
     * Gets the class type.
     */
    private String objectType;

    /*
     * Fully qualified ARM ID of the target storage account.
     */
    private String targetStorageAccountId;

    /**
     * Creates an instance of IdentityBasedRestoreDetails class.
     */
    public IdentityBasedRestoreDetails() {
    }

    /**
     * Get the objectType property: Gets the class type.
     * 
     * @return the objectType value.
     */
    public String objectType() {
        return this.objectType;
    }

    /**
     * Set the objectType property: Gets the class type.
     * 
     * @param objectType the objectType value to set.
     * @return the IdentityBasedRestoreDetails object itself.
     */
    public IdentityBasedRestoreDetails withObjectType(String objectType) {
        this.objectType = objectType;
        return this;
    }

    /**
     * Get the targetStorageAccountId property: Fully qualified ARM ID of the target storage account.
     * 
     * @return the targetStorageAccountId value.
     */
    public String targetStorageAccountId() {
        return this.targetStorageAccountId;
    }

    /**
     * Set the targetStorageAccountId property: Fully qualified ARM ID of the target storage account.
     * 
     * @param targetStorageAccountId the targetStorageAccountId value to set.
     * @return the IdentityBasedRestoreDetails object itself.
     */
    public IdentityBasedRestoreDetails withTargetStorageAccountId(String targetStorageAccountId) {
        this.targetStorageAccountId = targetStorageAccountId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("objectType", this.objectType);
        jsonWriter.writeStringField("targetStorageAccountId", this.targetStorageAccountId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of IdentityBasedRestoreDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of IdentityBasedRestoreDetails if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the IdentityBasedRestoreDetails.
     */
    public static IdentityBasedRestoreDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            IdentityBasedRestoreDetails deserializedIdentityBasedRestoreDetails = new IdentityBasedRestoreDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("objectType".equals(fieldName)) {
                    deserializedIdentityBasedRestoreDetails.objectType = reader.getString();
                } else if ("targetStorageAccountId".equals(fieldName)) {
                    deserializedIdentityBasedRestoreDetails.targetStorageAccountId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedIdentityBasedRestoreDetails;
        });
    }
}
