// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Common settings field for backup management. */
@Fluent
public final class Settings {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(Settings.class);

    /*
     * TimeZone optional input as string. For example: TimeZone = "Pacific
     * Standard Time".
     */
    @JsonProperty(value = "timeZone")
    private String timeZone;

    /*
     * SQL compression flag
     */
    @JsonProperty(value = "issqlcompression")
    private Boolean issqlcompression;

    /*
     * Workload compression flag. This has been added so that
     * 'isSqlCompression'
     * will be deprecated once clients upgrade to consider this flag.
     */
    @JsonProperty(value = "isCompression")
    private Boolean isCompression;

    /**
     * Get the timeZone property: TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
     *
     * @return the timeZone value.
     */
    public String timeZone() {
        return this.timeZone;
    }

    /**
     * Set the timeZone property: TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
     *
     * @param timeZone the timeZone value to set.
     * @return the Settings object itself.
     */
    public Settings withTimeZone(String timeZone) {
        this.timeZone = timeZone;
        return this;
    }

    /**
     * Get the issqlcompression property: SQL compression flag.
     *
     * @return the issqlcompression value.
     */
    public Boolean issqlcompression() {
        return this.issqlcompression;
    }

    /**
     * Set the issqlcompression property: SQL compression flag.
     *
     * @param issqlcompression the issqlcompression value to set.
     * @return the Settings object itself.
     */
    public Settings withIssqlcompression(Boolean issqlcompression) {
        this.issqlcompression = issqlcompression;
        return this;
    }

    /**
     * Get the isCompression property: Workload compression flag. This has been added so that 'isSqlCompression' will be
     * deprecated once clients upgrade to consider this flag.
     *
     * @return the isCompression value.
     */
    public Boolean isCompression() {
        return this.isCompression;
    }

    /**
     * Set the isCompression property: Workload compression flag. This has been added so that 'isSqlCompression' will be
     * deprecated once clients upgrade to consider this flag.
     *
     * @param isCompression the isCompression value to set.
     * @return the Settings object itself.
     */
    public Settings withIsCompression(Boolean isCompression) {
        this.isCompression = isCompression;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
