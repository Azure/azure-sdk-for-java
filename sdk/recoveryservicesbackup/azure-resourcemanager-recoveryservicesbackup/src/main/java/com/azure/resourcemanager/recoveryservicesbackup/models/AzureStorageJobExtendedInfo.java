// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;
import java.util.Map;

/**
 * Azure Storage workload-specific additional information for job.
 */
@Fluent
public final class AzureStorageJobExtendedInfo implements JsonSerializable<AzureStorageJobExtendedInfo> {
    /*
     * List of tasks for this job
     */
    private List<AzureStorageJobTaskDetails> tasksList;

    /*
     * Job properties.
     */
    private Map<String, String> propertyBag;

    /*
     * Non localized error message on job execution.
     */
    private String dynamicErrorMessage;

    /**
     * Creates an instance of AzureStorageJobExtendedInfo class.
     */
    public AzureStorageJobExtendedInfo() {
    }

    /**
     * Get the tasksList property: List of tasks for this job.
     * 
     * @return the tasksList value.
     */
    public List<AzureStorageJobTaskDetails> tasksList() {
        return this.tasksList;
    }

    /**
     * Set the tasksList property: List of tasks for this job.
     * 
     * @param tasksList the tasksList value to set.
     * @return the AzureStorageJobExtendedInfo object itself.
     */
    public AzureStorageJobExtendedInfo withTasksList(List<AzureStorageJobTaskDetails> tasksList) {
        this.tasksList = tasksList;
        return this;
    }

    /**
     * Get the propertyBag property: Job properties.
     * 
     * @return the propertyBag value.
     */
    public Map<String, String> propertyBag() {
        return this.propertyBag;
    }

    /**
     * Set the propertyBag property: Job properties.
     * 
     * @param propertyBag the propertyBag value to set.
     * @return the AzureStorageJobExtendedInfo object itself.
     */
    public AzureStorageJobExtendedInfo withPropertyBag(Map<String, String> propertyBag) {
        this.propertyBag = propertyBag;
        return this;
    }

    /**
     * Get the dynamicErrorMessage property: Non localized error message on job execution.
     * 
     * @return the dynamicErrorMessage value.
     */
    public String dynamicErrorMessage() {
        return this.dynamicErrorMessage;
    }

    /**
     * Set the dynamicErrorMessage property: Non localized error message on job execution.
     * 
     * @param dynamicErrorMessage the dynamicErrorMessage value to set.
     * @return the AzureStorageJobExtendedInfo object itself.
     */
    public AzureStorageJobExtendedInfo withDynamicErrorMessage(String dynamicErrorMessage) {
        this.dynamicErrorMessage = dynamicErrorMessage;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (tasksList() != null) {
            tasksList().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("tasksList", this.tasksList, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeMapField("propertyBag", this.propertyBag, (writer, element) -> writer.writeString(element));
        jsonWriter.writeStringField("dynamicErrorMessage", this.dynamicErrorMessage);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureStorageJobExtendedInfo from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureStorageJobExtendedInfo if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AzureStorageJobExtendedInfo.
     */
    public static AzureStorageJobExtendedInfo fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AzureStorageJobExtendedInfo deserializedAzureStorageJobExtendedInfo = new AzureStorageJobExtendedInfo();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("tasksList".equals(fieldName)) {
                    List<AzureStorageJobTaskDetails> tasksList
                        = reader.readArray(reader1 -> AzureStorageJobTaskDetails.fromJson(reader1));
                    deserializedAzureStorageJobExtendedInfo.tasksList = tasksList;
                } else if ("propertyBag".equals(fieldName)) {
                    Map<String, String> propertyBag = reader.readMap(reader1 -> reader1.getString());
                    deserializedAzureStorageJobExtendedInfo.propertyBag = propertyBag;
                } else if ("dynamicErrorMessage".equals(fieldName)) {
                    deserializedAzureStorageJobExtendedInfo.dynamicErrorMessage = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAzureStorageJobExtendedInfo;
        });
    }
}
