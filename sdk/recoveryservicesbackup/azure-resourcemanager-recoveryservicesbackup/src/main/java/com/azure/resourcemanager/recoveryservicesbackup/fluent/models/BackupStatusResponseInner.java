// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.recoveryservicesbackup.models.AcquireStorageAccountLock;
import com.azure.resourcemanager.recoveryservicesbackup.models.FabricName;
import com.azure.resourcemanager.recoveryservicesbackup.models.ProtectionStatus;
import java.io.IOException;

/**
 * BackupStatus response.
 */
@Fluent
public final class BackupStatusResponseInner implements JsonSerializable<BackupStatusResponseInner> {
    /*
     * Specifies whether the container is registered or not
     */
    private ProtectionStatus protectionStatus;

    /*
     * Specifies the arm resource id of the vault
     */
    private String vaultId;

    /*
     * Specifies the fabric name - Azure or AD
     */
    private FabricName fabricName;

    /*
     * Specifies the product specific container name. E.g. iaasvmcontainer;iaasvmcontainer;csname;vmname.
     */
    private String containerName;

    /*
     * Specifies the product specific ds name. E.g. vm;iaasvmcontainer;csname;vmname.
     */
    private String protectedItemName;

    /*
     * ErrorCode in case of intent failed
     */
    private String errorCode;

    /*
     * ErrorMessage in case of intent failed.
     */
    private String errorMessage;

    /*
     * Specifies the policy name which is used for protection
     */
    private String policyName;

    /*
     * Container registration status
     */
    private String registrationStatus;

    /*
     * Number of protected items
     */
    private Integer protectedItemsCount;

    /*
     * Specifies whether the storage account lock has been acquired or not
     */
    private AcquireStorageAccountLock acquireStorageAccountLock;

    /**
     * Creates an instance of BackupStatusResponseInner class.
     */
    public BackupStatusResponseInner() {
    }

    /**
     * Get the protectionStatus property: Specifies whether the container is registered or not.
     * 
     * @return the protectionStatus value.
     */
    public ProtectionStatus protectionStatus() {
        return this.protectionStatus;
    }

    /**
     * Set the protectionStatus property: Specifies whether the container is registered or not.
     * 
     * @param protectionStatus the protectionStatus value to set.
     * @return the BackupStatusResponseInner object itself.
     */
    public BackupStatusResponseInner withProtectionStatus(ProtectionStatus protectionStatus) {
        this.protectionStatus = protectionStatus;
        return this;
    }

    /**
     * Get the vaultId property: Specifies the arm resource id of the vault.
     * 
     * @return the vaultId value.
     */
    public String vaultId() {
        return this.vaultId;
    }

    /**
     * Set the vaultId property: Specifies the arm resource id of the vault.
     * 
     * @param vaultId the vaultId value to set.
     * @return the BackupStatusResponseInner object itself.
     */
    public BackupStatusResponseInner withVaultId(String vaultId) {
        this.vaultId = vaultId;
        return this;
    }

    /**
     * Get the fabricName property: Specifies the fabric name - Azure or AD.
     * 
     * @return the fabricName value.
     */
    public FabricName fabricName() {
        return this.fabricName;
    }

    /**
     * Set the fabricName property: Specifies the fabric name - Azure or AD.
     * 
     * @param fabricName the fabricName value to set.
     * @return the BackupStatusResponseInner object itself.
     */
    public BackupStatusResponseInner withFabricName(FabricName fabricName) {
        this.fabricName = fabricName;
        return this;
    }

    /**
     * Get the containerName property: Specifies the product specific container name. E.g.
     * iaasvmcontainer;iaasvmcontainer;csname;vmname.
     * 
     * @return the containerName value.
     */
    public String containerName() {
        return this.containerName;
    }

    /**
     * Set the containerName property: Specifies the product specific container name. E.g.
     * iaasvmcontainer;iaasvmcontainer;csname;vmname.
     * 
     * @param containerName the containerName value to set.
     * @return the BackupStatusResponseInner object itself.
     */
    public BackupStatusResponseInner withContainerName(String containerName) {
        this.containerName = containerName;
        return this;
    }

    /**
     * Get the protectedItemName property: Specifies the product specific ds name. E.g.
     * vm;iaasvmcontainer;csname;vmname.
     * 
     * @return the protectedItemName value.
     */
    public String protectedItemName() {
        return this.protectedItemName;
    }

    /**
     * Set the protectedItemName property: Specifies the product specific ds name. E.g.
     * vm;iaasvmcontainer;csname;vmname.
     * 
     * @param protectedItemName the protectedItemName value to set.
     * @return the BackupStatusResponseInner object itself.
     */
    public BackupStatusResponseInner withProtectedItemName(String protectedItemName) {
        this.protectedItemName = protectedItemName;
        return this;
    }

    /**
     * Get the errorCode property: ErrorCode in case of intent failed.
     * 
     * @return the errorCode value.
     */
    public String errorCode() {
        return this.errorCode;
    }

    /**
     * Set the errorCode property: ErrorCode in case of intent failed.
     * 
     * @param errorCode the errorCode value to set.
     * @return the BackupStatusResponseInner object itself.
     */
    public BackupStatusResponseInner withErrorCode(String errorCode) {
        this.errorCode = errorCode;
        return this;
    }

    /**
     * Get the errorMessage property: ErrorMessage in case of intent failed.
     * 
     * @return the errorMessage value.
     */
    public String errorMessage() {
        return this.errorMessage;
    }

    /**
     * Set the errorMessage property: ErrorMessage in case of intent failed.
     * 
     * @param errorMessage the errorMessage value to set.
     * @return the BackupStatusResponseInner object itself.
     */
    public BackupStatusResponseInner withErrorMessage(String errorMessage) {
        this.errorMessage = errorMessage;
        return this;
    }

    /**
     * Get the policyName property: Specifies the policy name which is used for protection.
     * 
     * @return the policyName value.
     */
    public String policyName() {
        return this.policyName;
    }

    /**
     * Set the policyName property: Specifies the policy name which is used for protection.
     * 
     * @param policyName the policyName value to set.
     * @return the BackupStatusResponseInner object itself.
     */
    public BackupStatusResponseInner withPolicyName(String policyName) {
        this.policyName = policyName;
        return this;
    }

    /**
     * Get the registrationStatus property: Container registration status.
     * 
     * @return the registrationStatus value.
     */
    public String registrationStatus() {
        return this.registrationStatus;
    }

    /**
     * Set the registrationStatus property: Container registration status.
     * 
     * @param registrationStatus the registrationStatus value to set.
     * @return the BackupStatusResponseInner object itself.
     */
    public BackupStatusResponseInner withRegistrationStatus(String registrationStatus) {
        this.registrationStatus = registrationStatus;
        return this;
    }

    /**
     * Get the protectedItemsCount property: Number of protected items.
     * 
     * @return the protectedItemsCount value.
     */
    public Integer protectedItemsCount() {
        return this.protectedItemsCount;
    }

    /**
     * Set the protectedItemsCount property: Number of protected items.
     * 
     * @param protectedItemsCount the protectedItemsCount value to set.
     * @return the BackupStatusResponseInner object itself.
     */
    public BackupStatusResponseInner withProtectedItemsCount(Integer protectedItemsCount) {
        this.protectedItemsCount = protectedItemsCount;
        return this;
    }

    /**
     * Get the acquireStorageAccountLock property: Specifies whether the storage account lock has been acquired or not.
     * 
     * @return the acquireStorageAccountLock value.
     */
    public AcquireStorageAccountLock acquireStorageAccountLock() {
        return this.acquireStorageAccountLock;
    }

    /**
     * Set the acquireStorageAccountLock property: Specifies whether the storage account lock has been acquired or not.
     * 
     * @param acquireStorageAccountLock the acquireStorageAccountLock value to set.
     * @return the BackupStatusResponseInner object itself.
     */
    public BackupStatusResponseInner
        withAcquireStorageAccountLock(AcquireStorageAccountLock acquireStorageAccountLock) {
        this.acquireStorageAccountLock = acquireStorageAccountLock;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("protectionStatus",
            this.protectionStatus == null ? null : this.protectionStatus.toString());
        jsonWriter.writeStringField("vaultId", this.vaultId);
        jsonWriter.writeStringField("fabricName", this.fabricName == null ? null : this.fabricName.toString());
        jsonWriter.writeStringField("containerName", this.containerName);
        jsonWriter.writeStringField("protectedItemName", this.protectedItemName);
        jsonWriter.writeStringField("errorCode", this.errorCode);
        jsonWriter.writeStringField("errorMessage", this.errorMessage);
        jsonWriter.writeStringField("policyName", this.policyName);
        jsonWriter.writeStringField("registrationStatus", this.registrationStatus);
        jsonWriter.writeNumberField("protectedItemsCount", this.protectedItemsCount);
        jsonWriter.writeStringField("acquireStorageAccountLock",
            this.acquireStorageAccountLock == null ? null : this.acquireStorageAccountLock.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of BackupStatusResponseInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of BackupStatusResponseInner if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the BackupStatusResponseInner.
     */
    public static BackupStatusResponseInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            BackupStatusResponseInner deserializedBackupStatusResponseInner = new BackupStatusResponseInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("protectionStatus".equals(fieldName)) {
                    deserializedBackupStatusResponseInner.protectionStatus
                        = ProtectionStatus.fromString(reader.getString());
                } else if ("vaultId".equals(fieldName)) {
                    deserializedBackupStatusResponseInner.vaultId = reader.getString();
                } else if ("fabricName".equals(fieldName)) {
                    deserializedBackupStatusResponseInner.fabricName = FabricName.fromString(reader.getString());
                } else if ("containerName".equals(fieldName)) {
                    deserializedBackupStatusResponseInner.containerName = reader.getString();
                } else if ("protectedItemName".equals(fieldName)) {
                    deserializedBackupStatusResponseInner.protectedItemName = reader.getString();
                } else if ("errorCode".equals(fieldName)) {
                    deserializedBackupStatusResponseInner.errorCode = reader.getString();
                } else if ("errorMessage".equals(fieldName)) {
                    deserializedBackupStatusResponseInner.errorMessage = reader.getString();
                } else if ("policyName".equals(fieldName)) {
                    deserializedBackupStatusResponseInner.policyName = reader.getString();
                } else if ("registrationStatus".equals(fieldName)) {
                    deserializedBackupStatusResponseInner.registrationStatus = reader.getString();
                } else if ("protectedItemsCount".equals(fieldName)) {
                    deserializedBackupStatusResponseInner.protectedItemsCount = reader.getNullable(JsonReader::getInt);
                } else if ("acquireStorageAccountLock".equals(fieldName)) {
                    deserializedBackupStatusResponseInner.acquireStorageAccountLock
                        = AcquireStorageAccountLock.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedBackupStatusResponseInner;
        });
    }
}
