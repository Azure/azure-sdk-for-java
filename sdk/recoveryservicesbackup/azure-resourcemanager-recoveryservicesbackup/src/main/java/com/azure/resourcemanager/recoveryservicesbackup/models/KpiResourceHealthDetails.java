// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * KPI Resource Health Details.
 */
@Fluent
public final class KpiResourceHealthDetails implements JsonSerializable<KpiResourceHealthDetails> {
    /*
     * Resource Health Status
     */
    private ResourceHealthStatus resourceHealthStatus;

    /*
     * Resource Health Status
     */
    private List<ResourceHealthDetails> resourceHealthDetails;

    /**
     * Creates an instance of KpiResourceHealthDetails class.
     */
    public KpiResourceHealthDetails() {
    }

    /**
     * Get the resourceHealthStatus property: Resource Health Status.
     * 
     * @return the resourceHealthStatus value.
     */
    public ResourceHealthStatus resourceHealthStatus() {
        return this.resourceHealthStatus;
    }

    /**
     * Set the resourceHealthStatus property: Resource Health Status.
     * 
     * @param resourceHealthStatus the resourceHealthStatus value to set.
     * @return the KpiResourceHealthDetails object itself.
     */
    public KpiResourceHealthDetails withResourceHealthStatus(ResourceHealthStatus resourceHealthStatus) {
        this.resourceHealthStatus = resourceHealthStatus;
        return this;
    }

    /**
     * Get the resourceHealthDetails property: Resource Health Status.
     * 
     * @return the resourceHealthDetails value.
     */
    public List<ResourceHealthDetails> resourceHealthDetails() {
        return this.resourceHealthDetails;
    }

    /**
     * Set the resourceHealthDetails property: Resource Health Status.
     * 
     * @param resourceHealthDetails the resourceHealthDetails value to set.
     * @return the KpiResourceHealthDetails object itself.
     */
    public KpiResourceHealthDetails withResourceHealthDetails(List<ResourceHealthDetails> resourceHealthDetails) {
        this.resourceHealthDetails = resourceHealthDetails;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (resourceHealthDetails() != null) {
            resourceHealthDetails().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("resourceHealthStatus",
            this.resourceHealthStatus == null ? null : this.resourceHealthStatus.toString());
        jsonWriter.writeArrayField("resourceHealthDetails", this.resourceHealthDetails,
            (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of KpiResourceHealthDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of KpiResourceHealthDetails if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the KpiResourceHealthDetails.
     */
    public static KpiResourceHealthDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            KpiResourceHealthDetails deserializedKpiResourceHealthDetails = new KpiResourceHealthDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("resourceHealthStatus".equals(fieldName)) {
                    deserializedKpiResourceHealthDetails.resourceHealthStatus
                        = ResourceHealthStatus.fromString(reader.getString());
                } else if ("resourceHealthDetails".equals(fieldName)) {
                    List<ResourceHealthDetails> resourceHealthDetails
                        = reader.readArray(reader1 -> ResourceHealthDetails.fromJson(reader1));
                    deserializedKpiResourceHealthDetails.resourceHealthDetails = resourceHealthDetails;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedKpiResourceHealthDetails;
        });
    }
}
