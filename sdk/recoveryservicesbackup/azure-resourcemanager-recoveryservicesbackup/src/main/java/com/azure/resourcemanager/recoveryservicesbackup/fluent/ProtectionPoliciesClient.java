// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.recoveryservicesbackup.fluent.models.ProtectionPolicyResourceInner;

/** An instance of this class provides access to all the operations defined in ProtectionPoliciesClient. */
public interface ProtectionPoliciesClient {
    /**
     * Provides the details of the backup policies associated to Recovery Services Vault. This is an asynchronous
     * operation. Status of the operation can be fetched using GetPolicyOperationResult API.
     *
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param policyName Backup policy information to be fetched.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return base class for backup policy.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ProtectionPolicyResourceInner get(String vaultName, String resourceGroupName, String policyName);

    /**
     * Provides the details of the backup policies associated to Recovery Services Vault. This is an asynchronous
     * operation. Status of the operation can be fetched using GetPolicyOperationResult API.
     *
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param policyName Backup policy information to be fetched.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return base class for backup policy.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ProtectionPolicyResourceInner> getWithResponse(
        String vaultName, String resourceGroupName, String policyName, Context context);

    /**
     * Creates or modifies a backup policy. This is an asynchronous operation. Status of the operation can be fetched
     * using GetPolicyOperationResult API.
     *
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param policyName Backup policy to be created.
     * @param parameters resource backup policy.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return base class for backup policy.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ProtectionPolicyResourceInner createOrUpdate(
        String vaultName, String resourceGroupName, String policyName, ProtectionPolicyResourceInner parameters);

    /**
     * Creates or modifies a backup policy. This is an asynchronous operation. Status of the operation can be fetched
     * using GetPolicyOperationResult API.
     *
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param policyName Backup policy to be created.
     * @param parameters resource backup policy.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return base class for backup policy.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ProtectionPolicyResourceInner> createOrUpdateWithResponse(
        String vaultName,
        String resourceGroupName,
        String policyName,
        ProtectionPolicyResourceInner parameters,
        Context context);

    /**
     * Deletes specified backup policy from your Recovery Services Vault. This is an asynchronous operation. Status of
     * the operation can be fetched using GetProtectionPolicyOperationResult API.
     *
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param policyName Backup policy to be deleted.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<Void>, Void> beginDelete(String vaultName, String resourceGroupName, String policyName);

    /**
     * Deletes specified backup policy from your Recovery Services Vault. This is an asynchronous operation. Status of
     * the operation can be fetched using GetProtectionPolicyOperationResult API.
     *
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param policyName Backup policy to be deleted.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<Void>, Void> beginDelete(
        String vaultName, String resourceGroupName, String policyName, Context context);

    /**
     * Deletes specified backup policy from your Recovery Services Vault. This is an asynchronous operation. Status of
     * the operation can be fetched using GetProtectionPolicyOperationResult API.
     *
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param policyName Backup policy to be deleted.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String vaultName, String resourceGroupName, String policyName);

    /**
     * Deletes specified backup policy from your Recovery Services Vault. This is an asynchronous operation. Status of
     * the operation can be fetched using GetProtectionPolicyOperationResult API.
     *
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param policyName Backup policy to be deleted.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String vaultName, String resourceGroupName, String policyName, Context context);
}
