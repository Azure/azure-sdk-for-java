// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;

/**
 * Generic backup copy.
 */
@Fluent
public final class GenericRecoveryPoint extends RecoveryPoint {
    /*
     * This property will be used as the discriminator for deciding the specific types in the polymorphic chain of
     * types.
     */
    private String objectType = "GenericRecoveryPoint";

    /*
     * Friendly name of the backup copy.
     */
    private String friendlyName;

    /*
     * Type of the backup copy.
     */
    private String recoveryPointType;

    /*
     * Time at which this backup copy was created.
     */
    private OffsetDateTime recoveryPointTime;

    /*
     * Additional information associated with this backup copy.
     */
    private String recoveryPointAdditionalInfo;

    /*
     * Properties of Recovery Point
     */
    private RecoveryPointProperties recoveryPointProperties;

    /**
     * Creates an instance of GenericRecoveryPoint class.
     */
    public GenericRecoveryPoint() {
    }

    /**
     * Get the objectType property: This property will be used as the discriminator for deciding the specific types in
     * the polymorphic chain of types.
     * 
     * @return the objectType value.
     */
    @Override
    public String objectType() {
        return this.objectType;
    }

    /**
     * Get the friendlyName property: Friendly name of the backup copy.
     * 
     * @return the friendlyName value.
     */
    public String friendlyName() {
        return this.friendlyName;
    }

    /**
     * Set the friendlyName property: Friendly name of the backup copy.
     * 
     * @param friendlyName the friendlyName value to set.
     * @return the GenericRecoveryPoint object itself.
     */
    public GenericRecoveryPoint withFriendlyName(String friendlyName) {
        this.friendlyName = friendlyName;
        return this;
    }

    /**
     * Get the recoveryPointType property: Type of the backup copy.
     * 
     * @return the recoveryPointType value.
     */
    public String recoveryPointType() {
        return this.recoveryPointType;
    }

    /**
     * Set the recoveryPointType property: Type of the backup copy.
     * 
     * @param recoveryPointType the recoveryPointType value to set.
     * @return the GenericRecoveryPoint object itself.
     */
    public GenericRecoveryPoint withRecoveryPointType(String recoveryPointType) {
        this.recoveryPointType = recoveryPointType;
        return this;
    }

    /**
     * Get the recoveryPointTime property: Time at which this backup copy was created.
     * 
     * @return the recoveryPointTime value.
     */
    public OffsetDateTime recoveryPointTime() {
        return this.recoveryPointTime;
    }

    /**
     * Set the recoveryPointTime property: Time at which this backup copy was created.
     * 
     * @param recoveryPointTime the recoveryPointTime value to set.
     * @return the GenericRecoveryPoint object itself.
     */
    public GenericRecoveryPoint withRecoveryPointTime(OffsetDateTime recoveryPointTime) {
        this.recoveryPointTime = recoveryPointTime;
        return this;
    }

    /**
     * Get the recoveryPointAdditionalInfo property: Additional information associated with this backup copy.
     * 
     * @return the recoveryPointAdditionalInfo value.
     */
    public String recoveryPointAdditionalInfo() {
        return this.recoveryPointAdditionalInfo;
    }

    /**
     * Set the recoveryPointAdditionalInfo property: Additional information associated with this backup copy.
     * 
     * @param recoveryPointAdditionalInfo the recoveryPointAdditionalInfo value to set.
     * @return the GenericRecoveryPoint object itself.
     */
    public GenericRecoveryPoint withRecoveryPointAdditionalInfo(String recoveryPointAdditionalInfo) {
        this.recoveryPointAdditionalInfo = recoveryPointAdditionalInfo;
        return this;
    }

    /**
     * Get the recoveryPointProperties property: Properties of Recovery Point.
     * 
     * @return the recoveryPointProperties value.
     */
    public RecoveryPointProperties recoveryPointProperties() {
        return this.recoveryPointProperties;
    }

    /**
     * Set the recoveryPointProperties property: Properties of Recovery Point.
     * 
     * @param recoveryPointProperties the recoveryPointProperties value to set.
     * @return the GenericRecoveryPoint object itself.
     */
    public GenericRecoveryPoint withRecoveryPointProperties(RecoveryPointProperties recoveryPointProperties) {
        this.recoveryPointProperties = recoveryPointProperties;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        if (recoveryPointProperties() != null) {
            recoveryPointProperties().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("objectType", this.objectType);
        jsonWriter.writeStringField("friendlyName", this.friendlyName);
        jsonWriter.writeStringField("recoveryPointType", this.recoveryPointType);
        jsonWriter.writeStringField("recoveryPointTime",
            this.recoveryPointTime == null
                ? null
                : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.recoveryPointTime));
        jsonWriter.writeStringField("recoveryPointAdditionalInfo", this.recoveryPointAdditionalInfo);
        jsonWriter.writeJsonField("recoveryPointProperties", this.recoveryPointProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of GenericRecoveryPoint from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of GenericRecoveryPoint if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the GenericRecoveryPoint.
     */
    public static GenericRecoveryPoint fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            GenericRecoveryPoint deserializedGenericRecoveryPoint = new GenericRecoveryPoint();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("objectType".equals(fieldName)) {
                    deserializedGenericRecoveryPoint.objectType = reader.getString();
                } else if ("friendlyName".equals(fieldName)) {
                    deserializedGenericRecoveryPoint.friendlyName = reader.getString();
                } else if ("recoveryPointType".equals(fieldName)) {
                    deserializedGenericRecoveryPoint.recoveryPointType = reader.getString();
                } else if ("recoveryPointTime".equals(fieldName)) {
                    deserializedGenericRecoveryPoint.recoveryPointTime = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("recoveryPointAdditionalInfo".equals(fieldName)) {
                    deserializedGenericRecoveryPoint.recoveryPointAdditionalInfo = reader.getString();
                } else if ("recoveryPointProperties".equals(fieldName)) {
                    deserializedGenericRecoveryPoint.recoveryPointProperties = RecoveryPointProperties.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedGenericRecoveryPoint;
        });
    }
}
