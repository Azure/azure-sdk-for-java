// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.Duration;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;

/**
 * Azure IaaS VM workload-specific job task details.
 */
@Fluent
public final class AzureIaaSvmJobTaskDetails implements JsonSerializable<AzureIaaSvmJobTaskDetails> {
    /*
     * The task display name.
     */
    private String taskId;

    /*
     * The start time.
     */
    private OffsetDateTime startTime;

    /*
     * The end time.
     */
    private OffsetDateTime endTime;

    /*
     * The instanceId.
     */
    private String instanceId;

    /*
     * Time elapsed for task.
     */
    private Duration duration;

    /*
     * The status.
     */
    private String status;

    /*
     * Progress of the task.
     */
    private Double progressPercentage;

    /*
     * Details about execution of the task.
     * eg: number of bytes transferred etc
     */
    private String taskExecutionDetails;

    /**
     * Creates an instance of AzureIaaSvmJobTaskDetails class.
     */
    public AzureIaaSvmJobTaskDetails() {
    }

    /**
     * Get the taskId property: The task display name.
     * 
     * @return the taskId value.
     */
    public String taskId() {
        return this.taskId;
    }

    /**
     * Set the taskId property: The task display name.
     * 
     * @param taskId the taskId value to set.
     * @return the AzureIaaSvmJobTaskDetails object itself.
     */
    public AzureIaaSvmJobTaskDetails withTaskId(String taskId) {
        this.taskId = taskId;
        return this;
    }

    /**
     * Get the startTime property: The start time.
     * 
     * @return the startTime value.
     */
    public OffsetDateTime startTime() {
        return this.startTime;
    }

    /**
     * Set the startTime property: The start time.
     * 
     * @param startTime the startTime value to set.
     * @return the AzureIaaSvmJobTaskDetails object itself.
     */
    public AzureIaaSvmJobTaskDetails withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }

    /**
     * Get the endTime property: The end time.
     * 
     * @return the endTime value.
     */
    public OffsetDateTime endTime() {
        return this.endTime;
    }

    /**
     * Set the endTime property: The end time.
     * 
     * @param endTime the endTime value to set.
     * @return the AzureIaaSvmJobTaskDetails object itself.
     */
    public AzureIaaSvmJobTaskDetails withEndTime(OffsetDateTime endTime) {
        this.endTime = endTime;
        return this;
    }

    /**
     * Get the instanceId property: The instanceId.
     * 
     * @return the instanceId value.
     */
    public String instanceId() {
        return this.instanceId;
    }

    /**
     * Set the instanceId property: The instanceId.
     * 
     * @param instanceId the instanceId value to set.
     * @return the AzureIaaSvmJobTaskDetails object itself.
     */
    public AzureIaaSvmJobTaskDetails withInstanceId(String instanceId) {
        this.instanceId = instanceId;
        return this;
    }

    /**
     * Get the duration property: Time elapsed for task.
     * 
     * @return the duration value.
     */
    public Duration duration() {
        return this.duration;
    }

    /**
     * Set the duration property: Time elapsed for task.
     * 
     * @param duration the duration value to set.
     * @return the AzureIaaSvmJobTaskDetails object itself.
     */
    public AzureIaaSvmJobTaskDetails withDuration(Duration duration) {
        this.duration = duration;
        return this;
    }

    /**
     * Get the status property: The status.
     * 
     * @return the status value.
     */
    public String status() {
        return this.status;
    }

    /**
     * Set the status property: The status.
     * 
     * @param status the status value to set.
     * @return the AzureIaaSvmJobTaskDetails object itself.
     */
    public AzureIaaSvmJobTaskDetails withStatus(String status) {
        this.status = status;
        return this;
    }

    /**
     * Get the progressPercentage property: Progress of the task.
     * 
     * @return the progressPercentage value.
     */
    public Double progressPercentage() {
        return this.progressPercentage;
    }

    /**
     * Set the progressPercentage property: Progress of the task.
     * 
     * @param progressPercentage the progressPercentage value to set.
     * @return the AzureIaaSvmJobTaskDetails object itself.
     */
    public AzureIaaSvmJobTaskDetails withProgressPercentage(Double progressPercentage) {
        this.progressPercentage = progressPercentage;
        return this;
    }

    /**
     * Get the taskExecutionDetails property: Details about execution of the task.
     * eg: number of bytes transferred etc.
     * 
     * @return the taskExecutionDetails value.
     */
    public String taskExecutionDetails() {
        return this.taskExecutionDetails;
    }

    /**
     * Set the taskExecutionDetails property: Details about execution of the task.
     * eg: number of bytes transferred etc.
     * 
     * @param taskExecutionDetails the taskExecutionDetails value to set.
     * @return the AzureIaaSvmJobTaskDetails object itself.
     */
    public AzureIaaSvmJobTaskDetails withTaskExecutionDetails(String taskExecutionDetails) {
        this.taskExecutionDetails = taskExecutionDetails;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("taskId", this.taskId);
        jsonWriter.writeStringField("startTime",
            this.startTime == null ? null : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.startTime));
        jsonWriter.writeStringField("endTime",
            this.endTime == null ? null : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.endTime));
        jsonWriter.writeStringField("instanceId", this.instanceId);
        jsonWriter.writeStringField("duration", CoreUtils.durationToStringWithDays(this.duration));
        jsonWriter.writeStringField("status", this.status);
        jsonWriter.writeNumberField("progressPercentage", this.progressPercentage);
        jsonWriter.writeStringField("taskExecutionDetails", this.taskExecutionDetails);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureIaaSvmJobTaskDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureIaaSvmJobTaskDetails if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AzureIaaSvmJobTaskDetails.
     */
    public static AzureIaaSvmJobTaskDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AzureIaaSvmJobTaskDetails deserializedAzureIaaSvmJobTaskDetails = new AzureIaaSvmJobTaskDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("taskId".equals(fieldName)) {
                    deserializedAzureIaaSvmJobTaskDetails.taskId = reader.getString();
                } else if ("startTime".equals(fieldName)) {
                    deserializedAzureIaaSvmJobTaskDetails.startTime = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("endTime".equals(fieldName)) {
                    deserializedAzureIaaSvmJobTaskDetails.endTime = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("instanceId".equals(fieldName)) {
                    deserializedAzureIaaSvmJobTaskDetails.instanceId = reader.getString();
                } else if ("duration".equals(fieldName)) {
                    deserializedAzureIaaSvmJobTaskDetails.duration
                        = reader.getNullable(nonNullReader -> Duration.parse(nonNullReader.getString()));
                } else if ("status".equals(fieldName)) {
                    deserializedAzureIaaSvmJobTaskDetails.status = reader.getString();
                } else if ("progressPercentage".equals(fieldName)) {
                    deserializedAzureIaaSvmJobTaskDetails.progressPercentage
                        = reader.getNullable(JsonReader::getDouble);
                } else if ("taskExecutionDetails".equals(fieldName)) {
                    deserializedAzureIaaSvmJobTaskDetails.taskExecutionDetails = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAzureIaaSvmJobTaskDetails;
        });
    }
}
