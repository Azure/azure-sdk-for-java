// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * BackupStatus request.
 */
@Fluent
public final class BackupStatusRequest implements JsonSerializable<BackupStatusRequest> {
    /*
     * Container Type - VM, SQLPaaS, DPM, AzureFileShare...
     */
    private DataSourceType resourceType;

    /*
     * Entire ARM resource id of the resource
     */
    private String resourceId;

    /*
     * Protectable Item Logical Name
     */
    private String poLogicalName;

    /**
     * Creates an instance of BackupStatusRequest class.
     */
    public BackupStatusRequest() {
    }

    /**
     * Get the resourceType property: Container Type - VM, SQLPaaS, DPM, AzureFileShare...
     * 
     * @return the resourceType value.
     */
    public DataSourceType resourceType() {
        return this.resourceType;
    }

    /**
     * Set the resourceType property: Container Type - VM, SQLPaaS, DPM, AzureFileShare...
     * 
     * @param resourceType the resourceType value to set.
     * @return the BackupStatusRequest object itself.
     */
    public BackupStatusRequest withResourceType(DataSourceType resourceType) {
        this.resourceType = resourceType;
        return this;
    }

    /**
     * Get the resourceId property: Entire ARM resource id of the resource.
     * 
     * @return the resourceId value.
     */
    public String resourceId() {
        return this.resourceId;
    }

    /**
     * Set the resourceId property: Entire ARM resource id of the resource.
     * 
     * @param resourceId the resourceId value to set.
     * @return the BackupStatusRequest object itself.
     */
    public BackupStatusRequest withResourceId(String resourceId) {
        this.resourceId = resourceId;
        return this;
    }

    /**
     * Get the poLogicalName property: Protectable Item Logical Name.
     * 
     * @return the poLogicalName value.
     */
    public String poLogicalName() {
        return this.poLogicalName;
    }

    /**
     * Set the poLogicalName property: Protectable Item Logical Name.
     * 
     * @param poLogicalName the poLogicalName value to set.
     * @return the BackupStatusRequest object itself.
     */
    public BackupStatusRequest withPoLogicalName(String poLogicalName) {
        this.poLogicalName = poLogicalName;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("resourceType", this.resourceType == null ? null : this.resourceType.toString());
        jsonWriter.writeStringField("resourceId", this.resourceId);
        jsonWriter.writeStringField("poLogicalName", this.poLogicalName);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of BackupStatusRequest from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of BackupStatusRequest if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the BackupStatusRequest.
     */
    public static BackupStatusRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            BackupStatusRequest deserializedBackupStatusRequest = new BackupStatusRequest();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("resourceType".equals(fieldName)) {
                    deserializedBackupStatusRequest.resourceType = DataSourceType.fromString(reader.getString());
                } else if ("resourceId".equals(fieldName)) {
                    deserializedBackupStatusRequest.resourceId = reader.getString();
                } else if ("poLogicalName".equals(fieldName)) {
                    deserializedBackupStatusRequest.poLogicalName = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedBackupStatusRequest;
        });
    }
}
