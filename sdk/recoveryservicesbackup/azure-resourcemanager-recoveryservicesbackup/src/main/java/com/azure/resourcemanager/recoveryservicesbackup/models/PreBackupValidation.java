// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Pre-backup validation for Azure VM Workload provider.
 */
@Fluent
public final class PreBackupValidation implements JsonSerializable<PreBackupValidation> {
    /*
     * Status of protectable item, i.e. InProgress,Succeeded,Failed
     */
    private InquiryStatus status;

    /*
     * Error code of protectable item
     */
    private String code;

    /*
     * Message corresponding to the error code for the protectable item
     */
    private String message;

    /**
     * Creates an instance of PreBackupValidation class.
     */
    public PreBackupValidation() {
    }

    /**
     * Get the status property: Status of protectable item, i.e. InProgress,Succeeded,Failed.
     * 
     * @return the status value.
     */
    public InquiryStatus status() {
        return this.status;
    }

    /**
     * Set the status property: Status of protectable item, i.e. InProgress,Succeeded,Failed.
     * 
     * @param status the status value to set.
     * @return the PreBackupValidation object itself.
     */
    public PreBackupValidation withStatus(InquiryStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Get the code property: Error code of protectable item.
     * 
     * @return the code value.
     */
    public String code() {
        return this.code;
    }

    /**
     * Set the code property: Error code of protectable item.
     * 
     * @param code the code value to set.
     * @return the PreBackupValidation object itself.
     */
    public PreBackupValidation withCode(String code) {
        this.code = code;
        return this;
    }

    /**
     * Get the message property: Message corresponding to the error code for the protectable item.
     * 
     * @return the message value.
     */
    public String message() {
        return this.message;
    }

    /**
     * Set the message property: Message corresponding to the error code for the protectable item.
     * 
     * @param message the message value to set.
     * @return the PreBackupValidation object itself.
     */
    public PreBackupValidation withMessage(String message) {
        this.message = message;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("status", this.status == null ? null : this.status.toString());
        jsonWriter.writeStringField("code", this.code);
        jsonWriter.writeStringField("message", this.message);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of PreBackupValidation from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of PreBackupValidation if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the PreBackupValidation.
     */
    public static PreBackupValidation fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            PreBackupValidation deserializedPreBackupValidation = new PreBackupValidation();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("status".equals(fieldName)) {
                    deserializedPreBackupValidation.status = InquiryStatus.fromString(reader.getString());
                } else if ("code".equals(fieldName)) {
                    deserializedPreBackupValidation.code = reader.getString();
                } else if ("message".equals(fieldName)) {
                    deserializedPreBackupValidation.message = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedPreBackupValidation;
        });
    }
}
