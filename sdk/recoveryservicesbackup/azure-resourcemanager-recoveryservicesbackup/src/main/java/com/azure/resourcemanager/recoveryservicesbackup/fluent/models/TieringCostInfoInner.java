// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.resourcemanager.recoveryservicesbackup.models.TieringCostRehydrationInfo;
import com.azure.resourcemanager.recoveryservicesbackup.models.TieringCostSavingInfo;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Base class for tiering cost response.
 */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    property = "objectType",
    defaultImpl = TieringCostInfoInner.class,
    visible = true)
@JsonTypeName("TieringCostInfo")
@JsonSubTypes({
    @JsonSubTypes.Type(name = "TieringCostRehydrationInfo", value = TieringCostRehydrationInfo.class),
    @JsonSubTypes.Type(name = "TieringCostSavingInfo", value = TieringCostSavingInfo.class) })
@Immutable
public class TieringCostInfoInner {
    /*
     * This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
     */
    @JsonTypeId
    @JsonProperty(value = "objectType", required = true)
    private String objectType;

    /**
     * Creates an instance of TieringCostInfoInner class.
     */
    public TieringCostInfoInner() {
        this.objectType = "TieringCostInfo";
    }

    /**
     * Get the objectType property: This property will be used as the discriminator for deciding the specific types in
     * the polymorphic chain of types.
     * 
     * @return the objectType value.
     */
    public String objectType() {
        return this.objectType;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
