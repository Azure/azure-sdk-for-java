// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;

/**
 * Additional information on Azure Workload for SQL specific backup item.
 */
@Fluent
public final class AzureVmWorkloadProtectedItemExtendedInfo
    implements JsonSerializable<AzureVmWorkloadProtectedItemExtendedInfo> {
    /*
     * The oldest backup copy available for this backup item across all tiers.
     */
    private OffsetDateTime oldestRecoveryPoint;

    /*
     * The oldest backup copy available for this backup item in vault tier
     */
    private OffsetDateTime oldestRecoveryPointInVault;

    /*
     * The oldest backup copy available for this backup item in archive tier
     */
    private OffsetDateTime oldestRecoveryPointInArchive;

    /*
     * The latest backup copy available for this backup item in archive tier
     */
    private OffsetDateTime newestRecoveryPointInArchive;

    /*
     * Number of backup copies available for this backup item.
     */
    private Integer recoveryPointCount;

    /*
     * Indicates consistency of policy object and policy applied to this backup item.
     */
    private String policyState;

    /*
     * Indicates consistency of policy object and policy applied to this backup item.
     */
    private String recoveryModel;

    /**
     * Creates an instance of AzureVmWorkloadProtectedItemExtendedInfo class.
     */
    public AzureVmWorkloadProtectedItemExtendedInfo() {
    }

    /**
     * Get the oldestRecoveryPoint property: The oldest backup copy available for this backup item across all tiers.
     * 
     * @return the oldestRecoveryPoint value.
     */
    public OffsetDateTime oldestRecoveryPoint() {
        return this.oldestRecoveryPoint;
    }

    /**
     * Set the oldestRecoveryPoint property: The oldest backup copy available for this backup item across all tiers.
     * 
     * @param oldestRecoveryPoint the oldestRecoveryPoint value to set.
     * @return the AzureVmWorkloadProtectedItemExtendedInfo object itself.
     */
    public AzureVmWorkloadProtectedItemExtendedInfo withOldestRecoveryPoint(OffsetDateTime oldestRecoveryPoint) {
        this.oldestRecoveryPoint = oldestRecoveryPoint;
        return this;
    }

    /**
     * Get the oldestRecoveryPointInVault property: The oldest backup copy available for this backup item in vault tier.
     * 
     * @return the oldestRecoveryPointInVault value.
     */
    public OffsetDateTime oldestRecoveryPointInVault() {
        return this.oldestRecoveryPointInVault;
    }

    /**
     * Set the oldestRecoveryPointInVault property: The oldest backup copy available for this backup item in vault tier.
     * 
     * @param oldestRecoveryPointInVault the oldestRecoveryPointInVault value to set.
     * @return the AzureVmWorkloadProtectedItemExtendedInfo object itself.
     */
    public AzureVmWorkloadProtectedItemExtendedInfo
        withOldestRecoveryPointInVault(OffsetDateTime oldestRecoveryPointInVault) {
        this.oldestRecoveryPointInVault = oldestRecoveryPointInVault;
        return this;
    }

    /**
     * Get the oldestRecoveryPointInArchive property: The oldest backup copy available for this backup item in archive
     * tier.
     * 
     * @return the oldestRecoveryPointInArchive value.
     */
    public OffsetDateTime oldestRecoveryPointInArchive() {
        return this.oldestRecoveryPointInArchive;
    }

    /**
     * Set the oldestRecoveryPointInArchive property: The oldest backup copy available for this backup item in archive
     * tier.
     * 
     * @param oldestRecoveryPointInArchive the oldestRecoveryPointInArchive value to set.
     * @return the AzureVmWorkloadProtectedItemExtendedInfo object itself.
     */
    public AzureVmWorkloadProtectedItemExtendedInfo
        withOldestRecoveryPointInArchive(OffsetDateTime oldestRecoveryPointInArchive) {
        this.oldestRecoveryPointInArchive = oldestRecoveryPointInArchive;
        return this;
    }

    /**
     * Get the newestRecoveryPointInArchive property: The latest backup copy available for this backup item in archive
     * tier.
     * 
     * @return the newestRecoveryPointInArchive value.
     */
    public OffsetDateTime newestRecoveryPointInArchive() {
        return this.newestRecoveryPointInArchive;
    }

    /**
     * Set the newestRecoveryPointInArchive property: The latest backup copy available for this backup item in archive
     * tier.
     * 
     * @param newestRecoveryPointInArchive the newestRecoveryPointInArchive value to set.
     * @return the AzureVmWorkloadProtectedItemExtendedInfo object itself.
     */
    public AzureVmWorkloadProtectedItemExtendedInfo
        withNewestRecoveryPointInArchive(OffsetDateTime newestRecoveryPointInArchive) {
        this.newestRecoveryPointInArchive = newestRecoveryPointInArchive;
        return this;
    }

    /**
     * Get the recoveryPointCount property: Number of backup copies available for this backup item.
     * 
     * @return the recoveryPointCount value.
     */
    public Integer recoveryPointCount() {
        return this.recoveryPointCount;
    }

    /**
     * Set the recoveryPointCount property: Number of backup copies available for this backup item.
     * 
     * @param recoveryPointCount the recoveryPointCount value to set.
     * @return the AzureVmWorkloadProtectedItemExtendedInfo object itself.
     */
    public AzureVmWorkloadProtectedItemExtendedInfo withRecoveryPointCount(Integer recoveryPointCount) {
        this.recoveryPointCount = recoveryPointCount;
        return this;
    }

    /**
     * Get the policyState property: Indicates consistency of policy object and policy applied to this backup item.
     * 
     * @return the policyState value.
     */
    public String policyState() {
        return this.policyState;
    }

    /**
     * Set the policyState property: Indicates consistency of policy object and policy applied to this backup item.
     * 
     * @param policyState the policyState value to set.
     * @return the AzureVmWorkloadProtectedItemExtendedInfo object itself.
     */
    public AzureVmWorkloadProtectedItemExtendedInfo withPolicyState(String policyState) {
        this.policyState = policyState;
        return this;
    }

    /**
     * Get the recoveryModel property: Indicates consistency of policy object and policy applied to this backup item.
     * 
     * @return the recoveryModel value.
     */
    public String recoveryModel() {
        return this.recoveryModel;
    }

    /**
     * Set the recoveryModel property: Indicates consistency of policy object and policy applied to this backup item.
     * 
     * @param recoveryModel the recoveryModel value to set.
     * @return the AzureVmWorkloadProtectedItemExtendedInfo object itself.
     */
    public AzureVmWorkloadProtectedItemExtendedInfo withRecoveryModel(String recoveryModel) {
        this.recoveryModel = recoveryModel;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("oldestRecoveryPoint",
            this.oldestRecoveryPoint == null
                ? null
                : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.oldestRecoveryPoint));
        jsonWriter.writeStringField("oldestRecoveryPointInVault",
            this.oldestRecoveryPointInVault == null
                ? null
                : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.oldestRecoveryPointInVault));
        jsonWriter.writeStringField("oldestRecoveryPointInArchive",
            this.oldestRecoveryPointInArchive == null
                ? null
                : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.oldestRecoveryPointInArchive));
        jsonWriter.writeStringField("newestRecoveryPointInArchive",
            this.newestRecoveryPointInArchive == null
                ? null
                : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.newestRecoveryPointInArchive));
        jsonWriter.writeNumberField("recoveryPointCount", this.recoveryPointCount);
        jsonWriter.writeStringField("policyState", this.policyState);
        jsonWriter.writeStringField("recoveryModel", this.recoveryModel);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureVmWorkloadProtectedItemExtendedInfo from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureVmWorkloadProtectedItemExtendedInfo if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AzureVmWorkloadProtectedItemExtendedInfo.
     */
    public static AzureVmWorkloadProtectedItemExtendedInfo fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AzureVmWorkloadProtectedItemExtendedInfo deserializedAzureVmWorkloadProtectedItemExtendedInfo
                = new AzureVmWorkloadProtectedItemExtendedInfo();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("oldestRecoveryPoint".equals(fieldName)) {
                    deserializedAzureVmWorkloadProtectedItemExtendedInfo.oldestRecoveryPoint = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("oldestRecoveryPointInVault".equals(fieldName)) {
                    deserializedAzureVmWorkloadProtectedItemExtendedInfo.oldestRecoveryPointInVault = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("oldestRecoveryPointInArchive".equals(fieldName)) {
                    deserializedAzureVmWorkloadProtectedItemExtendedInfo.oldestRecoveryPointInArchive = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("newestRecoveryPointInArchive".equals(fieldName)) {
                    deserializedAzureVmWorkloadProtectedItemExtendedInfo.newestRecoveryPointInArchive = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("recoveryPointCount".equals(fieldName)) {
                    deserializedAzureVmWorkloadProtectedItemExtendedInfo.recoveryPointCount
                        = reader.getNullable(JsonReader::getInt);
                } else if ("policyState".equals(fieldName)) {
                    deserializedAzureVmWorkloadProtectedItemExtendedInfo.policyState = reader.getString();
                } else if ("recoveryModel".equals(fieldName)) {
                    deserializedAzureVmWorkloadProtectedItemExtendedInfo.recoveryModel = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAzureVmWorkloadProtectedItemExtendedInfo;
        });
    }
}
