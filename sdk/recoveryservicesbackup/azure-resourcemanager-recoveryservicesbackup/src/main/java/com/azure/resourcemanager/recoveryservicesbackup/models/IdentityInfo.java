// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Encapsulates Managed Identity related information.
 */
@Fluent
public final class IdentityInfo implements JsonSerializable<IdentityInfo> {
    /*
     * To differentiate if the managed identity is system assigned or user assigned
     */
    private Boolean isSystemAssignedIdentity;

    /*
     * Managed Identity Resource Id
     * Optional: Might not be required in the case of system assigned managed identity
     */
    private String managedIdentityResourceId;

    /**
     * Creates an instance of IdentityInfo class.
     */
    public IdentityInfo() {
    }

    /**
     * Get the isSystemAssignedIdentity property: To differentiate if the managed identity is system assigned or user
     * assigned.
     * 
     * @return the isSystemAssignedIdentity value.
     */
    public Boolean isSystemAssignedIdentity() {
        return this.isSystemAssignedIdentity;
    }

    /**
     * Set the isSystemAssignedIdentity property: To differentiate if the managed identity is system assigned or user
     * assigned.
     * 
     * @param isSystemAssignedIdentity the isSystemAssignedIdentity value to set.
     * @return the IdentityInfo object itself.
     */
    public IdentityInfo withIsSystemAssignedIdentity(Boolean isSystemAssignedIdentity) {
        this.isSystemAssignedIdentity = isSystemAssignedIdentity;
        return this;
    }

    /**
     * Get the managedIdentityResourceId property: Managed Identity Resource Id
     * Optional: Might not be required in the case of system assigned managed identity.
     * 
     * @return the managedIdentityResourceId value.
     */
    public String managedIdentityResourceId() {
        return this.managedIdentityResourceId;
    }

    /**
     * Set the managedIdentityResourceId property: Managed Identity Resource Id
     * Optional: Might not be required in the case of system assigned managed identity.
     * 
     * @param managedIdentityResourceId the managedIdentityResourceId value to set.
     * @return the IdentityInfo object itself.
     */
    public IdentityInfo withManagedIdentityResourceId(String managedIdentityResourceId) {
        this.managedIdentityResourceId = managedIdentityResourceId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("isSystemAssignedIdentity", this.isSystemAssignedIdentity);
        jsonWriter.writeStringField("managedIdentityResourceId", this.managedIdentityResourceId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of IdentityInfo from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of IdentityInfo if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the IdentityInfo.
     */
    public static IdentityInfo fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            IdentityInfo deserializedIdentityInfo = new IdentityInfo();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("isSystemAssignedIdentity".equals(fieldName)) {
                    deserializedIdentityInfo.isSystemAssignedIdentity = reader.getNullable(JsonReader::getBoolean);
                } else if ("managedIdentityResourceId".equals(fieldName)) {
                    deserializedIdentityInfo.managedIdentityResourceId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedIdentityInfo;
        });
    }
}
