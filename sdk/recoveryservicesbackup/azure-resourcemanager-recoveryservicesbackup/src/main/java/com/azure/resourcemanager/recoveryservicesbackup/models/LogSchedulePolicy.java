// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Log policy schedule.
 */
@Fluent
public final class LogSchedulePolicy extends SchedulePolicy {
    /*
     * This property will be used as the discriminator for deciding the specific types in the polymorphic chain of
     * types.
     */
    private String schedulePolicyType = "LogSchedulePolicy";

    /*
     * Frequency of the log schedule operation of this policy in minutes.
     */
    private Integer scheduleFrequencyInMins;

    /**
     * Creates an instance of LogSchedulePolicy class.
     */
    public LogSchedulePolicy() {
    }

    /**
     * Get the schedulePolicyType property: This property will be used as the discriminator for deciding the specific
     * types in the polymorphic chain of types.
     * 
     * @return the schedulePolicyType value.
     */
    @Override
    public String schedulePolicyType() {
        return this.schedulePolicyType;
    }

    /**
     * Get the scheduleFrequencyInMins property: Frequency of the log schedule operation of this policy in minutes.
     * 
     * @return the scheduleFrequencyInMins value.
     */
    public Integer scheduleFrequencyInMins() {
        return this.scheduleFrequencyInMins;
    }

    /**
     * Set the scheduleFrequencyInMins property: Frequency of the log schedule operation of this policy in minutes.
     * 
     * @param scheduleFrequencyInMins the scheduleFrequencyInMins value to set.
     * @return the LogSchedulePolicy object itself.
     */
    public LogSchedulePolicy withScheduleFrequencyInMins(Integer scheduleFrequencyInMins) {
        this.scheduleFrequencyInMins = scheduleFrequencyInMins;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("schedulePolicyType", this.schedulePolicyType);
        jsonWriter.writeNumberField("scheduleFrequencyInMins", this.scheduleFrequencyInMins);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of LogSchedulePolicy from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of LogSchedulePolicy if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the LogSchedulePolicy.
     */
    public static LogSchedulePolicy fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            LogSchedulePolicy deserializedLogSchedulePolicy = new LogSchedulePolicy();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("schedulePolicyType".equals(fieldName)) {
                    deserializedLogSchedulePolicy.schedulePolicyType = reader.getString();
                } else if ("scheduleFrequencyInMins".equals(fieldName)) {
                    deserializedLogSchedulePolicy.scheduleFrequencyInMins = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedLogSchedulePolicy;
        });
    }
}
