// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * MAB workload-specific error information.
 */
@Immutable
public final class MabErrorInfo implements JsonSerializable<MabErrorInfo> {
    /*
     * Localized error string.
     */
    private String errorString;

    /*
     * List of localized recommendations.
     */
    private List<String> recommendations;

    /**
     * Creates an instance of MabErrorInfo class.
     */
    public MabErrorInfo() {
    }

    /**
     * Get the errorString property: Localized error string.
     * 
     * @return the errorString value.
     */
    public String errorString() {
        return this.errorString;
    }

    /**
     * Get the recommendations property: List of localized recommendations.
     * 
     * @return the recommendations value.
     */
    public List<String> recommendations() {
        return this.recommendations;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MabErrorInfo from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MabErrorInfo if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the MabErrorInfo.
     */
    public static MabErrorInfo fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            MabErrorInfo deserializedMabErrorInfo = new MabErrorInfo();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("errorString".equals(fieldName)) {
                    deserializedMabErrorInfo.errorString = reader.getString();
                } else if ("recommendations".equals(fieldName)) {
                    List<String> recommendations = reader.readArray(reader1 -> reader1.getString());
                    deserializedMabErrorInfo.recommendations = recommendations;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedMabErrorInfo;
        });
    }
}
