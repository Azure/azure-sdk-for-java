// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;

/**
 * IaaS VM workload-specific backup request.
 */
@Fluent
public final class IaasVMBackupRequest extends BackupRequest {
    /*
     * This property will be used as the discriminator for deciding the specific types in the polymorphic chain of
     * types.
     */
    private String objectType = "IaasVMBackupRequest";

    /*
     * Backup copy will expire after the time specified (UTC).
     */
    private OffsetDateTime recoveryPointExpiryTimeInUtc;

    /**
     * Creates an instance of IaasVMBackupRequest class.
     */
    public IaasVMBackupRequest() {
    }

    /**
     * Get the objectType property: This property will be used as the discriminator for deciding the specific types in
     * the polymorphic chain of types.
     * 
     * @return the objectType value.
     */
    @Override
    public String objectType() {
        return this.objectType;
    }

    /**
     * Get the recoveryPointExpiryTimeInUtc property: Backup copy will expire after the time specified (UTC).
     * 
     * @return the recoveryPointExpiryTimeInUtc value.
     */
    public OffsetDateTime recoveryPointExpiryTimeInUtc() {
        return this.recoveryPointExpiryTimeInUtc;
    }

    /**
     * Set the recoveryPointExpiryTimeInUtc property: Backup copy will expire after the time specified (UTC).
     * 
     * @param recoveryPointExpiryTimeInUtc the recoveryPointExpiryTimeInUtc value to set.
     * @return the IaasVMBackupRequest object itself.
     */
    public IaasVMBackupRequest withRecoveryPointExpiryTimeInUtc(OffsetDateTime recoveryPointExpiryTimeInUtc) {
        this.recoveryPointExpiryTimeInUtc = recoveryPointExpiryTimeInUtc;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("objectType", this.objectType);
        jsonWriter.writeStringField("recoveryPointExpiryTimeInUTC",
            this.recoveryPointExpiryTimeInUtc == null
                ? null
                : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.recoveryPointExpiryTimeInUtc));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of IaasVMBackupRequest from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of IaasVMBackupRequest if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the IaasVMBackupRequest.
     */
    public static IaasVMBackupRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            IaasVMBackupRequest deserializedIaasVMBackupRequest = new IaasVMBackupRequest();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("objectType".equals(fieldName)) {
                    deserializedIaasVMBackupRequest.objectType = reader.getString();
                } else if ("recoveryPointExpiryTimeInUTC".equals(fieldName)) {
                    deserializedIaasVMBackupRequest.recoveryPointExpiryTimeInUtc = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedIaasVMBackupRequest;
        });
    }
}
