// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;
import java.util.Map;

/**
 * IaaS VM workload-specific backup policy.
 */
@Fluent
public final class AzureIaaSvmProtectionPolicy extends ProtectionPolicy {
    /*
     * This property will be used as the discriminator for deciding the specific types in the polymorphic chain of
     * types.
     */
    private String backupManagementType = "AzureIaasVM";

    /*
     * The instantRPDetails property.
     */
    private InstantRPAdditionalDetails instantRPDetails;

    /*
     * Backup schedule specified as part of backup policy.
     */
    private SchedulePolicy schedulePolicy;

    /*
     * Retention policy with the details on backup copy retention ranges.
     */
    private RetentionPolicy retentionPolicy;

    /*
     * Tiering policy to automatically move RPs to another tier
     * Key is Target Tier, defined in RecoveryPointTierType enum.
     * Tiering policy specifies the criteria to move RP to the target tier.
     */
    private Map<String, TieringPolicy> tieringPolicy;

    /*
     * Instant RP retention policy range in days
     */
    private Integer instantRpRetentionRangeInDays;

    /*
     * TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
     */
    private String timeZone;

    /*
     * The policyType property.
     */
    private IaasvmPolicyType policyType;

    /*
     * The snapshotConsistencyType property.
     */
    private IaasVMSnapshotConsistencyType snapshotConsistencyType;

    /**
     * Creates an instance of AzureIaaSvmProtectionPolicy class.
     */
    public AzureIaaSvmProtectionPolicy() {
    }

    /**
     * Get the backupManagementType property: This property will be used as the discriminator for deciding the specific
     * types in the polymorphic chain of types.
     * 
     * @return the backupManagementType value.
     */
    @Override
    public String backupManagementType() {
        return this.backupManagementType;
    }

    /**
     * Get the instantRPDetails property: The instantRPDetails property.
     * 
     * @return the instantRPDetails value.
     */
    public InstantRPAdditionalDetails instantRPDetails() {
        return this.instantRPDetails;
    }

    /**
     * Set the instantRPDetails property: The instantRPDetails property.
     * 
     * @param instantRPDetails the instantRPDetails value to set.
     * @return the AzureIaaSvmProtectionPolicy object itself.
     */
    public AzureIaaSvmProtectionPolicy withInstantRPDetails(InstantRPAdditionalDetails instantRPDetails) {
        this.instantRPDetails = instantRPDetails;
        return this;
    }

    /**
     * Get the schedulePolicy property: Backup schedule specified as part of backup policy.
     * 
     * @return the schedulePolicy value.
     */
    public SchedulePolicy schedulePolicy() {
        return this.schedulePolicy;
    }

    /**
     * Set the schedulePolicy property: Backup schedule specified as part of backup policy.
     * 
     * @param schedulePolicy the schedulePolicy value to set.
     * @return the AzureIaaSvmProtectionPolicy object itself.
     */
    public AzureIaaSvmProtectionPolicy withSchedulePolicy(SchedulePolicy schedulePolicy) {
        this.schedulePolicy = schedulePolicy;
        return this;
    }

    /**
     * Get the retentionPolicy property: Retention policy with the details on backup copy retention ranges.
     * 
     * @return the retentionPolicy value.
     */
    public RetentionPolicy retentionPolicy() {
        return this.retentionPolicy;
    }

    /**
     * Set the retentionPolicy property: Retention policy with the details on backup copy retention ranges.
     * 
     * @param retentionPolicy the retentionPolicy value to set.
     * @return the AzureIaaSvmProtectionPolicy object itself.
     */
    public AzureIaaSvmProtectionPolicy withRetentionPolicy(RetentionPolicy retentionPolicy) {
        this.retentionPolicy = retentionPolicy;
        return this;
    }

    /**
     * Get the tieringPolicy property: Tiering policy to automatically move RPs to another tier
     * Key is Target Tier, defined in RecoveryPointTierType enum.
     * Tiering policy specifies the criteria to move RP to the target tier.
     * 
     * @return the tieringPolicy value.
     */
    public Map<String, TieringPolicy> tieringPolicy() {
        return this.tieringPolicy;
    }

    /**
     * Set the tieringPolicy property: Tiering policy to automatically move RPs to another tier
     * Key is Target Tier, defined in RecoveryPointTierType enum.
     * Tiering policy specifies the criteria to move RP to the target tier.
     * 
     * @param tieringPolicy the tieringPolicy value to set.
     * @return the AzureIaaSvmProtectionPolicy object itself.
     */
    public AzureIaaSvmProtectionPolicy withTieringPolicy(Map<String, TieringPolicy> tieringPolicy) {
        this.tieringPolicy = tieringPolicy;
        return this;
    }

    /**
     * Get the instantRpRetentionRangeInDays property: Instant RP retention policy range in days.
     * 
     * @return the instantRpRetentionRangeInDays value.
     */
    public Integer instantRpRetentionRangeInDays() {
        return this.instantRpRetentionRangeInDays;
    }

    /**
     * Set the instantRpRetentionRangeInDays property: Instant RP retention policy range in days.
     * 
     * @param instantRpRetentionRangeInDays the instantRpRetentionRangeInDays value to set.
     * @return the AzureIaaSvmProtectionPolicy object itself.
     */
    public AzureIaaSvmProtectionPolicy withInstantRpRetentionRangeInDays(Integer instantRpRetentionRangeInDays) {
        this.instantRpRetentionRangeInDays = instantRpRetentionRangeInDays;
        return this;
    }

    /**
     * Get the timeZone property: TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
     * 
     * @return the timeZone value.
     */
    public String timeZone() {
        return this.timeZone;
    }

    /**
     * Set the timeZone property: TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
     * 
     * @param timeZone the timeZone value to set.
     * @return the AzureIaaSvmProtectionPolicy object itself.
     */
    public AzureIaaSvmProtectionPolicy withTimeZone(String timeZone) {
        this.timeZone = timeZone;
        return this;
    }

    /**
     * Get the policyType property: The policyType property.
     * 
     * @return the policyType value.
     */
    public IaasvmPolicyType policyType() {
        return this.policyType;
    }

    /**
     * Set the policyType property: The policyType property.
     * 
     * @param policyType the policyType value to set.
     * @return the AzureIaaSvmProtectionPolicy object itself.
     */
    public AzureIaaSvmProtectionPolicy withPolicyType(IaasvmPolicyType policyType) {
        this.policyType = policyType;
        return this;
    }

    /**
     * Get the snapshotConsistencyType property: The snapshotConsistencyType property.
     * 
     * @return the snapshotConsistencyType value.
     */
    public IaasVMSnapshotConsistencyType snapshotConsistencyType() {
        return this.snapshotConsistencyType;
    }

    /**
     * Set the snapshotConsistencyType property: The snapshotConsistencyType property.
     * 
     * @param snapshotConsistencyType the snapshotConsistencyType value to set.
     * @return the AzureIaaSvmProtectionPolicy object itself.
     */
    public AzureIaaSvmProtectionPolicy
        withSnapshotConsistencyType(IaasVMSnapshotConsistencyType snapshotConsistencyType) {
        this.snapshotConsistencyType = snapshotConsistencyType;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AzureIaaSvmProtectionPolicy withProtectedItemsCount(Integer protectedItemsCount) {
        super.withProtectedItemsCount(protectedItemsCount);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AzureIaaSvmProtectionPolicy withResourceGuardOperationRequests(List<String> resourceGuardOperationRequests) {
        super.withResourceGuardOperationRequests(resourceGuardOperationRequests);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        if (instantRPDetails() != null) {
            instantRPDetails().validate();
        }
        if (schedulePolicy() != null) {
            schedulePolicy().validate();
        }
        if (retentionPolicy() != null) {
            retentionPolicy().validate();
        }
        if (tieringPolicy() != null) {
            tieringPolicy().values().forEach(e -> {
                if (e != null) {
                    e.validate();
                }
            });
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("protectedItemsCount", protectedItemsCount());
        jsonWriter.writeArrayField("resourceGuardOperationRequests", resourceGuardOperationRequests(),
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeStringField("backupManagementType", this.backupManagementType);
        jsonWriter.writeJsonField("instantRPDetails", this.instantRPDetails);
        jsonWriter.writeJsonField("schedulePolicy", this.schedulePolicy);
        jsonWriter.writeJsonField("retentionPolicy", this.retentionPolicy);
        jsonWriter.writeMapField("tieringPolicy", this.tieringPolicy, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeNumberField("instantRpRetentionRangeInDays", this.instantRpRetentionRangeInDays);
        jsonWriter.writeStringField("timeZone", this.timeZone);
        jsonWriter.writeStringField("policyType", this.policyType == null ? null : this.policyType.toString());
        jsonWriter.writeStringField("snapshotConsistencyType",
            this.snapshotConsistencyType == null ? null : this.snapshotConsistencyType.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureIaaSvmProtectionPolicy from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureIaaSvmProtectionPolicy if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AzureIaaSvmProtectionPolicy.
     */
    public static AzureIaaSvmProtectionPolicy fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AzureIaaSvmProtectionPolicy deserializedAzureIaaSvmProtectionPolicy = new AzureIaaSvmProtectionPolicy();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("protectedItemsCount".equals(fieldName)) {
                    deserializedAzureIaaSvmProtectionPolicy
                        .withProtectedItemsCount(reader.getNullable(JsonReader::getInt));
                } else if ("resourceGuardOperationRequests".equals(fieldName)) {
                    List<String> resourceGuardOperationRequests = reader.readArray(reader1 -> reader1.getString());
                    deserializedAzureIaaSvmProtectionPolicy
                        .withResourceGuardOperationRequests(resourceGuardOperationRequests);
                } else if ("backupManagementType".equals(fieldName)) {
                    deserializedAzureIaaSvmProtectionPolicy.backupManagementType = reader.getString();
                } else if ("instantRPDetails".equals(fieldName)) {
                    deserializedAzureIaaSvmProtectionPolicy.instantRPDetails
                        = InstantRPAdditionalDetails.fromJson(reader);
                } else if ("schedulePolicy".equals(fieldName)) {
                    deserializedAzureIaaSvmProtectionPolicy.schedulePolicy = SchedulePolicy.fromJson(reader);
                } else if ("retentionPolicy".equals(fieldName)) {
                    deserializedAzureIaaSvmProtectionPolicy.retentionPolicy = RetentionPolicy.fromJson(reader);
                } else if ("tieringPolicy".equals(fieldName)) {
                    Map<String, TieringPolicy> tieringPolicy
                        = reader.readMap(reader1 -> TieringPolicy.fromJson(reader1));
                    deserializedAzureIaaSvmProtectionPolicy.tieringPolicy = tieringPolicy;
                } else if ("instantRpRetentionRangeInDays".equals(fieldName)) {
                    deserializedAzureIaaSvmProtectionPolicy.instantRpRetentionRangeInDays
                        = reader.getNullable(JsonReader::getInt);
                } else if ("timeZone".equals(fieldName)) {
                    deserializedAzureIaaSvmProtectionPolicy.timeZone = reader.getString();
                } else if ("policyType".equals(fieldName)) {
                    deserializedAzureIaaSvmProtectionPolicy.policyType
                        = IaasvmPolicyType.fromString(reader.getString());
                } else if ("snapshotConsistencyType".equals(fieldName)) {
                    deserializedAzureIaaSvmProtectionPolicy.snapshotConsistencyType
                        = IaasVMSnapshotConsistencyType.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAzureIaaSvmProtectionPolicy;
        });
    }
}
