// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Azure VM workload-specific protectable item.
 */
@Fluent
public class AzureVmWorkloadProtectableItem extends WorkloadProtectableItem {
    /*
     * Type of the backup item.
     */
    private String protectableItemType = "AzureVmWorkloadProtectableItem";

    /*
     * Name for instance or AG
     */
    private String parentName;

    /*
     * Parent Unique Name is added to provide the service formatted URI Name of the Parent
     * Only Applicable for data bases where the parent would be either Instance or a SQL AG.
     */
    private String parentUniqueName;

    /*
     * Host/Cluster Name for instance or AG
     */
    private String serverName;

    /*
     * Indicates if protectable item is auto-protectable
     */
    private Boolean isAutoProtectable;

    /*
     * Indicates if protectable item is auto-protected
     */
    private Boolean isAutoProtected;

    /*
     * For instance or AG, indicates number of DB's present
     */
    private Integer subinquireditemcount;

    /*
     * For instance or AG, indicates number of DB's to be protected
     */
    private Integer subprotectableitemcount;

    /*
     * Pre-backup validation for protectable objects
     */
    private PreBackupValidation prebackupvalidation;

    /*
     * Indicates if item is protectable
     */
    private Boolean isProtectable;

    /**
     * Creates an instance of AzureVmWorkloadProtectableItem class.
     */
    public AzureVmWorkloadProtectableItem() {
    }

    /**
     * Get the protectableItemType property: Type of the backup item.
     * 
     * @return the protectableItemType value.
     */
    @Override
    public String protectableItemType() {
        return this.protectableItemType;
    }

    /**
     * Get the parentName property: Name for instance or AG.
     * 
     * @return the parentName value.
     */
    public String parentName() {
        return this.parentName;
    }

    /**
     * Set the parentName property: Name for instance or AG.
     * 
     * @param parentName the parentName value to set.
     * @return the AzureVmWorkloadProtectableItem object itself.
     */
    public AzureVmWorkloadProtectableItem withParentName(String parentName) {
        this.parentName = parentName;
        return this;
    }

    /**
     * Get the parentUniqueName property: Parent Unique Name is added to provide the service formatted URI Name of the
     * Parent
     * Only Applicable for data bases where the parent would be either Instance or a SQL AG.
     * 
     * @return the parentUniqueName value.
     */
    public String parentUniqueName() {
        return this.parentUniqueName;
    }

    /**
     * Set the parentUniqueName property: Parent Unique Name is added to provide the service formatted URI Name of the
     * Parent
     * Only Applicable for data bases where the parent would be either Instance or a SQL AG.
     * 
     * @param parentUniqueName the parentUniqueName value to set.
     * @return the AzureVmWorkloadProtectableItem object itself.
     */
    public AzureVmWorkloadProtectableItem withParentUniqueName(String parentUniqueName) {
        this.parentUniqueName = parentUniqueName;
        return this;
    }

    /**
     * Get the serverName property: Host/Cluster Name for instance or AG.
     * 
     * @return the serverName value.
     */
    public String serverName() {
        return this.serverName;
    }

    /**
     * Set the serverName property: Host/Cluster Name for instance or AG.
     * 
     * @param serverName the serverName value to set.
     * @return the AzureVmWorkloadProtectableItem object itself.
     */
    public AzureVmWorkloadProtectableItem withServerName(String serverName) {
        this.serverName = serverName;
        return this;
    }

    /**
     * Get the isAutoProtectable property: Indicates if protectable item is auto-protectable.
     * 
     * @return the isAutoProtectable value.
     */
    public Boolean isAutoProtectable() {
        return this.isAutoProtectable;
    }

    /**
     * Set the isAutoProtectable property: Indicates if protectable item is auto-protectable.
     * 
     * @param isAutoProtectable the isAutoProtectable value to set.
     * @return the AzureVmWorkloadProtectableItem object itself.
     */
    public AzureVmWorkloadProtectableItem withIsAutoProtectable(Boolean isAutoProtectable) {
        this.isAutoProtectable = isAutoProtectable;
        return this;
    }

    /**
     * Get the isAutoProtected property: Indicates if protectable item is auto-protected.
     * 
     * @return the isAutoProtected value.
     */
    public Boolean isAutoProtected() {
        return this.isAutoProtected;
    }

    /**
     * Set the isAutoProtected property: Indicates if protectable item is auto-protected.
     * 
     * @param isAutoProtected the isAutoProtected value to set.
     * @return the AzureVmWorkloadProtectableItem object itself.
     */
    public AzureVmWorkloadProtectableItem withIsAutoProtected(Boolean isAutoProtected) {
        this.isAutoProtected = isAutoProtected;
        return this;
    }

    /**
     * Get the subinquireditemcount property: For instance or AG, indicates number of DB's present.
     * 
     * @return the subinquireditemcount value.
     */
    public Integer subinquireditemcount() {
        return this.subinquireditemcount;
    }

    /**
     * Set the subinquireditemcount property: For instance or AG, indicates number of DB's present.
     * 
     * @param subinquireditemcount the subinquireditemcount value to set.
     * @return the AzureVmWorkloadProtectableItem object itself.
     */
    public AzureVmWorkloadProtectableItem withSubinquireditemcount(Integer subinquireditemcount) {
        this.subinquireditemcount = subinquireditemcount;
        return this;
    }

    /**
     * Get the subprotectableitemcount property: For instance or AG, indicates number of DB's to be protected.
     * 
     * @return the subprotectableitemcount value.
     */
    public Integer subprotectableitemcount() {
        return this.subprotectableitemcount;
    }

    /**
     * Set the subprotectableitemcount property: For instance or AG, indicates number of DB's to be protected.
     * 
     * @param subprotectableitemcount the subprotectableitemcount value to set.
     * @return the AzureVmWorkloadProtectableItem object itself.
     */
    public AzureVmWorkloadProtectableItem withSubprotectableitemcount(Integer subprotectableitemcount) {
        this.subprotectableitemcount = subprotectableitemcount;
        return this;
    }

    /**
     * Get the prebackupvalidation property: Pre-backup validation for protectable objects.
     * 
     * @return the prebackupvalidation value.
     */
    public PreBackupValidation prebackupvalidation() {
        return this.prebackupvalidation;
    }

    /**
     * Set the prebackupvalidation property: Pre-backup validation for protectable objects.
     * 
     * @param prebackupvalidation the prebackupvalidation value to set.
     * @return the AzureVmWorkloadProtectableItem object itself.
     */
    public AzureVmWorkloadProtectableItem withPrebackupvalidation(PreBackupValidation prebackupvalidation) {
        this.prebackupvalidation = prebackupvalidation;
        return this;
    }

    /**
     * Get the isProtectable property: Indicates if item is protectable.
     * 
     * @return the isProtectable value.
     */
    public Boolean isProtectable() {
        return this.isProtectable;
    }

    /**
     * Set the isProtectable property: Indicates if item is protectable.
     * 
     * @param isProtectable the isProtectable value to set.
     * @return the AzureVmWorkloadProtectableItem object itself.
     */
    public AzureVmWorkloadProtectableItem withIsProtectable(Boolean isProtectable) {
        this.isProtectable = isProtectable;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AzureVmWorkloadProtectableItem withBackupManagementType(String backupManagementType) {
        super.withBackupManagementType(backupManagementType);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AzureVmWorkloadProtectableItem withWorkloadType(String workloadType) {
        super.withWorkloadType(workloadType);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AzureVmWorkloadProtectableItem withFriendlyName(String friendlyName) {
        super.withFriendlyName(friendlyName);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AzureVmWorkloadProtectableItem withProtectionState(ProtectionStatus protectionState) {
        super.withProtectionState(protectionState);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        if (prebackupvalidation() != null) {
            prebackupvalidation().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("backupManagementType", backupManagementType());
        jsonWriter.writeStringField("workloadType", workloadType());
        jsonWriter.writeStringField("friendlyName", friendlyName());
        jsonWriter.writeStringField("protectionState", protectionState() == null ? null : protectionState().toString());
        jsonWriter.writeStringField("protectableItemType", this.protectableItemType);
        jsonWriter.writeStringField("parentName", this.parentName);
        jsonWriter.writeStringField("parentUniqueName", this.parentUniqueName);
        jsonWriter.writeStringField("serverName", this.serverName);
        jsonWriter.writeBooleanField("isAutoProtectable", this.isAutoProtectable);
        jsonWriter.writeBooleanField("isAutoProtected", this.isAutoProtected);
        jsonWriter.writeNumberField("subinquireditemcount", this.subinquireditemcount);
        jsonWriter.writeNumberField("subprotectableitemcount", this.subprotectableitemcount);
        jsonWriter.writeJsonField("prebackupvalidation", this.prebackupvalidation);
        jsonWriter.writeBooleanField("isProtectable", this.isProtectable);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureVmWorkloadProtectableItem from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureVmWorkloadProtectableItem if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AzureVmWorkloadProtectableItem.
     */
    public static AzureVmWorkloadProtectableItem fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String discriminatorValue = null;
            try (JsonReader readerToUse = reader.bufferObject()) {
                readerToUse.nextToken(); // Prepare for reading
                while (readerToUse.nextToken() != JsonToken.END_OBJECT) {
                    String fieldName = readerToUse.getFieldName();
                    readerToUse.nextToken();
                    if ("protectableItemType".equals(fieldName)) {
                        discriminatorValue = readerToUse.getString();
                        break;
                    } else {
                        readerToUse.skipChildren();
                    }
                }
                // Use the discriminator value to determine which subtype should be deserialized.
                if ("SAPAseSystem".equals(discriminatorValue)) {
                    return AzureVmWorkloadSapAseSystemProtectableItem.fromJson(readerToUse.reset());
                } else if ("SAPHanaDatabase".equals(discriminatorValue)) {
                    return AzureVmWorkloadSapHanaDatabaseProtectableItem.fromJson(readerToUse.reset());
                } else if ("SAPHanaSystem".equals(discriminatorValue)) {
                    return AzureVmWorkloadSapHanaSystemProtectableItem.fromJson(readerToUse.reset());
                } else if ("SAPHanaDBInstance".equals(discriminatorValue)) {
                    return AzureVmWorkloadSapHanaDBInstance.fromJson(readerToUse.reset());
                } else if ("HanaHSRContainer".equals(discriminatorValue)) {
                    return AzureVmWorkloadSapHanaHsr.fromJson(readerToUse.reset());
                } else if ("SQLAvailabilityGroupContainer".equals(discriminatorValue)) {
                    return AzureVmWorkloadSqlAvailabilityGroupProtectableItem.fromJson(readerToUse.reset());
                } else if ("SQLDataBase".equals(discriminatorValue)) {
                    return AzureVmWorkloadSqlDatabaseProtectableItem.fromJson(readerToUse.reset());
                } else if ("SQLInstance".equals(discriminatorValue)) {
                    return AzureVmWorkloadSqlInstanceProtectableItem.fromJson(readerToUse.reset());
                } else {
                    return fromJsonKnownDiscriminator(readerToUse.reset());
                }
            }
        });
    }

    static AzureVmWorkloadProtectableItem fromJsonKnownDiscriminator(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AzureVmWorkloadProtectableItem deserializedAzureVmWorkloadProtectableItem
                = new AzureVmWorkloadProtectableItem();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("backupManagementType".equals(fieldName)) {
                    deserializedAzureVmWorkloadProtectableItem.withBackupManagementType(reader.getString());
                } else if ("workloadType".equals(fieldName)) {
                    deserializedAzureVmWorkloadProtectableItem.withWorkloadType(reader.getString());
                } else if ("friendlyName".equals(fieldName)) {
                    deserializedAzureVmWorkloadProtectableItem.withFriendlyName(reader.getString());
                } else if ("protectionState".equals(fieldName)) {
                    deserializedAzureVmWorkloadProtectableItem
                        .withProtectionState(ProtectionStatus.fromString(reader.getString()));
                } else if ("protectableItemType".equals(fieldName)) {
                    deserializedAzureVmWorkloadProtectableItem.protectableItemType = reader.getString();
                } else if ("parentName".equals(fieldName)) {
                    deserializedAzureVmWorkloadProtectableItem.parentName = reader.getString();
                } else if ("parentUniqueName".equals(fieldName)) {
                    deserializedAzureVmWorkloadProtectableItem.parentUniqueName = reader.getString();
                } else if ("serverName".equals(fieldName)) {
                    deserializedAzureVmWorkloadProtectableItem.serverName = reader.getString();
                } else if ("isAutoProtectable".equals(fieldName)) {
                    deserializedAzureVmWorkloadProtectableItem.isAutoProtectable
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("isAutoProtected".equals(fieldName)) {
                    deserializedAzureVmWorkloadProtectableItem.isAutoProtected
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("subinquireditemcount".equals(fieldName)) {
                    deserializedAzureVmWorkloadProtectableItem.subinquireditemcount
                        = reader.getNullable(JsonReader::getInt);
                } else if ("subprotectableitemcount".equals(fieldName)) {
                    deserializedAzureVmWorkloadProtectableItem.subprotectableitemcount
                        = reader.getNullable(JsonReader::getInt);
                } else if ("prebackupvalidation".equals(fieldName)) {
                    deserializedAzureVmWorkloadProtectableItem.prebackupvalidation
                        = PreBackupValidation.fromJson(reader);
                } else if ("isProtectable".equals(fieldName)) {
                    deserializedAzureVmWorkloadProtectableItem.isProtectable
                        = reader.getNullable(JsonReader::getBoolean);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAzureVmWorkloadProtectableItem;
        });
    }
}
