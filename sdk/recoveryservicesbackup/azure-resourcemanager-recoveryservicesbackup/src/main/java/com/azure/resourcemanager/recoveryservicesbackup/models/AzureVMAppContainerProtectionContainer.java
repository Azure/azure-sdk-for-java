// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.time.OffsetDateTime;

/** Container for SQL workloads under Azure Virtual Machines. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "containerType")
@JsonTypeName("VMAppContainer")
@Immutable
public final class AzureVMAppContainerProtectionContainer extends AzureWorkloadContainer {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(AzureVMAppContainerProtectionContainer.class);

    /** {@inheritDoc} */
    @Override
    public AzureVMAppContainerProtectionContainer withSourceResourceId(String sourceResourceId) {
        super.withSourceResourceId(sourceResourceId);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AzureVMAppContainerProtectionContainer withLastUpdatedTime(OffsetDateTime lastUpdatedTime) {
        super.withLastUpdatedTime(lastUpdatedTime);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AzureVMAppContainerProtectionContainer withExtendedInfo(AzureWorkloadContainerExtendedInfo extendedInfo) {
        super.withExtendedInfo(extendedInfo);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AzureVMAppContainerProtectionContainer withWorkloadType(WorkloadType workloadType) {
        super.withWorkloadType(workloadType);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AzureVMAppContainerProtectionContainer withOperationType(OperationType operationType) {
        super.withOperationType(operationType);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AzureVMAppContainerProtectionContainer withFriendlyName(String friendlyName) {
        super.withFriendlyName(friendlyName);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AzureVMAppContainerProtectionContainer withBackupManagementType(BackupManagementType backupManagementType) {
        super.withBackupManagementType(backupManagementType);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AzureVMAppContainerProtectionContainer withRegistrationStatus(String registrationStatus) {
        super.withRegistrationStatus(registrationStatus);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AzureVMAppContainerProtectionContainer withHealthStatus(String healthStatus) {
        super.withHealthStatus(healthStatus);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
