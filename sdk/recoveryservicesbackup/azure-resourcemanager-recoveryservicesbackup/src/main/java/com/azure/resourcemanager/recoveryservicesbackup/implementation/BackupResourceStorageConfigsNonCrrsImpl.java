// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.recoveryservicesbackup.fluent.BackupResourceStorageConfigsNonCrrsClient;
import com.azure.resourcemanager.recoveryservicesbackup.fluent.models.BackupResourceConfigResourceInner;
import com.azure.resourcemanager.recoveryservicesbackup.models.BackupResourceConfigResource;
import com.azure.resourcemanager.recoveryservicesbackup.models.BackupResourceStorageConfigsNonCrrs;

public final class BackupResourceStorageConfigsNonCrrsImpl implements BackupResourceStorageConfigsNonCrrs {
    private static final ClientLogger LOGGER = new ClientLogger(BackupResourceStorageConfigsNonCrrsImpl.class);

    private final BackupResourceStorageConfigsNonCrrsClient innerClient;

    private final com.azure.resourcemanager.recoveryservicesbackup.RecoveryServicesBackupManager serviceManager;

    public BackupResourceStorageConfigsNonCrrsImpl(
        BackupResourceStorageConfigsNonCrrsClient innerClient,
        com.azure.resourcemanager.recoveryservicesbackup.RecoveryServicesBackupManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<BackupResourceConfigResource> getWithResponse(
        String vaultName, String resourceGroupName, Context context) {
        Response<BackupResourceConfigResourceInner> inner =
            this.serviceClient().getWithResponse(vaultName, resourceGroupName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new BackupResourceConfigResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public BackupResourceConfigResource get(String vaultName, String resourceGroupName) {
        BackupResourceConfigResourceInner inner = this.serviceClient().get(vaultName, resourceGroupName);
        if (inner != null) {
            return new BackupResourceConfigResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<BackupResourceConfigResource> updateWithResponse(
        String vaultName, String resourceGroupName, BackupResourceConfigResourceInner parameters, Context context) {
        Response<BackupResourceConfigResourceInner> inner =
            this.serviceClient().updateWithResponse(vaultName, resourceGroupName, parameters, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new BackupResourceConfigResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public BackupResourceConfigResource update(
        String vaultName, String resourceGroupName, BackupResourceConfigResourceInner parameters) {
        BackupResourceConfigResourceInner inner = this.serviceClient().update(vaultName, resourceGroupName, parameters);
        if (inner != null) {
            return new BackupResourceConfigResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<Void> patchWithResponse(
        String vaultName, String resourceGroupName, BackupResourceConfigResourceInner parameters, Context context) {
        return this.serviceClient().patchWithResponse(vaultName, resourceGroupName, parameters, context);
    }

    public void patch(String vaultName, String resourceGroupName, BackupResourceConfigResourceInner parameters) {
        this.serviceClient().patch(vaultName, resourceGroupName, parameters);
    }

    private BackupResourceStorageConfigsNonCrrsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.recoveryservicesbackup.RecoveryServicesBackupManager manager() {
        return this.serviceManager;
    }
}
