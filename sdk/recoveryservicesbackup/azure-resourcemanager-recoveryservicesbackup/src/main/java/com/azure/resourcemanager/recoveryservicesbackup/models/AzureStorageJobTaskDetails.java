// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Azure storage workload specific job task details.
 */
@Fluent
public final class AzureStorageJobTaskDetails implements JsonSerializable<AzureStorageJobTaskDetails> {
    /*
     * The task display name.
     */
    private String taskId;

    /*
     * The status.
     */
    private String status;

    /**
     * Creates an instance of AzureStorageJobTaskDetails class.
     */
    public AzureStorageJobTaskDetails() {
    }

    /**
     * Get the taskId property: The task display name.
     * 
     * @return the taskId value.
     */
    public String taskId() {
        return this.taskId;
    }

    /**
     * Set the taskId property: The task display name.
     * 
     * @param taskId the taskId value to set.
     * @return the AzureStorageJobTaskDetails object itself.
     */
    public AzureStorageJobTaskDetails withTaskId(String taskId) {
        this.taskId = taskId;
        return this;
    }

    /**
     * Get the status property: The status.
     * 
     * @return the status value.
     */
    public String status() {
        return this.status;
    }

    /**
     * Set the status property: The status.
     * 
     * @param status the status value to set.
     * @return the AzureStorageJobTaskDetails object itself.
     */
    public AzureStorageJobTaskDetails withStatus(String status) {
        this.status = status;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("taskId", this.taskId);
        jsonWriter.writeStringField("status", this.status);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureStorageJobTaskDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureStorageJobTaskDetails if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AzureStorageJobTaskDetails.
     */
    public static AzureStorageJobTaskDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AzureStorageJobTaskDetails deserializedAzureStorageJobTaskDetails = new AzureStorageJobTaskDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("taskId".equals(fieldName)) {
                    deserializedAzureStorageJobTaskDetails.taskId = reader.getString();
                } else if ("status".equals(fieldName)) {
                    deserializedAzureStorageJobTaskDetails.status = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAzureStorageJobTaskDetails;
        });
    }
}
