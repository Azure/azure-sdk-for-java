// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;

/**
 * Additional information on backup engine.
 */
@Fluent
public final class BackupEngineExtendedInfo implements JsonSerializable<BackupEngineExtendedInfo> {
    /*
     * Database name of backup engine.
     */
    private String databaseName;

    /*
     * Number of protected items in the backup engine.
     */
    private Integer protectedItemsCount;

    /*
     * Number of protected servers in the backup engine.
     */
    private Integer protectedServersCount;

    /*
     * Number of disks in the backup engine.
     */
    private Integer diskCount;

    /*
     * Disk space used in the backup engine.
     */
    private Double usedDiskSpace;

    /*
     * Disk space currently available in the backup engine.
     */
    private Double availableDiskSpace;

    /*
     * Last refresh time in the backup engine.
     */
    private OffsetDateTime refreshedAt;

    /*
     * Protected instances in the backup engine.
     */
    private Integer azureProtectedInstances;

    /**
     * Creates an instance of BackupEngineExtendedInfo class.
     */
    public BackupEngineExtendedInfo() {
    }

    /**
     * Get the databaseName property: Database name of backup engine.
     * 
     * @return the databaseName value.
     */
    public String databaseName() {
        return this.databaseName;
    }

    /**
     * Set the databaseName property: Database name of backup engine.
     * 
     * @param databaseName the databaseName value to set.
     * @return the BackupEngineExtendedInfo object itself.
     */
    public BackupEngineExtendedInfo withDatabaseName(String databaseName) {
        this.databaseName = databaseName;
        return this;
    }

    /**
     * Get the protectedItemsCount property: Number of protected items in the backup engine.
     * 
     * @return the protectedItemsCount value.
     */
    public Integer protectedItemsCount() {
        return this.protectedItemsCount;
    }

    /**
     * Set the protectedItemsCount property: Number of protected items in the backup engine.
     * 
     * @param protectedItemsCount the protectedItemsCount value to set.
     * @return the BackupEngineExtendedInfo object itself.
     */
    public BackupEngineExtendedInfo withProtectedItemsCount(Integer protectedItemsCount) {
        this.protectedItemsCount = protectedItemsCount;
        return this;
    }

    /**
     * Get the protectedServersCount property: Number of protected servers in the backup engine.
     * 
     * @return the protectedServersCount value.
     */
    public Integer protectedServersCount() {
        return this.protectedServersCount;
    }

    /**
     * Set the protectedServersCount property: Number of protected servers in the backup engine.
     * 
     * @param protectedServersCount the protectedServersCount value to set.
     * @return the BackupEngineExtendedInfo object itself.
     */
    public BackupEngineExtendedInfo withProtectedServersCount(Integer protectedServersCount) {
        this.protectedServersCount = protectedServersCount;
        return this;
    }

    /**
     * Get the diskCount property: Number of disks in the backup engine.
     * 
     * @return the diskCount value.
     */
    public Integer diskCount() {
        return this.diskCount;
    }

    /**
     * Set the diskCount property: Number of disks in the backup engine.
     * 
     * @param diskCount the diskCount value to set.
     * @return the BackupEngineExtendedInfo object itself.
     */
    public BackupEngineExtendedInfo withDiskCount(Integer diskCount) {
        this.diskCount = diskCount;
        return this;
    }

    /**
     * Get the usedDiskSpace property: Disk space used in the backup engine.
     * 
     * @return the usedDiskSpace value.
     */
    public Double usedDiskSpace() {
        return this.usedDiskSpace;
    }

    /**
     * Set the usedDiskSpace property: Disk space used in the backup engine.
     * 
     * @param usedDiskSpace the usedDiskSpace value to set.
     * @return the BackupEngineExtendedInfo object itself.
     */
    public BackupEngineExtendedInfo withUsedDiskSpace(Double usedDiskSpace) {
        this.usedDiskSpace = usedDiskSpace;
        return this;
    }

    /**
     * Get the availableDiskSpace property: Disk space currently available in the backup engine.
     * 
     * @return the availableDiskSpace value.
     */
    public Double availableDiskSpace() {
        return this.availableDiskSpace;
    }

    /**
     * Set the availableDiskSpace property: Disk space currently available in the backup engine.
     * 
     * @param availableDiskSpace the availableDiskSpace value to set.
     * @return the BackupEngineExtendedInfo object itself.
     */
    public BackupEngineExtendedInfo withAvailableDiskSpace(Double availableDiskSpace) {
        this.availableDiskSpace = availableDiskSpace;
        return this;
    }

    /**
     * Get the refreshedAt property: Last refresh time in the backup engine.
     * 
     * @return the refreshedAt value.
     */
    public OffsetDateTime refreshedAt() {
        return this.refreshedAt;
    }

    /**
     * Set the refreshedAt property: Last refresh time in the backup engine.
     * 
     * @param refreshedAt the refreshedAt value to set.
     * @return the BackupEngineExtendedInfo object itself.
     */
    public BackupEngineExtendedInfo withRefreshedAt(OffsetDateTime refreshedAt) {
        this.refreshedAt = refreshedAt;
        return this;
    }

    /**
     * Get the azureProtectedInstances property: Protected instances in the backup engine.
     * 
     * @return the azureProtectedInstances value.
     */
    public Integer azureProtectedInstances() {
        return this.azureProtectedInstances;
    }

    /**
     * Set the azureProtectedInstances property: Protected instances in the backup engine.
     * 
     * @param azureProtectedInstances the azureProtectedInstances value to set.
     * @return the BackupEngineExtendedInfo object itself.
     */
    public BackupEngineExtendedInfo withAzureProtectedInstances(Integer azureProtectedInstances) {
        this.azureProtectedInstances = azureProtectedInstances;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("databaseName", this.databaseName);
        jsonWriter.writeNumberField("protectedItemsCount", this.protectedItemsCount);
        jsonWriter.writeNumberField("protectedServersCount", this.protectedServersCount);
        jsonWriter.writeNumberField("diskCount", this.diskCount);
        jsonWriter.writeNumberField("usedDiskSpace", this.usedDiskSpace);
        jsonWriter.writeNumberField("availableDiskSpace", this.availableDiskSpace);
        jsonWriter.writeStringField("refreshedAt",
            this.refreshedAt == null ? null : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.refreshedAt));
        jsonWriter.writeNumberField("azureProtectedInstances", this.azureProtectedInstances);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of BackupEngineExtendedInfo from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of BackupEngineExtendedInfo if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the BackupEngineExtendedInfo.
     */
    public static BackupEngineExtendedInfo fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            BackupEngineExtendedInfo deserializedBackupEngineExtendedInfo = new BackupEngineExtendedInfo();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("databaseName".equals(fieldName)) {
                    deserializedBackupEngineExtendedInfo.databaseName = reader.getString();
                } else if ("protectedItemsCount".equals(fieldName)) {
                    deserializedBackupEngineExtendedInfo.protectedItemsCount = reader.getNullable(JsonReader::getInt);
                } else if ("protectedServersCount".equals(fieldName)) {
                    deserializedBackupEngineExtendedInfo.protectedServersCount = reader.getNullable(JsonReader::getInt);
                } else if ("diskCount".equals(fieldName)) {
                    deserializedBackupEngineExtendedInfo.diskCount = reader.getNullable(JsonReader::getInt);
                } else if ("usedDiskSpace".equals(fieldName)) {
                    deserializedBackupEngineExtendedInfo.usedDiskSpace = reader.getNullable(JsonReader::getDouble);
                } else if ("availableDiskSpace".equals(fieldName)) {
                    deserializedBackupEngineExtendedInfo.availableDiskSpace = reader.getNullable(JsonReader::getDouble);
                } else if ("refreshedAt".equals(fieldName)) {
                    deserializedBackupEngineExtendedInfo.refreshedAt = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("azureProtectedInstances".equals(fieldName)) {
                    deserializedBackupEngineExtendedInfo.azureProtectedInstances
                        = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedBackupEngineExtendedInfo;
        });
    }
}
