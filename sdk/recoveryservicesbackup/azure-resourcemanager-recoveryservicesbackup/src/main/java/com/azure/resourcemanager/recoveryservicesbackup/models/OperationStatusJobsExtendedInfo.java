// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;
import java.util.Map;

/**
 * Operation status extended info for list of jobs.
 */
@Fluent
public final class OperationStatusJobsExtendedInfo extends OperationStatusExtendedInfo {
    /*
     * This property will be used as the discriminator for deciding the specific types in the polymorphic chain of
     * types.
     */
    private String objectType = "OperationStatusJobsExtendedInfo";

    /*
     * IDs of the jobs created for the protected item.
     */
    private List<String> jobIds;

    /*
     * Stores all the failed jobs along with the corresponding error codes.
     */
    private Map<String, String> failedJobsError;

    /**
     * Creates an instance of OperationStatusJobsExtendedInfo class.
     */
    public OperationStatusJobsExtendedInfo() {
    }

    /**
     * Get the objectType property: This property will be used as the discriminator for deciding the specific types in
     * the polymorphic chain of types.
     * 
     * @return the objectType value.
     */
    @Override
    public String objectType() {
        return this.objectType;
    }

    /**
     * Get the jobIds property: IDs of the jobs created for the protected item.
     * 
     * @return the jobIds value.
     */
    public List<String> jobIds() {
        return this.jobIds;
    }

    /**
     * Set the jobIds property: IDs of the jobs created for the protected item.
     * 
     * @param jobIds the jobIds value to set.
     * @return the OperationStatusJobsExtendedInfo object itself.
     */
    public OperationStatusJobsExtendedInfo withJobIds(List<String> jobIds) {
        this.jobIds = jobIds;
        return this;
    }

    /**
     * Get the failedJobsError property: Stores all the failed jobs along with the corresponding error codes.
     * 
     * @return the failedJobsError value.
     */
    public Map<String, String> failedJobsError() {
        return this.failedJobsError;
    }

    /**
     * Set the failedJobsError property: Stores all the failed jobs along with the corresponding error codes.
     * 
     * @param failedJobsError the failedJobsError value to set.
     * @return the OperationStatusJobsExtendedInfo object itself.
     */
    public OperationStatusJobsExtendedInfo withFailedJobsError(Map<String, String> failedJobsError) {
        this.failedJobsError = failedJobsError;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("objectType", this.objectType);
        jsonWriter.writeArrayField("jobIds", this.jobIds, (writer, element) -> writer.writeString(element));
        jsonWriter.writeMapField("failedJobsError", this.failedJobsError,
            (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of OperationStatusJobsExtendedInfo from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of OperationStatusJobsExtendedInfo if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the OperationStatusJobsExtendedInfo.
     */
    public static OperationStatusJobsExtendedInfo fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            OperationStatusJobsExtendedInfo deserializedOperationStatusJobsExtendedInfo
                = new OperationStatusJobsExtendedInfo();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("objectType".equals(fieldName)) {
                    deserializedOperationStatusJobsExtendedInfo.objectType = reader.getString();
                } else if ("jobIds".equals(fieldName)) {
                    List<String> jobIds = reader.readArray(reader1 -> reader1.getString());
                    deserializedOperationStatusJobsExtendedInfo.jobIds = jobIds;
                } else if ("failedJobsError".equals(fieldName)) {
                    Map<String, String> failedJobsError = reader.readMap(reader1 -> reader1.getString());
                    deserializedOperationStatusJobsExtendedInfo.failedJobsError = failedJobsError;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedOperationStatusJobsExtendedInfo;
        });
    }
}
