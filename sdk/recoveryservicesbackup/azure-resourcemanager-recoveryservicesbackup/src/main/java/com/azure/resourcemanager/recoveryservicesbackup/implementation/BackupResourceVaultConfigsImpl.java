// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.recoveryservicesbackup.fluent.BackupResourceVaultConfigsClient;
import com.azure.resourcemanager.recoveryservicesbackup.fluent.models.BackupResourceVaultConfigResourceInner;
import com.azure.resourcemanager.recoveryservicesbackup.models.BackupResourceVaultConfigResource;
import com.azure.resourcemanager.recoveryservicesbackup.models.BackupResourceVaultConfigs;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class BackupResourceVaultConfigsImpl implements BackupResourceVaultConfigs {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(BackupResourceVaultConfigsImpl.class);

    private final BackupResourceVaultConfigsClient innerClient;

    private final com.azure.resourcemanager.recoveryservicesbackup.RecoveryServicesBackupManager serviceManager;

    public BackupResourceVaultConfigsImpl(
        BackupResourceVaultConfigsClient innerClient,
        com.azure.resourcemanager.recoveryservicesbackup.RecoveryServicesBackupManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public BackupResourceVaultConfigResource get(String vaultName, String resourceGroupName) {
        BackupResourceVaultConfigResourceInner inner = this.serviceClient().get(vaultName, resourceGroupName);
        if (inner != null) {
            return new BackupResourceVaultConfigResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<BackupResourceVaultConfigResource> getWithResponse(
        String vaultName, String resourceGroupName, Context context) {
        Response<BackupResourceVaultConfigResourceInner> inner =
            this.serviceClient().getWithResponse(vaultName, resourceGroupName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new BackupResourceVaultConfigResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public BackupResourceVaultConfigResource update(
        String vaultName, String resourceGroupName, BackupResourceVaultConfigResourceInner parameters) {
        BackupResourceVaultConfigResourceInner inner =
            this.serviceClient().update(vaultName, resourceGroupName, parameters);
        if (inner != null) {
            return new BackupResourceVaultConfigResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<BackupResourceVaultConfigResource> updateWithResponse(
        String vaultName,
        String resourceGroupName,
        BackupResourceVaultConfigResourceInner parameters,
        Context context) {
        Response<BackupResourceVaultConfigResourceInner> inner =
            this.serviceClient().updateWithResponse(vaultName, resourceGroupName, parameters, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new BackupResourceVaultConfigResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public BackupResourceVaultConfigResource put(
        String vaultName, String resourceGroupName, BackupResourceVaultConfigResourceInner parameters) {
        BackupResourceVaultConfigResourceInner inner =
            this.serviceClient().put(vaultName, resourceGroupName, parameters);
        if (inner != null) {
            return new BackupResourceVaultConfigResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<BackupResourceVaultConfigResource> putWithResponse(
        String vaultName,
        String resourceGroupName,
        BackupResourceVaultConfigResourceInner parameters,
        Context context) {
        Response<BackupResourceVaultConfigResourceInner> inner =
            this.serviceClient().putWithResponse(vaultName, resourceGroupName, parameters, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new BackupResourceVaultConfigResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    private BackupResourceVaultConfigsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.recoveryservicesbackup.RecoveryServicesBackupManager manager() {
        return this.serviceManager;
    }
}
