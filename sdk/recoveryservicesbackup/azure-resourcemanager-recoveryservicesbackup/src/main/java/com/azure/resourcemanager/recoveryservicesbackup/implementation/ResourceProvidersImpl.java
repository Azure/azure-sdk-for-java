// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.recoveryservicesbackup.fluent.ResourceProvidersClient;
import com.azure.resourcemanager.recoveryservicesbackup.fluent.models.OperationStatusInner;
import com.azure.resourcemanager.recoveryservicesbackup.models.MoveRPAcrossTiersRequest;
import com.azure.resourcemanager.recoveryservicesbackup.models.OperationStatus;
import com.azure.resourcemanager.recoveryservicesbackup.models.PrepareDataMoveRequest;
import com.azure.resourcemanager.recoveryservicesbackup.models.ResourceProviders;
import com.azure.resourcemanager.recoveryservicesbackup.models.TriggerDataMoveRequest;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class ResourceProvidersImpl implements ResourceProviders {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ResourceProvidersImpl.class);

    private final ResourceProvidersClient innerClient;

    private final com.azure.resourcemanager.recoveryservicesbackup.RecoveryServicesBackupManager serviceManager;

    public ResourceProvidersImpl(
        ResourceProvidersClient innerClient,
        com.azure.resourcemanager.recoveryservicesbackup.RecoveryServicesBackupManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public OperationStatus getOperationStatus(String vaultName, String resourceGroupName, String operationId) {
        OperationStatusInner inner = this.serviceClient().getOperationStatus(vaultName, resourceGroupName, operationId);
        if (inner != null) {
            return new OperationStatusImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<OperationStatus> getOperationStatusWithResponse(
        String vaultName, String resourceGroupName, String operationId, Context context) {
        Response<OperationStatusInner> inner =
            this.serviceClient().getOperationStatusWithResponse(vaultName, resourceGroupName, operationId, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new OperationStatusImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public void bmsPrepareDataMove(String vaultName, String resourceGroupName, PrepareDataMoveRequest parameters) {
        this.serviceClient().bmsPrepareDataMove(vaultName, resourceGroupName, parameters);
    }

    public void bmsPrepareDataMove(
        String vaultName, String resourceGroupName, PrepareDataMoveRequest parameters, Context context) {
        this.serviceClient().bmsPrepareDataMove(vaultName, resourceGroupName, parameters, context);
    }

    public void bmsTriggerDataMove(String vaultName, String resourceGroupName, TriggerDataMoveRequest parameters) {
        this.serviceClient().bmsTriggerDataMove(vaultName, resourceGroupName, parameters);
    }

    public void bmsTriggerDataMove(
        String vaultName, String resourceGroupName, TriggerDataMoveRequest parameters, Context context) {
        this.serviceClient().bmsTriggerDataMove(vaultName, resourceGroupName, parameters, context);
    }

    public void moveRecoveryPoint(
        String vaultName,
        String resourceGroupName,
        String fabricName,
        String containerName,
        String protectedItemName,
        String recoveryPointId,
        MoveRPAcrossTiersRequest parameters) {
        this
            .serviceClient()
            .moveRecoveryPoint(
                vaultName,
                resourceGroupName,
                fabricName,
                containerName,
                protectedItemName,
                recoveryPointId,
                parameters);
    }

    public void moveRecoveryPoint(
        String vaultName,
        String resourceGroupName,
        String fabricName,
        String containerName,
        String protectedItemName,
        String recoveryPointId,
        MoveRPAcrossTiersRequest parameters,
        Context context) {
        this
            .serviceClient()
            .moveRecoveryPoint(
                vaultName,
                resourceGroupName,
                fabricName,
                containerName,
                protectedItemName,
                recoveryPointId,
                parameters,
                context);
    }

    private ResourceProvidersClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.recoveryservicesbackup.RecoveryServicesBackupManager manager() {
        return this.serviceManager;
    }
}
