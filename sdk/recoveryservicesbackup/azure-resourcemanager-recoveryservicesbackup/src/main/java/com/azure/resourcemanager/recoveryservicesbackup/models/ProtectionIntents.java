// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.models;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of ProtectionIntents. */
public interface ProtectionIntents {
    /**
     * It will validate followings 1. Vault capacity 2. VM is already protected 3. Any VM related configuration passed
     * in properties.
     *
     * @param azureRegion Azure region to hit Api.
     * @param parameters Enable backup validation request on Virtual Machine.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response contract for enable backup validation request.
     */
    PreValidateEnableBackupResponse validate(String azureRegion, PreValidateEnableBackupRequest parameters);

    /**
     * It will validate followings 1. Vault capacity 2. VM is already protected 3. Any VM related configuration passed
     * in properties.
     *
     * @param azureRegion Azure region to hit Api.
     * @param parameters Enable backup validation request on Virtual Machine.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response contract for enable backup validation request.
     */
    Response<PreValidateEnableBackupResponse> validateWithResponse(
        String azureRegion, PreValidateEnableBackupRequest parameters, Context context);

    /**
     * Provides the details of the protection intent up item. This is an asynchronous operation. To know the status of
     * the operation, call the GetItemOperationResult API.
     *
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param fabricName Fabric name associated with the backed up item.
     * @param intentObjectName Backed up item name whose details are to be fetched.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return base class for backup ProtectionIntent.
     */
    ProtectionIntentResource get(
        String vaultName, String resourceGroupName, String fabricName, String intentObjectName);

    /**
     * Provides the details of the protection intent up item. This is an asynchronous operation. To know the status of
     * the operation, call the GetItemOperationResult API.
     *
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param fabricName Fabric name associated with the backed up item.
     * @param intentObjectName Backed up item name whose details are to be fetched.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return base class for backup ProtectionIntent.
     */
    Response<ProtectionIntentResource> getWithResponse(
        String vaultName, String resourceGroupName, String fabricName, String intentObjectName, Context context);

    /**
     * Used to remove intent from an item.
     *
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param fabricName Fabric name associated with the intent.
     * @param intentObjectName Intent to be deleted.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String vaultName, String resourceGroupName, String fabricName, String intentObjectName);

    /**
     * Used to remove intent from an item.
     *
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param fabricName Fabric name associated with the intent.
     * @param intentObjectName Intent to be deleted.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    Response<Void> deleteWithResponse(
        String vaultName, String resourceGroupName, String fabricName, String intentObjectName, Context context);

    /**
     * Provides the details of the protection intent up item. This is an asynchronous operation. To know the status of
     * the operation, call the GetItemOperationResult API.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return base class for backup ProtectionIntent.
     */
    ProtectionIntentResource getById(String id);

    /**
     * Provides the details of the protection intent up item. This is an asynchronous operation. To know the status of
     * the operation, call the GetItemOperationResult API.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return base class for backup ProtectionIntent.
     */
    Response<ProtectionIntentResource> getByIdWithResponse(String id, Context context);

    /**
     * Used to remove intent from an item.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Used to remove intent from an item.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    Response<Void> deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new ProtectionIntentResource resource.
     *
     * @param name resource name.
     * @return the first stage of the new ProtectionIntentResource definition.
     */
    ProtectionIntentResource.DefinitionStages.Blank define(String name);
}
