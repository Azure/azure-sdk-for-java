// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** SQLDataDirectory info. */
@Fluent
public final class SqlDataDirectory {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(SqlDataDirectory.class);

    /*
     * Type of data directory mapping
     */
    @JsonProperty(value = "type")
    private SqlDataDirectoryType type;

    /*
     * File path
     */
    @JsonProperty(value = "path")
    private String path;

    /*
     * Logical name of the file
     */
    @JsonProperty(value = "logicalName")
    private String logicalName;

    /**
     * Get the type property: Type of data directory mapping.
     *
     * @return the type value.
     */
    public SqlDataDirectoryType type() {
        return this.type;
    }

    /**
     * Set the type property: Type of data directory mapping.
     *
     * @param type the type value to set.
     * @return the SqlDataDirectory object itself.
     */
    public SqlDataDirectory withType(SqlDataDirectoryType type) {
        this.type = type;
        return this;
    }

    /**
     * Get the path property: File path.
     *
     * @return the path value.
     */
    public String path() {
        return this.path;
    }

    /**
     * Set the path property: File path.
     *
     * @param path the path value to set.
     * @return the SqlDataDirectory object itself.
     */
    public SqlDataDirectory withPath(String path) {
        this.path = path;
        return this;
    }

    /**
     * Get the logicalName property: Logical name of the file.
     *
     * @return the logicalName value.
     */
    public String logicalName() {
        return this.logicalName;
    }

    /**
     * Set the logicalName property: Logical name of the file.
     *
     * @param logicalName the logicalName value to set.
     * @return the SqlDataDirectory object itself.
     */
    public SqlDataDirectory withLogicalName(String logicalName) {
        this.logicalName = logicalName;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
