// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;
import java.util.Map;

/**
 * This is the base class for operation result responses.
 */
@Fluent
public class OperationWorkerResponse implements JsonSerializable<OperationWorkerResponse> {
    /*
     * HTTP Status Code of the operation.
     */
    private HttpStatusCode statusCode;

    /*
     * HTTP headers associated with this operation.
     */
    private Map<String, List<String>> headers;

    /**
     * Creates an instance of OperationWorkerResponse class.
     */
    public OperationWorkerResponse() {
    }

    /**
     * Get the statusCode property: HTTP Status Code of the operation.
     * 
     * @return the statusCode value.
     */
    public HttpStatusCode statusCode() {
        return this.statusCode;
    }

    /**
     * Set the statusCode property: HTTP Status Code of the operation.
     * 
     * @param statusCode the statusCode value to set.
     * @return the OperationWorkerResponse object itself.
     */
    public OperationWorkerResponse withStatusCode(HttpStatusCode statusCode) {
        this.statusCode = statusCode;
        return this;
    }

    /**
     * Get the headers property: HTTP headers associated with this operation.
     * 
     * @return the headers value.
     */
    public Map<String, List<String>> headers() {
        return this.headers;
    }

    /**
     * Set the headers property: HTTP headers associated with this operation.
     * 
     * @param headers the headers value to set.
     * @return the OperationWorkerResponse object itself.
     */
    public OperationWorkerResponse withHeaders(Map<String, List<String>> headers) {
        this.headers = headers;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("statusCode", this.statusCode == null ? null : this.statusCode.toString());
        jsonWriter.writeMapField("headers", this.headers,
            (writer, element) -> writer.writeArray(element, (writer1, element1) -> writer1.writeString(element1)));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of OperationWorkerResponse from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of OperationWorkerResponse if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the OperationWorkerResponse.
     */
    public static OperationWorkerResponse fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            OperationWorkerResponse deserializedOperationWorkerResponse = new OperationWorkerResponse();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("statusCode".equals(fieldName)) {
                    deserializedOperationWorkerResponse.statusCode = HttpStatusCode.fromString(reader.getString());
                } else if ("headers".equals(fieldName)) {
                    Map<String, List<String>> headers
                        = reader.readMap(reader1 -> reader1.readArray(reader2 -> reader2.getString()));
                    deserializedOperationWorkerResponse.headers = headers;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedOperationWorkerResponse;
        });
    }
}
