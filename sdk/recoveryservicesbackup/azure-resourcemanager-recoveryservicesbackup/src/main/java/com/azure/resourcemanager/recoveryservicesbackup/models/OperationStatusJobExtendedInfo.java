// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Operation status job extended info.
 */
@Fluent
public final class OperationStatusJobExtendedInfo extends OperationStatusExtendedInfo {
    /*
     * This property will be used as the discriminator for deciding the specific types in the polymorphic chain of
     * types.
     */
    private String objectType = "OperationStatusJobExtendedInfo";

    /*
     * ID of the job created for this protected item.
     */
    private String jobId;

    /**
     * Creates an instance of OperationStatusJobExtendedInfo class.
     */
    public OperationStatusJobExtendedInfo() {
    }

    /**
     * Get the objectType property: This property will be used as the discriminator for deciding the specific types in
     * the polymorphic chain of types.
     * 
     * @return the objectType value.
     */
    @Override
    public String objectType() {
        return this.objectType;
    }

    /**
     * Get the jobId property: ID of the job created for this protected item.
     * 
     * @return the jobId value.
     */
    public String jobId() {
        return this.jobId;
    }

    /**
     * Set the jobId property: ID of the job created for this protected item.
     * 
     * @param jobId the jobId value to set.
     * @return the OperationStatusJobExtendedInfo object itself.
     */
    public OperationStatusJobExtendedInfo withJobId(String jobId) {
        this.jobId = jobId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("objectType", this.objectType);
        jsonWriter.writeStringField("jobId", this.jobId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of OperationStatusJobExtendedInfo from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of OperationStatusJobExtendedInfo if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the OperationStatusJobExtendedInfo.
     */
    public static OperationStatusJobExtendedInfo fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            OperationStatusJobExtendedInfo deserializedOperationStatusJobExtendedInfo
                = new OperationStatusJobExtendedInfo();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("objectType".equals(fieldName)) {
                    deserializedOperationStatusJobExtendedInfo.objectType = reader.getString();
                } else if ("jobId".equals(fieldName)) {
                    deserializedOperationStatusJobExtendedInfo.jobId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedOperationStatusJobExtendedInfo;
        });
    }
}
