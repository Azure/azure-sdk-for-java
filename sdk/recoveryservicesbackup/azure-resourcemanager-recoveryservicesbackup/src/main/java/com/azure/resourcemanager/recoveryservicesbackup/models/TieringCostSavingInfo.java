// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.recoveryservicesbackup.fluent.models.TieringCostInfoInner;
import java.io.IOException;

/**
 * Response parameters for tiering cost info for savings.
 */
@Fluent
public final class TieringCostSavingInfo extends TieringCostInfoInner {
    /*
     * This property will be used as the discriminator for deciding the specific types in the polymorphic chain of
     * types.
     */
    private String objectType = "TieringCostSavingInfo";

    /*
     * Source tier size reduction in bytes after moving all the recommended backup points to target tier
     */
    private long sourceTierSizeReductionInBytes;

    /*
     * Target tier size increase in bytes after moving all the recommended backup points to target tier
     */
    private long targetTierSizeIncreaseInBytes;

    /*
     * Source tier retail cost per GB per month
     */
    private double retailSourceTierCostPerGBPerMonth;

    /*
     * Target tier retail cost per GB per month
     */
    private double retailTargetTierCostPerGBPerMonth;

    /**
     * Creates an instance of TieringCostSavingInfo class.
     */
    public TieringCostSavingInfo() {
    }

    /**
     * Get the objectType property: This property will be used as the discriminator for deciding the specific types in
     * the polymorphic chain of types.
     * 
     * @return the objectType value.
     */
    @Override
    public String objectType() {
        return this.objectType;
    }

    /**
     * Get the sourceTierSizeReductionInBytes property: Source tier size reduction in bytes after moving all the
     * recommended backup points to target tier.
     * 
     * @return the sourceTierSizeReductionInBytes value.
     */
    public long sourceTierSizeReductionInBytes() {
        return this.sourceTierSizeReductionInBytes;
    }

    /**
     * Set the sourceTierSizeReductionInBytes property: Source tier size reduction in bytes after moving all the
     * recommended backup points to target tier.
     * 
     * @param sourceTierSizeReductionInBytes the sourceTierSizeReductionInBytes value to set.
     * @return the TieringCostSavingInfo object itself.
     */
    public TieringCostSavingInfo withSourceTierSizeReductionInBytes(long sourceTierSizeReductionInBytes) {
        this.sourceTierSizeReductionInBytes = sourceTierSizeReductionInBytes;
        return this;
    }

    /**
     * Get the targetTierSizeIncreaseInBytes property: Target tier size increase in bytes after moving all the
     * recommended backup points to target tier.
     * 
     * @return the targetTierSizeIncreaseInBytes value.
     */
    public long targetTierSizeIncreaseInBytes() {
        return this.targetTierSizeIncreaseInBytes;
    }

    /**
     * Set the targetTierSizeIncreaseInBytes property: Target tier size increase in bytes after moving all the
     * recommended backup points to target tier.
     * 
     * @param targetTierSizeIncreaseInBytes the targetTierSizeIncreaseInBytes value to set.
     * @return the TieringCostSavingInfo object itself.
     */
    public TieringCostSavingInfo withTargetTierSizeIncreaseInBytes(long targetTierSizeIncreaseInBytes) {
        this.targetTierSizeIncreaseInBytes = targetTierSizeIncreaseInBytes;
        return this;
    }

    /**
     * Get the retailSourceTierCostPerGBPerMonth property: Source tier retail cost per GB per month.
     * 
     * @return the retailSourceTierCostPerGBPerMonth value.
     */
    public double retailSourceTierCostPerGBPerMonth() {
        return this.retailSourceTierCostPerGBPerMonth;
    }

    /**
     * Set the retailSourceTierCostPerGBPerMonth property: Source tier retail cost per GB per month.
     * 
     * @param retailSourceTierCostPerGBPerMonth the retailSourceTierCostPerGBPerMonth value to set.
     * @return the TieringCostSavingInfo object itself.
     */
    public TieringCostSavingInfo withRetailSourceTierCostPerGBPerMonth(double retailSourceTierCostPerGBPerMonth) {
        this.retailSourceTierCostPerGBPerMonth = retailSourceTierCostPerGBPerMonth;
        return this;
    }

    /**
     * Get the retailTargetTierCostPerGBPerMonth property: Target tier retail cost per GB per month.
     * 
     * @return the retailTargetTierCostPerGBPerMonth value.
     */
    public double retailTargetTierCostPerGBPerMonth() {
        return this.retailTargetTierCostPerGBPerMonth;
    }

    /**
     * Set the retailTargetTierCostPerGBPerMonth property: Target tier retail cost per GB per month.
     * 
     * @param retailTargetTierCostPerGBPerMonth the retailTargetTierCostPerGBPerMonth value to set.
     * @return the TieringCostSavingInfo object itself.
     */
    public TieringCostSavingInfo withRetailTargetTierCostPerGBPerMonth(double retailTargetTierCostPerGBPerMonth) {
        this.retailTargetTierCostPerGBPerMonth = retailTargetTierCostPerGBPerMonth;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeLongField("sourceTierSizeReductionInBytes", this.sourceTierSizeReductionInBytes);
        jsonWriter.writeLongField("targetTierSizeIncreaseInBytes", this.targetTierSizeIncreaseInBytes);
        jsonWriter.writeDoubleField("retailSourceTierCostPerGBPerMonth", this.retailSourceTierCostPerGBPerMonth);
        jsonWriter.writeDoubleField("retailTargetTierCostPerGBPerMonth", this.retailTargetTierCostPerGBPerMonth);
        jsonWriter.writeStringField("objectType", this.objectType);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of TieringCostSavingInfo from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of TieringCostSavingInfo if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the TieringCostSavingInfo.
     */
    public static TieringCostSavingInfo fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            TieringCostSavingInfo deserializedTieringCostSavingInfo = new TieringCostSavingInfo();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("sourceTierSizeReductionInBytes".equals(fieldName)) {
                    deserializedTieringCostSavingInfo.sourceTierSizeReductionInBytes = reader.getLong();
                } else if ("targetTierSizeIncreaseInBytes".equals(fieldName)) {
                    deserializedTieringCostSavingInfo.targetTierSizeIncreaseInBytes = reader.getLong();
                } else if ("retailSourceTierCostPerGBPerMonth".equals(fieldName)) {
                    deserializedTieringCostSavingInfo.retailSourceTierCostPerGBPerMonth = reader.getDouble();
                } else if ("retailTargetTierCostPerGBPerMonth".equals(fieldName)) {
                    deserializedTieringCostSavingInfo.retailTargetTierCostPerGBPerMonth = reader.getDouble();
                } else if ("objectType".equals(fieldName)) {
                    deserializedTieringCostSavingInfo.objectType = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedTieringCostSavingInfo;
        });
    }
}
