// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Azure VM workload-specific protectable item representing HANA HSR.
 */
@Fluent
public final class AzureVmWorkloadSapHanaHsr extends AzureVmWorkloadProtectableItem {
    /*
     * Type of the backup item.
     */
    private String protectableItemType = "HanaHSRContainer";

    /**
     * Creates an instance of AzureVmWorkloadSapHanaHsr class.
     */
    public AzureVmWorkloadSapHanaHsr() {
    }

    /**
     * Get the protectableItemType property: Type of the backup item.
     * 
     * @return the protectableItemType value.
     */
    @Override
    public String protectableItemType() {
        return this.protectableItemType;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AzureVmWorkloadSapHanaHsr withParentName(String parentName) {
        super.withParentName(parentName);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AzureVmWorkloadSapHanaHsr withParentUniqueName(String parentUniqueName) {
        super.withParentUniqueName(parentUniqueName);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AzureVmWorkloadSapHanaHsr withServerName(String serverName) {
        super.withServerName(serverName);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AzureVmWorkloadSapHanaHsr withIsAutoProtectable(Boolean isAutoProtectable) {
        super.withIsAutoProtectable(isAutoProtectable);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AzureVmWorkloadSapHanaHsr withIsAutoProtected(Boolean isAutoProtected) {
        super.withIsAutoProtected(isAutoProtected);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AzureVmWorkloadSapHanaHsr withSubinquireditemcount(Integer subinquireditemcount) {
        super.withSubinquireditemcount(subinquireditemcount);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AzureVmWorkloadSapHanaHsr withSubprotectableitemcount(Integer subprotectableitemcount) {
        super.withSubprotectableitemcount(subprotectableitemcount);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AzureVmWorkloadSapHanaHsr withPrebackupvalidation(PreBackupValidation prebackupvalidation) {
        super.withPrebackupvalidation(prebackupvalidation);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AzureVmWorkloadSapHanaHsr withIsProtectable(Boolean isProtectable) {
        super.withIsProtectable(isProtectable);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AzureVmWorkloadSapHanaHsr withBackupManagementType(String backupManagementType) {
        super.withBackupManagementType(backupManagementType);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AzureVmWorkloadSapHanaHsr withWorkloadType(String workloadType) {
        super.withWorkloadType(workloadType);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AzureVmWorkloadSapHanaHsr withFriendlyName(String friendlyName) {
        super.withFriendlyName(friendlyName);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AzureVmWorkloadSapHanaHsr withProtectionState(ProtectionStatus protectionState) {
        super.withProtectionState(protectionState);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        if (prebackupvalidation() != null) {
            prebackupvalidation().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("backupManagementType", backupManagementType());
        jsonWriter.writeStringField("workloadType", workloadType());
        jsonWriter.writeStringField("friendlyName", friendlyName());
        jsonWriter.writeStringField("protectionState", protectionState() == null ? null : protectionState().toString());
        jsonWriter.writeStringField("parentName", parentName());
        jsonWriter.writeStringField("parentUniqueName", parentUniqueName());
        jsonWriter.writeStringField("serverName", serverName());
        jsonWriter.writeBooleanField("isAutoProtectable", isAutoProtectable());
        jsonWriter.writeBooleanField("isAutoProtected", isAutoProtected());
        jsonWriter.writeNumberField("subinquireditemcount", subinquireditemcount());
        jsonWriter.writeNumberField("subprotectableitemcount", subprotectableitemcount());
        jsonWriter.writeJsonField("prebackupvalidation", prebackupvalidation());
        jsonWriter.writeBooleanField("isProtectable", isProtectable());
        jsonWriter.writeStringField("protectableItemType", this.protectableItemType);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureVmWorkloadSapHanaHsr from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureVmWorkloadSapHanaHsr if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AzureVmWorkloadSapHanaHsr.
     */
    public static AzureVmWorkloadSapHanaHsr fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AzureVmWorkloadSapHanaHsr deserializedAzureVmWorkloadSapHanaHsr = new AzureVmWorkloadSapHanaHsr();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("backupManagementType".equals(fieldName)) {
                    deserializedAzureVmWorkloadSapHanaHsr.withBackupManagementType(reader.getString());
                } else if ("workloadType".equals(fieldName)) {
                    deserializedAzureVmWorkloadSapHanaHsr.withWorkloadType(reader.getString());
                } else if ("friendlyName".equals(fieldName)) {
                    deserializedAzureVmWorkloadSapHanaHsr.withFriendlyName(reader.getString());
                } else if ("protectionState".equals(fieldName)) {
                    deserializedAzureVmWorkloadSapHanaHsr
                        .withProtectionState(ProtectionStatus.fromString(reader.getString()));
                } else if ("parentName".equals(fieldName)) {
                    deserializedAzureVmWorkloadSapHanaHsr.withParentName(reader.getString());
                } else if ("parentUniqueName".equals(fieldName)) {
                    deserializedAzureVmWorkloadSapHanaHsr.withParentUniqueName(reader.getString());
                } else if ("serverName".equals(fieldName)) {
                    deserializedAzureVmWorkloadSapHanaHsr.withServerName(reader.getString());
                } else if ("isAutoProtectable".equals(fieldName)) {
                    deserializedAzureVmWorkloadSapHanaHsr
                        .withIsAutoProtectable(reader.getNullable(JsonReader::getBoolean));
                } else if ("isAutoProtected".equals(fieldName)) {
                    deserializedAzureVmWorkloadSapHanaHsr
                        .withIsAutoProtected(reader.getNullable(JsonReader::getBoolean));
                } else if ("subinquireditemcount".equals(fieldName)) {
                    deserializedAzureVmWorkloadSapHanaHsr
                        .withSubinquireditemcount(reader.getNullable(JsonReader::getInt));
                } else if ("subprotectableitemcount".equals(fieldName)) {
                    deserializedAzureVmWorkloadSapHanaHsr
                        .withSubprotectableitemcount(reader.getNullable(JsonReader::getInt));
                } else if ("prebackupvalidation".equals(fieldName)) {
                    deserializedAzureVmWorkloadSapHanaHsr.withPrebackupvalidation(PreBackupValidation.fromJson(reader));
                } else if ("isProtectable".equals(fieldName)) {
                    deserializedAzureVmWorkloadSapHanaHsr.withIsProtectable(reader.getNullable(JsonReader::getBoolean));
                } else if ("protectableItemType".equals(fieldName)) {
                    deserializedAzureVmWorkloadSapHanaHsr.protectableItemType = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAzureVmWorkloadSapHanaHsr;
        });
    }
}
