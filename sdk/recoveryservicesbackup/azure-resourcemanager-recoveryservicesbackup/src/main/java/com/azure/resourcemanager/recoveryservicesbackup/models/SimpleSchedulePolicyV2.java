// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The V2 policy schedule for IaaS that supports hourly backups.
 */
@Fluent
public final class SimpleSchedulePolicyV2 extends SchedulePolicy {
    /*
     * This property will be used as the discriminator for deciding the specific types in the polymorphic chain of
     * types.
     */
    private String schedulePolicyType = "SimpleSchedulePolicyV2";

    /*
     * Frequency of the schedule operation of this policy.
     */
    private ScheduleRunType scheduleRunFrequency;

    /*
     * hourly schedule of this policy
     */
    private HourlySchedule hourlySchedule;

    /*
     * Daily schedule of this policy
     */
    private DailySchedule dailySchedule;

    /*
     * Weekly schedule of this policy
     */
    private WeeklySchedule weeklySchedule;

    /**
     * Creates an instance of SimpleSchedulePolicyV2 class.
     */
    public SimpleSchedulePolicyV2() {
    }

    /**
     * Get the schedulePolicyType property: This property will be used as the discriminator for deciding the specific
     * types in the polymorphic chain of types.
     * 
     * @return the schedulePolicyType value.
     */
    @Override
    public String schedulePolicyType() {
        return this.schedulePolicyType;
    }

    /**
     * Get the scheduleRunFrequency property: Frequency of the schedule operation of this policy.
     * 
     * @return the scheduleRunFrequency value.
     */
    public ScheduleRunType scheduleRunFrequency() {
        return this.scheduleRunFrequency;
    }

    /**
     * Set the scheduleRunFrequency property: Frequency of the schedule operation of this policy.
     * 
     * @param scheduleRunFrequency the scheduleRunFrequency value to set.
     * @return the SimpleSchedulePolicyV2 object itself.
     */
    public SimpleSchedulePolicyV2 withScheduleRunFrequency(ScheduleRunType scheduleRunFrequency) {
        this.scheduleRunFrequency = scheduleRunFrequency;
        return this;
    }

    /**
     * Get the hourlySchedule property: hourly schedule of this policy.
     * 
     * @return the hourlySchedule value.
     */
    public HourlySchedule hourlySchedule() {
        return this.hourlySchedule;
    }

    /**
     * Set the hourlySchedule property: hourly schedule of this policy.
     * 
     * @param hourlySchedule the hourlySchedule value to set.
     * @return the SimpleSchedulePolicyV2 object itself.
     */
    public SimpleSchedulePolicyV2 withHourlySchedule(HourlySchedule hourlySchedule) {
        this.hourlySchedule = hourlySchedule;
        return this;
    }

    /**
     * Get the dailySchedule property: Daily schedule of this policy.
     * 
     * @return the dailySchedule value.
     */
    public DailySchedule dailySchedule() {
        return this.dailySchedule;
    }

    /**
     * Set the dailySchedule property: Daily schedule of this policy.
     * 
     * @param dailySchedule the dailySchedule value to set.
     * @return the SimpleSchedulePolicyV2 object itself.
     */
    public SimpleSchedulePolicyV2 withDailySchedule(DailySchedule dailySchedule) {
        this.dailySchedule = dailySchedule;
        return this;
    }

    /**
     * Get the weeklySchedule property: Weekly schedule of this policy.
     * 
     * @return the weeklySchedule value.
     */
    public WeeklySchedule weeklySchedule() {
        return this.weeklySchedule;
    }

    /**
     * Set the weeklySchedule property: Weekly schedule of this policy.
     * 
     * @param weeklySchedule the weeklySchedule value to set.
     * @return the SimpleSchedulePolicyV2 object itself.
     */
    public SimpleSchedulePolicyV2 withWeeklySchedule(WeeklySchedule weeklySchedule) {
        this.weeklySchedule = weeklySchedule;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        if (hourlySchedule() != null) {
            hourlySchedule().validate();
        }
        if (dailySchedule() != null) {
            dailySchedule().validate();
        }
        if (weeklySchedule() != null) {
            weeklySchedule().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("schedulePolicyType", this.schedulePolicyType);
        jsonWriter.writeStringField("scheduleRunFrequency",
            this.scheduleRunFrequency == null ? null : this.scheduleRunFrequency.toString());
        jsonWriter.writeJsonField("hourlySchedule", this.hourlySchedule);
        jsonWriter.writeJsonField("dailySchedule", this.dailySchedule);
        jsonWriter.writeJsonField("weeklySchedule", this.weeklySchedule);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SimpleSchedulePolicyV2 from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SimpleSchedulePolicyV2 if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SimpleSchedulePolicyV2.
     */
    public static SimpleSchedulePolicyV2 fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SimpleSchedulePolicyV2 deserializedSimpleSchedulePolicyV2 = new SimpleSchedulePolicyV2();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("schedulePolicyType".equals(fieldName)) {
                    deserializedSimpleSchedulePolicyV2.schedulePolicyType = reader.getString();
                } else if ("scheduleRunFrequency".equals(fieldName)) {
                    deserializedSimpleSchedulePolicyV2.scheduleRunFrequency
                        = ScheduleRunType.fromString(reader.getString());
                } else if ("hourlySchedule".equals(fieldName)) {
                    deserializedSimpleSchedulePolicyV2.hourlySchedule = HourlySchedule.fromJson(reader);
                } else if ("dailySchedule".equals(fieldName)) {
                    deserializedSimpleSchedulePolicyV2.dailySchedule = DailySchedule.fromJson(reader);
                } else if ("weeklySchedule".equals(fieldName)) {
                    deserializedSimpleSchedulePolicyV2.weeklySchedule = WeeklySchedule.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSimpleSchedulePolicyV2;
        });
    }
}
