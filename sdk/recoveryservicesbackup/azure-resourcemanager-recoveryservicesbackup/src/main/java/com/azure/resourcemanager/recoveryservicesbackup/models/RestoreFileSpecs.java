// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Restore file specs like file path, type and target folder path info.
 */
@Fluent
public final class RestoreFileSpecs implements JsonSerializable<RestoreFileSpecs> {
    /*
     * Source File/Folder path
     */
    private String path;

    /*
     * Indicates what the Path variable stands for
     */
    private String fileSpecType;

    /*
     * Destination folder path in target FileShare
     */
    private String targetFolderPath;

    /**
     * Creates an instance of RestoreFileSpecs class.
     */
    public RestoreFileSpecs() {
    }

    /**
     * Get the path property: Source File/Folder path.
     * 
     * @return the path value.
     */
    public String path() {
        return this.path;
    }

    /**
     * Set the path property: Source File/Folder path.
     * 
     * @param path the path value to set.
     * @return the RestoreFileSpecs object itself.
     */
    public RestoreFileSpecs withPath(String path) {
        this.path = path;
        return this;
    }

    /**
     * Get the fileSpecType property: Indicates what the Path variable stands for.
     * 
     * @return the fileSpecType value.
     */
    public String fileSpecType() {
        return this.fileSpecType;
    }

    /**
     * Set the fileSpecType property: Indicates what the Path variable stands for.
     * 
     * @param fileSpecType the fileSpecType value to set.
     * @return the RestoreFileSpecs object itself.
     */
    public RestoreFileSpecs withFileSpecType(String fileSpecType) {
        this.fileSpecType = fileSpecType;
        return this;
    }

    /**
     * Get the targetFolderPath property: Destination folder path in target FileShare.
     * 
     * @return the targetFolderPath value.
     */
    public String targetFolderPath() {
        return this.targetFolderPath;
    }

    /**
     * Set the targetFolderPath property: Destination folder path in target FileShare.
     * 
     * @param targetFolderPath the targetFolderPath value to set.
     * @return the RestoreFileSpecs object itself.
     */
    public RestoreFileSpecs withTargetFolderPath(String targetFolderPath) {
        this.targetFolderPath = targetFolderPath;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("path", this.path);
        jsonWriter.writeStringField("fileSpecType", this.fileSpecType);
        jsonWriter.writeStringField("targetFolderPath", this.targetFolderPath);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RestoreFileSpecs from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RestoreFileSpecs if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the RestoreFileSpecs.
     */
    public static RestoreFileSpecs fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RestoreFileSpecs deserializedRestoreFileSpecs = new RestoreFileSpecs();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("path".equals(fieldName)) {
                    deserializedRestoreFileSpecs.path = reader.getString();
                } else if ("fileSpecType".equals(fieldName)) {
                    deserializedRestoreFileSpecs.fileSpecType = reader.getString();
                } else if ("targetFolderPath".equals(fieldName)) {
                    deserializedRestoreFileSpecs.targetFolderPath = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRestoreFileSpecs;
        });
    }
}
