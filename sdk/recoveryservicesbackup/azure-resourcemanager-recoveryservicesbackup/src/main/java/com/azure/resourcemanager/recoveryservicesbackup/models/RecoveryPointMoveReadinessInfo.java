// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The RecoveryPointMoveReadinessInfo model.
 */
@Fluent
public final class RecoveryPointMoveReadinessInfo implements JsonSerializable<RecoveryPointMoveReadinessInfo> {
    /*
     * The isReadyForMove property.
     */
    private Boolean isReadyForMove;

    /*
     * The additionalInfo property.
     */
    private String additionalInfo;

    /**
     * Creates an instance of RecoveryPointMoveReadinessInfo class.
     */
    public RecoveryPointMoveReadinessInfo() {
    }

    /**
     * Get the isReadyForMove property: The isReadyForMove property.
     * 
     * @return the isReadyForMove value.
     */
    public Boolean isReadyForMove() {
        return this.isReadyForMove;
    }

    /**
     * Set the isReadyForMove property: The isReadyForMove property.
     * 
     * @param isReadyForMove the isReadyForMove value to set.
     * @return the RecoveryPointMoveReadinessInfo object itself.
     */
    public RecoveryPointMoveReadinessInfo withIsReadyForMove(Boolean isReadyForMove) {
        this.isReadyForMove = isReadyForMove;
        return this;
    }

    /**
     * Get the additionalInfo property: The additionalInfo property.
     * 
     * @return the additionalInfo value.
     */
    public String additionalInfo() {
        return this.additionalInfo;
    }

    /**
     * Set the additionalInfo property: The additionalInfo property.
     * 
     * @param additionalInfo the additionalInfo value to set.
     * @return the RecoveryPointMoveReadinessInfo object itself.
     */
    public RecoveryPointMoveReadinessInfo withAdditionalInfo(String additionalInfo) {
        this.additionalInfo = additionalInfo;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("isReadyForMove", this.isReadyForMove);
        jsonWriter.writeStringField("additionalInfo", this.additionalInfo);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RecoveryPointMoveReadinessInfo from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RecoveryPointMoveReadinessInfo if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the RecoveryPointMoveReadinessInfo.
     */
    public static RecoveryPointMoveReadinessInfo fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RecoveryPointMoveReadinessInfo deserializedRecoveryPointMoveReadinessInfo
                = new RecoveryPointMoveReadinessInfo();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("isReadyForMove".equals(fieldName)) {
                    deserializedRecoveryPointMoveReadinessInfo.isReadyForMove
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("additionalInfo".equals(fieldName)) {
                    deserializedRecoveryPointMoveReadinessInfo.additionalInfo = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRecoveryPointMoveReadinessInfo;
        });
    }
}
