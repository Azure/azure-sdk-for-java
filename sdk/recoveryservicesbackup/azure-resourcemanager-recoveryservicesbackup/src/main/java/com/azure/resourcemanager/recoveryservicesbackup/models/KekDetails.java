// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * KEK is encryption key for BEK.
 */
@Fluent
public final class KekDetails implements JsonSerializable<KekDetails> {
    /*
     * Key is KEK.
     */
    private String keyUrl;

    /*
     * Key Vault ID where this Key is stored.
     */
    private String keyVaultId;

    /*
     * KEK data.
     */
    private String keyBackupData;

    /**
     * Creates an instance of KekDetails class.
     */
    public KekDetails() {
    }

    /**
     * Get the keyUrl property: Key is KEK.
     * 
     * @return the keyUrl value.
     */
    public String keyUrl() {
        return this.keyUrl;
    }

    /**
     * Set the keyUrl property: Key is KEK.
     * 
     * @param keyUrl the keyUrl value to set.
     * @return the KekDetails object itself.
     */
    public KekDetails withKeyUrl(String keyUrl) {
        this.keyUrl = keyUrl;
        return this;
    }

    /**
     * Get the keyVaultId property: Key Vault ID where this Key is stored.
     * 
     * @return the keyVaultId value.
     */
    public String keyVaultId() {
        return this.keyVaultId;
    }

    /**
     * Set the keyVaultId property: Key Vault ID where this Key is stored.
     * 
     * @param keyVaultId the keyVaultId value to set.
     * @return the KekDetails object itself.
     */
    public KekDetails withKeyVaultId(String keyVaultId) {
        this.keyVaultId = keyVaultId;
        return this;
    }

    /**
     * Get the keyBackupData property: KEK data.
     * 
     * @return the keyBackupData value.
     */
    public String keyBackupData() {
        return this.keyBackupData;
    }

    /**
     * Set the keyBackupData property: KEK data.
     * 
     * @param keyBackupData the keyBackupData value to set.
     * @return the KekDetails object itself.
     */
    public KekDetails withKeyBackupData(String keyBackupData) {
        this.keyBackupData = keyBackupData;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("keyUrl", this.keyUrl);
        jsonWriter.writeStringField("keyVaultId", this.keyVaultId);
        jsonWriter.writeStringField("keyBackupData", this.keyBackupData);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of KekDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of KekDetails if the JsonReader was pointing to an instance of it, or null if it was pointing
     * to JSON null.
     * @throws IOException If an error occurs while reading the KekDetails.
     */
    public static KekDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            KekDetails deserializedKekDetails = new KekDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("keyUrl".equals(fieldName)) {
                    deserializedKekDetails.keyUrl = reader.getString();
                } else if ("keyVaultId".equals(fieldName)) {
                    deserializedKekDetails.keyVaultId = reader.getString();
                } else if ("keyBackupData".equals(fieldName)) {
                    deserializedKekDetails.keyBackupData = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedKekDetails;
        });
    }
}
