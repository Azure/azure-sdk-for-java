// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.recoveryservicesbackup.RecoveryServicesBackupManager;
import com.azure.resourcemanager.recoveryservicesbackup.models.CreateMode;
import com.azure.resourcemanager.recoveryservicesbackup.models.ProtectedItemResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class BackupProtectedItemsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"protectedItemType\":\"ProtectedItem\",\"backupManagementType\":\"AzureSql\",\"workloadType\":\"SQLDB\",\"containerName\":\"hqet\",\"sourceResourceId\":\"qrtvaoznqni\",\"policyId\":\"ezeagmceituuge\",\"lastRecoveryPoint\":\"2021-10-04T20:29:19Z\",\"backupSetName\":\"jstlzmblsyj\",\"createMode\":\"Recover\",\"deferredDeleteTimeInUTC\":\"2020-12-23T16:02:01Z\",\"isScheduledForDeferredDelete\":true,\"deferredDeleteTimeRemaining\":\"bfsyrledjcustb\",\"isDeferredDeleteScheduleUpcoming\":false,\"isRehydrate\":true,\"resourceGuardOperationRequests\":[\"zvsgeafgfosehxlz\",\"xezppk\",\"waaeskyfjl\"],\"isArchiveEnabled\":false,\"policyName\":\"toyrplixlajml\",\"softDeleteRetentionPeriodInDays\":1773397214,\"vaultId\":\"evhamfowg\"},\"eTag\":\"tmk\",\"location\":\"kxpkzwaq\",\"tags\":{\"vf\":\"qovchiqbp\",\"gmsfepxyi\":\"dusztekxby\"},\"id\":\"pqadagrhrdicxdwy\",\"name\":\"fowxwyovcxjsgbi\",\"type\":\"cu\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        RecoveryServicesBackupManager manager = RecoveryServicesBackupManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<ProtectedItemResource> response = manager.backupProtectedItems()
            .list("bectvtfjmskdch", "aiubavlzwpvgmfa", "kzaz", "gokedgjqafkm", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("kxpkzwaq", response.iterator().next().location());
        Assertions.assertEquals("qovchiqbp", response.iterator().next().tags().get("vf"));
        Assertions.assertEquals("hqet", response.iterator().next().properties().containerName());
        Assertions.assertEquals("qrtvaoznqni", response.iterator().next().properties().sourceResourceId());
        Assertions.assertEquals("ezeagmceituuge", response.iterator().next().properties().policyId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-04T20:29:19Z"),
            response.iterator().next().properties().lastRecoveryPoint());
        Assertions.assertEquals("jstlzmblsyj", response.iterator().next().properties().backupSetName());
        Assertions.assertEquals(CreateMode.RECOVER, response.iterator().next().properties().createMode());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-23T16:02:01Z"),
            response.iterator().next().properties().deferredDeleteTimeInUtc());
        Assertions.assertEquals(true, response.iterator().next().properties().isScheduledForDeferredDelete());
        Assertions.assertEquals("bfsyrledjcustb",
            response.iterator().next().properties().deferredDeleteTimeRemaining());
        Assertions.assertEquals(false, response.iterator().next().properties().isDeferredDeleteScheduleUpcoming());
        Assertions.assertEquals(true, response.iterator().next().properties().isRehydrate());
        Assertions.assertEquals("zvsgeafgfosehxlz",
            response.iterator().next().properties().resourceGuardOperationRequests().get(0));
        Assertions.assertEquals(false, response.iterator().next().properties().isArchiveEnabled());
        Assertions.assertEquals("toyrplixlajml", response.iterator().next().properties().policyName());
        Assertions.assertEquals(1773397214, response.iterator().next().properties().softDeleteRetentionPeriod());
        Assertions.assertEquals("tmk", response.iterator().next().etag());
    }
}
