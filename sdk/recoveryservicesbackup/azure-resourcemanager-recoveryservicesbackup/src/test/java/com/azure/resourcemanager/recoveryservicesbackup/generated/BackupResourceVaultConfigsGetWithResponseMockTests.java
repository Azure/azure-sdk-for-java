// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.recoveryservicesbackup.RecoveryServicesBackupManager;
import com.azure.resourcemanager.recoveryservicesbackup.models.BackupResourceVaultConfigResource;
import com.azure.resourcemanager.recoveryservicesbackup.models.EnhancedSecurityState;
import com.azure.resourcemanager.recoveryservicesbackup.models.SoftDeleteFeatureState;
import com.azure.resourcemanager.recoveryservicesbackup.models.StorageType;
import com.azure.resourcemanager.recoveryservicesbackup.models.StorageTypeState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class BackupResourceVaultConfigsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"storageModelType\":\"GeoRedundant\",\"storageType\":\"Invalid\",\"storageTypeState\":\"Locked\",\"enhancedSecurityState\":\"Enabled\",\"softDeleteFeatureState\":\"AlwaysON\",\"softDeleteRetentionPeriodInDays\":171157881,\"resourceGuardOperationRequests\":[\"wuowhlxlnwy\",\"mouvbl\"],\"isSoftDeleteFeatureStateEditable\":false},\"eTag\":\"zkltrfowtdvrfmv\",\"location\":\"ih\",\"tags\":{\"jidhftu\":\"drqc\",\"bfqz\":\"vhdxlwyo\",\"xmbjroum\":\"kfnjyixhafrat\",\"l\":\"znv\"},\"id\":\"jrhuzgf\",\"name\":\"on\",\"type\":\"tpusllywp\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        RecoveryServicesBackupManager manager = RecoveryServicesBackupManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        BackupResourceVaultConfigResource response = manager.backupResourceVaultConfigs()
            .getWithResponse("d", "wrxwhydtl", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("ih", response.location());
        Assertions.assertEquals("drqc", response.tags().get("jidhftu"));
        Assertions.assertEquals(StorageType.GEO_REDUNDANT, response.properties().storageModelType());
        Assertions.assertEquals(StorageType.INVALID, response.properties().storageType());
        Assertions.assertEquals(StorageTypeState.LOCKED, response.properties().storageTypeState());
        Assertions.assertEquals(EnhancedSecurityState.ENABLED, response.properties().enhancedSecurityState());
        Assertions.assertEquals(SoftDeleteFeatureState.ALWAYS_ON, response.properties().softDeleteFeatureState());
        Assertions.assertEquals(171157881, response.properties().softDeleteRetentionPeriodInDays());
        Assertions.assertEquals("wuowhlxlnwy", response.properties().resourceGuardOperationRequests().get(0));
        Assertions.assertEquals(false, response.properties().isSoftDeleteFeatureStateEditable());
        Assertions.assertEquals("zkltrfowtdvrfmv", response.etag());
    }
}
