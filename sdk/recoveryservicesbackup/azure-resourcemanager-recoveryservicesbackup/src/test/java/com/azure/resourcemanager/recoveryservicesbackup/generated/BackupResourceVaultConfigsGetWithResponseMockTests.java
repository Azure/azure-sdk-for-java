// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.recoveryservicesbackup.RecoveryServicesBackupManager;
import com.azure.resourcemanager.recoveryservicesbackup.models.BackupResourceVaultConfigResource;
import com.azure.resourcemanager.recoveryservicesbackup.models.EnhancedSecurityState;
import com.azure.resourcemanager.recoveryservicesbackup.models.SoftDeleteFeatureState;
import com.azure.resourcemanager.recoveryservicesbackup.models.StorageType;
import com.azure.resourcemanager.recoveryservicesbackup.models.StorageTypeState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class BackupResourceVaultConfigsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"storageModelType\":\"LocallyRedundant\",\"storageType\":\"LocallyRedundant\",\"storageTypeState\":\"Unlocked\",\"enhancedSecurityState\":\"Enabled\",\"softDeleteFeatureState\":\"Invalid\",\"softDeleteRetentionPeriodInDays\":194219254,\"resourceGuardOperationRequests\":[\"xhmtfhocnxzc\",\"jhngxnoq\",\"xtdisnjevhd\",\"mydidwhepfw\"],\"isSoftDeleteFeatureStateEditable\":true},\"eTag\":\"doesxxhmwcdb\",\"location\":\"ky\",\"tags\":{\"plvukaobrlbpg\":\"xkxhnegknjzrbhtm\",\"g\":\"nbagnchj\",\"xcgqtagdrclsso\":\"muowakywalhjy\"},\"id\":\"jomevtfycnlb\",\"name\":\"gjco\",\"type\":\"kk\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        RecoveryServicesBackupManager manager = RecoveryServicesBackupManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        BackupResourceVaultConfigResource response = manager.backupResourceVaultConfigs()
            .getWithResponse("vlm", "jwcolbm", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("ky", response.location());
        Assertions.assertEquals("xkxhnegknjzrbhtm", response.tags().get("plvukaobrlbpg"));
        Assertions.assertEquals(StorageType.LOCALLY_REDUNDANT, response.properties().storageModelType());
        Assertions.assertEquals(StorageType.LOCALLY_REDUNDANT, response.properties().storageType());
        Assertions.assertEquals(StorageTypeState.UNLOCKED, response.properties().storageTypeState());
        Assertions.assertEquals(EnhancedSecurityState.ENABLED, response.properties().enhancedSecurityState());
        Assertions.assertEquals(SoftDeleteFeatureState.INVALID, response.properties().softDeleteFeatureState());
        Assertions.assertEquals(194219254, response.properties().softDeleteRetentionPeriodInDays());
        Assertions.assertEquals("xhmtfhocnxzc", response.properties().resourceGuardOperationRequests().get(0));
        Assertions.assertEquals(true, response.properties().isSoftDeleteFeatureStateEditable());
        Assertions.assertEquals("doesxxhmwcdb", response.etag());
    }
}
