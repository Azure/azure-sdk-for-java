// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.fluent.models.ResourceGuardProxyBaseResourceInner;
import com.azure.resourcemanager.recoveryservicesbackup.models.ResourceGuardOperationDetail;
import com.azure.resourcemanager.recoveryservicesbackup.models.ResourceGuardProxyBase;
import com.azure.resourcemanager.recoveryservicesbackup.models.ResourceGuardProxyBaseResourceList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ResourceGuardProxyBaseResourceListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ResourceGuardProxyBaseResourceList model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"resourceGuardResourceId\":\"owepbqpcrfkb\",\"resourceGuardOperationDetails\":[{\"vaultCriticalOperation\":\"njv\",\"defaultResourceRequest\":\"wxlp\"},{\"vaultCriticalOperation\":\"kftnkhtjsyin\",\"defaultResourceRequest\":\"fq\"},{\"vaultCriticalOperation\":\"mtdh\",\"defaultResourceRequest\":\"dvypgikdgsz\"},{\"vaultCriticalOperation\":\"kbir\",\"defaultResourceRequest\":\"uzhlhkjoqrv\"}],\"lastUpdatedTime\":\"aatjinrvgoupmfi\",\"description\":\"fggjioolvr\"},\"eTag\":\"kvtkkg\",\"location\":\"lqwjygvjayvblm\",\"tags\":{\"rqufegxuvwz\":\"zuhbxvvyhgsopb\"},\"id\":\"bnhlmc\",\"name\":\"l\",\"type\":\"dn\"}],\"nextLink\":\"tvgbmhrixkwmy\"}")
            .toObject(ResourceGuardProxyBaseResourceList.class);
        Assertions.assertEquals("tvgbmhrixkwmy", model.nextLink());
        Assertions.assertEquals("lqwjygvjayvblm", model.value().get(0).location());
        Assertions.assertEquals("zuhbxvvyhgsopb", model.value().get(0).tags().get("rqufegxuvwz"));
        Assertions.assertEquals("owepbqpcrfkb", model.value().get(0).properties().resourceGuardResourceId());
        Assertions.assertEquals("njv",
            model.value().get(0).properties().resourceGuardOperationDetails().get(0).vaultCriticalOperation());
        Assertions.assertEquals("wxlp",
            model.value().get(0).properties().resourceGuardOperationDetails().get(0).defaultResourceRequest());
        Assertions.assertEquals("aatjinrvgoupmfi", model.value().get(0).properties().lastUpdatedTime());
        Assertions.assertEquals("fggjioolvr", model.value().get(0).properties().description());
        Assertions.assertEquals("kvtkkg", model.value().get(0).etag());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ResourceGuardProxyBaseResourceList model
            = new ResourceGuardProxyBaseResourceList().withNextLink("tvgbmhrixkwmy")
                .withValue(Arrays.asList(new ResourceGuardProxyBaseResourceInner().withLocation("lqwjygvjayvblm")
                    .withTags(mapOf("rqufegxuvwz", "zuhbxvvyhgsopb"))
                    .withProperties(new ResourceGuardProxyBase().withResourceGuardResourceId("owepbqpcrfkb")
                        .withResourceGuardOperationDetails(Arrays.asList(
                            new ResourceGuardOperationDetail().withVaultCriticalOperation("njv")
                                .withDefaultResourceRequest("wxlp"),
                            new ResourceGuardOperationDetail().withVaultCriticalOperation("kftnkhtjsyin")
                                .withDefaultResourceRequest("fq"),
                            new ResourceGuardOperationDetail().withVaultCriticalOperation("mtdh")
                                .withDefaultResourceRequest("dvypgikdgsz"),
                            new ResourceGuardOperationDetail().withVaultCriticalOperation("kbir")
                                .withDefaultResourceRequest("uzhlhkjoqrv")))
                        .withLastUpdatedTime("aatjinrvgoupmfi")
                        .withDescription("fggjioolvr"))
                    .withEtag("kvtkkg")));
        model = BinaryData.fromObject(model).toObject(ResourceGuardProxyBaseResourceList.class);
        Assertions.assertEquals("tvgbmhrixkwmy", model.nextLink());
        Assertions.assertEquals("lqwjygvjayvblm", model.value().get(0).location());
        Assertions.assertEquals("zuhbxvvyhgsopb", model.value().get(0).tags().get("rqufegxuvwz"));
        Assertions.assertEquals("owepbqpcrfkb", model.value().get(0).properties().resourceGuardResourceId());
        Assertions.assertEquals("njv",
            model.value().get(0).properties().resourceGuardOperationDetails().get(0).vaultCriticalOperation());
        Assertions.assertEquals("wxlp",
            model.value().get(0).properties().resourceGuardOperationDetails().get(0).defaultResourceRequest());
        Assertions.assertEquals("aatjinrvgoupmfi", model.value().get(0).properties().lastUpdatedTime());
        Assertions.assertEquals("fggjioolvr", model.value().get(0).properties().description());
        Assertions.assertEquals("kvtkkg", model.value().get(0).etag());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
