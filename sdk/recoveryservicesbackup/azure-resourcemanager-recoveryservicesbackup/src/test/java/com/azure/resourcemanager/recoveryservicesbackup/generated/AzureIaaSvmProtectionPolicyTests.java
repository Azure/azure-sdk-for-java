// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.AzureIaaSvmProtectionPolicy;
import com.azure.resourcemanager.recoveryservicesbackup.models.IaasvmPolicyType;
import com.azure.resourcemanager.recoveryservicesbackup.models.InstantRPAdditionalDetails;
import com.azure.resourcemanager.recoveryservicesbackup.models.RetentionDurationType;
import com.azure.resourcemanager.recoveryservicesbackup.models.RetentionPolicy;
import com.azure.resourcemanager.recoveryservicesbackup.models.SchedulePolicy;
import com.azure.resourcemanager.recoveryservicesbackup.models.TieringMode;
import com.azure.resourcemanager.recoveryservicesbackup.models.TieringPolicy;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class AzureIaaSvmProtectionPolicyTests {
    @Test
    public void testDeserialize() {
        AzureIaaSvmProtectionPolicy model =
            BinaryData
                .fromString(
                    "{\"backupManagementType\":\"AzureIaasVM\",\"instantRPDetails\":{\"azureBackupRGNamePrefix\":\"k\",\"azureBackupRGNameSuffix\":\"zfvazi\"},\"schedulePolicy\":{\"schedulePolicyType\":\"SchedulePolicy\"},\"retentionPolicy\":{\"retentionPolicyType\":\"RetentionPolicy\"},\"tieringPolicy\":{\"lkatnwxyiopidkqq\":{\"tieringMode\":\"TierRecommended\",\"duration\":1411328763,\"durationType\":\"Years\"},\"kdmligovi\":{\"tieringMode\":\"DoNotTier\",\"duration\":113648851,\"durationType\":\"Weeks\"},\"oaz\":{\"tieringMode\":\"Invalid\",\"duration\":610794804,\"durationType\":\"Days\"},\"oorb\":{\"tieringMode\":\"Invalid\",\"duration\":1388266960,\"durationType\":\"Years\"}},\"instantRpRetentionRangeInDays\":1028878744,\"timeZone\":\"bfhjxakvvjgsl\",\"policyType\":\"Invalid\",\"protectedItemsCount\":1486233885,\"resourceGuardOperationRequests\":[\"wwtkg\"]}")
                .toObject(AzureIaaSvmProtectionPolicy.class);
        Assertions.assertEquals(1486233885, model.protectedItemsCount());
        Assertions.assertEquals("wwtkg", model.resourceGuardOperationRequests().get(0));
        Assertions.assertEquals("k", model.instantRPDetails().azureBackupRGNamePrefix());
        Assertions.assertEquals("zfvazi", model.instantRPDetails().azureBackupRGNameSuffix());
        Assertions
            .assertEquals(TieringMode.TIER_RECOMMENDED, model.tieringPolicy().get("lkatnwxyiopidkqq").tieringMode());
        Assertions.assertEquals(1411328763, model.tieringPolicy().get("lkatnwxyiopidkqq").duration());
        Assertions
            .assertEquals(RetentionDurationType.YEARS, model.tieringPolicy().get("lkatnwxyiopidkqq").durationType());
        Assertions.assertEquals(1028878744, model.instantRpRetentionRangeInDays());
        Assertions.assertEquals("bfhjxakvvjgsl", model.timeZone());
        Assertions.assertEquals(IaasvmPolicyType.INVALID, model.policyType());
    }

    @Test
    public void testSerialize() {
        AzureIaaSvmProtectionPolicy model =
            new AzureIaaSvmProtectionPolicy()
                .withProtectedItemsCount(1486233885)
                .withResourceGuardOperationRequests(Arrays.asList("wwtkg"))
                .withInstantRPDetails(
                    new InstantRPAdditionalDetails()
                        .withAzureBackupRGNamePrefix("k")
                        .withAzureBackupRGNameSuffix("zfvazi"))
                .withSchedulePolicy(new SchedulePolicy())
                .withRetentionPolicy(new RetentionPolicy())
                .withTieringPolicy(
                    mapOf(
                        "lkatnwxyiopidkqq",
                        new TieringPolicy()
                            .withTieringMode(TieringMode.TIER_RECOMMENDED)
                            .withDuration(1411328763)
                            .withDurationType(RetentionDurationType.YEARS),
                        "kdmligovi",
                        new TieringPolicy()
                            .withTieringMode(TieringMode.DO_NOT_TIER)
                            .withDuration(113648851)
                            .withDurationType(RetentionDurationType.WEEKS),
                        "oaz",
                        new TieringPolicy()
                            .withTieringMode(TieringMode.INVALID)
                            .withDuration(610794804)
                            .withDurationType(RetentionDurationType.DAYS),
                        "oorb",
                        new TieringPolicy()
                            .withTieringMode(TieringMode.INVALID)
                            .withDuration(1388266960)
                            .withDurationType(RetentionDurationType.YEARS)))
                .withInstantRpRetentionRangeInDays(1028878744)
                .withTimeZone("bfhjxakvvjgsl")
                .withPolicyType(IaasvmPolicyType.INVALID);
        model = BinaryData.fromObject(model).toObject(AzureIaaSvmProtectionPolicy.class);
        Assertions.assertEquals(1486233885, model.protectedItemsCount());
        Assertions.assertEquals("wwtkg", model.resourceGuardOperationRequests().get(0));
        Assertions.assertEquals("k", model.instantRPDetails().azureBackupRGNamePrefix());
        Assertions.assertEquals("zfvazi", model.instantRPDetails().azureBackupRGNameSuffix());
        Assertions
            .assertEquals(TieringMode.TIER_RECOMMENDED, model.tieringPolicy().get("lkatnwxyiopidkqq").tieringMode());
        Assertions.assertEquals(1411328763, model.tieringPolicy().get("lkatnwxyiopidkqq").duration());
        Assertions
            .assertEquals(RetentionDurationType.YEARS, model.tieringPolicy().get("lkatnwxyiopidkqq").durationType());
        Assertions.assertEquals(1028878744, model.instantRpRetentionRangeInDays());
        Assertions.assertEquals("bfhjxakvvjgsl", model.timeZone());
        Assertions.assertEquals(IaasvmPolicyType.INVALID, model.policyType());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
