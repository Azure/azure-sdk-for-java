// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.fluent.models.ProtectionPolicyResourceInner;
import com.azure.resourcemanager.recoveryservicesbackup.models.ProtectionPolicy;
import com.azure.resourcemanager.recoveryservicesbackup.models.ProtectionPolicyResourceList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ProtectionPolicyResourceListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ProtectionPolicyResourceList model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"backupManagementType\":\"ProtectionPolicy\",\"protectedItemsCount\":177621177,\"resourceGuardOperationRequests\":[\"qqkpikadrg\",\"tqagnbuynh\"]},\"eTag\":\"gg\",\"location\":\"ebf\",\"tags\":{\"rcvpnazzmhjrunmp\":\"rbu\"},\"id\":\"ttdbhrbnl\",\"name\":\"nkxmyskpbhenbtk\",\"type\":\"xywnytnrsynlqidy\"},{\"properties\":{\"backupManagementType\":\"ProtectionPolicy\",\"protectedItemsCount\":884144034,\"resourceGuardOperationRequests\":[\"clha\",\"xdbabphlwr\",\"lfktsths\",\"cocmnyyaztt\"]},\"eTag\":\"wwrq\",\"location\":\"uedck\",\"tags\":{\"axibxujw\":\"biexzfeyu\",\"muzyoxaepdk\":\"hqwa\",\"rhdwbavxbniw\":\"jancu\"},\"id\":\"jswztsdbpg\",\"name\":\"xytxhpzxbz\",\"type\":\"fzab\"}],\"nextLink\":\"cuh\"}")
                .toObject(ProtectionPolicyResourceList.class);
        Assertions.assertEquals("cuh", model.nextLink());
        Assertions.assertEquals("ebf", model.value().get(0).location());
        Assertions.assertEquals("rbu", model.value().get(0).tags().get("rcvpnazzmhjrunmp"));
        Assertions.assertEquals(177621177, model.value().get(0).properties().protectedItemsCount());
        Assertions
            .assertEquals("qqkpikadrg", model.value().get(0).properties().resourceGuardOperationRequests().get(0));
        Assertions.assertEquals("gg", model.value().get(0).etag());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ProtectionPolicyResourceList model =
            new ProtectionPolicyResourceList()
                .withNextLink("cuh")
                .withValue(
                    Arrays
                        .asList(
                            new ProtectionPolicyResourceInner()
                                .withLocation("ebf")
                                .withTags(mapOf("rcvpnazzmhjrunmp", "rbu"))
                                .withProperties(
                                    new ProtectionPolicy()
                                        .withProtectedItemsCount(177621177)
                                        .withResourceGuardOperationRequests(Arrays.asList("qqkpikadrg", "tqagnbuynh")))
                                .withEtag("gg"),
                            new ProtectionPolicyResourceInner()
                                .withLocation("uedck")
                                .withTags(
                                    mapOf("axibxujw", "biexzfeyu", "muzyoxaepdk", "hqwa", "rhdwbavxbniw", "jancu"))
                                .withProperties(
                                    new ProtectionPolicy()
                                        .withProtectedItemsCount(884144034)
                                        .withResourceGuardOperationRequests(
                                            Arrays.asList("clha", "xdbabphlwr", "lfktsths", "cocmnyyaztt")))
                                .withEtag("wwrq")));
        model = BinaryData.fromObject(model).toObject(ProtectionPolicyResourceList.class);
        Assertions.assertEquals("cuh", model.nextLink());
        Assertions.assertEquals("ebf", model.value().get(0).location());
        Assertions.assertEquals("rbu", model.value().get(0).tags().get("rcvpnazzmhjrunmp"));
        Assertions.assertEquals(177621177, model.value().get(0).properties().protectedItemsCount());
        Assertions
            .assertEquals("qqkpikadrg", model.value().get(0).properties().resourceGuardOperationRequests().get(0));
        Assertions.assertEquals("gg", model.value().get(0).etag());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
