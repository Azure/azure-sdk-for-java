// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.fluent.models.JobResourceInner;
import com.azure.resourcemanager.recoveryservicesbackup.models.BackupManagementType;
import com.azure.resourcemanager.recoveryservicesbackup.models.Job;
import com.azure.resourcemanager.recoveryservicesbackup.models.JobResourceList;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class JobResourceListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        JobResourceList model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"jobType\":\"Job\",\"entityFriendlyName\":\"cykvceo\",\"backupManagementType\":\"AzureBackupServer\",\"operation\":\"ovnotyfjfcnjbkcn\",\"status\":\"hbttkphyw\",\"startTime\":\"2021-09-28T11:00:41Z\",\"endTime\":\"2021-08-05T14:11:47Z\",\"activityId\":\"qnermclfplphoxu\"},\"eTag\":\"rpabg\",\"location\":\"epsbjtazqu\",\"tags\":{\"wfqkquj\":\"wpmueefj\",\"cq\":\"dsuyonobgla\",\"g\":\"tcc\",\"wfudwpzntxhdzhl\":\"udxytlmoyrx\"},\"id\":\"qj\",\"name\":\"hckfrlhrx\",\"type\":\"bkyvp\"}],\"nextLink\":\"anuzbpzkafkuw\"}")
                .toObject(JobResourceList.class);
        Assertions.assertEquals("anuzbpzkafkuw", model.nextLink());
        Assertions.assertEquals("epsbjtazqu", model.value().get(0).location());
        Assertions.assertEquals("wpmueefj", model.value().get(0).tags().get("wfqkquj"));
        Assertions.assertEquals("cykvceo", model.value().get(0).properties().entityFriendlyName());
        Assertions
            .assertEquals(
                BackupManagementType.AZURE_BACKUP_SERVER, model.value().get(0).properties().backupManagementType());
        Assertions.assertEquals("ovnotyfjfcnjbkcn", model.value().get(0).properties().operation());
        Assertions.assertEquals("hbttkphyw", model.value().get(0).properties().status());
        Assertions
            .assertEquals(OffsetDateTime.parse("2021-09-28T11:00:41Z"), model.value().get(0).properties().startTime());
        Assertions
            .assertEquals(OffsetDateTime.parse("2021-08-05T14:11:47Z"), model.value().get(0).properties().endTime());
        Assertions.assertEquals("qnermclfplphoxu", model.value().get(0).properties().activityId());
        Assertions.assertEquals("rpabg", model.value().get(0).etag());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        JobResourceList model =
            new JobResourceList()
                .withNextLink("anuzbpzkafkuw")
                .withValue(
                    Arrays
                        .asList(
                            new JobResourceInner()
                                .withLocation("epsbjtazqu")
                                .withTags(
                                    mapOf(
                                        "wfqkquj",
                                        "wpmueefj",
                                        "cq",
                                        "dsuyonobgla",
                                        "g",
                                        "tcc",
                                        "wfudwpzntxhdzhl",
                                        "udxytlmoyrx"))
                                .withProperties(
                                    new Job()
                                        .withEntityFriendlyName("cykvceo")
                                        .withBackupManagementType(BackupManagementType.AZURE_BACKUP_SERVER)
                                        .withOperation("ovnotyfjfcnjbkcn")
                                        .withStatus("hbttkphyw")
                                        .withStartTime(OffsetDateTime.parse("2021-09-28T11:00:41Z"))
                                        .withEndTime(OffsetDateTime.parse("2021-08-05T14:11:47Z"))
                                        .withActivityId("qnermclfplphoxu"))
                                .withEtag("rpabg")));
        model = BinaryData.fromObject(model).toObject(JobResourceList.class);
        Assertions.assertEquals("anuzbpzkafkuw", model.nextLink());
        Assertions.assertEquals("epsbjtazqu", model.value().get(0).location());
        Assertions.assertEquals("wpmueefj", model.value().get(0).tags().get("wfqkquj"));
        Assertions.assertEquals("cykvceo", model.value().get(0).properties().entityFriendlyName());
        Assertions
            .assertEquals(
                BackupManagementType.AZURE_BACKUP_SERVER, model.value().get(0).properties().backupManagementType());
        Assertions.assertEquals("ovnotyfjfcnjbkcn", model.value().get(0).properties().operation());
        Assertions.assertEquals("hbttkphyw", model.value().get(0).properties().status());
        Assertions
            .assertEquals(OffsetDateTime.parse("2021-09-28T11:00:41Z"), model.value().get(0).properties().startTime());
        Assertions
            .assertEquals(OffsetDateTime.parse("2021-08-05T14:11:47Z"), model.value().get(0).properties().endTime());
        Assertions.assertEquals("qnermclfplphoxu", model.value().get(0).properties().activityId());
        Assertions.assertEquals("rpabg", model.value().get(0).etag());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
