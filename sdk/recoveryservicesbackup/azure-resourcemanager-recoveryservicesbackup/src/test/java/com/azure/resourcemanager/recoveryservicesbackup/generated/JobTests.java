// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.BackupManagementType;
import com.azure.resourcemanager.recoveryservicesbackup.models.Job;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class JobTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        Job model = BinaryData.fromString(
            "{\"jobType\":\"Job\",\"entityFriendlyName\":\"xongmtsavjcbpwxq\",\"backupManagementType\":\"DefaultBackup\",\"operation\":\"nftguvriuhpr\",\"status\":\"dyvxqtayriww\",\"startTime\":\"2021-05-20T03:51:26Z\",\"endTime\":\"2021-02-13T03:31:18Z\",\"activityId\":\"xrmcqibycnojvk\"}")
            .toObject(Job.class);
        Assertions.assertEquals("xongmtsavjcbpwxq", model.entityFriendlyName());
        Assertions.assertEquals(BackupManagementType.DEFAULT_BACKUP, model.backupManagementType());
        Assertions.assertEquals("nftguvriuhpr", model.operation());
        Assertions.assertEquals("dyvxqtayriww", model.status());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-20T03:51:26Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-13T03:31:18Z"), model.endTime());
        Assertions.assertEquals("xrmcqibycnojvk", model.activityId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        Job model = new Job().withEntityFriendlyName("xongmtsavjcbpwxq")
            .withBackupManagementType(BackupManagementType.DEFAULT_BACKUP)
            .withOperation("nftguvriuhpr")
            .withStatus("dyvxqtayriww")
            .withStartTime(OffsetDateTime.parse("2021-05-20T03:51:26Z"))
            .withEndTime(OffsetDateTime.parse("2021-02-13T03:31:18Z"))
            .withActivityId("xrmcqibycnojvk");
        model = BinaryData.fromObject(model).toObject(Job.class);
        Assertions.assertEquals("xongmtsavjcbpwxq", model.entityFriendlyName());
        Assertions.assertEquals(BackupManagementType.DEFAULT_BACKUP, model.backupManagementType());
        Assertions.assertEquals("nftguvriuhpr", model.operation());
        Assertions.assertEquals("dyvxqtayriww", model.status());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-20T03:51:26Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-13T03:31:18Z"), model.endTime());
        Assertions.assertEquals("xrmcqibycnojvk", model.activityId());
    }
}
