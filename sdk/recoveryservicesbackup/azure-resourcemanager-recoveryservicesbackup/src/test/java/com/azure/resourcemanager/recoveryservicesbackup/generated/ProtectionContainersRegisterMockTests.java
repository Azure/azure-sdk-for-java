// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.recoveryservicesbackup.RecoveryServicesBackupManager;
import com.azure.resourcemanager.recoveryservicesbackup.models.BackupManagementType;
import com.azure.resourcemanager.recoveryservicesbackup.models.ProtectionContainer;
import com.azure.resourcemanager.recoveryservicesbackup.models.ProtectionContainerResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ProtectionContainersRegisterMockTests {
    @Test
    public void testRegister() throws Exception {
        String responseStr
            = "{\"properties\":{\"containerType\":\"ProtectionContainer\",\"friendlyName\":\"mtum\",\"backupManagementType\":\"DefaultBackup\",\"registrationStatus\":\"djf\",\"healthStatus\":\"xroq\",\"protectableObjectType\":\"pilrgunca\"},\"eTag\":\"duwzorxsbmxaqk\",\"location\":\"xym\",\"tags\":{\"cl\":\"vfqepd\",\"wcpjqduqgi\":\"uubwyvpjb\",\"lj\":\"exkydfb\"},\"id\":\"vhuerkjddvrglieg\",\"name\":\"tcvbiiftk\",\"type\":\"dwgdn\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        RecoveryServicesBackupManager manager = RecoveryServicesBackupManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        ProtectionContainerResource response = manager.protectionContainers()
            .define("rsnrhp")
            .withRegion("jxlehzlx")
            .withExistingBackupFabric("zbeqrztrxa", "xrd", "absr")
            .withTags(mapOf("iibelwcerw", "quwzp", "pjxljtxb", "w", "sdzhgbdgzpagsec", "sqtbxxniu"))
            .withProperties(new ProtectionContainer().withFriendlyName("iwkkvya")
                .withBackupManagementType(BackupManagementType.AZURE_BACKUP_SERVER)
                .withRegistrationStatus("vcsemsvuvdj")
                .withHealthStatus("xetqmm")
                .withProtectableObjectType("vrjjxnw"))
            .withEtag("chp")
            .create();

        Assertions.assertEquals("xym", response.location());
        Assertions.assertEquals("vfqepd", response.tags().get("cl"));
        Assertions.assertEquals("mtum", response.properties().friendlyName());
        Assertions.assertEquals(BackupManagementType.DEFAULT_BACKUP, response.properties().backupManagementType());
        Assertions.assertEquals("djf", response.properties().registrationStatus());
        Assertions.assertEquals("xroq", response.properties().healthStatus());
        Assertions.assertEquals("pilrgunca", response.properties().protectableObjectType());
        Assertions.assertEquals("duwzorxsbmxaqk", response.etag());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
