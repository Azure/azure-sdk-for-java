// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.recoveryservicesbackup.RecoveryServicesBackupManager;
import com.azure.resourcemanager.recoveryservicesbackup.models.BackupManagementType;
import com.azure.resourcemanager.recoveryservicesbackup.models.ProtectionContainer;
import com.azure.resourcemanager.recoveryservicesbackup.models.ProtectionContainerResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ProtectionContainersRegisterMockTests {
    @Test
    public void testRegister() throws Exception {
        String responseStr
            = "{\"properties\":{\"containerType\":\"ProtectionContainer\",\"friendlyName\":\"ntumeezbxvq\",\"backupManagementType\":\"AzureBackupServer\",\"registrationStatus\":\"vwcga\",\"healthStatus\":\"omtmjzwxuqgov\",\"protectableObjectType\":\"pwwztjfmkkhtgf\"},\"eTag\":\"dmlsc\",\"location\":\"rllccnaovjowazhp\",\"tags\":{\"srqorcgenmvceb\":\"comlyotgkwsx\",\"dcqjkedwqurc\":\"eetqujxcxxq\",\"qqrsil\":\"ojmrvvxwjongzse\"},\"id\":\"chskxxka\",\"name\":\"sbvr\",\"type\":\"aqgvto\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        RecoveryServicesBackupManager manager = RecoveryServicesBackupManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ProtectionContainerResource response = manager.protectionContainers()
            .define("obfelhldiuhz")
            .withRegion("fdvhaxdvwzae")
            .withExistingBackupFabric("trkxgpazwu", "x", "qvn")
            .withTags(mapOf("oixwgiksb", "hthdklmvetatlakf"))
            .withProperties(new ProtectionContainer().withFriendlyName("lmfaewzgiudjp")
                .withBackupManagementType(BackupManagementType.AZURE_IAAS_VM)
                .withRegistrationStatus("ttqhnmhkrezsds")
                .withHealthStatus("heqdgcru")
                .withProtectableObjectType("pinymmqgwokmikp"))
            .withEtag("fbmjxuvji")
            .create();

        Assertions.assertEquals("rllccnaovjowazhp", response.location());
        Assertions.assertEquals("comlyotgkwsx", response.tags().get("srqorcgenmvceb"));
        Assertions.assertEquals("ntumeezbxvq", response.properties().friendlyName());
        Assertions.assertEquals(BackupManagementType.AZURE_BACKUP_SERVER, response.properties().backupManagementType());
        Assertions.assertEquals("vwcga", response.properties().registrationStatus());
        Assertions.assertEquals("omtmjzwxuqgov", response.properties().healthStatus());
        Assertions.assertEquals("pwwztjfmkkhtgf", response.properties().protectableObjectType());
        Assertions.assertEquals("dmlsc", response.etag());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
