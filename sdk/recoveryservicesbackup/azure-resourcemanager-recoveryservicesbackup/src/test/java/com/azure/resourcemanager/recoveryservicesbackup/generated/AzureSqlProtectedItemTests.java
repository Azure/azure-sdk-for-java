// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.AzureSqlProtectedItem;
import com.azure.resourcemanager.recoveryservicesbackup.models.AzureSqlProtectedItemExtendedInfo;
import com.azure.resourcemanager.recoveryservicesbackup.models.CreateMode;
import com.azure.resourcemanager.recoveryservicesbackup.models.ProtectedItemState;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AzureSqlProtectedItemTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureSqlProtectedItem model =
            BinaryData
                .fromString(
                    "{\"protectedItemType\":\"Microsoft.Sql/servers/databases\",\"protectedItemDataId\":\"katnwxyi\",\"protectionState\":\"BackupsSuspended\",\"extendedInfo\":{\"oldestRecoveryPoint\":\"2021-05-28T18:08:40Z\",\"recoveryPointCount\":613758841,\"policyState\":\"uvscxkdmligov\"},\"backupManagementType\":\"AzureBackupServer\",\"workloadType\":\"Exchange\",\"containerName\":\"mloazuru\",\"sourceResourceId\":\"bgo\",\"policyId\":\"bteoybf\",\"lastRecoveryPoint\":\"2021-08-27T22:46:55Z\",\"backupSetName\":\"kvvjgslordilmyww\",\"createMode\":\"Default\",\"deferredDeleteTimeInUTC\":\"2021-09-04T23:35:12Z\",\"isScheduledForDeferredDelete\":true,\"deferredDeleteTimeRemaining\":\"dabg\",\"isDeferredDeleteScheduleUpcoming\":true,\"isRehydrate\":true,\"resourceGuardOperationRequests\":[\"ewbcihxuuw\",\"c\"],\"isArchiveEnabled\":false,\"policyName\":\"cybvpayakkudzpxg\",\"softDeleteRetentionPeriodInDays\":1134671843}")
                .toObject(AzureSqlProtectedItem.class);
        Assertions.assertEquals("mloazuru", model.containerName());
        Assertions.assertEquals("bgo", model.sourceResourceId());
        Assertions.assertEquals("bteoybf", model.policyId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-27T22:46:55Z"), model.lastRecoveryPoint());
        Assertions.assertEquals("kvvjgslordilmyww", model.backupSetName());
        Assertions.assertEquals(CreateMode.DEFAULT, model.createMode());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-04T23:35:12Z"), model.deferredDeleteTimeInUtc());
        Assertions.assertEquals(true, model.isScheduledForDeferredDelete());
        Assertions.assertEquals("dabg", model.deferredDeleteTimeRemaining());
        Assertions.assertEquals(true, model.isDeferredDeleteScheduleUpcoming());
        Assertions.assertEquals(true, model.isRehydrate());
        Assertions.assertEquals("ewbcihxuuw", model.resourceGuardOperationRequests().get(0));
        Assertions.assertEquals(false, model.isArchiveEnabled());
        Assertions.assertEquals("cybvpayakkudzpxg", model.policyName());
        Assertions.assertEquals(1134671843, model.softDeleteRetentionPeriod());
        Assertions.assertEquals("katnwxyi", model.protectedItemDataId());
        Assertions.assertEquals(ProtectedItemState.BACKUPS_SUSPENDED, model.protectionState());
        Assertions
            .assertEquals(OffsetDateTime.parse("2021-05-28T18:08:40Z"), model.extendedInfo().oldestRecoveryPoint());
        Assertions.assertEquals(613758841, model.extendedInfo().recoveryPointCount());
        Assertions.assertEquals("uvscxkdmligov", model.extendedInfo().policyState());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureSqlProtectedItem model =
            new AzureSqlProtectedItem()
                .withContainerName("mloazuru")
                .withSourceResourceId("bgo")
                .withPolicyId("bteoybf")
                .withLastRecoveryPoint(OffsetDateTime.parse("2021-08-27T22:46:55Z"))
                .withBackupSetName("kvvjgslordilmyww")
                .withCreateMode(CreateMode.DEFAULT)
                .withDeferredDeleteTimeInUtc(OffsetDateTime.parse("2021-09-04T23:35:12Z"))
                .withIsScheduledForDeferredDelete(true)
                .withDeferredDeleteTimeRemaining("dabg")
                .withIsDeferredDeleteScheduleUpcoming(true)
                .withIsRehydrate(true)
                .withResourceGuardOperationRequests(Arrays.asList("ewbcihxuuw", "c"))
                .withIsArchiveEnabled(false)
                .withPolicyName("cybvpayakkudzpxg")
                .withSoftDeleteRetentionPeriod(1134671843)
                .withProtectedItemDataId("katnwxyi")
                .withProtectionState(ProtectedItemState.BACKUPS_SUSPENDED)
                .withExtendedInfo(
                    new AzureSqlProtectedItemExtendedInfo()
                        .withOldestRecoveryPoint(OffsetDateTime.parse("2021-05-28T18:08:40Z"))
                        .withRecoveryPointCount(613758841)
                        .withPolicyState("uvscxkdmligov"));
        model = BinaryData.fromObject(model).toObject(AzureSqlProtectedItem.class);
        Assertions.assertEquals("mloazuru", model.containerName());
        Assertions.assertEquals("bgo", model.sourceResourceId());
        Assertions.assertEquals("bteoybf", model.policyId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-27T22:46:55Z"), model.lastRecoveryPoint());
        Assertions.assertEquals("kvvjgslordilmyww", model.backupSetName());
        Assertions.assertEquals(CreateMode.DEFAULT, model.createMode());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-04T23:35:12Z"), model.deferredDeleteTimeInUtc());
        Assertions.assertEquals(true, model.isScheduledForDeferredDelete());
        Assertions.assertEquals("dabg", model.deferredDeleteTimeRemaining());
        Assertions.assertEquals(true, model.isDeferredDeleteScheduleUpcoming());
        Assertions.assertEquals(true, model.isRehydrate());
        Assertions.assertEquals("ewbcihxuuw", model.resourceGuardOperationRequests().get(0));
        Assertions.assertEquals(false, model.isArchiveEnabled());
        Assertions.assertEquals("cybvpayakkudzpxg", model.policyName());
        Assertions.assertEquals(1134671843, model.softDeleteRetentionPeriod());
        Assertions.assertEquals("katnwxyi", model.protectedItemDataId());
        Assertions.assertEquals(ProtectedItemState.BACKUPS_SUSPENDED, model.protectionState());
        Assertions
            .assertEquals(OffsetDateTime.parse("2021-05-28T18:08:40Z"), model.extendedInfo().oldestRecoveryPoint());
        Assertions.assertEquals(613758841, model.extendedInfo().recoveryPointCount());
        Assertions.assertEquals("uvscxkdmligov", model.extendedInfo().policyState());
    }
}
