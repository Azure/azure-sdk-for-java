// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.AzureSqlProtectedItem;
import com.azure.resourcemanager.recoveryservicesbackup.models.AzureSqlProtectedItemExtendedInfo;
import com.azure.resourcemanager.recoveryservicesbackup.models.CreateMode;
import com.azure.resourcemanager.recoveryservicesbackup.models.ProtectedItemState;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class AzureSqlProtectedItemTests {
    @Test
    public void testDeserialize() {
        AzureSqlProtectedItem model =
            BinaryData
                .fromString(
                    "{\"protectedItemType\":\"Microsoft.Sql/servers/databases\",\"protectedItemDataId\":\"vudtjuewbcihx\",\"protectionState\":\"ProtectionStopped\",\"extendedInfo\":{\"oldestRecoveryPoint\":\"2021-02-12T16:32:50Z\",\"recoveryPointCount\":2057414837,\"policyState\":\"cybvpayakkudzpxg\"},\"backupManagementType\":\"AzureSql\",\"workloadType\":\"FileFolder\",\"containerName\":\"gstcyohpf\",\"sourceResourceId\":\"rkdbdgiogsjkmnwq\",\"policyId\":\"obaiyhddviaceg\",\"lastRecoveryPoint\":\"2021-04-14T23:17:33Z\",\"backupSetName\":\"tfpmvmemfnczdw\",\"createMode\":\"Invalid\",\"deferredDeleteTimeInUTC\":\"2020-12-21T10:32:32Z\",\"isScheduledForDeferredDelete\":true,\"deferredDeleteTimeRemaining\":\"lchpodbzevwrdn\",\"isDeferredDeleteScheduleUpcoming\":false,\"isRehydrate\":false,\"resourceGuardOperationRequests\":[\"jcswsmys\",\"uluqypfc\",\"lerchpq\",\"mfpjbabw\"],\"isArchiveEnabled\":true,\"policyName\":\"xsspuunnoxyhk\",\"softDeleteRetentionPeriod\":1875486433}")
                .toObject(AzureSqlProtectedItem.class);
        Assertions.assertEquals("gstcyohpf", model.containerName());
        Assertions.assertEquals("rkdbdgiogsjkmnwq", model.sourceResourceId());
        Assertions.assertEquals("obaiyhddviaceg", model.policyId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-14T23:17:33Z"), model.lastRecoveryPoint());
        Assertions.assertEquals("tfpmvmemfnczdw", model.backupSetName());
        Assertions.assertEquals(CreateMode.INVALID, model.createMode());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-21T10:32:32Z"), model.deferredDeleteTimeInUtc());
        Assertions.assertEquals(true, model.isScheduledForDeferredDelete());
        Assertions.assertEquals("lchpodbzevwrdn", model.deferredDeleteTimeRemaining());
        Assertions.assertEquals(false, model.isDeferredDeleteScheduleUpcoming());
        Assertions.assertEquals(false, model.isRehydrate());
        Assertions.assertEquals("jcswsmys", model.resourceGuardOperationRequests().get(0));
        Assertions.assertEquals(true, model.isArchiveEnabled());
        Assertions.assertEquals("xsspuunnoxyhk", model.policyName());
        Assertions.assertEquals(1875486433, model.softDeleteRetentionPeriod());
        Assertions.assertEquals("vudtjuewbcihx", model.protectedItemDataId());
        Assertions.assertEquals(ProtectedItemState.PROTECTION_STOPPED, model.protectionState());
        Assertions
            .assertEquals(OffsetDateTime.parse("2021-02-12T16:32:50Z"), model.extendedInfo().oldestRecoveryPoint());
        Assertions.assertEquals(2057414837, model.extendedInfo().recoveryPointCount());
        Assertions.assertEquals("cybvpayakkudzpxg", model.extendedInfo().policyState());
    }

    @Test
    public void testSerialize() {
        AzureSqlProtectedItem model =
            new AzureSqlProtectedItem()
                .withContainerName("gstcyohpf")
                .withSourceResourceId("rkdbdgiogsjkmnwq")
                .withPolicyId("obaiyhddviaceg")
                .withLastRecoveryPoint(OffsetDateTime.parse("2021-04-14T23:17:33Z"))
                .withBackupSetName("tfpmvmemfnczdw")
                .withCreateMode(CreateMode.INVALID)
                .withDeferredDeleteTimeInUtc(OffsetDateTime.parse("2020-12-21T10:32:32Z"))
                .withIsScheduledForDeferredDelete(true)
                .withDeferredDeleteTimeRemaining("lchpodbzevwrdn")
                .withIsDeferredDeleteScheduleUpcoming(false)
                .withIsRehydrate(false)
                .withResourceGuardOperationRequests(Arrays.asList("jcswsmys", "uluqypfc", "lerchpq", "mfpjbabw"))
                .withIsArchiveEnabled(true)
                .withPolicyName("xsspuunnoxyhk")
                .withSoftDeleteRetentionPeriod(1875486433)
                .withProtectedItemDataId("vudtjuewbcihx")
                .withProtectionState(ProtectedItemState.PROTECTION_STOPPED)
                .withExtendedInfo(
                    new AzureSqlProtectedItemExtendedInfo()
                        .withOldestRecoveryPoint(OffsetDateTime.parse("2021-02-12T16:32:50Z"))
                        .withRecoveryPointCount(2057414837)
                        .withPolicyState("cybvpayakkudzpxg"));
        model = BinaryData.fromObject(model).toObject(AzureSqlProtectedItem.class);
        Assertions.assertEquals("gstcyohpf", model.containerName());
        Assertions.assertEquals("rkdbdgiogsjkmnwq", model.sourceResourceId());
        Assertions.assertEquals("obaiyhddviaceg", model.policyId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-14T23:17:33Z"), model.lastRecoveryPoint());
        Assertions.assertEquals("tfpmvmemfnczdw", model.backupSetName());
        Assertions.assertEquals(CreateMode.INVALID, model.createMode());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-21T10:32:32Z"), model.deferredDeleteTimeInUtc());
        Assertions.assertEquals(true, model.isScheduledForDeferredDelete());
        Assertions.assertEquals("lchpodbzevwrdn", model.deferredDeleteTimeRemaining());
        Assertions.assertEquals(false, model.isDeferredDeleteScheduleUpcoming());
        Assertions.assertEquals(false, model.isRehydrate());
        Assertions.assertEquals("jcswsmys", model.resourceGuardOperationRequests().get(0));
        Assertions.assertEquals(true, model.isArchiveEnabled());
        Assertions.assertEquals("xsspuunnoxyhk", model.policyName());
        Assertions.assertEquals(1875486433, model.softDeleteRetentionPeriod());
        Assertions.assertEquals("vudtjuewbcihx", model.protectedItemDataId());
        Assertions.assertEquals(ProtectedItemState.PROTECTION_STOPPED, model.protectionState());
        Assertions
            .assertEquals(OffsetDateTime.parse("2021-02-12T16:32:50Z"), model.extendedInfo().oldestRecoveryPoint());
        Assertions.assertEquals(2057414837, model.extendedInfo().recoveryPointCount());
        Assertions.assertEquals("cybvpayakkudzpxg", model.extendedInfo().policyState());
    }
}
