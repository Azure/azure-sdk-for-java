// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.BackupRequest;
import com.azure.resourcemanager.recoveryservicesbackup.models.BackupRequestResource;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class BackupRequestResourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BackupRequestResource model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"objectType\":\"BackupRequest\"},\"eTag\":\"ntoe\",\"location\":\"okdwb\",\"tags\":{\"t\":\"szzcmrvexztv\",\"lmnguxaw\":\"gsfraoyzkoow\",\"uximerqfobw\":\"aldsy\",\"r\":\"znkbykutwpfhpagm\"},\"id\":\"kdsnfdsdoakgtdl\",\"name\":\"kkze\",\"type\":\"dlhewp\"}")
                .toObject(BackupRequestResource.class);
        Assertions.assertEquals("okdwb", model.location());
        Assertions.assertEquals("szzcmrvexztv", model.tags().get("t"));
        Assertions.assertEquals("ntoe", model.etag());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BackupRequestResource model =
            new BackupRequestResource()
                .withLocation("okdwb")
                .withTags(
                    mapOf(
                        "t",
                        "szzcmrvexztv",
                        "lmnguxaw",
                        "gsfraoyzkoow",
                        "uximerqfobw",
                        "aldsy",
                        "r",
                        "znkbykutwpfhpagm"))
                .withProperties(new BackupRequest())
                .withEtag("ntoe");
        model = BinaryData.fromObject(model).toObject(BackupRequestResource.class);
        Assertions.assertEquals("okdwb", model.location());
        Assertions.assertEquals("szzcmrvexztv", model.tags().get("t"));
        Assertions.assertEquals("ntoe", model.etag());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
