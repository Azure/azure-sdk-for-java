// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.DayOfWeek;
import com.azure.resourcemanager.recoveryservicesbackup.models.HourlySchedule;
import com.azure.resourcemanager.recoveryservicesbackup.models.ScheduleRunType;
import com.azure.resourcemanager.recoveryservicesbackup.models.SimpleSchedulePolicy;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SimpleSchedulePolicyTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SimpleSchedulePolicy model = BinaryData.fromString(
            "{\"schedulePolicyType\":\"SimpleSchedulePolicy\",\"scheduleRunFrequency\":\"Weekly\",\"scheduleRunDays\":[\"Monday\",\"Friday\",\"Monday\"],\"scheduleRunTimes\":[\"2021-05-21T08:47:13Z\"],\"hourlySchedule\":{\"interval\":255752990,\"scheduleWindowStartTime\":\"2021-11-23T21:44:53Z\",\"scheduleWindowDuration\":1246300982},\"scheduleWeeklyFrequency\":1002073196}")
            .toObject(SimpleSchedulePolicy.class);
        Assertions.assertEquals(ScheduleRunType.WEEKLY, model.scheduleRunFrequency());
        Assertions.assertEquals(DayOfWeek.MONDAY, model.scheduleRunDays().get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-21T08:47:13Z"), model.scheduleRunTimes().get(0));
        Assertions.assertEquals(255752990, model.hourlySchedule().interval());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-23T21:44:53Z"),
            model.hourlySchedule().scheduleWindowStartTime());
        Assertions.assertEquals(1246300982, model.hourlySchedule().scheduleWindowDuration());
        Assertions.assertEquals(1002073196, model.scheduleWeeklyFrequency());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SimpleSchedulePolicy model = new SimpleSchedulePolicy().withScheduleRunFrequency(ScheduleRunType.WEEKLY)
            .withScheduleRunDays(Arrays.asList(DayOfWeek.MONDAY, DayOfWeek.FRIDAY, DayOfWeek.MONDAY))
            .withScheduleRunTimes(Arrays.asList(OffsetDateTime.parse("2021-05-21T08:47:13Z")))
            .withHourlySchedule(new HourlySchedule().withInterval(255752990)
                .withScheduleWindowStartTime(OffsetDateTime.parse("2021-11-23T21:44:53Z"))
                .withScheduleWindowDuration(1246300982))
            .withScheduleWeeklyFrequency(1002073196);
        model = BinaryData.fromObject(model).toObject(SimpleSchedulePolicy.class);
        Assertions.assertEquals(ScheduleRunType.WEEKLY, model.scheduleRunFrequency());
        Assertions.assertEquals(DayOfWeek.MONDAY, model.scheduleRunDays().get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-21T08:47:13Z"), model.scheduleRunTimes().get(0));
        Assertions.assertEquals(255752990, model.hourlySchedule().interval());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-23T21:44:53Z"),
            model.hourlySchedule().scheduleWindowStartTime());
        Assertions.assertEquals(1246300982, model.hourlySchedule().scheduleWindowDuration());
        Assertions.assertEquals(1002073196, model.scheduleWeeklyFrequency());
    }
}
