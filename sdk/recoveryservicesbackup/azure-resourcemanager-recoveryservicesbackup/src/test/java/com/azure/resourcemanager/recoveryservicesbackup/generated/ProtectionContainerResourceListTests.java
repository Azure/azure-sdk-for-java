// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.fluent.models.ProtectionContainerResourceInner;
import com.azure.resourcemanager.recoveryservicesbackup.models.BackupManagementType;
import com.azure.resourcemanager.recoveryservicesbackup.models.ProtectionContainer;
import com.azure.resourcemanager.recoveryservicesbackup.models.ProtectionContainerResourceList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ProtectionContainerResourceListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ProtectionContainerResourceList model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"containerType\":\"ProtectionContainer\",\"friendlyName\":\"bkzbzkd\",\"backupManagementType\":\"DefaultBackup\",\"registrationStatus\":\"abudurgk\",\"healthStatus\":\"mokzhjjklf\",\"protectableObjectType\":\"mouwqlgzrfzeey\"},\"eTag\":\"izikayuhq\",\"location\":\"bjbsybb\",\"tags\":{\"slthaq\":\"vtldgmfpgvmpip\"},\"id\":\"x\",\"name\":\"smwutwbdsrezpd\",\"type\":\"hneuyowqkd\"},{\"properties\":{\"containerType\":\"ProtectionContainer\",\"friendlyName\":\"i\",\"backupManagementType\":\"DefaultBackup\",\"registrationStatus\":\"rcgp\",\"healthStatus\":\"pzimejzanlfzxi\",\"protectableObjectType\":\"rmbzo\"},\"eTag\":\"kixrj\",\"location\":\"cirgzp\",\"tags\":{\"jylwbtlhflsj\":\"azszrnwoiindfpw\",\"bgofeljag\":\"dhszfjv\"},\"id\":\"qmqhldvriii\",\"name\":\"jnalghf\",\"type\":\"vtvsexsowueluq\"},{\"properties\":{\"containerType\":\"ProtectionContainer\",\"friendlyName\":\"hhxvrhmzkwpj\",\"backupManagementType\":\"DPM\",\"registrationStatus\":\"pughftqsxh\",\"healthStatus\":\"ujxukndxd\",\"protectableObjectType\":\"rjguufzdmsyqtf\"},\"eTag\":\"whbotzingamv\",\"location\":\"phoszqz\",\"tags\":{\"ynwcvtbv\":\"hqamvdkf\",\"pcnp\":\"ayhmtnvyqiatkz\",\"jguq\":\"zcjaesgvvsccy\",\"lvdnkfx\":\"hwyg\"},\"id\":\"semdwzrmu\",\"name\":\"apfcqdpsq\",\"type\":\"qvpsvuoymg\"}],\"nextLink\":\"elvezrypq\"}")
                .toObject(ProtectionContainerResourceList.class);
        Assertions.assertEquals("elvezrypq", model.nextLink());
        Assertions.assertEquals("bjbsybb", model.value().get(0).location());
        Assertions.assertEquals("vtldgmfpgvmpip", model.value().get(0).tags().get("slthaq"));
        Assertions.assertEquals("bkzbzkd", model.value().get(0).properties().friendlyName());
        Assertions
            .assertEquals(
                BackupManagementType.DEFAULT_BACKUP, model.value().get(0).properties().backupManagementType());
        Assertions.assertEquals("abudurgk", model.value().get(0).properties().registrationStatus());
        Assertions.assertEquals("mokzhjjklf", model.value().get(0).properties().healthStatus());
        Assertions.assertEquals("mouwqlgzrfzeey", model.value().get(0).properties().protectableObjectType());
        Assertions.assertEquals("izikayuhq", model.value().get(0).etag());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ProtectionContainerResourceList model =
            new ProtectionContainerResourceList()
                .withNextLink("elvezrypq")
                .withValue(
                    Arrays
                        .asList(
                            new ProtectionContainerResourceInner()
                                .withLocation("bjbsybb")
                                .withTags(mapOf("slthaq", "vtldgmfpgvmpip"))
                                .withProperties(
                                    new ProtectionContainer()
                                        .withFriendlyName("bkzbzkd")
                                        .withBackupManagementType(BackupManagementType.DEFAULT_BACKUP)
                                        .withRegistrationStatus("abudurgk")
                                        .withHealthStatus("mokzhjjklf")
                                        .withProtectableObjectType("mouwqlgzrfzeey"))
                                .withEtag("izikayuhq"),
                            new ProtectionContainerResourceInner()
                                .withLocation("cirgzp")
                                .withTags(mapOf("jylwbtlhflsj", "azszrnwoiindfpw", "bgofeljag", "dhszfjv"))
                                .withProperties(
                                    new ProtectionContainer()
                                        .withFriendlyName("i")
                                        .withBackupManagementType(BackupManagementType.DEFAULT_BACKUP)
                                        .withRegistrationStatus("rcgp")
                                        .withHealthStatus("pzimejzanlfzxi")
                                        .withProtectableObjectType("rmbzo"))
                                .withEtag("kixrj"),
                            new ProtectionContainerResourceInner()
                                .withLocation("phoszqz")
                                .withTags(
                                    mapOf(
                                        "ynwcvtbv",
                                        "hqamvdkf",
                                        "pcnp",
                                        "ayhmtnvyqiatkz",
                                        "jguq",
                                        "zcjaesgvvsccy",
                                        "lvdnkfx",
                                        "hwyg"))
                                .withProperties(
                                    new ProtectionContainer()
                                        .withFriendlyName("hhxvrhmzkwpj")
                                        .withBackupManagementType(BackupManagementType.DPM)
                                        .withRegistrationStatus("pughftqsxh")
                                        .withHealthStatus("ujxukndxd")
                                        .withProtectableObjectType("rjguufzdmsyqtf"))
                                .withEtag("whbotzingamv")));
        model = BinaryData.fromObject(model).toObject(ProtectionContainerResourceList.class);
        Assertions.assertEquals("elvezrypq", model.nextLink());
        Assertions.assertEquals("bjbsybb", model.value().get(0).location());
        Assertions.assertEquals("vtldgmfpgvmpip", model.value().get(0).tags().get("slthaq"));
        Assertions.assertEquals("bkzbzkd", model.value().get(0).properties().friendlyName());
        Assertions
            .assertEquals(
                BackupManagementType.DEFAULT_BACKUP, model.value().get(0).properties().backupManagementType());
        Assertions.assertEquals("abudurgk", model.value().get(0).properties().registrationStatus());
        Assertions.assertEquals("mokzhjjklf", model.value().get(0).properties().healthStatus());
        Assertions.assertEquals("mouwqlgzrfzeey", model.value().get(0).properties().protectableObjectType());
        Assertions.assertEquals("izikayuhq", model.value().get(0).etag());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
