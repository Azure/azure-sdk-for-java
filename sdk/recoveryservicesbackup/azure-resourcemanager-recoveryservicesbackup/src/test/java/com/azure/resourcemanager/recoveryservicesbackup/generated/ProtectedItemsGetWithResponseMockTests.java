// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.recoveryservicesbackup.RecoveryServicesBackupManager;
import com.azure.resourcemanager.recoveryservicesbackup.models.CreateMode;
import com.azure.resourcemanager.recoveryservicesbackup.models.ProtectedItemResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ProtectedItemsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"protectedItemType\":\"ProtectedItem\",\"backupManagementType\":\"AzureIaasVM\",\"workloadType\":\"AzureSqlDb\",\"containerName\":\"tllh\",\"sourceResourceId\":\"z\",\"policyId\":\"ckze\",\"lastRecoveryPoint\":\"2021-10-08T06:03:39Z\",\"backupSetName\":\"kck\",\"createMode\":\"Invalid\",\"deferredDeleteTimeInUTC\":\"2021-02-04T18:26:06Z\",\"isScheduledForDeferredDelete\":true,\"deferredDeleteTimeRemaining\":\"bjkdtfohf\",\"isDeferredDeleteScheduleUpcoming\":true,\"isRehydrate\":true,\"resourceGuardOperationRequests\":[\"wrsiwdyjqurykc\"],\"isArchiveEnabled\":true,\"policyName\":\"eek\",\"softDeleteRetentionPeriodInDays\":1622822901,\"vaultId\":\"h\"},\"eTag\":\"ddacbcbgydlqidy\",\"location\":\"mhmpty\",\"tags\":{\"qqxvztpbn\":\"kfbn\",\"depld\":\"nqtxjtomalswbnf\",\"f\":\"qjn\",\"vmywhsbrcarycsjj\":\"ygleexa\"},\"id\":\"yvoaqajuvehzp\",\"name\":\"dmkrrb\",\"type\":\"mpfu\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        RecoveryServicesBackupManager manager = RecoveryServicesBackupManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ProtectedItemResource response = manager.protectedItems()
            .getWithResponse("solronqqlm", "nlqxsjxtele", "hvuqbo", "oolzqocarkuzl", "cnn", "t",
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("mhmpty", response.location());
        Assertions.assertEquals("kfbn", response.tags().get("qqxvztpbn"));
        Assertions.assertEquals("tllh", response.properties().containerName());
        Assertions.assertEquals("z", response.properties().sourceResourceId());
        Assertions.assertEquals("ckze", response.properties().policyId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-08T06:03:39Z"),
            response.properties().lastRecoveryPoint());
        Assertions.assertEquals("kck", response.properties().backupSetName());
        Assertions.assertEquals(CreateMode.INVALID, response.properties().createMode());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-04T18:26:06Z"),
            response.properties().deferredDeleteTimeInUtc());
        Assertions.assertEquals(true, response.properties().isScheduledForDeferredDelete());
        Assertions.assertEquals("bjkdtfohf", response.properties().deferredDeleteTimeRemaining());
        Assertions.assertEquals(true, response.properties().isDeferredDeleteScheduleUpcoming());
        Assertions.assertEquals(true, response.properties().isRehydrate());
        Assertions.assertEquals("wrsiwdyjqurykc", response.properties().resourceGuardOperationRequests().get(0));
        Assertions.assertEquals(true, response.properties().isArchiveEnabled());
        Assertions.assertEquals("eek", response.properties().policyName());
        Assertions.assertEquals(1622822901, response.properties().softDeleteRetentionPeriod());
        Assertions.assertEquals("ddacbcbgydlqidy", response.etag());
    }
}
