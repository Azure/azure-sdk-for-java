// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.AzureFileShareProtectableItem;
import com.azure.resourcemanager.recoveryservicesbackup.models.AzureFileShareType;
import com.azure.resourcemanager.recoveryservicesbackup.models.ProtectionStatus;
import org.junit.jupiter.api.Assertions;

public final class AzureFileShareProtectableItemTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureFileShareProtectableItem model = BinaryData.fromString(
            "{\"protectableItemType\":\"AzureFileShare\",\"parentContainerFabricId\":\"srlzknmzlan\",\"parentContainerFriendlyName\":\"pdwvnphcn\",\"azureFileShareType\":\"Invalid\",\"backupManagementType\":\"jhmqrhvthla\",\"workloadType\":\"dcxsmlz\",\"friendlyName\":\"zdtxetlgyd\",\"protectionState\":\"Protected\"}")
            .toObject(AzureFileShareProtectableItem.class);
        Assertions.assertEquals("jhmqrhvthla", model.backupManagementType());
        Assertions.assertEquals("dcxsmlz", model.workloadType());
        Assertions.assertEquals("zdtxetlgyd", model.friendlyName());
        Assertions.assertEquals(ProtectionStatus.PROTECTED, model.protectionState());
        Assertions.assertEquals("srlzknmzlan", model.parentContainerFabricId());
        Assertions.assertEquals("pdwvnphcn", model.parentContainerFriendlyName());
        Assertions.assertEquals(AzureFileShareType.INVALID, model.azureFileShareType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureFileShareProtectableItem model
            = new AzureFileShareProtectableItem().withBackupManagementType("jhmqrhvthla")
                .withWorkloadType("dcxsmlz")
                .withFriendlyName("zdtxetlgyd")
                .withProtectionState(ProtectionStatus.PROTECTED)
                .withParentContainerFabricId("srlzknmzlan")
                .withParentContainerFriendlyName("pdwvnphcn")
                .withAzureFileShareType(AzureFileShareType.INVALID);
        model = BinaryData.fromObject(model).toObject(AzureFileShareProtectableItem.class);
        Assertions.assertEquals("jhmqrhvthla", model.backupManagementType());
        Assertions.assertEquals("dcxsmlz", model.workloadType());
        Assertions.assertEquals("zdtxetlgyd", model.friendlyName());
        Assertions.assertEquals(ProtectionStatus.PROTECTED, model.protectionState());
        Assertions.assertEquals("srlzknmzlan", model.parentContainerFabricId());
        Assertions.assertEquals("pdwvnphcn", model.parentContainerFriendlyName());
        Assertions.assertEquals(AzureFileShareType.INVALID, model.azureFileShareType());
    }
}
