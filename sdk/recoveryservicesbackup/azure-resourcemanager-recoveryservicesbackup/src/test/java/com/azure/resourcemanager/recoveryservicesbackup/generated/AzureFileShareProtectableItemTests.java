// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.AzureFileShareProtectableItem;
import com.azure.resourcemanager.recoveryservicesbackup.models.AzureFileShareType;
import com.azure.resourcemanager.recoveryservicesbackup.models.ProtectionStatus;
import org.junit.jupiter.api.Assertions;

public final class AzureFileShareProtectableItemTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureFileShareProtectableItem model =
            BinaryData
                .fromString(
                    "{\"protectableItemType\":\"AzureFileShare\",\"parentContainerFabricId\":\"vbopfppdbwnu\",\"parentContainerFriendlyName\":\"ahxku\",\"azureFileShareType\":\"XSync\",\"backupManagementType\":\"caac\",\"workloadType\":\"mmcpug\",\"friendlyName\":\"hqepvufhbzehewh\",\"protectionState\":\"Protected\"}")
                .toObject(AzureFileShareProtectableItem.class);
        Assertions.assertEquals("caac", model.backupManagementType());
        Assertions.assertEquals("mmcpug", model.workloadType());
        Assertions.assertEquals("hqepvufhbzehewh", model.friendlyName());
        Assertions.assertEquals(ProtectionStatus.PROTECTED, model.protectionState());
        Assertions.assertEquals("vbopfppdbwnu", model.parentContainerFabricId());
        Assertions.assertEquals("ahxku", model.parentContainerFriendlyName());
        Assertions.assertEquals(AzureFileShareType.XSYNC, model.azureFileShareType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureFileShareProtectableItem model =
            new AzureFileShareProtectableItem()
                .withBackupManagementType("caac")
                .withWorkloadType("mmcpug")
                .withFriendlyName("hqepvufhbzehewh")
                .withProtectionState(ProtectionStatus.PROTECTED)
                .withParentContainerFabricId("vbopfppdbwnu")
                .withParentContainerFriendlyName("ahxku")
                .withAzureFileShareType(AzureFileShareType.XSYNC);
        model = BinaryData.fromObject(model).toObject(AzureFileShareProtectableItem.class);
        Assertions.assertEquals("caac", model.backupManagementType());
        Assertions.assertEquals("mmcpug", model.workloadType());
        Assertions.assertEquals("hqepvufhbzehewh", model.friendlyName());
        Assertions.assertEquals(ProtectionStatus.PROTECTED, model.protectionState());
        Assertions.assertEquals("vbopfppdbwnu", model.parentContainerFabricId());
        Assertions.assertEquals("ahxku", model.parentContainerFriendlyName());
        Assertions.assertEquals(AzureFileShareType.XSYNC, model.azureFileShareType());
    }
}
