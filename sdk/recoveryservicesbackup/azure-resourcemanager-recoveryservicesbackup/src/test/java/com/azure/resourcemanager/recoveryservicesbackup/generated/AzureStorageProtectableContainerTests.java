// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.AzureStorageProtectableContainer;
import com.azure.resourcemanager.recoveryservicesbackup.models.BackupManagementType;
import org.junit.jupiter.api.Assertions;

public final class AzureStorageProtectableContainerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureStorageProtectableContainer model = BinaryData.fromString(
            "{\"protectableContainerType\":\"StorageContainer\",\"friendlyName\":\"ybxc\",\"backupManagementType\":\"Invalid\",\"healthStatus\":\"cptsoqfyiase\",\"containerId\":\"hkrttzrazis\"}")
            .toObject(AzureStorageProtectableContainer.class);
        Assertions.assertEquals("ybxc", model.friendlyName());
        Assertions.assertEquals(BackupManagementType.INVALID, model.backupManagementType());
        Assertions.assertEquals("cptsoqfyiase", model.healthStatus());
        Assertions.assertEquals("hkrttzrazis", model.containerId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureStorageProtectableContainer model = new AzureStorageProtectableContainer().withFriendlyName("ybxc")
            .withBackupManagementType(BackupManagementType.INVALID)
            .withHealthStatus("cptsoqfyiase")
            .withContainerId("hkrttzrazis");
        model = BinaryData.fromObject(model).toObject(AzureStorageProtectableContainer.class);
        Assertions.assertEquals("ybxc", model.friendlyName());
        Assertions.assertEquals(BackupManagementType.INVALID, model.backupManagementType());
        Assertions.assertEquals("cptsoqfyiase", model.healthStatus());
        Assertions.assertEquals("hkrttzrazis", model.containerId());
    }
}
