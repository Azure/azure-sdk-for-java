// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.AzureStorageProtectableContainer;
import com.azure.resourcemanager.recoveryservicesbackup.models.BackupManagementType;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class AzureStorageProtectableContainerTests {
    @Test
    public void testDeserialize() {
        AzureStorageProtectableContainer model =
            BinaryData
                .fromString(
                    "{\"protectableContainerType\":\"StorageContainer\",\"friendlyName\":\"axsipietgb\",\"backupManagementType\":\"AzureSql\",\"healthStatus\":\"ulbmoichdlp\",\"containerId\":\"pubntnbatz\"}")
                .toObject(AzureStorageProtectableContainer.class);
        Assertions.assertEquals("axsipietgb", model.friendlyName());
        Assertions.assertEquals(BackupManagementType.AZURE_SQL, model.backupManagementType());
        Assertions.assertEquals("ulbmoichdlp", model.healthStatus());
        Assertions.assertEquals("pubntnbatz", model.containerId());
    }

    @Test
    public void testSerialize() {
        AzureStorageProtectableContainer model =
            new AzureStorageProtectableContainer()
                .withFriendlyName("axsipietgb")
                .withBackupManagementType(BackupManagementType.AZURE_SQL)
                .withHealthStatus("ulbmoichdlp")
                .withContainerId("pubntnbatz");
        model = BinaryData.fromObject(model).toObject(AzureStorageProtectableContainer.class);
        Assertions.assertEquals("axsipietgb", model.friendlyName());
        Assertions.assertEquals(BackupManagementType.AZURE_SQL, model.backupManagementType());
        Assertions.assertEquals("ulbmoichdlp", model.healthStatus());
        Assertions.assertEquals("pubntnbatz", model.containerId());
    }
}
