// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.AzureStorageProtectableContainer;
import com.azure.resourcemanager.recoveryservicesbackup.models.BackupManagementType;
import org.junit.jupiter.api.Assertions;

public final class AzureStorageProtectableContainerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureStorageProtectableContainer model =
            BinaryData
                .fromString(
                    "{\"protectableContainerType\":\"StorageContainer\",\"friendlyName\":\"igsxcdgljplk\",\"backupManagementType\":\"AzureWorkload\",\"healthStatus\":\"htomflrytswfp\",\"containerId\":\"dgycxnmskwhqjjy\"}")
                .toObject(AzureStorageProtectableContainer.class);
        Assertions.assertEquals("igsxcdgljplk", model.friendlyName());
        Assertions.assertEquals(BackupManagementType.AZURE_WORKLOAD, model.backupManagementType());
        Assertions.assertEquals("htomflrytswfp", model.healthStatus());
        Assertions.assertEquals("dgycxnmskwhqjjy", model.containerId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureStorageProtectableContainer model =
            new AzureStorageProtectableContainer()
                .withFriendlyName("igsxcdgljplk")
                .withBackupManagementType(BackupManagementType.AZURE_WORKLOAD)
                .withHealthStatus("htomflrytswfp")
                .withContainerId("dgycxnmskwhqjjy");
        model = BinaryData.fromObject(model).toObject(AzureStorageProtectableContainer.class);
        Assertions.assertEquals("igsxcdgljplk", model.friendlyName());
        Assertions.assertEquals(BackupManagementType.AZURE_WORKLOAD, model.backupManagementType());
        Assertions.assertEquals("htomflrytswfp", model.healthStatus());
        Assertions.assertEquals("dgycxnmskwhqjjy", model.containerId());
    }
}
