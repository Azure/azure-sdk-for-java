// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.AzureSqlContainer;
import com.azure.resourcemanager.recoveryservicesbackup.models.BackupManagementType;
import org.junit.jupiter.api.Assertions;

public final class AzureSqlContainerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureSqlContainer model = BinaryData.fromString(
            "{\"containerType\":\"AzureSqlContainer\",\"friendlyName\":\"mcub\",\"backupManagementType\":\"AzureSql\",\"registrationStatus\":\"oxxkubvp\",\"healthStatus\":\"v\",\"protectableObjectType\":\"h\"}")
            .toObject(AzureSqlContainer.class);
        Assertions.assertEquals("mcub", model.friendlyName());
        Assertions.assertEquals(BackupManagementType.AZURE_SQL, model.backupManagementType());
        Assertions.assertEquals("oxxkubvp", model.registrationStatus());
        Assertions.assertEquals("v", model.healthStatus());
        Assertions.assertEquals("h", model.protectableObjectType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureSqlContainer model = new AzureSqlContainer().withFriendlyName("mcub")
            .withBackupManagementType(BackupManagementType.AZURE_SQL)
            .withRegistrationStatus("oxxkubvp")
            .withHealthStatus("v")
            .withProtectableObjectType("h");
        model = BinaryData.fromObject(model).toObject(AzureSqlContainer.class);
        Assertions.assertEquals("mcub", model.friendlyName());
        Assertions.assertEquals(BackupManagementType.AZURE_SQL, model.backupManagementType());
        Assertions.assertEquals("oxxkubvp", model.registrationStatus());
        Assertions.assertEquals("v", model.healthStatus());
        Assertions.assertEquals("h", model.protectableObjectType());
    }
}
