// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.AzureWorkloadContainerAutoProtectionIntent;
import com.azure.resourcemanager.recoveryservicesbackup.models.BackupManagementType;
import com.azure.resourcemanager.recoveryservicesbackup.models.ProtectionStatus;
import org.junit.jupiter.api.Assertions;

public final class AzureWorkloadContainerAutoProtectionIntentTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureWorkloadContainerAutoProtectionIntent model = BinaryData.fromString(
            "{\"protectionIntentItemType\":\"AzureWorkloadContainerAutoProtectionIntent\",\"backupManagementType\":\"MAB\",\"sourceResourceId\":\"zkgofxyf\",\"itemId\":\"uc\",\"policyId\":\"rrp\",\"protectionState\":\"Protecting\"}")
            .toObject(AzureWorkloadContainerAutoProtectionIntent.class);
        Assertions.assertEquals(BackupManagementType.MAB, model.backupManagementType());
        Assertions.assertEquals("zkgofxyf", model.sourceResourceId());
        Assertions.assertEquals("uc", model.itemId());
        Assertions.assertEquals("rrp", model.policyId());
        Assertions.assertEquals(ProtectionStatus.PROTECTING, model.protectionState());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureWorkloadContainerAutoProtectionIntent model = new AzureWorkloadContainerAutoProtectionIntent()
            .withBackupManagementType(BackupManagementType.MAB).withSourceResourceId("zkgofxyf").withItemId("uc")
            .withPolicyId("rrp").withProtectionState(ProtectionStatus.PROTECTING);
        model = BinaryData.fromObject(model).toObject(AzureWorkloadContainerAutoProtectionIntent.class);
        Assertions.assertEquals(BackupManagementType.MAB, model.backupManagementType());
        Assertions.assertEquals("zkgofxyf", model.sourceResourceId());
        Assertions.assertEquals("uc", model.itemId());
        Assertions.assertEquals("rrp", model.policyId());
        Assertions.assertEquals(ProtectionStatus.PROTECTING, model.protectionState());
    }
}
