// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.recoveryservicesbackup.RecoveryServicesBackupManager;
import com.azure.resourcemanager.recoveryservicesbackup.models.RecoveryPointResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RecoveryPointsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"objectType\":\"RecoveryPoint\"},\"eTag\":\"ttmbqdabzfiv\",\"location\":\"okpysthhzagj\",\"tags\":{\"g\":\"yrl\",\"qszllrz\":\"nuzejgvkveb\",\"gmihzpimcqr\":\"smmd\"},\"id\":\"nxtminklog\",\"name\":\"svtzarhzv\",\"type\":\"nsqktc\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        RecoveryServicesBackupManager manager = RecoveryServicesBackupManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<RecoveryPointResource> response = manager.recoveryPoints()
            .list("vzilmhiv", "kwwwnckn", "zdajlskzptjxu", "weucyrth", "qlehmcgcjeinu", "hokamvfej",
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("okpysthhzagj", response.iterator().next().location());
        Assertions.assertEquals("yrl", response.iterator().next().tags().get("g"));
        Assertions.assertEquals("ttmbqdabzfiv", response.iterator().next().etag());
    }
}
