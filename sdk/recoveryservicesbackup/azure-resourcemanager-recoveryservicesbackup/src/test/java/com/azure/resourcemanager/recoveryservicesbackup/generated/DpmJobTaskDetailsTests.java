// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.DpmJobTaskDetails;
import java.time.Duration;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class DpmJobTaskDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DpmJobTaskDetails model = BinaryData.fromString(
            "{\"taskId\":\"ctbrxkjzwrgxffm\",\"startTime\":\"2021-08-27T19:17:59Z\",\"endTime\":\"2021-08-28T12:30:32Z\",\"duration\":\"PT140H50M53S\",\"status\":\"ozxwopd\"}")
            .toObject(DpmJobTaskDetails.class);
        Assertions.assertEquals("ctbrxkjzwrgxffm", model.taskId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-27T19:17:59Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-28T12:30:32Z"), model.endTime());
        Assertions.assertEquals(Duration.parse("PT140H50M53S"), model.duration());
        Assertions.assertEquals("ozxwopd", model.status());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DpmJobTaskDetails model = new DpmJobTaskDetails().withTaskId("ctbrxkjzwrgxffm")
            .withStartTime(OffsetDateTime.parse("2021-08-27T19:17:59Z"))
            .withEndTime(OffsetDateTime.parse("2021-08-28T12:30:32Z"))
            .withDuration(Duration.parse("PT140H50M53S"))
            .withStatus("ozxwopd");
        model = BinaryData.fromObject(model).toObject(DpmJobTaskDetails.class);
        Assertions.assertEquals("ctbrxkjzwrgxffm", model.taskId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-27T19:17:59Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-28T12:30:32Z"), model.endTime());
        Assertions.assertEquals(Duration.parse("PT140H50M53S"), model.duration());
        Assertions.assertEquals("ozxwopd", model.status());
    }
}
