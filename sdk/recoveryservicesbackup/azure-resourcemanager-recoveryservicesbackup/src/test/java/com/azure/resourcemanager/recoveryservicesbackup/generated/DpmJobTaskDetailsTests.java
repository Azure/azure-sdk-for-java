// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.DpmJobTaskDetails;
import java.time.Duration;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class DpmJobTaskDetailsTests {
    @Test
    public void testDeserialize() {
        DpmJobTaskDetails model =
            BinaryData
                .fromString(
                    "{\"taskId\":\"lhslnelxieixyn\",\"startTime\":\"2021-05-18T07:09:15Z\",\"endTime\":\"2021-03-23T01:16:36Z\",\"duration\":\"PT96H12M52S\",\"status\":\"ojphslhc\"}")
                .toObject(DpmJobTaskDetails.class);
        Assertions.assertEquals("lhslnelxieixyn", model.taskId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-18T07:09:15Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-23T01:16:36Z"), model.endTime());
        Assertions.assertEquals(Duration.parse("PT96H12M52S"), model.duration());
        Assertions.assertEquals("ojphslhc", model.status());
    }

    @Test
    public void testSerialize() {
        DpmJobTaskDetails model =
            new DpmJobTaskDetails()
                .withTaskId("lhslnelxieixyn")
                .withStartTime(OffsetDateTime.parse("2021-05-18T07:09:15Z"))
                .withEndTime(OffsetDateTime.parse("2021-03-23T01:16:36Z"))
                .withDuration(Duration.parse("PT96H12M52S"))
                .withStatus("ojphslhc");
        model = BinaryData.fromObject(model).toObject(DpmJobTaskDetails.class);
        Assertions.assertEquals("lhslnelxieixyn", model.taskId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-18T07:09:15Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-23T01:16:36Z"), model.endTime());
        Assertions.assertEquals(Duration.parse("PT96H12M52S"), model.duration());
        Assertions.assertEquals("ojphslhc", model.status());
    }
}
