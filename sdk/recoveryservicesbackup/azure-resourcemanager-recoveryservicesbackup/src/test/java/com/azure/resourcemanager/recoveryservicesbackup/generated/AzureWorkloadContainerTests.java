// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.AzureWorkloadContainer;
import com.azure.resourcemanager.recoveryservicesbackup.models.AzureWorkloadContainerExtendedInfo;
import com.azure.resourcemanager.recoveryservicesbackup.models.BackupManagementType;
import com.azure.resourcemanager.recoveryservicesbackup.models.DistributedNodesInfo;
import com.azure.resourcemanager.recoveryservicesbackup.models.InquiryInfo;
import com.azure.resourcemanager.recoveryservicesbackup.models.OperationType;
import com.azure.resourcemanager.recoveryservicesbackup.models.WorkloadType;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class AzureWorkloadContainerTests {
    @Test
    public void testDeserialize() {
        AzureWorkloadContainer model =
            BinaryData
                .fromString(
                    "{\"containerType\":\"AzureWorkloadContainer\",\"sourceResourceId\":\"bwnupgahxkumas\",\"lastUpdatedTime\":\"2021-05-10T22:23:02Z\",\"extendedInfo\":{\"hostServerName\":\"fdmmcpug\",\"inquiryInfo\":{\"status\":\"qepvufhbzeh\",\"inquiryDetails\":[]},\"nodesList\":[{\"nodeName\":\"lbqnbldxeacl\",\"status\":\"chorimkrsr\"}]},\"workloadType\":\"AzureFileShare\",\"operationType\":\"Reregister\",\"friendlyName\":\"fldpuviyfc\",\"backupManagementType\":\"AzureStorage\",\"registrationStatus\":\"olhbhlvb\",\"healthStatus\":\"uqibsxtkcu\",\"protectableObjectType\":\"b\"}")
                .toObject(AzureWorkloadContainer.class);
        Assertions.assertEquals("fldpuviyfc", model.friendlyName());
        Assertions.assertEquals(BackupManagementType.AZURE_STORAGE, model.backupManagementType());
        Assertions.assertEquals("olhbhlvb", model.registrationStatus());
        Assertions.assertEquals("uqibsxtkcu", model.healthStatus());
        Assertions.assertEquals("b", model.protectableObjectType());
        Assertions.assertEquals("bwnupgahxkumas", model.sourceResourceId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-10T22:23:02Z"), model.lastUpdatedTime());
        Assertions.assertEquals("fdmmcpug", model.extendedInfo().hostServerName());
        Assertions.assertEquals("qepvufhbzeh", model.extendedInfo().inquiryInfo().status());
        Assertions.assertEquals("lbqnbldxeacl", model.extendedInfo().nodesList().get(0).nodeName());
        Assertions.assertEquals("chorimkrsr", model.extendedInfo().nodesList().get(0).status());
        Assertions.assertEquals(WorkloadType.AZURE_FILE_SHARE, model.workloadType());
        Assertions.assertEquals(OperationType.REREGISTER, model.operationType());
    }

    @Test
    public void testSerialize() {
        AzureWorkloadContainer model =
            new AzureWorkloadContainer()
                .withFriendlyName("fldpuviyfc")
                .withBackupManagementType(BackupManagementType.AZURE_STORAGE)
                .withRegistrationStatus("olhbhlvb")
                .withHealthStatus("uqibsxtkcu")
                .withProtectableObjectType("b")
                .withSourceResourceId("bwnupgahxkumas")
                .withLastUpdatedTime(OffsetDateTime.parse("2021-05-10T22:23:02Z"))
                .withExtendedInfo(
                    new AzureWorkloadContainerExtendedInfo()
                        .withHostServerName("fdmmcpug")
                        .withInquiryInfo(
                            new InquiryInfo().withStatus("qepvufhbzeh").withInquiryDetails(Arrays.asList()))
                        .withNodesList(
                            Arrays
                                .asList(
                                    new DistributedNodesInfo().withNodeName("lbqnbldxeacl").withStatus("chorimkrsr"))))
                .withWorkloadType(WorkloadType.AZURE_FILE_SHARE)
                .withOperationType(OperationType.REREGISTER);
        model = BinaryData.fromObject(model).toObject(AzureWorkloadContainer.class);
        Assertions.assertEquals("fldpuviyfc", model.friendlyName());
        Assertions.assertEquals(BackupManagementType.AZURE_STORAGE, model.backupManagementType());
        Assertions.assertEquals("olhbhlvb", model.registrationStatus());
        Assertions.assertEquals("uqibsxtkcu", model.healthStatus());
        Assertions.assertEquals("b", model.protectableObjectType());
        Assertions.assertEquals("bwnupgahxkumas", model.sourceResourceId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-10T22:23:02Z"), model.lastUpdatedTime());
        Assertions.assertEquals("fdmmcpug", model.extendedInfo().hostServerName());
        Assertions.assertEquals("qepvufhbzeh", model.extendedInfo().inquiryInfo().status());
        Assertions.assertEquals("lbqnbldxeacl", model.extendedInfo().nodesList().get(0).nodeName());
        Assertions.assertEquals("chorimkrsr", model.extendedInfo().nodesList().get(0).status());
        Assertions.assertEquals(WorkloadType.AZURE_FILE_SHARE, model.workloadType());
        Assertions.assertEquals(OperationType.REREGISTER, model.operationType());
    }
}
