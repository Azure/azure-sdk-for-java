// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.BackupManagementType;
import com.azure.resourcemanager.recoveryservicesbackup.models.DpmContainer;
import com.azure.resourcemanager.recoveryservicesbackup.models.DpmContainerExtendedInfo;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DpmContainerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DpmContainer model = BinaryData.fromString(
            "{\"containerType\":\"DPMContainer\",\"canReRegister\":true,\"containerId\":\"jqo\",\"protectedItemCount\":7574679234591637663,\"dpmAgentVersion\":\"ehcecyb\",\"dpmServers\":[\"brjbbmpxdlvy\"],\"upgradeAvailable\":true,\"protectionStatus\":\"xcrseqwjksgh\",\"extendedInfo\":{\"lastRefreshedAt\":\"2021-01-02T16:20Z\"},\"friendlyName\":\"xog\",\"backupManagementType\":\"AzureIaasVM\",\"registrationStatus\":\"voujkxibdafhrk\",\"healthStatus\":\"yomkxfbvfbhdy\",\"protectableObjectType\":\"hpwpgddeimawzovg\"}")
            .toObject(DpmContainer.class);
        Assertions.assertEquals("xog", model.friendlyName());
        Assertions.assertEquals(BackupManagementType.AZURE_IAAS_VM, model.backupManagementType());
        Assertions.assertEquals("voujkxibdafhrk", model.registrationStatus());
        Assertions.assertEquals("yomkxfbvfbhdy", model.healthStatus());
        Assertions.assertEquals("hpwpgddeimawzovg", model.protectableObjectType());
        Assertions.assertEquals(true, model.canReRegister());
        Assertions.assertEquals("jqo", model.containerId());
        Assertions.assertEquals(7574679234591637663L, model.protectedItemCount());
        Assertions.assertEquals("ehcecyb", model.dpmAgentVersion());
        Assertions.assertEquals("brjbbmpxdlvy", model.dpmServers().get(0));
        Assertions.assertEquals(true, model.upgradeAvailable());
        Assertions.assertEquals("xcrseqwjksgh", model.protectionStatus());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-02T16:20Z"), model.extendedInfo().lastRefreshedAt());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DpmContainer model = new DpmContainer().withFriendlyName("xog")
            .withBackupManagementType(BackupManagementType.AZURE_IAAS_VM)
            .withRegistrationStatus("voujkxibdafhrk")
            .withHealthStatus("yomkxfbvfbhdy")
            .withProtectableObjectType("hpwpgddeimawzovg")
            .withCanReRegister(true)
            .withContainerId("jqo")
            .withProtectedItemCount(7574679234591637663L)
            .withDpmAgentVersion("ehcecyb")
            .withDpmServers(Arrays.asList("brjbbmpxdlvy"))
            .withUpgradeAvailable(true)
            .withProtectionStatus("xcrseqwjksgh")
            .withExtendedInfo(
                new DpmContainerExtendedInfo().withLastRefreshedAt(OffsetDateTime.parse("2021-01-02T16:20Z")));
        model = BinaryData.fromObject(model).toObject(DpmContainer.class);
        Assertions.assertEquals("xog", model.friendlyName());
        Assertions.assertEquals(BackupManagementType.AZURE_IAAS_VM, model.backupManagementType());
        Assertions.assertEquals("voujkxibdafhrk", model.registrationStatus());
        Assertions.assertEquals("yomkxfbvfbhdy", model.healthStatus());
        Assertions.assertEquals("hpwpgddeimawzovg", model.protectableObjectType());
        Assertions.assertEquals(true, model.canReRegister());
        Assertions.assertEquals("jqo", model.containerId());
        Assertions.assertEquals(7574679234591637663L, model.protectedItemCount());
        Assertions.assertEquals("ehcecyb", model.dpmAgentVersion());
        Assertions.assertEquals("brjbbmpxdlvy", model.dpmServers().get(0));
        Assertions.assertEquals(true, model.upgradeAvailable());
        Assertions.assertEquals("xcrseqwjksgh", model.protectionStatus());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-02T16:20Z"), model.extendedInfo().lastRefreshedAt());
    }
}
