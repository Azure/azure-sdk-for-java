// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.BackupManagementType;
import com.azure.resourcemanager.recoveryservicesbackup.models.DpmContainer;
import com.azure.resourcemanager.recoveryservicesbackup.models.DpmContainerExtendedInfo;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DpmContainerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DpmContainer model =
            BinaryData
                .fromString(
                    "{\"containerType\":\"DPMContainer\",\"canReRegister\":true,\"containerId\":\"xxdtddmflh\",\"protectedItemCount\":1437567423003919586,\"dpmAgentVersion\":\"vtzn\",\"dpmServers\":[\"bannovvoxczytp\",\"wnwvroevytlyokr\",\"rouuxvnsasbcry\"],\"upgradeAvailable\":false,\"protectionStatus\":\"zrxklobd\",\"extendedInfo\":{\"lastRefreshedAt\":\"2021-09-29T05:13:20Z\"},\"friendlyName\":\"mkmlmvevfx\",\"backupManagementType\":\"AzureIaasVM\",\"registrationStatus\":\"hbzxli\",\"healthStatus\":\"rdddtfgxqbawpcb\",\"protectableObjectType\":\"zqcyknap\"}")
                .toObject(DpmContainer.class);
        Assertions.assertEquals("mkmlmvevfx", model.friendlyName());
        Assertions.assertEquals(BackupManagementType.AZURE_IAAS_VM, model.backupManagementType());
        Assertions.assertEquals("hbzxli", model.registrationStatus());
        Assertions.assertEquals("rdddtfgxqbawpcb", model.healthStatus());
        Assertions.assertEquals("zqcyknap", model.protectableObjectType());
        Assertions.assertEquals(true, model.canReRegister());
        Assertions.assertEquals("xxdtddmflh", model.containerId());
        Assertions.assertEquals(1437567423003919586L, model.protectedItemCount());
        Assertions.assertEquals("vtzn", model.dpmAgentVersion());
        Assertions.assertEquals("bannovvoxczytp", model.dpmServers().get(0));
        Assertions.assertEquals(false, model.upgradeAvailable());
        Assertions.assertEquals("zrxklobd", model.protectionStatus());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-29T05:13:20Z"), model.extendedInfo().lastRefreshedAt());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DpmContainer model =
            new DpmContainer()
                .withFriendlyName("mkmlmvevfx")
                .withBackupManagementType(BackupManagementType.AZURE_IAAS_VM)
                .withRegistrationStatus("hbzxli")
                .withHealthStatus("rdddtfgxqbawpcb")
                .withProtectableObjectType("zqcyknap")
                .withCanReRegister(true)
                .withContainerId("xxdtddmflh")
                .withProtectedItemCount(1437567423003919586L)
                .withDpmAgentVersion("vtzn")
                .withDpmServers(Arrays.asList("bannovvoxczytp", "wnwvroevytlyokr", "rouuxvnsasbcry"))
                .withUpgradeAvailable(false)
                .withProtectionStatus("zrxklobd")
                .withExtendedInfo(
                    new DpmContainerExtendedInfo().withLastRefreshedAt(OffsetDateTime.parse("2021-09-29T05:13:20Z")));
        model = BinaryData.fromObject(model).toObject(DpmContainer.class);
        Assertions.assertEquals("mkmlmvevfx", model.friendlyName());
        Assertions.assertEquals(BackupManagementType.AZURE_IAAS_VM, model.backupManagementType());
        Assertions.assertEquals("hbzxli", model.registrationStatus());
        Assertions.assertEquals("rdddtfgxqbawpcb", model.healthStatus());
        Assertions.assertEquals("zqcyknap", model.protectableObjectType());
        Assertions.assertEquals(true, model.canReRegister());
        Assertions.assertEquals("xxdtddmflh", model.containerId());
        Assertions.assertEquals(1437567423003919586L, model.protectedItemCount());
        Assertions.assertEquals("vtzn", model.dpmAgentVersion());
        Assertions.assertEquals("bannovvoxczytp", model.dpmServers().get(0));
        Assertions.assertEquals(false, model.upgradeAvailable());
        Assertions.assertEquals("zrxklobd", model.protectionStatus());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-29T05:13:20Z"), model.extendedInfo().lastRefreshedAt());
    }
}
