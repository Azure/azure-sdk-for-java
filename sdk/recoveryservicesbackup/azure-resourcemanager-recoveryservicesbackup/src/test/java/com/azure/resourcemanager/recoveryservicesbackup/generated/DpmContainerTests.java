// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.BackupManagementType;
import com.azure.resourcemanager.recoveryservicesbackup.models.DpmContainer;
import com.azure.resourcemanager.recoveryservicesbackup.models.DpmContainerExtendedInfo;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DpmContainerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DpmContainer model = BinaryData.fromString(
            "{\"containerType\":\"DPMContainer\",\"canReRegister\":false,\"containerId\":\"farfs\",\"protectedItemCount\":5892118954505267156,\"dpmAgentVersion\":\"jxnqp\",\"dpmServers\":[\"fstmhqykizmdksao\"],\"upgradeAvailable\":false,\"protectionStatus\":\"uqvoxmycjimryv\",\"extendedInfo\":{\"lastRefreshedAt\":\"2020-12-28T14:54:10Z\"},\"friendlyName\":\"pbmz\",\"backupManagementType\":\"MAB\",\"registrationStatus\":\"ydsx\",\"healthStatus\":\"fo\",\"protectableObjectType\":\"cbvopwndyqleallk\"}")
            .toObject(DpmContainer.class);
        Assertions.assertEquals("pbmz", model.friendlyName());
        Assertions.assertEquals(BackupManagementType.MAB, model.backupManagementType());
        Assertions.assertEquals("ydsx", model.registrationStatus());
        Assertions.assertEquals("fo", model.healthStatus());
        Assertions.assertEquals("cbvopwndyqleallk", model.protectableObjectType());
        Assertions.assertEquals(false, model.canReRegister());
        Assertions.assertEquals("farfs", model.containerId());
        Assertions.assertEquals(5892118954505267156L, model.protectedItemCount());
        Assertions.assertEquals("jxnqp", model.dpmAgentVersion());
        Assertions.assertEquals("fstmhqykizmdksao", model.dpmServers().get(0));
        Assertions.assertEquals(false, model.upgradeAvailable());
        Assertions.assertEquals("uqvoxmycjimryv", model.protectionStatus());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-28T14:54:10Z"), model.extendedInfo().lastRefreshedAt());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DpmContainer model
            = new DpmContainer().withFriendlyName("pbmz").withBackupManagementType(BackupManagementType.MAB)
                .withRegistrationStatus("ydsx").withHealthStatus("fo").withProtectableObjectType("cbvopwndyqleallk")
                .withCanReRegister(false).withContainerId("farfs").withProtectedItemCount(5892118954505267156L)
                .withDpmAgentVersion("jxnqp").withDpmServers(Arrays.asList("fstmhqykizmdksao"))
                .withUpgradeAvailable(false).withProtectionStatus("uqvoxmycjimryv").withExtendedInfo(
                    new DpmContainerExtendedInfo().withLastRefreshedAt(OffsetDateTime.parse("2020-12-28T14:54:10Z")));
        model = BinaryData.fromObject(model).toObject(DpmContainer.class);
        Assertions.assertEquals("pbmz", model.friendlyName());
        Assertions.assertEquals(BackupManagementType.MAB, model.backupManagementType());
        Assertions.assertEquals("ydsx", model.registrationStatus());
        Assertions.assertEquals("fo", model.healthStatus());
        Assertions.assertEquals("cbvopwndyqleallk", model.protectableObjectType());
        Assertions.assertEquals(false, model.canReRegister());
        Assertions.assertEquals("farfs", model.containerId());
        Assertions.assertEquals(5892118954505267156L, model.protectedItemCount());
        Assertions.assertEquals("jxnqp", model.dpmAgentVersion());
        Assertions.assertEquals("fstmhqykizmdksao", model.dpmServers().get(0));
        Assertions.assertEquals(false, model.upgradeAvailable());
        Assertions.assertEquals("uqvoxmycjimryv", model.protectionStatus());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-28T14:54:10Z"), model.extendedInfo().lastRefreshedAt());
    }
}
