// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.BackupManagementType;
import com.azure.resourcemanager.recoveryservicesbackup.models.DpmContainer;
import com.azure.resourcemanager.recoveryservicesbackup.models.DpmContainerExtendedInfo;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class DpmContainerTests {
    @Test
    public void testDeserialize() {
        DpmContainer model =
            BinaryData
                .fromString(
                    "{\"containerType\":\"DPMContainer\",\"canReRegister\":true,\"containerId\":\"qy\",\"protectedItemCount\":5067731603385218000,\"dpmAgentVersion\":\"u\",\"dpmServers\":[\"dfzantkwcegy\",\"mlbnseq\",\"cjjvpilguooqja\"],\"upgradeAvailable\":false,\"protectionStatus\":\"tg\",\"extendedInfo\":{\"lastRefreshedAt\":\"2021-02-16T00:43:52Z\"},\"friendlyName\":\"kjbsah\",\"backupManagementType\":\"AzureBackupServer\",\"registrationStatus\":\"pdelqa\",\"healthStatus\":\"lmotoebnfxofvcj\",\"protectableObjectType\":\"dirazf\"}")
                .toObject(DpmContainer.class);
        Assertions.assertEquals("kjbsah", model.friendlyName());
        Assertions.assertEquals(BackupManagementType.AZURE_BACKUP_SERVER, model.backupManagementType());
        Assertions.assertEquals("pdelqa", model.registrationStatus());
        Assertions.assertEquals("lmotoebnfxofvcj", model.healthStatus());
        Assertions.assertEquals("dirazf", model.protectableObjectType());
        Assertions.assertEquals(true, model.canReRegister());
        Assertions.assertEquals("qy", model.containerId());
        Assertions.assertEquals(5067731603385218000L, model.protectedItemCount());
        Assertions.assertEquals("u", model.dpmAgentVersion());
        Assertions.assertEquals("dfzantkwcegy", model.dpmServers().get(0));
        Assertions.assertEquals(false, model.upgradeAvailable());
        Assertions.assertEquals("tg", model.protectionStatus());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-16T00:43:52Z"), model.extendedInfo().lastRefreshedAt());
    }

    @Test
    public void testSerialize() {
        DpmContainer model =
            new DpmContainer()
                .withFriendlyName("kjbsah")
                .withBackupManagementType(BackupManagementType.AZURE_BACKUP_SERVER)
                .withRegistrationStatus("pdelqa")
                .withHealthStatus("lmotoebnfxofvcj")
                .withProtectableObjectType("dirazf")
                .withCanReRegister(true)
                .withContainerId("qy")
                .withProtectedItemCount(5067731603385218000L)
                .withDpmAgentVersion("u")
                .withDpmServers(Arrays.asList("dfzantkwcegy", "mlbnseq", "cjjvpilguooqja"))
                .withUpgradeAvailable(false)
                .withProtectionStatus("tg")
                .withExtendedInfo(
                    new DpmContainerExtendedInfo().withLastRefreshedAt(OffsetDateTime.parse("2021-02-16T00:43:52Z")));
        model = BinaryData.fromObject(model).toObject(DpmContainer.class);
        Assertions.assertEquals("kjbsah", model.friendlyName());
        Assertions.assertEquals(BackupManagementType.AZURE_BACKUP_SERVER, model.backupManagementType());
        Assertions.assertEquals("pdelqa", model.registrationStatus());
        Assertions.assertEquals("lmotoebnfxofvcj", model.healthStatus());
        Assertions.assertEquals("dirazf", model.protectableObjectType());
        Assertions.assertEquals(true, model.canReRegister());
        Assertions.assertEquals("qy", model.containerId());
        Assertions.assertEquals(5067731603385218000L, model.protectedItemCount());
        Assertions.assertEquals("u", model.dpmAgentVersion());
        Assertions.assertEquals("dfzantkwcegy", model.dpmServers().get(0));
        Assertions.assertEquals(false, model.upgradeAvailable());
        Assertions.assertEquals("tg", model.protectionStatus());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-16T00:43:52Z"), model.extendedInfo().lastRefreshedAt());
    }
}
