// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.AzureSqlagWorkloadContainerProtectionContainer;
import com.azure.resourcemanager.recoveryservicesbackup.models.AzureWorkloadContainerExtendedInfo;
import com.azure.resourcemanager.recoveryservicesbackup.models.BackupManagementType;
import com.azure.resourcemanager.recoveryservicesbackup.models.DistributedNodesInfo;
import com.azure.resourcemanager.recoveryservicesbackup.models.InquiryInfo;
import com.azure.resourcemanager.recoveryservicesbackup.models.OperationType;
import com.azure.resourcemanager.recoveryservicesbackup.models.WorkloadType;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class AzureSqlagWorkloadContainerProtectionContainerTests {
    @Test
    public void testDeserialize() {
        AzureSqlagWorkloadContainerProtectionContainer model =
            BinaryData
                .fromString(
                    "{\"containerType\":\"SQLAGWorkLoadContainer\",\"sourceResourceId\":\"cbb\",\"lastUpdatedTime\":\"2021-06-19T13:37:47Z\",\"extendedInfo\":{\"hostServerName\":\"knapq\",\"inquiryInfo\":{\"status\":\"uicdhzbdybwwg\",\"inquiryDetails\":[]},\"nodesList\":[{\"nodeName\":\"mhmwffpl\",\"status\":\"u\"},{\"nodeName\":\"ck\",\"status\":\"rrvwey\"}]},\"workloadType\":\"GenericDataSource\",\"operationType\":\"Register\",\"friendlyName\":\"phaimmoi\",\"backupManagementType\":\"Invalid\",\"registrationStatus\":\"oshbragapyy\",\"healthStatus\":\"fsv\",\"protectableObjectType\":\"avbopfp\"}")
                .toObject(AzureSqlagWorkloadContainerProtectionContainer.class);
        Assertions.assertEquals("phaimmoi", model.friendlyName());
        Assertions.assertEquals(BackupManagementType.INVALID, model.backupManagementType());
        Assertions.assertEquals("oshbragapyy", model.registrationStatus());
        Assertions.assertEquals("fsv", model.healthStatus());
        Assertions.assertEquals("avbopfp", model.protectableObjectType());
        Assertions.assertEquals("cbb", model.sourceResourceId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-19T13:37:47Z"), model.lastUpdatedTime());
        Assertions.assertEquals("knapq", model.extendedInfo().hostServerName());
        Assertions.assertEquals("uicdhzbdybwwg", model.extendedInfo().inquiryInfo().status());
        Assertions.assertEquals("mhmwffpl", model.extendedInfo().nodesList().get(0).nodeName());
        Assertions.assertEquals("u", model.extendedInfo().nodesList().get(0).status());
        Assertions.assertEquals(WorkloadType.GENERIC_DATA_SOURCE, model.workloadType());
        Assertions.assertEquals(OperationType.REGISTER, model.operationType());
    }

    @Test
    public void testSerialize() {
        AzureSqlagWorkloadContainerProtectionContainer model =
            new AzureSqlagWorkloadContainerProtectionContainer()
                .withFriendlyName("phaimmoi")
                .withBackupManagementType(BackupManagementType.INVALID)
                .withRegistrationStatus("oshbragapyy")
                .withHealthStatus("fsv")
                .withProtectableObjectType("avbopfp")
                .withSourceResourceId("cbb")
                .withLastUpdatedTime(OffsetDateTime.parse("2021-06-19T13:37:47Z"))
                .withExtendedInfo(
                    new AzureWorkloadContainerExtendedInfo()
                        .withHostServerName("knapq")
                        .withInquiryInfo(
                            new InquiryInfo().withStatus("uicdhzbdybwwg").withInquiryDetails(Arrays.asList()))
                        .withNodesList(
                            Arrays
                                .asList(
                                    new DistributedNodesInfo().withNodeName("mhmwffpl").withStatus("u"),
                                    new DistributedNodesInfo().withNodeName("ck").withStatus("rrvwey"))))
                .withWorkloadType(WorkloadType.GENERIC_DATA_SOURCE)
                .withOperationType(OperationType.REGISTER);
        model = BinaryData.fromObject(model).toObject(AzureSqlagWorkloadContainerProtectionContainer.class);
        Assertions.assertEquals("phaimmoi", model.friendlyName());
        Assertions.assertEquals(BackupManagementType.INVALID, model.backupManagementType());
        Assertions.assertEquals("oshbragapyy", model.registrationStatus());
        Assertions.assertEquals("fsv", model.healthStatus());
        Assertions.assertEquals("avbopfp", model.protectableObjectType());
        Assertions.assertEquals("cbb", model.sourceResourceId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-19T13:37:47Z"), model.lastUpdatedTime());
        Assertions.assertEquals("knapq", model.extendedInfo().hostServerName());
        Assertions.assertEquals("uicdhzbdybwwg", model.extendedInfo().inquiryInfo().status());
        Assertions.assertEquals("mhmwffpl", model.extendedInfo().nodesList().get(0).nodeName());
        Assertions.assertEquals("u", model.extendedInfo().nodesList().get(0).status());
        Assertions.assertEquals(WorkloadType.GENERIC_DATA_SOURCE, model.workloadType());
        Assertions.assertEquals(OperationType.REGISTER, model.operationType());
    }
}
