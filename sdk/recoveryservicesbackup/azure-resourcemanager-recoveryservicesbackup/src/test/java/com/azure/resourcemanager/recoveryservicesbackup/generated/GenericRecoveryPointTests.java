// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.GenericRecoveryPoint;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class GenericRecoveryPointTests {
    @Test
    public void testDeserialize() {
        GenericRecoveryPoint model =
            BinaryData
                .fromString(
                    "{\"objectType\":\"GenericRecoveryPoint\",\"friendlyName\":\"srmozihmip\",\"recoveryPointType\":\"wtxxpkyjcx\",\"recoveryPointTime\":\"2021-10-15T15:19:43Z\",\"recoveryPointAdditionalInfo\":\"rytfmpcycil\"}")
                .toObject(GenericRecoveryPoint.class);
        Assertions.assertEquals("srmozihmip", model.friendlyName());
        Assertions.assertEquals("wtxxpkyjcx", model.recoveryPointType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-15T15:19:43Z"), model.recoveryPointTime());
        Assertions.assertEquals("rytfmpcycil", model.recoveryPointAdditionalInfo());
    }

    @Test
    public void testSerialize() {
        GenericRecoveryPoint model =
            new GenericRecoveryPoint()
                .withFriendlyName("srmozihmip")
                .withRecoveryPointType("wtxxpkyjcx")
                .withRecoveryPointTime(OffsetDateTime.parse("2021-10-15T15:19:43Z"))
                .withRecoveryPointAdditionalInfo("rytfmpcycil");
        model = BinaryData.fromObject(model).toObject(GenericRecoveryPoint.class);
        Assertions.assertEquals("srmozihmip", model.friendlyName());
        Assertions.assertEquals("wtxxpkyjcx", model.recoveryPointType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-15T15:19:43Z"), model.recoveryPointTime());
        Assertions.assertEquals("rytfmpcycil", model.recoveryPointAdditionalInfo());
    }
}
