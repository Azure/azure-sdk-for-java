// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.GenericRecoveryPoint;
import com.azure.resourcemanager.recoveryservicesbackup.models.RecoveryPointProperties;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class GenericRecoveryPointTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GenericRecoveryPoint model = BinaryData.fromString(
            "{\"objectType\":\"GenericRecoveryPoint\",\"friendlyName\":\"fepbnwgfmxjgc\",\"recoveryPointType\":\"jbgdlfgtdysnaquf\",\"recoveryPointTime\":\"2021-04-21T16:46:54Z\",\"recoveryPointAdditionalInfo\":\"tqhamzjrw\",\"recoveryPointProperties\":{\"expiryTime\":\"zeqyjleziun\",\"ruleName\":\"dfzantkwcegy\",\"isSoftDeleted\":false}}")
            .toObject(GenericRecoveryPoint.class);
        Assertions.assertEquals("fepbnwgfmxjgc", model.friendlyName());
        Assertions.assertEquals("jbgdlfgtdysnaquf", model.recoveryPointType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-21T16:46:54Z"), model.recoveryPointTime());
        Assertions.assertEquals("tqhamzjrw", model.recoveryPointAdditionalInfo());
        Assertions.assertEquals("zeqyjleziun", model.recoveryPointProperties().expiryTime());
        Assertions.assertEquals("dfzantkwcegy", model.recoveryPointProperties().ruleName());
        Assertions.assertEquals(false, model.recoveryPointProperties().isSoftDeleted());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GenericRecoveryPoint model = new GenericRecoveryPoint().withFriendlyName("fepbnwgfmxjgc")
            .withRecoveryPointType("jbgdlfgtdysnaquf")
            .withRecoveryPointTime(OffsetDateTime.parse("2021-04-21T16:46:54Z"))
            .withRecoveryPointAdditionalInfo("tqhamzjrw")
            .withRecoveryPointProperties(new RecoveryPointProperties().withExpiryTime("zeqyjleziun")
                .withRuleName("dfzantkwcegy")
                .withIsSoftDeleted(false));
        model = BinaryData.fromObject(model).toObject(GenericRecoveryPoint.class);
        Assertions.assertEquals("fepbnwgfmxjgc", model.friendlyName());
        Assertions.assertEquals("jbgdlfgtdysnaquf", model.recoveryPointType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-21T16:46:54Z"), model.recoveryPointTime());
        Assertions.assertEquals("tqhamzjrw", model.recoveryPointAdditionalInfo());
        Assertions.assertEquals("zeqyjleziun", model.recoveryPointProperties().expiryTime());
        Assertions.assertEquals("dfzantkwcegy", model.recoveryPointProperties().ruleName());
        Assertions.assertEquals(false, model.recoveryPointProperties().isSoftDeleted());
    }
}
