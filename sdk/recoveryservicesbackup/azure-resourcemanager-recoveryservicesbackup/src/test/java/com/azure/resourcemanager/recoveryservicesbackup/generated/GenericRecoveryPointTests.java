// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.GenericRecoveryPoint;
import com.azure.resourcemanager.recoveryservicesbackup.models.RecoveryPointProperties;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class GenericRecoveryPointTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GenericRecoveryPoint model =
            BinaryData
                .fromString(
                    "{\"objectType\":\"GenericRecoveryPoint\",\"friendlyName\":\"mshkwfbkgo\",\"recoveryPointType\":\"wopdbydpiz\",\"recoveryPointTime\":\"2021-11-06T08:13:32Z\",\"recoveryPointAdditionalInfo\":\"napxbiygnug\",\"recoveryPointProperties\":{\"expiryTime\":\"fsmfcttuxuuyi\",\"ruleName\":\"lq\",\"isSoftDeleted\":false}}")
                .toObject(GenericRecoveryPoint.class);
        Assertions.assertEquals("mshkwfbkgo", model.friendlyName());
        Assertions.assertEquals("wopdbydpiz", model.recoveryPointType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-06T08:13:32Z"), model.recoveryPointTime());
        Assertions.assertEquals("napxbiygnug", model.recoveryPointAdditionalInfo());
        Assertions.assertEquals("fsmfcttuxuuyi", model.recoveryPointProperties().expiryTime());
        Assertions.assertEquals("lq", model.recoveryPointProperties().ruleName());
        Assertions.assertEquals(false, model.recoveryPointProperties().isSoftDeleted());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GenericRecoveryPoint model =
            new GenericRecoveryPoint()
                .withFriendlyName("mshkwfbkgo")
                .withRecoveryPointType("wopdbydpiz")
                .withRecoveryPointTime(OffsetDateTime.parse("2021-11-06T08:13:32Z"))
                .withRecoveryPointAdditionalInfo("napxbiygnug")
                .withRecoveryPointProperties(
                    new RecoveryPointProperties()
                        .withExpiryTime("fsmfcttuxuuyi")
                        .withRuleName("lq")
                        .withIsSoftDeleted(false));
        model = BinaryData.fromObject(model).toObject(GenericRecoveryPoint.class);
        Assertions.assertEquals("mshkwfbkgo", model.friendlyName());
        Assertions.assertEquals("wopdbydpiz", model.recoveryPointType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-06T08:13:32Z"), model.recoveryPointTime());
        Assertions.assertEquals("napxbiygnug", model.recoveryPointAdditionalInfo());
        Assertions.assertEquals("fsmfcttuxuuyi", model.recoveryPointProperties().expiryTime());
        Assertions.assertEquals("lq", model.recoveryPointProperties().ruleName());
        Assertions.assertEquals(false, model.recoveryPointProperties().isSoftDeleted());
    }
}
