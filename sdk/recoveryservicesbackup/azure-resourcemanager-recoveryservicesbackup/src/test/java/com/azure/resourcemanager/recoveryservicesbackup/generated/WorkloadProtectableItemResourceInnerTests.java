// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.fluent.models.WorkloadProtectableItemResourceInner;
import com.azure.resourcemanager.recoveryservicesbackup.models.ProtectionStatus;
import com.azure.resourcemanager.recoveryservicesbackup.models.WorkloadProtectableItem;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class WorkloadProtectableItemResourceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadProtectableItemResourceInner model = BinaryData.fromString(
            "{\"properties\":{\"protectableItemType\":\"WorkloadProtectableItem\",\"backupManagementType\":\"cxnavv\",\"workloadType\":\"qiby\",\"friendlyName\":\"nyowxwlmdjrkvfg\",\"protectionState\":\"Invalid\"},\"eTag\":\"p\",\"location\":\"bodacizsjq\",\"tags\":{\"ibqipqkg\":\"rribd\",\"mkrefajpjorwkq\":\"vxndz\",\"sjabibs\":\"yhgbijtjivfx\"},\"id\":\"stawfsdjpvkv\",\"name\":\"bjxbkzbzk\",\"type\":\"vncjabudurgk\"}")
            .toObject(WorkloadProtectableItemResourceInner.class);
        Assertions.assertEquals("bodacizsjq", model.location());
        Assertions.assertEquals("rribd", model.tags().get("ibqipqkg"));
        Assertions.assertEquals("cxnavv", model.properties().backupManagementType());
        Assertions.assertEquals("qiby", model.properties().workloadType());
        Assertions.assertEquals("nyowxwlmdjrkvfg", model.properties().friendlyName());
        Assertions.assertEquals(ProtectionStatus.INVALID, model.properties().protectionState());
        Assertions.assertEquals("p", model.etag());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadProtectableItemResourceInner model
            = new WorkloadProtectableItemResourceInner().withLocation("bodacizsjq")
                .withTags(mapOf("ibqipqkg", "rribd", "mkrefajpjorwkq", "vxndz", "sjabibs", "yhgbijtjivfx"))
                .withProperties(new WorkloadProtectableItem().withBackupManagementType("cxnavv")
                    .withWorkloadType("qiby")
                    .withFriendlyName("nyowxwlmdjrkvfg")
                    .withProtectionState(ProtectionStatus.INVALID))
                .withEtag("p");
        model = BinaryData.fromObject(model).toObject(WorkloadProtectableItemResourceInner.class);
        Assertions.assertEquals("bodacizsjq", model.location());
        Assertions.assertEquals("rribd", model.tags().get("ibqipqkg"));
        Assertions.assertEquals("cxnavv", model.properties().backupManagementType());
        Assertions.assertEquals("qiby", model.properties().workloadType());
        Assertions.assertEquals("nyowxwlmdjrkvfg", model.properties().friendlyName());
        Assertions.assertEquals(ProtectionStatus.INVALID, model.properties().protectionState());
        Assertions.assertEquals("p", model.etag());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
