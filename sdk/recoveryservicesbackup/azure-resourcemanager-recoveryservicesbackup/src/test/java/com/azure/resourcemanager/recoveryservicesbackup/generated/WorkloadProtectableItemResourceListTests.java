// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.fluent.models.WorkloadProtectableItemResourceInner;
import com.azure.resourcemanager.recoveryservicesbackup.models.ProtectionStatus;
import com.azure.resourcemanager.recoveryservicesbackup.models.WorkloadProtectableItem;
import com.azure.resourcemanager.recoveryservicesbackup.models.WorkloadProtectableItemResourceList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class WorkloadProtectableItemResourceListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadProtectableItemResourceList model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"protectableItemType\":\"WorkloadProtectableItem\",\"backupManagementType\":\"hmk\",\"workloadType\":\"grauwjuetaebur\",\"friendlyName\":\"dmovsm\",\"protectionState\":\"NotProtected\"},\"eTag\":\"ab\",\"location\":\"q\",\"tags\":{\"vtpuqujmqlgk\":\"kif\",\"ongbjcnt\":\"btndo\"},\"id\":\"jitcjedftwwaez\",\"name\":\"ojvdcpzfoqo\",\"type\":\"i\"},{\"properties\":{\"protectableItemType\":\"WorkloadProtectableItem\",\"backupManagementType\":\"xarzgszufoxciq\",\"workloadType\":\"idoamciodhkha\",\"friendlyName\":\"khnzbonlw\",\"protectionState\":\"ProtectionFailed\"},\"eTag\":\"gokdwbwhks\",\"location\":\"zcmrvexztvb\",\"tags\":{\"wtl\":\"sfraoyzko\",\"uximerqfobw\":\"nguxawqaldsy\",\"r\":\"znkbykutwpfhpagm\"},\"id\":\"kdsnfdsdoakgtdl\",\"name\":\"kkze\",\"type\":\"dlhewp\"},{\"properties\":{\"protectableItemType\":\"WorkloadProtectableItem\",\"backupManagementType\":\"sttwvogvbbe\",\"workloadType\":\"cngqqmoakufgmjz\",\"friendlyName\":\"rdgrtw\",\"protectionState\":\"NotProtected\"},\"eTag\":\"uzkopbminrfd\",\"location\":\"oyuhhziui\",\"tags\":{\"smlmzqhoftrm\":\"zbhd\",\"hxicslfaoqz\":\"equi\",\"kaivwit\":\"iyylhalnswhccsp\"},\"id\":\"scywuggwoluhc\",\"name\":\"bwemhairs\",\"type\":\"rgzdwmsweyp\"},{\"properties\":{\"protectableItemType\":\"WorkloadProtectableItem\",\"backupManagementType\":\"xggicccnxqhuexmk\",\"workloadType\":\"lstvlzywe\",\"friendlyName\":\"zrncsdt\",\"protectionState\":\"Protected\"},\"eTag\":\"iypbsfgytgusl\",\"location\":\"eadcygqukyhejhz\",\"tags\":{\"jzraehtwdwrf\":\"gfpelolppvksrpqv\",\"dl\":\"swibyr\",\"hfwpracstwit\":\"h\"},\"id\":\"khevxccedc\",\"name\":\"nmdyodnwzxl\",\"type\":\"jc\"}],\"nextLink\":\"hlt\"}")
            .toObject(WorkloadProtectableItemResourceList.class);
        Assertions.assertEquals("hlt", model.nextLink());
        Assertions.assertEquals("q", model.value().get(0).location());
        Assertions.assertEquals("kif", model.value().get(0).tags().get("vtpuqujmqlgk"));
        Assertions.assertEquals("hmk", model.value().get(0).properties().backupManagementType());
        Assertions.assertEquals("grauwjuetaebur", model.value().get(0).properties().workloadType());
        Assertions.assertEquals("dmovsm", model.value().get(0).properties().friendlyName());
        Assertions.assertEquals(ProtectionStatus.NOT_PROTECTED, model.value().get(0).properties().protectionState());
        Assertions.assertEquals("ab", model.value().get(0).etag());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadProtectableItemResourceList model = new WorkloadProtectableItemResourceList().withNextLink("hlt")
            .withValue(Arrays.asList(
                new WorkloadProtectableItemResourceInner().withLocation("q")
                    .withTags(mapOf("vtpuqujmqlgk", "kif", "ongbjcnt", "btndo"))
                    .withProperties(new WorkloadProtectableItem().withBackupManagementType("hmk")
                        .withWorkloadType("grauwjuetaebur")
                        .withFriendlyName("dmovsm")
                        .withProtectionState(ProtectionStatus.NOT_PROTECTED))
                    .withEtag("ab"),
                new WorkloadProtectableItemResourceInner().withLocation("zcmrvexztvb")
                    .withTags(mapOf("wtl", "sfraoyzko", "uximerqfobw", "nguxawqaldsy", "r", "znkbykutwpfhpagm"))
                    .withProperties(new WorkloadProtectableItem().withBackupManagementType("xarzgszufoxciq")
                        .withWorkloadType("idoamciodhkha")
                        .withFriendlyName("khnzbonlw")
                        .withProtectionState(ProtectionStatus.PROTECTION_FAILED))
                    .withEtag("gokdwbwhks"),
                new WorkloadProtectableItemResourceInner().withLocation("oyuhhziui")
                    .withTags(mapOf("smlmzqhoftrm", "zbhd", "hxicslfaoqz", "equi", "kaivwit", "iyylhalnswhccsp"))
                    .withProperties(new WorkloadProtectableItem().withBackupManagementType("sttwvogvbbe")
                        .withWorkloadType("cngqqmoakufgmjz")
                        .withFriendlyName("rdgrtw")
                        .withProtectionState(ProtectionStatus.NOT_PROTECTED))
                    .withEtag("uzkopbminrfd"),
                new WorkloadProtectableItemResourceInner().withLocation("eadcygqukyhejhz")
                    .withTags(mapOf("jzraehtwdwrf", "gfpelolppvksrpqv", "dl", "swibyr", "hfwpracstwit", "h"))
                    .withProperties(new WorkloadProtectableItem().withBackupManagementType("xggicccnxqhuexmk")
                        .withWorkloadType("lstvlzywe")
                        .withFriendlyName("zrncsdt")
                        .withProtectionState(ProtectionStatus.PROTECTED))
                    .withEtag("iypbsfgytgusl")));
        model = BinaryData.fromObject(model).toObject(WorkloadProtectableItemResourceList.class);
        Assertions.assertEquals("hlt", model.nextLink());
        Assertions.assertEquals("q", model.value().get(0).location());
        Assertions.assertEquals("kif", model.value().get(0).tags().get("vtpuqujmqlgk"));
        Assertions.assertEquals("hmk", model.value().get(0).properties().backupManagementType());
        Assertions.assertEquals("grauwjuetaebur", model.value().get(0).properties().workloadType());
        Assertions.assertEquals("dmovsm", model.value().get(0).properties().friendlyName());
        Assertions.assertEquals(ProtectionStatus.NOT_PROTECTED, model.value().get(0).properties().protectionState());
        Assertions.assertEquals("ab", model.value().get(0).etag());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
