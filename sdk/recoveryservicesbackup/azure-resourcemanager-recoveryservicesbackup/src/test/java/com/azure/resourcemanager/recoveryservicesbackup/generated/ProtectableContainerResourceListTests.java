// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.fluent.models.ProtectableContainerResourceInner;
import com.azure.resourcemanager.recoveryservicesbackup.models.BackupManagementType;
import com.azure.resourcemanager.recoveryservicesbackup.models.ProtectableContainer;
import com.azure.resourcemanager.recoveryservicesbackup.models.ProtectableContainerResourceList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ProtectableContainerResourceListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ProtectableContainerResourceList model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"protectableContainerType\":\"ProtectableContainer\",\"friendlyName\":\"ndjmquxvyp\",\"backupManagementType\":\"AzureStorage\",\"healthStatus\":\"opkwhojv\",\"containerId\":\"jqg\"},\"eTag\":\"smocmbq\",\"location\":\"qvmkcxo\",\"tags\":{\"kcbcue\":\"vhelxprglyatdd\",\"hos\":\"rjxgciqib\",\"ibahwflus\":\"sdqrhzoymibmrq\"},\"id\":\"dtmhrkwofyyvoqa\",\"name\":\"piexpbtgiw\",\"type\":\"wo\"},{\"properties\":{\"protectableContainerType\":\"ProtectableContainer\",\"friendlyName\":\"ashrt\",\"backupManagementType\":\"Invalid\",\"healthStatus\":\"nqxwbp\",\"containerId\":\"ulpiuj\"},\"eTag\":\"asipqiio\",\"location\":\"yuq\",\"tags\":{\"bdbutauvf\":\"qlpqwcciuq\",\"afnn\":\"tkuwhhmhykojo\"},\"id\":\"lpichk\",\"name\":\"ymkcdyhb\",\"type\":\"kkpwdreqnovvq\"}],\"nextLink\":\"vljxywsu\"}")
                .toObject(ProtectableContainerResourceList.class);
        Assertions.assertEquals("vljxywsu", model.nextLink());
        Assertions.assertEquals("qvmkcxo", model.value().get(0).location());
        Assertions.assertEquals("vhelxprglyatdd", model.value().get(0).tags().get("kcbcue"));
        Assertions.assertEquals("ndjmquxvyp", model.value().get(0).properties().friendlyName());
        Assertions
            .assertEquals(BackupManagementType.AZURE_STORAGE, model.value().get(0).properties().backupManagementType());
        Assertions.assertEquals("opkwhojv", model.value().get(0).properties().healthStatus());
        Assertions.assertEquals("jqg", model.value().get(0).properties().containerId());
        Assertions.assertEquals("smocmbq", model.value().get(0).etag());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ProtectableContainerResourceList model =
            new ProtectableContainerResourceList()
                .withNextLink("vljxywsu")
                .withValue(
                    Arrays
                        .asList(
                            new ProtectableContainerResourceInner()
                                .withLocation("qvmkcxo")
                                .withTags(
                                    mapOf(
                                        "kcbcue", "vhelxprglyatdd", "hos", "rjxgciqib", "ibahwflus", "sdqrhzoymibmrq"))
                                .withProperties(
                                    new ProtectableContainer()
                                        .withFriendlyName("ndjmquxvyp")
                                        .withBackupManagementType(BackupManagementType.AZURE_STORAGE)
                                        .withHealthStatus("opkwhojv")
                                        .withContainerId("jqg"))
                                .withEtag("smocmbq"),
                            new ProtectableContainerResourceInner()
                                .withLocation("yuq")
                                .withTags(mapOf("bdbutauvf", "qlpqwcciuq", "afnn", "tkuwhhmhykojo"))
                                .withProperties(
                                    new ProtectableContainer()
                                        .withFriendlyName("ashrt")
                                        .withBackupManagementType(BackupManagementType.INVALID)
                                        .withHealthStatus("nqxwbp")
                                        .withContainerId("ulpiuj"))
                                .withEtag("asipqiio")));
        model = BinaryData.fromObject(model).toObject(ProtectableContainerResourceList.class);
        Assertions.assertEquals("vljxywsu", model.nextLink());
        Assertions.assertEquals("qvmkcxo", model.value().get(0).location());
        Assertions.assertEquals("vhelxprglyatdd", model.value().get(0).tags().get("kcbcue"));
        Assertions.assertEquals("ndjmquxvyp", model.value().get(0).properties().friendlyName());
        Assertions
            .assertEquals(BackupManagementType.AZURE_STORAGE, model.value().get(0).properties().backupManagementType());
        Assertions.assertEquals("opkwhojv", model.value().get(0).properties().healthStatus());
        Assertions.assertEquals("jqg", model.value().get(0).properties().containerId());
        Assertions.assertEquals("smocmbq", model.value().get(0).etag());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
