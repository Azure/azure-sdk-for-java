// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.AzureWorkloadAutoProtectionIntent;
import com.azure.resourcemanager.recoveryservicesbackup.models.BackupManagementType;
import com.azure.resourcemanager.recoveryservicesbackup.models.ProtectionStatus;
import org.junit.jupiter.api.Assertions;

public final class AzureWorkloadAutoProtectionIntentTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureWorkloadAutoProtectionIntent model =
            BinaryData
                .fromString(
                    "{\"protectionIntentItemType\":\"AzureWorkloadAutoProtectionIntent\",\"backupManagementType\":\"Invalid\",\"sourceResourceId\":\"hmnr\",\"itemId\":\"bsojk\",\"policyId\":\"nhmdptysprqs\",\"protectionState\":\"Protected\"}")
                .toObject(AzureWorkloadAutoProtectionIntent.class);
        Assertions.assertEquals(BackupManagementType.INVALID, model.backupManagementType());
        Assertions.assertEquals("hmnr", model.sourceResourceId());
        Assertions.assertEquals("bsojk", model.itemId());
        Assertions.assertEquals("nhmdptysprqs", model.policyId());
        Assertions.assertEquals(ProtectionStatus.PROTECTED, model.protectionState());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureWorkloadAutoProtectionIntent model =
            new AzureWorkloadAutoProtectionIntent()
                .withBackupManagementType(BackupManagementType.INVALID)
                .withSourceResourceId("hmnr")
                .withItemId("bsojk")
                .withPolicyId("nhmdptysprqs")
                .withProtectionState(ProtectionStatus.PROTECTED);
        model = BinaryData.fromObject(model).toObject(AzureWorkloadAutoProtectionIntent.class);
        Assertions.assertEquals(BackupManagementType.INVALID, model.backupManagementType());
        Assertions.assertEquals("hmnr", model.sourceResourceId());
        Assertions.assertEquals("bsojk", model.itemId());
        Assertions.assertEquals("nhmdptysprqs", model.policyId());
        Assertions.assertEquals(ProtectionStatus.PROTECTED, model.protectionState());
    }
}
