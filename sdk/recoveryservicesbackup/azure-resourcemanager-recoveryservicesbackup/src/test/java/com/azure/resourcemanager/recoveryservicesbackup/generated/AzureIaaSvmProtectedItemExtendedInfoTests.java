// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.AzureIaaSvmProtectedItemExtendedInfo;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class AzureIaaSvmProtectedItemExtendedInfoTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureIaaSvmProtectedItemExtendedInfo model =
            BinaryData
                .fromString(
                    "{\"oldestRecoveryPoint\":\"2021-12-05T05:54:43Z\",\"oldestRecoveryPointInVault\":\"2021-03-18T03:28:02Z\",\"oldestRecoveryPointInArchive\":\"2021-11-07T01:02:12Z\",\"newestRecoveryPointInArchive\":\"2021-03-29T10:48:47Z\",\"recoveryPointCount\":1356605173,\"policyInconsistent\":true}")
                .toObject(AzureIaaSvmProtectedItemExtendedInfo.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-12-05T05:54:43Z"), model.oldestRecoveryPoint());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-18T03:28:02Z"), model.oldestRecoveryPointInVault());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-07T01:02:12Z"), model.oldestRecoveryPointInArchive());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-29T10:48:47Z"), model.newestRecoveryPointInArchive());
        Assertions.assertEquals(1356605173, model.recoveryPointCount());
        Assertions.assertEquals(true, model.policyInconsistent());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureIaaSvmProtectedItemExtendedInfo model =
            new AzureIaaSvmProtectedItemExtendedInfo()
                .withOldestRecoveryPoint(OffsetDateTime.parse("2021-12-05T05:54:43Z"))
                .withOldestRecoveryPointInVault(OffsetDateTime.parse("2021-03-18T03:28:02Z"))
                .withOldestRecoveryPointInArchive(OffsetDateTime.parse("2021-11-07T01:02:12Z"))
                .withNewestRecoveryPointInArchive(OffsetDateTime.parse("2021-03-29T10:48:47Z"))
                .withRecoveryPointCount(1356605173)
                .withPolicyInconsistent(true);
        model = BinaryData.fromObject(model).toObject(AzureIaaSvmProtectedItemExtendedInfo.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-12-05T05:54:43Z"), model.oldestRecoveryPoint());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-18T03:28:02Z"), model.oldestRecoveryPointInVault());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-07T01:02:12Z"), model.oldestRecoveryPointInArchive());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-29T10:48:47Z"), model.newestRecoveryPointInArchive());
        Assertions.assertEquals(1356605173, model.recoveryPointCount());
        Assertions.assertEquals(true, model.policyInconsistent());
    }
}
