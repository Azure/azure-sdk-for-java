// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.AzureIaaSvmProtectedItemExtendedInfo;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class AzureIaaSvmProtectedItemExtendedInfoTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureIaaSvmProtectedItemExtendedInfo model = BinaryData.fromString(
            "{\"oldestRecoveryPoint\":\"2021-12-08T10:15:59Z\",\"oldestRecoveryPointInVault\":\"2021-11-06T19:48:56Z\",\"oldestRecoveryPointInArchive\":\"2021-05-31T02:13:42Z\",\"newestRecoveryPointInArchive\":\"2021-02-14T17:29:05Z\",\"recoveryPointCount\":1921546293,\"policyInconsistent\":false}")
            .toObject(AzureIaaSvmProtectedItemExtendedInfo.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-12-08T10:15:59Z"), model.oldestRecoveryPoint());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-06T19:48:56Z"), model.oldestRecoveryPointInVault());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-31T02:13:42Z"), model.oldestRecoveryPointInArchive());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-14T17:29:05Z"), model.newestRecoveryPointInArchive());
        Assertions.assertEquals(1921546293, model.recoveryPointCount());
        Assertions.assertEquals(false, model.policyInconsistent());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureIaaSvmProtectedItemExtendedInfo model = new AzureIaaSvmProtectedItemExtendedInfo()
            .withOldestRecoveryPoint(OffsetDateTime.parse("2021-12-08T10:15:59Z"))
            .withOldestRecoveryPointInVault(OffsetDateTime.parse("2021-11-06T19:48:56Z"))
            .withOldestRecoveryPointInArchive(OffsetDateTime.parse("2021-05-31T02:13:42Z"))
            .withNewestRecoveryPointInArchive(OffsetDateTime.parse("2021-02-14T17:29:05Z"))
            .withRecoveryPointCount(1921546293)
            .withPolicyInconsistent(false);
        model = BinaryData.fromObject(model).toObject(AzureIaaSvmProtectedItemExtendedInfo.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-12-08T10:15:59Z"), model.oldestRecoveryPoint());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-06T19:48:56Z"), model.oldestRecoveryPointInVault());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-31T02:13:42Z"), model.oldestRecoveryPointInArchive());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-14T17:29:05Z"), model.newestRecoveryPointInArchive());
        Assertions.assertEquals(1921546293, model.recoveryPointCount());
        Assertions.assertEquals(false, model.policyInconsistent());
    }
}
