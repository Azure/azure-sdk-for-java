// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.AzureIaaSvmProtectedItemExtendedInfo;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class AzureIaaSvmProtectedItemExtendedInfoTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureIaaSvmProtectedItemExtendedInfo model = BinaryData.fromString(
            "{\"oldestRecoveryPoint\":\"2021-10-30T05:21:59Z\",\"oldestRecoveryPointInVault\":\"2021-06-02T11:29:06Z\",\"oldestRecoveryPointInArchive\":\"2021-07-18T06:03:13Z\",\"newestRecoveryPointInArchive\":\"2021-01-31T21:27:23Z\",\"recoveryPointCount\":1877295480,\"policyInconsistent\":true}")
            .toObject(AzureIaaSvmProtectedItemExtendedInfo.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-30T05:21:59Z"), model.oldestRecoveryPoint());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-02T11:29:06Z"), model.oldestRecoveryPointInVault());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-18T06:03:13Z"), model.oldestRecoveryPointInArchive());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-31T21:27:23Z"), model.newestRecoveryPointInArchive());
        Assertions.assertEquals(1877295480, model.recoveryPointCount());
        Assertions.assertEquals(true, model.policyInconsistent());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureIaaSvmProtectedItemExtendedInfo model = new AzureIaaSvmProtectedItemExtendedInfo()
            .withOldestRecoveryPoint(OffsetDateTime.parse("2021-10-30T05:21:59Z"))
            .withOldestRecoveryPointInVault(OffsetDateTime.parse("2021-06-02T11:29:06Z"))
            .withOldestRecoveryPointInArchive(OffsetDateTime.parse("2021-07-18T06:03:13Z"))
            .withNewestRecoveryPointInArchive(OffsetDateTime.parse("2021-01-31T21:27:23Z"))
            .withRecoveryPointCount(1877295480).withPolicyInconsistent(true);
        model = BinaryData.fromObject(model).toObject(AzureIaaSvmProtectedItemExtendedInfo.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-30T05:21:59Z"), model.oldestRecoveryPoint());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-02T11:29:06Z"), model.oldestRecoveryPointInVault());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-18T06:03:13Z"), model.oldestRecoveryPointInArchive());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-31T21:27:23Z"), model.newestRecoveryPointInArchive());
        Assertions.assertEquals(1877295480, model.recoveryPointCount());
        Assertions.assertEquals(true, model.policyInconsistent());
    }
}
