// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.MabJobTaskDetails;
import java.time.Duration;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class MabJobTaskDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MabJobTaskDetails model = BinaryData.fromString(
            "{\"taskId\":\"bo\",\"startTime\":\"2021-06-07T05:21:39Z\",\"endTime\":\"2021-09-09T03:44:16Z\",\"duration\":\"PT137H58M26S\",\"status\":\"kkhminqcymczngn\"}")
            .toObject(MabJobTaskDetails.class);
        Assertions.assertEquals("bo", model.taskId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-07T05:21:39Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-09T03:44:16Z"), model.endTime());
        Assertions.assertEquals(Duration.parse("PT137H58M26S"), model.duration());
        Assertions.assertEquals("kkhminqcymczngn", model.status());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MabJobTaskDetails model
            = new MabJobTaskDetails().withTaskId("bo").withStartTime(OffsetDateTime.parse("2021-06-07T05:21:39Z"))
                .withEndTime(OffsetDateTime.parse("2021-09-09T03:44:16Z")).withDuration(Duration.parse("PT137H58M26S"))
                .withStatus("kkhminqcymczngn");
        model = BinaryData.fromObject(model).toObject(MabJobTaskDetails.class);
        Assertions.assertEquals("bo", model.taskId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-07T05:21:39Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-09T03:44:16Z"), model.endTime());
        Assertions.assertEquals(Duration.parse("PT137H58M26S"), model.duration());
        Assertions.assertEquals("kkhminqcymczngn", model.status());
    }
}
