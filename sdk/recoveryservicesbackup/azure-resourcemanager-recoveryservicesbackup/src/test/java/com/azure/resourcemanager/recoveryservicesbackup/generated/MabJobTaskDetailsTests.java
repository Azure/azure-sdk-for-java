// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.MabJobTaskDetails;
import java.time.Duration;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class MabJobTaskDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MabJobTaskDetails model =
            BinaryData
                .fromString(
                    "{\"taskId\":\"fzyjqt\",\"startTime\":\"2021-06-13T02:09:09Z\",\"endTime\":\"2021-10-28T10:50:56Z\",\"duration\":\"PT38H26M18S\",\"status\":\"penuy\"}")
                .toObject(MabJobTaskDetails.class);
        Assertions.assertEquals("fzyjqt", model.taskId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-13T02:09:09Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-28T10:50:56Z"), model.endTime());
        Assertions.assertEquals(Duration.parse("PT38H26M18S"), model.duration());
        Assertions.assertEquals("penuy", model.status());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MabJobTaskDetails model =
            new MabJobTaskDetails()
                .withTaskId("fzyjqt")
                .withStartTime(OffsetDateTime.parse("2021-06-13T02:09:09Z"))
                .withEndTime(OffsetDateTime.parse("2021-10-28T10:50:56Z"))
                .withDuration(Duration.parse("PT38H26M18S"))
                .withStatus("penuy");
        model = BinaryData.fromObject(model).toObject(MabJobTaskDetails.class);
        Assertions.assertEquals("fzyjqt", model.taskId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-13T02:09:09Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-28T10:50:56Z"), model.endTime());
        Assertions.assertEquals(Duration.parse("PT38H26M18S"), model.duration());
        Assertions.assertEquals("penuy", model.status());
    }
}
