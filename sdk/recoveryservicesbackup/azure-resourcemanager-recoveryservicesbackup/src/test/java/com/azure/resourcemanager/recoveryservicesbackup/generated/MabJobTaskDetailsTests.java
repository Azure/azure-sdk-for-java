// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.MabJobTaskDetails;
import java.time.Duration;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class MabJobTaskDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MabJobTaskDetails model = BinaryData.fromString(
            "{\"taskId\":\"uqibsxtkcu\",\"startTime\":\"2021-03-04T11:35:39Z\",\"endTime\":\"2021-09-14T12:40:56Z\",\"duration\":\"PT92H43M10S\",\"status\":\"siowlkjxnqpv\"}")
            .toObject(MabJobTaskDetails.class);
        Assertions.assertEquals("uqibsxtkcu", model.taskId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-04T11:35:39Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-14T12:40:56Z"), model.endTime());
        Assertions.assertEquals(Duration.parse("PT92H43M10S"), model.duration());
        Assertions.assertEquals("siowlkjxnqpv", model.status());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MabJobTaskDetails model = new MabJobTaskDetails().withTaskId("uqibsxtkcu")
            .withStartTime(OffsetDateTime.parse("2021-03-04T11:35:39Z"))
            .withEndTime(OffsetDateTime.parse("2021-09-14T12:40:56Z"))
            .withDuration(Duration.parse("PT92H43M10S"))
            .withStatus("siowlkjxnqpv");
        model = BinaryData.fromObject(model).toObject(MabJobTaskDetails.class);
        Assertions.assertEquals("uqibsxtkcu", model.taskId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-04T11:35:39Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-14T12:40:56Z"), model.endTime());
        Assertions.assertEquals(Duration.parse("PT92H43M10S"), model.duration());
        Assertions.assertEquals("siowlkjxnqpv", model.status());
    }
}
