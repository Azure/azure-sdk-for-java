// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.AzureStorageJobExtendedInfo;
import com.azure.resourcemanager.recoveryservicesbackup.models.AzureStorageJobTaskDetails;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class AzureStorageJobExtendedInfoTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureStorageJobExtendedInfo model =
            BinaryData
                .fromString(
                    "{\"tasksList\":[{\"taskId\":\"ewda\",\"status\":\"djvlpj\"},{\"taskId\":\"kzbrmsgeivsiy\",\"status\":\"kdncj\"},{\"taskId\":\"onbzoggculapzwy\",\"status\":\"gogtqxepnylbf\"}],\"propertyBag\":{\"vofqzhvfc\":\"lyjt\",\"jpvd\":\"byfmowuxr\",\"vwzjbhyz\":\"xfzwi\"},\"dynamicErrorMessage\":\"jrkambtrnegvmnv\"}")
                .toObject(AzureStorageJobExtendedInfo.class);
        Assertions.assertEquals("ewda", model.tasksList().get(0).taskId());
        Assertions.assertEquals("djvlpj", model.tasksList().get(0).status());
        Assertions.assertEquals("lyjt", model.propertyBag().get("vofqzhvfc"));
        Assertions.assertEquals("jrkambtrnegvmnv", model.dynamicErrorMessage());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureStorageJobExtendedInfo model =
            new AzureStorageJobExtendedInfo()
                .withTasksList(
                    Arrays
                        .asList(
                            new AzureStorageJobTaskDetails().withTaskId("ewda").withStatus("djvlpj"),
                            new AzureStorageJobTaskDetails().withTaskId("kzbrmsgeivsiy").withStatus("kdncj"),
                            new AzureStorageJobTaskDetails().withTaskId("onbzoggculapzwy").withStatus("gogtqxepnylbf")))
                .withPropertyBag(mapOf("vofqzhvfc", "lyjt", "jpvd", "byfmowuxr", "vwzjbhyz", "xfzwi"))
                .withDynamicErrorMessage("jrkambtrnegvmnv");
        model = BinaryData.fromObject(model).toObject(AzureStorageJobExtendedInfo.class);
        Assertions.assertEquals("ewda", model.tasksList().get(0).taskId());
        Assertions.assertEquals("djvlpj", model.tasksList().get(0).status());
        Assertions.assertEquals("lyjt", model.propertyBag().get("vofqzhvfc"));
        Assertions.assertEquals("jrkambtrnegvmnv", model.dynamicErrorMessage());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
