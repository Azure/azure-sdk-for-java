// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.AzureWorkloadRestoreRequest;
import com.azure.resourcemanager.recoveryservicesbackup.models.OverwriteOptions;
import com.azure.resourcemanager.recoveryservicesbackup.models.RecoveryMode;
import com.azure.resourcemanager.recoveryservicesbackup.models.RecoveryType;
import com.azure.resourcemanager.recoveryservicesbackup.models.TargetRestoreInfo;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class AzureWorkloadRestoreRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureWorkloadRestoreRequest model =
            BinaryData
                .fromString(
                    "{\"objectType\":\"AzureWorkloadRestoreRequest\",\"recoveryType\":\"Invalid\",\"sourceResourceId\":\"ijouwivkxoyzunb\",\"propertyBag\":{\"lrcivtsoxfrke\":\"rtikvcpwpg\",\"skawaoqvmmb\":\"xpmyyefrpmpdnq\",\"egnitg\":\"pqfrtqlkz\",\"ealzxwhcansymoyq\":\"kxlzyqdrfeg\"},\"targetInfo\":{\"overwriteOption\":\"Invalid\",\"containerId\":\"divb\",\"databaseName\":\"xgomfajuwa\",\"targetDirectoryForFileRestore\":\"vdaeyyguxakjsq\"},\"recoveryMode\":\"Invalid\",\"targetVirtualMachineId\":\"ezkgi\"}")
                .toObject(AzureWorkloadRestoreRequest.class);
        Assertions.assertEquals(RecoveryType.INVALID, model.recoveryType());
        Assertions.assertEquals("ijouwivkxoyzunb", model.sourceResourceId());
        Assertions.assertEquals("rtikvcpwpg", model.propertyBag().get("lrcivtsoxfrke"));
        Assertions.assertEquals(OverwriteOptions.INVALID, model.targetInfo().overwriteOption());
        Assertions.assertEquals("divb", model.targetInfo().containerId());
        Assertions.assertEquals("xgomfajuwa", model.targetInfo().databaseName());
        Assertions.assertEquals("vdaeyyguxakjsq", model.targetInfo().targetDirectoryForFileRestore());
        Assertions.assertEquals(RecoveryMode.INVALID, model.recoveryMode());
        Assertions.assertEquals("ezkgi", model.targetVirtualMachineId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureWorkloadRestoreRequest model =
            new AzureWorkloadRestoreRequest()
                .withRecoveryType(RecoveryType.INVALID)
                .withSourceResourceId("ijouwivkxoyzunb")
                .withPropertyBag(
                    mapOf(
                        "lrcivtsoxfrke",
                        "rtikvcpwpg",
                        "skawaoqvmmb",
                        "xpmyyefrpmpdnq",
                        "egnitg",
                        "pqfrtqlkz",
                        "ealzxwhcansymoyq",
                        "kxlzyqdrfeg"))
                .withTargetInfo(
                    new TargetRestoreInfo()
                        .withOverwriteOption(OverwriteOptions.INVALID)
                        .withContainerId("divb")
                        .withDatabaseName("xgomfajuwa")
                        .withTargetDirectoryForFileRestore("vdaeyyguxakjsq"))
                .withRecoveryMode(RecoveryMode.INVALID)
                .withTargetVirtualMachineId("ezkgi");
        model = BinaryData.fromObject(model).toObject(AzureWorkloadRestoreRequest.class);
        Assertions.assertEquals(RecoveryType.INVALID, model.recoveryType());
        Assertions.assertEquals("ijouwivkxoyzunb", model.sourceResourceId());
        Assertions.assertEquals("rtikvcpwpg", model.propertyBag().get("lrcivtsoxfrke"));
        Assertions.assertEquals(OverwriteOptions.INVALID, model.targetInfo().overwriteOption());
        Assertions.assertEquals("divb", model.targetInfo().containerId());
        Assertions.assertEquals("xgomfajuwa", model.targetInfo().databaseName());
        Assertions.assertEquals("vdaeyyguxakjsq", model.targetInfo().targetDirectoryForFileRestore());
        Assertions.assertEquals(RecoveryMode.INVALID, model.recoveryMode());
        Assertions.assertEquals("ezkgi", model.targetVirtualMachineId());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
