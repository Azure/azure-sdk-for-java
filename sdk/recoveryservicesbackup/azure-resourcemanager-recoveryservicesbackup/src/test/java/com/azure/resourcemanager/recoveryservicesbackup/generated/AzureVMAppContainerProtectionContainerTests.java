// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.AzureVMAppContainerProtectionContainer;
import com.azure.resourcemanager.recoveryservicesbackup.models.AzureWorkloadContainerExtendedInfo;
import com.azure.resourcemanager.recoveryservicesbackup.models.BackupManagementType;
import com.azure.resourcemanager.recoveryservicesbackup.models.DistributedNodesInfo;
import com.azure.resourcemanager.recoveryservicesbackup.models.InquiryInfo;
import com.azure.resourcemanager.recoveryservicesbackup.models.OperationType;
import com.azure.resourcemanager.recoveryservicesbackup.models.WorkloadType;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class AzureVMAppContainerProtectionContainerTests {
    @Test
    public void testDeserialize() {
        AzureVMAppContainerProtectionContainer model =
            BinaryData
                .fromString(
                    "{\"containerType\":\"VMAppContainer\",\"sourceResourceId\":\"lrvkmjc\",\"lastUpdatedTime\":\"2021-04-16T01:01:12Z\",\"extendedInfo\":{\"hostServerName\":\"gfggcvkyylizrzbj\",\"inquiryInfo\":{\"status\":\"xsfuztlvt\",\"inquiryDetails\":[]},\"nodesList\":[{\"nodeName\":\"dqlvhukoveof\",\"status\":\"rvjfnmjmvlw\"}]},\"workloadType\":\"Sharepoint\",\"operationType\":\"Reregister\",\"friendlyName\":\"ujr\",\"backupManagementType\":\"Invalid\",\"registrationStatus\":\"juid\",\"healthStatus\":\"uuyjucejikz\",\"protectableObjectType\":\"ovvtzejetjkln\"}")
                .toObject(AzureVMAppContainerProtectionContainer.class);
        Assertions.assertEquals("ujr", model.friendlyName());
        Assertions.assertEquals(BackupManagementType.INVALID, model.backupManagementType());
        Assertions.assertEquals("juid", model.registrationStatus());
        Assertions.assertEquals("uuyjucejikz", model.healthStatus());
        Assertions.assertEquals("ovvtzejetjkln", model.protectableObjectType());
        Assertions.assertEquals("lrvkmjc", model.sourceResourceId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-16T01:01:12Z"), model.lastUpdatedTime());
        Assertions.assertEquals("gfggcvkyylizrzbj", model.extendedInfo().hostServerName());
        Assertions.assertEquals("xsfuztlvt", model.extendedInfo().inquiryInfo().status());
        Assertions.assertEquals("dqlvhukoveof", model.extendedInfo().nodesList().get(0).nodeName());
        Assertions.assertEquals("rvjfnmjmvlw", model.extendedInfo().nodesList().get(0).status());
        Assertions.assertEquals(WorkloadType.SHAREPOINT, model.workloadType());
        Assertions.assertEquals(OperationType.REREGISTER, model.operationType());
    }

    @Test
    public void testSerialize() {
        AzureVMAppContainerProtectionContainer model =
            new AzureVMAppContainerProtectionContainer()
                .withFriendlyName("ujr")
                .withBackupManagementType(BackupManagementType.INVALID)
                .withRegistrationStatus("juid")
                .withHealthStatus("uuyjucejikz")
                .withProtectableObjectType("ovvtzejetjkln")
                .withSourceResourceId("lrvkmjc")
                .withLastUpdatedTime(OffsetDateTime.parse("2021-04-16T01:01:12Z"))
                .withExtendedInfo(
                    new AzureWorkloadContainerExtendedInfo()
                        .withHostServerName("gfggcvkyylizrzbj")
                        .withInquiryInfo(new InquiryInfo().withStatus("xsfuztlvt").withInquiryDetails(Arrays.asList()))
                        .withNodesList(
                            Arrays
                                .asList(
                                    new DistributedNodesInfo().withNodeName("dqlvhukoveof").withStatus("rvjfnmjmvlw"))))
                .withWorkloadType(WorkloadType.SHAREPOINT)
                .withOperationType(OperationType.REREGISTER);
        model = BinaryData.fromObject(model).toObject(AzureVMAppContainerProtectionContainer.class);
        Assertions.assertEquals("ujr", model.friendlyName());
        Assertions.assertEquals(BackupManagementType.INVALID, model.backupManagementType());
        Assertions.assertEquals("juid", model.registrationStatus());
        Assertions.assertEquals("uuyjucejikz", model.healthStatus());
        Assertions.assertEquals("ovvtzejetjkln", model.protectableObjectType());
        Assertions.assertEquals("lrvkmjc", model.sourceResourceId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-16T01:01:12Z"), model.lastUpdatedTime());
        Assertions.assertEquals("gfggcvkyylizrzbj", model.extendedInfo().hostServerName());
        Assertions.assertEquals("xsfuztlvt", model.extendedInfo().inquiryInfo().status());
        Assertions.assertEquals("dqlvhukoveof", model.extendedInfo().nodesList().get(0).nodeName());
        Assertions.assertEquals("rvjfnmjmvlw", model.extendedInfo().nodesList().get(0).status());
        Assertions.assertEquals(WorkloadType.SHAREPOINT, model.workloadType());
        Assertions.assertEquals(OperationType.REREGISTER, model.operationType());
    }
}
