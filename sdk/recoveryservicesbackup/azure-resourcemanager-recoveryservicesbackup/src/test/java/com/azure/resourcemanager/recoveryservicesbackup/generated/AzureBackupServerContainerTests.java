// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.AzureBackupServerContainer;
import com.azure.resourcemanager.recoveryservicesbackup.models.BackupManagementType;
import com.azure.resourcemanager.recoveryservicesbackup.models.DpmContainerExtendedInfo;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class AzureBackupServerContainerTests {
    @Test
    public void testDeserialize() {
        AzureBackupServerContainer model =
            BinaryData
                .fromString(
                    "{\"containerType\":\"AzureBackupServerContainer\",\"canReRegister\":false,\"containerId\":\"hxuicbuewmrs\",\"protectedItemCount\":5368403589308605002,\"dpmAgentVersion\":\"uzrhwpusxjbaqe\",\"dpmServers\":[\"dohzjq\"],\"upgradeAvailable\":false,\"protectionStatus\":\"o\",\"extendedInfo\":{\"lastRefreshedAt\":\"2021-09-17T17:00:52Z\"},\"friendlyName\":\"ncnwfepbnwgf\",\"backupManagementType\":\"AzureBackupServer\",\"registrationStatus\":\"cgbjbgdlfgt\",\"healthStatus\":\"snaquf\",\"protectableObjectType\":\"bctqhamzjrwd\"}")
                .toObject(AzureBackupServerContainer.class);
        Assertions.assertEquals("ncnwfepbnwgf", model.friendlyName());
        Assertions.assertEquals(BackupManagementType.AZURE_BACKUP_SERVER, model.backupManagementType());
        Assertions.assertEquals("cgbjbgdlfgt", model.registrationStatus());
        Assertions.assertEquals("snaquf", model.healthStatus());
        Assertions.assertEquals("bctqhamzjrwd", model.protectableObjectType());
        Assertions.assertEquals(false, model.canReRegister());
        Assertions.assertEquals("hxuicbuewmrs", model.containerId());
        Assertions.assertEquals(5368403589308605002L, model.protectedItemCount());
        Assertions.assertEquals("uzrhwpusxjbaqe", model.dpmAgentVersion());
        Assertions.assertEquals("dohzjq", model.dpmServers().get(0));
        Assertions.assertEquals(false, model.upgradeAvailable());
        Assertions.assertEquals("o", model.protectionStatus());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-17T17:00:52Z"), model.extendedInfo().lastRefreshedAt());
    }

    @Test
    public void testSerialize() {
        AzureBackupServerContainer model =
            new AzureBackupServerContainer()
                .withFriendlyName("ncnwfepbnwgf")
                .withBackupManagementType(BackupManagementType.AZURE_BACKUP_SERVER)
                .withRegistrationStatus("cgbjbgdlfgt")
                .withHealthStatus("snaquf")
                .withProtectableObjectType("bctqhamzjrwd")
                .withCanReRegister(false)
                .withContainerId("hxuicbuewmrs")
                .withProtectedItemCount(5368403589308605002L)
                .withDpmAgentVersion("uzrhwpusxjbaqe")
                .withDpmServers(Arrays.asList("dohzjq"))
                .withUpgradeAvailable(false)
                .withProtectionStatus("o")
                .withExtendedInfo(
                    new DpmContainerExtendedInfo().withLastRefreshedAt(OffsetDateTime.parse("2021-09-17T17:00:52Z")));
        model = BinaryData.fromObject(model).toObject(AzureBackupServerContainer.class);
        Assertions.assertEquals("ncnwfepbnwgf", model.friendlyName());
        Assertions.assertEquals(BackupManagementType.AZURE_BACKUP_SERVER, model.backupManagementType());
        Assertions.assertEquals("cgbjbgdlfgt", model.registrationStatus());
        Assertions.assertEquals("snaquf", model.healthStatus());
        Assertions.assertEquals("bctqhamzjrwd", model.protectableObjectType());
        Assertions.assertEquals(false, model.canReRegister());
        Assertions.assertEquals("hxuicbuewmrs", model.containerId());
        Assertions.assertEquals(5368403589308605002L, model.protectedItemCount());
        Assertions.assertEquals("uzrhwpusxjbaqe", model.dpmAgentVersion());
        Assertions.assertEquals("dohzjq", model.dpmServers().get(0));
        Assertions.assertEquals(false, model.upgradeAvailable());
        Assertions.assertEquals("o", model.protectionStatus());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-17T17:00:52Z"), model.extendedInfo().lastRefreshedAt());
    }
}
