// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.AzureBackupServerContainer;
import com.azure.resourcemanager.recoveryservicesbackup.models.BackupManagementType;
import com.azure.resourcemanager.recoveryservicesbackup.models.DpmContainerExtendedInfo;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AzureBackupServerContainerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureBackupServerContainer model =
            BinaryData
                .fromString(
                    "{\"containerType\":\"AzureBackupServerContainer\",\"canReRegister\":true,\"containerId\":\"u\",\"protectedItemCount\":3928336746922164114,\"dpmAgentVersion\":\"wklsnoxaxmqe\",\"dpmServers\":[\"h\",\"jnhgwydyyn\"],\"upgradeAvailable\":false,\"protectionStatus\":\"hgbvqtan\",\"extendedInfo\":{\"lastRefreshedAt\":\"2021-06-21T20:42:17Z\"},\"friendlyName\":\"pukhpyrne\",\"backupManagementType\":\"AzureIaasVM\",\"registrationStatus\":\"pe\",\"healthStatus\":\"khnmgbrou\",\"protectableObjectType\":\"dbhfhp\"}")
                .toObject(AzureBackupServerContainer.class);
        Assertions.assertEquals("pukhpyrne", model.friendlyName());
        Assertions.assertEquals(BackupManagementType.AZURE_IAAS_VM, model.backupManagementType());
        Assertions.assertEquals("pe", model.registrationStatus());
        Assertions.assertEquals("khnmgbrou", model.healthStatus());
        Assertions.assertEquals("dbhfhp", model.protectableObjectType());
        Assertions.assertEquals(true, model.canReRegister());
        Assertions.assertEquals("u", model.containerId());
        Assertions.assertEquals(3928336746922164114L, model.protectedItemCount());
        Assertions.assertEquals("wklsnoxaxmqe", model.dpmAgentVersion());
        Assertions.assertEquals("h", model.dpmServers().get(0));
        Assertions.assertEquals(false, model.upgradeAvailable());
        Assertions.assertEquals("hgbvqtan", model.protectionStatus());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-21T20:42:17Z"), model.extendedInfo().lastRefreshedAt());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureBackupServerContainer model =
            new AzureBackupServerContainer()
                .withFriendlyName("pukhpyrne")
                .withBackupManagementType(BackupManagementType.AZURE_IAAS_VM)
                .withRegistrationStatus("pe")
                .withHealthStatus("khnmgbrou")
                .withProtectableObjectType("dbhfhp")
                .withCanReRegister(true)
                .withContainerId("u")
                .withProtectedItemCount(3928336746922164114L)
                .withDpmAgentVersion("wklsnoxaxmqe")
                .withDpmServers(Arrays.asList("h", "jnhgwydyyn"))
                .withUpgradeAvailable(false)
                .withProtectionStatus("hgbvqtan")
                .withExtendedInfo(
                    new DpmContainerExtendedInfo().withLastRefreshedAt(OffsetDateTime.parse("2021-06-21T20:42:17Z")));
        model = BinaryData.fromObject(model).toObject(AzureBackupServerContainer.class);
        Assertions.assertEquals("pukhpyrne", model.friendlyName());
        Assertions.assertEquals(BackupManagementType.AZURE_IAAS_VM, model.backupManagementType());
        Assertions.assertEquals("pe", model.registrationStatus());
        Assertions.assertEquals("khnmgbrou", model.healthStatus());
        Assertions.assertEquals("dbhfhp", model.protectableObjectType());
        Assertions.assertEquals(true, model.canReRegister());
        Assertions.assertEquals("u", model.containerId());
        Assertions.assertEquals(3928336746922164114L, model.protectedItemCount());
        Assertions.assertEquals("wklsnoxaxmqe", model.dpmAgentVersion());
        Assertions.assertEquals("h", model.dpmServers().get(0));
        Assertions.assertEquals(false, model.upgradeAvailable());
        Assertions.assertEquals("hgbvqtan", model.protectionStatus());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-21T20:42:17Z"), model.extendedInfo().lastRefreshedAt());
    }
}
