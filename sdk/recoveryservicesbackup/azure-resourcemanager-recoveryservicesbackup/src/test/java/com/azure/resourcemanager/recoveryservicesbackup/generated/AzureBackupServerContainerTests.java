// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.AzureBackupServerContainer;
import com.azure.resourcemanager.recoveryservicesbackup.models.BackupManagementType;
import com.azure.resourcemanager.recoveryservicesbackup.models.DpmContainerExtendedInfo;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AzureBackupServerContainerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureBackupServerContainer model = BinaryData.fromString(
            "{\"containerType\":\"AzureBackupServerContainer\",\"canReRegister\":false,\"containerId\":\"irwgdnqzbrf\",\"protectedItemCount\":4076756726294180282,\"dpmAgentVersion\":\"zmtksjci\",\"dpmServers\":[\"gsxcdgljplkeua\",\"htomflrytswfp\",\"mdgycxn\"],\"upgradeAvailable\":false,\"protectionStatus\":\"hqjjys\",\"extendedInfo\":{\"lastRefreshedAt\":\"2020-12-27T12:35:27Z\"},\"friendlyName\":\"shhkvpedw\",\"backupManagementType\":\"AzureWorkload\",\"registrationStatus\":\"rhmpqvwwsk\",\"healthStatus\":\"dcbrwimuvq\",\"protectableObjectType\":\"osovyrrleaesin\"}")
            .toObject(AzureBackupServerContainer.class);
        Assertions.assertEquals("shhkvpedw", model.friendlyName());
        Assertions.assertEquals(BackupManagementType.AZURE_WORKLOAD, model.backupManagementType());
        Assertions.assertEquals("rhmpqvwwsk", model.registrationStatus());
        Assertions.assertEquals("dcbrwimuvq", model.healthStatus());
        Assertions.assertEquals("osovyrrleaesin", model.protectableObjectType());
        Assertions.assertEquals(false, model.canReRegister());
        Assertions.assertEquals("irwgdnqzbrf", model.containerId());
        Assertions.assertEquals(4076756726294180282L, model.protectedItemCount());
        Assertions.assertEquals("zmtksjci", model.dpmAgentVersion());
        Assertions.assertEquals("gsxcdgljplkeua", model.dpmServers().get(0));
        Assertions.assertEquals(false, model.upgradeAvailable());
        Assertions.assertEquals("hqjjys", model.protectionStatus());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-27T12:35:27Z"), model.extendedInfo().lastRefreshedAt());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureBackupServerContainer model = new AzureBackupServerContainer().withFriendlyName("shhkvpedw")
            .withBackupManagementType(BackupManagementType.AZURE_WORKLOAD)
            .withRegistrationStatus("rhmpqvwwsk")
            .withHealthStatus("dcbrwimuvq")
            .withProtectableObjectType("osovyrrleaesin")
            .withCanReRegister(false)
            .withContainerId("irwgdnqzbrf")
            .withProtectedItemCount(4076756726294180282L)
            .withDpmAgentVersion("zmtksjci")
            .withDpmServers(Arrays.asList("gsxcdgljplkeua", "htomflrytswfp", "mdgycxn"))
            .withUpgradeAvailable(false)
            .withProtectionStatus("hqjjys")
            .withExtendedInfo(
                new DpmContainerExtendedInfo().withLastRefreshedAt(OffsetDateTime.parse("2020-12-27T12:35:27Z")));
        model = BinaryData.fromObject(model).toObject(AzureBackupServerContainer.class);
        Assertions.assertEquals("shhkvpedw", model.friendlyName());
        Assertions.assertEquals(BackupManagementType.AZURE_WORKLOAD, model.backupManagementType());
        Assertions.assertEquals("rhmpqvwwsk", model.registrationStatus());
        Assertions.assertEquals("dcbrwimuvq", model.healthStatus());
        Assertions.assertEquals("osovyrrleaesin", model.protectableObjectType());
        Assertions.assertEquals(false, model.canReRegister());
        Assertions.assertEquals("irwgdnqzbrf", model.containerId());
        Assertions.assertEquals(4076756726294180282L, model.protectedItemCount());
        Assertions.assertEquals("zmtksjci", model.dpmAgentVersion());
        Assertions.assertEquals("gsxcdgljplkeua", model.dpmServers().get(0));
        Assertions.assertEquals(false, model.upgradeAvailable());
        Assertions.assertEquals("hqjjys", model.protectionStatus());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-27T12:35:27Z"), model.extendedInfo().lastRefreshedAt());
    }
}
