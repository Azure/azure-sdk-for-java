// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.AzureBackupServerContainer;
import com.azure.resourcemanager.recoveryservicesbackup.models.BackupManagementType;
import com.azure.resourcemanager.recoveryservicesbackup.models.DpmContainerExtendedInfo;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AzureBackupServerContainerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureBackupServerContainer model = BinaryData.fromString(
            "{\"containerType\":\"AzureBackupServerContainer\",\"canReRegister\":true,\"containerId\":\"xsi\",\"protectedItemCount\":3239466388694248428,\"dpmAgentVersion\":\"bebjfu\",\"dpmServers\":[\"oichdlpnfpubnt\",\"batzviqsows\",\"aelcat\",\"cjuhplrvkm\"],\"upgradeAvailable\":false,\"protectionStatus\":\"jvlgfggcvkyyliz\",\"extendedInfo\":{\"lastRefreshedAt\":\"2021-07-07T04:53:59Z\"},\"friendlyName\":\"sfxsf\",\"backupManagementType\":\"MAB\",\"registrationStatus\":\"vtmva\",\"healthStatus\":\"w\",\"protectableObjectType\":\"qlvh\"}")
            .toObject(AzureBackupServerContainer.class);
        Assertions.assertEquals("sfxsf", model.friendlyName());
        Assertions.assertEquals(BackupManagementType.MAB, model.backupManagementType());
        Assertions.assertEquals("vtmva", model.registrationStatus());
        Assertions.assertEquals("w", model.healthStatus());
        Assertions.assertEquals("qlvh", model.protectableObjectType());
        Assertions.assertEquals(true, model.canReRegister());
        Assertions.assertEquals("xsi", model.containerId());
        Assertions.assertEquals(3239466388694248428L, model.protectedItemCount());
        Assertions.assertEquals("bebjfu", model.dpmAgentVersion());
        Assertions.assertEquals("oichdlpnfpubnt", model.dpmServers().get(0));
        Assertions.assertEquals(false, model.upgradeAvailable());
        Assertions.assertEquals("jvlgfggcvkyyliz", model.protectionStatus());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-07T04:53:59Z"), model.extendedInfo().lastRefreshedAt());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureBackupServerContainer model = new AzureBackupServerContainer().withFriendlyName("sfxsf")
            .withBackupManagementType(BackupManagementType.MAB)
            .withRegistrationStatus("vtmva")
            .withHealthStatus("w")
            .withProtectableObjectType("qlvh")
            .withCanReRegister(true)
            .withContainerId("xsi")
            .withProtectedItemCount(3239466388694248428L)
            .withDpmAgentVersion("bebjfu")
            .withDpmServers(Arrays.asList("oichdlpnfpubnt", "batzviqsows", "aelcat", "cjuhplrvkm"))
            .withUpgradeAvailable(false)
            .withProtectionStatus("jvlgfggcvkyyliz")
            .withExtendedInfo(
                new DpmContainerExtendedInfo().withLastRefreshedAt(OffsetDateTime.parse("2021-07-07T04:53:59Z")));
        model = BinaryData.fromObject(model).toObject(AzureBackupServerContainer.class);
        Assertions.assertEquals("sfxsf", model.friendlyName());
        Assertions.assertEquals(BackupManagementType.MAB, model.backupManagementType());
        Assertions.assertEquals("vtmva", model.registrationStatus());
        Assertions.assertEquals("w", model.healthStatus());
        Assertions.assertEquals("qlvh", model.protectableObjectType());
        Assertions.assertEquals(true, model.canReRegister());
        Assertions.assertEquals("xsi", model.containerId());
        Assertions.assertEquals(3239466388694248428L, model.protectedItemCount());
        Assertions.assertEquals("bebjfu", model.dpmAgentVersion());
        Assertions.assertEquals("oichdlpnfpubnt", model.dpmServers().get(0));
        Assertions.assertEquals(false, model.upgradeAvailable());
        Assertions.assertEquals("jvlgfggcvkyyliz", model.protectionStatus());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-07T04:53:59Z"), model.extendedInfo().lastRefreshedAt());
    }
}
