// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.AcquireStorageAccountLock;
import com.azure.resourcemanager.recoveryservicesbackup.models.AzureStorageContainer;
import com.azure.resourcemanager.recoveryservicesbackup.models.BackupManagementType;
import org.junit.jupiter.api.Assertions;

public final class AzureStorageContainerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureStorageContainer model = BinaryData.fromString(
            "{\"containerType\":\"StorageContainer\",\"sourceResourceId\":\"kjcjcaztbwsnsqow\",\"storageAccountVersion\":\"comlikytwvczc\",\"resourceGroup\":\"k\",\"protectedItemCount\":1765324007293876666,\"acquireStorageAccountLock\":\"NotAcquire\",\"friendlyName\":\"dvlvhbwrnfxtgdd\",\"backupManagementType\":\"Invalid\",\"registrationStatus\":\"ehnmnaoyankco\",\"healthStatus\":\"swankltytmh\",\"protectableObjectType\":\"oznnhdrlktgj\"}")
            .toObject(AzureStorageContainer.class);
        Assertions.assertEquals("dvlvhbwrnfxtgdd", model.friendlyName());
        Assertions.assertEquals(BackupManagementType.INVALID, model.backupManagementType());
        Assertions.assertEquals("ehnmnaoyankco", model.registrationStatus());
        Assertions.assertEquals("swankltytmh", model.healthStatus());
        Assertions.assertEquals("oznnhdrlktgj", model.protectableObjectType());
        Assertions.assertEquals("kjcjcaztbwsnsqow", model.sourceResourceId());
        Assertions.assertEquals("comlikytwvczc", model.storageAccountVersion());
        Assertions.assertEquals("k", model.resourceGroup());
        Assertions.assertEquals(1765324007293876666L, model.protectedItemCount());
        Assertions.assertEquals(AcquireStorageAccountLock.NOT_ACQUIRE, model.acquireStorageAccountLock());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureStorageContainer model = new AzureStorageContainer().withFriendlyName("dvlvhbwrnfxtgdd")
            .withBackupManagementType(BackupManagementType.INVALID).withRegistrationStatus("ehnmnaoyankco")
            .withHealthStatus("swankltytmh").withProtectableObjectType("oznnhdrlktgj")
            .withSourceResourceId("kjcjcaztbwsnsqow").withStorageAccountVersion("comlikytwvczc").withResourceGroup("k")
            .withProtectedItemCount(1765324007293876666L)
            .withAcquireStorageAccountLock(AcquireStorageAccountLock.NOT_ACQUIRE);
        model = BinaryData.fromObject(model).toObject(AzureStorageContainer.class);
        Assertions.assertEquals("dvlvhbwrnfxtgdd", model.friendlyName());
        Assertions.assertEquals(BackupManagementType.INVALID, model.backupManagementType());
        Assertions.assertEquals("ehnmnaoyankco", model.registrationStatus());
        Assertions.assertEquals("swankltytmh", model.healthStatus());
        Assertions.assertEquals("oznnhdrlktgj", model.protectableObjectType());
        Assertions.assertEquals("kjcjcaztbwsnsqow", model.sourceResourceId());
        Assertions.assertEquals("comlikytwvczc", model.storageAccountVersion());
        Assertions.assertEquals("k", model.resourceGroup());
        Assertions.assertEquals(1765324007293876666L, model.protectedItemCount());
        Assertions.assertEquals(AcquireStorageAccountLock.NOT_ACQUIRE, model.acquireStorageAccountLock());
    }
}
