// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.AcquireStorageAccountLock;
import com.azure.resourcemanager.recoveryservicesbackup.models.AzureStorageContainer;
import com.azure.resourcemanager.recoveryservicesbackup.models.BackupManagementType;
import org.junit.jupiter.api.Assertions;

public final class AzureStorageContainerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureStorageContainer model = BinaryData.fromString(
            "{\"containerType\":\"StorageContainer\",\"sourceResourceId\":\"bqgvgovpbbtte\",\"storageAccountVersion\":\"oknssqyzqedikdf\",\"resourceGroup\":\"biqmrjgei\",\"protectedItemCount\":7728759697884020161,\"acquireStorageAccountLock\":\"NotAcquire\",\"friendlyName\":\"fiwzcxmjpbyep\",\"backupManagementType\":\"MAB\",\"registrationStatus\":\"vljvrc\",\"healthStatus\":\"fqip\",\"protectableObjectType\":\"hnp\"}")
            .toObject(AzureStorageContainer.class);
        Assertions.assertEquals("fiwzcxmjpbyep", model.friendlyName());
        Assertions.assertEquals(BackupManagementType.MAB, model.backupManagementType());
        Assertions.assertEquals("vljvrc", model.registrationStatus());
        Assertions.assertEquals("fqip", model.healthStatus());
        Assertions.assertEquals("hnp", model.protectableObjectType());
        Assertions.assertEquals("bqgvgovpbbtte", model.sourceResourceId());
        Assertions.assertEquals("oknssqyzqedikdf", model.storageAccountVersion());
        Assertions.assertEquals("biqmrjgei", model.resourceGroup());
        Assertions.assertEquals(7728759697884020161L, model.protectedItemCount());
        Assertions.assertEquals(AcquireStorageAccountLock.NOT_ACQUIRE, model.acquireStorageAccountLock());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureStorageContainer model = new AzureStorageContainer().withFriendlyName("fiwzcxmjpbyep")
            .withBackupManagementType(BackupManagementType.MAB)
            .withRegistrationStatus("vljvrc")
            .withHealthStatus("fqip")
            .withProtectableObjectType("hnp")
            .withSourceResourceId("bqgvgovpbbtte")
            .withStorageAccountVersion("oknssqyzqedikdf")
            .withResourceGroup("biqmrjgei")
            .withProtectedItemCount(7728759697884020161L)
            .withAcquireStorageAccountLock(AcquireStorageAccountLock.NOT_ACQUIRE);
        model = BinaryData.fromObject(model).toObject(AzureStorageContainer.class);
        Assertions.assertEquals("fiwzcxmjpbyep", model.friendlyName());
        Assertions.assertEquals(BackupManagementType.MAB, model.backupManagementType());
        Assertions.assertEquals("vljvrc", model.registrationStatus());
        Assertions.assertEquals("fqip", model.healthStatus());
        Assertions.assertEquals("hnp", model.protectableObjectType());
        Assertions.assertEquals("bqgvgovpbbtte", model.sourceResourceId());
        Assertions.assertEquals("oknssqyzqedikdf", model.storageAccountVersion());
        Assertions.assertEquals("biqmrjgei", model.resourceGroup());
        Assertions.assertEquals(7728759697884020161L, model.protectedItemCount());
        Assertions.assertEquals(AcquireStorageAccountLock.NOT_ACQUIRE, model.acquireStorageAccountLock());
    }
}
