// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.AcquireStorageAccountLock;
import com.azure.resourcemanager.recoveryservicesbackup.models.AzureStorageContainer;
import com.azure.resourcemanager.recoveryservicesbackup.models.BackupManagementType;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class AzureStorageContainerTests {
    @Test
    public void testDeserialize() {
        AzureStorageContainer model =
            BinaryData
                .fromString(
                    "{\"containerType\":\"StorageContainer\",\"sourceResourceId\":\"mczjkm\",\"storageAccountVersion\":\"kyujxsglhsrrr\",\"resourceGroup\":\"jylmbkzudnigr\",\"protectedItemCount\":3830052019666326430,\"acquireStorageAccountLock\":\"NotAcquire\",\"friendlyName\":\"wlpxuzzjg\",\"backupManagementType\":\"Invalid\",\"registrationStatus\":\"qyhqo\",\"healthStatus\":\"ihiqakydiw\",\"protectableObjectType\":\"rkwpzdqtvhcspod\"}")
                .toObject(AzureStorageContainer.class);
        Assertions.assertEquals("wlpxuzzjg", model.friendlyName());
        Assertions.assertEquals(BackupManagementType.INVALID, model.backupManagementType());
        Assertions.assertEquals("qyhqo", model.registrationStatus());
        Assertions.assertEquals("ihiqakydiw", model.healthStatus());
        Assertions.assertEquals("rkwpzdqtvhcspod", model.protectableObjectType());
        Assertions.assertEquals("mczjkm", model.sourceResourceId());
        Assertions.assertEquals("kyujxsglhsrrr", model.storageAccountVersion());
        Assertions.assertEquals("jylmbkzudnigr", model.resourceGroup());
        Assertions.assertEquals(3830052019666326430L, model.protectedItemCount());
        Assertions.assertEquals(AcquireStorageAccountLock.NOT_ACQUIRE, model.acquireStorageAccountLock());
    }

    @Test
    public void testSerialize() {
        AzureStorageContainer model =
            new AzureStorageContainer()
                .withFriendlyName("wlpxuzzjg")
                .withBackupManagementType(BackupManagementType.INVALID)
                .withRegistrationStatus("qyhqo")
                .withHealthStatus("ihiqakydiw")
                .withProtectableObjectType("rkwpzdqtvhcspod")
                .withSourceResourceId("mczjkm")
                .withStorageAccountVersion("kyujxsglhsrrr")
                .withResourceGroup("jylmbkzudnigr")
                .withProtectedItemCount(3830052019666326430L)
                .withAcquireStorageAccountLock(AcquireStorageAccountLock.NOT_ACQUIRE);
        model = BinaryData.fromObject(model).toObject(AzureStorageContainer.class);
        Assertions.assertEquals("wlpxuzzjg", model.friendlyName());
        Assertions.assertEquals(BackupManagementType.INVALID, model.backupManagementType());
        Assertions.assertEquals("qyhqo", model.registrationStatus());
        Assertions.assertEquals("ihiqakydiw", model.healthStatus());
        Assertions.assertEquals("rkwpzdqtvhcspod", model.protectableObjectType());
        Assertions.assertEquals("mczjkm", model.sourceResourceId());
        Assertions.assertEquals("kyujxsglhsrrr", model.storageAccountVersion());
        Assertions.assertEquals("jylmbkzudnigr", model.resourceGroup());
        Assertions.assertEquals(3830052019666326430L, model.protectedItemCount());
        Assertions.assertEquals(AcquireStorageAccountLock.NOT_ACQUIRE, model.acquireStorageAccountLock());
    }
}
