// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.DayOfWeek;
import com.azure.resourcemanager.recoveryservicesbackup.models.RetentionDuration;
import com.azure.resourcemanager.recoveryservicesbackup.models.RetentionDurationType;
import com.azure.resourcemanager.recoveryservicesbackup.models.WeeklyRetentionSchedule;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class WeeklyRetentionScheduleTests {
    @Test
    public void testDeserialize() {
        WeeklyRetentionSchedule model =
            BinaryData
                .fromString(
                    "{\"daysOfTheWeek\":[\"Friday\",\"Friday\",\"Wednesday\"],\"retentionTimes\":[\"2021-04-12T22:42:56Z\",\"2021-07-13T11:30:30Z\",\"2021-10-26T11:31:47Z\",\"2021-03-10T09:25:33Z\"],\"retentionDuration\":{\"count\":1974888424,\"durationType\":\"Years\"}}")
                .toObject(WeeklyRetentionSchedule.class);
        Assertions.assertEquals(DayOfWeek.FRIDAY, model.daysOfTheWeek().get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-12T22:42:56Z"), model.retentionTimes().get(0));
        Assertions.assertEquals(1974888424, model.retentionDuration().count());
        Assertions.assertEquals(RetentionDurationType.YEARS, model.retentionDuration().durationType());
    }

    @Test
    public void testSerialize() {
        WeeklyRetentionSchedule model =
            new WeeklyRetentionSchedule()
                .withDaysOfTheWeek(Arrays.asList(DayOfWeek.FRIDAY, DayOfWeek.FRIDAY, DayOfWeek.WEDNESDAY))
                .withRetentionTimes(
                    Arrays
                        .asList(
                            OffsetDateTime.parse("2021-04-12T22:42:56Z"),
                            OffsetDateTime.parse("2021-07-13T11:30:30Z"),
                            OffsetDateTime.parse("2021-10-26T11:31:47Z"),
                            OffsetDateTime.parse("2021-03-10T09:25:33Z")))
                .withRetentionDuration(
                    new RetentionDuration().withCount(1974888424).withDurationType(RetentionDurationType.YEARS));
        model = BinaryData.fromObject(model).toObject(WeeklyRetentionSchedule.class);
        Assertions.assertEquals(DayOfWeek.FRIDAY, model.daysOfTheWeek().get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-12T22:42:56Z"), model.retentionTimes().get(0));
        Assertions.assertEquals(1974888424, model.retentionDuration().count());
        Assertions.assertEquals(RetentionDurationType.YEARS, model.retentionDuration().durationType());
    }
}
