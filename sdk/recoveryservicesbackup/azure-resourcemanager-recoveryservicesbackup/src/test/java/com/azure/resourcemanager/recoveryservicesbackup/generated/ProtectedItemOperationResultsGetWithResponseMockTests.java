// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.recoveryservicesbackup.RecoveryServicesBackupManager;
import com.azure.resourcemanager.recoveryservicesbackup.models.CreateMode;
import com.azure.resourcemanager.recoveryservicesbackup.models.ProtectedItemResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ProtectedItemOperationResultsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"protectedItemType\":\"ProtectedItem\",\"backupManagementType\":\"AzureIaasVM\",\"workloadType\":\"VM\",\"containerName\":\"bfcmkrfts\",\"sourceResourceId\":\"wjjxsgm\",\"policyId\":\"wvif\",\"lastRecoveryPoint\":\"2021-02-28T16:49:55Z\",\"backupSetName\":\"cifhocjxwkl\",\"createMode\":\"Recover\",\"deferredDeleteTimeInUTC\":\"2021-06-04T22:03:27Z\",\"isScheduledForDeferredDelete\":true,\"deferredDeleteTimeRemaining\":\"cmufunlcpxxv\",\"isDeferredDeleteScheduleUpcoming\":false,\"isRehydrate\":true,\"resourceGuardOperationRequests\":[\"jgvrquvpyggl\",\"mcrdcue\"],\"isArchiveEnabled\":false,\"policyName\":\"ahxm\",\"softDeleteRetentionPeriodInDays\":418950073,\"vaultId\":\"arvsx\"},\"eTag\":\"bglcjkayspthzodu\",\"location\":\"tl\",\"tags\":{\"djxyxgbkkqvjcteo\":\"gblioskkfmkm\",\"pxvjnzd\":\"dlrslskk\",\"pcnab\":\"vocoj\"},\"id\":\"zf\",\"name\":\"nggy\",\"type\":\"e\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        RecoveryServicesBackupManager manager = RecoveryServicesBackupManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ProtectedItemResource response = manager.protectedItemOperationResults()
            .getWithResponse("i", "hwu", "trdexyionofnin", "dbzsx", "wqqrsmpcbbprtuga", "bzbcyksiv",
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("tl", response.location());
        Assertions.assertEquals("gblioskkfmkm", response.tags().get("djxyxgbkkqvjcteo"));
        Assertions.assertEquals("bfcmkrfts", response.properties().containerName());
        Assertions.assertEquals("wjjxsgm", response.properties().sourceResourceId());
        Assertions.assertEquals("wvif", response.properties().policyId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-28T16:49:55Z"),
            response.properties().lastRecoveryPoint());
        Assertions.assertEquals("cifhocjxwkl", response.properties().backupSetName());
        Assertions.assertEquals(CreateMode.RECOVER, response.properties().createMode());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-04T22:03:27Z"),
            response.properties().deferredDeleteTimeInUtc());
        Assertions.assertEquals(true, response.properties().isScheduledForDeferredDelete());
        Assertions.assertEquals("cmufunlcpxxv", response.properties().deferredDeleteTimeRemaining());
        Assertions.assertEquals(false, response.properties().isDeferredDeleteScheduleUpcoming());
        Assertions.assertEquals(true, response.properties().isRehydrate());
        Assertions.assertEquals("jgvrquvpyggl", response.properties().resourceGuardOperationRequests().get(0));
        Assertions.assertEquals(false, response.properties().isArchiveEnabled());
        Assertions.assertEquals("ahxm", response.properties().policyName());
        Assertions.assertEquals(418950073, response.properties().softDeleteRetentionPeriod());
        Assertions.assertEquals("bglcjkayspthzodu", response.etag());
    }
}
