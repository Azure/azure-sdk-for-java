// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.CreateMode;
import com.azure.resourcemanager.recoveryservicesbackup.models.ProtectedItem;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ProtectedItemTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ProtectedItem model =
            BinaryData
                .fromString(
                    "{\"protectedItemType\":\"ProtectedItem\",\"backupManagementType\":\"AzureBackupServer\",\"workloadType\":\"SAPHanaDatabase\",\"containerName\":\"uo\",\"sourceResourceId\":\"skghsauuimj\",\"policyId\":\"xieduugidyjrr\",\"lastRecoveryPoint\":\"2021-04-30T20:35:21Z\",\"backupSetName\":\"osvexcsonpclhoc\",\"createMode\":\"Recover\",\"deferredDeleteTimeInUTC\":\"2021-02-22T17:02:03Z\",\"isScheduledForDeferredDelete\":true,\"deferredDeleteTimeRemaining\":\"eggzfb\",\"isDeferredDeleteScheduleUpcoming\":true,\"isRehydrate\":true,\"resourceGuardOperationRequests\":[\"x\",\"ffeii\"],\"isArchiveEnabled\":true,\"policyName\":\"m\",\"softDeleteRetentionPeriodInDays\":1857517478}")
                .toObject(ProtectedItem.class);
        Assertions.assertEquals("uo", model.containerName());
        Assertions.assertEquals("skghsauuimj", model.sourceResourceId());
        Assertions.assertEquals("xieduugidyjrr", model.policyId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-30T20:35:21Z"), model.lastRecoveryPoint());
        Assertions.assertEquals("osvexcsonpclhoc", model.backupSetName());
        Assertions.assertEquals(CreateMode.RECOVER, model.createMode());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-22T17:02:03Z"), model.deferredDeleteTimeInUtc());
        Assertions.assertEquals(true, model.isScheduledForDeferredDelete());
        Assertions.assertEquals("eggzfb", model.deferredDeleteTimeRemaining());
        Assertions.assertEquals(true, model.isDeferredDeleteScheduleUpcoming());
        Assertions.assertEquals(true, model.isRehydrate());
        Assertions.assertEquals("x", model.resourceGuardOperationRequests().get(0));
        Assertions.assertEquals(true, model.isArchiveEnabled());
        Assertions.assertEquals("m", model.policyName());
        Assertions.assertEquals(1857517478, model.softDeleteRetentionPeriod());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ProtectedItem model =
            new ProtectedItem()
                .withContainerName("uo")
                .withSourceResourceId("skghsauuimj")
                .withPolicyId("xieduugidyjrr")
                .withLastRecoveryPoint(OffsetDateTime.parse("2021-04-30T20:35:21Z"))
                .withBackupSetName("osvexcsonpclhoc")
                .withCreateMode(CreateMode.RECOVER)
                .withDeferredDeleteTimeInUtc(OffsetDateTime.parse("2021-02-22T17:02:03Z"))
                .withIsScheduledForDeferredDelete(true)
                .withDeferredDeleteTimeRemaining("eggzfb")
                .withIsDeferredDeleteScheduleUpcoming(true)
                .withIsRehydrate(true)
                .withResourceGuardOperationRequests(Arrays.asList("x", "ffeii"))
                .withIsArchiveEnabled(true)
                .withPolicyName("m")
                .withSoftDeleteRetentionPeriod(1857517478);
        model = BinaryData.fromObject(model).toObject(ProtectedItem.class);
        Assertions.assertEquals("uo", model.containerName());
        Assertions.assertEquals("skghsauuimj", model.sourceResourceId());
        Assertions.assertEquals("xieduugidyjrr", model.policyId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-30T20:35:21Z"), model.lastRecoveryPoint());
        Assertions.assertEquals("osvexcsonpclhoc", model.backupSetName());
        Assertions.assertEquals(CreateMode.RECOVER, model.createMode());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-22T17:02:03Z"), model.deferredDeleteTimeInUtc());
        Assertions.assertEquals(true, model.isScheduledForDeferredDelete());
        Assertions.assertEquals("eggzfb", model.deferredDeleteTimeRemaining());
        Assertions.assertEquals(true, model.isDeferredDeleteScheduleUpcoming());
        Assertions.assertEquals(true, model.isRehydrate());
        Assertions.assertEquals("x", model.resourceGuardOperationRequests().get(0));
        Assertions.assertEquals(true, model.isArchiveEnabled());
        Assertions.assertEquals("m", model.policyName());
        Assertions.assertEquals(1857517478, model.softDeleteRetentionPeriod());
    }
}
