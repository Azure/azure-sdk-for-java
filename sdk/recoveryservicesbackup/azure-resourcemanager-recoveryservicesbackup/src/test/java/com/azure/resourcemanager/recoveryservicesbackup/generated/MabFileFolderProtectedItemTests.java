// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.CreateMode;
import com.azure.resourcemanager.recoveryservicesbackup.models.MabFileFolderProtectedItem;
import com.azure.resourcemanager.recoveryservicesbackup.models.MabFileFolderProtectedItemExtendedInfo;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class MabFileFolderProtectedItemTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MabFileFolderProtectedItem model = BinaryData.fromString(
            "{\"protectedItemType\":\"MabFileFolderProtectedItem\",\"friendlyName\":\"crqctmxxdtddmflh\",\"computerName\":\"tx\",\"lastBackupStatus\":\"tznapxbannovv\",\"lastBackupTime\":\"2021-08-07T02:06:49Z\",\"protectionState\":\"ytprwnwvroev\",\"deferredDeleteSyncTimeInUTC\":714202887842253439,\"extendedInfo\":{\"lastRefreshedAt\":\"2021-06-10T18:55:52Z\",\"oldestRecoveryPoint\":\"2021-05-28T01:47:37Z\",\"recoveryPointCount\":1027800493},\"backupManagementType\":\"AzureBackupServer\",\"workloadType\":\"FileFolder\",\"containerName\":\"asbcrymodizrx\",\"sourceResourceId\":\"obdxnazpmkmlm\",\"policyId\":\"vfxzopjh\",\"lastRecoveryPoint\":\"2021-01-01T07:16:13Z\",\"backupSetName\":\"iohrdddtf\",\"createMode\":\"Recover\",\"deferredDeleteTimeInUTC\":\"2021-02-17T22:58:35Z\",\"isScheduledForDeferredDelete\":true,\"deferredDeleteTimeRemaining\":\"bbnz\",\"isDeferredDeleteScheduleUpcoming\":true,\"isRehydrate\":false,\"resourceGuardOperationRequests\":[\"qofyuicdhzbdy\"],\"isArchiveEnabled\":true,\"policyName\":\"bdvibidmhmwffpl\",\"softDeleteRetentionPeriodInDays\":150860449,\"vaultId\":\"apckccrrvw\"}")
            .toObject(MabFileFolderProtectedItem.class);
        Assertions.assertEquals("asbcrymodizrx", model.containerName());
        Assertions.assertEquals("obdxnazpmkmlm", model.sourceResourceId());
        Assertions.assertEquals("vfxzopjh", model.policyId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-01T07:16:13Z"), model.lastRecoveryPoint());
        Assertions.assertEquals("iohrdddtf", model.backupSetName());
        Assertions.assertEquals(CreateMode.RECOVER, model.createMode());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-17T22:58:35Z"), model.deferredDeleteTimeInUtc());
        Assertions.assertEquals(true, model.isScheduledForDeferredDelete());
        Assertions.assertEquals("bbnz", model.deferredDeleteTimeRemaining());
        Assertions.assertEquals(true, model.isDeferredDeleteScheduleUpcoming());
        Assertions.assertEquals(false, model.isRehydrate());
        Assertions.assertEquals("qofyuicdhzbdy", model.resourceGuardOperationRequests().get(0));
        Assertions.assertEquals(true, model.isArchiveEnabled());
        Assertions.assertEquals("bdvibidmhmwffpl", model.policyName());
        Assertions.assertEquals(150860449, model.softDeleteRetentionPeriod());
        Assertions.assertEquals("crqctmxxdtddmflh", model.friendlyName());
        Assertions.assertEquals("tx", model.computerName());
        Assertions.assertEquals("tznapxbannovv", model.lastBackupStatus());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-07T02:06:49Z"), model.lastBackupTime());
        Assertions.assertEquals("ytprwnwvroev", model.protectionState());
        Assertions.assertEquals(714202887842253439L, model.deferredDeleteSyncTimeInUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-10T18:55:52Z"), model.extendedInfo().lastRefreshedAt());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-28T01:47:37Z"),
            model.extendedInfo().oldestRecoveryPoint());
        Assertions.assertEquals(1027800493, model.extendedInfo().recoveryPointCount());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MabFileFolderProtectedItem model = new MabFileFolderProtectedItem().withContainerName("asbcrymodizrx")
            .withSourceResourceId("obdxnazpmkmlm")
            .withPolicyId("vfxzopjh")
            .withLastRecoveryPoint(OffsetDateTime.parse("2021-01-01T07:16:13Z"))
            .withBackupSetName("iohrdddtf")
            .withCreateMode(CreateMode.RECOVER)
            .withDeferredDeleteTimeInUtc(OffsetDateTime.parse("2021-02-17T22:58:35Z"))
            .withIsScheduledForDeferredDelete(true)
            .withDeferredDeleteTimeRemaining("bbnz")
            .withIsDeferredDeleteScheduleUpcoming(true)
            .withIsRehydrate(false)
            .withResourceGuardOperationRequests(Arrays.asList("qofyuicdhzbdy"))
            .withIsArchiveEnabled(true)
            .withPolicyName("bdvibidmhmwffpl")
            .withSoftDeleteRetentionPeriod(150860449)
            .withFriendlyName("crqctmxxdtddmflh")
            .withComputerName("tx")
            .withLastBackupStatus("tznapxbannovv")
            .withLastBackupTime(OffsetDateTime.parse("2021-08-07T02:06:49Z"))
            .withProtectionState("ytprwnwvroev")
            .withDeferredDeleteSyncTimeInUtc(714202887842253439L)
            .withExtendedInfo(new MabFileFolderProtectedItemExtendedInfo()
                .withLastRefreshedAt(OffsetDateTime.parse("2021-06-10T18:55:52Z"))
                .withOldestRecoveryPoint(OffsetDateTime.parse("2021-05-28T01:47:37Z"))
                .withRecoveryPointCount(1027800493));
        model = BinaryData.fromObject(model).toObject(MabFileFolderProtectedItem.class);
        Assertions.assertEquals("asbcrymodizrx", model.containerName());
        Assertions.assertEquals("obdxnazpmkmlm", model.sourceResourceId());
        Assertions.assertEquals("vfxzopjh", model.policyId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-01T07:16:13Z"), model.lastRecoveryPoint());
        Assertions.assertEquals("iohrdddtf", model.backupSetName());
        Assertions.assertEquals(CreateMode.RECOVER, model.createMode());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-17T22:58:35Z"), model.deferredDeleteTimeInUtc());
        Assertions.assertEquals(true, model.isScheduledForDeferredDelete());
        Assertions.assertEquals("bbnz", model.deferredDeleteTimeRemaining());
        Assertions.assertEquals(true, model.isDeferredDeleteScheduleUpcoming());
        Assertions.assertEquals(false, model.isRehydrate());
        Assertions.assertEquals("qofyuicdhzbdy", model.resourceGuardOperationRequests().get(0));
        Assertions.assertEquals(true, model.isArchiveEnabled());
        Assertions.assertEquals("bdvibidmhmwffpl", model.policyName());
        Assertions.assertEquals(150860449, model.softDeleteRetentionPeriod());
        Assertions.assertEquals("crqctmxxdtddmflh", model.friendlyName());
        Assertions.assertEquals("tx", model.computerName());
        Assertions.assertEquals("tznapxbannovv", model.lastBackupStatus());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-07T02:06:49Z"), model.lastBackupTime());
        Assertions.assertEquals("ytprwnwvroev", model.protectionState());
        Assertions.assertEquals(714202887842253439L, model.deferredDeleteSyncTimeInUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-10T18:55:52Z"), model.extendedInfo().lastRefreshedAt());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-28T01:47:37Z"),
            model.extendedInfo().oldestRecoveryPoint());
        Assertions.assertEquals(1027800493, model.extendedInfo().recoveryPointCount());
    }
}
