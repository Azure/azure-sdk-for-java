// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.CreateMode;
import com.azure.resourcemanager.recoveryservicesbackup.models.MabFileFolderProtectedItem;
import com.azure.resourcemanager.recoveryservicesbackup.models.MabFileFolderProtectedItemExtendedInfo;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class MabFileFolderProtectedItemTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MabFileFolderProtectedItem model =
            BinaryData
                .fromString(
                    "{\"protectedItemType\":\"MabFileFolderProtectedItem\",\"friendlyName\":\"vtiukyef\",\"computerName\":\"nmnahmnx\",\"lastBackupStatus\":\"xjqirwrweoox\",\"lastBackupTime\":\"2021-04-22T15:59:07Z\",\"protectionState\":\"hx\",\"deferredDeleteSyncTimeInUTC\":4577037755003653988,\"extendedInfo\":{\"lastRefreshedAt\":\"2021-07-05T01:58:34Z\",\"oldestRecoveryPoint\":\"2021-10-12T12:35:10Z\",\"recoveryPointCount\":146900605},\"backupManagementType\":\"Invalid\",\"workloadType\":\"SAPHanaDatabase\",\"containerName\":\"amhsycxhxzgazt\",\"sourceResourceId\":\"boi\",\"policyId\":\"mfqhppubowse\",\"lastRecoveryPoint\":\"2021-08-05T01:26:25Z\",\"backupSetName\":\"kmtdher\",\"createMode\":\"Recover\",\"deferredDeleteTimeInUTC\":\"2021-05-17T07:01:27Z\",\"isScheduledForDeferredDelete\":false,\"deferredDeleteTimeRemaining\":\"hokq\",\"isDeferredDeleteScheduleUpcoming\":false,\"isRehydrate\":true,\"resourceGuardOperationRequests\":[\"ofshfphwpnulaiyw\"],\"isArchiveEnabled\":false,\"policyName\":\"whslwkoj\",\"softDeleteRetentionPeriodInDays\":157420871}")
                .toObject(MabFileFolderProtectedItem.class);
        Assertions.assertEquals("amhsycxhxzgazt", model.containerName());
        Assertions.assertEquals("boi", model.sourceResourceId());
        Assertions.assertEquals("mfqhppubowse", model.policyId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-05T01:26:25Z"), model.lastRecoveryPoint());
        Assertions.assertEquals("kmtdher", model.backupSetName());
        Assertions.assertEquals(CreateMode.RECOVER, model.createMode());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-17T07:01:27Z"), model.deferredDeleteTimeInUtc());
        Assertions.assertEquals(false, model.isScheduledForDeferredDelete());
        Assertions.assertEquals("hokq", model.deferredDeleteTimeRemaining());
        Assertions.assertEquals(false, model.isDeferredDeleteScheduleUpcoming());
        Assertions.assertEquals(true, model.isRehydrate());
        Assertions.assertEquals("ofshfphwpnulaiyw", model.resourceGuardOperationRequests().get(0));
        Assertions.assertEquals(false, model.isArchiveEnabled());
        Assertions.assertEquals("whslwkoj", model.policyName());
        Assertions.assertEquals(157420871, model.softDeleteRetentionPeriod());
        Assertions.assertEquals("vtiukyef", model.friendlyName());
        Assertions.assertEquals("nmnahmnx", model.computerName());
        Assertions.assertEquals("xjqirwrweoox", model.lastBackupStatus());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-22T15:59:07Z"), model.lastBackupTime());
        Assertions.assertEquals("hx", model.protectionState());
        Assertions.assertEquals(4577037755003653988L, model.deferredDeleteSyncTimeInUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-05T01:58:34Z"), model.extendedInfo().lastRefreshedAt());
        Assertions
            .assertEquals(OffsetDateTime.parse("2021-10-12T12:35:10Z"), model.extendedInfo().oldestRecoveryPoint());
        Assertions.assertEquals(146900605, model.extendedInfo().recoveryPointCount());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MabFileFolderProtectedItem model =
            new MabFileFolderProtectedItem()
                .withContainerName("amhsycxhxzgazt")
                .withSourceResourceId("boi")
                .withPolicyId("mfqhppubowse")
                .withLastRecoveryPoint(OffsetDateTime.parse("2021-08-05T01:26:25Z"))
                .withBackupSetName("kmtdher")
                .withCreateMode(CreateMode.RECOVER)
                .withDeferredDeleteTimeInUtc(OffsetDateTime.parse("2021-05-17T07:01:27Z"))
                .withIsScheduledForDeferredDelete(false)
                .withDeferredDeleteTimeRemaining("hokq")
                .withIsDeferredDeleteScheduleUpcoming(false)
                .withIsRehydrate(true)
                .withResourceGuardOperationRequests(Arrays.asList("ofshfphwpnulaiyw"))
                .withIsArchiveEnabled(false)
                .withPolicyName("whslwkoj")
                .withSoftDeleteRetentionPeriod(157420871)
                .withFriendlyName("vtiukyef")
                .withComputerName("nmnahmnx")
                .withLastBackupStatus("xjqirwrweoox")
                .withLastBackupTime(OffsetDateTime.parse("2021-04-22T15:59:07Z"))
                .withProtectionState("hx")
                .withDeferredDeleteSyncTimeInUtc(4577037755003653988L)
                .withExtendedInfo(
                    new MabFileFolderProtectedItemExtendedInfo()
                        .withLastRefreshedAt(OffsetDateTime.parse("2021-07-05T01:58:34Z"))
                        .withOldestRecoveryPoint(OffsetDateTime.parse("2021-10-12T12:35:10Z"))
                        .withRecoveryPointCount(146900605));
        model = BinaryData.fromObject(model).toObject(MabFileFolderProtectedItem.class);
        Assertions.assertEquals("amhsycxhxzgazt", model.containerName());
        Assertions.assertEquals("boi", model.sourceResourceId());
        Assertions.assertEquals("mfqhppubowse", model.policyId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-05T01:26:25Z"), model.lastRecoveryPoint());
        Assertions.assertEquals("kmtdher", model.backupSetName());
        Assertions.assertEquals(CreateMode.RECOVER, model.createMode());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-17T07:01:27Z"), model.deferredDeleteTimeInUtc());
        Assertions.assertEquals(false, model.isScheduledForDeferredDelete());
        Assertions.assertEquals("hokq", model.deferredDeleteTimeRemaining());
        Assertions.assertEquals(false, model.isDeferredDeleteScheduleUpcoming());
        Assertions.assertEquals(true, model.isRehydrate());
        Assertions.assertEquals("ofshfphwpnulaiyw", model.resourceGuardOperationRequests().get(0));
        Assertions.assertEquals(false, model.isArchiveEnabled());
        Assertions.assertEquals("whslwkoj", model.policyName());
        Assertions.assertEquals(157420871, model.softDeleteRetentionPeriod());
        Assertions.assertEquals("vtiukyef", model.friendlyName());
        Assertions.assertEquals("nmnahmnx", model.computerName());
        Assertions.assertEquals("xjqirwrweoox", model.lastBackupStatus());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-22T15:59:07Z"), model.lastBackupTime());
        Assertions.assertEquals("hx", model.protectionState());
        Assertions.assertEquals(4577037755003653988L, model.deferredDeleteSyncTimeInUtc());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-05T01:58:34Z"), model.extendedInfo().lastRefreshedAt());
        Assertions
            .assertEquals(OffsetDateTime.parse("2021-10-12T12:35:10Z"), model.extendedInfo().oldestRecoveryPoint());
        Assertions.assertEquals(146900605, model.extendedInfo().recoveryPointCount());
    }
}
