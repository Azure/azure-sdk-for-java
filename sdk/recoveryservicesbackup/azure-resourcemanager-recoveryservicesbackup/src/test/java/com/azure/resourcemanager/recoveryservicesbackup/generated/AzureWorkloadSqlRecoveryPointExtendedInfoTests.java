// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.AzureWorkloadSqlRecoveryPointExtendedInfo;
import com.azure.resourcemanager.recoveryservicesbackup.models.SqlDataDirectory;
import com.azure.resourcemanager.recoveryservicesbackup.models.SqlDataDirectoryType;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AzureWorkloadSqlRecoveryPointExtendedInfoTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureWorkloadSqlRecoveryPointExtendedInfo model = BinaryData.fromString(
            "{\"dataDirectoryTimeInUTC\":\"2021-03-05T03:32:16Z\",\"dataDirectoryPaths\":[{\"type\":\"Invalid\",\"path\":\"dbevwqqxeysko\",\"logicalName\":\"zinkfkbgbzbowxeq\"},{\"type\":\"Invalid\",\"path\":\"mygvkzqkj\",\"logicalName\":\"okbzef\"},{\"type\":\"Log\",\"path\":\"cczurtlei\",\"logicalName\":\"xbkwv\"},{\"type\":\"Invalid\",\"path\":\"v\",\"logicalName\":\"bzdixzmq\"}]}")
            .toObject(AzureWorkloadSqlRecoveryPointExtendedInfo.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-05T03:32:16Z"), model.dataDirectoryTimeInUtc());
        Assertions.assertEquals(SqlDataDirectoryType.INVALID, model.dataDirectoryPaths().get(0).type());
        Assertions.assertEquals("dbevwqqxeysko", model.dataDirectoryPaths().get(0).path());
        Assertions.assertEquals("zinkfkbgbzbowxeq", model.dataDirectoryPaths().get(0).logicalName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureWorkloadSqlRecoveryPointExtendedInfo model = new AzureWorkloadSqlRecoveryPointExtendedInfo()
            .withDataDirectoryTimeInUtc(OffsetDateTime.parse("2021-03-05T03:32:16Z"))
            .withDataDirectoryPaths(Arrays.asList(
                new SqlDataDirectory().withType(SqlDataDirectoryType.INVALID)
                    .withPath("dbevwqqxeysko")
                    .withLogicalName("zinkfkbgbzbowxeq"),
                new SqlDataDirectory().withType(SqlDataDirectoryType.INVALID)
                    .withPath("mygvkzqkj")
                    .withLogicalName("okbzef"),
                new SqlDataDirectory().withType(SqlDataDirectoryType.LOG)
                    .withPath("cczurtlei")
                    .withLogicalName("xbkwv"),
                new SqlDataDirectory().withType(SqlDataDirectoryType.INVALID)
                    .withPath("v")
                    .withLogicalName("bzdixzmq")));
        model = BinaryData.fromObject(model).toObject(AzureWorkloadSqlRecoveryPointExtendedInfo.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-05T03:32:16Z"), model.dataDirectoryTimeInUtc());
        Assertions.assertEquals(SqlDataDirectoryType.INVALID, model.dataDirectoryPaths().get(0).type());
        Assertions.assertEquals("dbevwqqxeysko", model.dataDirectoryPaths().get(0).path());
        Assertions.assertEquals("zinkfkbgbzbowxeq", model.dataDirectoryPaths().get(0).logicalName());
    }
}
