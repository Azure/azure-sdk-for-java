// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.recoveryservicesbackup.RecoveryServicesBackupManager;
import com.azure.resourcemanager.recoveryservicesbackup.models.PrivateEndpointConnectionResource;
import com.azure.resourcemanager.recoveryservicesbackup.models.PrivateEndpointConnectionStatus;
import com.azure.resourcemanager.recoveryservicesbackup.models.ProvisioningState;
import com.azure.resourcemanager.recoveryservicesbackup.models.VaultSubResourceType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PrivateEndpointConnectionsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Deleting\",\"privateEndpoint\":{\"id\":\"zdcduwjoedxng\"},\"groupIds\":[\"AzureBackup_secondary\",\"AzureBackup_secondary\",\"AzureBackup_secondary\"],\"privateLinkServiceConnectionState\":{\"status\":\"Approved\",\"description\":\"wgilfjqqac\",\"actionsRequired\":\"kxwxdcvjwcyziake\"}},\"eTag\":\"qchxrtuic\",\"location\":\"siw\",\"tags\":{\"grpxncakiqaondjr\":\"mpzhzzwvywrgyngy\"},\"id\":\"clamgglvlmfejdoq\",\"name\":\"ykglt\",\"type\":\"gxhqfgqkayejs\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        RecoveryServicesBackupManager manager = RecoveryServicesBackupManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PrivateEndpointConnectionResource response = manager.privateEndpointConnections()
            .getWithResponse("nrzorpd", "tbqctqjfgx", "saetgzdgvpyig", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("siw", response.location());
        Assertions.assertEquals("mpzhzzwvywrgyngy", response.tags().get("grpxncakiqaondjr"));
        Assertions.assertEquals(ProvisioningState.DELETING, response.properties().provisioningState());
        Assertions.assertEquals("zdcduwjoedxng", response.properties().privateEndpoint().id());
        Assertions.assertEquals(VaultSubResourceType.AZURE_BACKUP_SECONDARY, response.properties().groupIds().get(0));
        Assertions.assertEquals(PrivateEndpointConnectionStatus.APPROVED,
            response.properties().privateLinkServiceConnectionState().status());
        Assertions.assertEquals("wgilfjqqac", response.properties().privateLinkServiceConnectionState().description());
        Assertions.assertEquals("kxwxdcvjwcyziake",
            response.properties().privateLinkServiceConnectionState().actionRequired());
        Assertions.assertEquals("qchxrtuic", response.etag());
    }
}
