// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.recoveryservicesbackup.RecoveryServicesBackupManager;
import com.azure.resourcemanager.recoveryservicesbackup.models.PrivateEndpointConnectionResource;
import com.azure.resourcemanager.recoveryservicesbackup.models.PrivateEndpointConnectionStatus;
import com.azure.resourcemanager.recoveryservicesbackup.models.ProvisioningState;
import com.azure.resourcemanager.recoveryservicesbackup.models.VaultSubResourceType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PrivateEndpointConnectionsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Failed\",\"privateEndpoint\":{\"id\":\"flqqbtnyjpylxd\"},\"groupIds\":[\"AzureBackup_secondary\"],\"privateLinkServiceConnectionState\":{\"status\":\"Disconnected\",\"description\":\"s\",\"actionsRequired\":\"aevwjcnkot\"}},\"eTag\":\"wuhvaj\",\"location\":\"ailfemjjzak\",\"tags\":{\"cm\":\"iqullqxbdmvr\",\"rkadjfynnfmuiiir\":\"erndbrnyeofltfnn\"},\"id\":\"pfoh\",\"name\":\"kfkxbbcbrwjiut\",\"type\":\"njizb\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        RecoveryServicesBackupManager manager = RecoveryServicesBackupManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PrivateEndpointConnectionResource response = manager.privateEndpointConnections()
            .getWithResponse("vop", "m", "uoqujlyeg", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("ailfemjjzak", response.location());
        Assertions.assertEquals("iqullqxbdmvr", response.tags().get("cm"));
        Assertions.assertEquals(ProvisioningState.FAILED, response.properties().provisioningState());
        Assertions.assertEquals("flqqbtnyjpylxd", response.properties().privateEndpoint().id());
        Assertions.assertEquals(VaultSubResourceType.AZURE_BACKUP_SECONDARY, response.properties().groupIds().get(0));
        Assertions.assertEquals(PrivateEndpointConnectionStatus.DISCONNECTED,
            response.properties().privateLinkServiceConnectionState().status());
        Assertions.assertEquals("s", response.properties().privateLinkServiceConnectionState().description());
        Assertions.assertEquals("aevwjcnkot",
            response.properties().privateLinkServiceConnectionState().actionRequired());
        Assertions.assertEquals("wuhvaj", response.etag());
    }
}
