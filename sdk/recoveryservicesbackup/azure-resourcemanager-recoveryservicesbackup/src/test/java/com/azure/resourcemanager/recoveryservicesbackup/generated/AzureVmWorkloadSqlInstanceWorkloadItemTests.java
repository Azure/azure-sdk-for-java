// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.AzureVmWorkloadSqlInstanceWorkloadItem;
import com.azure.resourcemanager.recoveryservicesbackup.models.ProtectionStatus;
import com.azure.resourcemanager.recoveryservicesbackup.models.SqlDataDirectory;
import com.azure.resourcemanager.recoveryservicesbackup.models.SqlDataDirectoryType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class AzureVmWorkloadSqlInstanceWorkloadItemTests {
    @Test
    public void testDeserialize() {
        AzureVmWorkloadSqlInstanceWorkloadItem model =
            BinaryData
                .fromString(
                    "{\"workloadItemType\":\"SQLInstance\",\"dataDirectoryPaths\":[{\"type\":\"Log\",\"path\":\"ku\",\"logicalName\":\"phavpmhbrb\"}],\"parentName\":\"vgovpbbttefjokn\",\"serverName\":\"qyzqedikdfrdb\",\"isAutoProtectable\":true,\"subinquireditemcount\":1170752971,\"subWorkloadItemCount\":1080219257,\"backupManagementType\":\"hfqlgg\",\"workloadType\":\"iwzcxmjpbyeph\",\"friendlyName\":\"t\",\"protectionState\":\"Protecting\"}")
                .toObject(AzureVmWorkloadSqlInstanceWorkloadItem.class);
        Assertions.assertEquals("hfqlgg", model.backupManagementType());
        Assertions.assertEquals("iwzcxmjpbyeph", model.workloadType());
        Assertions.assertEquals("t", model.friendlyName());
        Assertions.assertEquals(ProtectionStatus.PROTECTING, model.protectionState());
        Assertions.assertEquals("vgovpbbttefjokn", model.parentName());
        Assertions.assertEquals("qyzqedikdfrdb", model.serverName());
        Assertions.assertEquals(true, model.isAutoProtectable());
        Assertions.assertEquals(1170752971, model.subinquireditemcount());
        Assertions.assertEquals(1080219257, model.subWorkloadItemCount());
        Assertions.assertEquals(SqlDataDirectoryType.LOG, model.dataDirectoryPaths().get(0).type());
        Assertions.assertEquals("ku", model.dataDirectoryPaths().get(0).path());
        Assertions.assertEquals("phavpmhbrb", model.dataDirectoryPaths().get(0).logicalName());
    }

    @Test
    public void testSerialize() {
        AzureVmWorkloadSqlInstanceWorkloadItem model =
            new AzureVmWorkloadSqlInstanceWorkloadItem()
                .withBackupManagementType("hfqlgg")
                .withWorkloadType("iwzcxmjpbyeph")
                .withFriendlyName("t")
                .withProtectionState(ProtectionStatus.PROTECTING)
                .withParentName("vgovpbbttefjokn")
                .withServerName("qyzqedikdfrdb")
                .withIsAutoProtectable(true)
                .withSubinquireditemcount(1170752971)
                .withSubWorkloadItemCount(1080219257)
                .withDataDirectoryPaths(
                    Arrays
                        .asList(
                            new SqlDataDirectory()
                                .withType(SqlDataDirectoryType.LOG)
                                .withPath("ku")
                                .withLogicalName("phavpmhbrb")));
        model = BinaryData.fromObject(model).toObject(AzureVmWorkloadSqlInstanceWorkloadItem.class);
        Assertions.assertEquals("hfqlgg", model.backupManagementType());
        Assertions.assertEquals("iwzcxmjpbyeph", model.workloadType());
        Assertions.assertEquals("t", model.friendlyName());
        Assertions.assertEquals(ProtectionStatus.PROTECTING, model.protectionState());
        Assertions.assertEquals("vgovpbbttefjokn", model.parentName());
        Assertions.assertEquals("qyzqedikdfrdb", model.serverName());
        Assertions.assertEquals(true, model.isAutoProtectable());
        Assertions.assertEquals(1170752971, model.subinquireditemcount());
        Assertions.assertEquals(1080219257, model.subWorkloadItemCount());
        Assertions.assertEquals(SqlDataDirectoryType.LOG, model.dataDirectoryPaths().get(0).type());
        Assertions.assertEquals("ku", model.dataDirectoryPaths().get(0).path());
        Assertions.assertEquals("phavpmhbrb", model.dataDirectoryPaths().get(0).logicalName());
    }
}
