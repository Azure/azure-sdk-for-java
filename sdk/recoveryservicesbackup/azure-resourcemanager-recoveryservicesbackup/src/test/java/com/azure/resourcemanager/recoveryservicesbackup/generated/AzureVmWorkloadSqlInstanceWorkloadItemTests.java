// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.recoveryservicesbackup.models.AzureVmWorkloadSqlInstanceWorkloadItem;
import com.azure.resourcemanager.recoveryservicesbackup.models.ProtectionStatus;
import com.azure.resourcemanager.recoveryservicesbackup.models.SqlDataDirectory;
import com.azure.resourcemanager.recoveryservicesbackup.models.SqlDataDirectoryType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AzureVmWorkloadSqlInstanceWorkloadItemTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureVmWorkloadSqlInstanceWorkloadItem model = BinaryData.fromString(
            "{\"workloadItemType\":\"SQLInstance\",\"dataDirectoryPaths\":[{\"type\":\"Data\",\"path\":\"zbenribc\",\"logicalName\":\"etzqd\"},{\"type\":\"Log\",\"path\":\"fljhznamtua\",\"logicalName\":\"zwcjjncqtj\"},{\"type\":\"Log\",\"path\":\"vgbgatzuuvbxng\",\"logicalName\":\"bwggahtt\"},{\"type\":\"Data\",\"path\":\"v\",\"logicalName\":\"qfutlxjo\"}],\"parentName\":\"asunwqrjzfrgq\",\"serverName\":\"ohcmbu\",\"isAutoProtectable\":true,\"subinquireditemcount\":11989035,\"subWorkloadItemCount\":1578322360,\"backupManagementType\":\"bpyr\",\"workloadType\":\"ameb\",\"friendlyName\":\"dyvkfkmr\",\"protectionState\":\"Protecting\"}")
            .toObject(AzureVmWorkloadSqlInstanceWorkloadItem.class);
        Assertions.assertEquals("bpyr", model.backupManagementType());
        Assertions.assertEquals("ameb", model.workloadType());
        Assertions.assertEquals("dyvkfkmr", model.friendlyName());
        Assertions.assertEquals(ProtectionStatus.PROTECTING, model.protectionState());
        Assertions.assertEquals("asunwqrjzfrgq", model.parentName());
        Assertions.assertEquals("ohcmbu", model.serverName());
        Assertions.assertEquals(true, model.isAutoProtectable());
        Assertions.assertEquals(11989035, model.subinquireditemcount());
        Assertions.assertEquals(1578322360, model.subWorkloadItemCount());
        Assertions.assertEquals(SqlDataDirectoryType.DATA, model.dataDirectoryPaths().get(0).type());
        Assertions.assertEquals("zbenribc", model.dataDirectoryPaths().get(0).path());
        Assertions.assertEquals("etzqd", model.dataDirectoryPaths().get(0).logicalName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureVmWorkloadSqlInstanceWorkloadItem model = new AzureVmWorkloadSqlInstanceWorkloadItem()
            .withBackupManagementType("bpyr").withWorkloadType("ameb").withFriendlyName("dyvkfkmr")
            .withProtectionState(ProtectionStatus.PROTECTING).withParentName("asunwqrjzfrgq").withServerName("ohcmbu")
            .withIsAutoProtectable(true).withSubinquireditemcount(11989035).withSubWorkloadItemCount(1578322360)
            .withDataDirectoryPaths(Arrays.asList(
                new SqlDataDirectory().withType(SqlDataDirectoryType.DATA).withPath("zbenribc")
                    .withLogicalName("etzqd"),
                new SqlDataDirectory().withType(SqlDataDirectoryType.LOG).withPath("fljhznamtua")
                    .withLogicalName("zwcjjncqtj"),
                new SqlDataDirectory().withType(SqlDataDirectoryType.LOG).withPath("vgbgatzuuvbxng")
                    .withLogicalName("bwggahtt"),
                new SqlDataDirectory().withType(SqlDataDirectoryType.DATA).withPath("v").withLogicalName("qfutlxjo")));
        model = BinaryData.fromObject(model).toObject(AzureVmWorkloadSqlInstanceWorkloadItem.class);
        Assertions.assertEquals("bpyr", model.backupManagementType());
        Assertions.assertEquals("ameb", model.workloadType());
        Assertions.assertEquals("dyvkfkmr", model.friendlyName());
        Assertions.assertEquals(ProtectionStatus.PROTECTING, model.protectionState());
        Assertions.assertEquals("asunwqrjzfrgq", model.parentName());
        Assertions.assertEquals("ohcmbu", model.serverName());
        Assertions.assertEquals(true, model.isAutoProtectable());
        Assertions.assertEquals(11989035, model.subinquireditemcount());
        Assertions.assertEquals(1578322360, model.subWorkloadItemCount());
        Assertions.assertEquals(SqlDataDirectoryType.DATA, model.dataDirectoryPaths().get(0).type());
        Assertions.assertEquals("zbenribc", model.dataDirectoryPaths().get(0).path());
        Assertions.assertEquals("etzqd", model.dataDirectoryPaths().get(0).logicalName());
    }
}
