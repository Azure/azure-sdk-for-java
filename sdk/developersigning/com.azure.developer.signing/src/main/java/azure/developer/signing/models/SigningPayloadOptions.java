// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package azure.developer.signing.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.core.util.CoreUtils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * The artifact request information to be signed by the service.
 */
@Fluent
public final class SigningPayloadOptions {
    /*
     * The supported signature algorithm identifiers.
     */
    @Generated
    @JsonProperty(value = "signatureAlgorithm")
    private SignatureAlgorithm signatureAlgorithm;

    /*
     * Content digest to sign.
     */
    @Generated
    @JsonProperty(value = "digest")
    private byte[] digest;

    /*
     * List of full file digital signatures.
     */
    @Generated
    @JsonProperty(value = "fileHashList")
    private List<byte[]> fileHashList;

    /*
     * List of authenticode digital signatures.
     */
    @Generated
    @JsonProperty(value = "authenticodeHashList")
    private List<byte[]> authenticodeHashList;

    /**
     * Creates an instance of SigningPayloadOptions class.
     * 
     * @param signatureAlgorithm the signatureAlgorithm value to set.
     * @param digest the digest value to set.
     */
    @Generated
    @JsonCreator
    public SigningPayloadOptions(@JsonProperty(value = "signatureAlgorithm") SignatureAlgorithm signatureAlgorithm,
        @JsonProperty(value = "digest") byte[] digest) {
        this.signatureAlgorithm = signatureAlgorithm;
        this.digest = digest;
    }

    /**
     * Get the signatureAlgorithm property: The supported signature algorithm identifiers.
     * 
     * @return the signatureAlgorithm value.
     */
    @Generated
    public SignatureAlgorithm getSignatureAlgorithm() {
        return this.signatureAlgorithm;
    }

    /**
     * Get the digest property: Content digest to sign.
     * 
     * @return the digest value.
     */
    @Generated
    public byte[] getDigest() {
        return CoreUtils.clone(this.digest);
    }

    /**
     * Get the fileHashList property: List of full file digital signatures.
     * 
     * @return the fileHashList value.
     */
    @Generated
    public List<byte[]> getFileHashList() {
        return this.fileHashList;
    }

    /**
     * Set the fileHashList property: List of full file digital signatures.
     * 
     * @param fileHashList the fileHashList value to set.
     * @return the SigningPayloadOptions object itself.
     */
    @Generated
    public SigningPayloadOptions setFileHashList(List<byte[]> fileHashList) {
        this.fileHashList = fileHashList;
        return this;
    }

    /**
     * Get the authenticodeHashList property: List of authenticode digital signatures.
     * 
     * @return the authenticodeHashList value.
     */
    @Generated
    public List<byte[]> getAuthenticodeHashList() {
        return this.authenticodeHashList;
    }

    /**
     * Set the authenticodeHashList property: List of authenticode digital signatures.
     * 
     * @param authenticodeHashList the authenticodeHashList value to set.
     * @return the SigningPayloadOptions object itself.
     */
    @Generated
    public SigningPayloadOptions setAuthenticodeHashList(List<byte[]> authenticodeHashList) {
        this.authenticodeHashList = authenticodeHashList;
        return this;
    }
}
