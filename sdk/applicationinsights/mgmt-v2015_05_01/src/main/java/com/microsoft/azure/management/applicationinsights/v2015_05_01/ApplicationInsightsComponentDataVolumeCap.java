/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.applicationinsights.v2015_05_01;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * An Application Insights component daily data volume cap.
 */
public class ApplicationInsightsComponentDataVolumeCap {
    /**
     * Daily data volume cap in GB.
     */
    @JsonProperty(value = "Cap")
    private Double cap;

    /**
     * Daily data volume cap UTC reset hour.
     */
    @JsonProperty(value = "ResetTime", access = JsonProperty.Access.WRITE_ONLY)
    private Integer resetTime;

    /**
     * Reserved, not used for now.
     */
    @JsonProperty(value = "WarningThreshold")
    private Integer warningThreshold;

    /**
     * Reserved, not used for now.
     */
    @JsonProperty(value = "StopSendNotificationWhenHitThreshold")
    private Boolean stopSendNotificationWhenHitThreshold;

    /**
     * Do not send a notification email when the daily data volume cap is met.
     */
    @JsonProperty(value = "StopSendNotificationWhenHitCap")
    private Boolean stopSendNotificationWhenHitCap;

    /**
     * Maximum daily data volume cap that the user can set for this component.
     */
    @JsonProperty(value = "MaxHistoryCap", access = JsonProperty.Access.WRITE_ONLY)
    private Double maxHistoryCap;

    /**
     * Get daily data volume cap in GB.
     *
     * @return the cap value
     */
    public Double cap() {
        return this.cap;
    }

    /**
     * Set daily data volume cap in GB.
     *
     * @param cap the cap value to set
     * @return the ApplicationInsightsComponentDataVolumeCap object itself.
     */
    public ApplicationInsightsComponentDataVolumeCap withCap(Double cap) {
        this.cap = cap;
        return this;
    }

    /**
     * Get daily data volume cap UTC reset hour.
     *
     * @return the resetTime value
     */
    public Integer resetTime() {
        return this.resetTime;
    }

    /**
     * Get reserved, not used for now.
     *
     * @return the warningThreshold value
     */
    public Integer warningThreshold() {
        return this.warningThreshold;
    }

    /**
     * Set reserved, not used for now.
     *
     * @param warningThreshold the warningThreshold value to set
     * @return the ApplicationInsightsComponentDataVolumeCap object itself.
     */
    public ApplicationInsightsComponentDataVolumeCap withWarningThreshold(Integer warningThreshold) {
        this.warningThreshold = warningThreshold;
        return this;
    }

    /**
     * Get reserved, not used for now.
     *
     * @return the stopSendNotificationWhenHitThreshold value
     */
    public Boolean stopSendNotificationWhenHitThreshold() {
        return this.stopSendNotificationWhenHitThreshold;
    }

    /**
     * Set reserved, not used for now.
     *
     * @param stopSendNotificationWhenHitThreshold the stopSendNotificationWhenHitThreshold value to set
     * @return the ApplicationInsightsComponentDataVolumeCap object itself.
     */
    public ApplicationInsightsComponentDataVolumeCap withStopSendNotificationWhenHitThreshold(Boolean stopSendNotificationWhenHitThreshold) {
        this.stopSendNotificationWhenHitThreshold = stopSendNotificationWhenHitThreshold;
        return this;
    }

    /**
     * Get do not send a notification email when the daily data volume cap is met.
     *
     * @return the stopSendNotificationWhenHitCap value
     */
    public Boolean stopSendNotificationWhenHitCap() {
        return this.stopSendNotificationWhenHitCap;
    }

    /**
     * Set do not send a notification email when the daily data volume cap is met.
     *
     * @param stopSendNotificationWhenHitCap the stopSendNotificationWhenHitCap value to set
     * @return the ApplicationInsightsComponentDataVolumeCap object itself.
     */
    public ApplicationInsightsComponentDataVolumeCap withStopSendNotificationWhenHitCap(Boolean stopSendNotificationWhenHitCap) {
        this.stopSendNotificationWhenHitCap = stopSendNotificationWhenHitCap;
        return this;
    }

    /**
     * Get maximum daily data volume cap that the user can set for this component.
     *
     * @return the maxHistoryCap value
     */
    public Double maxHistoryCap() {
        return this.maxHistoryCap;
    }

}
