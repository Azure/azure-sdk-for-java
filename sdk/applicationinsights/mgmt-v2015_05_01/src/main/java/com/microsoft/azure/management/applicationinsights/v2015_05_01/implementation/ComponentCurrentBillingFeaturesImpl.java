/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * abc
 */

package com.microsoft.azure.management.applicationinsights.v2015_05_01.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.applicationinsights.v2015_05_01.ComponentCurrentBillingFeatures;
import rx.functions.Func1;
import rx.Observable;
import com.microsoft.azure.management.applicationinsights.v2015_05_01.ApplicationInsightsComponentBillingFeatures;

class ComponentCurrentBillingFeaturesImpl extends WrapperImpl<ComponentCurrentBillingFeaturesInner> implements ComponentCurrentBillingFeatures {
    private final InsightsManager manager;

    ComponentCurrentBillingFeaturesImpl(InsightsManager manager) {
        super(manager.inner().componentCurrentBillingFeatures());
        this.manager = manager;
    }

    public InsightsManager manager() {
        return this.manager;
    }

    @Override
    public Observable<ApplicationInsightsComponentBillingFeatures> getAsync(String resourceGroupName, String resourceName) {
        ComponentCurrentBillingFeaturesInner client = this.inner();
        return client.getAsync(resourceGroupName, resourceName)
        .map(new Func1<ApplicationInsightsComponentBillingFeaturesInner, ApplicationInsightsComponentBillingFeatures>() {
            @Override
            public ApplicationInsightsComponentBillingFeatures call(ApplicationInsightsComponentBillingFeaturesInner inner) {
                return new ApplicationInsightsComponentBillingFeaturesImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<ApplicationInsightsComponentBillingFeatures> updateAsync(String resourceGroupName, String resourceName, ApplicationInsightsComponentBillingFeaturesInner billingFeaturesProperties) {
        ComponentCurrentBillingFeaturesInner client = this.inner();
        return client.updateAsync(resourceGroupName, resourceName, billingFeaturesProperties)
        .map(new Func1<ApplicationInsightsComponentBillingFeaturesInner, ApplicationInsightsComponentBillingFeatures>() {
            @Override
            public ApplicationInsightsComponentBillingFeatures call(ApplicationInsightsComponentBillingFeaturesInner inner) {
                return new ApplicationInsightsComponentBillingFeaturesImpl(inner, manager());
            }
        });
    }

}
