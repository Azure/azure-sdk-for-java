/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.applicationinsights.v2015_05_01.implementation;

import com.microsoft.azure.arm.resources.models.implementation.GroupableResourceCoreImpl;
import com.microsoft.azure.management.applicationinsights.v2015_05_01.MyWorkbook;
import rx.Observable;
import com.microsoft.azure.management.applicationinsights.v2015_05_01.SharedTypeKind;
import java.util.List;

class MyWorkbookImpl extends GroupableResourceCoreImpl<MyWorkbook, MyWorkbookInner, MyWorkbookImpl, InsightsManager> implements MyWorkbook, MyWorkbook.Definition, MyWorkbook.Update {
    MyWorkbookImpl(String name, MyWorkbookInner inner, InsightsManager manager) {
        super(name, inner, manager);
    }

    @Override
    public Observable<MyWorkbook> createResourceAsync() {
        MyWorkbooksInner client = this.manager().inner().myWorkbooks();
        return client.createOrUpdateAsync(this.resourceGroupName(), this.name(), this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    public Observable<MyWorkbook> updateResourceAsync() {
        MyWorkbooksInner client = this.manager().inner().myWorkbooks();
        return client.updateAsync(this.resourceGroupName(), this.name(), this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<MyWorkbookInner> getInnerAsync() {
        MyWorkbooksInner client = this.manager().inner().myWorkbooks();
        return client.getByResourceGroupAsync(this.resourceGroupName(), this.name());
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }


    @Override
    public String category() {
        return this.inner().category();
    }

    @Override
    public String displayName() {
        return this.inner().displayName();
    }

    @Override
    public SharedTypeKind kind() {
        return this.inner().kind();
    }

    @Override
    public List<String> myWorkbookTags() {
        return this.inner().myWorkbookTags();
    }

    @Override
    public String serializedData() {
        return this.inner().serializedData();
    }

    @Override
    public String sourceId() {
        return this.inner().sourceId();
    }

    @Override
    public String timeModified() {
        return this.inner().timeModified();
    }

    @Override
    public String userId() {
        return this.inner().userId();
    }

    @Override
    public String version() {
        return this.inner().version();
    }

    @Override
    public MyWorkbookImpl withCategory(String category) {
        this.inner().withCategory(category);
        return this;
    }

    @Override
    public MyWorkbookImpl withDisplayName(String displayName) {
        this.inner().withDisplayName(displayName);
        return this;
    }

    @Override
    public MyWorkbookImpl withSerializedData(String serializedData) {
        this.inner().withSerializedData(serializedData);
        return this;
    }

    @Override
    public MyWorkbookImpl withKind(SharedTypeKind kind) {
        this.inner().withKind(kind);
        return this;
    }

    @Override
    public MyWorkbookImpl withMyWorkbookTags(List<String> myWorkbookTags) {
        this.inner().withMyWorkbookTags(myWorkbookTags);
        return this;
    }

    @Override
    public MyWorkbookImpl withSourceId(String sourceId) {
        this.inner().withSourceId(sourceId);
        return this;
    }

    @Override
    public MyWorkbookImpl withVersion(String version) {
        this.inner().withVersion(version);
        return this;
    }

}
