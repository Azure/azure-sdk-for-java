/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.applicationinsights.v2015_05_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.arm.resources.models.Resource;
import com.microsoft.azure.arm.resources.models.GroupableResourceCore;
import com.microsoft.azure.arm.resources.models.HasResourceGroup;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.applicationinsights.v2015_05_01.implementation.InsightsManager;
import java.util.List;
import com.microsoft.azure.management.applicationinsights.v2015_05_01.implementation.WorkbookInner;

/**
 * Type representing Workbook.
 */
public interface Workbook extends HasInner<WorkbookInner>, Resource, GroupableResourceCore<InsightsManager, WorkbookInner>, HasResourceGroup, Refreshable<Workbook>, Updatable<Workbook.Update>, HasManager<InsightsManager> {
    /**
     * @return the category value.
     */
    String category();

    /**
     * @return the kind value.
     */
    SharedTypeKind kind();

    /**
     * @return the serializedData value.
     */
    String serializedData();

    /**
     * @return the sharedTypeKind value.
     */
    SharedTypeKind sharedTypeKind();

    /**
     * @return the sourceResourceId value.
     */
    String sourceResourceId();

    /**
     * @return the timeModified value.
     */
    String timeModified();

    /**
     * @return the userId value.
     */
    String userId();

    /**
     * @return the version value.
     */
    String version();

    /**
     * @return the workbookId value.
     */
    String workbookId();

    /**
     * @return the workbookName value.
     */
    String workbookName();

    /**
     * @return the workbookTags value.
     */
    List<String> workbookTags();

    /**
     * The entirety of the Workbook definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithGroup, DefinitionStages.WithCategory, DefinitionStages.WithSerializedData, DefinitionStages.WithSharedTypeKind, DefinitionStages.WithUserId, DefinitionStages.WithWorkbookId, DefinitionStages.WithWorkbookName, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of Workbook definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a Workbook definition.
         */
        interface Blank extends GroupableResourceCore.DefinitionWithRegion<WithGroup> {
        }

        /**
         * The stage of the Workbook definition allowing to specify the resource group.
         */
        interface WithGroup extends GroupableResourceCore.DefinitionStages.WithGroup<WithCategory> {
        }

        /**
         * The stage of the workbook definition allowing to specify Category.
         */
        interface WithCategory {
           /**
            * Specifies category.
            * @param category Workbook category, as defined by the user at creation time
            * @return the next definition stage
*/
            WithSerializedData withCategory(String category);
        }

        /**
         * The stage of the workbook definition allowing to specify SerializedData.
         */
        interface WithSerializedData {
           /**
            * Specifies serializedData.
            * @param serializedData Configuration of this particular workbook. Configuration data is a string containing valid JSON
            * @return the next definition stage
*/
            WithSharedTypeKind withSerializedData(String serializedData);
        }

        /**
         * The stage of the workbook definition allowing to specify SharedTypeKind.
         */
        interface WithSharedTypeKind {
           /**
            * Specifies sharedTypeKind.
            * @param sharedTypeKind Enum indicating if this workbook definition is owned by a specific user or is shared between all users with access to the Application Insights component. Possible values include: 'user', 'shared'
            * @return the next definition stage
*/
            WithUserId withSharedTypeKind(SharedTypeKind sharedTypeKind);
        }

        /**
         * The stage of the workbook definition allowing to specify UserId.
         */
        interface WithUserId {
           /**
            * Specifies userId.
            * @param userId Unique user id of the specific user that owns this workbook
            * @return the next definition stage
*/
            WithWorkbookId withUserId(String userId);
        }

        /**
         * The stage of the workbook definition allowing to specify WorkbookId.
         */
        interface WithWorkbookId {
           /**
            * Specifies workbookId.
            * @param workbookId Internally assigned unique id of the workbook definition
            * @return the next definition stage
*/
            WithWorkbookName withWorkbookId(String workbookId);
        }

        /**
         * The stage of the workbook definition allowing to specify WorkbookName.
         */
        interface WithWorkbookName {
           /**
            * Specifies workbookName.
            * @param workbookName The user-defined name of the workbook
            * @return the next definition stage
*/
            WithCreate withWorkbookName(String workbookName);
        }

        /**
         * The stage of the workbook definition allowing to specify Kind.
         */
        interface WithKind {
            /**
             * Specifies kind.
             * @param kind The kind of workbook. Choices are user and shared. Possible values include: 'user', 'shared'
             * @return the next definition stage
             */
            WithCreate withKind(SharedTypeKind kind);
        }

        /**
         * The stage of the workbook definition allowing to specify SourceResourceId.
         */
        interface WithSourceResourceId {
            /**
             * Specifies sourceResourceId.
             * @param sourceResourceId Optional resourceId for a source resource
             * @return the next definition stage
             */
            WithCreate withSourceResourceId(String sourceResourceId);
        }

        /**
         * The stage of the workbook definition allowing to specify Version.
         */
        interface WithVersion {
            /**
             * Specifies version.
             * @param version This instance's version of the data model. This can change as new features are added that can be marked workbook
             * @return the next definition stage
             */
            WithCreate withVersion(String version);
        }

        /**
         * The stage of the workbook definition allowing to specify WorkbookTags.
         */
        interface WithWorkbookTags {
            /**
             * Specifies workbookTags.
             * @param workbookTags A list of 0 or more tags that are associated with this workbook definition
             * @return the next definition stage
             */
            WithCreate withWorkbookTags(List<String> workbookTags);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<Workbook>, Resource.DefinitionWithTags<WithCreate>, DefinitionStages.WithKind, DefinitionStages.WithSourceResourceId, DefinitionStages.WithVersion, DefinitionStages.WithWorkbookTags {
        }
    }
    /**
     * The template for a Workbook update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<Workbook>, Resource.UpdateWithTags<Update>, UpdateStages.WithKind, UpdateStages.WithSourceResourceId, UpdateStages.WithVersion, UpdateStages.WithWorkbookTags {
    }

    /**
     * Grouping of Workbook update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the workbook update allowing to specify Kind.
         */
        interface WithKind {
            /**
             * Specifies kind.
             * @param kind The kind of workbook. Choices are user and shared. Possible values include: 'user', 'shared'
             * @return the next update stage
             */
            Update withKind(SharedTypeKind kind);
        }

        /**
         * The stage of the workbook update allowing to specify SourceResourceId.
         */
        interface WithSourceResourceId {
            /**
             * Specifies sourceResourceId.
             * @param sourceResourceId Optional resourceId for a source resource
             * @return the next update stage
             */
            Update withSourceResourceId(String sourceResourceId);
        }

        /**
         * The stage of the workbook update allowing to specify Version.
         */
        interface WithVersion {
            /**
             * Specifies version.
             * @param version This instance's version of the data model. This can change as new features are added that can be marked workbook
             * @return the next update stage
             */
            Update withVersion(String version);
        }

        /**
         * The stage of the workbook update allowing to specify WorkbookTags.
         */
        interface WithWorkbookTags {
            /**
             * Specifies workbookTags.
             * @param workbookTags A list of 0 or more tags that are associated with this workbook definition
             * @return the next update stage
             */
            Update withWorkbookTags(List<String> workbookTags);
        }

    }
}
