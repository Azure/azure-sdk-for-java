/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.applicationinsights.v2015_05_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.arm.resources.models.Resource;
import com.microsoft.azure.arm.resources.models.GroupableResourceCore;
import com.microsoft.azure.arm.resources.models.HasResourceGroup;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.applicationinsights.v2015_05_01.implementation.InsightsManager;
import java.util.List;
import com.microsoft.azure.management.applicationinsights.v2015_05_01.implementation.MyWorkbookInner;

/**
 * Type representing MyWorkbook.
 */
public interface MyWorkbook extends HasInner<MyWorkbookInner>, Resource, GroupableResourceCore<InsightsManager, MyWorkbookInner>, HasResourceGroup, Refreshable<MyWorkbook>, Updatable<MyWorkbook.Update>, HasManager<InsightsManager> {
    /**
     * @return the category value.
     */
    String category();

    /**
     * @return the displayName value.
     */
    String displayName();

    /**
     * @return the kind value.
     */
    SharedTypeKind kind();

    /**
     * @return the myWorkbookTags value.
     */
    List<String> myWorkbookTags();

    /**
     * @return the serializedData value.
     */
    String serializedData();

    /**
     * @return the sourceId value.
     */
    String sourceId();

    /**
     * @return the timeModified value.
     */
    String timeModified();

    /**
     * @return the userId value.
     */
    String userId();

    /**
     * @return the version value.
     */
    String version();

    /**
     * The entirety of the MyWorkbook definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithGroup, DefinitionStages.WithCategory, DefinitionStages.WithDisplayName, DefinitionStages.WithSerializedData, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of MyWorkbook definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a MyWorkbook definition.
         */
        interface Blank extends GroupableResourceCore.DefinitionWithRegion<WithGroup> {
        }

        /**
         * The stage of the MyWorkbook definition allowing to specify the resource group.
         */
        interface WithGroup extends GroupableResourceCore.DefinitionStages.WithGroup<WithCategory> {
        }

        /**
         * The stage of the myworkbook definition allowing to specify Category.
         */
        interface WithCategory {
           /**
            * Specifies category.
            * @param category Workbook category, as defined by the user at creation time
            * @return the next definition stage
*/
            WithDisplayName withCategory(String category);
        }

        /**
         * The stage of the myworkbook definition allowing to specify DisplayName.
         */
        interface WithDisplayName {
           /**
            * Specifies displayName.
            * @param displayName The user-defined name of the private workbook
            * @return the next definition stage
*/
            WithSerializedData withDisplayName(String displayName);
        }

        /**
         * The stage of the myworkbook definition allowing to specify SerializedData.
         */
        interface WithSerializedData {
           /**
            * Specifies serializedData.
            * @param serializedData Configuration of this particular private workbook. Configuration data is a string containing valid JSON
            * @return the next definition stage
*/
            WithCreate withSerializedData(String serializedData);
        }

        /**
         * The stage of the myworkbook definition allowing to specify Kind.
         */
        interface WithKind {
            /**
             * Specifies kind.
             * @param kind The kind of workbook. Choices are user and shared. Possible values include: 'user', 'shared'
             * @return the next definition stage
             */
            WithCreate withKind(SharedTypeKind kind);
        }

        /**
         * The stage of the myworkbook definition allowing to specify MyWorkbookTags.
         */
        interface WithMyWorkbookTags {
            /**
             * Specifies myWorkbookTags.
             * @param myWorkbookTags A list of 0 or more tags that are associated with this private workbook definition
             * @return the next definition stage
             */
            WithCreate withMyWorkbookTags(List<String> myWorkbookTags);
        }

        /**
         * The stage of the myworkbook definition allowing to specify SourceId.
         */
        interface WithSourceId {
            /**
             * Specifies sourceId.
             * @param sourceId Optional resourceId for a source resource
             * @return the next definition stage
             */
            WithCreate withSourceId(String sourceId);
        }

        /**
         * The stage of the myworkbook definition allowing to specify Version.
         */
        interface WithVersion {
            /**
             * Specifies version.
             * @param version This instance's version of the data model. This can change as new features are added that can be marked private workbook
             * @return the next definition stage
             */
            WithCreate withVersion(String version);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<MyWorkbook>, Resource.DefinitionWithTags<WithCreate>, DefinitionStages.WithKind, DefinitionStages.WithMyWorkbookTags, DefinitionStages.WithSourceId, DefinitionStages.WithVersion {
        }
    }
    /**
     * The template for a MyWorkbook update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<MyWorkbook>, Resource.UpdateWithTags<Update>, UpdateStages.WithKind, UpdateStages.WithMyWorkbookTags, UpdateStages.WithSourceId, UpdateStages.WithVersion {
    }

    /**
     * Grouping of MyWorkbook update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the myworkbook update allowing to specify Kind.
         */
        interface WithKind {
            /**
             * Specifies kind.
             * @param kind The kind of workbook. Choices are user and shared. Possible values include: 'user', 'shared'
             * @return the next update stage
             */
            Update withKind(SharedTypeKind kind);
        }

        /**
         * The stage of the myworkbook update allowing to specify MyWorkbookTags.
         */
        interface WithMyWorkbookTags {
            /**
             * Specifies myWorkbookTags.
             * @param myWorkbookTags A list of 0 or more tags that are associated with this private workbook definition
             * @return the next update stage
             */
            Update withMyWorkbookTags(List<String> myWorkbookTags);
        }

        /**
         * The stage of the myworkbook update allowing to specify SourceId.
         */
        interface WithSourceId {
            /**
             * Specifies sourceId.
             * @param sourceId Optional resourceId for a source resource
             * @return the next update stage
             */
            Update withSourceId(String sourceId);
        }

        /**
         * The stage of the myworkbook update allowing to specify Version.
         */
        interface WithVersion {
            /**
             * Specifies version.
             * @param version This instance's version of the data model. This can change as new features are added that can be marked private workbook
             * @return the next update stage
             */
            Update withVersion(String version);
        }

    }
}
