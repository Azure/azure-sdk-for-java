/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.applicationinsights.v2015_05_01.implementation;

import com.microsoft.azure.management.applicationinsights.v2015_05_01.WorkItemConfiguration;
import com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl;
import rx.Observable;

class WorkItemConfigurationImpl extends IndexableRefreshableWrapperImpl<WorkItemConfiguration, WorkItemConfigurationInner> implements WorkItemConfiguration {
    private final InsightsManager manager;
    private String resourceGroupName;
    private String resourceName;
    private String workItemConfigId;

    WorkItemConfigurationImpl(WorkItemConfigurationInner inner,  InsightsManager manager) {
        super(null, inner);
        this.manager = manager;
        // set resource ancestor and positional variables
        this.resourceGroupName = IdParsingUtils.getValueFromIdByName(inner.id(), "resourceGroups");
        this.resourceName = IdParsingUtils.getValueFromIdByName(inner.id(), "components");
        this.workItemConfigId = IdParsingUtils.getValueFromIdByName(inner.id(), "WorkItemConfigs");
    }

    @Override
    public InsightsManager manager() {
        return this.manager;
    }

    @Override
    protected Observable<WorkItemConfigurationInner> getInnerAsync() {
        WorkItemConfigurationsInner client = this.manager().inner().workItemConfigurations();
        return client.getItemAsync(this.resourceGroupName, this.resourceName, this.workItemConfigId);
    }



    @Override
    public String configDisplayName() {
        return this.inner().configDisplayName();
    }

    @Override
    public String configProperties() {
        return this.inner().configProperties();
    }

    @Override
    public String connectorId() {
        return this.inner().connectorId();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public Boolean isDefault() {
        return this.inner().isDefault();
    }

}
