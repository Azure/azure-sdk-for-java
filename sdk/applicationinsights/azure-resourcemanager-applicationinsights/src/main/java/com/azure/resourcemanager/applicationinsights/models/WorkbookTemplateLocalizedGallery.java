// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.applicationinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Localized template data and gallery information.
 */
@Fluent
public final class WorkbookTemplateLocalizedGallery implements JsonSerializable<WorkbookTemplateLocalizedGallery> {
    /*
     * Valid JSON object containing workbook template payload.
     */
    private Object templateData;

    /*
     * Workbook galleries supported by the template.
     */
    private List<WorkbookTemplateGallery> galleries;

    /**
     * Creates an instance of WorkbookTemplateLocalizedGallery class.
     */
    public WorkbookTemplateLocalizedGallery() {
    }

    /**
     * Get the templateData property: Valid JSON object containing workbook template payload.
     * 
     * @return the templateData value.
     */
    public Object templateData() {
        return this.templateData;
    }

    /**
     * Set the templateData property: Valid JSON object containing workbook template payload.
     * 
     * @param templateData the templateData value to set.
     * @return the WorkbookTemplateLocalizedGallery object itself.
     */
    public WorkbookTemplateLocalizedGallery withTemplateData(Object templateData) {
        this.templateData = templateData;
        return this;
    }

    /**
     * Get the galleries property: Workbook galleries supported by the template.
     * 
     * @return the galleries value.
     */
    public List<WorkbookTemplateGallery> galleries() {
        return this.galleries;
    }

    /**
     * Set the galleries property: Workbook galleries supported by the template.
     * 
     * @param galleries the galleries value to set.
     * @return the WorkbookTemplateLocalizedGallery object itself.
     */
    public WorkbookTemplateLocalizedGallery withGalleries(List<WorkbookTemplateGallery> galleries) {
        this.galleries = galleries;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (galleries() != null) {
            galleries().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeUntypedField("templateData", this.templateData);
        jsonWriter.writeArrayField("galleries", this.galleries, (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of WorkbookTemplateLocalizedGallery from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of WorkbookTemplateLocalizedGallery if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the WorkbookTemplateLocalizedGallery.
     */
    public static WorkbookTemplateLocalizedGallery fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            WorkbookTemplateLocalizedGallery deserializedWorkbookTemplateLocalizedGallery
                = new WorkbookTemplateLocalizedGallery();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("templateData".equals(fieldName)) {
                    deserializedWorkbookTemplateLocalizedGallery.templateData = reader.readUntyped();
                } else if ("galleries".equals(fieldName)) {
                    List<WorkbookTemplateGallery> galleries
                        = reader.readArray(reader1 -> WorkbookTemplateGallery.fromJson(reader1));
                    deserializedWorkbookTemplateLocalizedGallery.galleries = galleries;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedWorkbookTemplateLocalizedGallery;
        });
    }
}
