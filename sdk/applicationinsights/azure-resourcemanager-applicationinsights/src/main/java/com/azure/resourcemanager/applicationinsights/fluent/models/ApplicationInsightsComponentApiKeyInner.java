// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.applicationinsights.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Properties that define an API key of an Application Insights Component.
 */
@Fluent
public final class ApplicationInsightsComponentApiKeyInner
    implements JsonSerializable<ApplicationInsightsComponentApiKeyInner> {
    /*
     * The unique ID of the API key inside an Application Insights component. It is auto generated when the API key is
     * created.
     */
    private String id;

    /*
     * The API key value. It will be only return once when the API Key was created.
     */
    private String apiKey;

    /*
     * The create date of this API key.
     */
    private String createdDate;

    /*
     * The name of the API key.
     */
    private String name;

    /*
     * The read access rights of this API Key.
     */
    private List<String> linkedReadProperties;

    /*
     * The write access rights of this API Key.
     */
    private List<String> linkedWriteProperties;

    /**
     * Creates an instance of ApplicationInsightsComponentApiKeyInner class.
     */
    public ApplicationInsightsComponentApiKeyInner() {
    }

    /**
     * Get the id property: The unique ID of the API key inside an Application Insights component. It is auto generated
     * when the API key is created.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Get the apiKey property: The API key value. It will be only return once when the API Key was created.
     * 
     * @return the apiKey value.
     */
    public String apiKey() {
        return this.apiKey;
    }

    /**
     * Get the createdDate property: The create date of this API key.
     * 
     * @return the createdDate value.
     */
    public String createdDate() {
        return this.createdDate;
    }

    /**
     * Set the createdDate property: The create date of this API key.
     * 
     * @param createdDate the createdDate value to set.
     * @return the ApplicationInsightsComponentApiKeyInner object itself.
     */
    public ApplicationInsightsComponentApiKeyInner withCreatedDate(String createdDate) {
        this.createdDate = createdDate;
        return this;
    }

    /**
     * Get the name property: The name of the API key.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: The name of the API key.
     * 
     * @param name the name value to set.
     * @return the ApplicationInsightsComponentApiKeyInner object itself.
     */
    public ApplicationInsightsComponentApiKeyInner withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the linkedReadProperties property: The read access rights of this API Key.
     * 
     * @return the linkedReadProperties value.
     */
    public List<String> linkedReadProperties() {
        return this.linkedReadProperties;
    }

    /**
     * Set the linkedReadProperties property: The read access rights of this API Key.
     * 
     * @param linkedReadProperties the linkedReadProperties value to set.
     * @return the ApplicationInsightsComponentApiKeyInner object itself.
     */
    public ApplicationInsightsComponentApiKeyInner withLinkedReadProperties(List<String> linkedReadProperties) {
        this.linkedReadProperties = linkedReadProperties;
        return this;
    }

    /**
     * Get the linkedWriteProperties property: The write access rights of this API Key.
     * 
     * @return the linkedWriteProperties value.
     */
    public List<String> linkedWriteProperties() {
        return this.linkedWriteProperties;
    }

    /**
     * Set the linkedWriteProperties property: The write access rights of this API Key.
     * 
     * @param linkedWriteProperties the linkedWriteProperties value to set.
     * @return the ApplicationInsightsComponentApiKeyInner object itself.
     */
    public ApplicationInsightsComponentApiKeyInner withLinkedWriteProperties(List<String> linkedWriteProperties) {
        this.linkedWriteProperties = linkedWriteProperties;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("createdDate", this.createdDate);
        jsonWriter.writeStringField("name", this.name);
        jsonWriter.writeArrayField("linkedReadProperties", this.linkedReadProperties,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeArrayField("linkedWriteProperties", this.linkedWriteProperties,
            (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ApplicationInsightsComponentApiKeyInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ApplicationInsightsComponentApiKeyInner if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ApplicationInsightsComponentApiKeyInner.
     */
    public static ApplicationInsightsComponentApiKeyInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ApplicationInsightsComponentApiKeyInner deserializedApplicationInsightsComponentApiKeyInner
                = new ApplicationInsightsComponentApiKeyInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedApplicationInsightsComponentApiKeyInner.id = reader.getString();
                } else if ("apiKey".equals(fieldName)) {
                    deserializedApplicationInsightsComponentApiKeyInner.apiKey = reader.getString();
                } else if ("createdDate".equals(fieldName)) {
                    deserializedApplicationInsightsComponentApiKeyInner.createdDate = reader.getString();
                } else if ("name".equals(fieldName)) {
                    deserializedApplicationInsightsComponentApiKeyInner.name = reader.getString();
                } else if ("linkedReadProperties".equals(fieldName)) {
                    List<String> linkedReadProperties = reader.readArray(reader1 -> reader1.getString());
                    deserializedApplicationInsightsComponentApiKeyInner.linkedReadProperties = linkedReadProperties;
                } else if ("linkedWriteProperties".equals(fieldName)) {
                    List<String> linkedWriteProperties = reader.readArray(reader1 -> reader1.getString());
                    deserializedApplicationInsightsComponentApiKeyInner.linkedWriteProperties = linkedWriteProperties;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedApplicationInsightsComponentApiKeyInner;
        });
    }
}
