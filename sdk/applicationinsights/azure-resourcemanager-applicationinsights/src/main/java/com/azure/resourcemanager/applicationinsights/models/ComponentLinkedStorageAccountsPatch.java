// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.applicationinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.applicationinsights.fluent.models.LinkedStorageAccountsProperties;
import java.io.IOException;

/**
 * An Application Insights component linked storage accounts patch.
 */
@Fluent
public final class ComponentLinkedStorageAccountsPatch
    implements JsonSerializable<ComponentLinkedStorageAccountsPatch> {
    /*
     * The properties of the linked storage accounts.
     */
    private LinkedStorageAccountsProperties innerProperties;

    /**
     * Creates an instance of ComponentLinkedStorageAccountsPatch class.
     */
    public ComponentLinkedStorageAccountsPatch() {
    }

    /**
     * Get the innerProperties property: The properties of the linked storage accounts.
     * 
     * @return the innerProperties value.
     */
    private LinkedStorageAccountsProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the linkedStorageAccount property: Linked storage account resource ID.
     * 
     * @return the linkedStorageAccount value.
     */
    public String linkedStorageAccount() {
        return this.innerProperties() == null ? null : this.innerProperties().linkedStorageAccount();
    }

    /**
     * Set the linkedStorageAccount property: Linked storage account resource ID.
     * 
     * @param linkedStorageAccount the linkedStorageAccount value to set.
     * @return the ComponentLinkedStorageAccountsPatch object itself.
     */
    public ComponentLinkedStorageAccountsPatch withLinkedStorageAccount(String linkedStorageAccount) {
        if (this.innerProperties() == null) {
            this.innerProperties = new LinkedStorageAccountsProperties();
        }
        this.innerProperties().withLinkedStorageAccount(linkedStorageAccount);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("properties", this.innerProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ComponentLinkedStorageAccountsPatch from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ComponentLinkedStorageAccountsPatch if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ComponentLinkedStorageAccountsPatch.
     */
    public static ComponentLinkedStorageAccountsPatch fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ComponentLinkedStorageAccountsPatch deserializedComponentLinkedStorageAccountsPatch
                = new ComponentLinkedStorageAccountsPatch();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("properties".equals(fieldName)) {
                    deserializedComponentLinkedStorageAccountsPatch.innerProperties
                        = LinkedStorageAccountsProperties.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedComponentLinkedStorageAccountsPatch;
        });
    }
}
