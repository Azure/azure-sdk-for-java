// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.applicationinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.Map;

/**
 * Work item configuration creation payload.
 */
@Fluent
public final class WorkItemCreateConfiguration implements JsonSerializable<WorkItemCreateConfiguration> {
    /*
     * Unique connector id
     */
    private String connectorId;

    /*
     * Serialized JSON object for detailed properties
     */
    private String connectorDataConfiguration;

    /*
     * Boolean indicating validate only
     */
    private Boolean validateOnly;

    /*
     * Custom work item properties
     */
    private Map<String, String> workItemProperties;

    /**
     * Creates an instance of WorkItemCreateConfiguration class.
     */
    public WorkItemCreateConfiguration() {
    }

    /**
     * Get the connectorId property: Unique connector id.
     * 
     * @return the connectorId value.
     */
    public String connectorId() {
        return this.connectorId;
    }

    /**
     * Set the connectorId property: Unique connector id.
     * 
     * @param connectorId the connectorId value to set.
     * @return the WorkItemCreateConfiguration object itself.
     */
    public WorkItemCreateConfiguration withConnectorId(String connectorId) {
        this.connectorId = connectorId;
        return this;
    }

    /**
     * Get the connectorDataConfiguration property: Serialized JSON object for detailed properties.
     * 
     * @return the connectorDataConfiguration value.
     */
    public String connectorDataConfiguration() {
        return this.connectorDataConfiguration;
    }

    /**
     * Set the connectorDataConfiguration property: Serialized JSON object for detailed properties.
     * 
     * @param connectorDataConfiguration the connectorDataConfiguration value to set.
     * @return the WorkItemCreateConfiguration object itself.
     */
    public WorkItemCreateConfiguration withConnectorDataConfiguration(String connectorDataConfiguration) {
        this.connectorDataConfiguration = connectorDataConfiguration;
        return this;
    }

    /**
     * Get the validateOnly property: Boolean indicating validate only.
     * 
     * @return the validateOnly value.
     */
    public Boolean validateOnly() {
        return this.validateOnly;
    }

    /**
     * Set the validateOnly property: Boolean indicating validate only.
     * 
     * @param validateOnly the validateOnly value to set.
     * @return the WorkItemCreateConfiguration object itself.
     */
    public WorkItemCreateConfiguration withValidateOnly(Boolean validateOnly) {
        this.validateOnly = validateOnly;
        return this;
    }

    /**
     * Get the workItemProperties property: Custom work item properties.
     * 
     * @return the workItemProperties value.
     */
    public Map<String, String> workItemProperties() {
        return this.workItemProperties;
    }

    /**
     * Set the workItemProperties property: Custom work item properties.
     * 
     * @param workItemProperties the workItemProperties value to set.
     * @return the WorkItemCreateConfiguration object itself.
     */
    public WorkItemCreateConfiguration withWorkItemProperties(Map<String, String> workItemProperties) {
        this.workItemProperties = workItemProperties;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("ConnectorId", this.connectorId);
        jsonWriter.writeStringField("ConnectorDataConfiguration", this.connectorDataConfiguration);
        jsonWriter.writeBooleanField("ValidateOnly", this.validateOnly);
        jsonWriter.writeMapField("WorkItemProperties", this.workItemProperties,
            (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of WorkItemCreateConfiguration from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of WorkItemCreateConfiguration if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the WorkItemCreateConfiguration.
     */
    public static WorkItemCreateConfiguration fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            WorkItemCreateConfiguration deserializedWorkItemCreateConfiguration = new WorkItemCreateConfiguration();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("ConnectorId".equals(fieldName)) {
                    deserializedWorkItemCreateConfiguration.connectorId = reader.getString();
                } else if ("ConnectorDataConfiguration".equals(fieldName)) {
                    deserializedWorkItemCreateConfiguration.connectorDataConfiguration = reader.getString();
                } else if ("ValidateOnly".equals(fieldName)) {
                    deserializedWorkItemCreateConfiguration.validateOnly = reader.getNullable(JsonReader::getBoolean);
                } else if ("WorkItemProperties".equals(fieldName)) {
                    Map<String, String> workItemProperties = reader.readMap(reader1 -> reader1.getString());
                    deserializedWorkItemCreateConfiguration.workItemProperties = workItemProperties;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedWorkItemCreateConfiguration;
        });
    }
}
