// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.applicationinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.applicationinsights.fluent.models.ApplicationInsightsComponentBillingFeaturesInner;
import com.azure.resourcemanager.applicationinsights.models.ApplicationInsightsComponentDataVolumeCap;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ApplicationInsightsComponentBillingFeaturesInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ApplicationInsightsComponentBillingFeaturesInner model =
            BinaryData
                .fromString(
                    "{\"DataVolumeCap\":{\"Cap\":80.98324,\"ResetTime\":1887671612,\"WarningThreshold\":565226786,\"StopSendNotificationWhenHitThreshold\":true,\"StopSendNotificationWhenHitCap\":false,\"MaxHistoryCap\":2.1371305},\"CurrentBillingFeatures\":[\"mjqulngsn\",\"nbybkzgcwrwcl\",\"xwrljdouskcqvkoc\",\"cjdkwtnhxbnjbi\"]}")
                .toObject(ApplicationInsightsComponentBillingFeaturesInner.class);
        Assertions.assertEquals(80.98324F, model.dataVolumeCap().cap());
        Assertions.assertEquals(565226786, model.dataVolumeCap().warningThreshold());
        Assertions.assertEquals(true, model.dataVolumeCap().stopSendNotificationWhenHitThreshold());
        Assertions.assertEquals(false, model.dataVolumeCap().stopSendNotificationWhenHitCap());
        Assertions.assertEquals("mjqulngsn", model.currentBillingFeatures().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ApplicationInsightsComponentBillingFeaturesInner model =
            new ApplicationInsightsComponentBillingFeaturesInner()
                .withDataVolumeCap(
                    new ApplicationInsightsComponentDataVolumeCap()
                        .withCap(80.98324F)
                        .withWarningThreshold(565226786)
                        .withStopSendNotificationWhenHitThreshold(true)
                        .withStopSendNotificationWhenHitCap(false))
                .withCurrentBillingFeatures(
                    Arrays.asList("mjqulngsn", "nbybkzgcwrwcl", "xwrljdouskcqvkoc", "cjdkwtnhxbnjbi"));
        model = BinaryData.fromObject(model).toObject(ApplicationInsightsComponentBillingFeaturesInner.class);
        Assertions.assertEquals(80.98324F, model.dataVolumeCap().cap());
        Assertions.assertEquals(565226786, model.dataVolumeCap().warningThreshold());
        Assertions.assertEquals(true, model.dataVolumeCap().stopSendNotificationWhenHitThreshold());
        Assertions.assertEquals(false, model.dataVolumeCap().stopSendNotificationWhenHitCap());
        Assertions.assertEquals("mjqulngsn", model.currentBillingFeatures().get(0));
    }
}
