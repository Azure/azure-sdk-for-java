// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.applicationinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.applicationinsights.fluent.models.ApplicationInsightsComponentBillingFeaturesInner;
import com.azure.resourcemanager.applicationinsights.models.ApplicationInsightsComponentDataVolumeCap;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ApplicationInsightsComponentBillingFeaturesInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ApplicationInsightsComponentBillingFeaturesInner model = BinaryData.fromString(
            "{\"DataVolumeCap\":{\"Cap\":39.254265,\"ResetTime\":955992549,\"WarningThreshold\":1066142513,\"StopSendNotificationWhenHitThreshold\":false,\"StopSendNotificationWhenHitCap\":false,\"MaxHistoryCap\":74.08714},\"CurrentBillingFeatures\":[\"njbiksqrglssain\",\"p\",\"wnzlljfmppeeb\",\"mgxsab\"]}")
            .toObject(ApplicationInsightsComponentBillingFeaturesInner.class);
        Assertions.assertEquals(39.254265F, model.dataVolumeCap().cap());
        Assertions.assertEquals(1066142513, model.dataVolumeCap().warningThreshold());
        Assertions.assertEquals(false, model.dataVolumeCap().stopSendNotificationWhenHitThreshold());
        Assertions.assertEquals(false, model.dataVolumeCap().stopSendNotificationWhenHitCap());
        Assertions.assertEquals("njbiksqrglssain", model.currentBillingFeatures().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ApplicationInsightsComponentBillingFeaturesInner model = new ApplicationInsightsComponentBillingFeaturesInner()
            .withDataVolumeCap(new ApplicationInsightsComponentDataVolumeCap().withCap(39.254265F)
                .withWarningThreshold(1066142513)
                .withStopSendNotificationWhenHitThreshold(false)
                .withStopSendNotificationWhenHitCap(false))
            .withCurrentBillingFeatures(Arrays.asList("njbiksqrglssain", "p", "wnzlljfmppeeb", "mgxsab"));
        model = BinaryData.fromObject(model).toObject(ApplicationInsightsComponentBillingFeaturesInner.class);
        Assertions.assertEquals(39.254265F, model.dataVolumeCap().cap());
        Assertions.assertEquals(1066142513, model.dataVolumeCap().warningThreshold());
        Assertions.assertEquals(false, model.dataVolumeCap().stopSendNotificationWhenHitThreshold());
        Assertions.assertEquals(false, model.dataVolumeCap().stopSendNotificationWhenHitCap());
        Assertions.assertEquals("njbiksqrglssain", model.currentBillingFeatures().get(0));
    }
}
