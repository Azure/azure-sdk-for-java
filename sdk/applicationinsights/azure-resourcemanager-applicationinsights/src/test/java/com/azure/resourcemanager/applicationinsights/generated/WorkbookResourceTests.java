// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.applicationinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.applicationinsights.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.applicationinsights.models.UserAssignedIdentity;
import com.azure.resourcemanager.applicationinsights.models.WorkbookResource;
import com.azure.resourcemanager.applicationinsights.models.WorkbookResourceIdentity;
import com.azure.resourcemanager.applicationinsights.models.WorkbookSharedTypeKind;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class WorkbookResourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkbookResource model = BinaryData.fromString(
            "{\"identity\":{\"principalId\":\"e770d48c-db47-4403-b216-818a292b766a\",\"tenantId\":\"9b606586-35cb-44a7-86f9-43cfe3a8f023\",\"type\":\"SystemAssigned,UserAssigned\",\"userAssignedIdentities\":{\"alnswhccsphk\":{\"principalId\":\"ddb0172c-723a-40d7-b193-6f3bab193a1c\",\"clientId\":\"7c8aceca-509d-4ad3-9293-5dabeaeb8f0f\"},\"witqscywuggwoluh\":{\"principalId\":\"21402738-76ad-45fd-b5ca-6a0cba734760\",\"clientId\":\"f615bc15-807d-4ccb-8468-201cc3de66f3\"},\"wem\":{\"principalId\":\"2e82b5ad-16be-46b4-9aaf-7db6ab205fd8\",\"clientId\":\"429aa4d0-bc59-46e5-9fc2-2d7373308d7c\"}}},\"kind\":\"shared\",\"etag\":\"sbrgz\",\"location\":\"wmsweypqwd\",\"tags\":{\"qhuexm\":\"icccn\",\"ncsdtclusiyp\":\"ttlstvlzywemhz\",\"ygqukyhejh\":\"sfgytguslfead\"},\"id\":\"isxgfp\",\"name\":\"lolp\",\"type\":\"vk\"}")
            .toObject(WorkbookResource.class);
        Assertions.assertEquals("wmsweypqwd", model.location());
        Assertions.assertEquals("icccn", model.tags().get("qhuexm"));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED, model.identity().type());
        Assertions.assertEquals(WorkbookSharedTypeKind.SHARED, model.kind());
        Assertions.assertEquals("sbrgz", model.etag());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkbookResource model = new WorkbookResource().withLocation("wmsweypqwd")
            .withTags(mapOf("qhuexm", "icccn", "ncsdtclusiyp", "ttlstvlzywemhz", "ygqukyhejh", "sfgytguslfead"))
            .withIdentity(
                new WorkbookResourceIdentity().withType(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED)
                    .withUserAssignedIdentities(mapOf("alnswhccsphk", new UserAssignedIdentity(), "witqscywuggwoluh",
                        new UserAssignedIdentity(), "wem", new UserAssignedIdentity())))
            .withKind(WorkbookSharedTypeKind.SHARED)
            .withEtag("sbrgz");
        model = BinaryData.fromObject(model).toObject(WorkbookResource.class);
        Assertions.assertEquals("wmsweypqwd", model.location());
        Assertions.assertEquals("icccn", model.tags().get("qhuexm"));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED, model.identity().type());
        Assertions.assertEquals(WorkbookSharedTypeKind.SHARED, model.kind());
        Assertions.assertEquals("sbrgz", model.etag());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
