// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.applicationinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.applicationinsights.ApplicationInsightsManager;
import com.azure.resourcemanager.applicationinsights.fluent.models.ApplicationInsightsComponentBillingFeaturesInner;
import com.azure.resourcemanager.applicationinsights.models.ApplicationInsightsComponentBillingFeatures;
import com.azure.resourcemanager.applicationinsights.models.ApplicationInsightsComponentDataVolumeCap;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ComponentCurrentBillingFeaturesUpdateWithResponseMockTests {
    @Test
    public void testUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"DataVolumeCap\":{\"Cap\":6.710392,\"ResetTime\":1752603485,\"WarningThreshold\":41953991,\"StopSendNotificationWhenHitThreshold\":true,\"StopSendNotificationWhenHitCap\":false,\"MaxHistoryCap\":25.37542},\"CurrentBillingFeatures\":[\"i\",\"hzvhxnkomtkubo\"]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApplicationInsightsManager manager = ApplicationInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        ApplicationInsightsComponentBillingFeatures response = manager.componentCurrentBillingFeatures()
            .updateWithResponse("uvvfonkp", "hqyikvy",
                new ApplicationInsightsComponentBillingFeaturesInner()
                    .withDataVolumeCap(new ApplicationInsightsComponentDataVolumeCap().withCap(71.17668F)
                        .withWarningThreshold(1578594338)
                        .withStopSendNotificationWhenHitThreshold(true)
                        .withStopSendNotificationWhenHitCap(true))
                    .withCurrentBillingFeatures(Arrays.asList("jfybvpoekrsgsgb")),
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(6.710392F, response.dataVolumeCap().cap());
        Assertions.assertEquals(41953991, response.dataVolumeCap().warningThreshold());
        Assertions.assertEquals(true, response.dataVolumeCap().stopSendNotificationWhenHitThreshold());
        Assertions.assertEquals(false, response.dataVolumeCap().stopSendNotificationWhenHitCap());
        Assertions.assertEquals("i", response.currentBillingFeatures().get(0));
    }
}
