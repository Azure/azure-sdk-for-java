// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.applicationinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.applicationinsights.ApplicationInsightsManager;
import com.azure.resourcemanager.applicationinsights.models.ApplicationInsightsComponentAnalyticsItem;
import com.azure.resourcemanager.applicationinsights.models.ItemScope;
import com.azure.resourcemanager.applicationinsights.models.ItemScopePath;
import com.azure.resourcemanager.applicationinsights.models.ItemType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AnalyticsItemsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"Id\":\"ihebwtsw\",\"Name\":\"uwfmduragegizvc\",\"Content\":\"elisdjub\",\"Version\":\"bqigkx\",\"Scope\":\"user\",\"Type\":\"recent\",\"TimeCreated\":\"akgacyrcmjdm\",\"TimeModified\":\"of\",\"Properties\":{\"functionAlias\":\"uhrylniofr\"}}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApplicationInsightsManager manager = ApplicationInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        ApplicationInsightsComponentAnalyticsItem response = manager.analyticsItems()
            .getWithResponse("fdbxiqxeiiqbim", "tmwwi", ItemScopePath.ANALYTICS_ITEMS, "ehfqpofvwbc", "lembnkbwvqvxkdi",
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("ihebwtsw", response.id());
        Assertions.assertEquals("uwfmduragegizvc", response.name());
        Assertions.assertEquals("elisdjub", response.content());
        Assertions.assertEquals(ItemScope.USER, response.scope());
        Assertions.assertEquals(ItemType.RECENT, response.type());
        Assertions.assertEquals("uhrylniofr", response.properties().functionAlias());
    }
}
