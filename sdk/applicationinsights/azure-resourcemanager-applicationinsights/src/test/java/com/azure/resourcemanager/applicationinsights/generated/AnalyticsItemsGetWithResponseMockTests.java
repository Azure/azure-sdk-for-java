// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.applicationinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.applicationinsights.ApplicationInsightsManager;
import com.azure.resourcemanager.applicationinsights.models.ApplicationInsightsComponentAnalyticsItem;
import com.azure.resourcemanager.applicationinsights.models.ItemScope;
import com.azure.resourcemanager.applicationinsights.models.ItemScopePath;
import com.azure.resourcemanager.applicationinsights.models.ItemType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AnalyticsItemsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"Id\":\"syrq\",\"Name\":\"jqhden\",\"Content\":\"ulkpakd\",\"Version\":\"fmjnnawtqa\",\"Scope\":\"user\",\"Type\":\"function\",\"TimeCreated\":\"p\",\"TimeModified\":\"qoweyirdhl\",\"Properties\":{\"functionAlias\":\"gwflq\"}}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApplicationInsightsManager manager = ApplicationInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ApplicationInsightsComponentAnalyticsItem response = manager.analyticsItems()
            .getWithResponse("qtobaxkjeyt", "nlb", ItemScopePath.MYANALYTICS_ITEMS, "kwr", "snkq",
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("syrq", response.id());
        Assertions.assertEquals("jqhden", response.name());
        Assertions.assertEquals("ulkpakd", response.content());
        Assertions.assertEquals(ItemScope.USER, response.scope());
        Assertions.assertEquals(ItemType.FUNCTION, response.type());
        Assertions.assertEquals("gwflq", response.properties().functionAlias());
    }
}
