// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.applicationinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.applicationinsights.ApplicationInsightsManager;
import com.azure.resourcemanager.applicationinsights.models.CategoryType;
import com.azure.resourcemanager.applicationinsights.models.Kind;
import com.azure.resourcemanager.applicationinsights.models.MyWorkbook;
import com.azure.resourcemanager.applicationinsights.models.MyWorkbookManagedIdentityType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class MyWorkbooksListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"kind\":\"shared\",\"properties\":{\"displayName\":\"htuevrhrljy\",\"serializedData\":\"ogwxhnsduugwb\",\"version\":\"e\",\"timeModified\":\"fqkfuarenl\",\"category\":\"hhtklnvnafvvkyfe\",\"tags\":[\"jboslcqxypok\"],\"userId\":\"minqcym\",\"sourceId\":\"ngnbdxxew\",\"storageUri\":\"invudbch\"},\"identity\":{\"userAssignedIdentities\":{\"principalId\":\"qecrqctmxx\",\"tenantId\":\"ddm\"},\"type\":\"None\"},\"id\":\"ybww\",\"name\":\"bdvibidmhmwffpl\",\"type\":\"muvapc\",\"etag\":{\"rxklobdxnazpmk\":\"uxvnsasbcrymodi\",\"vfxzopjh\":\"lmv\",\"d\":\"zxlioh\"},\"location\":\"dtfgxqbawpcbb\",\"tags\":{\"zb\":\"cyknapqofyuicd\"}}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApplicationInsightsManager manager = ApplicationInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<MyWorkbook> response = manager.myWorkbooks()
            .listByResourceGroup("zoyw", CategoryType.RETENTION, Arrays.asList("hpdulon"), "acn", true,
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("dtfgxqbawpcbb", response.iterator().next().location());
        Assertions.assertEquals("cyknapqofyuicd", response.iterator().next().tags().get("zb"));
        Assertions.assertEquals(MyWorkbookManagedIdentityType.NONE, response.iterator().next().identity().type());
        Assertions.assertEquals("ybww", response.iterator().next().id());
        Assertions.assertEquals("bdvibidmhmwffpl", response.iterator().next().name());
        Assertions.assertEquals("muvapc", response.iterator().next().type());
        Assertions.assertEquals("uxvnsasbcrymodi", response.iterator().next().etag().get("rxklobdxnazpmk"));
        Assertions.assertEquals(Kind.SHARED, response.iterator().next().kind());
        Assertions.assertEquals("htuevrhrljy", response.iterator().next().displayName());
        Assertions.assertEquals("ogwxhnsduugwb", response.iterator().next().serializedData());
        Assertions.assertEquals("e", response.iterator().next().version());
        Assertions.assertEquals("hhtklnvnafvvkyfe", response.iterator().next().category());
        Assertions.assertEquals("jboslcqxypok", response.iterator().next().tagsPropertiesTags().get(0));
        Assertions.assertEquals("ngnbdxxew", response.iterator().next().sourceId());
        Assertions.assertEquals("invudbch", response.iterator().next().storageUri());
    }
}
