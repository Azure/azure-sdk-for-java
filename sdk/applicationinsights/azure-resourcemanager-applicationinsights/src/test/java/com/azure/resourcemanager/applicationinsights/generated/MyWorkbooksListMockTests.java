// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.applicationinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.applicationinsights.ApplicationInsightsManager;
import com.azure.resourcemanager.applicationinsights.models.CategoryType;
import com.azure.resourcemanager.applicationinsights.models.Kind;
import com.azure.resourcemanager.applicationinsights.models.MyWorkbook;
import com.azure.resourcemanager.applicationinsights.models.MyWorkbookManagedIdentityType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class MyWorkbooksListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"kind\":\"shared\",\"properties\":{\"displayName\":\"k\",\"serializedData\":\"haim\",\"version\":\"iroqbosh\",\"timeModified\":\"a\",\"category\":\"apyyrmfsvbpavbo\",\"tags\":[\"pdbwnupgahxkum\",\"sjcaacfdmmcpugm\",\"hqepvufhbzehewh\",\"qhnlbqnbld\"],\"userId\":\"aclgschorimk\",\"sourceId\":\"r\",\"storageUri\":\"oucs\"},\"identity\":{\"userAssignedIdentities\":{\"principalId\":\"uviyfcaabeo\",\"tenantId\":\"bh\"},\"type\":\"UserAssigned\"},\"id\":\"wndyqleallk\",\"name\":\"mtkhlowkxxpvbr\",\"type\":\"fjmzsyzfho\",\"etag\":{\"ksaoafcluqvox\":\"wgfstmhqykizm\"},\"location\":\"ycjimryvwgcwwpbm\",\"tags\":{\"wefohecbvo\":\"esyds\"}}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApplicationInsightsManager manager = ApplicationInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<MyWorkbook> response = manager.myWorkbooks()
            .list(CategoryType.RETENTION, Arrays.asList("crrvweyo"), false, com.azure.core.util.Context.NONE);

        Assertions.assertEquals("ycjimryvwgcwwpbm", response.iterator().next().location());
        Assertions.assertEquals("esyds", response.iterator().next().tags().get("wefohecbvo"));
        Assertions.assertEquals(MyWorkbookManagedIdentityType.USER_ASSIGNED,
            response.iterator().next().identity().type());
        Assertions.assertEquals("wndyqleallk", response.iterator().next().id());
        Assertions.assertEquals("mtkhlowkxxpvbr", response.iterator().next().name());
        Assertions.assertEquals("fjmzsyzfho", response.iterator().next().type());
        Assertions.assertEquals("wgfstmhqykizm", response.iterator().next().etag().get("ksaoafcluqvox"));
        Assertions.assertEquals(Kind.SHARED, response.iterator().next().kind());
        Assertions.assertEquals("k", response.iterator().next().displayName());
        Assertions.assertEquals("haim", response.iterator().next().serializedData());
        Assertions.assertEquals("iroqbosh", response.iterator().next().version());
        Assertions.assertEquals("apyyrmfsvbpavbo", response.iterator().next().category());
        Assertions.assertEquals("pdbwnupgahxkum", response.iterator().next().tagsPropertiesTags().get(0));
        Assertions.assertEquals("r", response.iterator().next().sourceId());
        Assertions.assertEquals("oucs", response.iterator().next().storageUri());
    }
}
