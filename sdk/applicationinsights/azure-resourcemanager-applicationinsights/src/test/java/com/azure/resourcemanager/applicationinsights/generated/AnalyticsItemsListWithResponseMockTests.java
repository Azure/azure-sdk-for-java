// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.applicationinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.applicationinsights.ApplicationInsightsManager;
import com.azure.resourcemanager.applicationinsights.models.ApplicationInsightsComponentAnalyticsItem;
import com.azure.resourcemanager.applicationinsights.models.ItemScope;
import com.azure.resourcemanager.applicationinsights.models.ItemScopePath;
import com.azure.resourcemanager.applicationinsights.models.ItemType;
import com.azure.resourcemanager.applicationinsights.models.ItemTypeParameter;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AnalyticsItemsListWithResponseMockTests {
    @Test
    public void testListWithResponse() throws Exception {
        String responseStr
            = "[{\"Id\":\"honqjujeickpz\",\"Name\":\"p\",\"Content\":\"mxelnwcltyjed\",\"Version\":\"xm\",\"Scope\":\"shared\",\"Type\":\"recent\",\"TimeCreated\":\"cazuaw\",\"TimeModified\":\"z\",\"Properties\":{\"functionAlias\":\"amwabzxrvxcushsp\"}},{\"Id\":\"ivmxyasfl\",\"Name\":\"sgzwywakoihknsm\",\"Content\":\"lmljhlnymzotq\",\"Version\":\"yuzcbmqqvxmvw\",\"Scope\":\"shared\",\"Type\":\"query\",\"TimeCreated\":\"onsupeujlz\",\"TimeModified\":\"hcvsqltnzoi\",\"Properties\":{\"functionAlias\":\"xgnxfyqonmpqoxwd\"}}]";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApplicationInsightsManager manager = ApplicationInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        List<ApplicationInsightsComponentAnalyticsItem> response = manager.analyticsItems()
            .listWithResponse("wjutifdwfmv", "gorqjbttzh", ItemScopePath.MYANALYTICS_ITEMS, ItemScope.SHARED,
                ItemTypeParameter.QUERY, false, com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("honqjujeickpz", response.get(0).id());
        Assertions.assertEquals("p", response.get(0).name());
        Assertions.assertEquals("mxelnwcltyjed", response.get(0).content());
        Assertions.assertEquals(ItemScope.SHARED, response.get(0).scope());
        Assertions.assertEquals(ItemType.RECENT, response.get(0).type());
        Assertions.assertEquals("amwabzxrvxcushsp", response.get(0).properties().functionAlias());
    }
}
