// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.applicationinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.applicationinsights.ApplicationInsightsManager;
import com.azure.resourcemanager.applicationinsights.models.ApplicationInsightsComponentBillingFeatures;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ComponentCurrentBillingFeaturesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"DataVolumeCap\":{\"Cap\":39.890907,\"ResetTime\":1058689711,\"WarningThreshold\":698504930,\"StopSendNotificationWhenHitThreshold\":false,\"StopSendNotificationWhenHitCap\":true,\"MaxHistoryCap\":53.721916},\"CurrentBillingFeatures\":[\"twkuziycs\",\"evufuztck\",\"yhjtqedcgzu\"]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApplicationInsightsManager manager = ApplicationInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ApplicationInsightsComponentBillingFeatures response = manager.componentCurrentBillingFeatures()
            .getWithResponse("est", "jlxr", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(39.890907F, response.dataVolumeCap().cap());
        Assertions.assertEquals(698504930, response.dataVolumeCap().warningThreshold());
        Assertions.assertEquals(false, response.dataVolumeCap().stopSendNotificationWhenHitThreshold());
        Assertions.assertEquals(true, response.dataVolumeCap().stopSendNotificationWhenHitCap());
        Assertions.assertEquals("twkuziycs", response.currentBillingFeatures().get(0));
    }
}
