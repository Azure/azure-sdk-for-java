// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.applicationinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.applicationinsights.ApplicationInsightsManager;
import com.azure.resourcemanager.applicationinsights.models.ApplicationInsightsComponentBillingFeatures;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ComponentCurrentBillingFeaturesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"DataVolumeCap\":{\"Cap\":92.44658,\"ResetTime\":520694685,\"WarningThreshold\":1829917026,\"StopSendNotificationWhenHitThreshold\":true,\"StopSendNotificationWhenHitCap\":true,\"MaxHistoryCap\":53.99011},\"CurrentBillingFeatures\":[\"jazysdzhezwwvaiq\"]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApplicationInsightsManager manager = ApplicationInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        ApplicationInsightsComponentBillingFeatures response = manager.componentCurrentBillingFeatures()
            .getWithResponse("khyawfvjlboxqv", "jlmxhomdynhd", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(92.44658F, response.dataVolumeCap().cap());
        Assertions.assertEquals(1829917026, response.dataVolumeCap().warningThreshold());
        Assertions.assertEquals(true, response.dataVolumeCap().stopSendNotificationWhenHitThreshold());
        Assertions.assertEquals(true, response.dataVolumeCap().stopSendNotificationWhenHitCap());
        Assertions.assertEquals("jazysdzhezwwvaiq", response.currentBillingFeatures().get(0));
    }
}
