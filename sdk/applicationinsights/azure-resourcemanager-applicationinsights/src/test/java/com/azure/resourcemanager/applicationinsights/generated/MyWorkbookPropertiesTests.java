// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.applicationinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.applicationinsights.fluent.models.MyWorkbookProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class MyWorkbookPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MyWorkbookProperties model = BinaryData.fromString(
            "{\"displayName\":\"tlstvlzywem\",\"serializedData\":\"zrncsdt\",\"version\":\"u\",\"timeModified\":\"ypbsfgytguslfead\",\"category\":\"ygqukyhejh\",\"tags\":[\"xgfpelolppv\"],\"userId\":\"r\",\"sourceId\":\"vu\",\"storageUri\":\"raehtwdwrft\"}")
            .toObject(MyWorkbookProperties.class);
        Assertions.assertEquals("tlstvlzywem", model.displayName());
        Assertions.assertEquals("zrncsdt", model.serializedData());
        Assertions.assertEquals("u", model.version());
        Assertions.assertEquals("ygqukyhejh", model.category());
        Assertions.assertEquals("xgfpelolppv", model.tags().get(0));
        Assertions.assertEquals("vu", model.sourceId());
        Assertions.assertEquals("raehtwdwrft", model.storageUri());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MyWorkbookProperties model = new MyWorkbookProperties().withDisplayName("tlstvlzywem")
            .withSerializedData("zrncsdt")
            .withVersion("u")
            .withCategory("ygqukyhejh")
            .withTags(Arrays.asList("xgfpelolppv"))
            .withSourceId("vu")
            .withStorageUri("raehtwdwrft");
        model = BinaryData.fromObject(model).toObject(MyWorkbookProperties.class);
        Assertions.assertEquals("tlstvlzywem", model.displayName());
        Assertions.assertEquals("zrncsdt", model.serializedData());
        Assertions.assertEquals("u", model.version());
        Assertions.assertEquals("ygqukyhejh", model.category());
        Assertions.assertEquals("xgfpelolppv", model.tags().get(0));
        Assertions.assertEquals("vu", model.sourceId());
        Assertions.assertEquals("raehtwdwrft", model.storageUri());
    }
}
