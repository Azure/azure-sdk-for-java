// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.applicationinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.applicationinsights.fluent.models.MyWorkbookProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class MyWorkbookPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MyWorkbookProperties model =
            BinaryData
                .fromString(
                    "{\"displayName\":\"phsdyhto\",\"serializedData\":\"fikdowwqu\",\"version\":\"xzxcl\",\"timeModified\":\"thhqzonosggbh\",\"category\":\"ohfwds\",\"tags\":[\"aljutiiswac\"],\"userId\":\"gdkz\",\"sourceId\":\"wkfvhqcrailvp\",\"storageUri\":\"pfuflrw\"}")
                .toObject(MyWorkbookProperties.class);
        Assertions.assertEquals("phsdyhto", model.displayName());
        Assertions.assertEquals("fikdowwqu", model.serializedData());
        Assertions.assertEquals("xzxcl", model.version());
        Assertions.assertEquals("ohfwds", model.category());
        Assertions.assertEquals("aljutiiswac", model.tags().get(0));
        Assertions.assertEquals("wkfvhqcrailvp", model.sourceId());
        Assertions.assertEquals("pfuflrw", model.storageUri());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MyWorkbookProperties model =
            new MyWorkbookProperties()
                .withDisplayName("phsdyhto")
                .withSerializedData("fikdowwqu")
                .withVersion("xzxcl")
                .withCategory("ohfwds")
                .withTags(Arrays.asList("aljutiiswac"))
                .withSourceId("wkfvhqcrailvp")
                .withStorageUri("pfuflrw");
        model = BinaryData.fromObject(model).toObject(MyWorkbookProperties.class);
        Assertions.assertEquals("phsdyhto", model.displayName());
        Assertions.assertEquals("fikdowwqu", model.serializedData());
        Assertions.assertEquals("xzxcl", model.version());
        Assertions.assertEquals("ohfwds", model.category());
        Assertions.assertEquals("aljutiiswac", model.tags().get(0));
        Assertions.assertEquals("wkfvhqcrailvp", model.sourceId());
        Assertions.assertEquals("pfuflrw", model.storageUri());
    }
}
