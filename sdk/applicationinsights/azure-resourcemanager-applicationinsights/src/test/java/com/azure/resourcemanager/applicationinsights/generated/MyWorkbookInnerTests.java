// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.applicationinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.applicationinsights.fluent.models.MyWorkbookInner;
import com.azure.resourcemanager.applicationinsights.models.Kind;
import com.azure.resourcemanager.applicationinsights.models.MyWorkbookManagedIdentity;
import com.azure.resourcemanager.applicationinsights.models.MyWorkbookManagedIdentityType;
import com.azure.resourcemanager.applicationinsights.models.MyWorkbookUserAssignedIdentities;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class MyWorkbookInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MyWorkbookInner model =
            BinaryData
                .fromString(
                    "{\"kind\":\"user\",\"properties\":{\"displayName\":\"lpstdbhhxsrzdz\",\"serializedData\":\"cers\",\"version\":\"ntnev\",\"timeModified\":\"wjmy\",\"category\":\"tdss\",\"tags\":[\"tmweriofzpyq\",\"emwabnet\"],\"userId\":\"hszhedplvwiwu\",\"sourceId\":\"wmbesldnkw\",\"storageUri\":\"pp\"},\"identity\":{\"userAssignedIdentities\":{\"principalId\":\"ogaok\",\"tenantId\":\"z\"},\"type\":\"None\"},\"id\":\"morppxebmnzbtbh\",\"name\":\"pglkf\",\"type\":\"ohdneuel\",\"etag\":{\"ibqdxbxwakbogqx\":\"dkwobdagx\",\"lbpodxunk\":\"dlkzgxhuri\"},\"location\":\"ebxmubyynt\",\"tags\":{\"ltmuwlauwzizx\":\"bqtkoievseotgqr\",\"d\":\"mpgcjefuzmuvpbt\"}}")
                .toObject(MyWorkbookInner.class);
        Assertions.assertEquals("ebxmubyynt", model.location());
        Assertions.assertEquals("bqtkoievseotgqr", model.tags().get("ltmuwlauwzizx"));
        Assertions.assertEquals(MyWorkbookManagedIdentityType.NONE, model.identity().type());
        Assertions.assertEquals("morppxebmnzbtbh", model.id());
        Assertions.assertEquals("pglkf", model.name());
        Assertions.assertEquals("ohdneuel", model.type());
        Assertions.assertEquals("dkwobdagx", model.etag().get("ibqdxbxwakbogqx"));
        Assertions.assertEquals(Kind.USER, model.kind());
        Assertions.assertEquals("lpstdbhhxsrzdz", model.displayName());
        Assertions.assertEquals("cers", model.serializedData());
        Assertions.assertEquals("ntnev", model.version());
        Assertions.assertEquals("tdss", model.category());
        Assertions.assertEquals("tmweriofzpyq", model.tagsPropertiesTags().get(0));
        Assertions.assertEquals("wmbesldnkw", model.sourceId());
        Assertions.assertEquals("pp", model.storageUri());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MyWorkbookInner model =
            new MyWorkbookInner()
                .withLocation("ebxmubyynt")
                .withTags(mapOf("ltmuwlauwzizx", "bqtkoievseotgqr", "d", "mpgcjefuzmuvpbt"))
                .withIdentity(
                    new MyWorkbookManagedIdentity()
                        .withUserAssignedIdentities(new MyWorkbookUserAssignedIdentities())
                        .withType(MyWorkbookManagedIdentityType.NONE))
                .withId("morppxebmnzbtbh")
                .withName("pglkf")
                .withType("ohdneuel")
                .withEtag(mapOf("ibqdxbxwakbogqx", "dkwobdagx", "lbpodxunk", "dlkzgxhuri"))
                .withKind(Kind.USER)
                .withDisplayName("lpstdbhhxsrzdz")
                .withSerializedData("cers")
                .withVersion("ntnev")
                .withCategory("tdss")
                .withTagsPropertiesTags(Arrays.asList("tmweriofzpyq", "emwabnet"))
                .withSourceId("wmbesldnkw")
                .withStorageUri("pp");
        model = BinaryData.fromObject(model).toObject(MyWorkbookInner.class);
        Assertions.assertEquals("ebxmubyynt", model.location());
        Assertions.assertEquals("bqtkoievseotgqr", model.tags().get("ltmuwlauwzizx"));
        Assertions.assertEquals(MyWorkbookManagedIdentityType.NONE, model.identity().type());
        Assertions.assertEquals("morppxebmnzbtbh", model.id());
        Assertions.assertEquals("pglkf", model.name());
        Assertions.assertEquals("ohdneuel", model.type());
        Assertions.assertEquals("dkwobdagx", model.etag().get("ibqdxbxwakbogqx"));
        Assertions.assertEquals(Kind.USER, model.kind());
        Assertions.assertEquals("lpstdbhhxsrzdz", model.displayName());
        Assertions.assertEquals("cers", model.serializedData());
        Assertions.assertEquals("ntnev", model.version());
        Assertions.assertEquals("tdss", model.category());
        Assertions.assertEquals("tmweriofzpyq", model.tagsPropertiesTags().get(0));
        Assertions.assertEquals("wmbesldnkw", model.sourceId());
        Assertions.assertEquals("pp", model.storageUri());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
