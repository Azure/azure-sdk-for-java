// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.applicationinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.applicationinsights.ApplicationInsightsManager;
import com.azure.resourcemanager.applicationinsights.fluent.models.ApplicationInsightsComponentAnalyticsItemInner;
import com.azure.resourcemanager.applicationinsights.models.ApplicationInsightsComponentAnalyticsItem;
import com.azure.resourcemanager.applicationinsights.models.ApplicationInsightsComponentAnalyticsItemProperties;
import com.azure.resourcemanager.applicationinsights.models.ItemScope;
import com.azure.resourcemanager.applicationinsights.models.ItemScopePath;
import com.azure.resourcemanager.applicationinsights.models.ItemType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AnalyticsItemsPutWithResponseMockTests {
    @Test
    public void testPutWithResponse() throws Exception {
        String responseStr
            = "{\"Id\":\"w\",\"Name\":\"wl\",\"Content\":\"jwetnpsihcla\",\"Version\":\"va\",\"Scope\":\"shared\",\"Type\":\"recent\",\"TimeCreated\":\"qqwzt\",\"TimeModified\":\"w\",\"Properties\":{\"functionAlias\":\"hcxwaxfewzjk\"}}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApplicationInsightsManager manager = ApplicationInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        ApplicationInsightsComponentAnalyticsItem response
            = manager.analyticsItems()
                .putWithResponse("gbzjedmstkv", "l", ItemScopePath.MYANALYTICS_ITEMS,
                    new ApplicationInsightsComponentAnalyticsItemInner().withId("c")
                        .withName("iznk")
                        .withContent("f")
                        .withScope(ItemScope.SHARED)
                        .withType(ItemType.QUERY)
                        .withProperties(new ApplicationInsightsComponentAnalyticsItemProperties()
                            .withFunctionAlias("pfbcunezzcez")),
                    true, com.azure.core.util.Context.NONE)
                .getValue();

        Assertions.assertEquals("w", response.id());
        Assertions.assertEquals("wl", response.name());
        Assertions.assertEquals("jwetnpsihcla", response.content());
        Assertions.assertEquals(ItemScope.SHARED, response.scope());
        Assertions.assertEquals(ItemType.RECENT, response.type());
        Assertions.assertEquals("hcxwaxfewzjk", response.properties().functionAlias());
    }
}
