// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.applicationinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.applicationinsights.fluent.models.WorkbookPropertiesUpdateParameters;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkbookPropertiesUpdateParametersTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkbookPropertiesUpdateParameters model = BinaryData.fromString(
            "{\"displayName\":\"ydxtqm\",\"serializedData\":\"ox\",\"category\":\"ggufhyaomtb\",\"tags\":[\"avgrvkffovjz\",\"pjbi\"],\"description\":\"jmfxumvf\",\"revision\":\"uyovw\"}")
            .toObject(WorkbookPropertiesUpdateParameters.class);
        Assertions.assertEquals("ydxtqm", model.displayName());
        Assertions.assertEquals("ox", model.serializedData());
        Assertions.assertEquals("ggufhyaomtb", model.category());
        Assertions.assertEquals("avgrvkffovjz", model.tags().get(0));
        Assertions.assertEquals("jmfxumvf", model.description());
        Assertions.assertEquals("uyovw", model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkbookPropertiesUpdateParameters model = new WorkbookPropertiesUpdateParameters().withDisplayName("ydxtqm")
            .withSerializedData("ox")
            .withCategory("ggufhyaomtb")
            .withTags(Arrays.asList("avgrvkffovjz", "pjbi"))
            .withDescription("jmfxumvf")
            .withRevision("uyovw");
        model = BinaryData.fromObject(model).toObject(WorkbookPropertiesUpdateParameters.class);
        Assertions.assertEquals("ydxtqm", model.displayName());
        Assertions.assertEquals("ox", model.serializedData());
        Assertions.assertEquals("ggufhyaomtb", model.category());
        Assertions.assertEquals("avgrvkffovjz", model.tags().get(0));
        Assertions.assertEquals("jmfxumvf", model.description());
        Assertions.assertEquals("uyovw", model.revision());
    }
}
