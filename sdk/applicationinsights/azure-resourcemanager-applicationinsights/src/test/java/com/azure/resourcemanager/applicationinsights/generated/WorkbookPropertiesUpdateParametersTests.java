// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.applicationinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.applicationinsights.fluent.models.WorkbookPropertiesUpdateParameters;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkbookPropertiesUpdateParametersTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkbookPropertiesUpdateParameters model = BinaryData.fromString(
            "{\"displayName\":\"eyebizikayuhql\",\"serializedData\":\"bs\",\"category\":\"bqwrvtldgm\",\"tags\":[\"vm\",\"ipaslthaqfxssmwu\",\"wbdsr\",\"zpdrhneu\"],\"description\":\"wqkdwytisibi\",\"revision\":\"gpikpzimejza\"}")
            .toObject(WorkbookPropertiesUpdateParameters.class);
        Assertions.assertEquals("eyebizikayuhql", model.displayName());
        Assertions.assertEquals("bs", model.serializedData());
        Assertions.assertEquals("bqwrvtldgm", model.category());
        Assertions.assertEquals("vm", model.tags().get(0));
        Assertions.assertEquals("wqkdwytisibi", model.description());
        Assertions.assertEquals("gpikpzimejza", model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkbookPropertiesUpdateParameters model
            = new WorkbookPropertiesUpdateParameters().withDisplayName("eyebizikayuhql")
                .withSerializedData("bs")
                .withCategory("bqwrvtldgm")
                .withTags(Arrays.asList("vm", "ipaslthaqfxssmwu", "wbdsr", "zpdrhneu"))
                .withDescription("wqkdwytisibi")
                .withRevision("gpikpzimejza");
        model = BinaryData.fromObject(model).toObject(WorkbookPropertiesUpdateParameters.class);
        Assertions.assertEquals("eyebizikayuhql", model.displayName());
        Assertions.assertEquals("bs", model.serializedData());
        Assertions.assertEquals("bqwrvtldgm", model.category());
        Assertions.assertEquals("vm", model.tags().get(0));
        Assertions.assertEquals("wqkdwytisibi", model.description());
        Assertions.assertEquals("gpikpzimejza", model.revision());
    }
}
