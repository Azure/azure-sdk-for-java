// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.applicationinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.applicationinsights.fluent.models.WorkbookPropertiesUpdateParameters;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkbookPropertiesUpdateParametersTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkbookPropertiesUpdateParameters model =
            BinaryData
                .fromString(
                    "{\"displayName\":\"zkoj\",\"serializedData\":\"c\",\"category\":\"foqouicybx\",\"tags\":[\"gszufoxciqopid\"],\"description\":\"mciodhkhazxkhn\",\"revision\":\"onlwntoeg\"}")
                .toObject(WorkbookPropertiesUpdateParameters.class);
        Assertions.assertEquals("zkoj", model.displayName());
        Assertions.assertEquals("c", model.serializedData());
        Assertions.assertEquals("foqouicybx", model.category());
        Assertions.assertEquals("gszufoxciqopid", model.tags().get(0));
        Assertions.assertEquals("mciodhkhazxkhn", model.description());
        Assertions.assertEquals("onlwntoeg", model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkbookPropertiesUpdateParameters model =
            new WorkbookPropertiesUpdateParameters()
                .withDisplayName("zkoj")
                .withSerializedData("c")
                .withCategory("foqouicybx")
                .withTags(Arrays.asList("gszufoxciqopid"))
                .withDescription("mciodhkhazxkhn")
                .withRevision("onlwntoeg");
        model = BinaryData.fromObject(model).toObject(WorkbookPropertiesUpdateParameters.class);
        Assertions.assertEquals("zkoj", model.displayName());
        Assertions.assertEquals("c", model.serializedData());
        Assertions.assertEquals("foqouicybx", model.category());
        Assertions.assertEquals("gszufoxciqopid", model.tags().get(0));
        Assertions.assertEquals("mciodhkhazxkhn", model.description());
        Assertions.assertEquals("onlwntoeg", model.revision());
    }
}
