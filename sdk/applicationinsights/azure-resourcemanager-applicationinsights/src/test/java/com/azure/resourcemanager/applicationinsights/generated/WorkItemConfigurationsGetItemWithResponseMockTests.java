// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.applicationinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.applicationinsights.ApplicationInsightsManager;
import com.azure.resourcemanager.applicationinsights.models.WorkItemConfiguration;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WorkItemConfigurationsGetItemWithResponseMockTests {
    @Test
    public void testGetItemWithResponse() throws Exception {
        String responseStr
            = "{\"ConnectorId\":\"sawddjibabxvi\",\"ConfigDisplayName\":\"tvtzeexavoxtfg\",\"IsDefault\":false,\"Id\":\"m\",\"ConfigProperties\":\"bwpypqtgsfjacb\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApplicationInsightsManager manager = ApplicationInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        WorkItemConfiguration response = manager.workItemConfigurations()
            .getItemWithResponse("vecuijpx", "xs", "wprtu", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("sawddjibabxvi", response.connectorId());
        Assertions.assertEquals("tvtzeexavoxtfg", response.configDisplayName());
        Assertions.assertEquals(false, response.isDefault());
        Assertions.assertEquals("m", response.id());
        Assertions.assertEquals("bwpypqtgsfjacb", response.configProperties());
    }
}
