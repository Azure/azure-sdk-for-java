// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.applicationinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.applicationinsights.ApplicationInsightsManager;
import com.azure.resourcemanager.applicationinsights.fluent.models.ApplicationInsightsComponentProactiveDetectionConfigurationInner;
import com.azure.resourcemanager.applicationinsights.models.ApplicationInsightsComponentProactiveDetectionConfiguration;
import com.azure.resourcemanager.applicationinsights.models.ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ProactiveDetectionConfigurationsUpdateWithResponseMockTests {
    @Test
    public void testUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"name\":\"zjyi\",\"enabled\":false,\"sendEmailsToSubscriptionOwners\":false,\"customEmails\":[\"dyp\",\"hyuemslyn\",\"qyrp\"],\"lastUpdatedTime\":\"obrltt\",\"ruleDefinitions\":{\"Name\":\"jnygq\",\"DisplayName\":\"fwqzdz\",\"Description\":\"ilaxhn\",\"HelpUrl\":\"qlyvijo\",\"IsHidden\":false,\"IsEnabledByDefault\":true,\"IsInPreview\":true,\"SupportsEmailNotifications\":false}}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApplicationInsightsManager manager = ApplicationInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        ApplicationInsightsComponentProactiveDetectionConfiguration response
            = manager.proactiveDetectionConfigurations()
                .updateWithResponse("f", "fiwrxgkn", "uvyinzqodfvpgs",
                    new ApplicationInsightsComponentProactiveDetectionConfigurationInner().withName("xgsg")
                        .withEnabled(true)
                        .withSendEmailsToSubscriptionOwners(true)
                        .withCustomEmails(Arrays.asList("tx", "zflbqvg", "qvlgafcqusrdvetn", "sdtutnwlduyc"))
                        .withLastUpdatedTime("zhyrmewipmve")
                        .withRuleDefinitions(
                            new ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions()
                                .withName("ukuqgsj")
                                .withDisplayName("undxgketw")
                                .withDescription("hzjhf")
                                .withHelpUrl("hvvmuvgpmun")
                                .withIsHidden(false)
                                .withIsEnabledByDefault(false)
                                .withIsInPreview(true)
                                .withSupportsEmailNotifications(false)),
                    com.azure.core.util.Context.NONE)
                .getValue();

        Assertions.assertEquals("zjyi", response.name());
        Assertions.assertEquals(false, response.enabled());
        Assertions.assertEquals(false, response.sendEmailsToSubscriptionOwners());
        Assertions.assertEquals("dyp", response.customEmails().get(0));
        Assertions.assertEquals("obrltt", response.lastUpdatedTime());
        Assertions.assertEquals("jnygq", response.ruleDefinitions().name());
        Assertions.assertEquals("fwqzdz", response.ruleDefinitions().displayName());
        Assertions.assertEquals("ilaxhn", response.ruleDefinitions().description());
        Assertions.assertEquals("qlyvijo", response.ruleDefinitions().helpUrl());
        Assertions.assertEquals(false, response.ruleDefinitions().isHidden());
        Assertions.assertEquals(true, response.ruleDefinitions().isEnabledByDefault());
        Assertions.assertEquals(true, response.ruleDefinitions().isInPreview());
        Assertions.assertEquals(false, response.ruleDefinitions().supportsEmailNotifications());
    }
}
