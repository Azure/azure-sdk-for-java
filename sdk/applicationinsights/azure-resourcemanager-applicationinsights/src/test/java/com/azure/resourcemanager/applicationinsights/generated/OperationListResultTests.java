// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.applicationinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.applicationinsights.fluent.models.OperationInner;
import com.azure.resourcemanager.applicationinsights.models.OperationDisplay;
import com.azure.resourcemanager.applicationinsights.models.OperationListResult;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class OperationListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationListResult model = BinaryData.fromString(
            "{\"value\":[{\"name\":\"wutttxfvjrbi\",\"display\":{\"provider\":\"xepcyvahfn\",\"resource\":\"kyqxjvuujqgidokg\",\"operation\":\"jyoxgvclt\"}},{\"name\":\"sncghkjeszz\",\"display\":{\"provider\":\"jhtxfvgxbfsmxne\",\"resource\":\"pvecxgodeb\",\"operation\":\"kk\"}},{\"name\":\"mpukgriw\",\"display\":{\"provider\":\"lfbxzpuzycisp\",\"resource\":\"zahmgkbrpyydhibn\",\"operation\":\"qkpikadrgvtqagnb\"}}],\"nextLink\":\"nhijggmebfsi\"}")
            .toObject(OperationListResult.class);
        Assertions.assertEquals("wutttxfvjrbi", model.value().get(0).name());
        Assertions.assertEquals("xepcyvahfn", model.value().get(0).display().provider());
        Assertions.assertEquals("kyqxjvuujqgidokg", model.value().get(0).display().resource());
        Assertions.assertEquals("jyoxgvclt", model.value().get(0).display().operation());
        Assertions.assertEquals("nhijggmebfsi", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationListResult model = new OperationListResult().withValue(Arrays.asList(
            new OperationInner().withName("wutttxfvjrbi")
                .withDisplay(new OperationDisplay().withProvider("xepcyvahfn")
                    .withResource("kyqxjvuujqgidokg")
                    .withOperation("jyoxgvclt")),
            new OperationInner().withName("sncghkjeszz")
                .withDisplay(new OperationDisplay().withProvider("jhtxfvgxbfsmxne")
                    .withResource("pvecxgodeb")
                    .withOperation("kk")),
            new OperationInner().withName("mpukgriw")
                .withDisplay(new OperationDisplay().withProvider("lfbxzpuzycisp")
                    .withResource("zahmgkbrpyydhibn")
                    .withOperation("qkpikadrgvtqagnb"))))
            .withNextLink("nhijggmebfsi");
        model = BinaryData.fromObject(model).toObject(OperationListResult.class);
        Assertions.assertEquals("wutttxfvjrbi", model.value().get(0).name());
        Assertions.assertEquals("xepcyvahfn", model.value().get(0).display().provider());
        Assertions.assertEquals("kyqxjvuujqgidokg", model.value().get(0).display().resource());
        Assertions.assertEquals("jyoxgvclt", model.value().get(0).display().operation());
        Assertions.assertEquals("nhijggmebfsi", model.nextLink());
    }
}
