// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.applicationinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.applicationinsights.fluent.models.ApplicationInsightsComponentAnalyticsItemInner;
import com.azure.resourcemanager.applicationinsights.models.ApplicationInsightsComponentAnalyticsItemProperties;
import com.azure.resourcemanager.applicationinsights.models.ItemScope;
import com.azure.resourcemanager.applicationinsights.models.ItemType;
import org.junit.jupiter.api.Assertions;

public final class ApplicationInsightsComponentAnalyticsItemInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ApplicationInsightsComponentAnalyticsItemInner model =
            BinaryData
                .fromString(
                    "{\"Id\":\"okacspk\",\"Name\":\"hzdobpxjmflbvvnc\",\"Content\":\"kcciwwzjuqkhr\",\"Version\":\"jiwkuofoskghsau\",\"Scope\":\"user\",\"Type\":\"none\",\"TimeCreated\":\"xieduugidyjrr\",\"TimeModified\":\"y\",\"Properties\":{\"functionAlias\":\"v\"}}")
                .toObject(ApplicationInsightsComponentAnalyticsItemInner.class);
        Assertions.assertEquals("okacspk", model.id());
        Assertions.assertEquals("hzdobpxjmflbvvnc", model.name());
        Assertions.assertEquals("kcciwwzjuqkhr", model.content());
        Assertions.assertEquals(ItemScope.USER, model.scope());
        Assertions.assertEquals(ItemType.NONE, model.type());
        Assertions.assertEquals("v", model.properties().functionAlias());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ApplicationInsightsComponentAnalyticsItemInner model =
            new ApplicationInsightsComponentAnalyticsItemInner()
                .withId("okacspk")
                .withName("hzdobpxjmflbvvnc")
                .withContent("kcciwwzjuqkhr")
                .withScope(ItemScope.USER)
                .withType(ItemType.NONE)
                .withProperties(new ApplicationInsightsComponentAnalyticsItemProperties().withFunctionAlias("v"));
        model = BinaryData.fromObject(model).toObject(ApplicationInsightsComponentAnalyticsItemInner.class);
        Assertions.assertEquals("okacspk", model.id());
        Assertions.assertEquals("hzdobpxjmflbvvnc", model.name());
        Assertions.assertEquals("kcciwwzjuqkhr", model.content());
        Assertions.assertEquals(ItemScope.USER, model.scope());
        Assertions.assertEquals(ItemType.NONE, model.type());
        Assertions.assertEquals("v", model.properties().functionAlias());
    }
}
