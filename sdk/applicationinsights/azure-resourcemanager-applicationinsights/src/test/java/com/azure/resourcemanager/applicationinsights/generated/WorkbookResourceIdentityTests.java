// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.applicationinsights.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.applicationinsights.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.applicationinsights.models.UserAssignedIdentity;
import com.azure.resourcemanager.applicationinsights.models.WorkbookResourceIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class WorkbookResourceIdentityTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkbookResourceIdentity model = BinaryData.fromString(
            "{\"principalId\":\"11c2862b-40d5-43d5-a494-97afaad0bb54\",\"tenantId\":\"87055720-f751-43ec-ad4a-8671b93c4840\",\"type\":\"SystemAssigned,UserAssigned\",\"userAssignedIdentities\":{\"nfdn\":{\"principalId\":\"74132bb2-6b04-484c-91f1-712c0d291dff\",\"clientId\":\"0b7d0cd2-155f-4193-8ee4-eddfe3665bed\"},\"chrdgoihxumwcto\":{\"principalId\":\"513106af-a598-417c-bfde-4e29e05d5220\",\"clientId\":\"da475381-4f67-4aed-a3e1-ed0973d15f35\"}}}")
            .toObject(WorkbookResourceIdentity.class);
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED, model.type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkbookResourceIdentity model
            = new WorkbookResourceIdentity().withType(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED)
                .withUserAssignedIdentities(
                    mapOf("nfdn", new UserAssignedIdentity(), "chrdgoihxumwcto", new UserAssignedIdentity()));
        model = BinaryData.fromObject(model).toObject(WorkbookResourceIdentity.class);
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED, model.type());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
