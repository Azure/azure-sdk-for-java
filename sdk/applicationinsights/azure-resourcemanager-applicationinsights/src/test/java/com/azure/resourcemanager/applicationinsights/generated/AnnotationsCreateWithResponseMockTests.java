// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.applicationinsights.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.applicationinsights.ApplicationInsightsManager;
import com.azure.resourcemanager.applicationinsights.fluent.models.AnnotationInner;
import com.azure.resourcemanager.applicationinsights.models.Annotation;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AnnotationsCreateWithResponseMockTests {
    @Test
    public void testCreateWithResponse() throws Exception {
        String responseStr
            = "[{\"AnnotationName\":\"nnrwrbiork\",\"Category\":\"lywjhh\",\"EventTime\":\"2021-11-16T09:40:09Z\",\"Id\":\"xmsivfomiloxggdu\",\"Properties\":\"q\",\"RelatedAnnotation\":\"ieuzaofjchvcyyy\"},{\"AnnotationName\":\"gdotcubiipuipwo\",\"Category\":\"nmacj\",\"EventTime\":\"2021-08-08T02:00:14Z\",\"Id\":\"zshq\",\"Properties\":\"impevf\",\"RelatedAnnotation\":\"b\"}]";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ApplicationInsightsManager manager = ApplicationInsightsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        List<Annotation> response = manager.annotations()
            .createWithResponse("nnbj", "rxgibbd",
                new AnnotationInner().withAnnotationName("confozauors")
                    .withCategory("okwbqplh")
                    .withEventTime(OffsetDateTime.parse("2021-05-19T05:27:01Z"))
                    .withId("uepzl")
                    .withProperties("hw")
                    .withRelatedAnnotation("oldweyuqdu"),
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("nnrwrbiork", response.get(0).annotationName());
        Assertions.assertEquals("lywjhh", response.get(0).category());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-16T09:40:09Z"), response.get(0).eventTime());
        Assertions.assertEquals("xmsivfomiloxggdu", response.get(0).id());
        Assertions.assertEquals("q", response.get(0).properties());
        Assertions.assertEquals("ieuzaofjchvcyyy", response.get(0).relatedAnnotation());
    }
}
