// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.fluidrelay.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.fluidrelay.fluent.models.FluidRelayServerInner;
import com.azure.resourcemanager.fluidrelay.fluent.models.FluidRelayServerKeysInner;
import com.azure.resourcemanager.fluidrelay.models.FluidRelayServerUpdate;
import com.azure.resourcemanager.fluidrelay.models.FluidRelayServersCreateOrUpdateResponse;
import com.azure.resourcemanager.fluidrelay.models.FluidRelayServersDeleteResponse;
import com.azure.resourcemanager.fluidrelay.models.FluidRelayServersGetKeysResponse;
import com.azure.resourcemanager.fluidrelay.models.FluidRelayServersRegenerateKeyResponse;
import com.azure.resourcemanager.fluidrelay.models.FluidRelayServersUpdateResponse;
import com.azure.resourcemanager.fluidrelay.models.RegenerateKeyRequest;

/** An instance of this class provides access to all the operations defined in FluidRelayServersClient. */
public interface FluidRelayServersClient {
    /**
     * Get a Fluid Relay server.
     *
     * @param resourceGroup The resource group containing the resource.
     * @param name The resource name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Fluid Relay server.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    FluidRelayServerInner getByResourceGroup(String resourceGroup, String name);

    /**
     * Get a Fluid Relay server.
     *
     * @param resourceGroup The resource group containing the resource.
     * @param name The resource name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Fluid Relay server.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<FluidRelayServerInner> getByResourceGroupWithResponse(String resourceGroup, String name, Context context);

    /**
     * Create or Update a Fluid Relay server.
     *
     * @param resourceGroup The resource group containing the resource.
     * @param name The resource name.
     * @param resource The details of the Fluid Relay server resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a FluidRelay Server.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    FluidRelayServerInner createOrUpdate(String resourceGroup, String name, FluidRelayServerInner resource);

    /**
     * Create or Update a Fluid Relay server.
     *
     * @param resourceGroup The resource group containing the resource.
     * @param name The resource name.
     * @param resource The details of the Fluid Relay server resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a FluidRelay Server.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    FluidRelayServersCreateOrUpdateResponse createOrUpdateWithResponse(
        String resourceGroup, String name, FluidRelayServerInner resource, Context context);

    /**
     * Update a Fluid Relay server.
     *
     * @param resourceGroup The resource group containing the resource.
     * @param name The resource name.
     * @param resource The updatable details of the Fluid Relay server resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a FluidRelay Server.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    FluidRelayServerInner update(String resourceGroup, String name, FluidRelayServerUpdate resource);

    /**
     * Update a Fluid Relay server.
     *
     * @param resourceGroup The resource group containing the resource.
     * @param name The resource name.
     * @param resource The updatable details of the Fluid Relay server resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a FluidRelay Server.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    FluidRelayServersUpdateResponse updateWithResponse(
        String resourceGroup, String name, FluidRelayServerUpdate resource, Context context);

    /**
     * Delete a Fluid Relay server.
     *
     * @param resourceGroup The resource group containing the resource.
     * @param name The resource name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroup, String name);

    /**
     * Delete a Fluid Relay server.
     *
     * @param resourceGroup The resource group containing the resource.
     * @param name The resource name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    FluidRelayServersDeleteResponse deleteWithResponse(String resourceGroup, String name, Context context);

    /**
     * Regenerate the primary or secondary key for this server.
     *
     * @param resourceGroup The resource group containing the resource.
     * @param name The resource name.
     * @param parameters The details of which keys to generate.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the set of available keys for this server.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    FluidRelayServerKeysInner regenerateKey(String resourceGroup, String name, RegenerateKeyRequest parameters);

    /**
     * Regenerate the primary or secondary key for this server.
     *
     * @param resourceGroup The resource group containing the resource.
     * @param name The resource name.
     * @param parameters The details of which keys to generate.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the set of available keys for this server.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    FluidRelayServersRegenerateKeyResponse regenerateKeyWithResponse(
        String resourceGroup, String name, RegenerateKeyRequest parameters, Context context);

    /**
     * Regenerate the primary or secondary key for this server.
     *
     * @param resourceGroup The resource group containing the resource.
     * @param name The resource name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the set of available keys for this server.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    FluidRelayServerKeysInner getKeys(String resourceGroup, String name);

    /**
     * Regenerate the primary or secondary key for this server.
     *
     * @param resourceGroup The resource group containing the resource.
     * @param name The resource name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the set of available keys for this server.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    FluidRelayServersGetKeysResponse getKeysWithResponse(String resourceGroup, String name, Context context);

    /**
     * List all Fluid Relay servers in a subscription.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return paged response.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<FluidRelayServerInner> list();

    /**
     * List all Fluid Relay servers in a subscription.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return paged response.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<FluidRelayServerInner> list(Context context);

    /**
     * List all Fluid Relay servers in a resource group.
     *
     * @param resourceGroup The resource group containing the resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return paged response.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<FluidRelayServerInner> listByResourceGroup(String resourceGroup);

    /**
     * List all Fluid Relay servers in a resource group.
     *
     * @param resourceGroup The resource group containing the resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return paged response.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<FluidRelayServerInner> listByResourceGroup(String resourceGroup, Context context);
}
