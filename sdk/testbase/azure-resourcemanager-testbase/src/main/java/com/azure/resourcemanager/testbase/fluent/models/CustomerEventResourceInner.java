// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.testbase.models.NotificationEventReceiver;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The Customer Notification Event resource. */
@Fluent
public final class CustomerEventResourceInner extends ProxyResource {
    /*
     * The system metadata relating to this resource
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /*
     * Customer Notification Event properties.
     */
    @JsonProperty(value = "properties")
    private CustomerEventProperties innerProperties;

    /**
     * Get the systemData property: The system metadata relating to this resource.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the innerProperties property: Customer Notification Event properties.
     *
     * @return the innerProperties value.
     */
    private CustomerEventProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the eventName property: The name of the event subscribed to.
     *
     * @return the eventName value.
     */
    public String eventName() {
        return this.innerProperties() == null ? null : this.innerProperties().eventName();
    }

    /**
     * Set the eventName property: The name of the event subscribed to.
     *
     * @param eventName the eventName value to set.
     * @return the CustomerEventResourceInner object itself.
     */
    public CustomerEventResourceInner withEventName(String eventName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CustomerEventProperties();
        }
        this.innerProperties().withEventName(eventName);
        return this;
    }

    /**
     * Get the receivers property: The notification event receivers.
     *
     * @return the receivers value.
     */
    public List<NotificationEventReceiver> receivers() {
        return this.innerProperties() == null ? null : this.innerProperties().receivers();
    }

    /**
     * Set the receivers property: The notification event receivers.
     *
     * @param receivers the receivers value to set.
     * @return the CustomerEventResourceInner object itself.
     */
    public CustomerEventResourceInner withReceivers(List<NotificationEventReceiver> receivers) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CustomerEventProperties();
        }
        this.innerProperties().withReceivers(receivers);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
