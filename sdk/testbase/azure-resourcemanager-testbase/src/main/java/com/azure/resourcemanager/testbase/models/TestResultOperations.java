// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.models;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of TestResultOperations. */
public interface TestResultOperations {
    /**
     * Get the Test Result by Id with specified OS Update type for a Test Base Package.
     *
     * @param resourceGroupName The name of the resource group that contains the resource.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param packageName The resource name of the Test Base Package.
     * @param testResultName The Test Result Name. It equals to {osName}-{TestResultId} string.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Test Result by Id with specified OS Update type for a Test Base Package.
     */
    TestResultResource get(
        String resourceGroupName, String testBaseAccountName, String packageName, String testResultName);

    /**
     * Get the Test Result by Id with specified OS Update type for a Test Base Package.
     *
     * @param resourceGroupName The name of the resource group that contains the resource.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param packageName The resource name of the Test Base Package.
     * @param testResultName The Test Result Name. It equals to {osName}-{TestResultId} string.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Test Result by Id with specified OS Update type for a Test Base Package.
     */
    Response<TestResultResource> getWithResponse(
        String resourceGroupName,
        String testBaseAccountName,
        String packageName,
        String testResultName,
        Context context);
}
