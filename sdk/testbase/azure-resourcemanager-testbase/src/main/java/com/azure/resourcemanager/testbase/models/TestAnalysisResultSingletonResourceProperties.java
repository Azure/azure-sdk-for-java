// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.testbase.fluent.models.AnalysisResultSingletonResourceProperties;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/** The properties of Test Analysis Result. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "analysisResultType")
@JsonTypeName("TestAnalysis")
@Fluent
public final class TestAnalysisResultSingletonResourceProperties extends AnalysisResultSingletonResourceProperties {
    @JsonIgnore
    private final ClientLogger logger = new ClientLogger(TestAnalysisResultSingletonResourceProperties.class);

    /*
     * The result of test analysis.
     */
    @JsonProperty(value = "testAnalysisResult")
    private TestAnalysisResult testAnalysisResult;

    /**
     * Get the testAnalysisResult property: The result of test analysis.
     *
     * @return the testAnalysisResult value.
     */
    public TestAnalysisResult testAnalysisResult() {
        return this.testAnalysisResult;
    }

    /**
     * Set the testAnalysisResult property: The result of test analysis.
     *
     * @param testAnalysisResult the testAnalysisResult value to set.
     * @return the TestAnalysisResultSingletonResourceProperties object itself.
     */
    public TestAnalysisResultSingletonResourceProperties withTestAnalysisResult(TestAnalysisResult testAnalysisResult) {
        this.testAnalysisResult = testAnalysisResult;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public TestAnalysisResultSingletonResourceProperties withGrade(Grade grade) {
        super.withGrade(grade);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (testAnalysisResult() != null) {
            testAnalysisResult().validate();
        }
    }
}
