// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The BillingHubPackageUsage model. */
@Fluent
public final class BillingHubPackageUsage {
    /*
     * The applicationName property.
     */
    @JsonProperty(value = "applicationName")
    private String applicationName;

    /*
     * The applicationVersion property.
     */
    @JsonProperty(value = "applicationVersion")
    private String applicationVersion;

    /*
     * The azureResourceUri property.
     */
    @JsonProperty(value = "azureResourceUri")
    private String azureResourceUri;

    /*
     * The totalUsedFreeHours property.
     */
    @JsonProperty(value = "totalUsedFreeHours")
    private Double totalUsedFreeHours;

    /*
     * The totalUsedBillableHours property.
     */
    @JsonProperty(value = "totalUsedBillableHours")
    private Double totalUsedBillableHours;

    /*
     * The totalCharges property.
     */
    @JsonProperty(value = "totalCharges")
    private Double totalCharges;

    /*
     * The usageEntriesGroupedByUpdateType property.
     */
    @JsonProperty(value = "usageEntriesGroupedByUpdateType")
    private List<BillingHubUsageGroupedByUpdateType> usageEntriesGroupedByUpdateType;

    /**
     * Get the applicationName property: The applicationName property.
     *
     * @return the applicationName value.
     */
    public String applicationName() {
        return this.applicationName;
    }

    /**
     * Set the applicationName property: The applicationName property.
     *
     * @param applicationName the applicationName value to set.
     * @return the BillingHubPackageUsage object itself.
     */
    public BillingHubPackageUsage withApplicationName(String applicationName) {
        this.applicationName = applicationName;
        return this;
    }

    /**
     * Get the applicationVersion property: The applicationVersion property.
     *
     * @return the applicationVersion value.
     */
    public String applicationVersion() {
        return this.applicationVersion;
    }

    /**
     * Set the applicationVersion property: The applicationVersion property.
     *
     * @param applicationVersion the applicationVersion value to set.
     * @return the BillingHubPackageUsage object itself.
     */
    public BillingHubPackageUsage withApplicationVersion(String applicationVersion) {
        this.applicationVersion = applicationVersion;
        return this;
    }

    /**
     * Get the azureResourceUri property: The azureResourceUri property.
     *
     * @return the azureResourceUri value.
     */
    public String azureResourceUri() {
        return this.azureResourceUri;
    }

    /**
     * Set the azureResourceUri property: The azureResourceUri property.
     *
     * @param azureResourceUri the azureResourceUri value to set.
     * @return the BillingHubPackageUsage object itself.
     */
    public BillingHubPackageUsage withAzureResourceUri(String azureResourceUri) {
        this.azureResourceUri = azureResourceUri;
        return this;
    }

    /**
     * Get the totalUsedFreeHours property: The totalUsedFreeHours property.
     *
     * @return the totalUsedFreeHours value.
     */
    public Double totalUsedFreeHours() {
        return this.totalUsedFreeHours;
    }

    /**
     * Set the totalUsedFreeHours property: The totalUsedFreeHours property.
     *
     * @param totalUsedFreeHours the totalUsedFreeHours value to set.
     * @return the BillingHubPackageUsage object itself.
     */
    public BillingHubPackageUsage withTotalUsedFreeHours(Double totalUsedFreeHours) {
        this.totalUsedFreeHours = totalUsedFreeHours;
        return this;
    }

    /**
     * Get the totalUsedBillableHours property: The totalUsedBillableHours property.
     *
     * @return the totalUsedBillableHours value.
     */
    public Double totalUsedBillableHours() {
        return this.totalUsedBillableHours;
    }

    /**
     * Set the totalUsedBillableHours property: The totalUsedBillableHours property.
     *
     * @param totalUsedBillableHours the totalUsedBillableHours value to set.
     * @return the BillingHubPackageUsage object itself.
     */
    public BillingHubPackageUsage withTotalUsedBillableHours(Double totalUsedBillableHours) {
        this.totalUsedBillableHours = totalUsedBillableHours;
        return this;
    }

    /**
     * Get the totalCharges property: The totalCharges property.
     *
     * @return the totalCharges value.
     */
    public Double totalCharges() {
        return this.totalCharges;
    }

    /**
     * Set the totalCharges property: The totalCharges property.
     *
     * @param totalCharges the totalCharges value to set.
     * @return the BillingHubPackageUsage object itself.
     */
    public BillingHubPackageUsage withTotalCharges(Double totalCharges) {
        this.totalCharges = totalCharges;
        return this;
    }

    /**
     * Get the usageEntriesGroupedByUpdateType property: The usageEntriesGroupedByUpdateType property.
     *
     * @return the usageEntriesGroupedByUpdateType value.
     */
    public List<BillingHubUsageGroupedByUpdateType> usageEntriesGroupedByUpdateType() {
        return this.usageEntriesGroupedByUpdateType;
    }

    /**
     * Set the usageEntriesGroupedByUpdateType property: The usageEntriesGroupedByUpdateType property.
     *
     * @param usageEntriesGroupedByUpdateType the usageEntriesGroupedByUpdateType value to set.
     * @return the BillingHubPackageUsage object itself.
     */
    public BillingHubPackageUsage withUsageEntriesGroupedByUpdateType(
        List<BillingHubUsageGroupedByUpdateType> usageEntriesGroupedByUpdateType) {
        this.usageEntriesGroupedByUpdateType = usageEntriesGroupedByUpdateType;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (usageEntriesGroupedByUpdateType() != null) {
            usageEntriesGroupedByUpdateType().forEach(e -> e.validate());
        }
    }
}
