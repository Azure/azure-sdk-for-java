// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.testbase.fluent.BillingHubServicesClient;
import com.azure.resourcemanager.testbase.fluent.models.BillingHubGetFreeHourBalanceResponseInner;
import com.azure.resourcemanager.testbase.fluent.models.BillingHubGetUsageResponseInner;
import com.azure.resourcemanager.testbase.models.BillingHubGetFreeHourBalanceResponse;
import com.azure.resourcemanager.testbase.models.BillingHubGetUsageRequest;
import com.azure.resourcemanager.testbase.models.BillingHubGetUsageResponse;
import com.azure.resourcemanager.testbase.models.BillingHubServices;

public final class BillingHubServicesImpl implements BillingHubServices {
    private static final ClientLogger LOGGER = new ClientLogger(BillingHubServicesImpl.class);

    private final BillingHubServicesClient innerClient;

    private final com.azure.resourcemanager.testbase.TestBaseManager serviceManager;

    public BillingHubServicesImpl(
        BillingHubServicesClient innerClient, com.azure.resourcemanager.testbase.TestBaseManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public BillingHubGetFreeHourBalanceResponse getFreeHourBalance(
        String resourceGroupName, String testBaseAccountName) {
        BillingHubGetFreeHourBalanceResponseInner inner =
            this.serviceClient().getFreeHourBalance(resourceGroupName, testBaseAccountName);
        if (inner != null) {
            return new BillingHubGetFreeHourBalanceResponseImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<BillingHubGetFreeHourBalanceResponse> getFreeHourBalanceWithResponse(
        String resourceGroupName, String testBaseAccountName, Context context) {
        Response<BillingHubGetFreeHourBalanceResponseInner> inner =
            this.serviceClient().getFreeHourBalanceWithResponse(resourceGroupName, testBaseAccountName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new BillingHubGetFreeHourBalanceResponseImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public BillingHubGetUsageResponse getUsage(String resourceGroupName, String testBaseAccountName) {
        BillingHubGetUsageResponseInner inner = this.serviceClient().getUsage(resourceGroupName, testBaseAccountName);
        if (inner != null) {
            return new BillingHubGetUsageResponseImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<BillingHubGetUsageResponse> getUsageWithResponse(
        String resourceGroupName,
        String testBaseAccountName,
        BillingHubGetUsageRequest getUsageRequest,
        Context context) {
        Response<BillingHubGetUsageResponseInner> inner =
            this.serviceClient().getUsageWithResponse(resourceGroupName, testBaseAccountName, getUsageRequest, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new BillingHubGetUsageResponseImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    private BillingHubServicesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.testbase.TestBaseManager manager() {
        return this.serviceManager;
    }
}
