// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.models;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of ResourceProviders. */
public interface ResourceProviders {
    /**
     * Gets the file upload URL of a Test Base Account.
     *
     * @param resourceGroupName The name of the resource group that contains the resource.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the file upload URL of a Test Base Account.
     */
    FileUploadUrlResponse testBaseAccountGetFileUploadUrl(String resourceGroupName, String testBaseAccountName);

    /**
     * Gets the file upload URL of a Test Base Account.
     *
     * @param resourceGroupName The name of the resource group that contains the resource.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param parameters Parameters supplied to the Test Base Account GetFileUploadURL operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the file upload URL of a Test Base Account.
     */
    Response<FileUploadUrlResponse> testBaseAccountGetFileUploadUrlWithResponse(
        String resourceGroupName, String testBaseAccountName, GetFileUploadUrlParameters parameters, Context context);

    /**
     * Checks that the Test Base Package name and version is valid and is not already in use.
     *
     * @param resourceGroupName The name of the resource group that contains the resource.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param parameters Parameters supplied to the Test Base Package CheckNameAvailability operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return description of a Check Name availability response properties.
     */
    CheckNameAvailabilityResult checkPackageNameAvailability(
        String resourceGroupName, String testBaseAccountName, PackageCheckNameAvailabilityParameters parameters);

    /**
     * Checks that the Test Base Package name and version is valid and is not already in use.
     *
     * @param resourceGroupName The name of the resource group that contains the resource.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param parameters Parameters supplied to the Test Base Package CheckNameAvailability operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return description of a Check Name availability response properties.
     */
    Response<CheckNameAvailabilityResult> checkPackageNameAvailabilityWithResponse(
        String resourceGroupName,
        String testBaseAccountName,
        PackageCheckNameAvailabilityParameters parameters,
        Context context);

    /**
     * Gets the download URL of a package.
     *
     * @param resourceGroupName The name of the resource group that contains the resource.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param packageName The resource name of the Test Base Package.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the download URL of a package.
     */
    DownloadUrlResponse packageGetDownloadUrl(String resourceGroupName, String testBaseAccountName, String packageName);

    /**
     * Gets the download URL of a package.
     *
     * @param resourceGroupName The name of the resource group that contains the resource.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param packageName The resource name of the Test Base Package.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the download URL of a package.
     */
    Response<DownloadUrlResponse> packageGetDownloadUrlWithResponse(
        String resourceGroupName, String testBaseAccountName, String packageName, Context context);

    /**
     * Gets the download URL or the test result.
     *
     * @param resourceGroupName The name of the resource group that contains the resource.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param packageName The resource name of the Test Base Package.
     * @param testResultName The Test Result Name. It equals to {osName}-{TestResultId} string.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the download URL or the test result.
     */
    DownloadUrlResponse testResultGetDownloadUrl(
        String resourceGroupName, String testBaseAccountName, String packageName, String testResultName);

    /**
     * Gets the download URL or the test result.
     *
     * @param resourceGroupName The name of the resource group that contains the resource.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param packageName The resource name of the Test Base Package.
     * @param testResultName The Test Result Name. It equals to {osName}-{TestResultId} string.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the download URL or the test result.
     */
    Response<DownloadUrlResponse> testResultGetDownloadUrlWithResponse(
        String resourceGroupName,
        String testBaseAccountName,
        String packageName,
        String testResultName,
        Context context);

    /**
     * Gets the download URL of the test execution screen recording.
     *
     * @param resourceGroupName The name of the resource group that contains the resource.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param packageName The resource name of the Test Base Package.
     * @param testResultName The Test Result Name. It equals to {osName}-{TestResultId} string.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the download URL of the test execution screen recording.
     */
    DownloadUrlResponse testResultGetVideoDownloadUrl(
        String resourceGroupName, String testBaseAccountName, String packageName, String testResultName);

    /**
     * Gets the download URL of the test execution screen recording.
     *
     * @param resourceGroupName The name of the resource group that contains the resource.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param packageName The resource name of the Test Base Package.
     * @param testResultName The Test Result Name. It equals to {osName}-{TestResultId} string.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the download URL of the test execution screen recording.
     */
    Response<DownloadUrlResponse> testResultGetVideoDownloadUrlWithResponse(
        String resourceGroupName,
        String testBaseAccountName,
        String packageName,
        String testResultName,
        Context context);
}
