// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** The Script Execution Result. */
@Fluent
public final class ScriptExecutionResult {
    /*
     * Name of script.
     */
    @JsonProperty(value = "scriptName")
    private String scriptName;

    /*
     * Start time of script execution.
     */
    @JsonProperty(value = "startTime")
    private OffsetDateTime startTime;

    /*
     * End time of script execution.
     */
    @JsonProperty(value = "endTime")
    private OffsetDateTime endTime;

    /*
     * Exit code.
     */
    @JsonProperty(value = "exitCode")
    private Integer exitCode;

    /*
     * Whether the script execution is timed out.
     */
    @JsonProperty(value = "timedOut")
    private Boolean timedOut;

    /*
     * The stdout log file name.
     */
    @JsonProperty(value = "stdoutLogFileName")
    private String stdoutLogFileName;

    /*
     * The stderr log file name.
     */
    @JsonProperty(value = "stderrLogFileName")
    private String stderrLogFileName;

    /**
     * Get the scriptName property: Name of script.
     *
     * @return the scriptName value.
     */
    public String scriptName() {
        return this.scriptName;
    }

    /**
     * Set the scriptName property: Name of script.
     *
     * @param scriptName the scriptName value to set.
     * @return the ScriptExecutionResult object itself.
     */
    public ScriptExecutionResult withScriptName(String scriptName) {
        this.scriptName = scriptName;
        return this;
    }

    /**
     * Get the startTime property: Start time of script execution.
     *
     * @return the startTime value.
     */
    public OffsetDateTime startTime() {
        return this.startTime;
    }

    /**
     * Set the startTime property: Start time of script execution.
     *
     * @param startTime the startTime value to set.
     * @return the ScriptExecutionResult object itself.
     */
    public ScriptExecutionResult withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }

    /**
     * Get the endTime property: End time of script execution.
     *
     * @return the endTime value.
     */
    public OffsetDateTime endTime() {
        return this.endTime;
    }

    /**
     * Set the endTime property: End time of script execution.
     *
     * @param endTime the endTime value to set.
     * @return the ScriptExecutionResult object itself.
     */
    public ScriptExecutionResult withEndTime(OffsetDateTime endTime) {
        this.endTime = endTime;
        return this;
    }

    /**
     * Get the exitCode property: Exit code.
     *
     * @return the exitCode value.
     */
    public Integer exitCode() {
        return this.exitCode;
    }

    /**
     * Set the exitCode property: Exit code.
     *
     * @param exitCode the exitCode value to set.
     * @return the ScriptExecutionResult object itself.
     */
    public ScriptExecutionResult withExitCode(Integer exitCode) {
        this.exitCode = exitCode;
        return this;
    }

    /**
     * Get the timedOut property: Whether the script execution is timed out.
     *
     * @return the timedOut value.
     */
    public Boolean timedOut() {
        return this.timedOut;
    }

    /**
     * Set the timedOut property: Whether the script execution is timed out.
     *
     * @param timedOut the timedOut value to set.
     * @return the ScriptExecutionResult object itself.
     */
    public ScriptExecutionResult withTimedOut(Boolean timedOut) {
        this.timedOut = timedOut;
        return this;
    }

    /**
     * Get the stdoutLogFileName property: The stdout log file name.
     *
     * @return the stdoutLogFileName value.
     */
    public String stdoutLogFileName() {
        return this.stdoutLogFileName;
    }

    /**
     * Set the stdoutLogFileName property: The stdout log file name.
     *
     * @param stdoutLogFileName the stdoutLogFileName value to set.
     * @return the ScriptExecutionResult object itself.
     */
    public ScriptExecutionResult withStdoutLogFileName(String stdoutLogFileName) {
        this.stdoutLogFileName = stdoutLogFileName;
        return this;
    }

    /**
     * Get the stderrLogFileName property: The stderr log file name.
     *
     * @return the stderrLogFileName value.
     */
    public String stderrLogFileName() {
        return this.stderrLogFileName;
    }

    /**
     * Set the stderrLogFileName property: The stderr log file name.
     *
     * @param stderrLogFileName the stderrLogFileName value to set.
     * @return the ScriptExecutionResult object itself.
     */
    public ScriptExecutionResult withStderrLogFileName(String stderrLogFileName) {
        this.stderrLogFileName = stderrLogFileName;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
