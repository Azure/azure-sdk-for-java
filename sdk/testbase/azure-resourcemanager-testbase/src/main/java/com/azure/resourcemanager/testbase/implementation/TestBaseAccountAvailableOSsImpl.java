// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.testbase.fluent.TestBaseAccountAvailableOSsClient;
import com.azure.resourcemanager.testbase.fluent.models.AvailableOSResourceInner;
import com.azure.resourcemanager.testbase.models.AvailableOSResource;
import com.azure.resourcemanager.testbase.models.OsUpdateType;
import com.azure.resourcemanager.testbase.models.TestBaseAccountAvailableOSs;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class TestBaseAccountAvailableOSsImpl implements TestBaseAccountAvailableOSs {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(TestBaseAccountAvailableOSsImpl.class);

    private final TestBaseAccountAvailableOSsClient innerClient;

    private final com.azure.resourcemanager.testbase.TestbaseManager serviceManager;

    public TestBaseAccountAvailableOSsImpl(
        TestBaseAccountAvailableOSsClient innerClient,
        com.azure.resourcemanager.testbase.TestbaseManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<AvailableOSResource> list(
        String resourceGroupName, String testBaseAccountName, OsUpdateType osUpdateType) {
        PagedIterable<AvailableOSResourceInner> inner =
            this.serviceClient().list(resourceGroupName, testBaseAccountName, osUpdateType);
        return Utils.mapPage(inner, inner1 -> new AvailableOSResourceImpl(inner1, this.manager()));
    }

    public PagedIterable<AvailableOSResource> list(
        String resourceGroupName, String testBaseAccountName, OsUpdateType osUpdateType, Context context) {
        PagedIterable<AvailableOSResourceInner> inner =
            this.serviceClient().list(resourceGroupName, testBaseAccountName, osUpdateType, context);
        return Utils.mapPage(inner, inner1 -> new AvailableOSResourceImpl(inner1, this.manager()));
    }

    private TestBaseAccountAvailableOSsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.testbase.TestbaseManager manager() {
        return this.serviceManager;
    }
}
