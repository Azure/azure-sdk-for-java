// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.testbase.models.ExecutionStatus;
import com.azure.resourcemanager.testbase.models.Grade;
import com.azure.resourcemanager.testbase.models.OSUpdatesTestSummary;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Summary of a Test. */
@JsonFlatten
@Fluent
public class TestSummaryResourceInner extends ProxyResource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(TestSummaryResourceInner.class);

    /*
     * The system metadata relating to this resource
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /*
     * The Id of the current Test Summary.
     */
    @JsonProperty(value = "properties.testSummaryId")
    private String testSummaryId;

    /*
     * The Azure resource Id of package.
     */
    @JsonProperty(value = "properties.packageId")
    private String packageId;

    /*
     * Application name.
     */
    @JsonProperty(value = "properties.applicationName")
    private String applicationName;

    /*
     * Application version.
     */
    @JsonProperty(value = "properties.applicationVersion")
    private String applicationVersion;

    /*
     * The execution status of last test.
     */
    @JsonProperty(value = "properties.executionStatus")
    private ExecutionStatus executionStatus;

    /*
     * The grade of the test.
     */
    @JsonProperty(value = "properties.grade")
    private Grade grade;

    /*
     * The run time of the last test.
     */
    @JsonProperty(value = "properties.testRunTime")
    private String testRunTime;

    /*
     * The result summary of tests triggered by feature updates
     */
    @JsonProperty(value = "properties.featureUpdatesTestSummary")
    private OSUpdatesTestSummary featureUpdatesTestSummary;

    /*
     * The result summary of tests triggered by security updates
     */
    @JsonProperty(value = "properties.securityUpdatesTestSummary")
    private OSUpdatesTestSummary securityUpdatesTestSummary;

    /**
     * Get the systemData property: The system metadata relating to this resource.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the testSummaryId property: The Id of the current Test Summary.
     *
     * @return the testSummaryId value.
     */
    public String testSummaryId() {
        return this.testSummaryId;
    }

    /**
     * Set the testSummaryId property: The Id of the current Test Summary.
     *
     * @param testSummaryId the testSummaryId value to set.
     * @return the TestSummaryResourceInner object itself.
     */
    public TestSummaryResourceInner withTestSummaryId(String testSummaryId) {
        this.testSummaryId = testSummaryId;
        return this;
    }

    /**
     * Get the packageId property: The Azure resource Id of package.
     *
     * @return the packageId value.
     */
    public String packageId() {
        return this.packageId;
    }

    /**
     * Set the packageId property: The Azure resource Id of package.
     *
     * @param packageId the packageId value to set.
     * @return the TestSummaryResourceInner object itself.
     */
    public TestSummaryResourceInner withPackageId(String packageId) {
        this.packageId = packageId;
        return this;
    }

    /**
     * Get the applicationName property: Application name.
     *
     * @return the applicationName value.
     */
    public String applicationName() {
        return this.applicationName;
    }

    /**
     * Set the applicationName property: Application name.
     *
     * @param applicationName the applicationName value to set.
     * @return the TestSummaryResourceInner object itself.
     */
    public TestSummaryResourceInner withApplicationName(String applicationName) {
        this.applicationName = applicationName;
        return this;
    }

    /**
     * Get the applicationVersion property: Application version.
     *
     * @return the applicationVersion value.
     */
    public String applicationVersion() {
        return this.applicationVersion;
    }

    /**
     * Set the applicationVersion property: Application version.
     *
     * @param applicationVersion the applicationVersion value to set.
     * @return the TestSummaryResourceInner object itself.
     */
    public TestSummaryResourceInner withApplicationVersion(String applicationVersion) {
        this.applicationVersion = applicationVersion;
        return this;
    }

    /**
     * Get the executionStatus property: The execution status of last test.
     *
     * @return the executionStatus value.
     */
    public ExecutionStatus executionStatus() {
        return this.executionStatus;
    }

    /**
     * Set the executionStatus property: The execution status of last test.
     *
     * @param executionStatus the executionStatus value to set.
     * @return the TestSummaryResourceInner object itself.
     */
    public TestSummaryResourceInner withExecutionStatus(ExecutionStatus executionStatus) {
        this.executionStatus = executionStatus;
        return this;
    }

    /**
     * Get the grade property: The grade of the test.
     *
     * @return the grade value.
     */
    public Grade grade() {
        return this.grade;
    }

    /**
     * Set the grade property: The grade of the test.
     *
     * @param grade the grade value to set.
     * @return the TestSummaryResourceInner object itself.
     */
    public TestSummaryResourceInner withGrade(Grade grade) {
        this.grade = grade;
        return this;
    }

    /**
     * Get the testRunTime property: The run time of the last test.
     *
     * @return the testRunTime value.
     */
    public String testRunTime() {
        return this.testRunTime;
    }

    /**
     * Set the testRunTime property: The run time of the last test.
     *
     * @param testRunTime the testRunTime value to set.
     * @return the TestSummaryResourceInner object itself.
     */
    public TestSummaryResourceInner withTestRunTime(String testRunTime) {
        this.testRunTime = testRunTime;
        return this;
    }

    /**
     * Get the featureUpdatesTestSummary property: The result summary of tests triggered by feature updates.
     *
     * @return the featureUpdatesTestSummary value.
     */
    public OSUpdatesTestSummary featureUpdatesTestSummary() {
        return this.featureUpdatesTestSummary;
    }

    /**
     * Set the featureUpdatesTestSummary property: The result summary of tests triggered by feature updates.
     *
     * @param featureUpdatesTestSummary the featureUpdatesTestSummary value to set.
     * @return the TestSummaryResourceInner object itself.
     */
    public TestSummaryResourceInner withFeatureUpdatesTestSummary(OSUpdatesTestSummary featureUpdatesTestSummary) {
        this.featureUpdatesTestSummary = featureUpdatesTestSummary;
        return this;
    }

    /**
     * Get the securityUpdatesTestSummary property: The result summary of tests triggered by security updates.
     *
     * @return the securityUpdatesTestSummary value.
     */
    public OSUpdatesTestSummary securityUpdatesTestSummary() {
        return this.securityUpdatesTestSummary;
    }

    /**
     * Set the securityUpdatesTestSummary property: The result summary of tests triggered by security updates.
     *
     * @param securityUpdatesTestSummary the securityUpdatesTestSummary value to set.
     * @return the TestSummaryResourceInner object itself.
     */
    public TestSummaryResourceInner withSecurityUpdatesTestSummary(OSUpdatesTestSummary securityUpdatesTestSummary) {
        this.securityUpdatesTestSummary = securityUpdatesTestSummary;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (featureUpdatesTestSummary() != null) {
            featureUpdatesTestSummary().validate();
        }
        if (securityUpdatesTestSummary() != null) {
            securityUpdatesTestSummary().validate();
        }
    }
}
