// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.testbase.models.ExecutionStatus;
import com.azure.resourcemanager.testbase.models.Grade;
import com.azure.resourcemanager.testbase.models.OSUpdatesTestSummary;
import com.azure.resourcemanager.testbase.models.TestStatus;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Summary of a Test. */
@Fluent
public final class TestSummaryResourceInner extends ProxyResource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(TestSummaryResourceInner.class);

    /*
     * The system metadata relating to this resource
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /*
     * Properties of a Test Summary.
     */
    @JsonProperty(value = "properties")
    private TestSummaryProperties innerProperties;

    /**
     * Get the systemData property: The system metadata relating to this resource.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the innerProperties property: Properties of a Test Summary.
     *
     * @return the innerProperties value.
     */
    private TestSummaryProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the testSummaryId property: The Id of the current Test Summary.
     *
     * @return the testSummaryId value.
     */
    public String testSummaryId() {
        return this.innerProperties() == null ? null : this.innerProperties().testSummaryId();
    }

    /**
     * Set the testSummaryId property: The Id of the current Test Summary.
     *
     * @param testSummaryId the testSummaryId value to set.
     * @return the TestSummaryResourceInner object itself.
     */
    public TestSummaryResourceInner withTestSummaryId(String testSummaryId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new TestSummaryProperties();
        }
        this.innerProperties().withTestSummaryId(testSummaryId);
        return this;
    }

    /**
     * Get the packageId property: The Azure resource Id of package.
     *
     * @return the packageId value.
     */
    public String packageId() {
        return this.innerProperties() == null ? null : this.innerProperties().packageId();
    }

    /**
     * Set the packageId property: The Azure resource Id of package.
     *
     * @param packageId the packageId value to set.
     * @return the TestSummaryResourceInner object itself.
     */
    public TestSummaryResourceInner withPackageId(String packageId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new TestSummaryProperties();
        }
        this.innerProperties().withPackageId(packageId);
        return this;
    }

    /**
     * Get the applicationName property: Application name.
     *
     * @return the applicationName value.
     */
    public String applicationName() {
        return this.innerProperties() == null ? null : this.innerProperties().applicationName();
    }

    /**
     * Set the applicationName property: Application name.
     *
     * @param applicationName the applicationName value to set.
     * @return the TestSummaryResourceInner object itself.
     */
    public TestSummaryResourceInner withApplicationName(String applicationName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new TestSummaryProperties();
        }
        this.innerProperties().withApplicationName(applicationName);
        return this;
    }

    /**
     * Get the applicationVersion property: Application version.
     *
     * @return the applicationVersion value.
     */
    public String applicationVersion() {
        return this.innerProperties() == null ? null : this.innerProperties().applicationVersion();
    }

    /**
     * Set the applicationVersion property: Application version.
     *
     * @param applicationVersion the applicationVersion value to set.
     * @return the TestSummaryResourceInner object itself.
     */
    public TestSummaryResourceInner withApplicationVersion(String applicationVersion) {
        if (this.innerProperties() == null) {
            this.innerProperties = new TestSummaryProperties();
        }
        this.innerProperties().withApplicationVersion(applicationVersion);
        return this;
    }

    /**
     * Get the executionStatus property: The execution status of last test.
     *
     * @return the executionStatus value.
     */
    public ExecutionStatus executionStatus() {
        return this.innerProperties() == null ? null : this.innerProperties().executionStatus();
    }

    /**
     * Set the executionStatus property: The execution status of last test.
     *
     * @param executionStatus the executionStatus value to set.
     * @return the TestSummaryResourceInner object itself.
     */
    public TestSummaryResourceInner withExecutionStatus(ExecutionStatus executionStatus) {
        if (this.innerProperties() == null) {
            this.innerProperties = new TestSummaryProperties();
        }
        this.innerProperties().withExecutionStatus(executionStatus);
        return this;
    }

    /**
     * Get the testStatus property: The status of last test.
     *
     * @return the testStatus value.
     */
    public TestStatus testStatus() {
        return this.innerProperties() == null ? null : this.innerProperties().testStatus();
    }

    /**
     * Set the testStatus property: The status of last test.
     *
     * @param testStatus the testStatus value to set.
     * @return the TestSummaryResourceInner object itself.
     */
    public TestSummaryResourceInner withTestStatus(TestStatus testStatus) {
        if (this.innerProperties() == null) {
            this.innerProperties = new TestSummaryProperties();
        }
        this.innerProperties().withTestStatus(testStatus);
        return this;
    }

    /**
     * Get the grade property: The grade of the test.
     *
     * @return the grade value.
     */
    public Grade grade() {
        return this.innerProperties() == null ? null : this.innerProperties().grade();
    }

    /**
     * Set the grade property: The grade of the test.
     *
     * @param grade the grade value to set.
     * @return the TestSummaryResourceInner object itself.
     */
    public TestSummaryResourceInner withGrade(Grade grade) {
        if (this.innerProperties() == null) {
            this.innerProperties = new TestSummaryProperties();
        }
        this.innerProperties().withGrade(grade);
        return this;
    }

    /**
     * Get the testRunTime property: The run time of the last test.
     *
     * @return the testRunTime value.
     */
    public String testRunTime() {
        return this.innerProperties() == null ? null : this.innerProperties().testRunTime();
    }

    /**
     * Set the testRunTime property: The run time of the last test.
     *
     * @param testRunTime the testRunTime value to set.
     * @return the TestSummaryResourceInner object itself.
     */
    public TestSummaryResourceInner withTestRunTime(String testRunTime) {
        if (this.innerProperties() == null) {
            this.innerProperties = new TestSummaryProperties();
        }
        this.innerProperties().withTestRunTime(testRunTime);
        return this;
    }

    /**
     * Get the featureUpdatesTestSummary property: The result summary of tests triggered by feature updates.
     *
     * @return the featureUpdatesTestSummary value.
     */
    public OSUpdatesTestSummary featureUpdatesTestSummary() {
        return this.innerProperties() == null ? null : this.innerProperties().featureUpdatesTestSummary();
    }

    /**
     * Set the featureUpdatesTestSummary property: The result summary of tests triggered by feature updates.
     *
     * @param featureUpdatesTestSummary the featureUpdatesTestSummary value to set.
     * @return the TestSummaryResourceInner object itself.
     */
    public TestSummaryResourceInner withFeatureUpdatesTestSummary(OSUpdatesTestSummary featureUpdatesTestSummary) {
        if (this.innerProperties() == null) {
            this.innerProperties = new TestSummaryProperties();
        }
        this.innerProperties().withFeatureUpdatesTestSummary(featureUpdatesTestSummary);
        return this;
    }

    /**
     * Get the securityUpdatesTestSummary property: The result summary of tests triggered by security updates.
     *
     * @return the securityUpdatesTestSummary value.
     */
    public OSUpdatesTestSummary securityUpdatesTestSummary() {
        return this.innerProperties() == null ? null : this.innerProperties().securityUpdatesTestSummary();
    }

    /**
     * Set the securityUpdatesTestSummary property: The result summary of tests triggered by security updates.
     *
     * @param securityUpdatesTestSummary the securityUpdatesTestSummary value to set.
     * @return the TestSummaryResourceInner object itself.
     */
    public TestSummaryResourceInner withSecurityUpdatesTestSummary(OSUpdatesTestSummary securityUpdatesTestSummary) {
        if (this.innerProperties() == null) {
            this.innerProperties = new TestSummaryProperties();
        }
        this.innerProperties().withSecurityUpdatesTestSummary(securityUpdatesTestSummary);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
