// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The BillingHubUsageGroupedByUpdateType model. */
@Fluent
public final class BillingHubUsageGroupedByUpdateType {
    /*
     * The updateType property.
     */
    @JsonProperty(value = "updateType")
    private String updateType;

    /*
     * The totalUsedFreeHours property.
     */
    @JsonProperty(value = "totalUsedFreeHours")
    private Double totalUsedFreeHours;

    /*
     * The totalUsedBillableHours property.
     */
    @JsonProperty(value = "totalUsedBillableHours")
    private Double totalUsedBillableHours;

    /*
     * The totalCharges property.
     */
    @JsonProperty(value = "totalCharges")
    private Double totalCharges;

    /*
     * The usageGroups property.
     */
    @JsonProperty(value = "usageGroups")
    private List<BillingHubUsageGroup> usageGroups;

    /**
     * Get the updateType property: The updateType property.
     *
     * @return the updateType value.
     */
    public String updateType() {
        return this.updateType;
    }

    /**
     * Set the updateType property: The updateType property.
     *
     * @param updateType the updateType value to set.
     * @return the BillingHubUsageGroupedByUpdateType object itself.
     */
    public BillingHubUsageGroupedByUpdateType withUpdateType(String updateType) {
        this.updateType = updateType;
        return this;
    }

    /**
     * Get the totalUsedFreeHours property: The totalUsedFreeHours property.
     *
     * @return the totalUsedFreeHours value.
     */
    public Double totalUsedFreeHours() {
        return this.totalUsedFreeHours;
    }

    /**
     * Set the totalUsedFreeHours property: The totalUsedFreeHours property.
     *
     * @param totalUsedFreeHours the totalUsedFreeHours value to set.
     * @return the BillingHubUsageGroupedByUpdateType object itself.
     */
    public BillingHubUsageGroupedByUpdateType withTotalUsedFreeHours(Double totalUsedFreeHours) {
        this.totalUsedFreeHours = totalUsedFreeHours;
        return this;
    }

    /**
     * Get the totalUsedBillableHours property: The totalUsedBillableHours property.
     *
     * @return the totalUsedBillableHours value.
     */
    public Double totalUsedBillableHours() {
        return this.totalUsedBillableHours;
    }

    /**
     * Set the totalUsedBillableHours property: The totalUsedBillableHours property.
     *
     * @param totalUsedBillableHours the totalUsedBillableHours value to set.
     * @return the BillingHubUsageGroupedByUpdateType object itself.
     */
    public BillingHubUsageGroupedByUpdateType withTotalUsedBillableHours(Double totalUsedBillableHours) {
        this.totalUsedBillableHours = totalUsedBillableHours;
        return this;
    }

    /**
     * Get the totalCharges property: The totalCharges property.
     *
     * @return the totalCharges value.
     */
    public Double totalCharges() {
        return this.totalCharges;
    }

    /**
     * Set the totalCharges property: The totalCharges property.
     *
     * @param totalCharges the totalCharges value to set.
     * @return the BillingHubUsageGroupedByUpdateType object itself.
     */
    public BillingHubUsageGroupedByUpdateType withTotalCharges(Double totalCharges) {
        this.totalCharges = totalCharges;
        return this;
    }

    /**
     * Get the usageGroups property: The usageGroups property.
     *
     * @return the usageGroups value.
     */
    public List<BillingHubUsageGroup> usageGroups() {
        return this.usageGroups;
    }

    /**
     * Set the usageGroups property: The usageGroups property.
     *
     * @param usageGroups the usageGroups value to set.
     * @return the BillingHubUsageGroupedByUpdateType object itself.
     */
    public BillingHubUsageGroupedByUpdateType withUsageGroups(List<BillingHubUsageGroup> usageGroups) {
        this.usageGroups = usageGroups;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (usageGroups() != null) {
            usageGroups().forEach(e -> e.validate());
        }
    }
}
