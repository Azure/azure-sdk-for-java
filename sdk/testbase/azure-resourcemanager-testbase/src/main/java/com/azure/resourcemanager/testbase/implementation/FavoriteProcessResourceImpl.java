// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.testbase.fluent.models.FavoriteProcessResourceInner;
import com.azure.resourcemanager.testbase.models.FavoriteProcessResource;

public final class FavoriteProcessResourceImpl implements FavoriteProcessResource, FavoriteProcessResource.Definition {
    private FavoriteProcessResourceInner innerObject;

    private final com.azure.resourcemanager.testbase.TestbaseManager serviceManager;

    FavoriteProcessResourceImpl(
        FavoriteProcessResourceInner innerObject, com.azure.resourcemanager.testbase.TestbaseManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String actualProcessName() {
        return this.innerModel().actualProcessName();
    }

    public FavoriteProcessResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.testbase.TestbaseManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String testBaseAccountName;

    private String packageName;

    private String favoriteProcessResourceName;

    public FavoriteProcessResourceImpl withExistingPackage(
        String resourceGroupName, String testBaseAccountName, String packageName) {
        this.resourceGroupName = resourceGroupName;
        this.testBaseAccountName = testBaseAccountName;
        this.packageName = packageName;
        return this;
    }

    public FavoriteProcessResource create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getFavoriteProcess()
                .createWithResponse(
                    resourceGroupName,
                    testBaseAccountName,
                    packageName,
                    favoriteProcessResourceName,
                    this.innerModel(),
                    Context.NONE)
                .getValue();
        return this;
    }

    public FavoriteProcessResource create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getFavoriteProcess()
                .createWithResponse(
                    resourceGroupName,
                    testBaseAccountName,
                    packageName,
                    favoriteProcessResourceName,
                    this.innerModel(),
                    context)
                .getValue();
        return this;
    }

    FavoriteProcessResourceImpl(String name, com.azure.resourcemanager.testbase.TestbaseManager serviceManager) {
        this.innerObject = new FavoriteProcessResourceInner();
        this.serviceManager = serviceManager;
        this.favoriteProcessResourceName = name;
    }

    public FavoriteProcessResource refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getFavoriteProcess()
                .getWithResponse(
                    resourceGroupName, testBaseAccountName, packageName, favoriteProcessResourceName, Context.NONE)
                .getValue();
        return this;
    }

    public FavoriteProcessResource refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getFavoriteProcess()
                .getWithResponse(
                    resourceGroupName, testBaseAccountName, packageName, favoriteProcessResourceName, context)
                .getValue();
        return this;
    }

    public FavoriteProcessResourceImpl withActualProcessName(String actualProcessName) {
        this.innerModel().withActualProcessName(actualProcessName);
        return this;
    }
}
