// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.testbase.fluent.models.OSUpdateResourceInner;
import com.azure.resourcemanager.testbase.models.OsUpdateType;

/** An instance of this class provides access to all the operations defined in OSUpdatesClient. */
public interface OSUpdatesClient {
    /**
     * Lists the OS Updates in which the package were tested before.
     *
     * @param resourceGroupName The name of the resource group that contains the resource.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param packageName The resource name of the Test Base Package.
     * @param osUpdateType The type of the OS Update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of OS Updates.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<OSUpdateResourceInner> list(
        String resourceGroupName, String testBaseAccountName, String packageName, OsUpdateType osUpdateType);

    /**
     * Lists the OS Updates in which the package were tested before.
     *
     * @param resourceGroupName The name of the resource group that contains the resource.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param packageName The resource name of the Test Base Package.
     * @param osUpdateType The type of the OS Update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of OS Updates.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<OSUpdateResourceInner> list(
        String resourceGroupName,
        String testBaseAccountName,
        String packageName,
        OsUpdateType osUpdateType,
        Context context);

    /**
     * Gets an OS Update by name in which the package was tested before.
     *
     * @param resourceGroupName The name of the resource group that contains the resource.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param packageName The resource name of the Test Base Package.
     * @param osUpdateResourceName The resource name of an OS Update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an OS Update by name in which the package was tested before.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    OSUpdateResourceInner get(
        String resourceGroupName, String testBaseAccountName, String packageName, String osUpdateResourceName);

    /**
     * Gets an OS Update by name in which the package was tested before.
     *
     * @param resourceGroupName The name of the resource group that contains the resource.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param packageName The resource name of the Test Base Package.
     * @param osUpdateResourceName The resource name of an OS Update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an OS Update by name in which the package was tested before.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<OSUpdateResourceInner> getWithResponse(
        String resourceGroupName,
        String testBaseAccountName,
        String packageName,
        String osUpdateResourceName,
        Context context);
}
