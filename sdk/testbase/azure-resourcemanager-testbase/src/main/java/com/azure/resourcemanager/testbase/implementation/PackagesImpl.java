// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.testbase.fluent.PackagesClient;
import com.azure.resourcemanager.testbase.fluent.models.PackageResourceInner;
import com.azure.resourcemanager.testbase.models.PackageResource;
import com.azure.resourcemanager.testbase.models.Packages;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class PackagesImpl implements Packages {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(PackagesImpl.class);

    private final PackagesClient innerClient;

    private final com.azure.resourcemanager.testbase.TestbaseManager serviceManager;

    public PackagesImpl(PackagesClient innerClient, com.azure.resourcemanager.testbase.TestbaseManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<PackageResource> listByTestBaseAccount(String resourceGroupName, String testBaseAccountName) {
        PagedIterable<PackageResourceInner> inner =
            this.serviceClient().listByTestBaseAccount(resourceGroupName, testBaseAccountName);
        return Utils.mapPage(inner, inner1 -> new PackageResourceImpl(inner1, this.manager()));
    }

    public PagedIterable<PackageResource> listByTestBaseAccount(
        String resourceGroupName, String testBaseAccountName, Context context) {
        PagedIterable<PackageResourceInner> inner =
            this.serviceClient().listByTestBaseAccount(resourceGroupName, testBaseAccountName, context);
        return Utils.mapPage(inner, inner1 -> new PackageResourceImpl(inner1, this.manager()));
    }

    private PackagesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.testbase.TestbaseManager manager() {
        return this.serviceManager;
    }
}
