// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** A notification event receivers. */
@Fluent
public final class NotificationEventReceiver {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(NotificationEventReceiver.class);

    /*
     * The type of the notification event receiver.
     */
    @JsonProperty(value = "receiverType")
    private String receiverType;

    /*
     * The notification event receiver value.
     */
    @JsonProperty(value = "receiverValue")
    private NotificationReceiverValue receiverValue;

    /**
     * Get the receiverType property: The type of the notification event receiver.
     *
     * @return the receiverType value.
     */
    public String receiverType() {
        return this.receiverType;
    }

    /**
     * Set the receiverType property: The type of the notification event receiver.
     *
     * @param receiverType the receiverType value to set.
     * @return the NotificationEventReceiver object itself.
     */
    public NotificationEventReceiver withReceiverType(String receiverType) {
        this.receiverType = receiverType;
        return this;
    }

    /**
     * Get the receiverValue property: The notification event receiver value.
     *
     * @return the receiverValue value.
     */
    public NotificationReceiverValue receiverValue() {
        return this.receiverValue;
    }

    /**
     * Set the receiverValue property: The notification event receiver value.
     *
     * @param receiverValue the receiverValue value to set.
     * @return the NotificationEventReceiver object itself.
     */
    public NotificationEventReceiver withReceiverValue(NotificationReceiverValue receiverValue) {
        this.receiverValue = receiverValue;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (receiverValue() != null) {
            receiverValue().validate();
        }
    }
}
