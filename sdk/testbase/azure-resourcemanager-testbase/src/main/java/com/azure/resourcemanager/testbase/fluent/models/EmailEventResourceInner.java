// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The email event resource. */
@Fluent
public final class EmailEventResourceInner extends ProxyResource {
    /*
     * The system metadata relating to this resource
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /*
     * Email Event properties.
     */
    @JsonProperty(value = "properties")
    private EmailEventProperties innerProperties;

    /**
     * Get the systemData property: The system metadata relating to this resource.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the innerProperties property: Email Event properties.
     *
     * @return the innerProperties value.
     */
    private EmailEventProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the eventId property: The identifier of the email event.
     *
     * @return the eventId value.
     */
    public String eventId() {
        return this.innerProperties() == null ? null : this.innerProperties().eventId();
    }

    /**
     * Set the eventId property: The identifier of the email event.
     *
     * @param eventId the eventId value to set.
     * @return the EmailEventResourceInner object itself.
     */
    public EmailEventResourceInner withEventId(String eventId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new EmailEventProperties();
        }
        this.innerProperties().withEventId(eventId);
        return this;
    }

    /**
     * Get the eventName property: The name of the email event.
     *
     * @return the eventName value.
     */
    public String eventName() {
        return this.innerProperties() == null ? null : this.innerProperties().eventName();
    }

    /**
     * Set the eventName property: The name of the email event.
     *
     * @param eventName the eventName value to set.
     * @return the EmailEventResourceInner object itself.
     */
    public EmailEventResourceInner withEventName(String eventName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new EmailEventProperties();
        }
        this.innerProperties().withEventName(eventName);
        return this;
    }

    /**
     * Get the displayName property: The display name of the email event.
     *
     * @return the displayName value.
     */
    public String displayName() {
        return this.innerProperties() == null ? null : this.innerProperties().displayName();
    }

    /**
     * Set the displayName property: The display name of the email event.
     *
     * @param displayName the displayName value to set.
     * @return the EmailEventResourceInner object itself.
     */
    public EmailEventResourceInner withDisplayName(String displayName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new EmailEventProperties();
        }
        this.innerProperties().withDisplayName(displayName);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
