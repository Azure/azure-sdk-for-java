// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.testbase.fluent.FlightingRingsClient;
import com.azure.resourcemanager.testbase.fluent.models.FlightingRingResourceInner;
import com.azure.resourcemanager.testbase.models.FlightingRingResource;
import com.azure.resourcemanager.testbase.models.FlightingRings;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class FlightingRingsImpl implements FlightingRings {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(FlightingRingsImpl.class);

    private final FlightingRingsClient innerClient;

    private final com.azure.resourcemanager.testbase.TestBaseManager serviceManager;

    public FlightingRingsImpl(
        FlightingRingsClient innerClient, com.azure.resourcemanager.testbase.TestBaseManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<FlightingRingResource> list(String resourceGroupName, String testBaseAccountName) {
        PagedIterable<FlightingRingResourceInner> inner =
            this.serviceClient().list(resourceGroupName, testBaseAccountName);
        return Utils.mapPage(inner, inner1 -> new FlightingRingResourceImpl(inner1, this.manager()));
    }

    public PagedIterable<FlightingRingResource> list(
        String resourceGroupName, String testBaseAccountName, Context context) {
        PagedIterable<FlightingRingResourceInner> inner =
            this.serviceClient().list(resourceGroupName, testBaseAccountName, context);
        return Utils.mapPage(inner, inner1 -> new FlightingRingResourceImpl(inner1, this.manager()));
    }

    public FlightingRingResource get(
        String resourceGroupName, String testBaseAccountName, String flightingRingResourceName) {
        FlightingRingResourceInner inner =
            this.serviceClient().get(resourceGroupName, testBaseAccountName, flightingRingResourceName);
        if (inner != null) {
            return new FlightingRingResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<FlightingRingResource> getWithResponse(
        String resourceGroupName, String testBaseAccountName, String flightingRingResourceName, Context context) {
        Response<FlightingRingResourceInner> inner =
            this
                .serviceClient()
                .getWithResponse(resourceGroupName, testBaseAccountName, flightingRingResourceName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new FlightingRingResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    private FlightingRingsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.testbase.TestBaseManager manager() {
        return this.serviceManager;
    }
}
