// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.testbase.models.ExecutionStatus;
import com.azure.resourcemanager.testbase.models.Grade;
import com.azure.resourcemanager.testbase.models.OSUpdatesTestSummary;
import com.azure.resourcemanager.testbase.models.TestStatus;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** Properties of a Test Summary. */
@Fluent
public final class TestSummaryProperties {
    /*
     * The Id of the current Test Summary.
     */
    @JsonProperty(value = "testSummaryId")
    private String testSummaryId;

    /*
     * The Azure resource Id of package.
     */
    @JsonProperty(value = "packageId")
    private String packageId;

    /*
     * Application name.
     */
    @JsonProperty(value = "applicationName")
    private String applicationName;

    /*
     * Application version.
     */
    @JsonProperty(value = "applicationVersion")
    private String applicationVersion;

    /*
     * The execution status of last test.
     */
    @JsonProperty(value = "executionStatus")
    private ExecutionStatus executionStatus;

    /*
     * The status of last test.
     */
    @JsonProperty(value = "testStatus")
    private TestStatus testStatus;

    /*
     * The grade of the test.
     */
    @JsonProperty(value = "grade")
    private Grade grade;

    /*
     * The run time of the last test.
     */
    @JsonProperty(value = "testRunTime")
    private String testRunTime;

    /*
     * The result summary of tests triggered by feature updates
     */
    @JsonProperty(value = "featureUpdatesTestSummary")
    private OSUpdatesTestSummary featureUpdatesTestSummary;

    /*
     * The result summary of tests triggered by security updates
     */
    @JsonProperty(value = "securityUpdatesTestSummary")
    private OSUpdatesTestSummary securityUpdatesTestSummary;

    /*
     * The tags of Package resource that are associated with the testSummary
     */
    @JsonProperty(value = "packageTags")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> packageTags;

    /**
     * Get the testSummaryId property: The Id of the current Test Summary.
     *
     * @return the testSummaryId value.
     */
    public String testSummaryId() {
        return this.testSummaryId;
    }

    /**
     * Set the testSummaryId property: The Id of the current Test Summary.
     *
     * @param testSummaryId the testSummaryId value to set.
     * @return the TestSummaryProperties object itself.
     */
    public TestSummaryProperties withTestSummaryId(String testSummaryId) {
        this.testSummaryId = testSummaryId;
        return this;
    }

    /**
     * Get the packageId property: The Azure resource Id of package.
     *
     * @return the packageId value.
     */
    public String packageId() {
        return this.packageId;
    }

    /**
     * Set the packageId property: The Azure resource Id of package.
     *
     * @param packageId the packageId value to set.
     * @return the TestSummaryProperties object itself.
     */
    public TestSummaryProperties withPackageId(String packageId) {
        this.packageId = packageId;
        return this;
    }

    /**
     * Get the applicationName property: Application name.
     *
     * @return the applicationName value.
     */
    public String applicationName() {
        return this.applicationName;
    }

    /**
     * Set the applicationName property: Application name.
     *
     * @param applicationName the applicationName value to set.
     * @return the TestSummaryProperties object itself.
     */
    public TestSummaryProperties withApplicationName(String applicationName) {
        this.applicationName = applicationName;
        return this;
    }

    /**
     * Get the applicationVersion property: Application version.
     *
     * @return the applicationVersion value.
     */
    public String applicationVersion() {
        return this.applicationVersion;
    }

    /**
     * Set the applicationVersion property: Application version.
     *
     * @param applicationVersion the applicationVersion value to set.
     * @return the TestSummaryProperties object itself.
     */
    public TestSummaryProperties withApplicationVersion(String applicationVersion) {
        this.applicationVersion = applicationVersion;
        return this;
    }

    /**
     * Get the executionStatus property: The execution status of last test.
     *
     * @return the executionStatus value.
     */
    public ExecutionStatus executionStatus() {
        return this.executionStatus;
    }

    /**
     * Set the executionStatus property: The execution status of last test.
     *
     * @param executionStatus the executionStatus value to set.
     * @return the TestSummaryProperties object itself.
     */
    public TestSummaryProperties withExecutionStatus(ExecutionStatus executionStatus) {
        this.executionStatus = executionStatus;
        return this;
    }

    /**
     * Get the testStatus property: The status of last test.
     *
     * @return the testStatus value.
     */
    public TestStatus testStatus() {
        return this.testStatus;
    }

    /**
     * Set the testStatus property: The status of last test.
     *
     * @param testStatus the testStatus value to set.
     * @return the TestSummaryProperties object itself.
     */
    public TestSummaryProperties withTestStatus(TestStatus testStatus) {
        this.testStatus = testStatus;
        return this;
    }

    /**
     * Get the grade property: The grade of the test.
     *
     * @return the grade value.
     */
    public Grade grade() {
        return this.grade;
    }

    /**
     * Set the grade property: The grade of the test.
     *
     * @param grade the grade value to set.
     * @return the TestSummaryProperties object itself.
     */
    public TestSummaryProperties withGrade(Grade grade) {
        this.grade = grade;
        return this;
    }

    /**
     * Get the testRunTime property: The run time of the last test.
     *
     * @return the testRunTime value.
     */
    public String testRunTime() {
        return this.testRunTime;
    }

    /**
     * Set the testRunTime property: The run time of the last test.
     *
     * @param testRunTime the testRunTime value to set.
     * @return the TestSummaryProperties object itself.
     */
    public TestSummaryProperties withTestRunTime(String testRunTime) {
        this.testRunTime = testRunTime;
        return this;
    }

    /**
     * Get the featureUpdatesTestSummary property: The result summary of tests triggered by feature updates.
     *
     * @return the featureUpdatesTestSummary value.
     */
    public OSUpdatesTestSummary featureUpdatesTestSummary() {
        return this.featureUpdatesTestSummary;
    }

    /**
     * Set the featureUpdatesTestSummary property: The result summary of tests triggered by feature updates.
     *
     * @param featureUpdatesTestSummary the featureUpdatesTestSummary value to set.
     * @return the TestSummaryProperties object itself.
     */
    public TestSummaryProperties withFeatureUpdatesTestSummary(OSUpdatesTestSummary featureUpdatesTestSummary) {
        this.featureUpdatesTestSummary = featureUpdatesTestSummary;
        return this;
    }

    /**
     * Get the securityUpdatesTestSummary property: The result summary of tests triggered by security updates.
     *
     * @return the securityUpdatesTestSummary value.
     */
    public OSUpdatesTestSummary securityUpdatesTestSummary() {
        return this.securityUpdatesTestSummary;
    }

    /**
     * Set the securityUpdatesTestSummary property: The result summary of tests triggered by security updates.
     *
     * @param securityUpdatesTestSummary the securityUpdatesTestSummary value to set.
     * @return the TestSummaryProperties object itself.
     */
    public TestSummaryProperties withSecurityUpdatesTestSummary(OSUpdatesTestSummary securityUpdatesTestSummary) {
        this.securityUpdatesTestSummary = securityUpdatesTestSummary;
        return this;
    }

    /**
     * Get the packageTags property: The tags of Package resource that are associated with the testSummary.
     *
     * @return the packageTags value.
     */
    public Map<String, String> packageTags() {
        return this.packageTags;
    }

    /**
     * Set the packageTags property: The tags of Package resource that are associated with the testSummary.
     *
     * @param packageTags the packageTags value to set.
     * @return the TestSummaryProperties object itself.
     */
    public TestSummaryProperties withPackageTags(Map<String, String> packageTags) {
        this.packageTags = packageTags;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (featureUpdatesTestSummary() != null) {
            featureUpdatesTestSummary().validate();
        }
        if (securityUpdatesTestSummary() != null) {
            securityUpdatesTestSummary().validate();
        }
    }
}
