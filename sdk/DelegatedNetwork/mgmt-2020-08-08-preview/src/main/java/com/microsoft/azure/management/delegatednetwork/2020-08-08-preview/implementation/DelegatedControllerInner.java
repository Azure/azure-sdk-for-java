/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.delegatednetwork.2020-08-08-preview.implementation;

import com.microsoft.azure.management.delegatednetwork.2020-08-08-preview.ControllerState;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.management.delegatednetwork.2020-08-08-preview.ControllerResource;

/**
 * Represents an instance of a DNC controller.
 */
@JsonFlatten
public class DelegatedControllerInner extends ControllerResource {
    /**
     * The current state of dnc controller resource. Possible values include:
     * 'Deleting', 'Succeeded', 'Failed', 'Provisioning'.
     */
    @JsonProperty(value = "properties.state", access = JsonProperty.Access.WRITE_ONLY)
    private ControllerState state;

    /**
     * Type of dnc controller.
     */
    @JsonProperty(value = "properties.type")
    private String delegatedControllerType;

    /**
     * Gets or sets resource GUID property of the controller resource.
     */
    @JsonProperty(value = "properties.resourceGuid")
    private String resourceGuid;

    /**
     * Get controller AAD ID.
     */
    @JsonProperty(value = "properties.dncAppID")
    private String dncAppID;

    /**
     * Dnc Endpoint url.
     */
    @JsonProperty(value = "properties.dncEndpoint")
    private String dncEndpoint;

    /**
     * Get the current state of dnc controller resource. Possible values include: 'Deleting', 'Succeeded', 'Failed', 'Provisioning'.
     *
     * @return the state value
     */
    public ControllerState state() {
        return this.state;
    }

    /**
     * Get type of dnc controller.
     *
     * @return the delegatedControllerType value
     */
    public String delegatedControllerType() {
        return this.delegatedControllerType;
    }

    /**
     * Set type of dnc controller.
     *
     * @param delegatedControllerType the delegatedControllerType value to set
     * @return the DelegatedControllerInner object itself.
     */
    public DelegatedControllerInner withDelegatedControllerType(String delegatedControllerType) {
        this.delegatedControllerType = delegatedControllerType;
        return this;
    }

    /**
     * Get gets or sets resource GUID property of the controller resource.
     *
     * @return the resourceGuid value
     */
    public String resourceGuid() {
        return this.resourceGuid;
    }

    /**
     * Set gets or sets resource GUID property of the controller resource.
     *
     * @param resourceGuid the resourceGuid value to set
     * @return the DelegatedControllerInner object itself.
     */
    public DelegatedControllerInner withResourceGuid(String resourceGuid) {
        this.resourceGuid = resourceGuid;
        return this;
    }

    /**
     * Get get controller AAD ID.
     *
     * @return the dncAppID value
     */
    public String dncAppID() {
        return this.dncAppID;
    }

    /**
     * Set get controller AAD ID.
     *
     * @param dncAppID the dncAppID value to set
     * @return the DelegatedControllerInner object itself.
     */
    public DelegatedControllerInner withDncAppID(String dncAppID) {
        this.dncAppID = dncAppID;
        return this;
    }

    /**
     * Get dnc Endpoint url.
     *
     * @return the dncEndpoint value
     */
    public String dncEndpoint() {
        return this.dncEndpoint;
    }

    /**
     * Set dnc Endpoint url.
     *
     * @param dncEndpoint the dncEndpoint value to set
     * @return the DelegatedControllerInner object itself.
     */
    public DelegatedControllerInner withDncEndpoint(String dncEndpoint) {
        this.dncEndpoint = dncEndpoint;
        return this;
    }

}
