// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recommendationsservice.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.recommendationsservice.fluent.models.ModelingResourceInner;
import com.azure.resourcemanager.recommendationsservice.models.ModelingPatchResource;
import com.azure.resourcemanager.recommendationsservice.models.ModelingPatchResourceProperties;
import com.azure.resourcemanager.recommendationsservice.models.ModelingResource;
import com.azure.resourcemanager.recommendationsservice.models.ModelingResourceProperties;
import java.util.Collections;
import java.util.Map;

public final class ModelingResourceImpl
    implements ModelingResource, ModelingResource.Definition, ModelingResource.Update {
    private ModelingResourceInner innerObject;

    private final com.azure.resourcemanager.recommendationsservice.RecommendationsServiceManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public ModelingResourceProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public ModelingResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.recommendationsservice.RecommendationsServiceManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String accountName;

    private String modelingName;

    private ModelingPatchResource updateBody;

    public ModelingResourceImpl withExistingAccount(String resourceGroupName, String accountName) {
        this.resourceGroupName = resourceGroupName;
        this.accountName = accountName;
        return this;
    }

    public ModelingResource create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getModelings()
                .createOrUpdate(resourceGroupName, accountName, modelingName, this.innerModel(), Context.NONE);
        return this;
    }

    public ModelingResource create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getModelings()
                .createOrUpdate(resourceGroupName, accountName, modelingName, this.innerModel(), context);
        return this;
    }

    ModelingResourceImpl(
        String name, com.azure.resourcemanager.recommendationsservice.RecommendationsServiceManager serviceManager) {
        this.innerObject = new ModelingResourceInner();
        this.serviceManager = serviceManager;
        this.modelingName = name;
    }

    public ModelingResourceImpl update() {
        this.updateBody = new ModelingPatchResource();
        return this;
    }

    public ModelingResource apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getModelings()
                .update(resourceGroupName, accountName, modelingName, updateBody, Context.NONE);
        return this;
    }

    public ModelingResource apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getModelings()
                .update(resourceGroupName, accountName, modelingName, updateBody, context);
        return this;
    }

    ModelingResourceImpl(
        ModelingResourceInner innerObject,
        com.azure.resourcemanager.recommendationsservice.RecommendationsServiceManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.accountName = Utils.getValueFromIdByName(innerObject.id(), "accounts");
        this.modelingName = Utils.getValueFromIdByName(innerObject.id(), "modeling");
    }

    public ModelingResource refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getModelings()
                .getWithResponse(resourceGroupName, accountName, modelingName, Context.NONE)
                .getValue();
        return this;
    }

    public ModelingResource refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getModelings()
                .getWithResponse(resourceGroupName, accountName, modelingName, context)
                .getValue();
        return this;
    }

    public ModelingResourceImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public ModelingResourceImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public ModelingResourceImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateBody.withTags(tags);
            return this;
        }
    }

    public ModelingResourceImpl withProperties(ModelingResourceProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }

    public ModelingResourceImpl withProperties(ModelingPatchResourceProperties properties) {
        this.updateBody.withProperties(properties);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
