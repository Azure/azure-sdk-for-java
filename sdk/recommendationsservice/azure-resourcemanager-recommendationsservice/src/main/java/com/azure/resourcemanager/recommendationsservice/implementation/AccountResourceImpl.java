// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recommendationsservice.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.recommendationsservice.fluent.models.AccountResourceInner;
import com.azure.resourcemanager.recommendationsservice.models.AccountPatchResource;
import com.azure.resourcemanager.recommendationsservice.models.AccountPatchResourceProperties;
import com.azure.resourcemanager.recommendationsservice.models.AccountResource;
import com.azure.resourcemanager.recommendationsservice.models.AccountResourceProperties;
import com.azure.resourcemanager.recommendationsservice.models.AccountStatus;
import java.util.Collections;
import java.util.Map;

public final class AccountResourceImpl implements AccountResource, AccountResource.Definition, AccountResource.Update {
    private AccountResourceInner innerObject;

    private final com.azure.resourcemanager.recommendationsservice.RecommendationsServiceManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public AccountResourceProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public AccountResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.recommendationsservice.RecommendationsServiceManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String accountName;

    private AccountPatchResource updateBody;

    public AccountResourceImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public AccountResource create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAccounts()
                .createOrUpdate(resourceGroupName, accountName, this.innerModel(), Context.NONE);
        return this;
    }

    public AccountResource create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAccounts()
                .createOrUpdate(resourceGroupName, accountName, this.innerModel(), context);
        return this;
    }

    AccountResourceImpl(
        String name, com.azure.resourcemanager.recommendationsservice.RecommendationsServiceManager serviceManager) {
        this.innerObject = new AccountResourceInner();
        this.serviceManager = serviceManager;
        this.accountName = name;
    }

    public AccountResourceImpl update() {
        this.updateBody = new AccountPatchResource();
        return this;
    }

    public AccountResource apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAccounts()
                .update(resourceGroupName, accountName, updateBody, Context.NONE);
        return this;
    }

    public AccountResource apply(Context context) {
        this.innerObject =
            serviceManager.serviceClient().getAccounts().update(resourceGroupName, accountName, updateBody, context);
        return this;
    }

    AccountResourceImpl(
        AccountResourceInner innerObject,
        com.azure.resourcemanager.recommendationsservice.RecommendationsServiceManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.accountName = Utils.getValueFromIdByName(innerObject.id(), "accounts");
    }

    public AccountResource refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAccounts()
                .getByResourceGroupWithResponse(resourceGroupName, accountName, Context.NONE)
                .getValue();
        return this;
    }

    public AccountResource refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAccounts()
                .getByResourceGroupWithResponse(resourceGroupName, accountName, context)
                .getValue();
        return this;
    }

    public AccountStatus getStatus() {
        return serviceManager.accounts().getStatus(resourceGroupName, accountName);
    }

    public Response<AccountStatus> getStatusWithResponse(Context context) {
        return serviceManager.accounts().getStatusWithResponse(resourceGroupName, accountName, context);
    }

    public AccountResourceImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public AccountResourceImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public AccountResourceImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateBody.withTags(tags);
            return this;
        }
    }

    public AccountResourceImpl withProperties(AccountResourceProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }

    public AccountResourceImpl withProperties(AccountPatchResourceProperties properties) {
        this.updateBody.withProperties(properties);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
