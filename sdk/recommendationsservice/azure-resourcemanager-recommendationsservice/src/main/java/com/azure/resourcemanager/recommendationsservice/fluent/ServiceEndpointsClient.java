// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recommendationsservice.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.recommendationsservice.fluent.models.ServiceEndpointResourceInner;
import com.azure.resourcemanager.recommendationsservice.models.ServiceEndpointPatchResource;

/** An instance of this class provides access to all the operations defined in ServiceEndpointsClient. */
public interface ServiceEndpointsClient {
    /**
     * Returns list of ServiceEndpoint resources for a given Account name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the RecommendationsService Account resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of ServiceEndpoint resources as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ServiceEndpointResourceInner> listByAccountResource(String resourceGroupName, String accountName);

    /**
     * Returns list of ServiceEndpoint resources for a given Account name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the RecommendationsService Account resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of ServiceEndpoint resources as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ServiceEndpointResourceInner> listByAccountResource(
        String resourceGroupName, String accountName, Context context);

    /**
     * Returns ServiceEndpoint resources for a given name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the RecommendationsService Account resource.
     * @param serviceEndpointName The name of the ServiceEndpoint resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return serviceEndpoint resource details.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ServiceEndpointResourceInner get(String resourceGroupName, String accountName, String serviceEndpointName);

    /**
     * Returns ServiceEndpoint resources for a given name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the RecommendationsService Account resource.
     * @param serviceEndpointName The name of the ServiceEndpoint resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return serviceEndpoint resource details along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ServiceEndpointResourceInner> getWithResponse(
        String resourceGroupName, String accountName, String serviceEndpointName, Context context);

    /**
     * Creates or updates ServiceEndpoint resource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the RecommendationsService Account resource.
     * @param serviceEndpointName The name of the ServiceEndpoint resource.
     * @param body ServiceEndpoint resource details.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of serviceEndpoint resource details.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ServiceEndpointResourceInner>, ServiceEndpointResourceInner> beginCreateOrUpdate(
        String resourceGroupName, String accountName, String serviceEndpointName, ServiceEndpointResourceInner body);

    /**
     * Creates or updates ServiceEndpoint resource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the RecommendationsService Account resource.
     * @param serviceEndpointName The name of the ServiceEndpoint resource.
     * @param body ServiceEndpoint resource details.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of serviceEndpoint resource details.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ServiceEndpointResourceInner>, ServiceEndpointResourceInner> beginCreateOrUpdate(
        String resourceGroupName,
        String accountName,
        String serviceEndpointName,
        ServiceEndpointResourceInner body,
        Context context);

    /**
     * Creates or updates ServiceEndpoint resource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the RecommendationsService Account resource.
     * @param serviceEndpointName The name of the ServiceEndpoint resource.
     * @param body ServiceEndpoint resource details.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return serviceEndpoint resource details.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ServiceEndpointResourceInner createOrUpdate(
        String resourceGroupName, String accountName, String serviceEndpointName, ServiceEndpointResourceInner body);

    /**
     * Creates or updates ServiceEndpoint resource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the RecommendationsService Account resource.
     * @param serviceEndpointName The name of the ServiceEndpoint resource.
     * @param body ServiceEndpoint resource details.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return serviceEndpoint resource details.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ServiceEndpointResourceInner createOrUpdate(
        String resourceGroupName,
        String accountName,
        String serviceEndpointName,
        ServiceEndpointResourceInner body,
        Context context);

    /**
     * Updates ServiceEndpoint resource details.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the RecommendationsService Account resource.
     * @param serviceEndpointName The name of the ServiceEndpoint resource.
     * @param body ServiceEndpoint resource patch details.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of serviceEndpoint resource details.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ServiceEndpointResourceInner>, ServiceEndpointResourceInner> beginUpdate(
        String resourceGroupName, String accountName, String serviceEndpointName, ServiceEndpointPatchResource body);

    /**
     * Updates ServiceEndpoint resource details.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the RecommendationsService Account resource.
     * @param serviceEndpointName The name of the ServiceEndpoint resource.
     * @param body ServiceEndpoint resource patch details.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of serviceEndpoint resource details.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ServiceEndpointResourceInner>, ServiceEndpointResourceInner> beginUpdate(
        String resourceGroupName,
        String accountName,
        String serviceEndpointName,
        ServiceEndpointPatchResource body,
        Context context);

    /**
     * Updates ServiceEndpoint resource details.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the RecommendationsService Account resource.
     * @param serviceEndpointName The name of the ServiceEndpoint resource.
     * @param body ServiceEndpoint resource patch details.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return serviceEndpoint resource details.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ServiceEndpointResourceInner update(
        String resourceGroupName, String accountName, String serviceEndpointName, ServiceEndpointPatchResource body);

    /**
     * Updates ServiceEndpoint resource details.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the RecommendationsService Account resource.
     * @param serviceEndpointName The name of the ServiceEndpoint resource.
     * @param body ServiceEndpoint resource patch details.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return serviceEndpoint resource details.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ServiceEndpointResourceInner update(
        String resourceGroupName,
        String accountName,
        String serviceEndpointName,
        ServiceEndpointPatchResource body,
        Context context);

    /**
     * Deletes ServiceEndpoint resources of a given name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the RecommendationsService Account resource.
     * @param serviceEndpointName The name of the ServiceEndpoint resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(
        String resourceGroupName, String accountName, String serviceEndpointName);

    /**
     * Deletes ServiceEndpoint resources of a given name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the RecommendationsService Account resource.
     * @param serviceEndpointName The name of the ServiceEndpoint resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(
        String resourceGroupName, String accountName, String serviceEndpointName, Context context);

    /**
     * Deletes ServiceEndpoint resources of a given name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the RecommendationsService Account resource.
     * @param serviceEndpointName The name of the ServiceEndpoint resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String accountName, String serviceEndpointName);

    /**
     * Deletes ServiceEndpoint resources of a given name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the RecommendationsService Account resource.
     * @param serviceEndpointName The name of the ServiceEndpoint resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String accountName, String serviceEndpointName, Context context);
}
