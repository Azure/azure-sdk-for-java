// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.redhatopenshift.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.redhatopenshift.models.LoadBalancerProfile;
import com.azure.resourcemanager.redhatopenshift.models.ManagedOutboundIPs;
import com.azure.resourcemanager.redhatopenshift.models.NetworkProfile;
import com.azure.resourcemanager.redhatopenshift.models.OutboundType;
import com.azure.resourcemanager.redhatopenshift.models.PreconfiguredNsg;
import org.junit.jupiter.api.Assertions;

public final class NetworkProfileTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkProfile model = BinaryData.fromString(
            "{\"podCidr\":\"fxxypininmayhuy\",\"serviceCidr\":\"kpode\",\"outboundType\":\"UserDefinedRouting\",\"loadBalancerProfile\":{\"managedOutboundIps\":{\"count\":1899394591},\"effectiveOutboundIps\":[{\"id\":\"iheogna\"},{\"id\":\"zxtheotusivyevcc\"},{\"id\":\"ihnhun\"}]},\"preconfiguredNSG\":\"Enabled\"}")
            .toObject(NetworkProfile.class);
        Assertions.assertEquals("fxxypininmayhuy", model.podCidr());
        Assertions.assertEquals("kpode", model.serviceCidr());
        Assertions.assertEquals(OutboundType.USER_DEFINED_ROUTING, model.outboundType());
        Assertions.assertEquals(1899394591, model.loadBalancerProfile().managedOutboundIps().count());
        Assertions.assertEquals(PreconfiguredNsg.ENABLED, model.preconfiguredNsg());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkProfile model = new NetworkProfile().withPodCidr("fxxypininmayhuy")
            .withServiceCidr("kpode")
            .withOutboundType(OutboundType.USER_DEFINED_ROUTING)
            .withLoadBalancerProfile(
                new LoadBalancerProfile().withManagedOutboundIps(new ManagedOutboundIPs().withCount(1899394591)))
            .withPreconfiguredNsg(PreconfiguredNsg.ENABLED);
        model = BinaryData.fromObject(model).toObject(NetworkProfile.class);
        Assertions.assertEquals("fxxypininmayhuy", model.podCidr());
        Assertions.assertEquals("kpode", model.serviceCidr());
        Assertions.assertEquals(OutboundType.USER_DEFINED_ROUTING, model.outboundType());
        Assertions.assertEquals(1899394591, model.loadBalancerProfile().managedOutboundIps().count());
        Assertions.assertEquals(PreconfiguredNsg.ENABLED, model.preconfiguredNsg());
    }
}
