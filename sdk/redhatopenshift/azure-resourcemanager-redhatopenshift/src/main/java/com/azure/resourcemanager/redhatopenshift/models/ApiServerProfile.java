// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.redhatopenshift.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * APIServerProfile represents an API server profile.
 */
@Fluent
public final class ApiServerProfile implements JsonSerializable<ApiServerProfile> {
    /*
     * API server visibility.
     */
    private Visibility visibility;

    /*
     * The URL to access the cluster API server.
     */
    private String url;

    /*
     * The IP of the cluster API server.
     */
    private String ip;

    /**
     * Creates an instance of ApiServerProfile class.
     */
    public ApiServerProfile() {
    }

    /**
     * Get the visibility property: API server visibility.
     * 
     * @return the visibility value.
     */
    public Visibility visibility() {
        return this.visibility;
    }

    /**
     * Set the visibility property: API server visibility.
     * 
     * @param visibility the visibility value to set.
     * @return the ApiServerProfile object itself.
     */
    public ApiServerProfile withVisibility(Visibility visibility) {
        this.visibility = visibility;
        return this;
    }

    /**
     * Get the url property: The URL to access the cluster API server.
     * 
     * @return the url value.
     */
    public String url() {
        return this.url;
    }

    /**
     * Get the ip property: The IP of the cluster API server.
     * 
     * @return the ip value.
     */
    public String ip() {
        return this.ip;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("visibility", this.visibility == null ? null : this.visibility.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ApiServerProfile from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ApiServerProfile if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the ApiServerProfile.
     */
    public static ApiServerProfile fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ApiServerProfile deserializedApiServerProfile = new ApiServerProfile();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("visibility".equals(fieldName)) {
                    deserializedApiServerProfile.visibility = Visibility.fromString(reader.getString());
                } else if ("url".equals(fieldName)) {
                    deserializedApiServerProfile.url = reader.getString();
                } else if ("ip".equals(fieldName)) {
                    deserializedApiServerProfile.ip = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedApiServerProfile;
        });
    }
}
