// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.redhatopenshift.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * OpenShiftClusterCredentials represents an OpenShift cluster's credentials.
 */
@Fluent
public final class OpenShiftClusterCredentialsInner implements JsonSerializable<OpenShiftClusterCredentialsInner> {
    /*
     * The username for the kubeadmin user.
     */
    private String kubeadminUsername;

    /*
     * The password for the kubeadmin user.
     */
    private String kubeadminPassword;

    /**
     * Creates an instance of OpenShiftClusterCredentialsInner class.
     */
    public OpenShiftClusterCredentialsInner() {
    }

    /**
     * Get the kubeadminUsername property: The username for the kubeadmin user.
     * 
     * @return the kubeadminUsername value.
     */
    public String kubeadminUsername() {
        return this.kubeadminUsername;
    }

    /**
     * Set the kubeadminUsername property: The username for the kubeadmin user.
     * 
     * @param kubeadminUsername the kubeadminUsername value to set.
     * @return the OpenShiftClusterCredentialsInner object itself.
     */
    public OpenShiftClusterCredentialsInner withKubeadminUsername(String kubeadminUsername) {
        this.kubeadminUsername = kubeadminUsername;
        return this;
    }

    /**
     * Get the kubeadminPassword property: The password for the kubeadmin user.
     * 
     * @return the kubeadminPassword value.
     */
    public String kubeadminPassword() {
        return this.kubeadminPassword;
    }

    /**
     * Set the kubeadminPassword property: The password for the kubeadmin user.
     * 
     * @param kubeadminPassword the kubeadminPassword value to set.
     * @return the OpenShiftClusterCredentialsInner object itself.
     */
    public OpenShiftClusterCredentialsInner withKubeadminPassword(String kubeadminPassword) {
        this.kubeadminPassword = kubeadminPassword;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("kubeadminUsername", this.kubeadminUsername);
        jsonWriter.writeStringField("kubeadminPassword", this.kubeadminPassword);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of OpenShiftClusterCredentialsInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of OpenShiftClusterCredentialsInner if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the OpenShiftClusterCredentialsInner.
     */
    public static OpenShiftClusterCredentialsInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            OpenShiftClusterCredentialsInner deserializedOpenShiftClusterCredentialsInner
                = new OpenShiftClusterCredentialsInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("kubeadminUsername".equals(fieldName)) {
                    deserializedOpenShiftClusterCredentialsInner.kubeadminUsername = reader.getString();
                } else if ("kubeadminPassword".equals(fieldName)) {
                    deserializedOpenShiftClusterCredentialsInner.kubeadminPassword = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedOpenShiftClusterCredentialsInner;
        });
    }
}
