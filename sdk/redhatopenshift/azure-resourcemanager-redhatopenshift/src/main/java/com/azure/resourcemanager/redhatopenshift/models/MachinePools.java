// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.redhatopenshift.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of MachinePools.
 */
public interface MachinePools {
    /**
     * Lists MachinePools that belong to that Azure Red Hat OpenShift Cluster.
     * 
     * The operation returns properties of each MachinePool.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the OpenShift cluster resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return machinePoolList represents a list of MachinePools as paginated response with {@link PagedIterable}.
     */
    PagedIterable<MachinePool> list(String resourceGroupName, String resourceName);

    /**
     * Lists MachinePools that belong to that Azure Red Hat OpenShift Cluster.
     * 
     * The operation returns properties of each MachinePool.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the OpenShift cluster resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return machinePoolList represents a list of MachinePools as paginated response with {@link PagedIterable}.
     */
    PagedIterable<MachinePool> list(String resourceGroupName, String resourceName, Context context);

    /**
     * Gets a MachinePool with the specified subscription, resource group and resource name.
     * 
     * The operation returns properties of a MachinePool.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the OpenShift cluster resource.
     * @param childResourceName The name of the MachinePool resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return machinePool represents a MachinePool along with {@link Response}.
     */
    Response<MachinePool> getWithResponse(String resourceGroupName, String resourceName, String childResourceName,
        Context context);

    /**
     * Gets a MachinePool with the specified subscription, resource group and resource name.
     * 
     * The operation returns properties of a MachinePool.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the OpenShift cluster resource.
     * @param childResourceName The name of the MachinePool resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return machinePool represents a MachinePool.
     */
    MachinePool get(String resourceGroupName, String resourceName, String childResourceName);

    /**
     * Deletes a MachinePool with the specified subscription, resource group and resource name.
     * 
     * The operation returns nothing.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the OpenShift cluster resource.
     * @param childResourceName The name of the MachinePool resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteWithResponse(String resourceGroupName, String resourceName, String childResourceName,
        Context context);

    /**
     * Deletes a MachinePool with the specified subscription, resource group and resource name.
     * 
     * The operation returns nothing.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the OpenShift cluster resource.
     * @param childResourceName The name of the MachinePool resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String resourceName, String childResourceName);

    /**
     * Gets a MachinePool with the specified subscription, resource group and resource name.
     * 
     * The operation returns properties of a MachinePool.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return machinePool represents a MachinePool along with {@link Response}.
     */
    MachinePool getById(String id);

    /**
     * Gets a MachinePool with the specified subscription, resource group and resource name.
     * 
     * The operation returns properties of a MachinePool.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return machinePool represents a MachinePool along with {@link Response}.
     */
    Response<MachinePool> getByIdWithResponse(String id, Context context);

    /**
     * Deletes a MachinePool with the specified subscription, resource group and resource name.
     * 
     * The operation returns nothing.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes a MachinePool with the specified subscription, resource group and resource name.
     * 
     * The operation returns nothing.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new MachinePool resource.
     * 
     * @param name resource name.
     * @return the first stage of the new MachinePool definition.
     */
    MachinePool.DefinitionStages.Blank define(String name);
}
