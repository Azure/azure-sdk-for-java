/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.synapse.v2019_06_01_preview;

import rx.Observable;
import rx.Completable;
import com.microsoft.azure.management.synapse.v2019_06_01_preview.implementation.SqlPoolVulnerabilityAssessmentScansInner;
import com.microsoft.azure.arm.model.HasInner;

/**
 * Type representing SqlPoolVulnerabilityAssessmentScans.
 */
public interface SqlPoolVulnerabilityAssessmentScans extends HasInner<SqlPoolVulnerabilityAssessmentScansInner> {
    /**
     * Executes a Vulnerability Assessment database scan.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace
     * @param sqlPoolName SQL pool name
     * @param scanId The vulnerability assessment scan Id of the scan to retrieve.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable initiateScanAsync(String resourceGroupName, String workspaceName, String sqlPoolName, String scanId);

    /**
     * Convert an existing scan result to a human readable format. If already exists nothing happens.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace
     * @param sqlPoolName SQL pool name
     * @param scanId The vulnerability assessment scan Id of the scan to retrieve.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<SqlPoolVulnerabilityAssessmentScansExport> exportAsync(String resourceGroupName, String workspaceName, String sqlPoolName, String scanId);

    /**
     * Gets a vulnerability assessment scan record of a Sql pool.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace
     * @param sqlPoolName SQL pool name
     * @param scanId The vulnerability assessment scan Id of the scan to retrieve.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<VulnerabilityAssessmentScanRecord> getAsync(String resourceGroupName, String workspaceName, String sqlPoolName, String scanId);

    /**
     * Lists the vulnerability assessment scans of a SQL pool.
     * Lists the vulnerability assessment scans of a SQL pool.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace
     * @param sqlPoolName SQL pool name
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<VulnerabilityAssessmentScanRecord> listAsync(final String resourceGroupName, final String workspaceName, final String sqlPoolName);

}
