/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.synapse.v2019_06_01_preview;

import java.util.Map;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * VNet properties for managed integration runtime.
 */
public class IntegrationRuntimeVNetProperties {
    /**
     * Unmatched properties from the message are deserialized this collection.
     */
    @JsonProperty(value = "")
    private Map<String, Object> additionalProperties;

    /**
     * The ID of the VNet that this integration runtime will join.
     */
    @JsonProperty(value = "vNetId")
    private String vNetId;

    /**
     * The name of the subnet this integration runtime will join.
     */
    @JsonProperty(value = "subnet")
    private String subnet;

    /**
     * Resource IDs of the public IP addresses that this integration runtime
     * will use.
     */
    @JsonProperty(value = "publicIPs")
    private List<String> publicIPs;

    /**
     * Get unmatched properties from the message are deserialized this collection.
     *
     * @return the additionalProperties value
     */
    public Map<String, Object> additionalProperties() {
        return this.additionalProperties;
    }

    /**
     * Set unmatched properties from the message are deserialized this collection.
     *
     * @param additionalProperties the additionalProperties value to set
     * @return the IntegrationRuntimeVNetProperties object itself.
     */
    public IntegrationRuntimeVNetProperties withAdditionalProperties(Map<String, Object> additionalProperties) {
        this.additionalProperties = additionalProperties;
        return this;
    }

    /**
     * Get the ID of the VNet that this integration runtime will join.
     *
     * @return the vNetId value
     */
    public String vNetId() {
        return this.vNetId;
    }

    /**
     * Set the ID of the VNet that this integration runtime will join.
     *
     * @param vNetId the vNetId value to set
     * @return the IntegrationRuntimeVNetProperties object itself.
     */
    public IntegrationRuntimeVNetProperties withVNetId(String vNetId) {
        this.vNetId = vNetId;
        return this;
    }

    /**
     * Get the name of the subnet this integration runtime will join.
     *
     * @return the subnet value
     */
    public String subnet() {
        return this.subnet;
    }

    /**
     * Set the name of the subnet this integration runtime will join.
     *
     * @param subnet the subnet value to set
     * @return the IntegrationRuntimeVNetProperties object itself.
     */
    public IntegrationRuntimeVNetProperties withSubnet(String subnet) {
        this.subnet = subnet;
        return this;
    }

    /**
     * Get resource IDs of the public IP addresses that this integration runtime will use.
     *
     * @return the publicIPs value
     */
    public List<String> publicIPs() {
        return this.publicIPs;
    }

    /**
     * Set resource IDs of the public IP addresses that this integration runtime will use.
     *
     * @param publicIPs the publicIPs value to set
     * @return the IntegrationRuntimeVNetProperties object itself.
     */
    public IntegrationRuntimeVNetProperties withPublicIPs(List<String> publicIPs) {
        this.publicIPs = publicIPs;
        return this;
    }

}
