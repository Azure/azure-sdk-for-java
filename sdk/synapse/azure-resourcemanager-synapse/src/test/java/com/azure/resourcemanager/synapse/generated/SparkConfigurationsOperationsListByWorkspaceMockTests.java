// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.synapse.SynapseManager;
import com.azure.resourcemanager.synapse.models.SparkConfigurationResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SparkConfigurationsOperationsListByWorkspaceMockTests {
    @Test
    public void testListByWorkspace() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"description\":\"eszyaqgomlbmfgge\",\"configs\":{\"hh\":\"fekcjjlwkye\"},\"annotations\":[\"pulnrfcqufmcihp\",\"nowrerjpx\",\"tchdw\",\"qqidqim\"],\"notes\":\"bbfjmd\",\"createdBy\":\"v\",\"created\":\"2021-03-31T03:42:15Z\",\"configMergeRule\":{\"snlow\":\"mheftyaphqeofyt\"}},\"etag\":\"mcqixuanccqvjf\",\"id\":\"gfqpmq\",\"name\":\"xpjhcfaaradci\",\"type\":\"vmufzgug\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SynapseManager manager = SynapseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<SparkConfigurationResource> response = manager.sparkConfigurationsOperations()
            .listByWorkspace("pvdaahlfrcqklp", "vzp", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("eszyaqgomlbmfgge", response.iterator().next().description());
        Assertions.assertEquals("fekcjjlwkye", response.iterator().next().configs().get("hh"));
        Assertions.assertEquals("pulnrfcqufmcihp", response.iterator().next().annotations().get(0));
        Assertions.assertEquals("bbfjmd", response.iterator().next().notes());
        Assertions.assertEquals("v", response.iterator().next().createdBy());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-31T03:42:15Z"), response.iterator().next().created());
        Assertions.assertEquals("mheftyaphqeofyt", response.iterator().next().configMergeRule().get("snlow"));
    }
}
