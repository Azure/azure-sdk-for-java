// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.synapse.SynapseManager;
import com.azure.resourcemanager.synapse.models.DataMaskingPolicy;
import com.azure.resourcemanager.synapse.models.DataMaskingState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DataMaskingPoliciesCreateOrUpdateWithResponseMockTests {
    @Test
    public void testCreateOrUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"dataMaskingState\":\"Disabled\",\"exemptPrincipals\":\"uwhldxwhieproqks\",\"applicationPrincipals\":\"xmcvprstvkitbfjt\",\"maskingLevel\":\"otnplfacqocc\"},\"location\":\"qxwetjtd\",\"kind\":\"u\",\"managedBy\":\"doad\",\"id\":\"xopgehpadkmd\",\"name\":\"gssz\",\"type\":\"vctkbbx\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SynapseManager manager = SynapseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        DataMaskingPolicy response = manager.dataMaskingPolicies()
            .define()
            .withExistingSqlPool("gxkfnaoaqymhccto", "uowyrnskbyhqu", "czygxv")
            .withDataMaskingState(DataMaskingState.ENABLED)
            .withExemptPrincipals("xecxqnwh")
            .create();

        Assertions.assertEquals(DataMaskingState.DISABLED, response.dataMaskingState());
        Assertions.assertEquals("uwhldxwhieproqks", response.exemptPrincipals());
    }
}
