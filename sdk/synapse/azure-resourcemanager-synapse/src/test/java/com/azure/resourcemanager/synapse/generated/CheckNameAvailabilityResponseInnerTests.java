// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.synapse.fluent.models.CheckNameAvailabilityResponseInner;
import org.junit.jupiter.api.Assertions;

public final class CheckNameAvailabilityResponseInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CheckNameAvailabilityResponseInner model =
            BinaryData
                .fromString(
                    "{\"message\":\"zlobcufpd\",\"available\":false,\"reason\":\"t\",\"name\":\"qjnqglhqgnufoooj\"}")
                .toObject(CheckNameAvailabilityResponseInner.class);
        Assertions.assertEquals("zlobcufpd", model.message());
        Assertions.assertEquals(false, model.available());
        Assertions.assertEquals("t", model.reason());
        Assertions.assertEquals("qjnqglhqgnufoooj", model.name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CheckNameAvailabilityResponseInner model =
            new CheckNameAvailabilityResponseInner()
                .withMessage("zlobcufpd")
                .withAvailable(false)
                .withReason("t")
                .withName("qjnqglhqgnufoooj");
        model = BinaryData.fromObject(model).toObject(CheckNameAvailabilityResponseInner.class);
        Assertions.assertEquals("zlobcufpd", model.message());
        Assertions.assertEquals(false, model.available());
        Assertions.assertEquals("t", model.reason());
        Assertions.assertEquals("qjnqglhqgnufoooj", model.name());
    }
}
