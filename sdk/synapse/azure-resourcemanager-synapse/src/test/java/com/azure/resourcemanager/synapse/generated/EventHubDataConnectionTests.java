// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.synapse.models.Compression;
import com.azure.resourcemanager.synapse.models.EventHubDataConnection;
import com.azure.resourcemanager.synapse.models.EventHubDataFormat;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class EventHubDataConnectionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        EventHubDataConnection model = BinaryData.fromString(
            "{\"kind\":\"EventHub\",\"properties\":{\"eventHubResourceId\":\"fqpmbhyqgsdrmm\",\"consumerGroup\":\"tjxophgerhsmv\",\"tableName\":\"htwzmqilr\",\"mappingRuleName\":\"ysfn\",\"dataFormat\":\"AVRO\",\"eventSystemProperties\":[\"wwwmhkruwaedrym\"],\"compression\":\"None\",\"provisioningState\":\"Moving\",\"managedIdentityResourceId\":\"nhzd\"},\"location\":\"wih\",\"id\":\"fjiiknjdiqf\",\"name\":\"iej\",\"type\":\"pclbiedfs\"}")
            .toObject(EventHubDataConnection.class);
        Assertions.assertEquals("wih", model.location());
        Assertions.assertEquals("fqpmbhyqgsdrmm", model.eventHubResourceId());
        Assertions.assertEquals("tjxophgerhsmv", model.consumerGroup());
        Assertions.assertEquals("htwzmqilr", model.tableName());
        Assertions.assertEquals("ysfn", model.mappingRuleName());
        Assertions.assertEquals(EventHubDataFormat.AVRO, model.dataFormat());
        Assertions.assertEquals("wwwmhkruwaedrym", model.eventSystemProperties().get(0));
        Assertions.assertEquals(Compression.NONE, model.compression());
        Assertions.assertEquals("nhzd", model.managedIdentityResourceId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        EventHubDataConnection model = new EventHubDataConnection().withLocation("wih")
            .withEventHubResourceId("fqpmbhyqgsdrmm")
            .withConsumerGroup("tjxophgerhsmv")
            .withTableName("htwzmqilr")
            .withMappingRuleName("ysfn")
            .withDataFormat(EventHubDataFormat.AVRO)
            .withEventSystemProperties(Arrays.asList("wwwmhkruwaedrym"))
            .withCompression(Compression.NONE)
            .withManagedIdentityResourceId("nhzd");
        model = BinaryData.fromObject(model).toObject(EventHubDataConnection.class);
        Assertions.assertEquals("wih", model.location());
        Assertions.assertEquals("fqpmbhyqgsdrmm", model.eventHubResourceId());
        Assertions.assertEquals("tjxophgerhsmv", model.consumerGroup());
        Assertions.assertEquals("htwzmqilr", model.tableName());
        Assertions.assertEquals("ysfn", model.mappingRuleName());
        Assertions.assertEquals(EventHubDataFormat.AVRO, model.dataFormat());
        Assertions.assertEquals("wwwmhkruwaedrym", model.eventSystemProperties().get(0));
        Assertions.assertEquals(Compression.NONE, model.compression());
        Assertions.assertEquals("nhzd", model.managedIdentityResourceId());
    }
}
