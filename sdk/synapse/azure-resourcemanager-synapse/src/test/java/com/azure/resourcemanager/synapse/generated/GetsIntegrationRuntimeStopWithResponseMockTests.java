// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.synapse.SynapseManager;
import com.azure.resourcemanager.synapse.models.IntegrationRuntimeStopOperationStatus;
import com.azure.resourcemanager.synapse.models.WorkspaceStatus;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class GetsIntegrationRuntimeStopWithResponseMockTests {
    @Test
    public void testIntegrationRuntimeStopWithResponse() throws Exception {
        String responseStr
            = "{\"status\":\"InProgress\",\"name\":\"iuii\",\"properties\":\"datakcj\",\"error\":\"qdcizeqqfopvnopm\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SynapseManager manager = SynapseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        IntegrationRuntimeStopOperationStatus response = manager.gets()
            .integrationRuntimeStopWithResponse("nhzcknjxizb", "xd", "gzkztxfex", "acyyjmlxppdndzkf",
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(WorkspaceStatus.IN_PROGRESS, response.status());
        Assertions.assertEquals("iuii", response.name());
        Assertions.assertEquals("qdcizeqqfopvnopm", response.error());
    }
}
