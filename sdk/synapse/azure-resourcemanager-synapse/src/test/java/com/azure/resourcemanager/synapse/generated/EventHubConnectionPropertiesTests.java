// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.synapse.fluent.models.EventHubConnectionProperties;
import com.azure.resourcemanager.synapse.models.Compression;
import com.azure.resourcemanager.synapse.models.EventHubDataFormat;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class EventHubConnectionPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        EventHubConnectionProperties model = BinaryData.fromString(
            "{\"eventHubResourceId\":\"wceivbvz\",\"consumerGroup\":\"pbwxgoooxz\",\"tableName\":\"admskx\",\"mappingRuleName\":\"pdgzigjsugswhg\",\"dataFormat\":\"PARQUET\",\"eventSystemProperties\":[\"wwnbafoctohz\",\"aquvwsxbgnvkervq\",\"hoadhrsxqvzv\",\"pabdsrg\"],\"compression\":\"GZip\",\"provisioningState\":\"Creating\",\"managedIdentityResourceId\":\"rsubklrxhjnl\"}")
            .toObject(EventHubConnectionProperties.class);
        Assertions.assertEquals("wceivbvz", model.eventHubResourceId());
        Assertions.assertEquals("pbwxgoooxz", model.consumerGroup());
        Assertions.assertEquals("admskx", model.tableName());
        Assertions.assertEquals("pdgzigjsugswhg", model.mappingRuleName());
        Assertions.assertEquals(EventHubDataFormat.PARQUET, model.dataFormat());
        Assertions.assertEquals("wwnbafoctohz", model.eventSystemProperties().get(0));
        Assertions.assertEquals(Compression.GZIP, model.compression());
        Assertions.assertEquals("rsubklrxhjnl", model.managedIdentityResourceId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        EventHubConnectionProperties model = new EventHubConnectionProperties().withEventHubResourceId("wceivbvz")
            .withConsumerGroup("pbwxgoooxz")
            .withTableName("admskx")
            .withMappingRuleName("pdgzigjsugswhg")
            .withDataFormat(EventHubDataFormat.PARQUET)
            .withEventSystemProperties(Arrays.asList("wwnbafoctohz", "aquvwsxbgnvkervq", "hoadhrsxqvzv", "pabdsrg"))
            .withCompression(Compression.GZIP)
            .withManagedIdentityResourceId("rsubklrxhjnl");
        model = BinaryData.fromObject(model).toObject(EventHubConnectionProperties.class);
        Assertions.assertEquals("wceivbvz", model.eventHubResourceId());
        Assertions.assertEquals("pbwxgoooxz", model.consumerGroup());
        Assertions.assertEquals("admskx", model.tableName());
        Assertions.assertEquals("pdgzigjsugswhg", model.mappingRuleName());
        Assertions.assertEquals(EventHubDataFormat.PARQUET, model.dataFormat());
        Assertions.assertEquals("wwnbafoctohz", model.eventSystemProperties().get(0));
        Assertions.assertEquals(Compression.GZIP, model.compression());
        Assertions.assertEquals("rsubklrxhjnl", model.managedIdentityResourceId());
    }
}
