// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.synapse.fluent.models.WorkloadGroupInner;
import org.junit.jupiter.api.Assertions;

public final class WorkloadGroupInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadGroupInner model = BinaryData.fromString(
            "{\"properties\":{\"minResourcePercent\":1299849927,\"maxResourcePercent\":941654553,\"minResourcePercentPerRequest\":16.953184002601585,\"maxResourcePercentPerRequest\":83.0162433234308,\"importance\":\"nbzoggcu\",\"queryExecutionTimeout\":15755117},\"id\":\"z\",\"name\":\"y\",\"type\":\"pgogtqxepny\"}")
            .toObject(WorkloadGroupInner.class);
        Assertions.assertEquals(1299849927, model.minResourcePercent());
        Assertions.assertEquals(941654553, model.maxResourcePercent());
        Assertions.assertEquals(16.953184002601585, model.minResourcePercentPerRequest());
        Assertions.assertEquals(83.0162433234308D, model.maxResourcePercentPerRequest());
        Assertions.assertEquals("nbzoggcu", model.importance());
        Assertions.assertEquals(15755117, model.queryExecutionTimeout());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadGroupInner model = new WorkloadGroupInner().withMinResourcePercent(1299849927)
            .withMaxResourcePercent(941654553)
            .withMinResourcePercentPerRequest(16.953184002601585)
            .withMaxResourcePercentPerRequest(83.0162433234308D)
            .withImportance("nbzoggcu")
            .withQueryExecutionTimeout(15755117);
        model = BinaryData.fromObject(model).toObject(WorkloadGroupInner.class);
        Assertions.assertEquals(1299849927, model.minResourcePercent());
        Assertions.assertEquals(941654553, model.maxResourcePercent());
        Assertions.assertEquals(16.953184002601585, model.minResourcePercentPerRequest());
        Assertions.assertEquals(83.0162433234308D, model.maxResourcePercentPerRequest());
        Assertions.assertEquals("nbzoggcu", model.importance());
        Assertions.assertEquals(15755117, model.queryExecutionTimeout());
    }
}
