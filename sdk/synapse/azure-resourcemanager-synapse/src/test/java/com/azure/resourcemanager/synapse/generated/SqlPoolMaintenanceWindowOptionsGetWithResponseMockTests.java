// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.synapse.SynapseManager;
import com.azure.resourcemanager.synapse.models.DayOfWeek;
import com.azure.resourcemanager.synapse.models.MaintenanceWindowOptions;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SqlPoolMaintenanceWindowOptionsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"isEnabled\":true,\"maintenanceWindowCycles\":[{\"dayOfWeek\":\"Saturday\",\"startTime\":\"vztiucwviqllukh\",\"duration\":\"cqx\"}],\"minDurationInMinutes\":1730615801,\"defaultDurationInMinutes\":598547995,\"minCycles\":2041316576,\"timeGranularityInMinutes\":934395697,\"allowMultipleMaintenanceWindowsPerCycle\":false},\"id\":\"po\",\"name\":\"stsinvag\",\"type\":\"vjyhdrxbrdvc\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SynapseManager manager = SynapseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        MaintenanceWindowOptions response = manager.sqlPoolMaintenanceWindowOptions()
            .getWithResponse("ihraxqudd", "wjc", "jbrhlhpvzadbw", "nnin", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(true, response.isEnabled());
        Assertions.assertEquals(DayOfWeek.SATURDAY, response.maintenanceWindowCycles().get(0).dayOfWeek());
        Assertions.assertEquals("vztiucwviqllukh", response.maintenanceWindowCycles().get(0).startTime());
        Assertions.assertEquals("cqx", response.maintenanceWindowCycles().get(0).duration());
        Assertions.assertEquals(1730615801, response.minDurationInMinutes());
        Assertions.assertEquals(598547995, response.defaultDurationInMinutes());
        Assertions.assertEquals(2041316576, response.minCycles());
        Assertions.assertEquals(934395697, response.timeGranularityInMinutes());
        Assertions.assertEquals(false, response.allowMultipleMaintenanceWindowsPerCycle());
    }
}
