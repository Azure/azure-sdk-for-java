// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.synapse.fluent.models.DataMaskingRuleProperties;
import com.azure.resourcemanager.synapse.models.DataMaskingFunction;
import com.azure.resourcemanager.synapse.models.DataMaskingRuleState;
import org.junit.jupiter.api.Assertions;

public final class DataMaskingRulePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DataMaskingRuleProperties model = BinaryData.fromString(
            "{\"id\":\"wbqpl\",\"aliasName\":\"vnuuepzl\",\"ruleState\":\"Disabled\",\"schemaName\":\"wzsoldweyuqdunv\",\"tableName\":\"nnrwrbiork\",\"columnName\":\"alywjhhgdn\",\"maskingFunction\":\"Text\",\"numberFrom\":\"sivfomilo\",\"numberTo\":\"gdufiqnd\",\"prefixSize\":\"uzaofjchvcyyy\",\"suffixSize\":\"gdotcubiipuipwo\",\"replacementString\":\"nmacj\"}")
            .toObject(DataMaskingRuleProperties.class);
        Assertions.assertEquals("vnuuepzl", model.aliasName());
        Assertions.assertEquals(DataMaskingRuleState.DISABLED, model.ruleState());
        Assertions.assertEquals("wzsoldweyuqdunv", model.schemaName());
        Assertions.assertEquals("nnrwrbiork", model.tableName());
        Assertions.assertEquals("alywjhhgdn", model.columnName());
        Assertions.assertEquals(DataMaskingFunction.TEXT, model.maskingFunction());
        Assertions.assertEquals("sivfomilo", model.numberFrom());
        Assertions.assertEquals("gdufiqnd", model.numberTo());
        Assertions.assertEquals("uzaofjchvcyyy", model.prefixSize());
        Assertions.assertEquals("gdotcubiipuipwo", model.suffixSize());
        Assertions.assertEquals("nmacj", model.replacementString());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DataMaskingRuleProperties model = new DataMaskingRuleProperties().withAliasName("vnuuepzl")
            .withRuleState(DataMaskingRuleState.DISABLED)
            .withSchemaName("wzsoldweyuqdunv")
            .withTableName("nnrwrbiork")
            .withColumnName("alywjhhgdn")
            .withMaskingFunction(DataMaskingFunction.TEXT)
            .withNumberFrom("sivfomilo")
            .withNumberTo("gdufiqnd")
            .withPrefixSize("uzaofjchvcyyy")
            .withSuffixSize("gdotcubiipuipwo")
            .withReplacementString("nmacj");
        model = BinaryData.fromObject(model).toObject(DataMaskingRuleProperties.class);
        Assertions.assertEquals("vnuuepzl", model.aliasName());
        Assertions.assertEquals(DataMaskingRuleState.DISABLED, model.ruleState());
        Assertions.assertEquals("wzsoldweyuqdunv", model.schemaName());
        Assertions.assertEquals("nnrwrbiork", model.tableName());
        Assertions.assertEquals("alywjhhgdn", model.columnName());
        Assertions.assertEquals(DataMaskingFunction.TEXT, model.maskingFunction());
        Assertions.assertEquals("sivfomilo", model.numberFrom());
        Assertions.assertEquals("gdufiqnd", model.numberTo());
        Assertions.assertEquals("uzaofjchvcyyy", model.prefixSize());
        Assertions.assertEquals("gdotcubiipuipwo", model.suffixSize());
        Assertions.assertEquals("nmacj", model.replacementString());
    }
}
