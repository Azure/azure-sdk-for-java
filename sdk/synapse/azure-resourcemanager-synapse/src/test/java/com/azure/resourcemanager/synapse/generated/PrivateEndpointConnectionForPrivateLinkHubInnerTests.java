// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.synapse.fluent.models.PrivateEndpointConnectionForPrivateLinkHubInner;
import com.azure.resourcemanager.synapse.fluent.models.PrivateEndpointConnectionProperties;
import com.azure.resourcemanager.synapse.models.PrivateEndpoint;
import com.azure.resourcemanager.synapse.models.PrivateLinkServiceConnectionState;
import org.junit.jupiter.api.Assertions;

public final class PrivateEndpointConnectionForPrivateLinkHubInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateEndpointConnectionForPrivateLinkHubInner model = BinaryData.fromString(
            "{\"name\":\"oowvrv\",\"type\":\"gjqppy\",\"id\":\"tronzmyhgfi\",\"properties\":{\"privateEndpoint\":{\"id\":\"kmcwaekrrjreafx\"},\"privateLinkServiceConnectionState\":{\"status\":\"umh\",\"description\":\"lik\",\"actionsRequired\":\"wslolbqp\"},\"provisioningState\":\"zlmvfelfktgp\"}}")
            .toObject(PrivateEndpointConnectionForPrivateLinkHubInner.class);
        Assertions.assertEquals("tronzmyhgfi", model.id());
        Assertions.assertEquals("umh", model.properties().privateLinkServiceConnectionState().status());
        Assertions.assertEquals("lik", model.properties().privateLinkServiceConnectionState().description());
        Assertions.assertEquals("oowvrv", model.name());
        Assertions.assertEquals("gjqppy", model.type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateEndpointConnectionForPrivateLinkHubInner model
            = new PrivateEndpointConnectionForPrivateLinkHubInner().withId("tronzmyhgfi")
                .withProperties(new PrivateEndpointConnectionProperties().withPrivateEndpoint(new PrivateEndpoint())
                    .withPrivateLinkServiceConnectionState(
                        new PrivateLinkServiceConnectionState().withStatus("umh").withDescription("lik")))
                .withName("oowvrv")
                .withType("gjqppy");
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnectionForPrivateLinkHubInner.class);
        Assertions.assertEquals("tronzmyhgfi", model.id());
        Assertions.assertEquals("umh", model.properties().privateLinkServiceConnectionState().status());
        Assertions.assertEquals("lik", model.properties().privateLinkServiceConnectionState().description());
        Assertions.assertEquals("oowvrv", model.name());
        Assertions.assertEquals("gjqppy", model.type());
    }
}
