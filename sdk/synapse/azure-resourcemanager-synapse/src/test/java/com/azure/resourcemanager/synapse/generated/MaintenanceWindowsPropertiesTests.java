// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.synapse.fluent.models.MaintenanceWindowsProperties;
import com.azure.resourcemanager.synapse.models.DayOfWeek;
import com.azure.resourcemanager.synapse.models.MaintenanceWindowTimeRange;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class MaintenanceWindowsPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MaintenanceWindowsProperties model = BinaryData.fromString(
            "{\"timeRanges\":[{\"dayOfWeek\":\"Wednesday\",\"startTime\":\"vrvmnpkukghim\",\"duration\":\"lxgwimfnjhf\"},{\"dayOfWeek\":\"Tuesday\",\"startTime\":\"szkkfoqre\",\"duration\":\"kzikfjawneaivxwc\"}]}")
            .toObject(MaintenanceWindowsProperties.class);
        Assertions.assertEquals(DayOfWeek.WEDNESDAY, model.timeRanges().get(0).dayOfWeek());
        Assertions.assertEquals("vrvmnpkukghim", model.timeRanges().get(0).startTime());
        Assertions.assertEquals("lxgwimfnjhf", model.timeRanges().get(0).duration());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MaintenanceWindowsProperties model = new MaintenanceWindowsProperties().withTimeRanges(Arrays.asList(
            new MaintenanceWindowTimeRange().withDayOfWeek(DayOfWeek.WEDNESDAY)
                .withStartTime("vrvmnpkukghim")
                .withDuration("lxgwimfnjhf"),
            new MaintenanceWindowTimeRange().withDayOfWeek(DayOfWeek.TUESDAY)
                .withStartTime("szkkfoqre")
                .withDuration("kzikfjawneaivxwc")));
        model = BinaryData.fromObject(model).toObject(MaintenanceWindowsProperties.class);
        Assertions.assertEquals(DayOfWeek.WEDNESDAY, model.timeRanges().get(0).dayOfWeek());
        Assertions.assertEquals("vrvmnpkukghim", model.timeRanges().get(0).startTime());
        Assertions.assertEquals("lxgwimfnjhf", model.timeRanges().get(0).duration());
    }
}
