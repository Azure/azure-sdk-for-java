// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.synapse.SynapseManager;
import com.azure.resourcemanager.synapse.models.WorkloadGroup;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SqlPoolWorkloadGroupsCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"minResourcePercent\":1820004369,\"maxResourcePercent\":138567947,\"minResourcePercentPerRequest\":91.25878692489961,\"maxResourcePercentPerRequest\":23.282740053067407,\"importance\":\"vztiucwviqllukh\",\"queryExecutionTimeout\":576317178},\"id\":\"qxgcbvzarmqcbpo\",\"name\":\"stsinvag\",\"type\":\"vjyhdrxbrdvc\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SynapseManager manager = SynapseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        WorkloadGroup response = manager.sqlPoolWorkloadGroups()
            .define("i")
            .withExistingSqlPool("ikyjtkakvlb", "shjvpzaptuoskaoi", "jixwfgc")
            .withMinResourcePercent(1869059553)
            .withMaxResourcePercent(89327285)
            .withMinResourcePercentPerRequest(50.80002194867509)
            .withMaxResourcePercentPerRequest(64.43193670749677D)
            .withImportance("qynvavitmdm")
            .withQueryExecutionTimeout(708536304)
            .create();

        Assertions.assertEquals(1820004369, response.minResourcePercent());
        Assertions.assertEquals(138567947, response.maxResourcePercent());
        Assertions.assertEquals(91.25878692489961, response.minResourcePercentPerRequest());
        Assertions.assertEquals(23.282740053067407D, response.maxResourcePercentPerRequest());
        Assertions.assertEquals("vztiucwviqllukh", response.importance());
        Assertions.assertEquals(576317178, response.queryExecutionTimeout());
    }
}
