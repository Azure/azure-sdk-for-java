// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.synapse.fluent.models.WorkloadClassifierInner;
import org.junit.jupiter.api.Assertions;

public final class WorkloadClassifierInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadClassifierInner model = BinaryData.fromString(
            "{\"properties\":{\"memberName\":\"ril\",\"label\":\"apeewchpxlkt\",\"context\":\"uziycsl\",\"startTime\":\"ufuztcktyhjtq\",\"endTime\":\"cgzulwmmrqzzr\",\"importance\":\"vpglydz\"},\"id\":\"krvq\",\"name\":\"ev\",\"type\":\"oepry\"}")
            .toObject(WorkloadClassifierInner.class);
        Assertions.assertEquals("ril", model.memberName());
        Assertions.assertEquals("apeewchpxlkt", model.label());
        Assertions.assertEquals("uziycsl", model.context());
        Assertions.assertEquals("ufuztcktyhjtq", model.startTime());
        Assertions.assertEquals("cgzulwmmrqzzr", model.endTime());
        Assertions.assertEquals("vpglydz", model.importance());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadClassifierInner model = new WorkloadClassifierInner().withMemberName("ril")
            .withLabel("apeewchpxlkt")
            .withContext("uziycsl")
            .withStartTime("ufuztcktyhjtq")
            .withEndTime("cgzulwmmrqzzr")
            .withImportance("vpglydz");
        model = BinaryData.fromObject(model).toObject(WorkloadClassifierInner.class);
        Assertions.assertEquals("ril", model.memberName());
        Assertions.assertEquals("apeewchpxlkt", model.label());
        Assertions.assertEquals("uziycsl", model.context());
        Assertions.assertEquals("ufuztcktyhjtq", model.startTime());
        Assertions.assertEquals("cgzulwmmrqzzr", model.endTime());
        Assertions.assertEquals("vpglydz", model.importance());
    }
}
