// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.synapse.SynapseManager;
import com.azure.resourcemanager.synapse.models.PrivateEndpointConnectionForPrivateLinkHub;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PrivateEndpointConnectionsPrivateLinkHubsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"name\":\"punytjl\",\"type\":\"smmpathubt\",\"id\":\"deani\",\"properties\":{\"privateEndpoint\":{\"id\":\"bvgwzsff\"},\"privateLinkServiceConnectionState\":{\"status\":\"ousnktjt\",\"description\":\"avaqogfkbebau\",\"actionsRequired\":\"qbtxxwpf\"},\"provisioningState\":\"jzudrtpzk\"}}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SynapseManager manager = SynapseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<PrivateEndpointConnectionForPrivateLinkHub> response
            = manager.privateEndpointConnectionsPrivateLinkHubs()
                .list("h", "beivdlhydwbdbfg", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("deani", response.iterator().next().id());
        Assertions.assertEquals("ousnktjt",
            response.iterator().next().properties().privateLinkServiceConnectionState().status());
        Assertions.assertEquals("avaqogfkbebau",
            response.iterator().next().properties().privateLinkServiceConnectionState().description());
        Assertions.assertEquals("punytjl", response.iterator().next().name());
        Assertions.assertEquals("smmpathubt", response.iterator().next().type());
    }
}
