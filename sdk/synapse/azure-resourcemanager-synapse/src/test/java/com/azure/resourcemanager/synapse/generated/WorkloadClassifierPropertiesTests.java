// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.synapse.fluent.models.WorkloadClassifierProperties;
import org.junit.jupiter.api.Assertions;

public final class WorkloadClassifierPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadClassifierProperties model =
            BinaryData
                .fromString(
                    "{\"memberName\":\"vudtjuewbcihx\",\"label\":\"whcjyxcc\",\"context\":\"vpayakkudzpx\",\"startTime\":\"jplmagstcy\",\"endTime\":\"pfkyrkdbdgiogsj\",\"importance\":\"nwqjnoba\"}")
                .toObject(WorkloadClassifierProperties.class);
        Assertions.assertEquals("vudtjuewbcihx", model.memberName());
        Assertions.assertEquals("whcjyxcc", model.label());
        Assertions.assertEquals("vpayakkudzpx", model.context());
        Assertions.assertEquals("jplmagstcy", model.startTime());
        Assertions.assertEquals("pfkyrkdbdgiogsj", model.endTime());
        Assertions.assertEquals("nwqjnoba", model.importance());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadClassifierProperties model =
            new WorkloadClassifierProperties()
                .withMemberName("vudtjuewbcihx")
                .withLabel("whcjyxcc")
                .withContext("vpayakkudzpx")
                .withStartTime("jplmagstcy")
                .withEndTime("pfkyrkdbdgiogsj")
                .withImportance("nwqjnoba");
        model = BinaryData.fromObject(model).toObject(WorkloadClassifierProperties.class);
        Assertions.assertEquals("vudtjuewbcihx", model.memberName());
        Assertions.assertEquals("whcjyxcc", model.label());
        Assertions.assertEquals("vpayakkudzpx", model.context());
        Assertions.assertEquals("jplmagstcy", model.startTime());
        Assertions.assertEquals("pfkyrkdbdgiogsj", model.endTime());
        Assertions.assertEquals("nwqjnoba", model.importance());
    }
}
