// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.synapse.models.ReadWriteDatabase;
import java.time.Duration;
import org.junit.jupiter.api.Assertions;

public final class ReadWriteDatabaseTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ReadWriteDatabase model = BinaryData.fromString(
            "{\"kind\":\"ReadWrite\",\"properties\":{\"provisioningState\":\"Running\",\"softDeletePeriod\":\"PT152H35M55S\",\"hotCachePeriod\":\"PT53H16M28S\",\"statistics\":{\"size\":34.78346},\"isFollowed\":true},\"location\":\"jg\",\"id\":\"fepxyihpqadag\",\"name\":\"hrdicxdwyjfo\",\"type\":\"xwyovcxjsgbip\"}")
            .toObject(ReadWriteDatabase.class);
        Assertions.assertEquals("jg", model.location());
        Assertions.assertEquals(Duration.parse("PT152H35M55S"), model.softDeletePeriod());
        Assertions.assertEquals(Duration.parse("PT53H16M28S"), model.hotCachePeriod());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ReadWriteDatabase model = new ReadWriteDatabase().withLocation("jg")
            .withSoftDeletePeriod(Duration.parse("PT152H35M55S"))
            .withHotCachePeriod(Duration.parse("PT53H16M28S"));
        model = BinaryData.fromObject(model).toObject(ReadWriteDatabase.class);
        Assertions.assertEquals("jg", model.location());
        Assertions.assertEquals(Duration.parse("PT152H35M55S"), model.softDeletePeriod());
        Assertions.assertEquals(Duration.parse("PT53H16M28S"), model.hotCachePeriod());
    }
}
