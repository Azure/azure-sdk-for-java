// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.synapse.SynapseManager;
import com.azure.resourcemanager.synapse.models.KustoPool;
import com.azure.resourcemanager.synapse.models.SkuName;
import com.azure.resourcemanager.synapse.models.SkuSize;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class KustoPoolsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"sku\":{\"name\":\"Compute optimized\",\"capacity\":1789917841,\"size\":\"Large\"},\"properties\":{\"state\":\"Deleted\",\"provisioningState\":\"Running\",\"uri\":\"aqwmwqo\",\"dataIngestionUri\":\"flteatnegef\",\"stateReason\":\"xnjtqbgysib\",\"optimizedAutoscale\":{\"version\":2133577099,\"isEnabled\":false,\"minimum\":1403266090,\"maximum\":635241954},\"enableStreamingIngest\":true,\"enablePurge\":true,\"languageExtensions\":{\"value\":[{\"languageExtensionName\":\"R\"},{\"languageExtensionName\":\"PYTHON\"},{\"languageExtensionName\":\"R\"}]},\"workspaceUID\":\"xu\"},\"etag\":\"aujqgbbjv\",\"location\":\"oawh\",\"tags\":{\"e\":\"mbcsloygsabdgd\",\"zvzuat\":\"onsdunr\",\"bqskgqjbvitptpvs\":\"hgzuyxtrvf\"},\"id\":\"favdhpiwrm\",\"name\":\"wkgjwb\",\"type\":\"fdwfbwxy\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SynapseManager manager = SynapseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        KustoPool response = manager.kustoPools()
            .getWithResponse("uynf", "kyvnhiysdhork", "lhr", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("oawh", response.location());
        Assertions.assertEquals("mbcsloygsabdgd", response.tags().get("e"));
        Assertions.assertEquals(SkuName.COMPUTE_OPTIMIZED, response.sku().name());
        Assertions.assertEquals(1789917841, response.sku().capacity());
        Assertions.assertEquals(SkuSize.LARGE, response.sku().size());
        Assertions.assertEquals(2133577099, response.optimizedAutoscale().version());
        Assertions.assertEquals(false, response.optimizedAutoscale().isEnabled());
        Assertions.assertEquals(1403266090, response.optimizedAutoscale().minimum());
        Assertions.assertEquals(635241954, response.optimizedAutoscale().maximum());
        Assertions.assertEquals(true, response.enableStreamingIngest());
        Assertions.assertEquals(true, response.enablePurge());
        Assertions.assertEquals("xu", response.workspaceUid());
    }
}
