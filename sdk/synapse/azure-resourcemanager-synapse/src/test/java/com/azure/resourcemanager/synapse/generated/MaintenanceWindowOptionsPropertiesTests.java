// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.synapse.fluent.models.MaintenanceWindowOptionsProperties;
import com.azure.resourcemanager.synapse.models.DayOfWeek;
import com.azure.resourcemanager.synapse.models.MaintenanceWindowTimeRange;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class MaintenanceWindowOptionsPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MaintenanceWindowOptionsProperties model = BinaryData.fromString(
            "{\"isEnabled\":true,\"maintenanceWindowCycles\":[{\"dayOfWeek\":\"Friday\",\"startTime\":\"tq\",\"duration\":\"iekkezz\"},{\"dayOfWeek\":\"Tuesday\",\"startTime\":\"yf\",\"duration\":\"dgqggebdu\"}],\"minDurationInMinutes\":253317009,\"defaultDurationInMinutes\":663695580,\"minCycles\":624778524,\"timeGranularityInMinutes\":2007776195,\"allowMultipleMaintenanceWindowsPerCycle\":true}")
            .toObject(MaintenanceWindowOptionsProperties.class);
        Assertions.assertEquals(true, model.isEnabled());
        Assertions.assertEquals(DayOfWeek.FRIDAY, model.maintenanceWindowCycles().get(0).dayOfWeek());
        Assertions.assertEquals("tq", model.maintenanceWindowCycles().get(0).startTime());
        Assertions.assertEquals("iekkezz", model.maintenanceWindowCycles().get(0).duration());
        Assertions.assertEquals(253317009, model.minDurationInMinutes());
        Assertions.assertEquals(663695580, model.defaultDurationInMinutes());
        Assertions.assertEquals(624778524, model.minCycles());
        Assertions.assertEquals(2007776195, model.timeGranularityInMinutes());
        Assertions.assertEquals(true, model.allowMultipleMaintenanceWindowsPerCycle());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MaintenanceWindowOptionsProperties model = new MaintenanceWindowOptionsProperties().withIsEnabled(true)
            .withMaintenanceWindowCycles(Arrays.asList(
                new MaintenanceWindowTimeRange().withDayOfWeek(DayOfWeek.FRIDAY)
                    .withStartTime("tq")
                    .withDuration("iekkezz"),
                new MaintenanceWindowTimeRange().withDayOfWeek(DayOfWeek.TUESDAY)
                    .withStartTime("yf")
                    .withDuration("dgqggebdu")))
            .withMinDurationInMinutes(253317009)
            .withDefaultDurationInMinutes(663695580)
            .withMinCycles(624778524)
            .withTimeGranularityInMinutes(2007776195)
            .withAllowMultipleMaintenanceWindowsPerCycle(true);
        model = BinaryData.fromObject(model).toObject(MaintenanceWindowOptionsProperties.class);
        Assertions.assertEquals(true, model.isEnabled());
        Assertions.assertEquals(DayOfWeek.FRIDAY, model.maintenanceWindowCycles().get(0).dayOfWeek());
        Assertions.assertEquals("tq", model.maintenanceWindowCycles().get(0).startTime());
        Assertions.assertEquals("iekkezz", model.maintenanceWindowCycles().get(0).duration());
        Assertions.assertEquals(253317009, model.minDurationInMinutes());
        Assertions.assertEquals(663695580, model.defaultDurationInMinutes());
        Assertions.assertEquals(624778524, model.minCycles());
        Assertions.assertEquals(2007776195, model.timeGranularityInMinutes());
        Assertions.assertEquals(true, model.allowMultipleMaintenanceWindowsPerCycle());
    }
}
