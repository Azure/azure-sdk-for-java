// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.synapse.fluent.models.MaintenanceWindowOptionsProperties;
import com.azure.resourcemanager.synapse.models.DayOfWeek;
import com.azure.resourcemanager.synapse.models.MaintenanceWindowTimeRange;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class MaintenanceWindowOptionsPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MaintenanceWindowOptionsProperties model = BinaryData.fromString(
            "{\"isEnabled\":false,\"maintenanceWindowCycles\":[{\"dayOfWeek\":\"Monday\",\"startTime\":\"hya\",\"duration\":\"vjlboxqvk\"},{\"dayOfWeek\":\"Thursday\",\"startTime\":\"ho\",\"duration\":\"ynhdwdigum\"},{\"dayOfWeek\":\"Tuesday\",\"startTime\":\"auzzptjazysd\",\"duration\":\"ezwwv\"},{\"dayOfWeek\":\"Friday\",\"startTime\":\"uvvfonkp\",\"duration\":\"qyikvy\"}],\"minDurationInMinutes\":1053518025,\"defaultDurationInMinutes\":239621224,\"minCycles\":2048419194,\"timeGranularityInMinutes\":712290061,\"allowMultipleMaintenanceWindowsPerCycle\":false}")
            .toObject(MaintenanceWindowOptionsProperties.class);
        Assertions.assertEquals(false, model.isEnabled());
        Assertions.assertEquals(DayOfWeek.MONDAY, model.maintenanceWindowCycles().get(0).dayOfWeek());
        Assertions.assertEquals("hya", model.maintenanceWindowCycles().get(0).startTime());
        Assertions.assertEquals("vjlboxqvk", model.maintenanceWindowCycles().get(0).duration());
        Assertions.assertEquals(1053518025, model.minDurationInMinutes());
        Assertions.assertEquals(239621224, model.defaultDurationInMinutes());
        Assertions.assertEquals(2048419194, model.minCycles());
        Assertions.assertEquals(712290061, model.timeGranularityInMinutes());
        Assertions.assertEquals(false, model.allowMultipleMaintenanceWindowsPerCycle());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MaintenanceWindowOptionsProperties model = new MaintenanceWindowOptionsProperties().withIsEnabled(false)
            .withMaintenanceWindowCycles(Arrays.asList(
                new MaintenanceWindowTimeRange().withDayOfWeek(DayOfWeek.MONDAY)
                    .withStartTime("hya")
                    .withDuration("vjlboxqvk"),
                new MaintenanceWindowTimeRange().withDayOfWeek(DayOfWeek.THURSDAY)
                    .withStartTime("ho")
                    .withDuration("ynhdwdigum"),
                new MaintenanceWindowTimeRange().withDayOfWeek(DayOfWeek.TUESDAY)
                    .withStartTime("auzzptjazysd")
                    .withDuration("ezwwv"),
                new MaintenanceWindowTimeRange().withDayOfWeek(DayOfWeek.FRIDAY)
                    .withStartTime("uvvfonkp")
                    .withDuration("qyikvy")))
            .withMinDurationInMinutes(1053518025)
            .withDefaultDurationInMinutes(239621224)
            .withMinCycles(2048419194)
            .withTimeGranularityInMinutes(712290061)
            .withAllowMultipleMaintenanceWindowsPerCycle(false);
        model = BinaryData.fromObject(model).toObject(MaintenanceWindowOptionsProperties.class);
        Assertions.assertEquals(false, model.isEnabled());
        Assertions.assertEquals(DayOfWeek.MONDAY, model.maintenanceWindowCycles().get(0).dayOfWeek());
        Assertions.assertEquals("hya", model.maintenanceWindowCycles().get(0).startTime());
        Assertions.assertEquals("vjlboxqvk", model.maintenanceWindowCycles().get(0).duration());
        Assertions.assertEquals(1053518025, model.minDurationInMinutes());
        Assertions.assertEquals(239621224, model.defaultDurationInMinutes());
        Assertions.assertEquals(2048419194, model.minCycles());
        Assertions.assertEquals(712290061, model.timeGranularityInMinutes());
        Assertions.assertEquals(false, model.allowMultipleMaintenanceWindowsPerCycle());
    }
}
