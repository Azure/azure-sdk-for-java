// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.synapse.SynapseManager;
import com.azure.resourcemanager.synapse.models.AttachedDatabaseConfiguration;
import com.azure.resourcemanager.synapse.models.DefaultPrincipalsModificationKind;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class KustoPoolAttachedDatabaseConfigurationsListByKustoPoolMockTests {
    @Test
    public void testListByKustoPool() throws Exception {
        String responseStr
            = "{\"value\":[{\"location\":\"wsbzrhdugquhtr\",\"properties\":{\"provisioningState\":\"Moving\",\"databaseName\":\"unjf\",\"clusterResourceId\":\"rjhiycbauseqnczk\",\"attachedDatabaseNames\":[\"vtuwyjsqwzszosz\",\"gzunkfnyskwwunqh\",\"za\",\"ojmslhip\"],\"defaultPrincipalsModificationKind\":\"Replace\",\"tableLevelSharingProperties\":{\"tablesToInclude\":[\"ljpx\"],\"tablesToExclude\":[\"vchyluqalpcufj\",\"f\",\"tiztqds\"],\"externalTablesToInclude\":[\"hhsaa\"],\"externalTablesToExclude\":[\"ritrcwb\",\"aesyyefm\"],\"materializedViewsToInclude\":[\"qotiiqbgpa\",\"rv\",\"mtistyikjh\",\"rlx\"],\"materializedViewsToExclude\":[\"pkenn\"]}},\"id\":\"ntrqxxwtdmb\",\"name\":\"jtsuhqh\",\"type\":\"oxtdyqavfx\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SynapseManager manager = SynapseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<AttachedDatabaseConfiguration> response = manager.kustoPoolAttachedDatabaseConfigurations()
            .listByKustoPool("zkqmx", "poriwbwggijtspzj", "rrh", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("wsbzrhdugquhtr", response.iterator().next().location());
        Assertions.assertEquals("unjf", response.iterator().next().databaseName());
        Assertions.assertEquals("rjhiycbauseqnczk", response.iterator().next().kustoPoolResourceId());
        Assertions.assertEquals(DefaultPrincipalsModificationKind.REPLACE,
            response.iterator().next().defaultPrincipalsModificationKind());
        Assertions.assertEquals("ljpx",
            response.iterator().next().tableLevelSharingProperties().tablesToInclude().get(0));
        Assertions.assertEquals("vchyluqalpcufj",
            response.iterator().next().tableLevelSharingProperties().tablesToExclude().get(0));
        Assertions.assertEquals("hhsaa",
            response.iterator().next().tableLevelSharingProperties().externalTablesToInclude().get(0));
        Assertions.assertEquals("ritrcwb",
            response.iterator().next().tableLevelSharingProperties().externalTablesToExclude().get(0));
        Assertions.assertEquals("qotiiqbgpa",
            response.iterator().next().tableLevelSharingProperties().materializedViewsToInclude().get(0));
        Assertions.assertEquals("pkenn",
            response.iterator().next().tableLevelSharingProperties().materializedViewsToExclude().get(0));
    }
}
