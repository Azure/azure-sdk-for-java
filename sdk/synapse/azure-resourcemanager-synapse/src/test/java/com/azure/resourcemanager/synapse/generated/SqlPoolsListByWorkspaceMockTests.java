// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.synapse.SynapseManager;
import com.azure.resourcemanager.synapse.models.CreateMode;
import com.azure.resourcemanager.synapse.models.SqlPool;
import com.azure.resourcemanager.synapse.models.StorageAccountType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SqlPoolsListByWorkspaceMockTests {
    @Test
    public void testListByWorkspace() throws Exception {
        String responseStr
            = "{\"value\":[{\"sku\":{\"tier\":\"bdaombwi\",\"name\":\"jdllwktle\",\"capacity\":2136761436},\"properties\":{\"maxSizeBytes\":1207794170823919039,\"collation\":\"uajgcqwulynk\",\"sourceDatabaseId\":\"cfdruwsikxx\",\"recoverableDatabaseId\":\"lhuulriqb\",\"provisioningState\":\"kvjgbzs\",\"status\":\"br\",\"restorePointInTime\":\"2021-06-18T17:18:19Z\",\"createMode\":\"PointInTimeRestore\",\"creationDate\":\"2021-09-16T01:07:28Z\",\"storageAccountType\":\"GRS\",\"sourceDatabaseDeletionDate\":\"2021-08-19T00:40:55Z\"},\"location\":\"suoardnagttp\",\"tags\":{\"xiplkysolsyj\":\"bpgnrholhujbf\",\"tbbzj\":\"rxslwhdmcv\",\"huwzbxpcqzgi\":\"f\",\"rskapbxwieexu\":\"otjecohmxvvl\"},\"id\":\"aderltfokyk\",\"name\":\"yimyccgrvk\",\"type\":\"xzznnui\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SynapseManager manager = SynapseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<SqlPool> response
            = manager.sqlPools().listByWorkspace("uiadhbatecaatsdo", "zn", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("suoardnagttp", response.iterator().next().location());
        Assertions.assertEquals("bpgnrholhujbf", response.iterator().next().tags().get("xiplkysolsyj"));
        Assertions.assertEquals("bdaombwi", response.iterator().next().sku().tier());
        Assertions.assertEquals("jdllwktle", response.iterator().next().sku().name());
        Assertions.assertEquals(2136761436, response.iterator().next().sku().capacity());
        Assertions.assertEquals(1207794170823919039L, response.iterator().next().maxSizeBytes());
        Assertions.assertEquals("uajgcqwulynk", response.iterator().next().collation());
        Assertions.assertEquals("cfdruwsikxx", response.iterator().next().sourceDatabaseId());
        Assertions.assertEquals("lhuulriqb", response.iterator().next().recoverableDatabaseId());
        Assertions.assertEquals("kvjgbzs", response.iterator().next().provisioningState());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-18T17:18:19Z"),
            response.iterator().next().restorePointInTime());
        Assertions.assertEquals(CreateMode.POINT_IN_TIME_RESTORE, response.iterator().next().createMode());
        Assertions.assertEquals(StorageAccountType.GRS, response.iterator().next().storageAccountType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-19T00:40:55Z"),
            response.iterator().next().sourceDatabaseDeletionDate());
    }
}
