// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.synapse.SynapseManager;
import com.azure.resourcemanager.synapse.models.CreateMode;
import com.azure.resourcemanager.synapse.models.SqlPool;
import com.azure.resourcemanager.synapse.models.StorageAccountType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SqlPoolsListByWorkspaceMockTests {
    @Test
    public void testListByWorkspace() throws Exception {
        String responseStr
            = "{\"value\":[{\"sku\":{\"tier\":\"ilaywkdcwm\",\"name\":\"yrilmhxdqaolf\",\"capacity\":2119969330},\"properties\":{\"maxSizeBytes\":8273826460703438414,\"collation\":\"jvlywl\",\"sourceDatabaseId\":\"fwobb\",\"recoverableDatabaseId\":\"hlwyjfnqzocrd\",\"provisioningState\":\"czeuntgx\",\"status\":\"ca\",\"restorePointInTime\":\"2021-02-28T23:34:05Z\",\"createMode\":\"Restore\",\"creationDate\":\"2021-10-09T15:57:20Z\",\"storageAccountType\":\"LRS\"},\"location\":\"uvny\",\"tags\":{\"yri\":\"gix\",\"lqtxnrflkndrn\":\"lgmgbe\",\"hdaqotwfhipxwg\":\"pgfjo\",\"zuu\":\"abvcipowzaf\"},\"id\":\"ljcirvpefycdvei\",\"name\":\"itjn\",\"type\":\"xzajlnsjhwjuyxxb\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SynapseManager manager = SynapseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<SqlPool> response
            = manager.sqlPools().listByWorkspace("laohoqkp", "t", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("uvny", response.iterator().next().location());
        Assertions.assertEquals("gix", response.iterator().next().tags().get("yri"));
        Assertions.assertEquals("ilaywkdcwm", response.iterator().next().sku().tier());
        Assertions.assertEquals("yrilmhxdqaolf", response.iterator().next().sku().name());
        Assertions.assertEquals(2119969330, response.iterator().next().sku().capacity());
        Assertions.assertEquals(8273826460703438414L, response.iterator().next().maxSizeBytes());
        Assertions.assertEquals("jvlywl", response.iterator().next().collation());
        Assertions.assertEquals("fwobb", response.iterator().next().sourceDatabaseId());
        Assertions.assertEquals("hlwyjfnqzocrd", response.iterator().next().recoverableDatabaseId());
        Assertions.assertEquals("czeuntgx", response.iterator().next().provisioningState());
        Assertions.assertEquals("ca", response.iterator().next().status());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-28T23:34:05Z"),
            response.iterator().next().restorePointInTime());
        Assertions.assertEquals(CreateMode.RESTORE, response.iterator().next().createMode());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-09T15:57:20Z"),
            response.iterator().next().creationDate());
        Assertions.assertEquals(StorageAccountType.LRS, response.iterator().next().storageAccountType());
    }
}
