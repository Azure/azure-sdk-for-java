// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.synapse.SynapseManager;
import com.azure.resourcemanager.synapse.models.SqlPoolVulnerabilityAssessmentRuleBaseline;
import com.azure.resourcemanager.synapse.models.SqlPoolVulnerabilityAssessmentRuleBaselineItem;
import com.azure.resourcemanager.synapse.models.VulnerabilityAssessmentName;
import com.azure.resourcemanager.synapse.models.VulnerabilityAssessmentPolicyBaselineName;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SqlPoolVulnerabilityAssessmentRuleBaselinesCreateOrUpdateWithResponseMockTests {
    @Test
    public void testCreateOrUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"baselineResults\":[{\"result\":[\"wayqshwyqxrid\",\"tb\",\"aqjmkgxqwque\"]},{\"result\":[\"ylztp\",\"iizevjykofvez\",\"fkhkqtwqlep\",\"jzkcasfwzcntog\"]},{\"result\":[\"jwajnrtw\",\"vaqkifmxawost\"]},{\"result\":[\"knhrkmjqncf\"]}]},\"id\":\"dscnhemvwfnqqwy\",\"name\":\"vndrwbgodtg\",\"type\":\"rssgwjf\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SynapseManager manager = SynapseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        SqlPoolVulnerabilityAssessmentRuleBaseline response = manager.sqlPoolVulnerabilityAssessmentRuleBaselines()
            .define(VulnerabilityAssessmentPolicyBaselineName.DEFAULT)
            .withExistingRule("loggdusxursu", "v", "xcjkcoqwczsy", VulnerabilityAssessmentName.DEFAULT, "rizfwihvaang")
            .withBaselineResults(Arrays.asList(
                new SqlPoolVulnerabilityAssessmentRuleBaselineItem().withResult(Arrays.asList("rfdmfdvbbaexx")),
                new SqlPoolVulnerabilityAssessmentRuleBaselineItem()
                    .withResult(Arrays.asList("wtgdfkkaui", "vmuafmc", "fedyuep", "vpltidajjvy")),
                new SqlPoolVulnerabilityAssessmentRuleBaselineItem()
                    .withResult(Arrays.asList("ocfkumcfjxoky", "lsyasv", "nkwmygjj", "krknf")),
                new SqlPoolVulnerabilityAssessmentRuleBaselineItem()
                    .withResult(Arrays.asList("ugjqyckgtxkrdt", "lcr", "jdkl"))))
            .create();

        Assertions.assertEquals("wayqshwyqxrid", response.baselineResults().get(0).result().get(0));
    }
}
