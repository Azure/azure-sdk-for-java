// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.synapse.SynapseManager;
import com.azure.resourcemanager.synapse.models.AttachedDatabaseConfiguration;
import com.azure.resourcemanager.synapse.models.DefaultPrincipalsModificationKind;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class KustoPoolAttachedDatabaseConfigurationsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"location\":\"bgchcgsfzhbjkiy\",\"properties\":{\"provisioningState\":\"Deleting\",\"databaseName\":\"sdjpgxe\",\"clusterResourceId\":\"sgw\",\"attachedDatabaseNames\":[\"ferznzcbivoveomk\",\"f\"],\"defaultPrincipalsModificationKind\":\"Replace\",\"tableLevelSharingProperties\":{\"tablesToInclude\":[\"plfpohimgckycjp\",\"ebznbznxsulout\"],\"tablesToExclude\":[\"mxooqohgpncdm\",\"khupfhsldqdzau\"],\"externalTablesToInclude\":[\"yevdy\",\"dsytcikswhcam\",\"uynfxkcgsfcmvh\",\"drp\"],\"externalTablesToExclude\":[\"vyrkljqkq\",\"sy\",\"tvjkowggxawwdm\"],\"materializedViewsToInclude\":[\"nkteiidlbovwbclp\",\"g\",\"gani\",\"kjcnerek\"],\"materializedViewsToExclude\":[\"l\"]}},\"id\":\"wwnqhqlqgpw\",\"name\":\"tvceba\",\"type\":\"vbvx\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SynapseManager manager = SynapseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        AttachedDatabaseConfiguration response = manager.kustoPoolAttachedDatabaseConfigurations()
            .getWithResponse("qmzxsyaks", "npaami", "wb", "hvwt", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("bgchcgsfzhbjkiy", response.location());
        Assertions.assertEquals("sdjpgxe", response.databaseName());
        Assertions.assertEquals("sgw", response.kustoPoolResourceId());
        Assertions.assertEquals(DefaultPrincipalsModificationKind.REPLACE,
            response.defaultPrincipalsModificationKind());
        Assertions.assertEquals("plfpohimgckycjp", response.tableLevelSharingProperties().tablesToInclude().get(0));
        Assertions.assertEquals("mxooqohgpncdm", response.tableLevelSharingProperties().tablesToExclude().get(0));
        Assertions.assertEquals("yevdy", response.tableLevelSharingProperties().externalTablesToInclude().get(0));
        Assertions.assertEquals("vyrkljqkq", response.tableLevelSharingProperties().externalTablesToExclude().get(0));
        Assertions.assertEquals("nkteiidlbovwbclp",
            response.tableLevelSharingProperties().materializedViewsToInclude().get(0));
        Assertions.assertEquals("l", response.tableLevelSharingProperties().materializedViewsToExclude().get(0));
    }
}
