// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.synapse.fluent.models.PrivateEndpointConnectionInner;
import com.azure.resourcemanager.synapse.models.PrivateEndpoint;
import com.azure.resourcemanager.synapse.models.PrivateLinkServiceConnectionState;
import org.junit.jupiter.api.Assertions;

public final class PrivateEndpointConnectionInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateEndpointConnectionInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"privateEndpoint\":{\"id\":\"aodxo\"},\"privateLinkServiceConnectionState\":{\"status\":\"dxkqpx\",\"description\":\"ajionpimexgstxg\",\"actionsRequired\":\"odgmaajrmvdjwz\"},\"provisioningState\":\"ovmclwhijcoejct\"},\"id\":\"zaqsqsycbkbfk\",\"name\":\"ukdkexxppofmxa\",\"type\":\"c\"}")
                .toObject(PrivateEndpointConnectionInner.class);
        Assertions.assertEquals("dxkqpx", model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("ajionpimexgstxg", model.privateLinkServiceConnectionState().description());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateEndpointConnectionInner model =
            new PrivateEndpointConnectionInner()
                .withPrivateEndpoint(new PrivateEndpoint())
                .withPrivateLinkServiceConnectionState(
                    new PrivateLinkServiceConnectionState().withStatus("dxkqpx").withDescription("ajionpimexgstxg"));
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnectionInner.class);
        Assertions.assertEquals("dxkqpx", model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("ajionpimexgstxg", model.privateLinkServiceConnectionState().description());
    }
}
