// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.synapse.SynapseManager;
import com.azure.resourcemanager.synapse.models.AvailableRpOperation;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class OperationsListWithResponseMockTests {
    @Test
    public void testListWithResponse() throws Exception {
        String responseStr
            = "[{\"display\":{\"description\":\"yl\",\"resource\":\"igvxvatvcrk\",\"provider\":\"b\",\"operation\":\"qxvhcsyhzlwxa\"},\"isDataAction\":\"ov\",\"name\":\"exdnd\",\"properties\":{\"serviceSpecification\":{\"metricSpecifications\":[{}],\"logSpecifications\":[{},{},{}]}},\"origin\":\"rzmwn\"}]";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SynapseManager manager = SynapseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        List<AvailableRpOperation> response
            = manager.operations().listWithResponse(com.azure.core.util.Context.NONE).getValue();

        Assertions.assertEquals("yl", response.get(0).display().description());
        Assertions.assertEquals("igvxvatvcrk", response.get(0).display().resource());
        Assertions.assertEquals("b", response.get(0).display().provider());
        Assertions.assertEquals("qxvhcsyhzlwxa", response.get(0).display().operation());
        Assertions.assertEquals("ov", response.get(0).isDataAction());
        Assertions.assertEquals("exdnd", response.get(0).name());
        Assertions.assertEquals("rzmwn", response.get(0).origin());
    }
}
