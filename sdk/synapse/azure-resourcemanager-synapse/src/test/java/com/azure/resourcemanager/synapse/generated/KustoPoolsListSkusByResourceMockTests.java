// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.synapse.SynapseManager;
import com.azure.resourcemanager.synapse.models.AzureResourceSku;
import com.azure.resourcemanager.synapse.models.AzureScaleType;
import com.azure.resourcemanager.synapse.models.SkuName;
import com.azure.resourcemanager.synapse.models.SkuSize;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class KustoPoolsListSkusByResourceMockTests {
    @Test
    public void testListSkusByResource() throws Exception {
        String responseStr
            = "{\"value\":[{\"resourceType\":\"j\",\"sku\":{\"name\":\"Storage optimized\",\"capacity\":87921864,\"size\":\"Extra small\"},\"capacity\":{\"scaleType\":\"automatic\",\"minimum\":1304026371,\"maximum\":1331546381,\"default\":936439234}}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SynapseManager manager = SynapseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<AzureResourceSku> response
            = manager.kustoPools().listSkusByResource("p", "hm", "qibtblmc", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("j", response.iterator().next().resourceType());
        Assertions.assertEquals(SkuName.STORAGE_OPTIMIZED, response.iterator().next().sku().name());
        Assertions.assertEquals(87921864, response.iterator().next().sku().capacity());
        Assertions.assertEquals(SkuSize.EXTRA_SMALL, response.iterator().next().sku().size());
        Assertions.assertEquals(AzureScaleType.AUTOMATIC, response.iterator().next().capacity().scaleType());
        Assertions.assertEquals(1304026371, response.iterator().next().capacity().minimum());
        Assertions.assertEquals(1331546381, response.iterator().next().capacity().maximum());
        Assertions.assertEquals(936439234, response.iterator().next().capacity().defaultProperty());
    }
}
