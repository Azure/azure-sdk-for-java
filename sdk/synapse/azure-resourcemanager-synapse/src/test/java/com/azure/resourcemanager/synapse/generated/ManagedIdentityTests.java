// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.synapse.models.ManagedIdentity;
import com.azure.resourcemanager.synapse.models.ResourceIdentityType;
import com.azure.resourcemanager.synapse.models.UserAssignedManagedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ManagedIdentityTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ManagedIdentity model = BinaryData.fromString(
            "{\"principalId\":\"c\",\"tenantId\":\"405fa1c5-6003-4ebd-84eb-37d5533c0be7\",\"type\":\"SystemAssigned\",\"userAssignedIdentities\":{\"nwm\":{\"clientId\":\"f99a5cc0-6008-4c70-b235-096e76bc5d17\",\"principalId\":\"1c9eb6d7-0d18-4806-a04b-5fe370b0e645\"},\"vpdvjdhttzae\":{\"clientId\":\"dafa01fe-389a-457f-9548-40658365114d\",\"principalId\":\"5f10ad16-86da-4252-bf20-5fb82bfcdb16\"},\"x\":{\"clientId\":\"def57fec-2d31-44d1-b4aa-1b8272abf6d1\",\"principalId\":\"5d845ea1-8b8d-4d66-9d7c-ec85a6777c88\"},\"hrphkmcrjdqn\":{\"clientId\":\"80057e84-9d3a-4bf8-a4f3-1ff1b693bf16\",\"principalId\":\"497b8ae6-8f9c-45bf-9b28-285c21bc37e1\"}}}")
            .toObject(ManagedIdentity.class);
        Assertions.assertEquals(ResourceIdentityType.SYSTEM_ASSIGNED, model.type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ManagedIdentity model = new ManagedIdentity().withType(ResourceIdentityType.SYSTEM_ASSIGNED)
            .withUserAssignedIdentities(
                mapOf("nwm", new UserAssignedManagedIdentity(), "vpdvjdhttzae", new UserAssignedManagedIdentity(), "x",
                    new UserAssignedManagedIdentity(), "hrphkmcrjdqn", new UserAssignedManagedIdentity()));
        model = BinaryData.fromObject(model).toObject(ManagedIdentity.class);
        Assertions.assertEquals(ResourceIdentityType.SYSTEM_ASSIGNED, model.type());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
