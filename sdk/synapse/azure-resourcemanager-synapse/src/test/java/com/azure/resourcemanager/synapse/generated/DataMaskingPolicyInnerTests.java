// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.synapse.fluent.models.DataMaskingPolicyInner;
import com.azure.resourcemanager.synapse.models.DataMaskingState;
import org.junit.jupiter.api.Assertions;

public final class DataMaskingPolicyInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DataMaskingPolicyInner model = BinaryData.fromString(
            "{\"properties\":{\"dataMaskingState\":\"Disabled\",\"exemptPrincipals\":\"qqnobpudcd\",\"applicationPrincipals\":\"tqwpwya\",\"maskingLevel\":\"zasqbucljgkyexao\"},\"location\":\"yaipidsda\",\"kind\":\"tx\",\"managedBy\":\"jumfqwazlnq\",\"id\":\"mcjn\",\"name\":\"zqdqxt\",\"type\":\"jw\"}")
            .toObject(DataMaskingPolicyInner.class);
        Assertions.assertEquals(DataMaskingState.DISABLED, model.dataMaskingState());
        Assertions.assertEquals("qqnobpudcd", model.exemptPrincipals());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DataMaskingPolicyInner model = new DataMaskingPolicyInner().withDataMaskingState(DataMaskingState.DISABLED)
            .withExemptPrincipals("qqnobpudcd");
        model = BinaryData.fromObject(model).toObject(DataMaskingPolicyInner.class);
        Assertions.assertEquals(DataMaskingState.DISABLED, model.dataMaskingState());
        Assertions.assertEquals("qqnobpudcd", model.exemptPrincipals());
    }
}
