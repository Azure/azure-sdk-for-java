// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.synapse.models.ReadOnlyFollowingDatabase;
import java.time.Duration;
import org.junit.jupiter.api.Assertions;

public final class ReadOnlyFollowingDatabaseTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ReadOnlyFollowingDatabase model = BinaryData.fromString(
            "{\"kind\":\"ReadOnlyFollowing\",\"properties\":{\"provisioningState\":\"Deleting\",\"softDeletePeriod\":\"PT69H41M9S\",\"hotCachePeriod\":\"PT193H9M52S\",\"statistics\":{\"size\":7.7127876},\"leaderClusterResourceId\":\"fdyjdu\",\"attachedDatabaseConfigurationName\":\"pyszekb\",\"principalsModificationKind\":\"Replace\"},\"location\":\"aaggkre\",\"id\":\"frnuybffljfi\",\"name\":\"mreoagsqtaad\",\"type\":\"srexxfavs\"}")
            .toObject(ReadOnlyFollowingDatabase.class);
        Assertions.assertEquals("aaggkre", model.location());
        Assertions.assertEquals(Duration.parse("PT193H9M52S"), model.hotCachePeriod());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ReadOnlyFollowingDatabase model
            = new ReadOnlyFollowingDatabase().withLocation("aaggkre").withHotCachePeriod(Duration.parse("PT193H9M52S"));
        model = BinaryData.fromObject(model).toObject(ReadOnlyFollowingDatabase.class);
        Assertions.assertEquals("aaggkre", model.location());
        Assertions.assertEquals(Duration.parse("PT193H9M52S"), model.hotCachePeriod());
    }
}
