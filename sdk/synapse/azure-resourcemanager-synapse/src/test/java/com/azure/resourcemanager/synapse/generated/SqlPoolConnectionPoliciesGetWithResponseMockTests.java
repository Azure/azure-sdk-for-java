// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.synapse.SynapseManager;
import com.azure.resourcemanager.synapse.models.ConnectionPolicyName;
import com.azure.resourcemanager.synapse.models.SqlPoolConnectionPolicy;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SqlPoolConnectionPoliciesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"kind\":\"p\",\"location\":\"ixqbolxvhhyqqeg\",\"properties\":{\"securityEnabledAccess\":\"grznmginmtsd\",\"proxyDnsName\":\"chwkib\",\"proxyPort\":\"jymncjcagai\",\"visibility\":\"cqzoofjnqjsve\",\"useServerDefault\":\"bhtleberpy\",\"redirectionState\":\"eknfqnwjjqx\",\"state\":\"kdnjrxgkrhwie\"},\"id\":\"ycpnowaw\",\"name\":\"noehrguqlhfwa\",\"type\":\"bjzm\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SynapseManager manager = SynapseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        SqlPoolConnectionPolicy response = manager.sqlPoolConnectionPolicies()
            .getWithResponse("zmlghny", "v", "pye", ConnectionPolicyName.DEFAULT, com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("grznmginmtsd", response.securityEnabledAccess());
        Assertions.assertEquals("chwkib", response.proxyDnsName());
        Assertions.assertEquals("jymncjcagai", response.proxyPort());
        Assertions.assertEquals("cqzoofjnqjsve", response.visibility());
        Assertions.assertEquals("bhtleberpy", response.useServerDefault());
        Assertions.assertEquals("eknfqnwjjqx", response.redirectionState());
        Assertions.assertEquals("kdnjrxgkrhwie", response.state());
    }
}
