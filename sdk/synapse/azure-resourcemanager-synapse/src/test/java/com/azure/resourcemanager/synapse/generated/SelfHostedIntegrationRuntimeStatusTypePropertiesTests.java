// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.util.BinaryData;
import com.azure.core.util.serializer.JacksonAdapter;
import com.azure.core.util.serializer.SerializerEncoding;
import com.azure.resourcemanager.synapse.fluent.models.SelfHostedIntegrationRuntimeNodeInner;
import com.azure.resourcemanager.synapse.fluent.models.SelfHostedIntegrationRuntimeStatusTypeProperties;
import com.azure.resourcemanager.synapse.models.LinkedIntegrationRuntime;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

public final class SelfHostedIntegrationRuntimeStatusTypePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SelfHostedIntegrationRuntimeStatusTypeProperties model = BinaryData.fromString(
            "{\"createTime\":\"2021-03-27T14:39:22Z\",\"taskQueueId\":\"dbwdpyqyybxubmdn\",\"nodeCommunicationChannelEncryptionMode\":\"cbq\",\"internalChannelEncryption\":\"SslEncrypted\",\"version\":\"jelaqacigele\",\"nodes\":[{\"nodeName\":\"vqvwzkjopwbe\",\"machineName\":\"r\",\"hostServiceUri\":\"wzdqybxceakxcpts\",\"status\":\"InitializeFailed\",\"capabilities\":{\"zisgykiuemvanb\":\"aseqchkrttzr\",\"jklinh\":\"zohmnrxxbs\",\"nzxojpslsvjgpli\":\"dptysprqs\"},\"versionStatus\":\"iqwoyxqvapcoh\",\"version\":\"ucqpqojxcxzrz\",\"registerTime\":\"2021-06-25T21:59:34Z\",\"lastConnectTime\":\"2021-08-24T03:14:39Z\",\"expiryTime\":\"2021-08-11T20:52:05Z\",\"lastStartTime\":\"2021-06-23T12:05:01Z\",\"lastStopTime\":\"2020-12-27T09:37:41Z\",\"lastUpdateResult\":\"Succeed\",\"lastStartUpdateTime\":\"2021-07-11T04:51:02Z\",\"lastEndUpdateTime\":\"2021-01-06T16:31:43Z\",\"isActiveDispatcher\":true,\"concurrentJobsLimit\":1319773587,\"maxConcurrentJobs\":669321712,\"\":{\"mtuatmzwcjjncqtj\":\"datahzn\"}}],\"scheduledUpdateDate\":\"2021-03-13T06:57:20Z\",\"updateDelayOffset\":\"vgbgatzuuvbxng\",\"localTimeZoneOffset\":\"bwggahtt\",\"capabilities\":{\"utlxjoqzasunwqrj\":\"wvajq\",\"uocnjrohmbpyr\":\"frgqhaohcm\"},\"serviceUrls\":[\"meblyd\"],\"autoUpdate\":\"Off\",\"versionStatus\":\"kmrocxne\",\"links\":[{\"name\":\"tod\",\"subscriptionId\":\"pyapucygvoav\",\"dataFactoryName\":\"nssxlgh\",\"dataFactoryLocation\":\"egjlgvvpa\",\"createTime\":\"2021-03-25T17:51:10Z\"}],\"pushedVersion\":\"gbuxantuygdh\",\"latestVersion\":\"qipir\",\"autoUpdateETA\":\"2021-08-18T16:21:34Z\"}")
            .toObject(SelfHostedIntegrationRuntimeStatusTypeProperties.class);
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SelfHostedIntegrationRuntimeStatusTypeProperties model = new SelfHostedIntegrationRuntimeStatusTypeProperties()
            .withNodes(Arrays.asList(new SelfHostedIntegrationRuntimeNodeInner().withAdditionalProperties(mapOf(
                "nodeName", "vqvwzkjopwbe", "lastStartUpdateTime", "2021-07-11T04:51:02Z", "lastConnectTime",
                "2021-08-24T03:14:39Z", "capabilities",
                JacksonAdapter.createDefaultSerializerAdapter()
                    .deserialize(
                        "{\"zisgykiuemvanb\":\"aseqchkrttzr\",\"jklinh\":\"zohmnrxxbs\",\"nzxojpslsvjgpli\":\"dptysprqs\"}",
                        Object.class, SerializerEncoding.JSON),
                "hostServiceUri", "wzdqybxceakxcpts", "registerTime", "2021-06-25T21:59:34Z", "maxConcurrentJobs",
                669321712, "lastStopTime", "2020-12-27T09:37:41Z", "version", "ucqpqojxcxzrz", "machineName", "r",
                "versionStatus", "iqwoyxqvapcoh", "concurrentJobsLimit", 1319773587, "lastEndUpdateTime",
                "2021-01-06T16:31:43Z", "expiryTime", "2021-08-11T20:52:05Z", "lastStartTime", "2021-06-23T12:05:01Z",
                "lastUpdateResult", "Succeed", "isActiveDispatcher", true, "status", "InitializeFailed"))))
            .withLinks(Arrays.asList(new LinkedIntegrationRuntime()));
        model = BinaryData.fromObject(model).toObject(SelfHostedIntegrationRuntimeStatusTypeProperties.class);
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
