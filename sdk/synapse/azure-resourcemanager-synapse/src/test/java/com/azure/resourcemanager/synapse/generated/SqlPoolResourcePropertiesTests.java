// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.synapse.fluent.models.SqlPoolResourceProperties;
import com.azure.resourcemanager.synapse.models.CreateMode;
import com.azure.resourcemanager.synapse.models.StorageAccountType;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class SqlPoolResourcePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SqlPoolResourceProperties model = BinaryData.fromString(
            "{\"maxSizeBytes\":1034020554196499109,\"collation\":\"gpw\",\"sourceDatabaseId\":\"uh\",\"recoverableDatabaseId\":\"p\",\"provisioningState\":\"jyofdxluusdtto\",\"status\":\"aboekqv\",\"restorePointInTime\":\"2021-03-07T10:01:38Z\",\"createMode\":\"Default\",\"creationDate\":\"2021-02-02T03:25:54Z\",\"storageAccountType\":\"LRS\",\"sourceDatabaseDeletionDate\":\"2021-07-06T07:16:14Z\"}")
            .toObject(SqlPoolResourceProperties.class);
        Assertions.assertEquals(1034020554196499109L, model.maxSizeBytes());
        Assertions.assertEquals("gpw", model.collation());
        Assertions.assertEquals("uh", model.sourceDatabaseId());
        Assertions.assertEquals("p", model.recoverableDatabaseId());
        Assertions.assertEquals("jyofdxluusdtto", model.provisioningState());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-07T10:01:38Z"), model.restorePointInTime());
        Assertions.assertEquals(CreateMode.DEFAULT, model.createMode());
        Assertions.assertEquals(StorageAccountType.LRS, model.storageAccountType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-06T07:16:14Z"), model.sourceDatabaseDeletionDate());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SqlPoolResourceProperties model = new SqlPoolResourceProperties().withMaxSizeBytes(1034020554196499109L)
            .withCollation("gpw")
            .withSourceDatabaseId("uh")
            .withRecoverableDatabaseId("p")
            .withProvisioningState("jyofdxluusdtto")
            .withRestorePointInTime(OffsetDateTime.parse("2021-03-07T10:01:38Z"))
            .withCreateMode(CreateMode.DEFAULT)
            .withStorageAccountType(StorageAccountType.LRS)
            .withSourceDatabaseDeletionDate(OffsetDateTime.parse("2021-07-06T07:16:14Z"));
        model = BinaryData.fromObject(model).toObject(SqlPoolResourceProperties.class);
        Assertions.assertEquals(1034020554196499109L, model.maxSizeBytes());
        Assertions.assertEquals("gpw", model.collation());
        Assertions.assertEquals("uh", model.sourceDatabaseId());
        Assertions.assertEquals("p", model.recoverableDatabaseId());
        Assertions.assertEquals("jyofdxluusdtto", model.provisioningState());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-07T10:01:38Z"), model.restorePointInTime());
        Assertions.assertEquals(CreateMode.DEFAULT, model.createMode());
        Assertions.assertEquals(StorageAccountType.LRS, model.storageAccountType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-06T07:16:14Z"), model.sourceDatabaseDeletionDate());
    }
}
