// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.synapse.SynapseManager;
import com.azure.resourcemanager.synapse.models.DayOfWeek;
import com.azure.resourcemanager.synapse.models.MaintenanceWindows;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SqlPoolMaintenanceWindowsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"timeRanges\":[{\"dayOfWeek\":\"Sunday\",\"startTime\":\"rezsdsuxheq\",\"duration\":\"cruxspinym\"},{\"dayOfWeek\":\"Sunday\",\"startTime\":\"okmikpa\",\"duration\":\"bmjxuvjipf\"},{\"dayOfWeek\":\"Wednesday\",\"startTime\":\"xdvwz\",\"duration\":\"hpphthdklm\"}]},\"id\":\"etatlakf\",\"name\":\"oixwgiksb\",\"type\":\"vtooxrpo\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SynapseManager manager = SynapseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        MaintenanceWindows response = manager.sqlPoolMaintenanceWindows()
            .getWithResponse("qvn", "obfelhldiuhz", "gqlmfaewzgi", "djpxpqht", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(DayOfWeek.SUNDAY, response.timeRanges().get(0).dayOfWeek());
        Assertions.assertEquals("rezsdsuxheq", response.timeRanges().get(0).startTime());
        Assertions.assertEquals("cruxspinym", response.timeRanges().get(0).duration());
    }
}
