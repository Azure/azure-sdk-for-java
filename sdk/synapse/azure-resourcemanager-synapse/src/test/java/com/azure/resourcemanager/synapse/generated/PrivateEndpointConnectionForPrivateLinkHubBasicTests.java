// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.synapse.models.PrivateEndpoint;
import com.azure.resourcemanager.synapse.models.PrivateEndpointConnectionForPrivateLinkHubBasic;
import com.azure.resourcemanager.synapse.models.PrivateLinkServiceConnectionState;
import org.junit.jupiter.api.Assertions;

public final class PrivateEndpointConnectionForPrivateLinkHubBasicTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateEndpointConnectionForPrivateLinkHubBasic model = BinaryData.fromString(
            "{\"id\":\"deoj\",\"properties\":{\"privateEndpoint\":{\"id\":\"khsmtxpsiebt\"},\"privateLinkServiceConnectionState\":{\"status\":\"pesapskrdqmhjj\",\"description\":\"tldwkyzxuutk\",\"actionsRequired\":\"ws\"},\"provisioningState\":\"svlxotogtwrup\"}}")
            .toObject(PrivateEndpointConnectionForPrivateLinkHubBasic.class);
        Assertions.assertEquals("pesapskrdqmhjj", model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("tldwkyzxuutk", model.privateLinkServiceConnectionState().description());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateEndpointConnectionForPrivateLinkHubBasic model = new PrivateEndpointConnectionForPrivateLinkHubBasic()
            .withPrivateEndpoint(new PrivateEndpoint())
            .withPrivateLinkServiceConnectionState(
                new PrivateLinkServiceConnectionState().withStatus("pesapskrdqmhjj").withDescription("tldwkyzxuutk"));
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnectionForPrivateLinkHubBasic.class);
        Assertions.assertEquals("pesapskrdqmhjj", model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("tldwkyzxuutk", model.privateLinkServiceConnectionState().description());
    }
}
