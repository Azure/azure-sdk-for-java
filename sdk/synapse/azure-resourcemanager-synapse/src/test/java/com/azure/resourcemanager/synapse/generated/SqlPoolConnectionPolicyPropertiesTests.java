// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.synapse.fluent.models.SqlPoolConnectionPolicyProperties;
import org.junit.jupiter.api.Assertions;

public final class SqlPoolConnectionPolicyPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SqlPoolConnectionPolicyProperties model = BinaryData.fromString(
            "{\"securityEnabledAccess\":\"bb\",\"proxyDnsName\":\"pgdakchzyvli\",\"proxyPort\":\"nrkcxkj\",\"visibility\":\"nxm\",\"useServerDefault\":\"uxswqrntvl\",\"redirectionState\":\"jpsttexoq\",\"state\":\"wcyyufmhruncu\"}")
            .toObject(SqlPoolConnectionPolicyProperties.class);
        Assertions.assertEquals("bb", model.securityEnabledAccess());
        Assertions.assertEquals("pgdakchzyvli", model.proxyDnsName());
        Assertions.assertEquals("nrkcxkj", model.proxyPort());
        Assertions.assertEquals("nxm", model.visibility());
        Assertions.assertEquals("uxswqrntvl", model.useServerDefault());
        Assertions.assertEquals("jpsttexoq", model.redirectionState());
        Assertions.assertEquals("wcyyufmhruncu", model.state());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SqlPoolConnectionPolicyProperties model
            = new SqlPoolConnectionPolicyProperties().withSecurityEnabledAccess("bb")
                .withProxyDnsName("pgdakchzyvli")
                .withProxyPort("nrkcxkj")
                .withVisibility("nxm")
                .withUseServerDefault("uxswqrntvl")
                .withRedirectionState("jpsttexoq")
                .withState("wcyyufmhruncu");
        model = BinaryData.fromObject(model).toObject(SqlPoolConnectionPolicyProperties.class);
        Assertions.assertEquals("bb", model.securityEnabledAccess());
        Assertions.assertEquals("pgdakchzyvli", model.proxyDnsName());
        Assertions.assertEquals("nrkcxkj", model.proxyPort());
        Assertions.assertEquals("nxm", model.visibility());
        Assertions.assertEquals("uxswqrntvl", model.useServerDefault());
        Assertions.assertEquals("jpsttexoq", model.redirectionState());
        Assertions.assertEquals("wcyyufmhruncu", model.state());
    }
}
