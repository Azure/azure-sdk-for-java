// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.synapse.fluent.models.EventGridConnectionProperties;
import com.azure.resourcemanager.synapse.models.BlobStorageEventType;
import com.azure.resourcemanager.synapse.models.EventGridDataFormat;
import org.junit.jupiter.api.Assertions;

public final class EventGridConnectionPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        EventGridConnectionProperties model = BinaryData.fromString(
            "{\"storageAccountResourceId\":\"xgnmqvzvluyq\",\"eventHubResourceId\":\"aiossscyvaifp\",\"consumerGroup\":\"uacvfy\",\"tableName\":\"w\",\"mappingRuleName\":\"fxtjdhsoym\",\"dataFormat\":\"MULTIJSON\",\"ignoreFirstRecord\":true,\"blobStorageEventType\":\"Microsoft.Storage.BlobCreated\",\"provisioningState\":\"Deleting\"}")
            .toObject(EventGridConnectionProperties.class);
        Assertions.assertEquals("xgnmqvzvluyq", model.storageAccountResourceId());
        Assertions.assertEquals("aiossscyvaifp", model.eventHubResourceId());
        Assertions.assertEquals("uacvfy", model.consumerGroup());
        Assertions.assertEquals("w", model.tableName());
        Assertions.assertEquals("fxtjdhsoym", model.mappingRuleName());
        Assertions.assertEquals(EventGridDataFormat.MULTIJSON, model.dataFormat());
        Assertions.assertEquals(true, model.ignoreFirstRecord());
        Assertions.assertEquals(BlobStorageEventType.MICROSOFT_STORAGE_BLOB_CREATED, model.blobStorageEventType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        EventGridConnectionProperties model
            = new EventGridConnectionProperties().withStorageAccountResourceId("xgnmqvzvluyq")
                .withEventHubResourceId("aiossscyvaifp")
                .withConsumerGroup("uacvfy")
                .withTableName("w")
                .withMappingRuleName("fxtjdhsoym")
                .withDataFormat(EventGridDataFormat.MULTIJSON)
                .withIgnoreFirstRecord(true)
                .withBlobStorageEventType(BlobStorageEventType.MICROSOFT_STORAGE_BLOB_CREATED);
        model = BinaryData.fromObject(model).toObject(EventGridConnectionProperties.class);
        Assertions.assertEquals("xgnmqvzvluyq", model.storageAccountResourceId());
        Assertions.assertEquals("aiossscyvaifp", model.eventHubResourceId());
        Assertions.assertEquals("uacvfy", model.consumerGroup());
        Assertions.assertEquals("w", model.tableName());
        Assertions.assertEquals("fxtjdhsoym", model.mappingRuleName());
        Assertions.assertEquals(EventGridDataFormat.MULTIJSON, model.dataFormat());
        Assertions.assertEquals(true, model.ignoreFirstRecord());
        Assertions.assertEquals(BlobStorageEventType.MICROSOFT_STORAGE_BLOB_CREATED, model.blobStorageEventType());
    }
}
