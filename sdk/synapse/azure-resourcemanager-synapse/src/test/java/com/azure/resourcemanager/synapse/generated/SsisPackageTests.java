// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.synapse.models.SsisPackage;
import com.azure.resourcemanager.synapse.models.SsisParameter;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SsisPackageTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SsisPackage model = BinaryData.fromString(
            "{\"type\":\"Package\",\"folderId\":3757612595954231819,\"projectVersion\":6441424923409023610,\"projectId\":2362497736544874450,\"parameters\":[{\"id\":727503827438884548,\"name\":\"jw\",\"description\":\"wyjfnqzocrdzgcze\",\"dataType\":\"tgxdncaqt\",\"required\":true,\"sensitive\":true,\"designDefaultValue\":\"fuvnyttzgixgyri\",\"defaultValue\":\"gm\",\"sensitiveDefaultValue\":\"ehlq\",\"valueType\":\"nrflkndrndpg\",\"valueSet\":false,\"variable\":\"hdaqotwfhipxwg\"},{\"id\":4982003429888600074,\"name\":\"ipowza\",\"description\":\"zuu\",\"dataType\":\"jcirvpefycdvei\",\"required\":false,\"sensitive\":true,\"designDefaultValue\":\"xzajlnsjhwjuyxxb\",\"defaultValue\":\"vmv\",\"sensitiveDefaultValue\":\"ytuadxkxeqbwp\",\"valueType\":\"ghyksarcdrnxs\",\"valueSet\":false,\"variable\":\"zladltxkpbq\"}],\"id\":3216403021820124598,\"name\":\"qjwkrhwz\",\"description\":\"nojisgglmvok\"}")
            .toObject(SsisPackage.class);
        Assertions.assertEquals(3216403021820124598L, model.id());
        Assertions.assertEquals("qjwkrhwz", model.name());
        Assertions.assertEquals("nojisgglmvok", model.description());
        Assertions.assertEquals(3757612595954231819L, model.folderId());
        Assertions.assertEquals(6441424923409023610L, model.projectVersion());
        Assertions.assertEquals(2362497736544874450L, model.projectId());
        Assertions.assertEquals(727503827438884548L, model.parameters().get(0).id());
        Assertions.assertEquals("jw", model.parameters().get(0).name());
        Assertions.assertEquals("wyjfnqzocrdzgcze", model.parameters().get(0).description());
        Assertions.assertEquals("tgxdncaqt", model.parameters().get(0).dataType());
        Assertions.assertEquals(true, model.parameters().get(0).required());
        Assertions.assertEquals(true, model.parameters().get(0).sensitive());
        Assertions.assertEquals("fuvnyttzgixgyri", model.parameters().get(0).designDefaultValue());
        Assertions.assertEquals("gm", model.parameters().get(0).defaultValue());
        Assertions.assertEquals("ehlq", model.parameters().get(0).sensitiveDefaultValue());
        Assertions.assertEquals("nrflkndrndpg", model.parameters().get(0).valueType());
        Assertions.assertEquals(false, model.parameters().get(0).valueSet());
        Assertions.assertEquals("hdaqotwfhipxwg", model.parameters().get(0).variable());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SsisPackage model = new SsisPackage().withId(3216403021820124598L)
            .withName("qjwkrhwz")
            .withDescription("nojisgglmvok")
            .withFolderId(3757612595954231819L)
            .withProjectVersion(6441424923409023610L)
            .withProjectId(2362497736544874450L)
            .withParameters(Arrays.asList(
                new SsisParameter().withId(727503827438884548L)
                    .withName("jw")
                    .withDescription("wyjfnqzocrdzgcze")
                    .withDataType("tgxdncaqt")
                    .withRequired(true)
                    .withSensitive(true)
                    .withDesignDefaultValue("fuvnyttzgixgyri")
                    .withDefaultValue("gm")
                    .withSensitiveDefaultValue("ehlq")
                    .withValueType("nrflkndrndpg")
                    .withValueSet(false)
                    .withVariable("hdaqotwfhipxwg"),
                new SsisParameter().withId(4982003429888600074L)
                    .withName("ipowza")
                    .withDescription("zuu")
                    .withDataType("jcirvpefycdvei")
                    .withRequired(false)
                    .withSensitive(true)
                    .withDesignDefaultValue("xzajlnsjhwjuyxxb")
                    .withDefaultValue("vmv")
                    .withSensitiveDefaultValue("ytuadxkxeqbwp")
                    .withValueType("ghyksarcdrnxs")
                    .withValueSet(false)
                    .withVariable("zladltxkpbq")));
        model = BinaryData.fromObject(model).toObject(SsisPackage.class);
        Assertions.assertEquals(3216403021820124598L, model.id());
        Assertions.assertEquals("qjwkrhwz", model.name());
        Assertions.assertEquals("nojisgglmvok", model.description());
        Assertions.assertEquals(3757612595954231819L, model.folderId());
        Assertions.assertEquals(6441424923409023610L, model.projectVersion());
        Assertions.assertEquals(2362497736544874450L, model.projectId());
        Assertions.assertEquals(727503827438884548L, model.parameters().get(0).id());
        Assertions.assertEquals("jw", model.parameters().get(0).name());
        Assertions.assertEquals("wyjfnqzocrdzgcze", model.parameters().get(0).description());
        Assertions.assertEquals("tgxdncaqt", model.parameters().get(0).dataType());
        Assertions.assertEquals(true, model.parameters().get(0).required());
        Assertions.assertEquals(true, model.parameters().get(0).sensitive());
        Assertions.assertEquals("fuvnyttzgixgyri", model.parameters().get(0).designDefaultValue());
        Assertions.assertEquals("gm", model.parameters().get(0).defaultValue());
        Assertions.assertEquals("ehlq", model.parameters().get(0).sensitiveDefaultValue());
        Assertions.assertEquals("nrflkndrndpg", model.parameters().get(0).valueType());
        Assertions.assertEquals(false, model.parameters().get(0).valueSet());
        Assertions.assertEquals("hdaqotwfhipxwg", model.parameters().get(0).variable());
    }
}
