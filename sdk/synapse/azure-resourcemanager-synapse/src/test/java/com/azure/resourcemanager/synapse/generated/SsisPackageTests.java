// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.synapse.models.SsisPackage;
import com.azure.resourcemanager.synapse.models.SsisParameter;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SsisPackageTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SsisPackage model = BinaryData.fromString(
            "{\"type\":\"Package\",\"folderId\":584876326460558844,\"projectVersion\":6826834716367989324,\"projectId\":8490261921990561365,\"parameters\":[{\"id\":8329988246873401375,\"name\":\"uahxs\",\"description\":\"jcmmzrrscub\",\"dataType\":\"sd\",\"required\":false,\"sensitive\":true,\"designDefaultValue\":\"odiffjxcjrmmua\",\"defaultValue\":\"ibvjogjonmcy\",\"sensitiveDefaultValue\":\"oyzbamwineofvf\",\"valueType\":\"kpoldtvevboc\",\"valueSet\":false,\"variable\":\"jknyu\"},{\"id\":1613523004175535231,\"name\":\"xpn\",\"description\":\"pzaamrdixtreki\",\"dataType\":\"wyskbruffgll\",\"required\":true,\"sensitive\":true,\"designDefaultValue\":\"lxhrp\",\"defaultValue\":\"vmblcouqe\",\"sensitiveDefaultValue\":\"hbcdsziry\",\"valueType\":\"ndo\",\"valueSet\":false,\"variable\":\"ltoormkfqlwxldyk\"},{\"id\":2290741949919595433,\"name\":\"aolnjpnnbmjk\",\"description\":\"bjgsjjxxahmrn\",\"dataType\":\"zyqegxyiv\",\"required\":false,\"sensitive\":true,\"designDefaultValue\":\"wbjijkgq\",\"defaultValue\":\"h\",\"sensitiveDefaultValue\":\"keznjaujvaa\",\"valueType\":\"ggiycwkdtaawxwf\",\"valueSet\":true,\"variable\":\"mrrqmbzmqkratb\"}],\"id\":3100972651307211313,\"name\":\"sidbirkf\",\"description\":\"sokdgoge\"}")
            .toObject(SsisPackage.class);
        Assertions.assertEquals(3100972651307211313L, model.id());
        Assertions.assertEquals("sidbirkf", model.name());
        Assertions.assertEquals("sokdgoge", model.description());
        Assertions.assertEquals(584876326460558844L, model.folderId());
        Assertions.assertEquals(6826834716367989324L, model.projectVersion());
        Assertions.assertEquals(8490261921990561365L, model.projectId());
        Assertions.assertEquals(8329988246873401375L, model.parameters().get(0).id());
        Assertions.assertEquals("uahxs", model.parameters().get(0).name());
        Assertions.assertEquals("jcmmzrrscub", model.parameters().get(0).description());
        Assertions.assertEquals("sd", model.parameters().get(0).dataType());
        Assertions.assertEquals(false, model.parameters().get(0).required());
        Assertions.assertEquals(true, model.parameters().get(0).sensitive());
        Assertions.assertEquals("odiffjxcjrmmua", model.parameters().get(0).designDefaultValue());
        Assertions.assertEquals("ibvjogjonmcy", model.parameters().get(0).defaultValue());
        Assertions.assertEquals("oyzbamwineofvf", model.parameters().get(0).sensitiveDefaultValue());
        Assertions.assertEquals("kpoldtvevboc", model.parameters().get(0).valueType());
        Assertions.assertEquals(false, model.parameters().get(0).valueSet());
        Assertions.assertEquals("jknyu", model.parameters().get(0).variable());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SsisPackage model = new SsisPackage().withId(3100972651307211313L)
            .withName("sidbirkf")
            .withDescription("sokdgoge")
            .withFolderId(584876326460558844L)
            .withProjectVersion(6826834716367989324L)
            .withProjectId(8490261921990561365L)
            .withParameters(Arrays.asList(
                new SsisParameter().withId(8329988246873401375L)
                    .withName("uahxs")
                    .withDescription("jcmmzrrscub")
                    .withDataType("sd")
                    .withRequired(false)
                    .withSensitive(true)
                    .withDesignDefaultValue("odiffjxcjrmmua")
                    .withDefaultValue("ibvjogjonmcy")
                    .withSensitiveDefaultValue("oyzbamwineofvf")
                    .withValueType("kpoldtvevboc")
                    .withValueSet(false)
                    .withVariable("jknyu"),
                new SsisParameter().withId(1613523004175535231L)
                    .withName("xpn")
                    .withDescription("pzaamrdixtreki")
                    .withDataType("wyskbruffgll")
                    .withRequired(true)
                    .withSensitive(true)
                    .withDesignDefaultValue("lxhrp")
                    .withDefaultValue("vmblcouqe")
                    .withSensitiveDefaultValue("hbcdsziry")
                    .withValueType("ndo")
                    .withValueSet(false)
                    .withVariable("ltoormkfqlwxldyk"),
                new SsisParameter().withId(2290741949919595433L)
                    .withName("aolnjpnnbmjk")
                    .withDescription("bjgsjjxxahmrn")
                    .withDataType("zyqegxyiv")
                    .withRequired(false)
                    .withSensitive(true)
                    .withDesignDefaultValue("wbjijkgq")
                    .withDefaultValue("h")
                    .withSensitiveDefaultValue("keznjaujvaa")
                    .withValueType("ggiycwkdtaawxwf")
                    .withValueSet(true)
                    .withVariable("mrrqmbzmqkratb")));
        model = BinaryData.fromObject(model).toObject(SsisPackage.class);
        Assertions.assertEquals(3100972651307211313L, model.id());
        Assertions.assertEquals("sidbirkf", model.name());
        Assertions.assertEquals("sokdgoge", model.description());
        Assertions.assertEquals(584876326460558844L, model.folderId());
        Assertions.assertEquals(6826834716367989324L, model.projectVersion());
        Assertions.assertEquals(8490261921990561365L, model.projectId());
        Assertions.assertEquals(8329988246873401375L, model.parameters().get(0).id());
        Assertions.assertEquals("uahxs", model.parameters().get(0).name());
        Assertions.assertEquals("jcmmzrrscub", model.parameters().get(0).description());
        Assertions.assertEquals("sd", model.parameters().get(0).dataType());
        Assertions.assertEquals(false, model.parameters().get(0).required());
        Assertions.assertEquals(true, model.parameters().get(0).sensitive());
        Assertions.assertEquals("odiffjxcjrmmua", model.parameters().get(0).designDefaultValue());
        Assertions.assertEquals("ibvjogjonmcy", model.parameters().get(0).defaultValue());
        Assertions.assertEquals("oyzbamwineofvf", model.parameters().get(0).sensitiveDefaultValue());
        Assertions.assertEquals("kpoldtvevboc", model.parameters().get(0).valueType());
        Assertions.assertEquals(false, model.parameters().get(0).valueSet());
        Assertions.assertEquals("jknyu", model.parameters().get(0).variable());
    }
}
