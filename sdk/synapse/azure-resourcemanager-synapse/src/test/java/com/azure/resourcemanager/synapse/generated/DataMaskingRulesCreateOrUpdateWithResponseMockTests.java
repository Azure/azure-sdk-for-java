// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.synapse.SynapseManager;
import com.azure.resourcemanager.synapse.models.DataMaskingFunction;
import com.azure.resourcemanager.synapse.models.DataMaskingRule;
import com.azure.resourcemanager.synapse.models.DataMaskingRuleState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DataMaskingRulesCreateOrUpdateWithResponseMockTests {
    @Test
    public void testCreateOrUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"id\":\"h\",\"aliasName\":\"pter\",\"ruleState\":\"Disabled\",\"schemaName\":\"wki\",\"tableName\":\"kskw\",\"columnName\":\"tsdetjygowifcq\",\"maskingFunction\":\"CCN\",\"numberFrom\":\"zkgysdgzyybzoxlv\",\"numberTo\":\"ptvdxxheigm\",\"prefixSize\":\"lwzgh\",\"suffixSize\":\"jvmabzzbway\",\"replacementString\":\"mdafbgymqt\"},\"location\":\"preojxrjnbsconxa\",\"kind\":\"pney\",\"id\":\"hbjizqfsgnwdx\",\"name\":\"edpqlrfbo\",\"type\":\"xi\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SynapseManager manager = SynapseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        DataMaskingRule response = manager.dataMaskingRules()
            .define("bwjtrdx")
            .withExistingSqlPool("f", "zsifcuvbdujgcwx", "ec")
            .withAliasName("sy")
            .withRuleState(DataMaskingRuleState.ENABLED)
            .withSchemaName("dqxwabzrwiqrxhac")
            .withTableName("cdosqkptj")
            .withColumnName("gkifmmainwh")
            .withMaskingFunction(DataMaskingFunction.EMAIL)
            .withNumberFrom("kp")
            .withNumberTo("wuntobuiz")
            .withPrefixSize("zelwgvydjufbnkl")
            .withSuffixSize("axpegjw")
            .withReplacementString("bal")
            .create();

        Assertions.assertEquals("pter", response.aliasName());
        Assertions.assertEquals(DataMaskingRuleState.DISABLED, response.ruleState());
        Assertions.assertEquals("wki", response.schemaName());
        Assertions.assertEquals("kskw", response.tableName());
        Assertions.assertEquals("tsdetjygowifcq", response.columnName());
        Assertions.assertEquals(DataMaskingFunction.CCN, response.maskingFunction());
        Assertions.assertEquals("zkgysdgzyybzoxlv", response.numberFrom());
        Assertions.assertEquals("ptvdxxheigm", response.numberTo());
        Assertions.assertEquals("lwzgh", response.prefixSize());
        Assertions.assertEquals("jvmabzzbway", response.suffixSize());
        Assertions.assertEquals("mdafbgymqt", response.replacementString());
    }
}
