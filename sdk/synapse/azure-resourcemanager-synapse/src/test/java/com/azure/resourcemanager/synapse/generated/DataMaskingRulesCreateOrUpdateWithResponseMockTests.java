// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.synapse.SynapseManager;
import com.azure.resourcemanager.synapse.models.DataMaskingFunction;
import com.azure.resourcemanager.synapse.models.DataMaskingRule;
import com.azure.resourcemanager.synapse.models.DataMaskingRuleState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DataMaskingRulesCreateOrUpdateWithResponseMockTests {
    @Test
    public void testCreateOrUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"id\":\"imrljdp\",\"aliasName\":\"fxyemhkftbaewh\",\"ruleState\":\"Enabled\",\"schemaName\":\"loamfmxtllfltym\",\"tableName\":\"cn\",\"columnName\":\"rfijhggabq\",\"maskingFunction\":\"CCN\",\"numberFrom\":\"mkli\",\"numberTo\":\"rwdvffhsdpzou\",\"prefixSize\":\"tqrxqwqnjxrdf\",\"suffixSize\":\"t\",\"replacementString\":\"lygtavczcxdfweap\"},\"location\":\"mlx\",\"kind\":\"jphrasp\",\"id\":\"fleimixlmd\",\"name\":\"gicehfgsmdr\",\"type\":\"uq\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SynapseManager manager = SynapseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        DataMaskingRule response = manager.dataMaskingRules()
            .define("fqpgaixwrgr")
            .withExistingSqlPool("vczdjiahuqymjzu", "wwmejjqhddwvmqx", "yookyfozkbnzxby")
            .withAliasName("wqikwepwogggic")
            .withRuleState(DataMaskingRuleState.ENABLED)
            .withSchemaName("htfmcqbsudzpgc")
            .withTableName("zpgf")
            .withColumnName("umjdjxhzghg")
            .withMaskingFunction(DataMaskingFunction.SSN)
            .withNumberFrom("ynrceqavfdbdf")
            .withNumberTo("xjdnajuo")
            .withPrefixSize("y")
            .withSuffixSize("mk")
            .withReplacementString("hvcw")
            .create();

        Assertions.assertEquals("fxyemhkftbaewh", response.aliasName());
        Assertions.assertEquals(DataMaskingRuleState.ENABLED, response.ruleState());
        Assertions.assertEquals("loamfmxtllfltym", response.schemaName());
        Assertions.assertEquals("cn", response.tableName());
        Assertions.assertEquals("rfijhggabq", response.columnName());
        Assertions.assertEquals(DataMaskingFunction.CCN, response.maskingFunction());
        Assertions.assertEquals("mkli", response.numberFrom());
        Assertions.assertEquals("rwdvffhsdpzou", response.numberTo());
        Assertions.assertEquals("tqrxqwqnjxrdf", response.prefixSize());
        Assertions.assertEquals("t", response.suffixSize());
        Assertions.assertEquals("lygtavczcxdfweap", response.replacementString());
    }
}
