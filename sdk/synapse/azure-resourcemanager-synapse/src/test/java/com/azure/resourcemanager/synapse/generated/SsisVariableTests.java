// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.synapse.models.SsisVariable;
import org.junit.jupiter.api.Assertions;

public final class SsisVariableTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SsisVariable model = BinaryData.fromString(
            "{\"id\":8863809603382559898,\"name\":\"enbbklqpxzucafed\",\"description\":\"wnlzafwxu\",\"dataType\":\"nhgookrtalvnbw\",\"sensitive\":true,\"value\":\"meluclvdjj\",\"sensitiveValue\":\"yrdnqod\"}")
            .toObject(SsisVariable.class);
        Assertions.assertEquals(8863809603382559898L, model.id());
        Assertions.assertEquals("enbbklqpxzucafed", model.name());
        Assertions.assertEquals("wnlzafwxu", model.description());
        Assertions.assertEquals("nhgookrtalvnbw", model.dataType());
        Assertions.assertEquals(true, model.sensitive());
        Assertions.assertEquals("meluclvdjj", model.value());
        Assertions.assertEquals("yrdnqod", model.sensitiveValue());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SsisVariable model = new SsisVariable().withId(8863809603382559898L)
            .withName("enbbklqpxzucafed")
            .withDescription("wnlzafwxu")
            .withDataType("nhgookrtalvnbw")
            .withSensitive(true)
            .withValue("meluclvdjj")
            .withSensitiveValue("yrdnqod");
        model = BinaryData.fromObject(model).toObject(SsisVariable.class);
        Assertions.assertEquals(8863809603382559898L, model.id());
        Assertions.assertEquals("enbbklqpxzucafed", model.name());
        Assertions.assertEquals("wnlzafwxu", model.description());
        Assertions.assertEquals("nhgookrtalvnbw", model.dataType());
        Assertions.assertEquals(true, model.sensitive());
        Assertions.assertEquals("meluclvdjj", model.value());
        Assertions.assertEquals("yrdnqod", model.sensitiveValue());
    }
}
