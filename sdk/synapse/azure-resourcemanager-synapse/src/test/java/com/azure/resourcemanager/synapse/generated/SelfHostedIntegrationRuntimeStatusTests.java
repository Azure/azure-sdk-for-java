// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.util.BinaryData;
import com.azure.core.util.serializer.JacksonAdapter;
import com.azure.core.util.serializer.SerializerEncoding;
import com.azure.resourcemanager.synapse.fluent.models.SelfHostedIntegrationRuntimeNodeInner;
import com.azure.resourcemanager.synapse.models.LinkedIntegrationRuntime;
import com.azure.resourcemanager.synapse.models.SelfHostedIntegrationRuntimeStatus;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class SelfHostedIntegrationRuntimeStatusTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SelfHostedIntegrationRuntimeStatus model = BinaryData.fromString(
            "{\"type\":\"SelfHosted\",\"typeProperties\":{\"createTime\":\"2021-03-25T17:57:28Z\",\"taskQueueId\":\"bedenrexkx\",\"nodeCommunicationChannelEncryptionMode\":\"xvucnul\",\"internalChannelEncryption\":\"NotEncrypted\",\"version\":\"jevdyznf\",\"nodes\":[{\"nodeName\":\"kskmqozzkivyhjrl\",\"machineName\":\"zji\",\"hostServiceUri\":\"qfhefkwabsol\",\"status\":\"Limited\",\"capabilities\":{\"elexhvu\":\"lmgnlqxsjx\",\"zoolzqoca\":\"b\",\"t\":\"kuzlbcnn\"},\"versionStatus\":\"xawqy\",\"version\":\"lhdyzmyckzex\",\"registerTime\":\"2021-06-29T17:47:25Z\",\"lastConnectTime\":\"2021-06-14T23:11:42Z\",\"expiryTime\":\"2021-08-23T03:40:52Z\",\"lastStartTime\":\"2021-10-15T13:09:12Z\",\"lastStopTime\":\"2021-02-04T18:26:06Z\",\"lastUpdateResult\":\"Succeed\",\"lastStartUpdateTime\":\"2021-11-16T09:51:42Z\",\"lastEndUpdateTime\":\"2021-10-26T20:58:49Z\",\"isActiveDispatcher\":false,\"concurrentJobsLimit\":1562287179,\"maxConcurrentJobs\":1165730554,\"\":{\"urykcrraueekcs\":\"datagzvkiwrsiwdyj\",\"gdda\":\"dataeh\"}},{\"nodeName\":\"cbgydlqi\",\"machineName\":\"wmhmptyrilkfbnr\",\"hostServiceUri\":\"xvztpbnfnqtxj\",\"status\":\"Upgrading\",\"capabilities\":{\"zygleexahvm\":\"swbnfddepldwqjns\",\"sjjzyvoaqajuveh\":\"whsbrcary\"},\"versionStatus\":\"tdmkrrbhmpful\",\"version\":\"efgybpmfbfununmp\",\"registerTime\":\"2021-08-02T17:18Z\",\"lastConnectTime\":\"2021-09-25T07:23:33Z\",\"expiryTime\":\"2020-12-27T16:30:22Z\",\"lastStartTime\":\"2021-07-15T19:37:29Z\",\"lastStopTime\":\"2021-11-17T05:47:27Z\",\"lastUpdateResult\":\"Fail\",\"lastStartUpdateTime\":\"2021-01-20T14:52:43Z\",\"lastEndUpdateTime\":\"2021-02-07T15:25:17Z\",\"isActiveDispatcher\":true,\"concurrentJobsLimit\":1665981371,\"maxConcurrentJobs\":2088035425,\"\":{\"hbkgfyrt\":\"datagcwn\",\"mjpjscdfpdqwty\":\"datagm\"}},{\"nodeName\":\"vgwmseharxifvqnr\",\"machineName\":\"mbpjptnvwjh\",\"hostServiceUri\":\"idqpxlbtpakftn\",\"status\":\"Initializing\",\"capabilities\":{\"pycvjqdvdwkqpldr\":\"ykyutrymdwmfj\",\"taoutnpdct\":\"efgnaavuagnt\",\"yeuyldph\":\"hspfefyihd\",\"thhllnmwyne\":\"tybkcgs\"},\"versionStatus\":\"exlfciatxtjrrl\",\"version\":\"dskjhhxdlaj\",\"registerTime\":\"2021-09-17T20:41:14Z\",\"lastConnectTime\":\"2021-08-25T08:46:38Z\",\"expiryTime\":\"2021-04-15T19:18:44Z\",\"lastStartTime\":\"2021-10-18T07:51:27Z\",\"lastStopTime\":\"2021-10-20T01:32:05Z\",\"lastUpdateResult\":\"Fail\",\"lastStartUpdateTime\":\"2021-11-18T01:57:10Z\",\"lastEndUpdateTime\":\"2021-01-21T19:30:07Z\",\"isActiveDispatcher\":false,\"concurrentJobsLimit\":413094932,\"maxConcurrentJobs\":190169721,\"\":{\"dnqtoqxjhqx\":\"datakxettcslojfkq\",\"htkbtnq\":\"datas\",\"mbiipsnawwlqk\":\"datarngl\"}}],\"scheduledUpdateDate\":\"2021-09-21T19:49:31Z\",\"updateDelayOffset\":\"hllxricctkw\",\"localTimeZoneOffset\":\"qqoajxeiyglesrw\",\"capabilities\":{\"rupobehd\":\"xhdctrceqnk\"},\"serviceUrls\":[\"zacvu\",\"epj\",\"bibnzpphepifex\",\"eqir\"],\"autoUpdate\":\"On\",\"versionStatus\":\"ly\",\"links\":[{\"name\":\"vrpjlvczuodacp\",\"subscriptionId\":\"ettepdjxqe\",\"dataFactoryName\":\"oy\",\"dataFactoryLocation\":\"iylpck\",\"createTime\":\"2021-07-22T20:50:14Z\"},{\"name\":\"edveskwxegqp\",\"subscriptionId\":\"gfnzh\",\"dataFactoryName\":\"mjtsgh\",\"dataFactoryLocation\":\"c\",\"createTime\":\"2021-04-26T10:07:30Z\"}],\"pushedVersion\":\"arpzeqacdldtzm\",\"latestVersion\":\"pefcpcz\",\"autoUpdateETA\":\"2021-10-16T20:18:39Z\",\"serviceRegion\":\"qndaizupfkhuytus\",\"newerVersions\":[\"mtvtvegwqiukvzwy\"],\"osType\":798786113,\"targetFramework\":772209790},\"dataFactoryName\":\"okgkskjivbs\",\"state\":\"Starting\",\"\":{\"i\":\"datafukpeexpgeu\",\"trdexyionofnin\":\"datahwu\",\"wqqrsmpcbbprtuga\":\"datadbzsx\",\"fogdrtbfcm\":\"databzbcyksiv\"}}")
            .toObject(SelfHostedIntegrationRuntimeStatus.class);
        Assertions.assertEquals("qndaizupfkhuytus", model.serviceRegion());
        Assertions.assertEquals("mtvtvegwqiukvzwy", model.newerVersions().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SelfHostedIntegrationRuntimeStatus model = new SelfHostedIntegrationRuntimeStatus()
            .withNodes(Arrays.asList(
                new SelfHostedIntegrationRuntimeNodeInner()
                    .withAdditionalProperties(mapOf("nodeName", "kskmqozzkivyhjrl", "lastStartUpdateTime",
                        "2021-11-16T09:51:42Z", "lastConnectTime", "2021-06-14T23:11:42Z", "capabilities",
                        JacksonAdapter.createDefaultSerializerAdapter()
                            .deserialize("{\"elexhvu\":\"lmgnlqxsjx\",\"zoolzqoca\":\"b\",\"t\":\"kuzlbcnn\"}",
                                Object.class, SerializerEncoding.JSON),
                        "hostServiceUri", "qfhefkwabsol", "registerTime", "2021-06-29T17:47:25Z", "maxConcurrentJobs",
                        1165730554, "lastStopTime", "2021-02-04T18:26:06Z", "version", "lhdyzmyckzex", "machineName",
                        "zji", "versionStatus", "xawqy", "concurrentJobsLimit", 1562287179, "lastEndUpdateTime",
                        "2021-10-26T20:58:49Z", "expiryTime", "2021-08-23T03:40:52Z", "lastStartTime",
                        "2021-10-15T13:09:12Z", "lastUpdateResult", "Succeed", "isActiveDispatcher", false, "status",
                        "Limited")),
                new SelfHostedIntegrationRuntimeNodeInner().withAdditionalProperties(mapOf("nodeName", "cbgydlqi",
                    "lastStartUpdateTime", "2021-01-20T14:52:43Z", "lastConnectTime", "2021-09-25T07:23:33Z",
                    "capabilities",
                    JacksonAdapter.createDefaultSerializerAdapter()
                        .deserialize(
                            "{\"zygleexahvm\":\"swbnfddepldwqjns\",\"sjjzyvoaqajuveh\":\"whsbrcary\"}", Object.class,
                            SerializerEncoding.JSON),
                    "hostServiceUri", "xvztpbnfnqtxj", "registerTime", "2021-08-02T17:18Z", "maxConcurrentJobs",
                    2088035425, "lastStopTime", "2021-11-17T05:47:27Z", "version", "efgybpmfbfununmp", "machineName",
                    "wmhmptyrilkfbnr", "versionStatus", "tdmkrrbhmpful", "concurrentJobsLimit", 1665981371,
                    "lastEndUpdateTime", "2021-02-07T15:25:17Z", "expiryTime", "2020-12-27T16:30:22Z", "lastStartTime",
                    "2021-07-15T19:37:29Z", "lastUpdateResult", "Fail", "isActiveDispatcher", true, "status",
                    "Upgrading")),
                new SelfHostedIntegrationRuntimeNodeInner().withAdditionalProperties(mapOf("nodeName",
                    "vgwmseharxifvqnr", "lastStartUpdateTime", "2021-11-18T01:57:10Z", "lastConnectTime",
                    "2021-08-25T08:46:38Z", "capabilities",
                    JacksonAdapter.createDefaultSerializerAdapter()
                        .deserialize(
                            "{\"pycvjqdvdwkqpldr\":\"ykyutrymdwmfj\",\"taoutnpdct\":\"efgnaavuagnt\",\"yeuyldph\":\"hspfefyihd\",\"thhllnmwyne\":\"tybkcgs\"}",
                            Object.class, SerializerEncoding.JSON),
                    "hostServiceUri", "idqpxlbtpakftn", "registerTime", "2021-09-17T20:41:14Z", "maxConcurrentJobs",
                    190169721, "lastStopTime", "2021-10-20T01:32:05Z", "version", "dskjhhxdlaj", "machineName",
                    "mbpjptnvwjh", "versionStatus", "exlfciatxtjrrl", "concurrentJobsLimit", 413094932,
                    "lastEndUpdateTime", "2021-01-21T19:30:07Z", "expiryTime", "2021-04-15T19:18:44Z", "lastStartTime",
                    "2021-10-18T07:51:27Z", "lastUpdateResult", "Fail", "isActiveDispatcher", false, "status",
                    "Initializing"))))
            .withLinks(Arrays.asList(new LinkedIntegrationRuntime(), new LinkedIntegrationRuntime()))
            .withServiceRegion("qndaizupfkhuytus")
            .withNewerVersions(Arrays.asList("mtvtvegwqiukvzwy"));
        model = BinaryData.fromObject(model).toObject(SelfHostedIntegrationRuntimeStatus.class);
        Assertions.assertEquals("qndaizupfkhuytus", model.serviceRegion());
        Assertions.assertEquals("mtvtvegwqiukvzwy", model.newerVersions().get(0));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
