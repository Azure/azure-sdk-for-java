// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.synapse.fluent.models.DataMaskingRuleInner;
import com.azure.resourcemanager.synapse.models.DataMaskingFunction;
import com.azure.resourcemanager.synapse.models.DataMaskingRuleListResult;
import com.azure.resourcemanager.synapse.models.DataMaskingRuleState;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DataMaskingRuleListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DataMaskingRuleListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"id\":\"shqvcimpev\",\"aliasName\":\"mblrrilbywd\",\"ruleState\":\"Enabled\",\"schemaName\":\"icc\",\"tableName\":\"rwfscjfnynszquj\",\"columnName\":\"zdvoqytibyowbb\",\"maskingFunction\":\"CCN\",\"numberFrom\":\"avu\",\"numberTo\":\"thjoxoism\",\"prefixSize\":\"sbpimlq\",\"suffixSize\":\"jxkcgxxlxsff\",\"replacementString\":\"vizqzdwl\"},\"location\":\"lyoupfgfbkju\",\"kind\":\"yhgk\",\"id\":\"minsgowzf\",\"name\":\"tsttktlahbq\",\"type\":\"ctxtgzukxi\"},{\"properties\":{\"id\":\"qtgqqqxhrnxr\",\"aliasName\":\"pjui\",\"ruleState\":\"Disabled\",\"schemaName\":\"okqdzfvaz\",\"tableName\":\"vjlfrqtt\",\"columnName\":\"ajlkatnw\",\"maskingFunction\":\"Number\",\"numberFrom\":\"opidkqqfkuv\",\"numberTo\":\"xkdmligo\",\"prefixSize\":\"brxk\",\"suffixSize\":\"loazuruocbgoo\",\"replacementString\":\"te\"},\"location\":\"bfhjxakvvjgsl\",\"kind\":\"dilmyww\",\"id\":\"kgkxn\",\"name\":\"edabgyvudtjue\",\"type\":\"bcihxuuwhc\"},{\"properties\":{\"id\":\"ccybvp\",\"aliasName\":\"akkud\",\"ruleState\":\"Enabled\",\"schemaName\":\"gwjplmag\",\"tableName\":\"tcyohpfkyrk\",\"columnName\":\"bdgiogsjk\",\"maskingFunction\":\"Email\",\"numberFrom\":\"qjnobaiyhddviac\",\"numberTo\":\"fnmntfpmvmemfn\",\"prefixSize\":\"dwvvba\",\"suffixSize\":\"lllchpodb\",\"replacementString\":\"vwrdnhfukuvsj\"},\"location\":\"wsmystuluqypf\",\"kind\":\"lerchpq\",\"id\":\"mfpjbabw\",\"name\":\"dfc\",\"type\":\"sspuunnoxyhkx\"}]}")
            .toObject(DataMaskingRuleListResult.class);
        Assertions.assertEquals("mblrrilbywd", model.value().get(0).aliasName());
        Assertions.assertEquals(DataMaskingRuleState.ENABLED, model.value().get(0).ruleState());
        Assertions.assertEquals("icc", model.value().get(0).schemaName());
        Assertions.assertEquals("rwfscjfnynszquj", model.value().get(0).tableName());
        Assertions.assertEquals("zdvoqytibyowbb", model.value().get(0).columnName());
        Assertions.assertEquals(DataMaskingFunction.CCN, model.value().get(0).maskingFunction());
        Assertions.assertEquals("avu", model.value().get(0).numberFrom());
        Assertions.assertEquals("thjoxoism", model.value().get(0).numberTo());
        Assertions.assertEquals("sbpimlq", model.value().get(0).prefixSize());
        Assertions.assertEquals("jxkcgxxlxsff", model.value().get(0).suffixSize());
        Assertions.assertEquals("vizqzdwl", model.value().get(0).replacementString());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DataMaskingRuleListResult model = new DataMaskingRuleListResult().withValue(Arrays.asList(
            new DataMaskingRuleInner().withAliasName("mblrrilbywd")
                .withRuleState(DataMaskingRuleState.ENABLED)
                .withSchemaName("icc")
                .withTableName("rwfscjfnynszquj")
                .withColumnName("zdvoqytibyowbb")
                .withMaskingFunction(DataMaskingFunction.CCN)
                .withNumberFrom("avu")
                .withNumberTo("thjoxoism")
                .withPrefixSize("sbpimlq")
                .withSuffixSize("jxkcgxxlxsff")
                .withReplacementString("vizqzdwl"),
            new DataMaskingRuleInner().withAliasName("pjui")
                .withRuleState(DataMaskingRuleState.DISABLED)
                .withSchemaName("okqdzfvaz")
                .withTableName("vjlfrqtt")
                .withColumnName("ajlkatnw")
                .withMaskingFunction(DataMaskingFunction.NUMBER)
                .withNumberFrom("opidkqqfkuv")
                .withNumberTo("xkdmligo")
                .withPrefixSize("brxk")
                .withSuffixSize("loazuruocbgoo")
                .withReplacementString("te"),
            new DataMaskingRuleInner().withAliasName("akkud")
                .withRuleState(DataMaskingRuleState.ENABLED)
                .withSchemaName("gwjplmag")
                .withTableName("tcyohpfkyrk")
                .withColumnName("bdgiogsjk")
                .withMaskingFunction(DataMaskingFunction.EMAIL)
                .withNumberFrom("qjnobaiyhddviac")
                .withNumberTo("fnmntfpmvmemfn")
                .withPrefixSize("dwvvba")
                .withSuffixSize("lllchpodb")
                .withReplacementString("vwrdnhfukuvsj")));
        model = BinaryData.fromObject(model).toObject(DataMaskingRuleListResult.class);
        Assertions.assertEquals("mblrrilbywd", model.value().get(0).aliasName());
        Assertions.assertEquals(DataMaskingRuleState.ENABLED, model.value().get(0).ruleState());
        Assertions.assertEquals("icc", model.value().get(0).schemaName());
        Assertions.assertEquals("rwfscjfnynszquj", model.value().get(0).tableName());
        Assertions.assertEquals("zdvoqytibyowbb", model.value().get(0).columnName());
        Assertions.assertEquals(DataMaskingFunction.CCN, model.value().get(0).maskingFunction());
        Assertions.assertEquals("avu", model.value().get(0).numberFrom());
        Assertions.assertEquals("thjoxoism", model.value().get(0).numberTo());
        Assertions.assertEquals("sbpimlq", model.value().get(0).prefixSize());
        Assertions.assertEquals("jxkcgxxlxsff", model.value().get(0).suffixSize());
        Assertions.assertEquals("vizqzdwl", model.value().get(0).replacementString());
    }
}
