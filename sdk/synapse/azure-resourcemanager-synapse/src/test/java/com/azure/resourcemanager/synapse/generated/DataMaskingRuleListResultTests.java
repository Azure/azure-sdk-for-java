// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.synapse.fluent.models.DataMaskingRuleInner;
import com.azure.resourcemanager.synapse.models.DataMaskingFunction;
import com.azure.resourcemanager.synapse.models.DataMaskingRuleListResult;
import com.azure.resourcemanager.synapse.models.DataMaskingRuleState;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DataMaskingRuleListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DataMaskingRuleListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"id\":\"bgsxgnxfyqonmpq\",\"aliasName\":\"wdofdbxiqx\",\"ruleState\":\"Disabled\",\"schemaName\":\"qbi\",\"tableName\":\"htmwwinh\",\"columnName\":\"hfqpofv\",\"maskingFunction\":\"Email\",\"numberFrom\":\"blembnkbwvqvxkd\",\"numberTo\":\"qihebw\",\"prefixSize\":\"wbzuwfmdurage\",\"suffixSize\":\"zvcjfelisdjubggb\",\"replacementString\":\"gkxkbsazgakg\"},\"location\":\"yrcmjdmspofap\",\"kind\":\"hryl\",\"id\":\"iofrzgbzjedmstk\",\"name\":\"nlvxbcuii\",\"type\":\"nktwfansnvpdibmi\"},{\"properties\":{\"id\":\"tbzbkiwbuqnyophz\",\"aliasName\":\"l\",\"ruleState\":\"Enabled\",\"schemaName\":\"rpfbcunezz\",\"tableName\":\"e\",\"columnName\":\"elfwy\",\"maskingFunction\":\"CCN\",\"numberFrom\":\"wx\",\"numberTo\":\"etnpsihcl\",\"prefixSize\":\"zvaylptrsqqw\",\"suffixSize\":\"cmwqkchcxwa\",\"replacementString\":\"ewzjkjexfd\"},\"location\":\"vhpsylkkshkbffmb\",\"kind\":\"zjrgyww\",\"id\":\"gjxsnptfu\",\"name\":\"gicgaaoepttaq\",\"type\":\"tdewemxswvruu\"}]}")
            .toObject(DataMaskingRuleListResult.class);
        Assertions.assertEquals("wdofdbxiqx", model.value().get(0).aliasName());
        Assertions.assertEquals(DataMaskingRuleState.DISABLED, model.value().get(0).ruleState());
        Assertions.assertEquals("qbi", model.value().get(0).schemaName());
        Assertions.assertEquals("htmwwinh", model.value().get(0).tableName());
        Assertions.assertEquals("hfqpofv", model.value().get(0).columnName());
        Assertions.assertEquals(DataMaskingFunction.EMAIL, model.value().get(0).maskingFunction());
        Assertions.assertEquals("blembnkbwvqvxkd", model.value().get(0).numberFrom());
        Assertions.assertEquals("qihebw", model.value().get(0).numberTo());
        Assertions.assertEquals("wbzuwfmdurage", model.value().get(0).prefixSize());
        Assertions.assertEquals("zvcjfelisdjubggb", model.value().get(0).suffixSize());
        Assertions.assertEquals("gkxkbsazgakg", model.value().get(0).replacementString());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DataMaskingRuleListResult model = new DataMaskingRuleListResult().withValue(Arrays.asList(
            new DataMaskingRuleInner().withAliasName("wdofdbxiqx")
                .withRuleState(DataMaskingRuleState.DISABLED)
                .withSchemaName("qbi")
                .withTableName("htmwwinh")
                .withColumnName("hfqpofv")
                .withMaskingFunction(DataMaskingFunction.EMAIL)
                .withNumberFrom("blembnkbwvqvxkd")
                .withNumberTo("qihebw")
                .withPrefixSize("wbzuwfmdurage")
                .withSuffixSize("zvcjfelisdjubggb")
                .withReplacementString("gkxkbsazgakg"),
            new DataMaskingRuleInner().withAliasName("l")
                .withRuleState(DataMaskingRuleState.ENABLED)
                .withSchemaName("rpfbcunezz")
                .withTableName("e")
                .withColumnName("elfwy")
                .withMaskingFunction(DataMaskingFunction.CCN)
                .withNumberFrom("wx")
                .withNumberTo("etnpsihcl")
                .withPrefixSize("zvaylptrsqqw")
                .withSuffixSize("cmwqkchcxwa")
                .withReplacementString("ewzjkjexfd")));
        model = BinaryData.fromObject(model).toObject(DataMaskingRuleListResult.class);
        Assertions.assertEquals("wdofdbxiqx", model.value().get(0).aliasName());
        Assertions.assertEquals(DataMaskingRuleState.DISABLED, model.value().get(0).ruleState());
        Assertions.assertEquals("qbi", model.value().get(0).schemaName());
        Assertions.assertEquals("htmwwinh", model.value().get(0).tableName());
        Assertions.assertEquals("hfqpofv", model.value().get(0).columnName());
        Assertions.assertEquals(DataMaskingFunction.EMAIL, model.value().get(0).maskingFunction());
        Assertions.assertEquals("blembnkbwvqvxkd", model.value().get(0).numberFrom());
        Assertions.assertEquals("qihebw", model.value().get(0).numberTo());
        Assertions.assertEquals("wbzuwfmdurage", model.value().get(0).prefixSize());
        Assertions.assertEquals("zvcjfelisdjubggb", model.value().get(0).suffixSize());
        Assertions.assertEquals("gkxkbsazgakg", model.value().get(0).replacementString());
    }
}
