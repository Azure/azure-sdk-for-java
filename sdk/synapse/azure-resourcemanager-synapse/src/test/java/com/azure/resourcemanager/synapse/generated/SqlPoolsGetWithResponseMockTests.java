// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.synapse.SynapseManager;
import com.azure.resourcemanager.synapse.models.CreateMode;
import com.azure.resourcemanager.synapse.models.SqlPool;
import com.azure.resourcemanager.synapse.models.StorageAccountType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SqlPoolsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"sku\":{\"tier\":\"chl\",\"name\":\"pwctofl\",\"capacity\":2128667253},\"properties\":{\"maxSizeBytes\":8723499745139166146,\"collation\":\"txkbr\",\"sourceDatabaseId\":\"drwjiy\",\"recoverableDatabaseId\":\"hfjsrwqrxetf\",\"provisioningState\":\"wvrrmdqn\",\"status\":\"cnawth\",\"restorePointInTime\":\"2021-06-23T07:16:30Z\",\"createMode\":\"Recovery\",\"creationDate\":\"2021-09-22T14:21:25Z\",\"storageAccountType\":\"LRS\"},\"location\":\"a\",\"tags\":{\"cpqtwloesq\":\"hudfjecehok\",\"uwj\":\"ggvrbnyrukoilaci\",\"pjlh\":\"e\",\"whbgxvellvul\":\"yxpzruzythqk\"},\"id\":\"xdm\",\"name\":\"itmujdtvm\",\"type\":\"lyymffhmjpddny\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SynapseManager manager = SynapseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        SqlPool response = manager.sqlPools()
            .getWithResponse("meboywhczzq", "hmngqb", "dygisrzwnykd", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("a", response.location());
        Assertions.assertEquals("hudfjecehok", response.tags().get("cpqtwloesq"));
        Assertions.assertEquals("chl", response.sku().tier());
        Assertions.assertEquals("pwctofl", response.sku().name());
        Assertions.assertEquals(2128667253, response.sku().capacity());
        Assertions.assertEquals(8723499745139166146L, response.maxSizeBytes());
        Assertions.assertEquals("txkbr", response.collation());
        Assertions.assertEquals("drwjiy", response.sourceDatabaseId());
        Assertions.assertEquals("hfjsrwqrxetf", response.recoverableDatabaseId());
        Assertions.assertEquals("wvrrmdqn", response.provisioningState());
        Assertions.assertEquals("cnawth", response.status());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-23T07:16:30Z"), response.restorePointInTime());
        Assertions.assertEquals(CreateMode.RECOVERY, response.createMode());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-22T14:21:25Z"), response.creationDate());
        Assertions.assertEquals(StorageAccountType.LRS, response.storageAccountType());
    }
}
