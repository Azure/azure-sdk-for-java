// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.synapse.SynapseManager;
import com.azure.resourcemanager.synapse.models.CreateMode;
import com.azure.resourcemanager.synapse.models.SqlPool;
import com.azure.resourcemanager.synapse.models.StorageAccountType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SqlPoolsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"sku\":{\"tier\":\"klvzrl\",\"name\":\"l\",\"capacity\":1219772220},\"properties\":{\"maxSizeBytes\":8845842496565245250,\"collation\":\"zivfqbqnasdsy\",\"sourceDatabaseId\":\"zsieuscplhyvd\",\"recoverableDatabaseId\":\"lyzkxitds\",\"provisioningState\":\"zsvko\",\"status\":\"upjo\",\"restorePointInTime\":\"2021-01-15T17:21:56Z\",\"createMode\":\"PointInTimeRestore\",\"creationDate\":\"2021-06-21T07:21Z\",\"storageAccountType\":\"LRS\",\"sourceDatabaseDeletionDate\":\"2021-10-20T06:12:37Z\"},\"location\":\"zwzlp\",\"tags\":{\"cmbezac\":\"zuykykipfsdyepfn\",\"tgkppgkqzkcyzmff\":\"pztgazwyqejgaaok\",\"goiutgw\":\"gdyfcixrhlcqvhoe\",\"yntacihnco\":\"mkahpqha\"},\"id\":\"mip\",\"name\":\"mliqmvlb\",\"type\":\"i\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SynapseManager manager = SynapseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        SqlPool response = manager.sqlPools()
            .getWithResponse("qwec", "snhpcselqx", "vppqi", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("zwzlp", response.location());
        Assertions.assertEquals("zuykykipfsdyepfn", response.tags().get("cmbezac"));
        Assertions.assertEquals("klvzrl", response.sku().tier());
        Assertions.assertEquals("l", response.sku().name());
        Assertions.assertEquals(1219772220, response.sku().capacity());
        Assertions.assertEquals(8845842496565245250L, response.maxSizeBytes());
        Assertions.assertEquals("zivfqbqnasdsy", response.collation());
        Assertions.assertEquals("zsieuscplhyvd", response.sourceDatabaseId());
        Assertions.assertEquals("lyzkxitds", response.recoverableDatabaseId());
        Assertions.assertEquals("zsvko", response.provisioningState());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-15T17:21:56Z"), response.restorePointInTime());
        Assertions.assertEquals(CreateMode.POINT_IN_TIME_RESTORE, response.createMode());
        Assertions.assertEquals(StorageAccountType.LRS, response.storageAccountType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-20T06:12:37Z"), response.sourceDatabaseDeletionDate());
    }
}
