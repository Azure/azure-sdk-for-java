// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.synapse.fluent.models.IpFirewallRuleInfoInner;
import com.azure.resourcemanager.synapse.models.IpFirewallRuleInfoListResult;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class IpFirewallRuleInfoListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IpFirewallRuleInfoListResult model = BinaryData.fromString(
            "{\"nextLink\":\"ebxetqgtzxdp\",\"value\":[{\"properties\":{\"endIpAddress\":\"wxrjfeallnwsub\",\"provisioningState\":\"Provisioning\",\"startIpAddress\":\"ampmngnz\"},\"id\":\"c\",\"name\":\"aqw\",\"type\":\"ochcbonqvpkvl\"},{\"properties\":{\"endIpAddress\":\"jease\",\"provisioningState\":\"Failed\",\"startIpAddress\":\"oflokey\"},\"id\":\"ienjbdlwtgr\",\"name\":\"pdjpjumasxazjp\",\"type\":\"yegu\"}]}")
            .toObject(IpFirewallRuleInfoListResult.class);
        Assertions.assertEquals("ebxetqgtzxdp", model.nextLink());
        Assertions.assertEquals("wxrjfeallnwsub", model.value().get(0).endIpAddress());
        Assertions.assertEquals("ampmngnz", model.value().get(0).startIpAddress());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IpFirewallRuleInfoListResult model = new IpFirewallRuleInfoListResult().withNextLink("ebxetqgtzxdp")
            .withValue(Arrays.asList(
                new IpFirewallRuleInfoInner().withEndIpAddress("wxrjfeallnwsub").withStartIpAddress("ampmngnz"),
                new IpFirewallRuleInfoInner().withEndIpAddress("jease").withStartIpAddress("oflokey")));
        model = BinaryData.fromObject(model).toObject(IpFirewallRuleInfoListResult.class);
        Assertions.assertEquals("ebxetqgtzxdp", model.nextLink());
        Assertions.assertEquals("wxrjfeallnwsub", model.value().get(0).endIpAddress());
        Assertions.assertEquals("ampmngnz", model.value().get(0).startIpAddress());
    }
}
