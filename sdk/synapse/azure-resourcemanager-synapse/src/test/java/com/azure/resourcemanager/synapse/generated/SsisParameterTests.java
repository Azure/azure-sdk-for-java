// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.synapse.models.SsisParameter;
import org.junit.jupiter.api.Assertions;

public final class SsisParameterTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SsisParameter model = BinaryData.fromString(
            "{\"id\":651265008484411670,\"name\":\"fzuvrzmz\",\"description\":\"zjqr\",\"dataType\":\"pv\",\"required\":false,\"sensitive\":false,\"designDefaultValue\":\"ebojtjppglao\",\"defaultValue\":\"qk\",\"sensitiveDefaultValue\":\"t\",\"valueType\":\"jilaywkdcwmqsyri\",\"valueSet\":false,\"variable\":\"dqaolfylnkk\"}")
            .toObject(SsisParameter.class);
        Assertions.assertEquals(651265008484411670L, model.id());
        Assertions.assertEquals("fzuvrzmz", model.name());
        Assertions.assertEquals("zjqr", model.description());
        Assertions.assertEquals("pv", model.dataType());
        Assertions.assertEquals(false, model.required());
        Assertions.assertEquals(false, model.sensitive());
        Assertions.assertEquals("ebojtjppglao", model.designDefaultValue());
        Assertions.assertEquals("qk", model.defaultValue());
        Assertions.assertEquals("t", model.sensitiveDefaultValue());
        Assertions.assertEquals("jilaywkdcwmqsyri", model.valueType());
        Assertions.assertEquals(false, model.valueSet());
        Assertions.assertEquals("dqaolfylnkk", model.variable());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SsisParameter model = new SsisParameter().withId(651265008484411670L)
            .withName("fzuvrzmz")
            .withDescription("zjqr")
            .withDataType("pv")
            .withRequired(false)
            .withSensitive(false)
            .withDesignDefaultValue("ebojtjppglao")
            .withDefaultValue("qk")
            .withSensitiveDefaultValue("t")
            .withValueType("jilaywkdcwmqsyri")
            .withValueSet(false)
            .withVariable("dqaolfylnkk");
        model = BinaryData.fromObject(model).toObject(SsisParameter.class);
        Assertions.assertEquals(651265008484411670L, model.id());
        Assertions.assertEquals("fzuvrzmz", model.name());
        Assertions.assertEquals("zjqr", model.description());
        Assertions.assertEquals("pv", model.dataType());
        Assertions.assertEquals(false, model.required());
        Assertions.assertEquals(false, model.sensitive());
        Assertions.assertEquals("ebojtjppglao", model.designDefaultValue());
        Assertions.assertEquals("qk", model.defaultValue());
        Assertions.assertEquals("t", model.sensitiveDefaultValue());
        Assertions.assertEquals("jilaywkdcwmqsyri", model.valueType());
        Assertions.assertEquals(false, model.valueSet());
        Assertions.assertEquals("dqaolfylnkk", model.variable());
    }
}
