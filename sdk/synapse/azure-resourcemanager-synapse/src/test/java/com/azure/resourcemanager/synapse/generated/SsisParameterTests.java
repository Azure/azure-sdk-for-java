// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.synapse.models.SsisParameter;
import org.junit.jupiter.api.Assertions;

public final class SsisParameterTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SsisParameter model = BinaryData.fromString(
            "{\"id\":2704241280285106932,\"name\":\"tywikd\",\"description\":\"lakuflgbhgauacd\",\"dataType\":\"mxu\",\"required\":true,\"sensitive\":false,\"designDefaultValue\":\"qg\",\"defaultValue\":\"fnozoeoqbvjh\",\"sensitiveDefaultValue\":\"f\",\"valueType\":\"bmq\",\"valueSet\":true,\"variable\":\"tasfaymxbulpzeal\"}")
            .toObject(SsisParameter.class);
        Assertions.assertEquals(2704241280285106932L, model.id());
        Assertions.assertEquals("tywikd", model.name());
        Assertions.assertEquals("lakuflgbhgauacd", model.description());
        Assertions.assertEquals("mxu", model.dataType());
        Assertions.assertEquals(true, model.required());
        Assertions.assertEquals(false, model.sensitive());
        Assertions.assertEquals("qg", model.designDefaultValue());
        Assertions.assertEquals("fnozoeoqbvjh", model.defaultValue());
        Assertions.assertEquals("f", model.sensitiveDefaultValue());
        Assertions.assertEquals("bmq", model.valueType());
        Assertions.assertEquals(true, model.valueSet());
        Assertions.assertEquals("tasfaymxbulpzeal", model.variable());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SsisParameter model = new SsisParameter().withId(2704241280285106932L)
            .withName("tywikd")
            .withDescription("lakuflgbhgauacd")
            .withDataType("mxu")
            .withRequired(true)
            .withSensitive(false)
            .withDesignDefaultValue("qg")
            .withDefaultValue("fnozoeoqbvjh")
            .withSensitiveDefaultValue("f")
            .withValueType("bmq")
            .withValueSet(true)
            .withVariable("tasfaymxbulpzeal");
        model = BinaryData.fromObject(model).toObject(SsisParameter.class);
        Assertions.assertEquals(2704241280285106932L, model.id());
        Assertions.assertEquals("tywikd", model.name());
        Assertions.assertEquals("lakuflgbhgauacd", model.description());
        Assertions.assertEquals("mxu", model.dataType());
        Assertions.assertEquals(true, model.required());
        Assertions.assertEquals(false, model.sensitive());
        Assertions.assertEquals("qg", model.designDefaultValue());
        Assertions.assertEquals("fnozoeoqbvjh", model.defaultValue());
        Assertions.assertEquals("f", model.sensitiveDefaultValue());
        Assertions.assertEquals("bmq", model.valueType());
        Assertions.assertEquals(true, model.valueSet());
        Assertions.assertEquals("tasfaymxbulpzeal", model.variable());
    }
}
