// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.synapse.fluent.models.WorkloadGroupProperties;
import org.junit.jupiter.api.Assertions;

public final class WorkloadGroupPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadGroupProperties model = BinaryData.fromString(
            "{\"minResourcePercent\":1981390532,\"maxResourcePercent\":29183092,\"minResourcePercentPerRequest\":59.62316253580416,\"maxResourcePercentPerRequest\":73.38620327467183,\"importance\":\"kzebrqbsm\",\"queryExecutionTimeout\":1700673148}")
            .toObject(WorkloadGroupProperties.class);
        Assertions.assertEquals(1981390532, model.minResourcePercent());
        Assertions.assertEquals(29183092, model.maxResourcePercent());
        Assertions.assertEquals(59.62316253580416, model.minResourcePercentPerRequest());
        Assertions.assertEquals(73.38620327467183D, model.maxResourcePercentPerRequest());
        Assertions.assertEquals("kzebrqbsm", model.importance());
        Assertions.assertEquals(1700673148, model.queryExecutionTimeout());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadGroupProperties model = new WorkloadGroupProperties().withMinResourcePercent(1981390532)
            .withMaxResourcePercent(29183092)
            .withMinResourcePercentPerRequest(59.62316253580416)
            .withMaxResourcePercentPerRequest(73.38620327467183D)
            .withImportance("kzebrqbsm")
            .withQueryExecutionTimeout(1700673148);
        model = BinaryData.fromObject(model).toObject(WorkloadGroupProperties.class);
        Assertions.assertEquals(1981390532, model.minResourcePercent());
        Assertions.assertEquals(29183092, model.maxResourcePercent());
        Assertions.assertEquals(59.62316253580416, model.minResourcePercentPerRequest());
        Assertions.assertEquals(73.38620327467183D, model.maxResourcePercentPerRequest());
        Assertions.assertEquals("kzebrqbsm", model.importance());
        Assertions.assertEquals(1700673148, model.queryExecutionTimeout());
    }
}
