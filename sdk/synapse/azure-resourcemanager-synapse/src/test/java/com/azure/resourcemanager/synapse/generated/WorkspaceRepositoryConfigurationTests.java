// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.synapse.models.WorkspaceRepositoryConfiguration;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;

public final class WorkspaceRepositoryConfigurationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkspaceRepositoryConfiguration model = BinaryData.fromString(
            "{\"type\":\"uelyetndn\",\"hostName\":\"qyggagfl\",\"accountName\":\"gm\",\"projectName\":\"wahzjmucftbyr\",\"repositoryName\":\"rohkpigqfusu\",\"collaborationBranch\":\"zmkw\",\"rootFolder\":\"snoxaxmqeqa\",\"lastCommitId\":\"hjnhgwydyynfsvk\",\"tenantId\":\"d45f3a39-beb3-4b78-a8c8-016d4f0e8a7a\"}")
            .toObject(WorkspaceRepositoryConfiguration.class);
        Assertions.assertEquals("uelyetndn", model.type());
        Assertions.assertEquals("qyggagfl", model.hostname());
        Assertions.assertEquals("gm", model.accountName());
        Assertions.assertEquals("wahzjmucftbyr", model.projectName());
        Assertions.assertEquals("rohkpigqfusu", model.repositoryName());
        Assertions.assertEquals("zmkw", model.collaborationBranch());
        Assertions.assertEquals("snoxaxmqeqa", model.rootFolder());
        Assertions.assertEquals("hjnhgwydyynfsvk", model.lastCommitId());
        Assertions.assertEquals(UUID.fromString("d45f3a39-beb3-4b78-a8c8-016d4f0e8a7a"), model.tenantId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkspaceRepositoryConfiguration model = new WorkspaceRepositoryConfiguration().withType("uelyetndn")
            .withHostname("qyggagfl")
            .withAccountName("gm")
            .withProjectName("wahzjmucftbyr")
            .withRepositoryName("rohkpigqfusu")
            .withCollaborationBranch("zmkw")
            .withRootFolder("snoxaxmqeqa")
            .withLastCommitId("hjnhgwydyynfsvk")
            .withTenantId(UUID.fromString("d45f3a39-beb3-4b78-a8c8-016d4f0e8a7a"));
        model = BinaryData.fromObject(model).toObject(WorkspaceRepositoryConfiguration.class);
        Assertions.assertEquals("uelyetndn", model.type());
        Assertions.assertEquals("qyggagfl", model.hostname());
        Assertions.assertEquals("gm", model.accountName());
        Assertions.assertEquals("wahzjmucftbyr", model.projectName());
        Assertions.assertEquals("rohkpigqfusu", model.repositoryName());
        Assertions.assertEquals("zmkw", model.collaborationBranch());
        Assertions.assertEquals("snoxaxmqeqa", model.rootFolder());
        Assertions.assertEquals("hjnhgwydyynfsvk", model.lastCommitId());
        Assertions.assertEquals(UUID.fromString("d45f3a39-beb3-4b78-a8c8-016d4f0e8a7a"), model.tenantId());
    }
}
