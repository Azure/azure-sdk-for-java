// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.synapse.fluent.models.DataMaskingRuleInner;
import com.azure.resourcemanager.synapse.models.DataMaskingFunction;
import com.azure.resourcemanager.synapse.models.DataMaskingRuleState;
import org.junit.jupiter.api.Assertions;

public final class DataMaskingRuleInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DataMaskingRuleInner model = BinaryData.fromString(
            "{\"properties\":{\"id\":\"b\",\"aliasName\":\"pfhvfslk\",\"ruleState\":\"Enabled\",\"schemaName\":\"jlrigjkskyrioovz\",\"tableName\":\"dsxwaab\",\"columnName\":\"mifrygznmma\",\"maskingFunction\":\"Text\",\"numberFrom\":\"zkzobgopxlhslnel\",\"numberTo\":\"eixynllxecwcroj\",\"prefixSize\":\"slhcawjutifd\",\"suffixSize\":\"mvi\",\"replacementString\":\"rqjb\"},\"location\":\"zhraglkafh\",\"kind\":\"qjujeickpzvcp\",\"id\":\"pmxelnwcltyje\",\"name\":\"ex\",\"type\":\"mlfmkqs\"}")
            .toObject(DataMaskingRuleInner.class);
        Assertions.assertEquals("pfhvfslk", model.aliasName());
        Assertions.assertEquals(DataMaskingRuleState.ENABLED, model.ruleState());
        Assertions.assertEquals("jlrigjkskyrioovz", model.schemaName());
        Assertions.assertEquals("dsxwaab", model.tableName());
        Assertions.assertEquals("mifrygznmma", model.columnName());
        Assertions.assertEquals(DataMaskingFunction.TEXT, model.maskingFunction());
        Assertions.assertEquals("zkzobgopxlhslnel", model.numberFrom());
        Assertions.assertEquals("eixynllxecwcroj", model.numberTo());
        Assertions.assertEquals("slhcawjutifd", model.prefixSize());
        Assertions.assertEquals("mvi", model.suffixSize());
        Assertions.assertEquals("rqjb", model.replacementString());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DataMaskingRuleInner model = new DataMaskingRuleInner().withAliasName("pfhvfslk")
            .withRuleState(DataMaskingRuleState.ENABLED)
            .withSchemaName("jlrigjkskyrioovz")
            .withTableName("dsxwaab")
            .withColumnName("mifrygznmma")
            .withMaskingFunction(DataMaskingFunction.TEXT)
            .withNumberFrom("zkzobgopxlhslnel")
            .withNumberTo("eixynllxecwcroj")
            .withPrefixSize("slhcawjutifd")
            .withSuffixSize("mvi")
            .withReplacementString("rqjb");
        model = BinaryData.fromObject(model).toObject(DataMaskingRuleInner.class);
        Assertions.assertEquals("pfhvfslk", model.aliasName());
        Assertions.assertEquals(DataMaskingRuleState.ENABLED, model.ruleState());
        Assertions.assertEquals("jlrigjkskyrioovz", model.schemaName());
        Assertions.assertEquals("dsxwaab", model.tableName());
        Assertions.assertEquals("mifrygznmma", model.columnName());
        Assertions.assertEquals(DataMaskingFunction.TEXT, model.maskingFunction());
        Assertions.assertEquals("zkzobgopxlhslnel", model.numberFrom());
        Assertions.assertEquals("eixynllxecwcroj", model.numberTo());
        Assertions.assertEquals("slhcawjutifd", model.prefixSize());
        Assertions.assertEquals("mvi", model.suffixSize());
        Assertions.assertEquals("rqjb", model.replacementString());
    }
}
