// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.synapse.models.BlobStorageEventType;
import com.azure.resourcemanager.synapse.models.EventGridDataConnection;
import com.azure.resourcemanager.synapse.models.EventGridDataFormat;
import org.junit.jupiter.api.Assertions;

public final class EventGridDataConnectionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        EventGridDataConnection model = BinaryData.fromString(
            "{\"kind\":\"EventGrid\",\"properties\":{\"storageAccountResourceId\":\"jluxxdhi\",\"eventHubResourceId\":\"zzdzzqjmuezayov\",\"consumerGroup\":\"ibqlotokhtvwtaz\",\"tableName\":\"cqwwxwj\",\"mappingRuleName\":\"fgwhnkbtlwljs\",\"dataFormat\":\"AVRO\",\"ignoreFirstRecord\":false,\"blobStorageEventType\":\"Microsoft.Storage.BlobRenamed\",\"provisioningState\":\"Moving\"},\"location\":\"wolgisubxbt\",\"id\":\"gfgf\",\"name\":\"ij\",\"type\":\"ykwlefksxqceazf\"}")
            .toObject(EventGridDataConnection.class);
        Assertions.assertEquals("wolgisubxbt", model.location());
        Assertions.assertEquals("jluxxdhi", model.storageAccountResourceId());
        Assertions.assertEquals("zzdzzqjmuezayov", model.eventHubResourceId());
        Assertions.assertEquals("ibqlotokhtvwtaz", model.consumerGroup());
        Assertions.assertEquals("cqwwxwj", model.tableName());
        Assertions.assertEquals("fgwhnkbtlwljs", model.mappingRuleName());
        Assertions.assertEquals(EventGridDataFormat.AVRO, model.dataFormat());
        Assertions.assertEquals(false, model.ignoreFirstRecord());
        Assertions.assertEquals(BlobStorageEventType.MICROSOFT_STORAGE_BLOB_RENAMED, model.blobStorageEventType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        EventGridDataConnection model = new EventGridDataConnection().withLocation("wolgisubxbt")
            .withStorageAccountResourceId("jluxxdhi")
            .withEventHubResourceId("zzdzzqjmuezayov")
            .withConsumerGroup("ibqlotokhtvwtaz")
            .withTableName("cqwwxwj")
            .withMappingRuleName("fgwhnkbtlwljs")
            .withDataFormat(EventGridDataFormat.AVRO)
            .withIgnoreFirstRecord(false)
            .withBlobStorageEventType(BlobStorageEventType.MICROSOFT_STORAGE_BLOB_RENAMED);
        model = BinaryData.fromObject(model).toObject(EventGridDataConnection.class);
        Assertions.assertEquals("wolgisubxbt", model.location());
        Assertions.assertEquals("jluxxdhi", model.storageAccountResourceId());
        Assertions.assertEquals("zzdzzqjmuezayov", model.eventHubResourceId());
        Assertions.assertEquals("ibqlotokhtvwtaz", model.consumerGroup());
        Assertions.assertEquals("cqwwxwj", model.tableName());
        Assertions.assertEquals("fgwhnkbtlwljs", model.mappingRuleName());
        Assertions.assertEquals(EventGridDataFormat.AVRO, model.dataFormat());
        Assertions.assertEquals(false, model.ignoreFirstRecord());
        Assertions.assertEquals(BlobStorageEventType.MICROSOFT_STORAGE_BLOB_RENAMED, model.blobStorageEventType());
    }
}
