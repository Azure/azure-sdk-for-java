// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.ProxyResource;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.synapse.models.ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentity;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Sql Control Settings for workspace managed identity. */
@JsonFlatten
@Fluent
public class ManagedIdentitySqlControlSettingsModelInner extends ProxyResource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ManagedIdentitySqlControlSettingsModelInner.class);

    /*
     * Grant sql control to managed identity
     */
    @JsonProperty(value = "properties.grantSqlControlToManagedIdentity")
    private ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentity
        grantSqlControlToManagedIdentity;

    /**
     * Get the grantSqlControlToManagedIdentity property: Grant sql control to managed identity.
     *
     * @return the grantSqlControlToManagedIdentity value.
     */
    public ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentity
        grantSqlControlToManagedIdentity() {
        return this.grantSqlControlToManagedIdentity;
    }

    /**
     * Set the grantSqlControlToManagedIdentity property: Grant sql control to managed identity.
     *
     * @param grantSqlControlToManagedIdentity the grantSqlControlToManagedIdentity value to set.
     * @return the ManagedIdentitySqlControlSettingsModelInner object itself.
     */
    public ManagedIdentitySqlControlSettingsModelInner withGrantSqlControlToManagedIdentity(
        ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentity
            grantSqlControlToManagedIdentity) {
        this.grantSqlControlToManagedIdentity = grantSqlControlToManagedIdentity;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (grantSqlControlToManagedIdentity() != null) {
            grantSqlControlToManagedIdentity().validate();
        }
    }
}
