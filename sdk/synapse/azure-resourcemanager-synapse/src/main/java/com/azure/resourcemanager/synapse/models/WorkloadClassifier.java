// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.synapse.fluent.models.WorkloadClassifierInner;

/** An immutable client-side representation of WorkloadClassifier. */
public interface WorkloadClassifier {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the memberName property: The workload classifier member name.
     *
     * @return the memberName value.
     */
    String memberName();

    /**
     * Gets the label property: The workload classifier label.
     *
     * @return the label value.
     */
    String label();

    /**
     * Gets the context property: The workload classifier context.
     *
     * @return the context value.
     */
    String context();

    /**
     * Gets the startTime property: The workload classifier start time for classification.
     *
     * @return the startTime value.
     */
    String startTime();

    /**
     * Gets the endTime property: The workload classifier end time for classification.
     *
     * @return the endTime value.
     */
    String endTime();

    /**
     * Gets the importance property: The workload classifier importance.
     *
     * @return the importance value.
     */
    String importance();

    /**
     * Gets the inner com.azure.resourcemanager.synapse.fluent.models.WorkloadClassifierInner object.
     *
     * @return the inner object.
     */
    WorkloadClassifierInner innerModel();

    /** The entirety of the WorkloadClassifier definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The WorkloadClassifier definition stages. */
    interface DefinitionStages {
        /** The first stage of the WorkloadClassifier definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the WorkloadClassifier definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, workspaceName, sqlPoolName, workloadGroupName.
             *
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param workspaceName The name of the workspace.
             * @param sqlPoolName SQL pool name.
             * @param workloadGroupName The name of the workload group.
             * @return the next definition stage.
             */
            WithCreate withExistingWorkloadGroup(
                String resourceGroupName, String workspaceName, String sqlPoolName, String workloadGroupName);
        }
        /**
         * The stage of the WorkloadClassifier definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithMemberName,
                DefinitionStages.WithLabel,
                DefinitionStages.WithContext,
                DefinitionStages.WithStartTime,
                DefinitionStages.WithEndTime,
                DefinitionStages.WithImportance {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            WorkloadClassifier create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            WorkloadClassifier create(Context context);
        }
        /** The stage of the WorkloadClassifier definition allowing to specify memberName. */
        interface WithMemberName {
            /**
             * Specifies the memberName property: The workload classifier member name..
             *
             * @param memberName The workload classifier member name.
             * @return the next definition stage.
             */
            WithCreate withMemberName(String memberName);
        }
        /** The stage of the WorkloadClassifier definition allowing to specify label. */
        interface WithLabel {
            /**
             * Specifies the label property: The workload classifier label..
             *
             * @param label The workload classifier label.
             * @return the next definition stage.
             */
            WithCreate withLabel(String label);
        }
        /** The stage of the WorkloadClassifier definition allowing to specify context. */
        interface WithContext {
            /**
             * Specifies the context property: The workload classifier context..
             *
             * @param context The workload classifier context.
             * @return the next definition stage.
             */
            WithCreate withContext(String context);
        }
        /** The stage of the WorkloadClassifier definition allowing to specify startTime. */
        interface WithStartTime {
            /**
             * Specifies the startTime property: The workload classifier start time for classification..
             *
             * @param startTime The workload classifier start time for classification.
             * @return the next definition stage.
             */
            WithCreate withStartTime(String startTime);
        }
        /** The stage of the WorkloadClassifier definition allowing to specify endTime. */
        interface WithEndTime {
            /**
             * Specifies the endTime property: The workload classifier end time for classification..
             *
             * @param endTime The workload classifier end time for classification.
             * @return the next definition stage.
             */
            WithCreate withEndTime(String endTime);
        }
        /** The stage of the WorkloadClassifier definition allowing to specify importance. */
        interface WithImportance {
            /**
             * Specifies the importance property: The workload classifier importance..
             *
             * @param importance The workload classifier importance.
             * @return the next definition stage.
             */
            WithCreate withImportance(String importance);
        }
    }
    /**
     * Begins update for the WorkloadClassifier resource.
     *
     * @return the stage of resource update.
     */
    WorkloadClassifier.Update update();

    /** The template for WorkloadClassifier update. */
    interface Update
        extends UpdateStages.WithMemberName,
            UpdateStages.WithLabel,
            UpdateStages.WithContext,
            UpdateStages.WithStartTime,
            UpdateStages.WithEndTime,
            UpdateStages.WithImportance {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        WorkloadClassifier apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        WorkloadClassifier apply(Context context);
    }
    /** The WorkloadClassifier update stages. */
    interface UpdateStages {
        /** The stage of the WorkloadClassifier update allowing to specify memberName. */
        interface WithMemberName {
            /**
             * Specifies the memberName property: The workload classifier member name..
             *
             * @param memberName The workload classifier member name.
             * @return the next definition stage.
             */
            Update withMemberName(String memberName);
        }
        /** The stage of the WorkloadClassifier update allowing to specify label. */
        interface WithLabel {
            /**
             * Specifies the label property: The workload classifier label..
             *
             * @param label The workload classifier label.
             * @return the next definition stage.
             */
            Update withLabel(String label);
        }
        /** The stage of the WorkloadClassifier update allowing to specify context. */
        interface WithContext {
            /**
             * Specifies the context property: The workload classifier context..
             *
             * @param context The workload classifier context.
             * @return the next definition stage.
             */
            Update withContext(String context);
        }
        /** The stage of the WorkloadClassifier update allowing to specify startTime. */
        interface WithStartTime {
            /**
             * Specifies the startTime property: The workload classifier start time for classification..
             *
             * @param startTime The workload classifier start time for classification.
             * @return the next definition stage.
             */
            Update withStartTime(String startTime);
        }
        /** The stage of the WorkloadClassifier update allowing to specify endTime. */
        interface WithEndTime {
            /**
             * Specifies the endTime property: The workload classifier end time for classification..
             *
             * @param endTime The workload classifier end time for classification.
             * @return the next definition stage.
             */
            Update withEndTime(String endTime);
        }
        /** The stage of the WorkloadClassifier update allowing to specify importance. */
        interface WithImportance {
            /**
             * Specifies the importance property: The workload classifier importance..
             *
             * @param importance The workload classifier importance.
             * @return the next definition stage.
             */
            Update withImportance(String importance);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    WorkloadClassifier refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    WorkloadClassifier refresh(Context context);
}
