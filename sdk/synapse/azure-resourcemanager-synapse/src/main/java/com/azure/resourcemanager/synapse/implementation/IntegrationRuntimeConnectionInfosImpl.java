// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.synapse.fluent.IntegrationRuntimeConnectionInfosClient;
import com.azure.resourcemanager.synapse.fluent.models.IntegrationRuntimeConnectionInfoInner;
import com.azure.resourcemanager.synapse.models.IntegrationRuntimeConnectionInfo;
import com.azure.resourcemanager.synapse.models.IntegrationRuntimeConnectionInfos;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class IntegrationRuntimeConnectionInfosImpl implements IntegrationRuntimeConnectionInfos {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(IntegrationRuntimeConnectionInfosImpl.class);

    private final IntegrationRuntimeConnectionInfosClient innerClient;

    private final com.azure.resourcemanager.synapse.SynapseManager serviceManager;

    public IntegrationRuntimeConnectionInfosImpl(
        IntegrationRuntimeConnectionInfosClient innerClient,
        com.azure.resourcemanager.synapse.SynapseManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public IntegrationRuntimeConnectionInfo get(
        String resourceGroupName, String workspaceName, String integrationRuntimeName) {
        IntegrationRuntimeConnectionInfoInner inner =
            this.serviceClient().get(resourceGroupName, workspaceName, integrationRuntimeName);
        if (inner != null) {
            return new IntegrationRuntimeConnectionInfoImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<IntegrationRuntimeConnectionInfo> getWithResponse(
        String resourceGroupName, String workspaceName, String integrationRuntimeName, Context context) {
        Response<IntegrationRuntimeConnectionInfoInner> inner =
            this.serviceClient().getWithResponse(resourceGroupName, workspaceName, integrationRuntimeName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new IntegrationRuntimeConnectionInfoImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    private IntegrationRuntimeConnectionInfosClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.synapse.SynapseManager manager() {
        return this.serviceManager;
    }
}
