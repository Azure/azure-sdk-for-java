// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/**
 * Spark pool Config Properties
 *
 * <p>SparkConfig Properties for a Big Data pool powered by Apache Spark.
 */
@Fluent
public final class SparkConfigProperties {
    /*
     * The last update time of the spark config properties file.
     */
    @JsonProperty(value = "time", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime time;

    /*
     * The spark config properties.
     */
    @JsonProperty(value = "content")
    private String content;

    /*
     * The filename of the spark config properties file.
     */
    @JsonProperty(value = "filename")
    private String filename;

    /*
     * The type of the spark config properties file.
     */
    @JsonProperty(value = "configurationType")
    private ConfigurationType configurationType;

    /** Creates an instance of SparkConfigProperties class. */
    public SparkConfigProperties() {
    }

    /**
     * Get the time property: The last update time of the spark config properties file.
     *
     * @return the time value.
     */
    public OffsetDateTime time() {
        return this.time;
    }

    /**
     * Get the content property: The spark config properties.
     *
     * @return the content value.
     */
    public String content() {
        return this.content;
    }

    /**
     * Set the content property: The spark config properties.
     *
     * @param content the content value to set.
     * @return the SparkConfigProperties object itself.
     */
    public SparkConfigProperties withContent(String content) {
        this.content = content;
        return this;
    }

    /**
     * Get the filename property: The filename of the spark config properties file.
     *
     * @return the filename value.
     */
    public String filename() {
        return this.filename;
    }

    /**
     * Set the filename property: The filename of the spark config properties file.
     *
     * @param filename the filename value to set.
     * @return the SparkConfigProperties object itself.
     */
    public SparkConfigProperties withFilename(String filename) {
        this.filename = filename;
        return this;
    }

    /**
     * Get the configurationType property: The type of the spark config properties file.
     *
     * @return the configurationType value.
     */
    public ConfigurationType configurationType() {
        return this.configurationType;
    }

    /**
     * Set the configurationType property: The type of the spark config properties file.
     *
     * @param configurationType the configurationType value to set.
     * @return the SparkConfigProperties object itself.
     */
    public SparkConfigProperties withConfigurationType(ConfigurationType configurationType) {
        this.configurationType = configurationType;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
