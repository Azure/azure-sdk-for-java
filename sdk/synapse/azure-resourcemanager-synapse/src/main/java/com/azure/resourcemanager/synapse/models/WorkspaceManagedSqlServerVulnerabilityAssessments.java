// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of WorkspaceManagedSqlServerVulnerabilityAssessments. */
public interface WorkspaceManagedSqlServerVulnerabilityAssessments {
    /**
     * Get server's vulnerability assessment.
     *
     * <p>Get workspace managed sql server's vulnerability assessment.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return workspace managed sql server's vulnerability assessment along with {@link Response}.
     */
    Response<ServerVulnerabilityAssessment> getWithResponse(
        String resourceGroupName,
        String workspaceName,
        VulnerabilityAssessmentName vulnerabilityAssessmentName,
        Context context);

    /**
     * Get server's vulnerability assessment.
     *
     * <p>Get workspace managed sql server's vulnerability assessment.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return workspace managed sql server's vulnerability assessment.
     */
    ServerVulnerabilityAssessment get(
        String resourceGroupName, String workspaceName, VulnerabilityAssessmentName vulnerabilityAssessmentName);

    /**
     * Remove server's vulnerability assessment.
     *
     * <p>Remove workspace managed sql server's vulnerability assessment.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteWithResponse(
        String resourceGroupName,
        String workspaceName,
        VulnerabilityAssessmentName vulnerabilityAssessmentName,
        Context context);

    /**
     * Remove server's vulnerability assessment.
     *
     * <p>Remove workspace managed sql server's vulnerability assessment.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(
        String resourceGroupName, String workspaceName, VulnerabilityAssessmentName vulnerabilityAssessmentName);

    /**
     * Lists the vulnerability assessment policies associated with a server.
     *
     * <p>Lists the vulnerability assessment policies associated with a workspace managed sql server.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of the server's vulnerability assessments as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ServerVulnerabilityAssessment> list(String resourceGroupName, String workspaceName);

    /**
     * Lists the vulnerability assessment policies associated with a server.
     *
     * <p>Lists the vulnerability assessment policies associated with a workspace managed sql server.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of the server's vulnerability assessments as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ServerVulnerabilityAssessment> list(String resourceGroupName, String workspaceName, Context context);

    /**
     * Get server's vulnerability assessment.
     *
     * <p>Get workspace managed sql server's vulnerability assessment.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return workspace managed sql server's vulnerability assessment along with {@link Response}.
     */
    ServerVulnerabilityAssessment getById(String id);

    /**
     * Get server's vulnerability assessment.
     *
     * <p>Get workspace managed sql server's vulnerability assessment.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return workspace managed sql server's vulnerability assessment along with {@link Response}.
     */
    Response<ServerVulnerabilityAssessment> getByIdWithResponse(String id, Context context);

    /**
     * Remove server's vulnerability assessment.
     *
     * <p>Remove workspace managed sql server's vulnerability assessment.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Remove server's vulnerability assessment.
     *
     * <p>Remove workspace managed sql server's vulnerability assessment.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new ServerVulnerabilityAssessment resource.
     *
     * @param name resource name.
     * @return the first stage of the new ServerVulnerabilityAssessment definition.
     */
    ServerVulnerabilityAssessment.DefinitionStages.Blank define(VulnerabilityAssessmentName name);
}
