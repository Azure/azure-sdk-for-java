// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Dedicated Sql Minimal Tls Settings Info. */
@Fluent
public final class DedicatedSQLminimalTlsSettingsInner extends ProxyResource {
    /*
     * Resource location.
     */
    @JsonProperty(value = "location", access = JsonProperty.Access.WRITE_ONLY)
    private String location;

    /*
     * Resource properties.
     */
    @JsonProperty(value = "properties")
    private DedicatedSQLminimalTlsSettingsProperties innerProperties;

    /** Creates an instance of DedicatedSQLminimalTlsSettingsInner class. */
    public DedicatedSQLminimalTlsSettingsInner() {
    }

    /**
     * Get the location property: Resource location.
     *
     * @return the location value.
     */
    public String location() {
        return this.location;
    }

    /**
     * Get the innerProperties property: Resource properties.
     *
     * @return the innerProperties value.
     */
    private DedicatedSQLminimalTlsSettingsProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the minimalTlsVersion property: The minimal tls version of the sql server.
     *
     * @return the minimalTlsVersion value.
     */
    public String minimalTlsVersion() {
        return this.innerProperties() == null ? null : this.innerProperties().minimalTlsVersion();
    }

    /**
     * Set the minimalTlsVersion property: The minimal tls version of the sql server.
     *
     * @param minimalTlsVersion the minimalTlsVersion value to set.
     * @return the DedicatedSQLminimalTlsSettingsInner object itself.
     */
    public DedicatedSQLminimalTlsSettingsInner withMinimalTlsVersion(String minimalTlsVersion) {
        if (this.innerProperties() == null) {
            this.innerProperties = new DedicatedSQLminimalTlsSettingsProperties();
        }
        this.innerProperties().withMinimalTlsVersion(minimalTlsVersion);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
