// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.implementation;

import com.azure.resourcemanager.synapse.fluent.models.SqlPoolConnectionPolicyInner;
import com.azure.resourcemanager.synapse.models.SqlPoolConnectionPolicy;

public final class SqlPoolConnectionPolicyImpl implements SqlPoolConnectionPolicy {
    private SqlPoolConnectionPolicyInner innerObject;

    private final com.azure.resourcemanager.synapse.SynapseManager serviceManager;

    SqlPoolConnectionPolicyImpl(
        SqlPoolConnectionPolicyInner innerObject, com.azure.resourcemanager.synapse.SynapseManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String kind() {
        return this.innerModel().kind();
    }

    public String location() {
        return this.innerModel().location();
    }

    public String securityEnabledAccess() {
        return this.innerModel().securityEnabledAccess();
    }

    public String proxyDnsName() {
        return this.innerModel().proxyDnsName();
    }

    public String proxyPort() {
        return this.innerModel().proxyPort();
    }

    public String visibility() {
        return this.innerModel().visibility();
    }

    public String useServerDefault() {
        return this.innerModel().useServerDefault();
    }

    public String redirectionState() {
        return this.innerModel().redirectionState();
    }

    public String state() {
        return this.innerModel().state();
    }

    public SqlPoolConnectionPolicyInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.synapse.SynapseManager manager() {
        return this.serviceManager;
    }
}
