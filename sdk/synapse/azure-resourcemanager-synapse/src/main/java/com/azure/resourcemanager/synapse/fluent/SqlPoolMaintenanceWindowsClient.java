// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.synapse.fluent.models.MaintenanceWindowsInner;

/** An instance of this class provides access to all the operations defined in SqlPoolMaintenanceWindowsClient. */
public interface SqlPoolMaintenanceWindowsClient {
    /**
     * Get a SQL pool's Maintenance Windows.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name.
     * @param maintenanceWindowName Maintenance window name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a SQL pool's Maintenance Windows.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    MaintenanceWindowsInner get(
        String resourceGroupName, String workspaceName, String sqlPoolName, String maintenanceWindowName);

    /**
     * Get a SQL pool's Maintenance Windows.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name.
     * @param maintenanceWindowName Maintenance window name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a SQL pool's Maintenance Windows.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<MaintenanceWindowsInner> getWithResponse(
        String resourceGroupName,
        String workspaceName,
        String sqlPoolName,
        String maintenanceWindowName,
        Context context);

    /**
     * Creates or updates a Sql pool's maintenance windows settings.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name.
     * @param maintenanceWindowName Maintenance window name.
     * @param parameters The required parameters for creating or updating Maintenance Windows settings.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void createOrUpdate(
        String resourceGroupName,
        String workspaceName,
        String sqlPoolName,
        String maintenanceWindowName,
        MaintenanceWindowsInner parameters);

    /**
     * Creates or updates a Sql pool's maintenance windows settings.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name.
     * @param maintenanceWindowName Maintenance window name.
     * @param parameters The required parameters for creating or updating Maintenance Windows settings.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> createOrUpdateWithResponse(
        String resourceGroupName,
        String workspaceName,
        String sqlPoolName,
        String maintenanceWindowName,
        MaintenanceWindowsInner parameters,
        Context context);
}
