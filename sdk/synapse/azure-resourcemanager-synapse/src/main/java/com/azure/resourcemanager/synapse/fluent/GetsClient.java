// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.synapse.fluent.models.IntegrationRuntimeEnableinteractivequeryInner;
import com.azure.resourcemanager.synapse.fluent.models.IntegrationRuntimeOperationStatusInner;
import com.azure.resourcemanager.synapse.fluent.models.IntegrationRuntimeStopOperationStatusInner;

/** An instance of this class provides access to all the operations defined in GetsClient. */
public interface GetsClient {
    /**
     * Get integration runtime start operation status
     *
     * <p>Get an integration runtime start operation status.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param integrationRuntimeName Integration runtime name.
     * @param integrationRuntimeOperationId Integration runtime Operation Id.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an integration runtime start operation status along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<IntegrationRuntimeOperationStatusInner> integrationRuntimeStartWithResponse(
        String resourceGroupName,
        String workspaceName,
        String integrationRuntimeName,
        String integrationRuntimeOperationId,
        Context context);

    /**
     * Get integration runtime start operation status
     *
     * <p>Get an integration runtime start operation status.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param integrationRuntimeName Integration runtime name.
     * @param integrationRuntimeOperationId Integration runtime Operation Id.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an integration runtime start operation status.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    IntegrationRuntimeOperationStatusInner integrationRuntimeStart(
        String resourceGroupName,
        String workspaceName,
        String integrationRuntimeName,
        String integrationRuntimeOperationId);

    /**
     * Get integration runtime stop operation status
     *
     * <p>Get an integration runtime stop operation status.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param integrationRuntimeName Integration runtime name.
     * @param integrationRuntimeOperationId Integration runtime Operation Id.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an integration runtime stop operation status along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<IntegrationRuntimeStopOperationStatusInner> integrationRuntimeStopWithResponse(
        String resourceGroupName,
        String workspaceName,
        String integrationRuntimeName,
        String integrationRuntimeOperationId,
        Context context);

    /**
     * Get integration runtime stop operation status
     *
     * <p>Get an integration runtime stop operation status.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param integrationRuntimeName Integration runtime name.
     * @param integrationRuntimeOperationId Integration runtime Operation Id.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an integration runtime stop operation status.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    IntegrationRuntimeStopOperationStatusInner integrationRuntimeStop(
        String resourceGroupName,
        String workspaceName,
        String integrationRuntimeName,
        String integrationRuntimeOperationId);

    /**
     * Get integration runtime enable interactivequery operation status
     *
     * <p>Get an integration runtime enable interactivequery operation status.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param integrationRuntimeName Integration runtime name.
     * @param integrationRuntimeOperationId Integration runtime Operation Id.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an integration runtime enable interactivequery operation status along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<IntegrationRuntimeEnableinteractivequeryInner> integrationRuntimeEnableInteractivequeryWithResponse(
        String resourceGroupName,
        String workspaceName,
        String integrationRuntimeName,
        String integrationRuntimeOperationId,
        Context context);

    /**
     * Get integration runtime enable interactivequery operation status
     *
     * <p>Get an integration runtime enable interactivequery operation status.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param integrationRuntimeName Integration runtime name.
     * @param integrationRuntimeOperationId Integration runtime Operation Id.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an integration runtime enable interactivequery operation status.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    IntegrationRuntimeEnableinteractivequeryInner integrationRuntimeEnableInteractivequery(
        String resourceGroupName,
        String workspaceName,
        String integrationRuntimeName,
        String integrationRuntimeOperationId);
}
