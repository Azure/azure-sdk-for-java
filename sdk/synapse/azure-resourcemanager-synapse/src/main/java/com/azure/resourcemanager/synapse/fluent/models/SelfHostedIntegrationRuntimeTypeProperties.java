// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.synapse.models.LinkedIntegrationRuntimeType;
import java.io.IOException;

/**
 * The self-hosted integration runtime properties.
 */
@Fluent
public final class SelfHostedIntegrationRuntimeTypeProperties
    implements JsonSerializable<SelfHostedIntegrationRuntimeTypeProperties> {
    /*
     * Linked integration runtime type from data factory
     */
    private LinkedIntegrationRuntimeType linkedInfo;

    /**
     * Creates an instance of SelfHostedIntegrationRuntimeTypeProperties class.
     */
    public SelfHostedIntegrationRuntimeTypeProperties() {
    }

    /**
     * Get the linkedInfo property: Linked integration runtime type from data factory.
     * 
     * @return the linkedInfo value.
     */
    public LinkedIntegrationRuntimeType linkedInfo() {
        return this.linkedInfo;
    }

    /**
     * Set the linkedInfo property: Linked integration runtime type from data factory.
     * 
     * @param linkedInfo the linkedInfo value to set.
     * @return the SelfHostedIntegrationRuntimeTypeProperties object itself.
     */
    public SelfHostedIntegrationRuntimeTypeProperties withLinkedInfo(LinkedIntegrationRuntimeType linkedInfo) {
        this.linkedInfo = linkedInfo;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (linkedInfo() != null) {
            linkedInfo().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("linkedInfo", this.linkedInfo);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SelfHostedIntegrationRuntimeTypeProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SelfHostedIntegrationRuntimeTypeProperties if the JsonReader was pointing to an instance
     * of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SelfHostedIntegrationRuntimeTypeProperties.
     */
    public static SelfHostedIntegrationRuntimeTypeProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SelfHostedIntegrationRuntimeTypeProperties deserializedSelfHostedIntegrationRuntimeTypeProperties
                = new SelfHostedIntegrationRuntimeTypeProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("linkedInfo".equals(fieldName)) {
                    deserializedSelfHostedIntegrationRuntimeTypeProperties.linkedInfo
                        = LinkedIntegrationRuntimeType.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSelfHostedIntegrationRuntimeTypeProperties;
        });
    }
}
