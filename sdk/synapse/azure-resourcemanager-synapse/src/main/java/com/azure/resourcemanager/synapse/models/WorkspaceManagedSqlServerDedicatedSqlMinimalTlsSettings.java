// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.synapse.fluent.models.DedicatedSQLminimalTlsSettingsInner;

/** Resource collection API of WorkspaceManagedSqlServerDedicatedSqlMinimalTlsSettings. */
public interface WorkspaceManagedSqlServerDedicatedSqlMinimalTlsSettings {
    /**
     * Update server's tls settings.
     *
     * <p>Update workspace managed sql server's minimal tls settings.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param dedicatedSQLminimalTlsSettingsName The name of the dedicated sql minimal tls settings.
     * @param parameters minimal tls settings.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return dedicated Sql Minimal Tls Settings Info.
     */
    DedicatedSQLminimalTlsSettings update(
        String resourceGroupName,
        String workspaceName,
        DedicatedSqlMinimalTlsSettingsName dedicatedSQLminimalTlsSettingsName,
        DedicatedSQLminimalTlsSettingsInner parameters);

    /**
     * Update server's tls settings.
     *
     * <p>Update workspace managed sql server's minimal tls settings.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param dedicatedSQLminimalTlsSettingsName The name of the dedicated sql minimal tls settings.
     * @param parameters minimal tls settings.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return dedicated Sql Minimal Tls Settings Info.
     */
    DedicatedSQLminimalTlsSettings update(
        String resourceGroupName,
        String workspaceName,
        DedicatedSqlMinimalTlsSettingsName dedicatedSQLminimalTlsSettingsName,
        DedicatedSQLminimalTlsSettingsInner parameters,
        Context context);

    /**
     * Get server's minimal tls settings.
     *
     * <p>Get workspace managed sql server's minimal tls settings.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param dedicatedSQLminimalTlsSettingsName The name of the dedicated sql minimal tls settings.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return workspace managed sql server's minimal tls settings along with {@link Response}.
     */
    Response<DedicatedSQLminimalTlsSettings> getWithResponse(
        String resourceGroupName, String workspaceName, String dedicatedSQLminimalTlsSettingsName, Context context);

    /**
     * Get server's minimal tls settings.
     *
     * <p>Get workspace managed sql server's minimal tls settings.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param dedicatedSQLminimalTlsSettingsName The name of the dedicated sql minimal tls settings.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return workspace managed sql server's minimal tls settings.
     */
    DedicatedSQLminimalTlsSettings get(
        String resourceGroupName, String workspaceName, String dedicatedSQLminimalTlsSettingsName);

    /**
     * List workspace server's minimal tls settings.
     *
     * <p>List workspace managed sql server's minimal tls settings.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of the server's dedicated sql minimal tls settings as paginated response with {@link
     *     PagedIterable}.
     */
    PagedIterable<DedicatedSQLminimalTlsSettings> list(String resourceGroupName, String workspaceName);

    /**
     * List workspace server's minimal tls settings.
     *
     * <p>List workspace managed sql server's minimal tls settings.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of the server's dedicated sql minimal tls settings as paginated response with {@link
     *     PagedIterable}.
     */
    PagedIterable<DedicatedSQLminimalTlsSettings> list(String resourceGroupName, String workspaceName, Context context);
}
