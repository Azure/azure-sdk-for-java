// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Grant sql control to managed identity.
 */
@Fluent
public final class ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentity
    implements JsonSerializable<ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentity> {
    /*
     * Desired state
     */
    private DesiredState desiredState;

    /*
     * Actual state
     */
    private ActualState actualState;

    /**
     * Creates an instance of ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentity class.
     */
    public ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentity() {
    }

    /**
     * Get the desiredState property: Desired state.
     * 
     * @return the desiredState value.
     */
    public DesiredState desiredState() {
        return this.desiredState;
    }

    /**
     * Set the desiredState property: Desired state.
     * 
     * @param desiredState the desiredState value to set.
     * @return the ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentity object itself.
     */
    public ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentity
        withDesiredState(DesiredState desiredState) {
        this.desiredState = desiredState;
        return this;
    }

    /**
     * Get the actualState property: Actual state.
     * 
     * @return the actualState value.
     */
    public ActualState actualState() {
        return this.actualState;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("desiredState", this.desiredState == null ? null : this.desiredState.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentity from the
     * JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentity if the
     * JsonReader was pointing to an instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the
     * ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentity.
     */
    public static ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentity
        fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentity deserializedManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentity
                = new ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentity();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("desiredState".equals(fieldName)) {
                    deserializedManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentity.desiredState
                        = DesiredState.fromString(reader.getString());
                } else if ("actualState".equals(fieldName)) {
                    deserializedManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentity.actualState
                        = ActualState.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentity;
        });
    }
}
