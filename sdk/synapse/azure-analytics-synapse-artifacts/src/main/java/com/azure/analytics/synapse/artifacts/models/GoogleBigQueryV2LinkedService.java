// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.analytics.synapse.artifacts.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;
import java.util.Map;

/** Google BigQuery service linked service. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type")
@JsonTypeName("GoogleBigQueryV2")
@JsonFlatten
@Fluent
public class GoogleBigQueryV2LinkedService extends LinkedService {
    /*
     * The default BigQuery project id to query against.
     */
    @JsonProperty(value = "typeProperties.projectId", required = true)
    private Object projectId;

    /*
     * The OAuth 2.0 authentication mechanism used for authentication.
     */
    @JsonProperty(value = "typeProperties.authenticationType", required = true)
    private GoogleBigQueryV2AuthenticationType authenticationType;

    /*
     * The client id of the google application used to acquire the refresh token. Type: string (or Expression with
     * resultType string).
     */
    @JsonProperty(value = "typeProperties.clientId")
    private Object clientId;

    /*
     * The client secret of the google application used to acquire the refresh token.
     */
    @JsonProperty(value = "typeProperties.clientSecret")
    private SecretBase clientSecret;

    /*
     * The refresh token obtained from Google for authorizing access to BigQuery for UserAuthentication.
     */
    @JsonProperty(value = "typeProperties.refreshToken")
    private SecretBase refreshToken;

    /*
     * The content of the .json key file that is used to authenticate the service account.
     */
    @JsonProperty(value = "typeProperties.keyFileContent")
    private SecretBase keyFileContent;

    /*
     * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime
     * credential manager. Type: string (or Expression with resultType string).
     */
    @JsonProperty(value = "typeProperties.encryptedCredential")
    private String encryptedCredential;

    /** Creates an instance of GoogleBigQueryV2LinkedService class. */
    public GoogleBigQueryV2LinkedService() {}

    /**
     * Get the projectId property: The default BigQuery project id to query against.
     *
     * @return the projectId value.
     */
    public Object getProjectId() {
        return this.projectId;
    }

    /**
     * Set the projectId property: The default BigQuery project id to query against.
     *
     * @param projectId the projectId value to set.
     * @return the GoogleBigQueryV2LinkedService object itself.
     */
    public GoogleBigQueryV2LinkedService setProjectId(Object projectId) {
        this.projectId = projectId;
        return this;
    }

    /**
     * Get the authenticationType property: The OAuth 2.0 authentication mechanism used for authentication.
     *
     * @return the authenticationType value.
     */
    public GoogleBigQueryV2AuthenticationType getAuthenticationType() {
        return this.authenticationType;
    }

    /**
     * Set the authenticationType property: The OAuth 2.0 authentication mechanism used for authentication.
     *
     * @param authenticationType the authenticationType value to set.
     * @return the GoogleBigQueryV2LinkedService object itself.
     */
    public GoogleBigQueryV2LinkedService setAuthenticationType(GoogleBigQueryV2AuthenticationType authenticationType) {
        this.authenticationType = authenticationType;
        return this;
    }

    /**
     * Get the clientId property: The client id of the google application used to acquire the refresh token. Type:
     * string (or Expression with resultType string).
     *
     * @return the clientId value.
     */
    public Object getClientId() {
        return this.clientId;
    }

    /**
     * Set the clientId property: The client id of the google application used to acquire the refresh token. Type:
     * string (or Expression with resultType string).
     *
     * @param clientId the clientId value to set.
     * @return the GoogleBigQueryV2LinkedService object itself.
     */
    public GoogleBigQueryV2LinkedService setClientId(Object clientId) {
        this.clientId = clientId;
        return this;
    }

    /**
     * Get the clientSecret property: The client secret of the google application used to acquire the refresh token.
     *
     * @return the clientSecret value.
     */
    public SecretBase getClientSecret() {
        return this.clientSecret;
    }

    /**
     * Set the clientSecret property: The client secret of the google application used to acquire the refresh token.
     *
     * @param clientSecret the clientSecret value to set.
     * @return the GoogleBigQueryV2LinkedService object itself.
     */
    public GoogleBigQueryV2LinkedService setClientSecret(SecretBase clientSecret) {
        this.clientSecret = clientSecret;
        return this;
    }

    /**
     * Get the refreshToken property: The refresh token obtained from Google for authorizing access to BigQuery for
     * UserAuthentication.
     *
     * @return the refreshToken value.
     */
    public SecretBase getRefreshToken() {
        return this.refreshToken;
    }

    /**
     * Set the refreshToken property: The refresh token obtained from Google for authorizing access to BigQuery for
     * UserAuthentication.
     *
     * @param refreshToken the refreshToken value to set.
     * @return the GoogleBigQueryV2LinkedService object itself.
     */
    public GoogleBigQueryV2LinkedService setRefreshToken(SecretBase refreshToken) {
        this.refreshToken = refreshToken;
        return this;
    }

    /**
     * Get the keyFileContent property: The content of the .json key file that is used to authenticate the service
     * account.
     *
     * @return the keyFileContent value.
     */
    public SecretBase getKeyFileContent() {
        return this.keyFileContent;
    }

    /**
     * Set the keyFileContent property: The content of the .json key file that is used to authenticate the service
     * account.
     *
     * @param keyFileContent the keyFileContent value to set.
     * @return the GoogleBigQueryV2LinkedService object itself.
     */
    public GoogleBigQueryV2LinkedService setKeyFileContent(SecretBase keyFileContent) {
        this.keyFileContent = keyFileContent;
        return this;
    }

    /**
     * Get the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted
     * using the integration runtime credential manager. Type: string (or Expression with resultType string).
     *
     * @return the encryptedCredential value.
     */
    public String getEncryptedCredential() {
        return this.encryptedCredential;
    }

    /**
     * Set the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted
     * using the integration runtime credential manager. Type: string (or Expression with resultType string).
     *
     * @param encryptedCredential the encryptedCredential value to set.
     * @return the GoogleBigQueryV2LinkedService object itself.
     */
    public GoogleBigQueryV2LinkedService setEncryptedCredential(String encryptedCredential) {
        this.encryptedCredential = encryptedCredential;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public GoogleBigQueryV2LinkedService setConnectVia(IntegrationRuntimeReference connectVia) {
        super.setConnectVia(connectVia);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public GoogleBigQueryV2LinkedService setDescription(String description) {
        super.setDescription(description);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public GoogleBigQueryV2LinkedService setParameters(Map<String, ParameterSpecification> parameters) {
        super.setParameters(parameters);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public GoogleBigQueryV2LinkedService setAnnotations(List<Object> annotations) {
        super.setAnnotations(annotations);
        return this;
    }
}
