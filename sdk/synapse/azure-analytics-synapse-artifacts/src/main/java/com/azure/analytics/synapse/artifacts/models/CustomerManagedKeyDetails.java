// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.analytics.synapse.artifacts.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Details of the customer managed key associated with the workspace.
 */
@Fluent
public final class CustomerManagedKeyDetails implements JsonSerializable<CustomerManagedKeyDetails> {
    /*
     * The customer managed key status on the workspace
     */
    private String status;

    /*
     * The key object of the workspace
     */
    private WorkspaceKeyDetails key;

    /**
     * Creates an instance of CustomerManagedKeyDetails class.
     */
    public CustomerManagedKeyDetails() {
    }

    /**
     * Get the status property: The customer managed key status on the workspace.
     * 
     * @return the status value.
     */
    public String getStatus() {
        return this.status;
    }

    /**
     * Get the key property: The key object of the workspace.
     * 
     * @return the key value.
     */
    public WorkspaceKeyDetails getKey() {
        return this.key;
    }

    /**
     * Set the key property: The key object of the workspace.
     * 
     * @param key the key value to set.
     * @return the CustomerManagedKeyDetails object itself.
     */
    public CustomerManagedKeyDetails setKey(WorkspaceKeyDetails key) {
        this.key = key;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("key", this.key);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CustomerManagedKeyDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CustomerManagedKeyDetails if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the CustomerManagedKeyDetails.
     */
    public static CustomerManagedKeyDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CustomerManagedKeyDetails deserializedCustomerManagedKeyDetails = new CustomerManagedKeyDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("status".equals(fieldName)) {
                    deserializedCustomerManagedKeyDetails.status = reader.getString();
                } else if ("key".equals(fieldName)) {
                    deserializedCustomerManagedKeyDetails.key = WorkspaceKeyDetails.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCustomerManagedKeyDetails;
        });
    }
}
