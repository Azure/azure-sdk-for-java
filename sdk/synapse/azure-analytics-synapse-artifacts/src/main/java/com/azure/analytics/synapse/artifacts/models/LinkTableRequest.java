// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.analytics.synapse.artifacts.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The LinkTableRequest model.
 */
@Fluent
public final class LinkTableRequest implements JsonSerializable<LinkTableRequest> {
    /*
     * Link table id
     */
    private String id;

    /*
     * Source table properties for link table request
     */
    private LinkTableRequestSource source;

    /*
     * Target table properties for link table request
     */
    private LinkTableRequestTarget target;

    /*
     * Link table operation type
     */
    private String operationType;

    /**
     * Creates an instance of LinkTableRequest class.
     */
    public LinkTableRequest() {
    }

    /**
     * Get the id property: Link table id.
     * 
     * @return the id value.
     */
    public String getId() {
        return this.id;
    }

    /**
     * Set the id property: Link table id.
     * 
     * @param id the id value to set.
     * @return the LinkTableRequest object itself.
     */
    public LinkTableRequest setId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the source property: Source table properties for link table request.
     * 
     * @return the source value.
     */
    public LinkTableRequestSource getSource() {
        return this.source;
    }

    /**
     * Set the source property: Source table properties for link table request.
     * 
     * @param source the source value to set.
     * @return the LinkTableRequest object itself.
     */
    public LinkTableRequest setSource(LinkTableRequestSource source) {
        this.source = source;
        return this;
    }

    /**
     * Get the target property: Target table properties for link table request.
     * 
     * @return the target value.
     */
    public LinkTableRequestTarget getTarget() {
        return this.target;
    }

    /**
     * Set the target property: Target table properties for link table request.
     * 
     * @param target the target value to set.
     * @return the LinkTableRequest object itself.
     */
    public LinkTableRequest setTarget(LinkTableRequestTarget target) {
        this.target = target;
        return this;
    }

    /**
     * Get the operationType property: Link table operation type.
     * 
     * @return the operationType value.
     */
    public String getOperationType() {
        return this.operationType;
    }

    /**
     * Set the operationType property: Link table operation type.
     * 
     * @param operationType the operationType value to set.
     * @return the LinkTableRequest object itself.
     */
    public LinkTableRequest setOperationType(String operationType) {
        this.operationType = operationType;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("id", this.id);
        jsonWriter.writeJsonField("source", this.source);
        jsonWriter.writeJsonField("target", this.target);
        jsonWriter.writeStringField("operationType", this.operationType);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of LinkTableRequest from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of LinkTableRequest if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the LinkTableRequest.
     */
    public static LinkTableRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            LinkTableRequest deserializedLinkTableRequest = new LinkTableRequest();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedLinkTableRequest.id = reader.getString();
                } else if ("source".equals(fieldName)) {
                    deserializedLinkTableRequest.source = LinkTableRequestSource.fromJson(reader);
                } else if ("target".equals(fieldName)) {
                    deserializedLinkTableRequest.target = LinkTableRequestTarget.fromJson(reader);
                } else if ("operationType".equals(fieldName)) {
                    deserializedLinkTableRequest.operationType = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedLinkTableRequest;
        });
    }
}
