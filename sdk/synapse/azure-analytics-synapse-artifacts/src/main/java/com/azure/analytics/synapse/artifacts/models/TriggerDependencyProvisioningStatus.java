// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.analytics.synapse.artifacts.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Defines the response of a provision trigger dependency operation.
 */
@Fluent
public final class TriggerDependencyProvisioningStatus
    implements JsonSerializable<TriggerDependencyProvisioningStatus> {
    /*
     * Trigger name.
     */
    private String triggerName;

    /*
     * Provisioning status.
     */
    private String provisioningStatus;

    /**
     * Creates an instance of TriggerDependencyProvisioningStatus class.
     */
    public TriggerDependencyProvisioningStatus() {
    }

    /**
     * Get the triggerName property: Trigger name.
     * 
     * @return the triggerName value.
     */
    public String getTriggerName() {
        return this.triggerName;
    }

    /**
     * Set the triggerName property: Trigger name.
     * 
     * @param triggerName the triggerName value to set.
     * @return the TriggerDependencyProvisioningStatus object itself.
     */
    public TriggerDependencyProvisioningStatus setTriggerName(String triggerName) {
        this.triggerName = triggerName;
        return this;
    }

    /**
     * Get the provisioningStatus property: Provisioning status.
     * 
     * @return the provisioningStatus value.
     */
    public String getProvisioningStatus() {
        return this.provisioningStatus;
    }

    /**
     * Set the provisioningStatus property: Provisioning status.
     * 
     * @param provisioningStatus the provisioningStatus value to set.
     * @return the TriggerDependencyProvisioningStatus object itself.
     */
    public TriggerDependencyProvisioningStatus setProvisioningStatus(String provisioningStatus) {
        this.provisioningStatus = provisioningStatus;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("triggerName", this.triggerName);
        jsonWriter.writeStringField("provisioningStatus", this.provisioningStatus);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of TriggerDependencyProvisioningStatus from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of TriggerDependencyProvisioningStatus if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the TriggerDependencyProvisioningStatus.
     */
    public static TriggerDependencyProvisioningStatus fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            TriggerDependencyProvisioningStatus deserializedTriggerDependencyProvisioningStatus
                = new TriggerDependencyProvisioningStatus();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("triggerName".equals(fieldName)) {
                    deserializedTriggerDependencyProvisioningStatus.triggerName = reader.getString();
                } else if ("provisioningStatus".equals(fieldName)) {
                    deserializedTriggerDependencyProvisioningStatus.provisioningStatus = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedTriggerDependencyProvisioningStatus;
        });
    }
}
