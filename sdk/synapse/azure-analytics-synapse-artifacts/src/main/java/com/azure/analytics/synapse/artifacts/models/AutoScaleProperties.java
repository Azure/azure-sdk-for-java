// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.analytics.synapse.artifacts.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Spark pool auto-scaling properties
 * 
 * Auto-scaling properties of a Big Data pool powered by Apache Spark.
 */
@Fluent
public final class AutoScaleProperties implements JsonSerializable<AutoScaleProperties> {
    /*
     * The minimum number of nodes the Big Data pool can support.
     */
    private Integer minNodeCount;

    /*
     * Whether automatic scaling is enabled for the Big Data pool.
     */
    private Boolean enabled;

    /*
     * The maximum number of nodes the Big Data pool can support.
     */
    private Integer maxNodeCount;

    /**
     * Creates an instance of AutoScaleProperties class.
     */
    public AutoScaleProperties() {
    }

    /**
     * Get the minNodeCount property: The minimum number of nodes the Big Data pool can support.
     * 
     * @return the minNodeCount value.
     */
    public Integer getMinNodeCount() {
        return this.minNodeCount;
    }

    /**
     * Set the minNodeCount property: The minimum number of nodes the Big Data pool can support.
     * 
     * @param minNodeCount the minNodeCount value to set.
     * @return the AutoScaleProperties object itself.
     */
    public AutoScaleProperties setMinNodeCount(Integer minNodeCount) {
        this.minNodeCount = minNodeCount;
        return this;
    }

    /**
     * Get the enabled property: Whether automatic scaling is enabled for the Big Data pool.
     * 
     * @return the enabled value.
     */
    public Boolean isEnabled() {
        return this.enabled;
    }

    /**
     * Set the enabled property: Whether automatic scaling is enabled for the Big Data pool.
     * 
     * @param enabled the enabled value to set.
     * @return the AutoScaleProperties object itself.
     */
    public AutoScaleProperties setEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }

    /**
     * Get the maxNodeCount property: The maximum number of nodes the Big Data pool can support.
     * 
     * @return the maxNodeCount value.
     */
    public Integer getMaxNodeCount() {
        return this.maxNodeCount;
    }

    /**
     * Set the maxNodeCount property: The maximum number of nodes the Big Data pool can support.
     * 
     * @param maxNodeCount the maxNodeCount value to set.
     * @return the AutoScaleProperties object itself.
     */
    public AutoScaleProperties setMaxNodeCount(Integer maxNodeCount) {
        this.maxNodeCount = maxNodeCount;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("minNodeCount", this.minNodeCount);
        jsonWriter.writeBooleanField("enabled", this.enabled);
        jsonWriter.writeNumberField("maxNodeCount", this.maxNodeCount);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AutoScaleProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AutoScaleProperties if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the AutoScaleProperties.
     */
    public static AutoScaleProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AutoScaleProperties deserializedAutoScaleProperties = new AutoScaleProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("minNodeCount".equals(fieldName)) {
                    deserializedAutoScaleProperties.minNodeCount = reader.getNullable(JsonReader::getInt);
                } else if ("enabled".equals(fieldName)) {
                    deserializedAutoScaleProperties.enabled = reader.getNullable(JsonReader::getBoolean);
                } else if ("maxNodeCount".equals(fieldName)) {
                    deserializedAutoScaleProperties.maxNodeCount = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAutoScaleProperties;
        });
    }
}
