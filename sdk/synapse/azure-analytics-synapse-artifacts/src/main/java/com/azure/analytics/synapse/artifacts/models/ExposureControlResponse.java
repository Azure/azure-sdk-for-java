// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.analytics.synapse.artifacts.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The exposure control response.
 */
@Immutable
public final class ExposureControlResponse implements JsonSerializable<ExposureControlResponse> {
    /*
     * The feature name.
     */
    private String featureName;

    /*
     * The feature value.
     */
    private String value;

    /**
     * Creates an instance of ExposureControlResponse class.
     */
    public ExposureControlResponse() {
    }

    /**
     * Get the featureName property: The feature name.
     * 
     * @return the featureName value.
     */
    public String getFeatureName() {
        return this.featureName;
    }

    /**
     * Get the value property: The feature value.
     * 
     * @return the value value.
     */
    public String getValue() {
        return this.value;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ExposureControlResponse from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ExposureControlResponse if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ExposureControlResponse.
     */
    public static ExposureControlResponse fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ExposureControlResponse deserializedExposureControlResponse = new ExposureControlResponse();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("featureName".equals(fieldName)) {
                    deserializedExposureControlResponse.featureName = reader.getString();
                } else if ("value".equals(fieldName)) {
                    deserializedExposureControlResponse.value = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedExposureControlResponse;
        });
    }
}
