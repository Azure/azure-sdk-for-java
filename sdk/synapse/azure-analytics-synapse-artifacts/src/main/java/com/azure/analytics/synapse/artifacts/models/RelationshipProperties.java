// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.analytics.synapse.artifacts.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/** Database properties. */
@Fluent
public final class RelationshipProperties extends MDEntityProperties {
    /*
     * Namespace.
     */
    @JsonProperty(value = "namespace", required = true)
    private Namespace namespace;

    /*
     * From Table Id
     */
    @JsonProperty(value = "fromTableId", access = JsonProperty.Access.WRITE_ONLY)
    private String fromTableId;

    /*
     * From Table Name
     */
    @JsonProperty(value = "fromTableName", required = true)
    private String fromTableName;

    /*
     * To Table Id
     */
    @JsonProperty(value = "toTableId", access = JsonProperty.Access.WRITE_ONLY)
    private String toTableId;

    /*
     * To Table Name
     */
    @JsonProperty(value = "toTableName", required = true)
    private String toTableName;

    /*
     * Relation Type
     */
    @JsonProperty(value = "relationshipType")
    private RelationshipType relationshipType;

    /*
     * List of Column Relationships.
     */
    @JsonProperty(value = "columnRelationshipInformations", required = true)
    private List<ColumnRelationshipInformation> columnRelationshipInformations;

    /** Creates an instance of RelationshipProperties class. */
    public RelationshipProperties() {}

    /**
     * Get the namespace property: Namespace.
     *
     * @return the namespace value.
     */
    public Namespace getNamespace() {
        return this.namespace;
    }

    /**
     * Set the namespace property: Namespace.
     *
     * @param namespace the namespace value to set.
     * @return the RelationshipProperties object itself.
     */
    public RelationshipProperties setNamespace(Namespace namespace) {
        this.namespace = namespace;
        return this;
    }

    /**
     * Get the fromTableId property: From Table Id.
     *
     * @return the fromTableId value.
     */
    public String getFromTableId() {
        return this.fromTableId;
    }

    /**
     * Get the fromTableName property: From Table Name.
     *
     * @return the fromTableName value.
     */
    public String getFromTableName() {
        return this.fromTableName;
    }

    /**
     * Set the fromTableName property: From Table Name.
     *
     * @param fromTableName the fromTableName value to set.
     * @return the RelationshipProperties object itself.
     */
    public RelationshipProperties setFromTableName(String fromTableName) {
        this.fromTableName = fromTableName;
        return this;
    }

    /**
     * Get the toTableId property: To Table Id.
     *
     * @return the toTableId value.
     */
    public String getToTableId() {
        return this.toTableId;
    }

    /**
     * Get the toTableName property: To Table Name.
     *
     * @return the toTableName value.
     */
    public String getToTableName() {
        return this.toTableName;
    }

    /**
     * Set the toTableName property: To Table Name.
     *
     * @param toTableName the toTableName value to set.
     * @return the RelationshipProperties object itself.
     */
    public RelationshipProperties setToTableName(String toTableName) {
        this.toTableName = toTableName;
        return this;
    }

    /**
     * Get the relationshipType property: Relation Type.
     *
     * @return the relationshipType value.
     */
    public RelationshipType getRelationshipType() {
        return this.relationshipType;
    }

    /**
     * Set the relationshipType property: Relation Type.
     *
     * @param relationshipType the relationshipType value to set.
     * @return the RelationshipProperties object itself.
     */
    public RelationshipProperties setRelationshipType(RelationshipType relationshipType) {
        this.relationshipType = relationshipType;
        return this;
    }

    /**
     * Get the columnRelationshipInformations property: List of Column Relationships.
     *
     * @return the columnRelationshipInformations value.
     */
    public List<ColumnRelationshipInformation> getColumnRelationshipInformations() {
        return this.columnRelationshipInformations;
    }

    /**
     * Set the columnRelationshipInformations property: List of Column Relationships.
     *
     * @param columnRelationshipInformations the columnRelationshipInformations value to set.
     * @return the RelationshipProperties object itself.
     */
    public RelationshipProperties setColumnRelationshipInformations(
            List<ColumnRelationshipInformation> columnRelationshipInformations) {
        this.columnRelationshipInformations = columnRelationshipInformations;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public RelationshipProperties setOriginObjectId(String originObjectId) {
        super.setOriginObjectId(originObjectId);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public RelationshipProperties setPublishStatus(String publishStatus) {
        super.setPublishStatus(publishStatus);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public RelationshipProperties setProperties(Map<String, Object> properties) {
        super.setProperties(properties);
        return this;
    }
}
