// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.analytics.synapse.artifacts.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Provides entity name and id that started the pipeline run.
 */
@Immutable
public final class PipelineRunInvokedBy implements JsonSerializable<PipelineRunInvokedBy> {
    /*
     * Name of the entity that started the pipeline run.
     */
    private String name;

    /*
     * The ID of the entity that started the run.
     */
    private String id;

    /*
     * The type of the entity that started the run.
     */
    private String invokedByType;

    /**
     * Creates an instance of PipelineRunInvokedBy class.
     */
    public PipelineRunInvokedBy() {
    }

    /**
     * Get the name property: Name of the entity that started the pipeline run.
     * 
     * @return the name value.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Get the id property: The ID of the entity that started the run.
     * 
     * @return the id value.
     */
    public String getId() {
        return this.id;
    }

    /**
     * Get the invokedByType property: The type of the entity that started the run.
     * 
     * @return the invokedByType value.
     */
    public String getInvokedByType() {
        return this.invokedByType;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of PipelineRunInvokedBy from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of PipelineRunInvokedBy if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the PipelineRunInvokedBy.
     */
    public static PipelineRunInvokedBy fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            PipelineRunInvokedBy deserializedPipelineRunInvokedBy = new PipelineRunInvokedBy();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("name".equals(fieldName)) {
                    deserializedPipelineRunInvokedBy.name = reader.getString();
                } else if ("id".equals(fieldName)) {
                    deserializedPipelineRunInvokedBy.id = reader.getString();
                } else if ("invokedByType".equals(fieldName)) {
                    deserializedPipelineRunInvokedBy.invokedByType = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedPipelineRunInvokedBy;
        });
    }
}
