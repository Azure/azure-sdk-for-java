// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.analytics.synapse.artifacts.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

/**
 * Azure ML Execute Pipeline activity.
 */
@Fluent
public class AzureMLExecutePipelineActivity extends ExecutionActivity {
    /*
     * Type of activity.
     */
    @Generated
    private String type = "AzureMLExecutePipeline";

    /*
     * ID of the published Azure ML pipeline. Type: string (or Expression with resultType string).
     */
    @Generated
    private Object mlPipelineId;

    /*
     * Run history experiment name of the pipeline run. This information will be passed in the ExperimentName property
     * of the published pipeline execution request. Type: string (or Expression with resultType string).
     */
    @Generated
    private Object experimentName;

    /*
     * Key,Value pairs to be passed to the published Azure ML pipeline endpoint. Keys must match the names of pipeline
     * parameters defined in the published pipeline. Values will be passed in the ParameterAssignments property of the
     * published pipeline execution request. Type: object with key value pairs (or Expression with resultType object).
     */
    @Generated
    private Object mlPipelineParameters;

    /*
     * The parent Azure ML Service pipeline run id. This information will be passed in the ParentRunId property of the
     * published pipeline execution request. Type: string (or Expression with resultType string).
     */
    @Generated
    private Object mlParentRunId;

    /*
     * Whether to continue execution of other steps in the PipelineRun if a step fails. This information will be passed
     * in the continueOnStepFailure property of the published pipeline execution request. Type: boolean (or Expression
     * with resultType boolean).
     */
    @Generated
    private Object continueOnStepFailure;

    /**
     * Creates an instance of AzureMLExecutePipelineActivity class.
     */
    @Generated
    public AzureMLExecutePipelineActivity() {
    }

    /**
     * Get the type property: Type of activity.
     * 
     * @return the type value.
     */
    @Generated
    @Override
    public String getType() {
        return this.type;
    }

    /**
     * Get the mlPipelineId property: ID of the published Azure ML pipeline. Type: string (or Expression with resultType
     * string).
     * 
     * @return the mlPipelineId value.
     */
    @Generated
    public Object getMlPipelineId() {
        return this.mlPipelineId;
    }

    /**
     * Set the mlPipelineId property: ID of the published Azure ML pipeline. Type: string (or Expression with resultType
     * string).
     * 
     * @param mlPipelineId the mlPipelineId value to set.
     * @return the AzureMLExecutePipelineActivity object itself.
     */
    @Generated
    public AzureMLExecutePipelineActivity setMlPipelineId(Object mlPipelineId) {
        this.mlPipelineId = mlPipelineId;
        return this;
    }

    /**
     * Get the experimentName property: Run history experiment name of the pipeline run. This information will be passed
     * in the ExperimentName property of the published pipeline execution request. Type: string (or Expression with
     * resultType string).
     * 
     * @return the experimentName value.
     */
    @Generated
    public Object getExperimentName() {
        return this.experimentName;
    }

    /**
     * Set the experimentName property: Run history experiment name of the pipeline run. This information will be passed
     * in the ExperimentName property of the published pipeline execution request. Type: string (or Expression with
     * resultType string).
     * 
     * @param experimentName the experimentName value to set.
     * @return the AzureMLExecutePipelineActivity object itself.
     */
    @Generated
    public AzureMLExecutePipelineActivity setExperimentName(Object experimentName) {
        this.experimentName = experimentName;
        return this;
    }

    /**
     * Get the mlPipelineParameters property: Key,Value pairs to be passed to the published Azure ML pipeline endpoint.
     * Keys must match the names of pipeline parameters defined in the published pipeline. Values will be passed in the
     * ParameterAssignments property of the published pipeline execution request. Type: object with key value pairs (or
     * Expression with resultType object).
     * 
     * @return the mlPipelineParameters value.
     */
    @Generated
    public Object getMlPipelineParameters() {
        return this.mlPipelineParameters;
    }

    /**
     * Set the mlPipelineParameters property: Key,Value pairs to be passed to the published Azure ML pipeline endpoint.
     * Keys must match the names of pipeline parameters defined in the published pipeline. Values will be passed in the
     * ParameterAssignments property of the published pipeline execution request. Type: object with key value pairs (or
     * Expression with resultType object).
     * 
     * @param mlPipelineParameters the mlPipelineParameters value to set.
     * @return the AzureMLExecutePipelineActivity object itself.
     */
    @Generated
    public AzureMLExecutePipelineActivity setMlPipelineParameters(Object mlPipelineParameters) {
        this.mlPipelineParameters = mlPipelineParameters;
        return this;
    }

    /**
     * Get the mlParentRunId property: The parent Azure ML Service pipeline run id. This information will be passed in
     * the ParentRunId property of the published pipeline execution request. Type: string (or Expression with resultType
     * string).
     * 
     * @return the mlParentRunId value.
     */
    @Generated
    public Object getMlParentRunId() {
        return this.mlParentRunId;
    }

    /**
     * Set the mlParentRunId property: The parent Azure ML Service pipeline run id. This information will be passed in
     * the ParentRunId property of the published pipeline execution request. Type: string (or Expression with resultType
     * string).
     * 
     * @param mlParentRunId the mlParentRunId value to set.
     * @return the AzureMLExecutePipelineActivity object itself.
     */
    @Generated
    public AzureMLExecutePipelineActivity setMlParentRunId(Object mlParentRunId) {
        this.mlParentRunId = mlParentRunId;
        return this;
    }

    /**
     * Get the continueOnStepFailure property: Whether to continue execution of other steps in the PipelineRun if a step
     * fails. This information will be passed in the continueOnStepFailure property of the published pipeline execution
     * request. Type: boolean (or Expression with resultType boolean).
     * 
     * @return the continueOnStepFailure value.
     */
    @Generated
    public Object getContinueOnStepFailure() {
        return this.continueOnStepFailure;
    }

    /**
     * Set the continueOnStepFailure property: Whether to continue execution of other steps in the PipelineRun if a step
     * fails. This information will be passed in the continueOnStepFailure property of the published pipeline execution
     * request. Type: boolean (or Expression with resultType boolean).
     * 
     * @param continueOnStepFailure the continueOnStepFailure value to set.
     * @return the AzureMLExecutePipelineActivity object itself.
     */
    @Generated
    public AzureMLExecutePipelineActivity setContinueOnStepFailure(Object continueOnStepFailure) {
        this.continueOnStepFailure = continueOnStepFailure;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public AzureMLExecutePipelineActivity setLinkedServiceName(LinkedServiceReference linkedServiceName) {
        super.setLinkedServiceName(linkedServiceName);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public AzureMLExecutePipelineActivity setPolicy(ActivityPolicy policy) {
        super.setPolicy(policy);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public AzureMLExecutePipelineActivity setName(String name) {
        super.setName(name);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public AzureMLExecutePipelineActivity setDescription(String description) {
        super.setDescription(description);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public AzureMLExecutePipelineActivity setState(ActivityState state) {
        super.setState(state);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public AzureMLExecutePipelineActivity setOnInactiveMarkAs(ActivityOnInactiveMarkAs onInactiveMarkAs) {
        super.setOnInactiveMarkAs(onInactiveMarkAs);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public AzureMLExecutePipelineActivity setDependsOn(List<ActivityDependency> dependsOn) {
        super.setDependsOn(dependsOn);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public AzureMLExecutePipelineActivity setUserProperties(List<UserProperty> userProperties) {
        super.setUserProperties(userProperties);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("name", getName());
        jsonWriter.writeStringField("description", getDescription());
        jsonWriter.writeStringField("state", getState() == null ? null : getState().toString());
        jsonWriter.writeStringField("onInactiveMarkAs",
            getOnInactiveMarkAs() == null ? null : getOnInactiveMarkAs().toString());
        jsonWriter.writeArrayField("dependsOn", getDependsOn(), (writer, element) -> writer.writeJson(element));
        jsonWriter.writeArrayField("userProperties", getUserProperties(),
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeJsonField("linkedServiceName", getLinkedServiceName());
        jsonWriter.writeJsonField("policy", getPolicy());
        jsonWriter.writeStringField("type", this.type);
        if (mlPipelineId != null
            || experimentName != null
            || mlPipelineParameters != null
            || mlParentRunId != null
            || continueOnStepFailure != null) {
            jsonWriter.writeStartObject("typeProperties");
            jsonWriter.writeUntypedField("mlPipelineId", this.mlPipelineId);
            if (this.experimentName != null) {
                jsonWriter.writeUntypedField("experimentName", this.experimentName);
            }
            if (this.mlPipelineParameters != null) {
                jsonWriter.writeUntypedField("mlPipelineParameters", this.mlPipelineParameters);
            }
            if (this.mlParentRunId != null) {
                jsonWriter.writeUntypedField("mlParentRunId", this.mlParentRunId);
            }
            if (this.continueOnStepFailure != null) {
                jsonWriter.writeUntypedField("continueOnStepFailure", this.continueOnStepFailure);
            }
            jsonWriter.writeEndObject();
        }
        if (getAdditionalProperties() != null) {
            for (Map.Entry<String, Object> additionalProperty : getAdditionalProperties().entrySet()) {
                jsonWriter.writeUntypedField(additionalProperty.getKey(), additionalProperty.getValue());
            }
        }
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureMLExecutePipelineActivity from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureMLExecutePipelineActivity if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AzureMLExecutePipelineActivity.
     */
    @Generated
    public static AzureMLExecutePipelineActivity fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AzureMLExecutePipelineActivity deserializedAzureMLExecutePipelineActivity
                = new AzureMLExecutePipelineActivity();
            Map<String, Object> additionalProperties = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("name".equals(fieldName)) {
                    deserializedAzureMLExecutePipelineActivity.setName(reader.getString());
                } else if ("description".equals(fieldName)) {
                    deserializedAzureMLExecutePipelineActivity.setDescription(reader.getString());
                } else if ("state".equals(fieldName)) {
                    deserializedAzureMLExecutePipelineActivity.setState(ActivityState.fromString(reader.getString()));
                } else if ("onInactiveMarkAs".equals(fieldName)) {
                    deserializedAzureMLExecutePipelineActivity
                        .setOnInactiveMarkAs(ActivityOnInactiveMarkAs.fromString(reader.getString()));
                } else if ("dependsOn".equals(fieldName)) {
                    List<ActivityDependency> dependsOn
                        = reader.readArray(reader1 -> ActivityDependency.fromJson(reader1));
                    deserializedAzureMLExecutePipelineActivity.setDependsOn(dependsOn);
                } else if ("userProperties".equals(fieldName)) {
                    List<UserProperty> userProperties = reader.readArray(reader1 -> UserProperty.fromJson(reader1));
                    deserializedAzureMLExecutePipelineActivity.setUserProperties(userProperties);
                } else if ("linkedServiceName".equals(fieldName)) {
                    deserializedAzureMLExecutePipelineActivity
                        .setLinkedServiceName(LinkedServiceReference.fromJson(reader));
                } else if ("policy".equals(fieldName)) {
                    deserializedAzureMLExecutePipelineActivity.setPolicy(ActivityPolicy.fromJson(reader));
                } else if ("type".equals(fieldName)) {
                    deserializedAzureMLExecutePipelineActivity.type = reader.getString();
                } else if ("typeProperties".equals(fieldName) && reader.currentToken() == JsonToken.START_OBJECT) {
                    while (reader.nextToken() != JsonToken.END_OBJECT) {
                        fieldName = reader.getFieldName();
                        reader.nextToken();

                        if ("mlPipelineId".equals(fieldName)) {
                            deserializedAzureMLExecutePipelineActivity.mlPipelineId = reader.readUntyped();
                        } else if ("experimentName".equals(fieldName)) {
                            deserializedAzureMLExecutePipelineActivity.experimentName = reader.readUntyped();
                        } else if ("mlPipelineParameters".equals(fieldName)) {
                            deserializedAzureMLExecutePipelineActivity.mlPipelineParameters = reader.readUntyped();
                        } else if ("mlParentRunId".equals(fieldName)) {
                            deserializedAzureMLExecutePipelineActivity.mlParentRunId = reader.readUntyped();
                        } else if ("continueOnStepFailure".equals(fieldName)) {
                            deserializedAzureMLExecutePipelineActivity.continueOnStepFailure = reader.readUntyped();
                        } else {
                            reader.skipChildren();
                        }
                    }
                } else {
                    if (additionalProperties == null) {
                        additionalProperties = new LinkedHashMap<>();
                    }

                    additionalProperties.put(fieldName, reader.readUntyped());
                }
            }
            deserializedAzureMLExecutePipelineActivity.setAdditionalProperties(additionalProperties);

            return deserializedAzureMLExecutePipelineActivity;
        });
    }
}
