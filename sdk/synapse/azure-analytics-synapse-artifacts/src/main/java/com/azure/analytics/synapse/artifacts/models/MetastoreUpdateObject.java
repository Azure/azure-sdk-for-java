// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.analytics.synapse.artifacts.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The MetastoreUpdateObject model.
 */
@Fluent
public final class MetastoreUpdateObject implements JsonSerializable<MetastoreUpdateObject> {
    /*
     * The input folder containing CDM files.
     */
    private String inputFolder;

    /**
     * Creates an instance of MetastoreUpdateObject class.
     */
    public MetastoreUpdateObject() {
    }

    /**
     * Get the inputFolder property: The input folder containing CDM files.
     * 
     * @return the inputFolder value.
     */
    public String getInputFolder() {
        return this.inputFolder;
    }

    /**
     * Set the inputFolder property: The input folder containing CDM files.
     * 
     * @param inputFolder the inputFolder value to set.
     * @return the MetastoreUpdateObject object itself.
     */
    public MetastoreUpdateObject setInputFolder(String inputFolder) {
        this.inputFolder = inputFolder;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("inputFolder", this.inputFolder);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MetastoreUpdateObject from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MetastoreUpdateObject if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the MetastoreUpdateObject.
     */
    public static MetastoreUpdateObject fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            MetastoreUpdateObject deserializedMetastoreUpdateObject = new MetastoreUpdateObject();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("inputFolder".equals(fieldName)) {
                    deserializedMetastoreUpdateObject.inputFolder = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedMetastoreUpdateObject;
        });
    }
}
