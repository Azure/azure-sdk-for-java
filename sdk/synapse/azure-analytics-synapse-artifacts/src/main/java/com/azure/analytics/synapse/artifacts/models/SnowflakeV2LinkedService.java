// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.analytics.synapse.artifacts.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;
import java.util.Map;

/** Snowflake linked service. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type")
@JsonTypeName("SnowflakeV2")
@JsonFlatten
@Fluent
public class SnowflakeV2LinkedService extends LinkedService {
    /*
     * The account identifier of your Snowflake account, e.g. xy12345.east-us-2.azure
     */
    @JsonProperty(value = "typeProperties.accountIdentifier", required = true)
    private Object accountIdentifier;

    /*
     * The name of the Snowflake user.
     */
    @JsonProperty(value = "typeProperties.user")
    private Object user;

    /*
     * The Azure key vault secret reference of password in connection string.
     */
    @JsonProperty(value = "typeProperties.password")
    private SecretBase password;

    /*
     * The name of the Snowflake database.
     */
    @JsonProperty(value = "typeProperties.database", required = true)
    private Object database;

    /*
     * The name of the Snowflake warehouse.
     */
    @JsonProperty(value = "typeProperties.warehouse", required = true)
    private Object warehouse;

    /*
     * The type used for authentication. Type: string.
     */
    @JsonProperty(value = "typeProperties.authenticationType")
    private SnowflakeAuthenticationType authenticationType;

    /*
     * The client ID of the application registered in Azure Active Directory for AADServicePrincipal authentication.
     */
    @JsonProperty(value = "typeProperties.clientId")
    private Object clientId;

    /*
     * The Azure key vault secret reference of client secret for AADServicePrincipal authentication.
     */
    @JsonProperty(value = "typeProperties.clientSecret")
    private SecretBase clientSecret;

    /*
     * The tenant ID of the application registered in Azure Active Directory for AADServicePrincipal authentication.
     */
    @JsonProperty(value = "typeProperties.tenantId")
    private Object tenantId;

    /*
     * The scope of the application registered in Azure Active Directory for AADServicePrincipal authentication.
     */
    @JsonProperty(value = "typeProperties.scope")
    private Object scope;

    /*
     * The Azure key vault secret reference of privateKey for KeyPair auth.
     */
    @JsonProperty(value = "typeProperties.privateKey")
    private SecretBase privateKey;

    /*
     * The Azure key vault secret reference of private key password for KeyPair auth with encrypted private key.
     */
    @JsonProperty(value = "typeProperties.privateKeyPassphrase")
    private SecretBase privateKeyPassphrase;

    /*
     * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime
     * credential manager. Type: string.
     */
    @JsonProperty(value = "typeProperties.encryptedCredential")
    private String encryptedCredential;

    /** Creates an instance of SnowflakeV2LinkedService class. */
    public SnowflakeV2LinkedService() {}

    /**
     * Get the accountIdentifier property: The account identifier of your Snowflake account, e.g.
     * xy12345.east-us-2.azure.
     *
     * @return the accountIdentifier value.
     */
    public Object getAccountIdentifier() {
        return this.accountIdentifier;
    }

    /**
     * Set the accountIdentifier property: The account identifier of your Snowflake account, e.g.
     * xy12345.east-us-2.azure.
     *
     * @param accountIdentifier the accountIdentifier value to set.
     * @return the SnowflakeV2LinkedService object itself.
     */
    public SnowflakeV2LinkedService setAccountIdentifier(Object accountIdentifier) {
        this.accountIdentifier = accountIdentifier;
        return this;
    }

    /**
     * Get the user property: The name of the Snowflake user.
     *
     * @return the user value.
     */
    public Object getUser() {
        return this.user;
    }

    /**
     * Set the user property: The name of the Snowflake user.
     *
     * @param user the user value to set.
     * @return the SnowflakeV2LinkedService object itself.
     */
    public SnowflakeV2LinkedService setUser(Object user) {
        this.user = user;
        return this;
    }

    /**
     * Get the password property: The Azure key vault secret reference of password in connection string.
     *
     * @return the password value.
     */
    public SecretBase getPassword() {
        return this.password;
    }

    /**
     * Set the password property: The Azure key vault secret reference of password in connection string.
     *
     * @param password the password value to set.
     * @return the SnowflakeV2LinkedService object itself.
     */
    public SnowflakeV2LinkedService setPassword(SecretBase password) {
        this.password = password;
        return this;
    }

    /**
     * Get the database property: The name of the Snowflake database.
     *
     * @return the database value.
     */
    public Object getDatabase() {
        return this.database;
    }

    /**
     * Set the database property: The name of the Snowflake database.
     *
     * @param database the database value to set.
     * @return the SnowflakeV2LinkedService object itself.
     */
    public SnowflakeV2LinkedService setDatabase(Object database) {
        this.database = database;
        return this;
    }

    /**
     * Get the warehouse property: The name of the Snowflake warehouse.
     *
     * @return the warehouse value.
     */
    public Object getWarehouse() {
        return this.warehouse;
    }

    /**
     * Set the warehouse property: The name of the Snowflake warehouse.
     *
     * @param warehouse the warehouse value to set.
     * @return the SnowflakeV2LinkedService object itself.
     */
    public SnowflakeV2LinkedService setWarehouse(Object warehouse) {
        this.warehouse = warehouse;
        return this;
    }

    /**
     * Get the authenticationType property: The type used for authentication. Type: string.
     *
     * @return the authenticationType value.
     */
    public SnowflakeAuthenticationType getAuthenticationType() {
        return this.authenticationType;
    }

    /**
     * Set the authenticationType property: The type used for authentication. Type: string.
     *
     * @param authenticationType the authenticationType value to set.
     * @return the SnowflakeV2LinkedService object itself.
     */
    public SnowflakeV2LinkedService setAuthenticationType(SnowflakeAuthenticationType authenticationType) {
        this.authenticationType = authenticationType;
        return this;
    }

    /**
     * Get the clientId property: The client ID of the application registered in Azure Active Directory for
     * AADServicePrincipal authentication.
     *
     * @return the clientId value.
     */
    public Object getClientId() {
        return this.clientId;
    }

    /**
     * Set the clientId property: The client ID of the application registered in Azure Active Directory for
     * AADServicePrincipal authentication.
     *
     * @param clientId the clientId value to set.
     * @return the SnowflakeV2LinkedService object itself.
     */
    public SnowflakeV2LinkedService setClientId(Object clientId) {
        this.clientId = clientId;
        return this;
    }

    /**
     * Get the clientSecret property: The Azure key vault secret reference of client secret for AADServicePrincipal
     * authentication.
     *
     * @return the clientSecret value.
     */
    public SecretBase getClientSecret() {
        return this.clientSecret;
    }

    /**
     * Set the clientSecret property: The Azure key vault secret reference of client secret for AADServicePrincipal
     * authentication.
     *
     * @param clientSecret the clientSecret value to set.
     * @return the SnowflakeV2LinkedService object itself.
     */
    public SnowflakeV2LinkedService setClientSecret(SecretBase clientSecret) {
        this.clientSecret = clientSecret;
        return this;
    }

    /**
     * Get the tenantId property: The tenant ID of the application registered in Azure Active Directory for
     * AADServicePrincipal authentication.
     *
     * @return the tenantId value.
     */
    public Object getTenantId() {
        return this.tenantId;
    }

    /**
     * Set the tenantId property: The tenant ID of the application registered in Azure Active Directory for
     * AADServicePrincipal authentication.
     *
     * @param tenantId the tenantId value to set.
     * @return the SnowflakeV2LinkedService object itself.
     */
    public SnowflakeV2LinkedService setTenantId(Object tenantId) {
        this.tenantId = tenantId;
        return this;
    }

    /**
     * Get the scope property: The scope of the application registered in Azure Active Directory for AADServicePrincipal
     * authentication.
     *
     * @return the scope value.
     */
    public Object getScope() {
        return this.scope;
    }

    /**
     * Set the scope property: The scope of the application registered in Azure Active Directory for AADServicePrincipal
     * authentication.
     *
     * @param scope the scope value to set.
     * @return the SnowflakeV2LinkedService object itself.
     */
    public SnowflakeV2LinkedService setScope(Object scope) {
        this.scope = scope;
        return this;
    }

    /**
     * Get the privateKey property: The Azure key vault secret reference of privateKey for KeyPair auth.
     *
     * @return the privateKey value.
     */
    public SecretBase getPrivateKey() {
        return this.privateKey;
    }

    /**
     * Set the privateKey property: The Azure key vault secret reference of privateKey for KeyPair auth.
     *
     * @param privateKey the privateKey value to set.
     * @return the SnowflakeV2LinkedService object itself.
     */
    public SnowflakeV2LinkedService setPrivateKey(SecretBase privateKey) {
        this.privateKey = privateKey;
        return this;
    }

    /**
     * Get the privateKeyPassphrase property: The Azure key vault secret reference of private key password for KeyPair
     * auth with encrypted private key.
     *
     * @return the privateKeyPassphrase value.
     */
    public SecretBase getPrivateKeyPassphrase() {
        return this.privateKeyPassphrase;
    }

    /**
     * Set the privateKeyPassphrase property: The Azure key vault secret reference of private key password for KeyPair
     * auth with encrypted private key.
     *
     * @param privateKeyPassphrase the privateKeyPassphrase value to set.
     * @return the SnowflakeV2LinkedService object itself.
     */
    public SnowflakeV2LinkedService setPrivateKeyPassphrase(SecretBase privateKeyPassphrase) {
        this.privateKeyPassphrase = privateKeyPassphrase;
        return this;
    }

    /**
     * Get the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted
     * using the integration runtime credential manager. Type: string.
     *
     * @return the encryptedCredential value.
     */
    public String getEncryptedCredential() {
        return this.encryptedCredential;
    }

    /**
     * Set the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted
     * using the integration runtime credential manager. Type: string.
     *
     * @param encryptedCredential the encryptedCredential value to set.
     * @return the SnowflakeV2LinkedService object itself.
     */
    public SnowflakeV2LinkedService setEncryptedCredential(String encryptedCredential) {
        this.encryptedCredential = encryptedCredential;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public SnowflakeV2LinkedService setConnectVia(IntegrationRuntimeReference connectVia) {
        super.setConnectVia(connectVia);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public SnowflakeV2LinkedService setDescription(String description) {
        super.setDescription(description);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public SnowflakeV2LinkedService setParameters(Map<String, ParameterSpecification> parameters) {
        super.setParameters(parameters);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public SnowflakeV2LinkedService setAnnotations(List<Object> annotations) {
        super.setAnnotations(annotations);
        return this;
    }
}
