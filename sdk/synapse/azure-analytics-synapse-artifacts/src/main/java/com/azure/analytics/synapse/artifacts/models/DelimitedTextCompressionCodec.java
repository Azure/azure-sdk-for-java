// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.analytics.synapse.artifacts.models;

import com.azure.core.util.ExpandableStringEnum;
import com.fasterxml.jackson.annotation.JsonCreator;
import java.util.Collection;

/** Defines values for DelimitedTextCompressionCodec. */
public final class DelimitedTextCompressionCodec extends ExpandableStringEnum<DelimitedTextCompressionCodec> {
    /** Static value bzip2 for DelimitedTextCompressionCodec. */
    public static final DelimitedTextCompressionCodec BZIP2 = fromString("bzip2");

    /** Static value gzip for DelimitedTextCompressionCodec. */
    public static final DelimitedTextCompressionCodec GZIP = fromString("gzip");

    /** Static value deflate for DelimitedTextCompressionCodec. */
    public static final DelimitedTextCompressionCodec DEFLATE = fromString("deflate");

    /** Static value zipDeflate for DelimitedTextCompressionCodec. */
    public static final DelimitedTextCompressionCodec ZIP_DEFLATE = fromString("zipDeflate");

    /** Static value snappy for DelimitedTextCompressionCodec. */
    public static final DelimitedTextCompressionCodec SNAPPY = fromString("snappy");

    /** Static value lz4 for DelimitedTextCompressionCodec. */
    public static final DelimitedTextCompressionCodec LZ4 = fromString("lz4");

    /**
     * Creates or finds a DelimitedTextCompressionCodec from its string representation.
     *
     * @param name a name to look for.
     * @return the corresponding DelimitedTextCompressionCodec.
     */
    @JsonCreator
    public static DelimitedTextCompressionCodec fromString(String name) {
        return fromString(name, DelimitedTextCompressionCodec.class);
    }

    /** @return known DelimitedTextCompressionCodec values. */
    public static Collection<DelimitedTextCompressionCodec> values() {
        return values(DelimitedTextCompressionCodec.class);
    }
}
