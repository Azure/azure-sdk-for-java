// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.analytics.synapse.artifacts.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/** Google BigQuery service linked service. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type")
@JsonTypeName("GoogleBigQuery")
@JsonFlatten
@Fluent
public class GoogleBigQueryLinkedService extends LinkedService {
    /*
     * The default BigQuery project to query against.
     */
    @JsonProperty(value = "typeProperties.project", required = true)
    private Object project;

    /*
     * A comma-separated list of public BigQuery projects to access.
     */
    @JsonProperty(value = "typeProperties.additionalProjects")
    private Object additionalProjects;

    /*
     * Whether to request access to Google Drive. Allowing Google Drive access
     * enables support for federated tables that combine BigQuery data with
     * data from Google Drive. The default value is false.
     */
    @JsonProperty(value = "typeProperties.requestGoogleDriveScope")
    private Object requestGoogleDriveScope;

    /*
     * The OAuth 2.0 authentication mechanism used for authentication.
     * ServiceAuthentication can only be used on self-hosted IR.
     */
    @JsonProperty(value = "typeProperties.authenticationType", required = true)
    private GoogleBigQueryAuthenticationType authenticationType;

    /*
     * The refresh token obtained from Google for authorizing access to
     * BigQuery for UserAuthentication.
     */
    @JsonProperty(value = "typeProperties.refreshToken")
    private SecretBase refreshToken;

    /*
     * The client id of the google application used to acquire the refresh
     * token. Type: string (or Expression with resultType string).
     */
    @JsonProperty(value = "typeProperties.clientId")
    private Object clientId;

    /*
     * The client secret of the google application used to acquire the refresh
     * token.
     */
    @JsonProperty(value = "typeProperties.clientSecret")
    private SecretBase clientSecret;

    /*
     * The service account email ID that is used for ServiceAuthentication and
     * can only be used on self-hosted IR.
     */
    @JsonProperty(value = "typeProperties.email")
    private Object email;

    /*
     * The full path to the .p12 key file that is used to authenticate the
     * service account email address and can only be used on self-hosted IR.
     */
    @JsonProperty(value = "typeProperties.keyFilePath")
    private Object keyFilePath;

    /*
     * The full path of the .pem file containing trusted CA certificates for
     * verifying the server when connecting over SSL. This property can only be
     * set when using SSL on self-hosted IR. The default value is the
     * cacerts.pem file installed with the IR.
     */
    @JsonProperty(value = "typeProperties.trustedCertPath")
    private Object trustedCertPath;

    /*
     * Specifies whether to use a CA certificate from the system trust store or
     * from a specified PEM file. The default value is false.
     */
    @JsonProperty(value = "typeProperties.useSystemTrustStore")
    private Object useSystemTrustStore;

    /*
     * The encrypted credential used for authentication. Credentials are
     * encrypted using the integration runtime credential manager. Type: string
     * (or Expression with resultType string).
     */
    @JsonProperty(value = "typeProperties.encryptedCredential")
    private Object encryptedCredential;

    /**
     * Get the project property: The default BigQuery project to query against.
     *
     * @return the project value.
     */
    public Object getProject() {
        return this.project;
    }

    /**
     * Set the project property: The default BigQuery project to query against.
     *
     * @param project the project value to set.
     * @return the GoogleBigQueryLinkedService object itself.
     */
    public GoogleBigQueryLinkedService setProject(Object project) {
        this.project = project;
        return this;
    }

    /**
     * Get the additionalProjects property: A comma-separated list of public BigQuery projects to access.
     *
     * @return the additionalProjects value.
     */
    public Object getAdditionalProjects() {
        return this.additionalProjects;
    }

    /**
     * Set the additionalProjects property: A comma-separated list of public BigQuery projects to access.
     *
     * @param additionalProjects the additionalProjects value to set.
     * @return the GoogleBigQueryLinkedService object itself.
     */
    public GoogleBigQueryLinkedService setAdditionalProjects(Object additionalProjects) {
        this.additionalProjects = additionalProjects;
        return this;
    }

    /**
     * Get the requestGoogleDriveScope property: Whether to request access to Google Drive. Allowing Google Drive access
     * enables support for federated tables that combine BigQuery data with data from Google Drive. The default value is
     * false.
     *
     * @return the requestGoogleDriveScope value.
     */
    public Object getRequestGoogleDriveScope() {
        return this.requestGoogleDriveScope;
    }

    /**
     * Set the requestGoogleDriveScope property: Whether to request access to Google Drive. Allowing Google Drive access
     * enables support for federated tables that combine BigQuery data with data from Google Drive. The default value is
     * false.
     *
     * @param requestGoogleDriveScope the requestGoogleDriveScope value to set.
     * @return the GoogleBigQueryLinkedService object itself.
     */
    public GoogleBigQueryLinkedService setRequestGoogleDriveScope(Object requestGoogleDriveScope) {
        this.requestGoogleDriveScope = requestGoogleDriveScope;
        return this;
    }

    /**
     * Get the authenticationType property: The OAuth 2.0 authentication mechanism used for authentication.
     * ServiceAuthentication can only be used on self-hosted IR.
     *
     * @return the authenticationType value.
     */
    public GoogleBigQueryAuthenticationType getAuthenticationType() {
        return this.authenticationType;
    }

    /**
     * Set the authenticationType property: The OAuth 2.0 authentication mechanism used for authentication.
     * ServiceAuthentication can only be used on self-hosted IR.
     *
     * @param authenticationType the authenticationType value to set.
     * @return the GoogleBigQueryLinkedService object itself.
     */
    public GoogleBigQueryLinkedService setAuthenticationType(GoogleBigQueryAuthenticationType authenticationType) {
        this.authenticationType = authenticationType;
        return this;
    }

    /**
     * Get the refreshToken property: The refresh token obtained from Google for authorizing access to BigQuery for
     * UserAuthentication.
     *
     * @return the refreshToken value.
     */
    public SecretBase getRefreshToken() {
        return this.refreshToken;
    }

    /**
     * Set the refreshToken property: The refresh token obtained from Google for authorizing access to BigQuery for
     * UserAuthentication.
     *
     * @param refreshToken the refreshToken value to set.
     * @return the GoogleBigQueryLinkedService object itself.
     */
    public GoogleBigQueryLinkedService setRefreshToken(SecretBase refreshToken) {
        this.refreshToken = refreshToken;
        return this;
    }

    /**
     * Get the clientId property: The client id of the google application used to acquire the refresh token. Type:
     * string (or Expression with resultType string).
     *
     * @return the clientId value.
     */
    public Object getClientId() {
        return this.clientId;
    }

    /**
     * Set the clientId property: The client id of the google application used to acquire the refresh token. Type:
     * string (or Expression with resultType string).
     *
     * @param clientId the clientId value to set.
     * @return the GoogleBigQueryLinkedService object itself.
     */
    public GoogleBigQueryLinkedService setClientId(Object clientId) {
        this.clientId = clientId;
        return this;
    }

    /**
     * Get the clientSecret property: The client secret of the google application used to acquire the refresh token.
     *
     * @return the clientSecret value.
     */
    public SecretBase getClientSecret() {
        return this.clientSecret;
    }

    /**
     * Set the clientSecret property: The client secret of the google application used to acquire the refresh token.
     *
     * @param clientSecret the clientSecret value to set.
     * @return the GoogleBigQueryLinkedService object itself.
     */
    public GoogleBigQueryLinkedService setClientSecret(SecretBase clientSecret) {
        this.clientSecret = clientSecret;
        return this;
    }

    /**
     * Get the email property: The service account email ID that is used for ServiceAuthentication and can only be used
     * on self-hosted IR.
     *
     * @return the email value.
     */
    public Object getEmail() {
        return this.email;
    }

    /**
     * Set the email property: The service account email ID that is used for ServiceAuthentication and can only be used
     * on self-hosted IR.
     *
     * @param email the email value to set.
     * @return the GoogleBigQueryLinkedService object itself.
     */
    public GoogleBigQueryLinkedService setEmail(Object email) {
        this.email = email;
        return this;
    }

    /**
     * Get the keyFilePath property: The full path to the .p12 key file that is used to authenticate the service account
     * email address and can only be used on self-hosted IR.
     *
     * @return the keyFilePath value.
     */
    public Object getKeyFilePath() {
        return this.keyFilePath;
    }

    /**
     * Set the keyFilePath property: The full path to the .p12 key file that is used to authenticate the service account
     * email address and can only be used on self-hosted IR.
     *
     * @param keyFilePath the keyFilePath value to set.
     * @return the GoogleBigQueryLinkedService object itself.
     */
    public GoogleBigQueryLinkedService setKeyFilePath(Object keyFilePath) {
        this.keyFilePath = keyFilePath;
        return this;
    }

    /**
     * Get the trustedCertPath property: The full path of the .pem file containing trusted CA certificates for verifying
     * the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default
     * value is the cacerts.pem file installed with the IR.
     *
     * @return the trustedCertPath value.
     */
    public Object getTrustedCertPath() {
        return this.trustedCertPath;
    }

    /**
     * Set the trustedCertPath property: The full path of the .pem file containing trusted CA certificates for verifying
     * the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default
     * value is the cacerts.pem file installed with the IR.
     *
     * @param trustedCertPath the trustedCertPath value to set.
     * @return the GoogleBigQueryLinkedService object itself.
     */
    public GoogleBigQueryLinkedService setTrustedCertPath(Object trustedCertPath) {
        this.trustedCertPath = trustedCertPath;
        return this;
    }

    /**
     * Get the useSystemTrustStore property: Specifies whether to use a CA certificate from the system trust store or
     * from a specified PEM file. The default value is false.
     *
     * @return the useSystemTrustStore value.
     */
    public Object getUseSystemTrustStore() {
        return this.useSystemTrustStore;
    }

    /**
     * Set the useSystemTrustStore property: Specifies whether to use a CA certificate from the system trust store or
     * from a specified PEM file. The default value is false.
     *
     * @param useSystemTrustStore the useSystemTrustStore value to set.
     * @return the GoogleBigQueryLinkedService object itself.
     */
    public GoogleBigQueryLinkedService setUseSystemTrustStore(Object useSystemTrustStore) {
        this.useSystemTrustStore = useSystemTrustStore;
        return this;
    }

    /**
     * Get the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted
     * using the integration runtime credential manager. Type: string (or Expression with resultType string).
     *
     * @return the encryptedCredential value.
     */
    public Object getEncryptedCredential() {
        return this.encryptedCredential;
    }

    /**
     * Set the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted
     * using the integration runtime credential manager. Type: string (or Expression with resultType string).
     *
     * @param encryptedCredential the encryptedCredential value to set.
     * @return the GoogleBigQueryLinkedService object itself.
     */
    public GoogleBigQueryLinkedService setEncryptedCredential(Object encryptedCredential) {
        this.encryptedCredential = encryptedCredential;
        return this;
    }
}
