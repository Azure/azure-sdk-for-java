// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.analytics.synapse.artifacts.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/** Pipeline resource type. */
@JsonFlatten
@Fluent
public class PipelineResource extends SubResource {
    /*
     * The description of the pipeline.
     */
    @JsonProperty(value = "properties.description")
    private String description;

    /*
     * List of activities in pipeline.
     */
    @JsonProperty(value = "properties.activities")
    private List<Activity> activities;

    /*
     * List of parameters for pipeline.
     */
    @JsonProperty(value = "properties.parameters")
    private Map<String, ParameterSpecification> parameters;

    /*
     * List of variables for pipeline.
     */
    @JsonProperty(value = "properties.variables")
    private Map<String, VariableSpecification> variables;

    /*
     * The max number of concurrent runs for the pipeline.
     */
    @JsonProperty(value = "properties.concurrency")
    private Integer concurrency;

    /*
     * List of tags that can be used for describing the Pipeline.
     */
    @JsonProperty(value = "properties.annotations")
    private List<Object> annotations;

    /*
     * Dimensions emitted by Pipeline.
     */
    @JsonProperty(value = "properties.runDimensions")
    private Map<String, Object> runDimensions;

    /*
     * The folder that this Pipeline is in. If not specified, Pipeline will
     * appear at the root level.
     */
    @JsonProperty(value = "properties.folder")
    private PipelineFolder folder;

    /*
     * Pipeline resource type.
     */
    @JsonIgnore private Map<String, Object> additionalProperties;

    /**
     * Get the description property: The description of the pipeline.
     *
     * @return the description value.
     */
    public String getDescription() {
        return this.description;
    }

    /**
     * Set the description property: The description of the pipeline.
     *
     * @param description the description value to set.
     * @return the PipelineResource object itself.
     */
    public PipelineResource setDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the activities property: List of activities in pipeline.
     *
     * @return the activities value.
     */
    public List<Activity> getActivities() {
        return this.activities;
    }

    /**
     * Set the activities property: List of activities in pipeline.
     *
     * @param activities the activities value to set.
     * @return the PipelineResource object itself.
     */
    public PipelineResource setActivities(List<Activity> activities) {
        this.activities = activities;
        return this;
    }

    /**
     * Get the parameters property: List of parameters for pipeline.
     *
     * @return the parameters value.
     */
    public Map<String, ParameterSpecification> getParameters() {
        return this.parameters;
    }

    /**
     * Set the parameters property: List of parameters for pipeline.
     *
     * @param parameters the parameters value to set.
     * @return the PipelineResource object itself.
     */
    public PipelineResource setParameters(Map<String, ParameterSpecification> parameters) {
        this.parameters = parameters;
        return this;
    }

    /**
     * Get the variables property: List of variables for pipeline.
     *
     * @return the variables value.
     */
    public Map<String, VariableSpecification> getVariables() {
        return this.variables;
    }

    /**
     * Set the variables property: List of variables for pipeline.
     *
     * @param variables the variables value to set.
     * @return the PipelineResource object itself.
     */
    public PipelineResource setVariables(Map<String, VariableSpecification> variables) {
        this.variables = variables;
        return this;
    }

    /**
     * Get the concurrency property: The max number of concurrent runs for the pipeline.
     *
     * @return the concurrency value.
     */
    public Integer getConcurrency() {
        return this.concurrency;
    }

    /**
     * Set the concurrency property: The max number of concurrent runs for the pipeline.
     *
     * @param concurrency the concurrency value to set.
     * @return the PipelineResource object itself.
     */
    public PipelineResource setConcurrency(Integer concurrency) {
        this.concurrency = concurrency;
        return this;
    }

    /**
     * Get the annotations property: List of tags that can be used for describing the Pipeline.
     *
     * @return the annotations value.
     */
    public List<Object> getAnnotations() {
        return this.annotations;
    }

    /**
     * Set the annotations property: List of tags that can be used for describing the Pipeline.
     *
     * @param annotations the annotations value to set.
     * @return the PipelineResource object itself.
     */
    public PipelineResource setAnnotations(List<Object> annotations) {
        this.annotations = annotations;
        return this;
    }

    /**
     * Get the runDimensions property: Dimensions emitted by Pipeline.
     *
     * @return the runDimensions value.
     */
    public Map<String, Object> getRunDimensions() {
        return this.runDimensions;
    }

    /**
     * Set the runDimensions property: Dimensions emitted by Pipeline.
     *
     * @param runDimensions the runDimensions value to set.
     * @return the PipelineResource object itself.
     */
    public PipelineResource setRunDimensions(Map<String, Object> runDimensions) {
        this.runDimensions = runDimensions;
        return this;
    }

    /**
     * Get the folder property: The folder that this Pipeline is in. If not specified, Pipeline will appear at the root
     * level.
     *
     * @return the folder value.
     */
    public PipelineFolder getFolder() {
        return this.folder;
    }

    /**
     * Set the folder property: The folder that this Pipeline is in. If not specified, Pipeline will appear at the root
     * level.
     *
     * @param folder the folder value to set.
     * @return the PipelineResource object itself.
     */
    public PipelineResource setFolder(PipelineFolder folder) {
        this.folder = folder;
        return this;
    }

    /**
     * Get the additionalProperties property: Pipeline resource type.
     *
     * @return the additionalProperties value.
     */
    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    /**
     * Set the additionalProperties property: Pipeline resource type.
     *
     * @param additionalProperties the additionalProperties value to set.
     * @return the PipelineResource object itself.
     */
    public PipelineResource setAdditionalProperties(Map<String, Object> additionalProperties) {
        this.additionalProperties = additionalProperties;
        return this;
    }

    @JsonAnySetter
    void setAdditionalProperties(String key, Object value) {
        if (additionalProperties == null) {
            additionalProperties = new HashMap<>();
        }
        additionalProperties.put(key.replace("\\.", "."), value);
    }
}
