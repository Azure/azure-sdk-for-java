// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.analytics.synapse.artifacts.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Continuation settings for execute data flow activity.
 */
@Fluent
public final class ContinuationSettingsReference implements JsonSerializable<ContinuationSettingsReference> {
    /*
     * Continuation TTL in minutes.
     */
    private Object continuationTtlInMinutes;

    /*
     * Idle condition.
     */
    private Object idleCondition;

    /*
     * Customized checkpoint key.
     */
    private Object customizedCheckpointKey;

    /**
     * Creates an instance of ContinuationSettingsReference class.
     */
    public ContinuationSettingsReference() {
    }

    /**
     * Get the continuationTtlInMinutes property: Continuation TTL in minutes.
     * 
     * @return the continuationTtlInMinutes value.
     */
    public Object getContinuationTtlInMinutes() {
        return this.continuationTtlInMinutes;
    }

    /**
     * Set the continuationTtlInMinutes property: Continuation TTL in minutes.
     * 
     * @param continuationTtlInMinutes the continuationTtlInMinutes value to set.
     * @return the ContinuationSettingsReference object itself.
     */
    public ContinuationSettingsReference setContinuationTtlInMinutes(Object continuationTtlInMinutes) {
        this.continuationTtlInMinutes = continuationTtlInMinutes;
        return this;
    }

    /**
     * Get the idleCondition property: Idle condition.
     * 
     * @return the idleCondition value.
     */
    public Object getIdleCondition() {
        return this.idleCondition;
    }

    /**
     * Set the idleCondition property: Idle condition.
     * 
     * @param idleCondition the idleCondition value to set.
     * @return the ContinuationSettingsReference object itself.
     */
    public ContinuationSettingsReference setIdleCondition(Object idleCondition) {
        this.idleCondition = idleCondition;
        return this;
    }

    /**
     * Get the customizedCheckpointKey property: Customized checkpoint key.
     * 
     * @return the customizedCheckpointKey value.
     */
    public Object getCustomizedCheckpointKey() {
        return this.customizedCheckpointKey;
    }

    /**
     * Set the customizedCheckpointKey property: Customized checkpoint key.
     * 
     * @param customizedCheckpointKey the customizedCheckpointKey value to set.
     * @return the ContinuationSettingsReference object itself.
     */
    public ContinuationSettingsReference setCustomizedCheckpointKey(Object customizedCheckpointKey) {
        this.customizedCheckpointKey = customizedCheckpointKey;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeUntypedField("continuationTtlInMinutes", this.continuationTtlInMinutes);
        jsonWriter.writeUntypedField("idleCondition", this.idleCondition);
        jsonWriter.writeUntypedField("customizedCheckpointKey", this.customizedCheckpointKey);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ContinuationSettingsReference from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ContinuationSettingsReference if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ContinuationSettingsReference.
     */
    public static ContinuationSettingsReference fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ContinuationSettingsReference deserializedContinuationSettingsReference
                = new ContinuationSettingsReference();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("continuationTtlInMinutes".equals(fieldName)) {
                    deserializedContinuationSettingsReference.continuationTtlInMinutes = reader.readUntyped();
                } else if ("idleCondition".equals(fieldName)) {
                    deserializedContinuationSettingsReference.idleCondition = reader.readUntyped();
                } else if ("customizedCheckpointKey".equals(fieldName)) {
                    deserializedContinuationSettingsReference.customizedCheckpointKey = reader.readUntyped();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedContinuationSettingsReference;
        });
    }
}
