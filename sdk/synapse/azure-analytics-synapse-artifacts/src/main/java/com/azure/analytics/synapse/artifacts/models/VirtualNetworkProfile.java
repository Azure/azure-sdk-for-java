// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.analytics.synapse.artifacts.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Virtual Network Profile.
 */
@Fluent
public final class VirtualNetworkProfile implements JsonSerializable<VirtualNetworkProfile> {
    /*
     * Subnet ID used for computes in workspace
     */
    private String computeSubnetId;

    /**
     * Creates an instance of VirtualNetworkProfile class.
     */
    public VirtualNetworkProfile() {
    }

    /**
     * Get the computeSubnetId property: Subnet ID used for computes in workspace.
     * 
     * @return the computeSubnetId value.
     */
    public String getComputeSubnetId() {
        return this.computeSubnetId;
    }

    /**
     * Set the computeSubnetId property: Subnet ID used for computes in workspace.
     * 
     * @param computeSubnetId the computeSubnetId value to set.
     * @return the VirtualNetworkProfile object itself.
     */
    public VirtualNetworkProfile setComputeSubnetId(String computeSubnetId) {
        this.computeSubnetId = computeSubnetId;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("computeSubnetId", this.computeSubnetId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of VirtualNetworkProfile from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of VirtualNetworkProfile if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the VirtualNetworkProfile.
     */
    public static VirtualNetworkProfile fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            VirtualNetworkProfile deserializedVirtualNetworkProfile = new VirtualNetworkProfile();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("computeSubnetId".equals(fieldName)) {
                    deserializedVirtualNetworkProfile.computeSubnetId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedVirtualNetworkProfile;
        });
    }
}
