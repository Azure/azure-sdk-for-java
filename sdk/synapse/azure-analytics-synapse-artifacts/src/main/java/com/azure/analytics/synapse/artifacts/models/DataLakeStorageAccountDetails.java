// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.analytics.synapse.artifacts.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Details of the data lake storage account associated with the workspace.
 */
@Fluent
public final class DataLakeStorageAccountDetails implements JsonSerializable<DataLakeStorageAccountDetails> {
    /*
     * Account URL
     */
    @Generated
    private String accountUrl;

    /*
     * Filesystem name
     */
    @Generated
    private String filesystem;

    /**
     * Creates an instance of DataLakeStorageAccountDetails class.
     */
    @Generated
    public DataLakeStorageAccountDetails() {
    }

    /**
     * Get the accountUrl property: Account URL.
     * 
     * @return the accountUrl value.
     */
    @Generated
    public String getAccountUrl() {
        return this.accountUrl;
    }

    /**
     * Set the accountUrl property: Account URL.
     * 
     * @param accountUrl the accountUrl value to set.
     * @return the DataLakeStorageAccountDetails object itself.
     */
    @Generated
    public DataLakeStorageAccountDetails setAccountUrl(String accountUrl) {
        this.accountUrl = accountUrl;
        return this;
    }

    /**
     * Get the filesystem property: Filesystem name.
     * 
     * @return the filesystem value.
     */
    @Generated
    public String getFilesystem() {
        return this.filesystem;
    }

    /**
     * Set the filesystem property: Filesystem name.
     * 
     * @param filesystem the filesystem value to set.
     * @return the DataLakeStorageAccountDetails object itself.
     */
    @Generated
    public DataLakeStorageAccountDetails setFilesystem(String filesystem) {
        this.filesystem = filesystem;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("accountUrl", this.accountUrl);
        jsonWriter.writeStringField("filesystem", this.filesystem);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DataLakeStorageAccountDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DataLakeStorageAccountDetails if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the DataLakeStorageAccountDetails.
     */
    @Generated
    public static DataLakeStorageAccountDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            DataLakeStorageAccountDetails deserializedDataLakeStorageAccountDetails
                = new DataLakeStorageAccountDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("accountUrl".equals(fieldName)) {
                    deserializedDataLakeStorageAccountDetails.accountUrl = reader.getString();
                } else if ("filesystem".equals(fieldName)) {
                    deserializedDataLakeStorageAccountDetails.filesystem = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedDataLakeStorageAccountDetails;
        });
    }
}
