/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * abc
 */

package com.microsoft.azure.management.synapse.v2020_12_01.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.synapse.v2020_12_01.IntegrationRuntimeNodeIpAddressOperations;
import rx.functions.Func1;
import rx.Observable;
import com.microsoft.azure.management.synapse.v2020_12_01.IntegrationRuntimeNodeIpAddress;

class IntegrationRuntimeNodeIpAddressOperationsImpl extends WrapperImpl<IntegrationRuntimeNodeIpAddressOperationsInner> implements IntegrationRuntimeNodeIpAddressOperations {
    private final SynapseManager manager;

    IntegrationRuntimeNodeIpAddressOperationsImpl(SynapseManager manager) {
        super(manager.inner().integrationRuntimeNodeIpAddressOperations());
        this.manager = manager;
    }

    public SynapseManager manager() {
        return this.manager;
    }

    @Override
    public Observable<IntegrationRuntimeNodeIpAddress> getAsync(String resourceGroupName, String workspaceName, String integrationRuntimeName, String nodeName) {
        IntegrationRuntimeNodeIpAddressOperationsInner client = this.inner();
        return client.getAsync(resourceGroupName, workspaceName, integrationRuntimeName, nodeName)
        .map(new Func1<IntegrationRuntimeNodeIpAddressInner, IntegrationRuntimeNodeIpAddress>() {
            @Override
            public IntegrationRuntimeNodeIpAddress call(IntegrationRuntimeNodeIpAddressInner inner) {
                return new IntegrationRuntimeNodeIpAddressImpl(inner, manager());
            }
        });
    }

}
