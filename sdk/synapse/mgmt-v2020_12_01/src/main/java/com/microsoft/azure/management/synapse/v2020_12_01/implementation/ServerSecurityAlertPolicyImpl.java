/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.synapse.v2020_12_01.implementation;

import com.microsoft.azure.management.synapse.v2020_12_01.ServerSecurityAlertPolicy;
import com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl;
import rx.Observable;
import com.microsoft.azure.management.synapse.v2020_12_01.SecurityAlertPolicyState;
import java.util.List;
import org.joda.time.DateTime;

class ServerSecurityAlertPolicyImpl extends CreatableUpdatableImpl<ServerSecurityAlertPolicy, ServerSecurityAlertPolicyInner, ServerSecurityAlertPolicyImpl> implements ServerSecurityAlertPolicy, ServerSecurityAlertPolicy.Definition, ServerSecurityAlertPolicy.Update {
    private final SynapseManager manager;
    private String resourceGroupName;
    private String workspaceName;

    ServerSecurityAlertPolicyImpl(String name, SynapseManager manager) {
        super(name, new ServerSecurityAlertPolicyInner());
        this.manager = manager;
        // Set resource name
        this.workspaceName = name;
        //
    }

    ServerSecurityAlertPolicyImpl(ServerSecurityAlertPolicyInner inner, SynapseManager manager) {
        super(inner.name(), inner);
        this.manager = manager;
        // Set resource name
        this.workspaceName = inner.name();
        // set resource ancestor and positional variables
        this.resourceGroupName = IdParsingUtils.getValueFromIdByName(inner.id(), "resourceGroups");
        this.workspaceName = IdParsingUtils.getValueFromIdByName(inner.id(), "workspaces");
        //
    }

    @Override
    public SynapseManager manager() {
        return this.manager;
    }

    @Override
    public Observable<ServerSecurityAlertPolicy> createResourceAsync() {
        WorkspaceManagedSqlServerSecurityAlertPolicysInner client = this.manager().inner().workspaceManagedSqlServerSecurityAlertPolicys();
        return client.createOrUpdateAsync(this.resourceGroupName, this.workspaceName, this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    public Observable<ServerSecurityAlertPolicy> updateResourceAsync() {
        WorkspaceManagedSqlServerSecurityAlertPolicysInner client = this.manager().inner().workspaceManagedSqlServerSecurityAlertPolicys();
        return client.createOrUpdateAsync(this.resourceGroupName, this.workspaceName, this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<ServerSecurityAlertPolicyInner> getInnerAsync() {
        WorkspaceManagedSqlServerSecurityAlertPolicysInner client = this.manager().inner().workspaceManagedSqlServerSecurityAlertPolicys();
        return client.getAsync(this.resourceGroupName, this.workspaceName);
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }


    @Override
    public DateTime creationTime() {
        return this.inner().creationTime();
    }

    @Override
    public List<String> disabledAlerts() {
        return this.inner().disabledAlerts();
    }

    @Override
    public Boolean emailAccountAdmins() {
        return this.inner().emailAccountAdmins();
    }

    @Override
    public List<String> emailAddresses() {
        return this.inner().emailAddresses();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public Integer retentionDays() {
        return this.inner().retentionDays();
    }

    @Override
    public SecurityAlertPolicyState state() {
        return this.inner().state();
    }

    @Override
    public String storageAccountAccessKey() {
        return this.inner().storageAccountAccessKey();
    }

    @Override
    public String storageEndpoint() {
        return this.inner().storageEndpoint();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

    @Override
    public ServerSecurityAlertPolicyImpl withExistingWorkspace(String resourceGroupName, String workspaceName) {
        this.resourceGroupName = resourceGroupName;
        this.workspaceName = workspaceName;
        return this;
    }

    @Override
    public ServerSecurityAlertPolicyImpl withState(SecurityAlertPolicyState state) {
        this.inner().withState(state);
        return this;
    }

    @Override
    public ServerSecurityAlertPolicyImpl withDisabledAlerts(List<String> disabledAlerts) {
        this.inner().withDisabledAlerts(disabledAlerts);
        return this;
    }

    @Override
    public ServerSecurityAlertPolicyImpl withEmailAccountAdmins(Boolean emailAccountAdmins) {
        this.inner().withEmailAccountAdmins(emailAccountAdmins);
        return this;
    }

    @Override
    public ServerSecurityAlertPolicyImpl withEmailAddresses(List<String> emailAddresses) {
        this.inner().withEmailAddresses(emailAddresses);
        return this;
    }

    @Override
    public ServerSecurityAlertPolicyImpl withRetentionDays(Integer retentionDays) {
        this.inner().withRetentionDays(retentionDays);
        return this;
    }

    @Override
    public ServerSecurityAlertPolicyImpl withStorageAccountAccessKey(String storageAccountAccessKey) {
        this.inner().withStorageAccountAccessKey(storageAccountAccessKey);
        return this;
    }

    @Override
    public ServerSecurityAlertPolicyImpl withStorageEndpoint(String storageEndpoint) {
        this.inner().withStorageEndpoint(storageEndpoint);
        return this;
    }

}
