/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.synapse.v2020_12_01;

import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The linked integration runtime information.
 */
public class LinkedIntegrationRuntime {
    /**
     * The name of the linked integration runtime.
     */
    @JsonProperty(value = "name", access = JsonProperty.Access.WRITE_ONLY)
    private String name;

    /**
     * The subscription ID for which the linked integration runtime belong to.
     */
    @JsonProperty(value = "subscriptionId", access = JsonProperty.Access.WRITE_ONLY)
    private String subscriptionId;

    /**
     * The name of the workspace for which the linked integration runtime
     * belong to.
     */
    @JsonProperty(value = "dataFactoryName", access = JsonProperty.Access.WRITE_ONLY)
    private String dataFactoryName;

    /**
     * The location of the workspace for which the linked integration runtime
     * belong to.
     */
    @JsonProperty(value = "dataFactoryLocation", access = JsonProperty.Access.WRITE_ONLY)
    private String dataFactoryLocation;

    /**
     * The creating time of the linked integration runtime.
     */
    @JsonProperty(value = "createTime", access = JsonProperty.Access.WRITE_ONLY)
    private DateTime createTime;

    /**
     * Get the name of the linked integration runtime.
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the subscription ID for which the linked integration runtime belong to.
     *
     * @return the subscriptionId value
     */
    public String subscriptionId() {
        return this.subscriptionId;
    }

    /**
     * Get the name of the workspace for which the linked integration runtime belong to.
     *
     * @return the dataFactoryName value
     */
    public String dataFactoryName() {
        return this.dataFactoryName;
    }

    /**
     * Get the location of the workspace for which the linked integration runtime belong to.
     *
     * @return the dataFactoryLocation value
     */
    public String dataFactoryLocation() {
        return this.dataFactoryLocation;
    }

    /**
     * Get the creating time of the linked integration runtime.
     *
     * @return the createTime value
     */
    public DateTime createTime() {
        return this.createTime;
    }

}
