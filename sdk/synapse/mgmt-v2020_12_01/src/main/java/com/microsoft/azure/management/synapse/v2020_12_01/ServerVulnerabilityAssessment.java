/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.synapse.v2020_12_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.synapse.v2020_12_01.implementation.ServerVulnerabilityAssessmentInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.synapse.v2020_12_01.implementation.SynapseManager;

/**
 * Type representing ServerVulnerabilityAssessment.
 */
public interface ServerVulnerabilityAssessment extends HasInner<ServerVulnerabilityAssessmentInner>, Indexable, Refreshable<ServerVulnerabilityAssessment>, Updatable<ServerVulnerabilityAssessment.Update>, HasManager<SynapseManager> {
    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the recurringScans value.
     */
    VulnerabilityAssessmentRecurringScansProperties recurringScans();

    /**
     * @return the storageAccountAccessKey value.
     */
    String storageAccountAccessKey();

    /**
     * @return the storageContainerPath value.
     */
    String storageContainerPath();

    /**
     * @return the storageContainerSasKey value.
     */
    String storageContainerSasKey();

    /**
     * @return the type value.
     */
    String type();

    /**
     * The entirety of the ServerVulnerabilityAssessment definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithWorkspace, DefinitionStages.WithStorageContainerPath, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of ServerVulnerabilityAssessment definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a ServerVulnerabilityAssessment definition.
         */
        interface Blank extends WithWorkspace {
        }

        /**
         * The stage of the servervulnerabilityassessment definition allowing to specify Workspace.
         */
        interface WithWorkspace {
           /**
            * Specifies resourceGroupName, workspaceName.
            * @param resourceGroupName The name of the resource group. The name is case insensitive
            * @param workspaceName The name of the workspace
            * @return the next definition stage
            */
            WithStorageContainerPath withExistingWorkspace(String resourceGroupName, String workspaceName);
        }

        /**
         * The stage of the servervulnerabilityassessment definition allowing to specify StorageContainerPath.
         */
        interface WithStorageContainerPath {
           /**
            * Specifies storageContainerPath.
            * @param storageContainerPath A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/)
            * @return the next definition stage
            */
            WithCreate withStorageContainerPath(String storageContainerPath);
        }

        /**
         * The stage of the servervulnerabilityassessment definition allowing to specify RecurringScans.
         */
        interface WithRecurringScans {
            /**
             * Specifies recurringScans.
             * @param recurringScans The recurring scans settings
             * @return the next definition stage
             */
            WithCreate withRecurringScans(VulnerabilityAssessmentRecurringScansProperties recurringScans);
        }

        /**
         * The stage of the servervulnerabilityassessment definition allowing to specify StorageAccountAccessKey.
         */
        interface WithStorageAccountAccessKey {
            /**
             * Specifies storageAccountAccessKey.
             * @param storageAccountAccessKey Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required
             * @return the next definition stage
             */
            WithCreate withStorageAccountAccessKey(String storageAccountAccessKey);
        }

        /**
         * The stage of the servervulnerabilityassessment definition allowing to specify StorageContainerSasKey.
         */
        interface WithStorageContainerSasKey {
            /**
             * Specifies storageContainerSasKey.
             * @param storageContainerSasKey A shared access signature (SAS Key) that has read and write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required
             * @return the next definition stage
             */
            WithCreate withStorageContainerSasKey(String storageContainerSasKey);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<ServerVulnerabilityAssessment>, DefinitionStages.WithRecurringScans, DefinitionStages.WithStorageAccountAccessKey, DefinitionStages.WithStorageContainerSasKey {
        }
    }
    /**
     * The template for a ServerVulnerabilityAssessment update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<ServerVulnerabilityAssessment>, UpdateStages.WithRecurringScans, UpdateStages.WithStorageAccountAccessKey, UpdateStages.WithStorageContainerSasKey {
    }

    /**
     * Grouping of ServerVulnerabilityAssessment update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the servervulnerabilityassessment update allowing to specify RecurringScans.
         */
        interface WithRecurringScans {
            /**
             * Specifies recurringScans.
             * @param recurringScans The recurring scans settings
             * @return the next update stage
             */
            Update withRecurringScans(VulnerabilityAssessmentRecurringScansProperties recurringScans);
        }

        /**
         * The stage of the servervulnerabilityassessment update allowing to specify StorageAccountAccessKey.
         */
        interface WithStorageAccountAccessKey {
            /**
             * Specifies storageAccountAccessKey.
             * @param storageAccountAccessKey Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required
             * @return the next update stage
             */
            Update withStorageAccountAccessKey(String storageAccountAccessKey);
        }

        /**
         * The stage of the servervulnerabilityassessment update allowing to specify StorageContainerSasKey.
         */
        interface WithStorageContainerSasKey {
            /**
             * Specifies storageContainerSasKey.
             * @param storageContainerSasKey A shared access signature (SAS Key) that has read and write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required
             * @return the next update stage
             */
            Update withStorageContainerSasKey(String storageContainerSasKey);
        }

    }
}
