/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.synapse.v2020_12_01;

import com.microsoft.azure.arm.collection.SupportsCreating;
import rx.Completable;
import rx.Observable;
import com.microsoft.azure.management.synapse.v2020_12_01.implementation.SqlPoolWorkloadClassifiersInner;
import com.microsoft.azure.arm.model.HasInner;

/**
 * Type representing SqlPoolWorkloadClassifiers.
 */
public interface SqlPoolWorkloadClassifiers extends SupportsCreating<WorkloadClassifier.DefinitionStages.Blank>, HasInner<SqlPoolWorkloadClassifiersInner> {
    /**
     * Get workload classifier.
     * Get a workload classifier of Sql pool's workload group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace
     * @param sqlPoolName SQL pool name
     * @param workloadGroupName The name of the workload group.
     * @param workloadClassifierName The name of the workload classifier.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<WorkloadClassifier> getAsync(String resourceGroupName, String workspaceName, String sqlPoolName, String workloadGroupName, String workloadClassifierName);

    /**
     * Sql pool's workload classifier.
     * Get list of  Sql pool's workload classifier for workload groups.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace
     * @param sqlPoolName SQL pool name
     * @param workloadGroupName The name of the workload group.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<WorkloadClassifier> listAsync(final String resourceGroupName, final String workspaceName, final String sqlPoolName, final String workloadGroupName);

    /**
     * Remove workload classifier.
     * Remove workload classifier of a Sql pool's workload group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace
     * @param sqlPoolName SQL pool name
     * @param workloadGroupName The name of the workload group.
     * @param workloadClassifierName The name of the workload classifier.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable deleteAsync(String resourceGroupName, String workspaceName, String sqlPoolName, String workloadGroupName, String workloadClassifierName);

}
