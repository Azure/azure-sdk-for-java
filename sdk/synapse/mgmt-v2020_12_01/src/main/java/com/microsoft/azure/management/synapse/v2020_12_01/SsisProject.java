/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.synapse.v2020_12_01;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Ssis project.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type", defaultImpl = SsisProject.class)
@JsonTypeName("Project")
public class SsisProject extends SsisObjectMetadata {
    /**
     * Folder id which contains project.
     */
    @JsonProperty(value = "folderId")
    private Long folderId;

    /**
     * Project version.
     */
    @JsonProperty(value = "version")
    private Long version;

    /**
     * Environment reference in project.
     */
    @JsonProperty(value = "environmentRefs")
    private List<SsisEnvironmentReference> environmentRefs;

    /**
     * Parameters in project.
     */
    @JsonProperty(value = "parameters")
    private List<SsisParameter> parameters;

    /**
     * Get folder id which contains project.
     *
     * @return the folderId value
     */
    public Long folderId() {
        return this.folderId;
    }

    /**
     * Set folder id which contains project.
     *
     * @param folderId the folderId value to set
     * @return the SsisProject object itself.
     */
    public SsisProject withFolderId(Long folderId) {
        this.folderId = folderId;
        return this;
    }

    /**
     * Get project version.
     *
     * @return the version value
     */
    public Long version() {
        return this.version;
    }

    /**
     * Set project version.
     *
     * @param version the version value to set
     * @return the SsisProject object itself.
     */
    public SsisProject withVersion(Long version) {
        this.version = version;
        return this;
    }

    /**
     * Get environment reference in project.
     *
     * @return the environmentRefs value
     */
    public List<SsisEnvironmentReference> environmentRefs() {
        return this.environmentRefs;
    }

    /**
     * Set environment reference in project.
     *
     * @param environmentRefs the environmentRefs value to set
     * @return the SsisProject object itself.
     */
    public SsisProject withEnvironmentRefs(List<SsisEnvironmentReference> environmentRefs) {
        this.environmentRefs = environmentRefs;
        return this;
    }

    /**
     * Get parameters in project.
     *
     * @return the parameters value
     */
    public List<SsisParameter> parameters() {
        return this.parameters;
    }

    /**
     * Set parameters in project.
     *
     * @param parameters the parameters value to set
     * @return the SsisProject object itself.
     */
    public SsisProject withParameters(List<SsisParameter> parameters) {
        this.parameters = parameters;
        return this;
    }

}
