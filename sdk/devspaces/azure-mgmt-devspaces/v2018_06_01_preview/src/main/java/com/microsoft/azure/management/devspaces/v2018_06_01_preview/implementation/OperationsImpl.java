/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * abc
 */

package com.microsoft.azure.management.devspaces.v2018_06_01_preview.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.devspaces.v2018_06_01_preview.Operations;
import rx.functions.Func1;
import rx.Observable;
import com.microsoft.azure.Page;
import com.microsoft.azure.management.devspaces.v2018_06_01_preview.ResourceProviderOperationDefinition;

class OperationsImpl extends WrapperImpl<OperationsInner> implements Operations {
    private final DevSpacesManager manager;

    OperationsImpl(DevSpacesManager manager) {
        super(manager.inner().operations());
        this.manager = manager;
    }

    public DevSpacesManager manager() {
        return this.manager;
    }

    @Override
    public Observable<ResourceProviderOperationDefinition> listAsync() {
        OperationsInner client = this.inner();
        return client.listAsync()
        .flatMapIterable(new Func1<Page<ResourceProviderOperationDefinitionInner>, Iterable<ResourceProviderOperationDefinitionInner>>() {
            @Override
            public Iterable<ResourceProviderOperationDefinitionInner> call(Page<ResourceProviderOperationDefinitionInner> page) {
                return page.items();
            }
        })
        .map(new Func1<ResourceProviderOperationDefinitionInner, ResourceProviderOperationDefinition>() {
            @Override
            public ResourceProviderOperationDefinition call(ResourceProviderOperationDefinitionInner inner) {
                return new ResourceProviderOperationDefinitionImpl(inner, manager());
            }
        });
    }

}
