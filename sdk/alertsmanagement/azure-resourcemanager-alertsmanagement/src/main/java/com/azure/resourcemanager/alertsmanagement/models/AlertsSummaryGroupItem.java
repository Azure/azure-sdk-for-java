// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.alertsmanagement.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Alerts summary group item.
 */
@Fluent
public final class AlertsSummaryGroupItem implements JsonSerializable<AlertsSummaryGroupItem> {
    /*
     * Value of the aggregated field
     */
    private String name;

    /*
     * Count of the aggregated field
     */
    private Long count;

    /*
     * Name of the field aggregated
     */
    private String groupedby;

    /*
     * List of the items
     */
    private List<AlertsSummaryGroupItem> values;

    /**
     * Creates an instance of AlertsSummaryGroupItem class.
     */
    public AlertsSummaryGroupItem() {
    }

    /**
     * Get the name property: Value of the aggregated field.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Value of the aggregated field.
     * 
     * @param name the name value to set.
     * @return the AlertsSummaryGroupItem object itself.
     */
    public AlertsSummaryGroupItem withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the count property: Count of the aggregated field.
     * 
     * @return the count value.
     */
    public Long count() {
        return this.count;
    }

    /**
     * Set the count property: Count of the aggregated field.
     * 
     * @param count the count value to set.
     * @return the AlertsSummaryGroupItem object itself.
     */
    public AlertsSummaryGroupItem withCount(Long count) {
        this.count = count;
        return this;
    }

    /**
     * Get the groupedby property: Name of the field aggregated.
     * 
     * @return the groupedby value.
     */
    public String groupedby() {
        return this.groupedby;
    }

    /**
     * Set the groupedby property: Name of the field aggregated.
     * 
     * @param groupedby the groupedby value to set.
     * @return the AlertsSummaryGroupItem object itself.
     */
    public AlertsSummaryGroupItem withGroupedby(String groupedby) {
        this.groupedby = groupedby;
        return this;
    }

    /**
     * Get the values property: List of the items.
     * 
     * @return the values value.
     */
    public List<AlertsSummaryGroupItem> values() {
        return this.values;
    }

    /**
     * Set the values property: List of the items.
     * 
     * @param values the values value to set.
     * @return the AlertsSummaryGroupItem object itself.
     */
    public AlertsSummaryGroupItem withValues(List<AlertsSummaryGroupItem> values) {
        this.values = values;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (values() != null) {
            values().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("name", this.name);
        jsonWriter.writeNumberField("count", this.count);
        jsonWriter.writeStringField("groupedby", this.groupedby);
        jsonWriter.writeArrayField("values", this.values, (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AlertsSummaryGroupItem from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AlertsSummaryGroupItem if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AlertsSummaryGroupItem.
     */
    public static AlertsSummaryGroupItem fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AlertsSummaryGroupItem deserializedAlertsSummaryGroupItem = new AlertsSummaryGroupItem();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("name".equals(fieldName)) {
                    deserializedAlertsSummaryGroupItem.name = reader.getString();
                } else if ("count".equals(fieldName)) {
                    deserializedAlertsSummaryGroupItem.count = reader.getNullable(JsonReader::getLong);
                } else if ("groupedby".equals(fieldName)) {
                    deserializedAlertsSummaryGroupItem.groupedby = reader.getString();
                } else if ("values".equals(fieldName)) {
                    List<AlertsSummaryGroupItem> values
                        = reader.readArray(reader1 -> AlertsSummaryGroupItem.fromJson(reader1));
                    deserializedAlertsSummaryGroupItem.values = values;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAlertsSummaryGroupItem;
        });
    }
}
