// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.alertsmanagement.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.Map;

/**
 * An alert action. Only relevant for alerts.
 */
@Fluent
public final class PrometheusRuleGroupAction implements JsonSerializable<PrometheusRuleGroupAction> {
    /*
     * The resource id of the action group to use.
     */
    private String actionGroupId;

    /*
     * The properties of an action group object.
     */
    private Map<String, String> actionProperties;

    /**
     * Creates an instance of PrometheusRuleGroupAction class.
     */
    public PrometheusRuleGroupAction() {
    }

    /**
     * Get the actionGroupId property: The resource id of the action group to use.
     * 
     * @return the actionGroupId value.
     */
    public String actionGroupId() {
        return this.actionGroupId;
    }

    /**
     * Set the actionGroupId property: The resource id of the action group to use.
     * 
     * @param actionGroupId the actionGroupId value to set.
     * @return the PrometheusRuleGroupAction object itself.
     */
    public PrometheusRuleGroupAction withActionGroupId(String actionGroupId) {
        this.actionGroupId = actionGroupId;
        return this;
    }

    /**
     * Get the actionProperties property: The properties of an action group object.
     * 
     * @return the actionProperties value.
     */
    public Map<String, String> actionProperties() {
        return this.actionProperties;
    }

    /**
     * Set the actionProperties property: The properties of an action group object.
     * 
     * @param actionProperties the actionProperties value to set.
     * @return the PrometheusRuleGroupAction object itself.
     */
    public PrometheusRuleGroupAction withActionProperties(Map<String, String> actionProperties) {
        this.actionProperties = actionProperties;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("actionGroupId", this.actionGroupId);
        jsonWriter.writeMapField("actionProperties", this.actionProperties,
            (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of PrometheusRuleGroupAction from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of PrometheusRuleGroupAction if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the PrometheusRuleGroupAction.
     */
    public static PrometheusRuleGroupAction fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            PrometheusRuleGroupAction deserializedPrometheusRuleGroupAction = new PrometheusRuleGroupAction();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("actionGroupId".equals(fieldName)) {
                    deserializedPrometheusRuleGroupAction.actionGroupId = reader.getString();
                } else if ("actionProperties".equals(fieldName)) {
                    Map<String, String> actionProperties = reader.readMap(reader1 -> reader1.getString());
                    deserializedPrometheusRuleGroupAction.actionProperties = actionProperties;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedPrometheusRuleGroupAction;
        });
    }
}
