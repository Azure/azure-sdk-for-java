// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.alertsmanagement.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Properties of the smartGroup modification item.
 */
@Fluent
public final class SmartGroupModificationProperties implements JsonSerializable<SmartGroupModificationProperties> {
    /*
     * Unique Id of the smartGroup for which the history is being retrieved
     */
    private String smartGroupId;

    /*
     * Modification details
     */
    private List<SmartGroupModificationItem> modifications;

    /*
     * URL to fetch the next set of results.
     */
    private String nextLink;

    /**
     * Creates an instance of SmartGroupModificationProperties class.
     */
    public SmartGroupModificationProperties() {
    }

    /**
     * Get the smartGroupId property: Unique Id of the smartGroup for which the history is being retrieved.
     * 
     * @return the smartGroupId value.
     */
    public String smartGroupId() {
        return this.smartGroupId;
    }

    /**
     * Get the modifications property: Modification details.
     * 
     * @return the modifications value.
     */
    public List<SmartGroupModificationItem> modifications() {
        return this.modifications;
    }

    /**
     * Set the modifications property: Modification details.
     * 
     * @param modifications the modifications value to set.
     * @return the SmartGroupModificationProperties object itself.
     */
    public SmartGroupModificationProperties withModifications(List<SmartGroupModificationItem> modifications) {
        this.modifications = modifications;
        return this;
    }

    /**
     * Get the nextLink property: URL to fetch the next set of results.
     * 
     * @return the nextLink value.
     */
    public String nextLink() {
        return this.nextLink;
    }

    /**
     * Set the nextLink property: URL to fetch the next set of results.
     * 
     * @param nextLink the nextLink value to set.
     * @return the SmartGroupModificationProperties object itself.
     */
    public SmartGroupModificationProperties withNextLink(String nextLink) {
        this.nextLink = nextLink;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (modifications() != null) {
            modifications().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("modifications", this.modifications, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("nextLink", this.nextLink);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SmartGroupModificationProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SmartGroupModificationProperties if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SmartGroupModificationProperties.
     */
    public static SmartGroupModificationProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SmartGroupModificationProperties deserializedSmartGroupModificationProperties
                = new SmartGroupModificationProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("smartGroupId".equals(fieldName)) {
                    deserializedSmartGroupModificationProperties.smartGroupId = reader.getString();
                } else if ("modifications".equals(fieldName)) {
                    List<SmartGroupModificationItem> modifications
                        = reader.readArray(reader1 -> SmartGroupModificationItem.fromJson(reader1));
                    deserializedSmartGroupModificationProperties.modifications = modifications;
                } else if ("nextLink".equals(fieldName)) {
                    deserializedSmartGroupModificationProperties.nextLink = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSmartGroupModificationProperties;
        });
    }
}
