// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.alertsmanagement.models;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.alertsmanagement.fluent.models.PrometheusRuleGroupResourceInner;
import java.util.List;
import java.util.Map;

/**
 * An immutable client-side representation of PrometheusRuleGroupResource.
 */
public interface PrometheusRuleGroupResource {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     * 
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     * 
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the description property: the description of the Prometheus rule group that will be included in the alert
     * email.
     * 
     * @return the description value.
     */
    String description();

    /**
     * Gets the enabled property: the flag that indicates whether the Prometheus rule group is enabled.
     * 
     * @return the enabled value.
     */
    Boolean enabled();

    /**
     * Gets the clusterName property: the cluster name of the rule group evaluation.
     * 
     * @return the clusterName value.
     */
    String clusterName();

    /**
     * Gets the scopes property: the list of resource id's that this rule group is scoped to.
     * 
     * @return the scopes value.
     */
    List<String> scopes();

    /**
     * Gets the interval property: the interval in which to run the Prometheus rule group represented in ISO 8601
     * duration format. Should be between 1 and 15 minutes.
     * 
     * @return the interval value.
     */
    String interval();

    /**
     * Gets the rules property: defines the rules in the Prometheus rule group.
     * 
     * @return the rules value.
     */
    List<PrometheusRule> rules();

    /**
     * Gets the region of the resource.
     * 
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     * 
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.alertsmanagement.fluent.models.PrometheusRuleGroupResourceInner object.
     * 
     * @return the inner object.
     */
    PrometheusRuleGroupResourceInner innerModel();

    /**
     * The entirety of the PrometheusRuleGroupResource definition.
     */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithLocation, DefinitionStages.WithResourceGroup,
        DefinitionStages.WithScopes, DefinitionStages.WithRules, DefinitionStages.WithCreate {
    }

    /**
     * The PrometheusRuleGroupResource definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the PrometheusRuleGroupResource definition.
         */
        interface Blank extends WithLocation {
        }

        /**
         * The stage of the PrometheusRuleGroupResource definition allowing to specify location.
         */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }

        /**
         * The stage of the PrometheusRuleGroupResource definition allowing to specify parent resource.
         */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @return the next definition stage.
             */
            WithScopes withExistingResourceGroup(String resourceGroupName);
        }

        /**
         * The stage of the PrometheusRuleGroupResource definition allowing to specify scopes.
         */
        interface WithScopes {
            /**
             * Specifies the scopes property: the list of resource id's that this rule group is scoped to..
             * 
             * @param scopes the list of resource id's that this rule group is scoped to.
             * @return the next definition stage.
             */
            WithRules withScopes(List<String> scopes);
        }

        /**
         * The stage of the PrometheusRuleGroupResource definition allowing to specify rules.
         */
        interface WithRules {
            /**
             * Specifies the rules property: defines the rules in the Prometheus rule group..
             * 
             * @param rules defines the rules in the Prometheus rule group.
             * @return the next definition stage.
             */
            WithCreate withRules(List<PrometheusRule> rules);
        }

        /**
         * The stage of the PrometheusRuleGroupResource definition which contains all the minimum required properties
         * for the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithTags, DefinitionStages.WithDescription,
            DefinitionStages.WithEnabled, DefinitionStages.WithClusterName, DefinitionStages.WithInterval {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            PrometheusRuleGroupResource create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            PrometheusRuleGroupResource create(Context context);
        }

        /**
         * The stage of the PrometheusRuleGroupResource definition allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the PrometheusRuleGroupResource definition allowing to specify description.
         */
        interface WithDescription {
            /**
             * Specifies the description property: the description of the Prometheus rule group that will be included in
             * the alert email..
             * 
             * @param description the description of the Prometheus rule group that will be included in the alert email.
             * @return the next definition stage.
             */
            WithCreate withDescription(String description);
        }

        /**
         * The stage of the PrometheusRuleGroupResource definition allowing to specify enabled.
         */
        interface WithEnabled {
            /**
             * Specifies the enabled property: the flag that indicates whether the Prometheus rule group is enabled..
             * 
             * @param enabled the flag that indicates whether the Prometheus rule group is enabled.
             * @return the next definition stage.
             */
            WithCreate withEnabled(Boolean enabled);
        }

        /**
         * The stage of the PrometheusRuleGroupResource definition allowing to specify clusterName.
         */
        interface WithClusterName {
            /**
             * Specifies the clusterName property: the cluster name of the rule group evaluation..
             * 
             * @param clusterName the cluster name of the rule group evaluation.
             * @return the next definition stage.
             */
            WithCreate withClusterName(String clusterName);
        }

        /**
         * The stage of the PrometheusRuleGroupResource definition allowing to specify interval.
         */
        interface WithInterval {
            /**
             * Specifies the interval property: the interval in which to run the Prometheus rule group represented in
             * ISO 8601 duration format. Should be between 1 and 15 minutes.
             * 
             * @param interval the interval in which to run the Prometheus rule group represented in ISO 8601 duration
             * format. Should be between 1 and 15 minutes.
             * @return the next definition stage.
             */
            WithCreate withInterval(String interval);
        }
    }

    /**
     * Begins update for the PrometheusRuleGroupResource resource.
     * 
     * @return the stage of resource update.
     */
    PrometheusRuleGroupResource.Update update();

    /**
     * The template for PrometheusRuleGroupResource update.
     */
    interface Update extends UpdateStages.WithTags, UpdateStages.WithProperties {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        PrometheusRuleGroupResource apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        PrometheusRuleGroupResource apply(Context context);
    }

    /**
     * The PrometheusRuleGroupResource update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the PrometheusRuleGroupResource update allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags.
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }

        /**
         * The stage of the PrometheusRuleGroupResource update allowing to specify properties.
         */
        interface WithProperties {
            /**
             * Specifies the properties property: The properties property..
             * 
             * @param properties The properties property.
             * @return the next definition stage.
             */
            Update withProperties(PrometheusRuleGroupResourcePatchProperties properties);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    PrometheusRuleGroupResource refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    PrometheusRuleGroupResource refresh(Context context);
}
