// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.alertsmanagement.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.alertsmanagement.fluent.models.PrometheusRuleGroupResourceInner;
import com.azure.resourcemanager.alertsmanagement.models.PrometheusRule;
import com.azure.resourcemanager.alertsmanagement.models.PrometheusRuleGroupResource;
import com.azure.resourcemanager.alertsmanagement.models.PrometheusRuleGroupResourcePatch;
import com.azure.resourcemanager.alertsmanagement.models.PrometheusRuleGroupResourcePatchProperties;
import java.util.Collections;
import java.util.List;
import java.util.Map;

public final class PrometheusRuleGroupResourceImpl
    implements PrometheusRuleGroupResource, PrometheusRuleGroupResource.Definition, PrometheusRuleGroupResource.Update {
    private PrometheusRuleGroupResourceInner innerObject;

    private final com.azure.resourcemanager.alertsmanagement.AlertsManagementManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String description() {
        return this.innerModel().description();
    }

    public Boolean enabled() {
        return this.innerModel().enabled();
    }

    public String clusterName() {
        return this.innerModel().clusterName();
    }

    public List<String> scopes() {
        List<String> inner = this.innerModel().scopes();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String interval() {
        return this.innerModel().interval();
    }

    public List<PrometheusRule> rules() {
        List<PrometheusRule> inner = this.innerModel().rules();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public PrometheusRuleGroupResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.alertsmanagement.AlertsManagementManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String ruleGroupName;

    private PrometheusRuleGroupResourcePatch updateParameters;

    public PrometheusRuleGroupResourceImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public PrometheusRuleGroupResource create() {
        this.innerObject = serviceManager.serviceClient()
            .getPrometheusRuleGroups()
            .createOrUpdateWithResponse(resourceGroupName, ruleGroupName, this.innerModel(), Context.NONE)
            .getValue();
        return this;
    }

    public PrometheusRuleGroupResource create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getPrometheusRuleGroups()
            .createOrUpdateWithResponse(resourceGroupName, ruleGroupName, this.innerModel(), context)
            .getValue();
        return this;
    }

    PrometheusRuleGroupResourceImpl(String name,
        com.azure.resourcemanager.alertsmanagement.AlertsManagementManager serviceManager) {
        this.innerObject = new PrometheusRuleGroupResourceInner();
        this.serviceManager = serviceManager;
        this.ruleGroupName = name;
    }

    public PrometheusRuleGroupResourceImpl update() {
        this.updateParameters = new PrometheusRuleGroupResourcePatch();
        return this;
    }

    public PrometheusRuleGroupResource apply() {
        this.innerObject = serviceManager.serviceClient()
            .getPrometheusRuleGroups()
            .updateWithResponse(resourceGroupName, ruleGroupName, updateParameters, Context.NONE)
            .getValue();
        return this;
    }

    public PrometheusRuleGroupResource apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getPrometheusRuleGroups()
            .updateWithResponse(resourceGroupName, ruleGroupName, updateParameters, context)
            .getValue();
        return this;
    }

    PrometheusRuleGroupResourceImpl(PrometheusRuleGroupResourceInner innerObject,
        com.azure.resourcemanager.alertsmanagement.AlertsManagementManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.ruleGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "prometheusRuleGroups");
    }

    public PrometheusRuleGroupResource refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getPrometheusRuleGroups()
            .getByResourceGroupWithResponse(resourceGroupName, ruleGroupName, Context.NONE)
            .getValue();
        return this;
    }

    public PrometheusRuleGroupResource refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getPrometheusRuleGroups()
            .getByResourceGroupWithResponse(resourceGroupName, ruleGroupName, context)
            .getValue();
        return this;
    }

    public PrometheusRuleGroupResourceImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public PrometheusRuleGroupResourceImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public PrometheusRuleGroupResourceImpl withScopes(List<String> scopes) {
        this.innerModel().withScopes(scopes);
        return this;
    }

    public PrometheusRuleGroupResourceImpl withRules(List<PrometheusRule> rules) {
        this.innerModel().withRules(rules);
        return this;
    }

    public PrometheusRuleGroupResourceImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateParameters.withTags(tags);
            return this;
        }
    }

    public PrometheusRuleGroupResourceImpl withDescription(String description) {
        this.innerModel().withDescription(description);
        return this;
    }

    public PrometheusRuleGroupResourceImpl withEnabled(Boolean enabled) {
        this.innerModel().withEnabled(enabled);
        return this;
    }

    public PrometheusRuleGroupResourceImpl withClusterName(String clusterName) {
        this.innerModel().withClusterName(clusterName);
        return this;
    }

    public PrometheusRuleGroupResourceImpl withInterval(String interval) {
        this.innerModel().withInterval(interval);
        return this;
    }

    public PrometheusRuleGroupResourceImpl withProperties(PrometheusRuleGroupResourcePatchProperties properties) {
        this.updateParameters.withProperties(properties);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
