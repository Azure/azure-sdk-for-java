// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.alertsmanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.alertsmanagement.fluent.models.PrometheusRuleGroupResourceInner;
import com.azure.resourcemanager.alertsmanagement.models.PrometheusRule;
import com.azure.resourcemanager.alertsmanagement.models.PrometheusRuleGroupAction;
import com.azure.resourcemanager.alertsmanagement.models.PrometheusRuleResolveConfiguration;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class PrometheusRuleGroupResourceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrometheusRuleGroupResourceInner model = BinaryData.fromString(
            "{\"properties\":{\"description\":\"bckhsmtxpsi\",\"enabled\":true,\"clusterName\":\"hvpesapskrdqm\",\"scopes\":[\"jdhtldwkyzxu\",\"tkncwsc\"],\"interval\":\"vlxotogtwrupqsx\",\"rules\":[{\"record\":\"i\",\"alert\":\"kvceoveilovnotyf\",\"enabled\":true,\"expression\":\"njbkcnxdhbttkph\",\"severity\":1501927720,\"for\":\"vjtoqnermclfp\",\"labels\":{\"azqugxywpmueefj\":\"oxuscrpabgyepsbj\",\"dsuyonobgla\":\"wfqkquj\"},\"annotations\":{\"udxytlmoyrx\":\"xtccmg\",\"qj\":\"wfudwpzntxhdzhl\",\"bkyvp\":\"hckfrlhrx\"},\"actions\":[{\"actionGroupId\":\"uzbpzkafku\",\"actionProperties\":{\"ehhseyvjusrts\":\"rnwb\",\"mx\":\"hspkdeemao\"}},{\"actionGroupId\":\"kv\",\"actionProperties\":{\"ahaquh\":\"lmqkrhahvlj\",\"aex\":\"dhmdua\"}},{\"actionGroupId\":\"vfadmws\",\"actionProperties\":{\"gomz\":\"gvxp\"}},{\"actionGroupId\":\"misgwbnb\",\"actionProperties\":{\"urqhaka\":\"dawkzbali\",\"xcug\":\"hashsfwxosow\",\"ovbvmeueciv\":\"cjooxdjebwpucwwf\",\"otwmcdyt\":\"hzceuojgjrwjue\"}}],\"resolveConfiguration\":{\"autoResolved\":false,\"timeToResolve\":\"xnrj\"}}]},\"location\":\"gqwgxhniskxfbkp\",\"tags\":{\"l\":\"klwndnhjdauwhv\",\"xujznbmpowu\":\"zbtd\"},\"id\":\"przqlveu\",\"name\":\"lupj\",\"type\":\"khfxobbcswsrt\"}")
            .toObject(PrometheusRuleGroupResourceInner.class);
        Assertions.assertEquals("gqwgxhniskxfbkp", model.location());
        Assertions.assertEquals("klwndnhjdauwhv", model.tags().get("l"));
        Assertions.assertEquals("bckhsmtxpsi", model.description());
        Assertions.assertEquals(true, model.enabled());
        Assertions.assertEquals("hvpesapskrdqm", model.clusterName());
        Assertions.assertEquals("jdhtldwkyzxu", model.scopes().get(0));
        Assertions.assertEquals("vlxotogtwrupqsx", model.interval());
        Assertions.assertEquals("i", model.rules().get(0).record());
        Assertions.assertEquals("kvceoveilovnotyf", model.rules().get(0).alert());
        Assertions.assertEquals(true, model.rules().get(0).enabled());
        Assertions.assertEquals("njbkcnxdhbttkph", model.rules().get(0).expression());
        Assertions.assertEquals(1501927720, model.rules().get(0).severity());
        Assertions.assertEquals("vjtoqnermclfp", model.rules().get(0).forProperty());
        Assertions.assertEquals("oxuscrpabgyepsbj", model.rules().get(0).labels().get("azqugxywpmueefj"));
        Assertions.assertEquals("xtccmg", model.rules().get(0).annotations().get("udxytlmoyrx"));
        Assertions.assertEquals("uzbpzkafku", model.rules().get(0).actions().get(0).actionGroupId());
        Assertions.assertEquals("rnwb", model.rules().get(0).actions().get(0).actionProperties().get("ehhseyvjusrts"));
        Assertions.assertEquals(false, model.rules().get(0).resolveConfiguration().autoResolved());
        Assertions.assertEquals("xnrj", model.rules().get(0).resolveConfiguration().timeToResolve());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrometheusRuleGroupResourceInner model = new PrometheusRuleGroupResourceInner().withLocation("gqwgxhniskxfbkp")
            .withTags(mapOf("l", "klwndnhjdauwhv", "xujznbmpowu", "zbtd"))
            .withDescription("bckhsmtxpsi")
            .withEnabled(true)
            .withClusterName("hvpesapskrdqm")
            .withScopes(Arrays.asList("jdhtldwkyzxu", "tkncwsc"))
            .withInterval("vlxotogtwrupqsx")
            .withRules(Arrays.asList(new PrometheusRule().withRecord("i")
                .withAlert("kvceoveilovnotyf")
                .withEnabled(true)
                .withExpression("njbkcnxdhbttkph")
                .withSeverity(1501927720)
                .withForProperty("vjtoqnermclfp")
                .withLabels(mapOf("azqugxywpmueefj", "oxuscrpabgyepsbj", "dsuyonobgla", "wfqkquj"))
                .withAnnotations(mapOf("udxytlmoyrx", "xtccmg", "qj", "wfudwpzntxhdzhl", "bkyvp", "hckfrlhrx"))
                .withActions(Arrays.asList(
                    new PrometheusRuleGroupAction().withActionGroupId("uzbpzkafku")
                        .withActionProperties(mapOf("ehhseyvjusrts", "rnwb", "mx", "hspkdeemao")),
                    new PrometheusRuleGroupAction().withActionGroupId("kv")
                        .withActionProperties(mapOf("ahaquh", "lmqkrhahvlj", "aex", "dhmdua")),
                    new PrometheusRuleGroupAction().withActionGroupId("vfadmws")
                        .withActionProperties(mapOf("gomz", "gvxp")),
                    new PrometheusRuleGroupAction().withActionGroupId("misgwbnb")
                        .withActionProperties(mapOf("urqhaka", "dawkzbali", "xcug", "hashsfwxosow", "ovbvmeueciv",
                            "cjooxdjebwpucwwf", "otwmcdyt", "hzceuojgjrwjue"))))
                .withResolveConfiguration(
                    new PrometheusRuleResolveConfiguration().withAutoResolved(false).withTimeToResolve("xnrj"))));
        model = BinaryData.fromObject(model).toObject(PrometheusRuleGroupResourceInner.class);
        Assertions.assertEquals("gqwgxhniskxfbkp", model.location());
        Assertions.assertEquals("klwndnhjdauwhv", model.tags().get("l"));
        Assertions.assertEquals("bckhsmtxpsi", model.description());
        Assertions.assertEquals(true, model.enabled());
        Assertions.assertEquals("hvpesapskrdqm", model.clusterName());
        Assertions.assertEquals("jdhtldwkyzxu", model.scopes().get(0));
        Assertions.assertEquals("vlxotogtwrupqsx", model.interval());
        Assertions.assertEquals("i", model.rules().get(0).record());
        Assertions.assertEquals("kvceoveilovnotyf", model.rules().get(0).alert());
        Assertions.assertEquals(true, model.rules().get(0).enabled());
        Assertions.assertEquals("njbkcnxdhbttkph", model.rules().get(0).expression());
        Assertions.assertEquals(1501927720, model.rules().get(0).severity());
        Assertions.assertEquals("vjtoqnermclfp", model.rules().get(0).forProperty());
        Assertions.assertEquals("oxuscrpabgyepsbj", model.rules().get(0).labels().get("azqugxywpmueefj"));
        Assertions.assertEquals("xtccmg", model.rules().get(0).annotations().get("udxytlmoyrx"));
        Assertions.assertEquals("uzbpzkafku", model.rules().get(0).actions().get(0).actionGroupId());
        Assertions.assertEquals("rnwb", model.rules().get(0).actions().get(0).actionProperties().get("ehhseyvjusrts"));
        Assertions.assertEquals(false, model.rules().get(0).resolveConfiguration().autoResolved());
        Assertions.assertEquals("xnrj", model.rules().get(0).resolveConfiguration().timeToResolve());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
