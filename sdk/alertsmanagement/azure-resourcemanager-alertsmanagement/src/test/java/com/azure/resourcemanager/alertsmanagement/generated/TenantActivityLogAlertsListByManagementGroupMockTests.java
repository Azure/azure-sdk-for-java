// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.alertsmanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.alertsmanagement.AlertsManagementManager;
import com.azure.resourcemanager.alertsmanagement.models.TenantActivityLogAlertResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class TenantActivityLogAlertsListByManagementGroupMockTests {
    @Test
    public void testListByManagementGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"tenantScope\":\"dmvxadq\",\"scopes\":[\"rgnawbabgfbk\",\"yjmfczlfsyqkfr\",\"zgowox\",\"mj\"],\"condition\":{\"allOf\":[{\"anyOf\":[{}],\"field\":\"nyq\",\"equals\":\"hlusrvxisi\",\"containsAny\":[\"eagbjqvl\",\"umyw\",\"ashxgonoyjfqi\",\"ubyzn\"]},{\"anyOf\":[{}],\"field\":\"ke\",\"equals\":\"gv\",\"containsAny\":[\"m\"]},{\"anyOf\":[{},{},{}],\"field\":\"ujlyegq\",\"equals\":\"nigflqqbtnyj\",\"containsAny\":[\"xdb\",\"vabm\",\"msxbaevwjcnkott\"]}]},\"actions\":{\"actionGroups\":[{\"actionGroupId\":\"hvajmailfemjjzak\",\"webhookProperties\":{\"cm\":\"iqullqxbdmvr\",\"rkadjfynnfmuiiir\":\"erndbrnyeofltfnn\"},\"actionProperties\":{\"iutgnjizbeewoiy\":\"ohykfkxbbcbrw\",\"uyrsrziuctix\":\"rvzb\"}},{\"actionGroupId\":\"bdsuifr\",\"webhookProperties\":{\"parybjufpt\":\"aapezkiswqjmdghs\",\"daswvpp\":\"jczjnciuiyqv\",\"rr\":\"sqqzlgcndhz\",\"uww\":\"cfsrhkhgsn\"},\"actionProperties\":{\"xlb\":\"hefsb\",\"wpfsuqtaaz\":\"xomeikjclwzacn\",\"ezxlhdjzqdca\":\"qbxyxoyfpuqqi\"}},{\"actionGroupId\":\"wvpsoz\",\"webhookProperties\":{\"rz\":\"hjriyb\"},\"actionProperties\":{\"fnmxa\":\"nxwdvwnjkg\"}},{\"actionGroupId\":\"rsqftib\",\"webhookProperties\":{\"rfqjpnqnoo\":\"buyvp\",\"rexkxbhxvucn\":\"sbede\",\"ajsvk\":\"lgmnhjevdyzn\"},\"actionProperties\":{\"xlqfh\":\"qozzkivyhjrliizj\",\"solronqqlm\":\"fkwa\",\"hvuqbo\":\"nlqxsjxtele\"}}]},\"enabled\":false,\"description\":\"zqocarku\"},\"location\":\"lbcnndt\",\"tags\":{\"ckze\":\"awqytllhdyzm\",\"mxgaabjkdtfohfao\":\"nxakckyw\"},\"id\":\"zvkiwrsiwdy\",\"name\":\"quryk\",\"type\":\"rra\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AlertsManagementManager manager = AlertsManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<TenantActivityLogAlertResource> response
            = manager.tenantActivityLogAlerts().listByManagementGroup("djsllfr", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("lbcnndt", response.iterator().next().location());
        Assertions.assertEquals("awqytllhdyzm", response.iterator().next().tags().get("ckze"));
        Assertions.assertEquals("dmvxadq", response.iterator().next().tenantScope());
        Assertions.assertEquals("rgnawbabgfbk", response.iterator().next().scopes().get(0));
        Assertions.assertEquals("nyq", response.iterator().next().condition().allOf().get(0).field());
        Assertions.assertEquals("hlusrvxisi", response.iterator().next().condition().allOf().get(0).equals());
        Assertions.assertEquals("eagbjqvl", response.iterator().next().condition().allOf().get(0).containsAny().get(0));
        Assertions.assertEquals("hvajmailfemjjzak",
            response.iterator().next().actions().actionGroups().get(0).actionGroupId());
        Assertions.assertEquals("iqullqxbdmvr",
            response.iterator().next().actions().actionGroups().get(0).webhookProperties().get("cm"));
        Assertions.assertEquals("ohykfkxbbcbrw",
            response.iterator().next().actions().actionGroups().get(0).actionProperties().get("iutgnjizbeewoiy"));
        Assertions.assertEquals(false, response.iterator().next().enabled());
        Assertions.assertEquals("zqocarku", response.iterator().next().description());
    }
}
