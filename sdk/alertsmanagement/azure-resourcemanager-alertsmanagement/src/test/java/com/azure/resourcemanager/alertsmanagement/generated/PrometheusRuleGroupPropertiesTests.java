// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.alertsmanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.alertsmanagement.fluent.models.PrometheusRuleGroupProperties;
import com.azure.resourcemanager.alertsmanagement.models.PrometheusRule;
import com.azure.resourcemanager.alertsmanagement.models.PrometheusRuleGroupAction;
import com.azure.resourcemanager.alertsmanagement.models.PrometheusRuleResolveConfiguration;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class PrometheusRuleGroupPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrometheusRuleGroupProperties model = BinaryData.fromString(
            "{\"description\":\"iplrbpbewtghfgb\",\"enabled\":false,\"clusterName\":\"xzvlvqhjkbegib\",\"scopes\":[\"mxiebw\",\"aloayqcgwrtzju\",\"gwyzm\",\"txon\"],\"interval\":\"ts\",\"rules\":[{\"record\":\"cbpwxqpsrknft\",\"alert\":\"vriuhprwmdyvx\",\"enabled\":true,\"expression\":\"yriwwroyqb\",\"severity\":1717005830,\"for\":\"cqibycnojv\",\"labels\":{\"qsgzvahapj\":\"e\",\"zlmwlxkvugfhz\":\"zhpvgqzcjrvxd\",\"hnnpr\":\"vawjvzunlu\",\"ultskzbbtdz\":\"xipeilpjzuaejx\"},\"annotations\":{\"kgpwoz\":\"e\",\"yofd\":\"hkfpbs\",\"dttouwaboekqvkel\":\"luu\",\"xwyjsflhhc\":\"smv\"},\"actions\":[{\"actionGroupId\":\"jixisxyawjoyaqcs\",\"actionProperties\":{\"zyexzn\":\"pkii\",\"bnxknalaulppg\":\"lixhnrztfol\",\"gvpgy\":\"dtpnapnyiropuhp\",\"n\":\"gqgitxmedjvcsl\"}},{\"actionGroupId\":\"wncwzzhxgktrmg\",\"actionProperties\":{\"fqbuaceopzf\":\"apkteoellwptfdyg\",\"lzdahzxctobgbkdm\":\"rhhuaopppcqeqx\",\"grcfb\":\"izpost\"}},{\"actionGroupId\":\"rmfqjhhkxbpvj\",\"actionProperties\":{\"j\":\"hx\",\"u\":\"n\"}}],\"resolveConfiguration\":{\"autoResolved\":true,\"timeToResolve\":\"tswb\"}},{\"record\":\"zvszj\",\"alert\":\"uvjfdxxive\",\"enabled\":false,\"expression\":\"cqaqtdoqmcbx\",\"severity\":1289805860,\"for\":\"yslqbhsfx\",\"labels\":{\"wfbkrvrns\":\"ytkblmpew\"},\"annotations\":{\"ohxcrsbfova\":\"q\",\"sub\":\"rruvwbhsq\",\"rxbpyb\":\"gjb\",\"twss\":\"rfbjf\"},\"actions\":[{\"actionGroupId\":\"pvjzbe\",\"actionProperties\":{\"uoujmkcjhwqy\":\"zznfqqnvwpmqta\"}},{\"actionGroupId\":\"r\",\"actionProperties\":{\"wgdrjervnaenqp\":\"wj\"}},{\"actionGroupId\":\"indoygmifthnzd\",\"actionProperties\":{\"nayqi\":\"l\"}}],\"resolveConfiguration\":{\"autoResolved\":true,\"timeToResolve\":\"havhqlkthumaqolb\"}},{\"record\":\"cdui\",\"alert\":\"tgccymvaolpss\",\"enabled\":true,\"expression\":\"fmmdnbbg\",\"severity\":734868343,\"for\":\"wiydmcwyhzdxssad\",\"labels\":{\"dvxzbncblylpst\":\"nvdfznuda\",\"rsc\":\"bhhxsrzdzuc\"},\"annotations\":{\"wjmy\":\"nevf\"},\"actions\":[{\"actionGroupId\":\"slswtm\",\"actionProperties\":{\"yqsemwa\":\"iofz\",\"tshhszhedp\":\"n\",\"k\":\"vwiwubmwmbesld\"}},{\"actionGroupId\":\"tppjflcx\",\"actionProperties\":{\"qqkdltfzxmhhvhgu\":\"okonzmnsikvmkqz\",\"xtibqdxbxwakbog\":\"eodkwobda\",\"iplbpodxunkbebxm\":\"xndlkzgxhu\"}}],\"resolveConfiguration\":{\"autoResolved\":false,\"timeToResolve\":\"twlrbqt\"}},{\"record\":\"ievseotgqrllt\",\"alert\":\"wlauwzizxbmpg\",\"enabled\":true,\"expression\":\"fuzmuvpbtt\",\"severity\":1773574052,\"for\":\"rp\",\"labels\":{\"fgohdneuelfphs\":\"bmnzbtbhjpgl\",\"v\":\"yhtozfikdowwqu\",\"lvithhqzonosgg\":\"zx\",\"ljuti\":\"hcohfwdsjnk\"},\"annotations\":{\"railvpnppfuf\":\"acffgdkzzewkfvhq\"},\"actions\":[{\"actionGroupId\":\"mh\",\"actionProperties\":{\"wqapnedgfbcvk\":\"yjrxsagafcnih\",\"pkeqdcvdrhvoo\":\"vq\",\"dopcjwvnh\":\"sotbob\",\"mgxcxrslpm\":\"ld\"}},{\"actionGroupId\":\"wuoegrpk\",\"actionProperties\":{\"pdggkzzlvm\":\"niyqslui\",\"fvmwy\":\"mpaxmodfvuefywsb\",\"yzvqt\":\"rfouyftaakcpw\"}},{\"actionGroupId\":\"ubex\",\"actionProperties\":{\"mquxvypo\":\"ksmond\",\"smocmbq\":\"gkopkwhojvpajqgx\"}}],\"resolveConfiguration\":{\"autoResolved\":true,\"timeToResolve\":\"cxozapvhelxp\"}}]}")
            .toObject(PrometheusRuleGroupProperties.class);
        Assertions.assertEquals("iplrbpbewtghfgb", model.description());
        Assertions.assertEquals(false, model.enabled());
        Assertions.assertEquals("xzvlvqhjkbegib", model.clusterName());
        Assertions.assertEquals("mxiebw", model.scopes().get(0));
        Assertions.assertEquals("ts", model.interval());
        Assertions.assertEquals("cbpwxqpsrknft", model.rules().get(0).record());
        Assertions.assertEquals("vriuhprwmdyvx", model.rules().get(0).alert());
        Assertions.assertEquals(true, model.rules().get(0).enabled());
        Assertions.assertEquals("yriwwroyqb", model.rules().get(0).expression());
        Assertions.assertEquals(1717005830, model.rules().get(0).severity());
        Assertions.assertEquals("cqibycnojv", model.rules().get(0).forProperty());
        Assertions.assertEquals("e", model.rules().get(0).labels().get("qsgzvahapj"));
        Assertions.assertEquals("e", model.rules().get(0).annotations().get("kgpwoz"));
        Assertions.assertEquals("jixisxyawjoyaqcs", model.rules().get(0).actions().get(0).actionGroupId());
        Assertions.assertEquals("pkii", model.rules().get(0).actions().get(0).actionProperties().get("zyexzn"));
        Assertions.assertEquals(true, model.rules().get(0).resolveConfiguration().autoResolved());
        Assertions.assertEquals("tswb", model.rules().get(0).resolveConfiguration().timeToResolve());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrometheusRuleGroupProperties model = new PrometheusRuleGroupProperties().withDescription("iplrbpbewtghfgb")
            .withEnabled(false)
            .withClusterName("xzvlvqhjkbegib")
            .withScopes(Arrays.asList("mxiebw", "aloayqcgwrtzju", "gwyzm", "txon"))
            .withInterval("ts")
            .withRules(Arrays.asList(
                new PrometheusRule().withRecord("cbpwxqpsrknft")
                    .withAlert("vriuhprwmdyvx")
                    .withEnabled(true)
                    .withExpression("yriwwroyqb")
                    .withSeverity(1717005830)
                    .withForProperty("cqibycnojv")
                    .withLabels(mapOf("qsgzvahapj", "e", "zlmwlxkvugfhz", "zhpvgqzcjrvxd", "hnnpr", "vawjvzunlu",
                        "ultskzbbtdz", "xipeilpjzuaejx"))
                    .withAnnotations(
                        mapOf("kgpwoz", "e", "yofd", "hkfpbs", "dttouwaboekqvkel", "luu", "xwyjsflhhc", "smv"))
                    .withActions(Arrays.asList(
                        new PrometheusRuleGroupAction().withActionGroupId("jixisxyawjoyaqcs")
                            .withActionProperties(mapOf("zyexzn", "pkii", "bnxknalaulppg", "lixhnrztfol", "gvpgy",
                                "dtpnapnyiropuhp", "n", "gqgitxmedjvcsl")),
                        new PrometheusRuleGroupAction().withActionGroupId("wncwzzhxgktrmg")
                            .withActionProperties(mapOf("fqbuaceopzf", "apkteoellwptfdyg", "lzdahzxctobgbkdm",
                                "rhhuaopppcqeqx", "grcfb", "izpost")),
                        new PrometheusRuleGroupAction().withActionGroupId("rmfqjhhkxbpvj")
                            .withActionProperties(mapOf("j", "hx", "u", "n"))))
                    .withResolveConfiguration(
                        new PrometheusRuleResolveConfiguration().withAutoResolved(true).withTimeToResolve("tswb")),
                new PrometheusRule().withRecord("zvszj")
                    .withAlert("uvjfdxxive")
                    .withEnabled(false)
                    .withExpression("cqaqtdoqmcbx")
                    .withSeverity(1289805860)
                    .withForProperty("yslqbhsfx")
                    .withLabels(mapOf("wfbkrvrns", "ytkblmpew"))
                    .withAnnotations(mapOf("ohxcrsbfova", "q", "sub", "rruvwbhsq", "rxbpyb", "gjb", "twss", "rfbjf"))
                    .withActions(Arrays.asList(
                        new PrometheusRuleGroupAction().withActionGroupId("pvjzbe")
                            .withActionProperties(mapOf("uoujmkcjhwqy", "zznfqqnvwpmqta")),
                        new PrometheusRuleGroupAction().withActionGroupId("r")
                            .withActionProperties(mapOf("wgdrjervnaenqp", "wj")),
                        new PrometheusRuleGroupAction().withActionGroupId("indoygmifthnzd")
                            .withActionProperties(mapOf("nayqi", "l"))))
                    .withResolveConfiguration(new PrometheusRuleResolveConfiguration().withAutoResolved(true)
                        .withTimeToResolve("havhqlkthumaqolb")),
                new PrometheusRule().withRecord("cdui")
                    .withAlert("tgccymvaolpss")
                    .withEnabled(true)
                    .withExpression("fmmdnbbg")
                    .withSeverity(734868343)
                    .withForProperty("wiydmcwyhzdxssad")
                    .withLabels(mapOf("dvxzbncblylpst", "nvdfznuda", "rsc", "bhhxsrzdzuc"))
                    .withAnnotations(mapOf("wjmy", "nevf"))
                    .withActions(Arrays.asList(
                        new PrometheusRuleGroupAction().withActionGroupId("slswtm")
                            .withActionProperties(mapOf("yqsemwa", "iofz", "tshhszhedp", "n", "k", "vwiwubmwmbesld")),
                        new PrometheusRuleGroupAction().withActionGroupId("tppjflcx")
                            .withActionProperties(mapOf("qqkdltfzxmhhvhgu", "okonzmnsikvmkqz", "xtibqdxbxwakbog",
                                "eodkwobda", "iplbpodxunkbebxm", "xndlkzgxhu"))))
                    .withResolveConfiguration(new PrometheusRuleResolveConfiguration().withAutoResolved(false)
                        .withTimeToResolve("twlrbqt")),
                new PrometheusRule().withRecord("ievseotgqrllt")
                    .withAlert("wlauwzizxbmpg")
                    .withEnabled(true)
                    .withExpression("fuzmuvpbtt")
                    .withSeverity(1773574052)
                    .withForProperty("rp")
                    .withLabels(mapOf("fgohdneuelfphs", "bmnzbtbhjpgl", "v", "yhtozfikdowwqu", "lvithhqzonosgg", "zx",
                        "ljuti", "hcohfwdsjnk"))
                    .withAnnotations(mapOf("railvpnppfuf", "acffgdkzzewkfvhq"))
                    .withActions(
                        Arrays.asList(
                            new PrometheusRuleGroupAction().withActionGroupId("mh")
                                .withActionProperties(mapOf("wqapnedgfbcvk", "yjrxsagafcnih", "pkeqdcvdrhvoo", "vq",
                                    "dopcjwvnh", "sotbob", "mgxcxrslpm", "ld")),
                            new PrometheusRuleGroupAction().withActionGroupId("wuoegrpk")
                                .withActionProperties(mapOf("pdggkzzlvm", "niyqslui", "fvmwy", "mpaxmodfvuefywsb",
                                    "yzvqt", "rfouyftaakcpw")),
                            new PrometheusRuleGroupAction().withActionGroupId("ubex")
                                .withActionProperties(mapOf("mquxvypo", "ksmond", "smocmbq", "gkopkwhojvpajqgx"))))
                    .withResolveConfiguration(new PrometheusRuleResolveConfiguration().withAutoResolved(true)
                        .withTimeToResolve("cxozapvhelxp"))));
        model = BinaryData.fromObject(model).toObject(PrometheusRuleGroupProperties.class);
        Assertions.assertEquals("iplrbpbewtghfgb", model.description());
        Assertions.assertEquals(false, model.enabled());
        Assertions.assertEquals("xzvlvqhjkbegib", model.clusterName());
        Assertions.assertEquals("mxiebw", model.scopes().get(0));
        Assertions.assertEquals("ts", model.interval());
        Assertions.assertEquals("cbpwxqpsrknft", model.rules().get(0).record());
        Assertions.assertEquals("vriuhprwmdyvx", model.rules().get(0).alert());
        Assertions.assertEquals(true, model.rules().get(0).enabled());
        Assertions.assertEquals("yriwwroyqb", model.rules().get(0).expression());
        Assertions.assertEquals(1717005830, model.rules().get(0).severity());
        Assertions.assertEquals("cqibycnojv", model.rules().get(0).forProperty());
        Assertions.assertEquals("e", model.rules().get(0).labels().get("qsgzvahapj"));
        Assertions.assertEquals("e", model.rules().get(0).annotations().get("kgpwoz"));
        Assertions.assertEquals("jixisxyawjoyaqcs", model.rules().get(0).actions().get(0).actionGroupId());
        Assertions.assertEquals("pkii", model.rules().get(0).actions().get(0).actionProperties().get("zyexzn"));
        Assertions.assertEquals(true, model.rules().get(0).resolveConfiguration().autoResolved());
        Assertions.assertEquals("tswb", model.rules().get(0).resolveConfiguration().timeToResolve());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
