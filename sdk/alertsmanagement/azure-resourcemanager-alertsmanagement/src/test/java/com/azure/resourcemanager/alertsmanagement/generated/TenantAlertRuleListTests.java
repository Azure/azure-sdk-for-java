// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.alertsmanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.alertsmanagement.fluent.models.TenantActivityLogAlertResourceInner;
import com.azure.resourcemanager.alertsmanagement.models.ActionGroup;
import com.azure.resourcemanager.alertsmanagement.models.ActionList;
import com.azure.resourcemanager.alertsmanagement.models.AlertRuleAllOfCondition;
import com.azure.resourcemanager.alertsmanagement.models.AlertRuleAnyOfOrLeafCondition;
import com.azure.resourcemanager.alertsmanagement.models.TenantAlertRuleList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class TenantAlertRuleListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TenantAlertRuleList model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"tenantScope\":\"kbg\",\"scopes\":[\"owxeqocljmy\",\"vkzqk\"],\"condition\":{\"allOf\":[{},{},{},{}]},\"actions\":{\"actionGroups\":[{\"actionGroupId\":\"kbzefezrxcczurt\"},{\"actionGroupId\":\"e\"}]},\"enabled\":false,\"description\":\"bkwvzg\"},\"location\":\"zvd\",\"tags\":{\"xzmqpnodawop\":\"d\"},\"id\":\"hewjptmcgsbost\",\"name\":\"eln\",\"type\":\"la\"},{\"properties\":{\"tenantScope\":\"tmzlbiojlv\",\"scopes\":[\"bbpneqvcwwy\",\"urmochpprprs\",\"mo\",\"ayzejnhlbkpbz\"],\"condition\":{\"allOf\":[{},{}]},\"actions\":{\"actionGroups\":[{\"actionGroupId\":\"ljhah\"},{\"actionGroupId\":\"vechndbnwiehole\"}]},\"enabled\":false,\"description\":\"uubw\"},\"location\":\"fqsfa\",\"tags\":{\"rrqwexjk\":\"tf\",\"cdabtqwpwya\":\"fxapjwogqqnobpu\",\"guyaip\":\"bzasqbucljgkyexa\",\"waz\":\"dsdaultxijjumf\"},\"id\":\"nqnm\",\"name\":\"jng\",\"type\":\"qdqx\"},{\"properties\":{\"tenantScope\":\"jw\",\"scopes\":[\"fusfzsvtuikzhajq\"],\"condition\":{\"allOf\":[{},{},{}]},\"actions\":{\"actionGroups\":[{\"actionGroupId\":\"hm\"}]},\"enabled\":false,\"description\":\"yxynq\"},\"location\":\"zrdpsovwxznptgoe\",\"tags\":{\"bp\":\"b\",\"slkvntjl\":\"hv\"},\"id\":\"igjkskyrio\",\"name\":\"vzidsxwaab\",\"type\":\"mifrygznmma\"},{\"properties\":{\"tenantScope\":\"izkzobgo\",\"scopes\":[\"hsln\",\"lxieixynllxecwcr\",\"jphslhcaw\",\"u\"],\"condition\":{\"allOf\":[{}]},\"actions\":{\"actionGroups\":[{\"actionGroupId\":\"wfmvigorqjbt\"},{\"actionGroupId\":\"zhraglkafh\"},{\"actionGroupId\":\"n\"}]},\"enabled\":false,\"description\":\"eickpz\"},\"location\":\"cpopmxel\",\"tags\":{\"scazuawxtzxpu\":\"ltyjedexxmlfmk\"},\"id\":\"mwabzxrvxc\",\"name\":\"s\",\"type\":\"sphaivmxyasflvg\"}],\"nextLink\":\"zwywako\"}")
            .toObject(TenantAlertRuleList.class);
        Assertions.assertEquals("zvd", model.value().get(0).location());
        Assertions.assertEquals("d", model.value().get(0).tags().get("xzmqpnodawop"));
        Assertions.assertEquals("kbg", model.value().get(0).tenantScope());
        Assertions.assertEquals("owxeqocljmy", model.value().get(0).scopes().get(0));
        Assertions.assertEquals("kbzefezrxcczurt",
            model.value().get(0).actions().actionGroups().get(0).actionGroupId());
        Assertions.assertEquals(false, model.value().get(0).enabled());
        Assertions.assertEquals("bkwvzg", model.value().get(0).description());
        Assertions.assertEquals("zwywako", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TenantAlertRuleList model = new TenantAlertRuleList().withValue(Arrays.asList(
            new TenantActivityLogAlertResourceInner().withLocation("zvd")
                .withTags(mapOf("xzmqpnodawop", "d"))
                .withTenantScope("kbg")
                .withScopes(Arrays.asList("owxeqocljmy", "vkzqk"))
                .withCondition(new AlertRuleAllOfCondition()
                    .withAllOf(Arrays.asList(new AlertRuleAnyOfOrLeafCondition(), new AlertRuleAnyOfOrLeafCondition(),
                        new AlertRuleAnyOfOrLeafCondition(), new AlertRuleAnyOfOrLeafCondition())))
                .withActions(new ActionList().withActionGroups(Arrays.asList(
                    new ActionGroup().withActionGroupId("kbzefezrxcczurt"), new ActionGroup().withActionGroupId("e"))))
                .withEnabled(false)
                .withDescription("bkwvzg"),
            new TenantActivityLogAlertResourceInner().withLocation("fqsfa")
                .withTags(mapOf("rrqwexjk", "tf", "cdabtqwpwya", "fxapjwogqqnobpu", "guyaip", "bzasqbucljgkyexa", "waz",
                    "dsdaultxijjumf"))
                .withTenantScope("tmzlbiojlv")
                .withScopes(Arrays.asList("bbpneqvcwwy", "urmochpprprs", "mo", "ayzejnhlbkpbz"))
                .withCondition(new AlertRuleAllOfCondition()
                    .withAllOf(Arrays.asList(new AlertRuleAnyOfOrLeafCondition(), new AlertRuleAnyOfOrLeafCondition())))
                .withActions(
                    new ActionList().withActionGroups(Arrays.asList(new ActionGroup().withActionGroupId("ljhah"),
                        new ActionGroup().withActionGroupId("vechndbnwiehole"))))
                .withEnabled(false)
                .withDescription("uubw"),
            new TenantActivityLogAlertResourceInner().withLocation("zrdpsovwxznptgoe")
                .withTags(mapOf("bp", "b", "slkvntjl", "hv"))
                .withTenantScope("jw")
                .withScopes(Arrays.asList("fusfzsvtuikzhajq"))
                .withCondition(
                    new AlertRuleAllOfCondition().withAllOf(Arrays.asList(new AlertRuleAnyOfOrLeafCondition(),
                        new AlertRuleAnyOfOrLeafCondition(), new AlertRuleAnyOfOrLeafCondition())))
                .withActions(
                    new ActionList().withActionGroups(Arrays.asList(new ActionGroup().withActionGroupId("hm"))))
                .withEnabled(false)
                .withDescription("yxynq"),
            new TenantActivityLogAlertResourceInner().withLocation("cpopmxel")
                .withTags(mapOf("scazuawxtzxpu", "ltyjedexxmlfmk"))
                .withTenantScope("izkzobgo")
                .withScopes(Arrays.asList("hsln", "lxieixynllxecwcr", "jphslhcaw", "u"))
                .withCondition(
                    new AlertRuleAllOfCondition().withAllOf(Arrays.asList(new AlertRuleAnyOfOrLeafCondition())))
                .withActions(
                    new ActionList().withActionGroups(Arrays.asList(new ActionGroup().withActionGroupId("wfmvigorqjbt"),
                        new ActionGroup().withActionGroupId("zhraglkafh"), new ActionGroup().withActionGroupId("n"))))
                .withEnabled(false)
                .withDescription("eickpz")))
            .withNextLink("zwywako");
        model = BinaryData.fromObject(model).toObject(TenantAlertRuleList.class);
        Assertions.assertEquals("zvd", model.value().get(0).location());
        Assertions.assertEquals("d", model.value().get(0).tags().get("xzmqpnodawop"));
        Assertions.assertEquals("kbg", model.value().get(0).tenantScope());
        Assertions.assertEquals("owxeqocljmy", model.value().get(0).scopes().get(0));
        Assertions.assertEquals("kbzefezrxcczurt",
            model.value().get(0).actions().actionGroups().get(0).actionGroupId());
        Assertions.assertEquals(false, model.value().get(0).enabled());
        Assertions.assertEquals("bkwvzg", model.value().get(0).description());
        Assertions.assertEquals("zwywako", model.nextLink());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
