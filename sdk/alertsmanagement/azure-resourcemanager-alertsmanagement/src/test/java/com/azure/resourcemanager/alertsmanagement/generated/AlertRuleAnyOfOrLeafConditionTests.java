// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.alertsmanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.alertsmanagement.models.AlertRuleAnyOfOrLeafCondition;
import com.azure.resourcemanager.alertsmanagement.models.AlertRuleLeafCondition;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AlertRuleAnyOfOrLeafConditionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AlertRuleAnyOfOrLeafCondition model = BinaryData.fromString(
            "{\"anyOf\":[{\"field\":\"beybpmzznrtffyaq\",\"equals\":\"mhh\",\"containsAny\":[\"qaqhvseufu\",\"yrxpdlcgqls\",\"smjqfrddgam\"]},{\"field\":\"hiosrsjuiv\",\"equals\":\"disyirnxz\",\"containsAny\":[\"exrxzbujrtrhq\",\"wrevkhgnlnzon\",\"lrpiqywnc\"]},{\"field\":\"tszcofizehtdhgb\",\"equals\":\"vreljea\",\"containsAny\":[\"vzmlovuanashcxl\",\"mjerbdk\",\"lvidizozs\"]}],\"field\":\"ccxjm\",\"equals\":\"fdgnwncypuuwwlt\",\"containsAny\":[\"jctzenkei\",\"zzhmkd\",\"svflyhbxcudch\"]}")
            .toObject(AlertRuleAnyOfOrLeafCondition.class);
        Assertions.assertEquals("ccxjm", model.field());
        Assertions.assertEquals("fdgnwncypuuwwlt", model.equals());
        Assertions.assertEquals("jctzenkei", model.containsAny().get(0));
        Assertions.assertEquals("beybpmzznrtffyaq", model.anyOf().get(0).field());
        Assertions.assertEquals("mhh", model.anyOf().get(0).equals());
        Assertions.assertEquals("qaqhvseufu", model.anyOf().get(0).containsAny().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AlertRuleAnyOfOrLeafCondition model = new AlertRuleAnyOfOrLeafCondition().withField("ccxjm")
            .withEquals("fdgnwncypuuwwlt")
            .withContainsAny(Arrays.asList("jctzenkei", "zzhmkd", "svflyhbxcudch"))
            .withAnyOf(Arrays.asList(
                new AlertRuleLeafCondition().withField("beybpmzznrtffyaq")
                    .withEquals("mhh")
                    .withContainsAny(Arrays.asList("qaqhvseufu", "yrxpdlcgqls", "smjqfrddgam")),
                new AlertRuleLeafCondition().withField("hiosrsjuiv")
                    .withEquals("disyirnxz")
                    .withContainsAny(Arrays.asList("exrxzbujrtrhq", "wrevkhgnlnzon", "lrpiqywnc")),
                new AlertRuleLeafCondition().withField("tszcofizehtdhgb")
                    .withEquals("vreljea")
                    .withContainsAny(Arrays.asList("vzmlovuanashcxl", "mjerbdk", "lvidizozs"))));
        model = BinaryData.fromObject(model).toObject(AlertRuleAnyOfOrLeafCondition.class);
        Assertions.assertEquals("ccxjm", model.field());
        Assertions.assertEquals("fdgnwncypuuwwlt", model.equals());
        Assertions.assertEquals("jctzenkei", model.containsAny().get(0));
        Assertions.assertEquals("beybpmzznrtffyaq", model.anyOf().get(0).field());
        Assertions.assertEquals("mhh", model.anyOf().get(0).equals());
        Assertions.assertEquals("qaqhvseufu", model.anyOf().get(0).containsAny().get(0));
    }
}
