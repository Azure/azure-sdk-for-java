// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.alertsmanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.alertsmanagement.models.AlertRuleAllOfCondition;
import com.azure.resourcemanager.alertsmanagement.models.AlertRuleAnyOfOrLeafCondition;
import com.azure.resourcemanager.alertsmanagement.models.AlertRuleLeafCondition;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AlertRuleAllOfConditionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AlertRuleAllOfCondition model = BinaryData.fromString(
            "{\"allOf\":[{\"anyOf\":[{\"field\":\"asylwx\",\"equals\":\"aumweoohguufu\",\"containsAny\":[\"yjathwtzo\",\"b\",\"emwmdxmebwjs\"]},{\"field\":\"p\",\"equals\":\"lxveabfqx\",\"containsAny\":[\"mqt\",\"bxyijddtvq\"]}],\"field\":\"tad\",\"equals\":\"aeukm\",\"containsAny\":[\"eekpndz\",\"apm\",\"dqmeqwigpibudq\"]}]}")
            .toObject(AlertRuleAllOfCondition.class);
        Assertions.assertEquals("tad", model.allOf().get(0).field());
        Assertions.assertEquals("aeukm", model.allOf().get(0).equals());
        Assertions.assertEquals("eekpndz", model.allOf().get(0).containsAny().get(0));
        Assertions.assertEquals("asylwx", model.allOf().get(0).anyOf().get(0).field());
        Assertions.assertEquals("aumweoohguufu", model.allOf().get(0).anyOf().get(0).equals());
        Assertions.assertEquals("yjathwtzo", model.allOf().get(0).anyOf().get(0).containsAny().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AlertRuleAllOfCondition model
            = new AlertRuleAllOfCondition().withAllOf(Arrays.asList(new AlertRuleAnyOfOrLeafCondition().withField("tad")
                .withEquals("aeukm")
                .withContainsAny(Arrays.asList("eekpndz", "apm", "dqmeqwigpibudq"))
                .withAnyOf(Arrays.asList(
                    new AlertRuleLeafCondition().withField("asylwx")
                        .withEquals("aumweoohguufu")
                        .withContainsAny(Arrays.asList("yjathwtzo", "b", "emwmdxmebwjs")),
                    new AlertRuleLeafCondition().withField("p")
                        .withEquals("lxveabfqx")
                        .withContainsAny(Arrays.asList("mqt", "bxyijddtvq"))))));
        model = BinaryData.fromObject(model).toObject(AlertRuleAllOfCondition.class);
        Assertions.assertEquals("tad", model.allOf().get(0).field());
        Assertions.assertEquals("aeukm", model.allOf().get(0).equals());
        Assertions.assertEquals("eekpndz", model.allOf().get(0).containsAny().get(0));
        Assertions.assertEquals("asylwx", model.allOf().get(0).anyOf().get(0).field());
        Assertions.assertEquals("aumweoohguufu", model.allOf().get(0).anyOf().get(0).equals());
        Assertions.assertEquals("yjathwtzo", model.allOf().get(0).anyOf().get(0).containsAny().get(0));
    }
}
