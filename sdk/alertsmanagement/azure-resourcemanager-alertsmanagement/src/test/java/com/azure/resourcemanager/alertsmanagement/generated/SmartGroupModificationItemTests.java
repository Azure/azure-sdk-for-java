// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.alertsmanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.alertsmanagement.models.SmartGroupModificationEvent;
import com.azure.resourcemanager.alertsmanagement.models.SmartGroupModificationItem;
import org.junit.jupiter.api.Assertions;

public final class SmartGroupModificationItemTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SmartGroupModificationItem model = BinaryData.fromString(
            "{\"modificationEvent\":\"StateChange\",\"oldValue\":\"ncj\",\"newValue\":\"onbzoggculapzwy\",\"modifiedAt\":\"gogtqxepnylbf\",\"modifiedBy\":\"jlyjtlvofq\",\"comments\":\"vfcibyfmowux\",\"description\":\"jpvd\"}")
            .toObject(SmartGroupModificationItem.class);
        Assertions.assertEquals(SmartGroupModificationEvent.STATE_CHANGE, model.modificationEvent());
        Assertions.assertEquals("ncj", model.oldValue());
        Assertions.assertEquals("onbzoggculapzwy", model.newValue());
        Assertions.assertEquals("gogtqxepnylbf", model.modifiedAt());
        Assertions.assertEquals("jlyjtlvofq", model.modifiedBy());
        Assertions.assertEquals("vfcibyfmowux", model.comments());
        Assertions.assertEquals("jpvd", model.description());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SmartGroupModificationItem model
            = new SmartGroupModificationItem().withModificationEvent(SmartGroupModificationEvent.STATE_CHANGE)
                .withOldValue("ncj")
                .withNewValue("onbzoggculapzwy")
                .withModifiedAt("gogtqxepnylbf")
                .withModifiedBy("jlyjtlvofq")
                .withComments("vfcibyfmowux")
                .withDescription("jpvd");
        model = BinaryData.fromObject(model).toObject(SmartGroupModificationItem.class);
        Assertions.assertEquals(SmartGroupModificationEvent.STATE_CHANGE, model.modificationEvent());
        Assertions.assertEquals("ncj", model.oldValue());
        Assertions.assertEquals("onbzoggculapzwy", model.newValue());
        Assertions.assertEquals("gogtqxepnylbf", model.modifiedAt());
        Assertions.assertEquals("jlyjtlvofq", model.modifiedBy());
        Assertions.assertEquals("vfcibyfmowux", model.comments());
        Assertions.assertEquals("jpvd", model.description());
    }
}
