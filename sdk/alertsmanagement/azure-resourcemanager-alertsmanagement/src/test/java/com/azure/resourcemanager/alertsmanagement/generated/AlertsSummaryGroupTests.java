// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.alertsmanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.alertsmanagement.models.AlertsSummaryGroup;
import com.azure.resourcemanager.alertsmanagement.models.AlertsSummaryGroupItem;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AlertsSummaryGroupTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AlertsSummaryGroup model = BinaryData.fromString(
            "{\"total\":2365221723834697977,\"smartGroupsCount\":3916136578672548294,\"groupedby\":\"yqiatkzwp\",\"values\":[{\"name\":\"zcjaesgvvsccy\",\"count\":1066382835931750004,\"groupedby\":\"fhwygzlvdnkfxus\",\"values\":[{\"name\":\"zrmuhapfcqdps\",\"count\":1717467823158981449,\"groupedby\":\"svuo\",\"values\":[{}]},{\"name\":\"celve\",\"count\":3473713608664068860,\"groupedby\":\"lmfeokerq\",\"values\":[{}]}]}]}")
            .toObject(AlertsSummaryGroup.class);
        Assertions.assertEquals(2365221723834697977L, model.total());
        Assertions.assertEquals(3916136578672548294L, model.smartGroupsCount());
        Assertions.assertEquals("yqiatkzwp", model.groupedby());
        Assertions.assertEquals("zcjaesgvvsccy", model.values().get(0).name());
        Assertions.assertEquals(1066382835931750004L, model.values().get(0).count());
        Assertions.assertEquals("fhwygzlvdnkfxus", model.values().get(0).groupedby());
        Assertions.assertEquals("zrmuhapfcqdps", model.values().get(0).values().get(0).name());
        Assertions.assertEquals(1717467823158981449L, model.values().get(0).values().get(0).count());
        Assertions.assertEquals("svuo", model.values().get(0).values().get(0).groupedby());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AlertsSummaryGroup model = new AlertsSummaryGroup().withTotal(2365221723834697977L)
            .withSmartGroupsCount(3916136578672548294L)
            .withGroupedby("yqiatkzwp")
            .withValues(Arrays.asList(new AlertsSummaryGroupItem().withName("zcjaesgvvsccy")
                .withCount(1066382835931750004L)
                .withGroupedby("fhwygzlvdnkfxus")
                .withValues(Arrays.asList(
                    new AlertsSummaryGroupItem().withName("zrmuhapfcqdps")
                        .withCount(1717467823158981449L)
                        .withGroupedby("svuo")
                        .withValues(Arrays.asList(new AlertsSummaryGroupItem())),
                    new AlertsSummaryGroupItem().withName("celve")
                        .withCount(3473713608664068860L)
                        .withGroupedby("lmfeokerq")
                        .withValues(Arrays.asList(new AlertsSummaryGroupItem()))))));
        model = BinaryData.fromObject(model).toObject(AlertsSummaryGroup.class);
        Assertions.assertEquals(2365221723834697977L, model.total());
        Assertions.assertEquals(3916136578672548294L, model.smartGroupsCount());
        Assertions.assertEquals("yqiatkzwp", model.groupedby());
        Assertions.assertEquals("zcjaesgvvsccy", model.values().get(0).name());
        Assertions.assertEquals(1066382835931750004L, model.values().get(0).count());
        Assertions.assertEquals("fhwygzlvdnkfxus", model.values().get(0).groupedby());
        Assertions.assertEquals("zrmuhapfcqdps", model.values().get(0).values().get(0).name());
        Assertions.assertEquals(1717467823158981449L, model.values().get(0).values().get(0).count());
        Assertions.assertEquals("svuo", model.values().get(0).values().get(0).groupedby());
    }
}
