// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.alertsmanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.alertsmanagement.AlertsManagementManager;
import com.azure.resourcemanager.alertsmanagement.models.PrometheusRuleGroupResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PrometheusRuleGroupsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"description\":\"ma\",\"enabled\":true,\"clusterName\":\"cx\",\"scopes\":[\"zgaz\"],\"interval\":\"abo\",\"rules\":[{\"record\":\"mfqhppubowse\",\"alert\":\"fgkmtdhern\",\"enabled\":true,\"expression\":\"c\",\"severity\":2083850408,\"for\":\"okqtobk\",\"labels\":{\"e\":\"ofshfphwpnulaiyw\"},\"annotations\":{\"wkojpllndnpd\":\"hs\",\"fugsnnfhyetefy\":\"rpqaf\"},\"actions\":[{}],\"resolveConfiguration\":{\"autoResolved\":false,\"timeToResolve\":\"jgtixr\"}},{\"record\":\"zuyt\",\"alert\":\"mlmuowol\",\"enabled\":false,\"expression\":\"iropionszon\",\"severity\":1957887263,\"for\":\"ajinnixjawrtmjfj\",\"labels\":{\"nlusfnrd\":\"cxlzhcoxovnekh\",\"tjvidt\":\"jxtxrdc\",\"uwkasiz\":\"gepuslvyjtc\",\"qfecjxeygtuhx\":\"esfuught\"},\"annotations\":{\"rswnjlxuzrhwp\":\"buew\",\"qehgpd\":\"sxjb\",\"xncnwfe\":\"hzjqatucoige\",\"cgbjbgdlfgt\":\"bnwgfmxj\"},\"actions\":[{},{}],\"resolveConfiguration\":{\"autoResolved\":true,\"timeToResolve\":\"flq\"}},{\"record\":\"tqhamzjrw\",\"alert\":\"qzeqyjleziunjxdf\",\"enabled\":false,\"expression\":\"tkw\",\"severity\":1769138109,\"for\":\"amlbnseqacjjvpil\",\"labels\":{\"agmdit\":\"oq\",\"kjbsah\":\"ueio\",\"oebn\":\"tdtpdelqacslmo\",\"dirazf\":\"xofvcjk\"},\"annotations\":{\"jtmvc\":\"jwabmd\",\"kyqltqsrogt\":\"pexcmjurbuhh\",\"ysidfvclgl\":\"wkffdjkt\",\"uijtkbu\":\"n\"},\"actions\":[{}],\"resolveConfiguration\":{\"autoResolved\":true,\"timeToResolve\":\"kayi\"}}]},\"location\":\"sharujtj\",\"tags\":{\"vwkpqh\":\"fzyjqt\"},\"id\":\"penuy\",\"name\":\"bqeqqekewvnqvcd\",\"type\":\"guaucmfdjwnla\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AlertsManagementManager manager = AlertsManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<PrometheusRuleGroupResource> response
            = manager.prometheusRuleGroups().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("sharujtj", response.iterator().next().location());
        Assertions.assertEquals("fzyjqt", response.iterator().next().tags().get("vwkpqh"));
        Assertions.assertEquals("ma", response.iterator().next().description());
        Assertions.assertEquals(true, response.iterator().next().enabled());
        Assertions.assertEquals("cx", response.iterator().next().clusterName());
        Assertions.assertEquals("zgaz", response.iterator().next().scopes().get(0));
        Assertions.assertEquals("abo", response.iterator().next().interval());
        Assertions.assertEquals("mfqhppubowse", response.iterator().next().rules().get(0).record());
        Assertions.assertEquals("fgkmtdhern", response.iterator().next().rules().get(0).alert());
        Assertions.assertEquals(true, response.iterator().next().rules().get(0).enabled());
        Assertions.assertEquals("c", response.iterator().next().rules().get(0).expression());
        Assertions.assertEquals(2083850408, response.iterator().next().rules().get(0).severity());
        Assertions.assertEquals("okqtobk", response.iterator().next().rules().get(0).forProperty());
        Assertions.assertEquals("ofshfphwpnulaiyw", response.iterator().next().rules().get(0).labels().get("e"));
        Assertions.assertEquals("hs", response.iterator().next().rules().get(0).annotations().get("wkojpllndnpd"));
        Assertions.assertEquals(false, response.iterator().next().rules().get(0).resolveConfiguration().autoResolved());
        Assertions.assertEquals("jgtixr",
            response.iterator().next().rules().get(0).resolveConfiguration().timeToResolve());
    }
}
