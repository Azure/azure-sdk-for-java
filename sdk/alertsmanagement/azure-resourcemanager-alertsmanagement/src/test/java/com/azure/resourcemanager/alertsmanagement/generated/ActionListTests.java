// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.alertsmanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.alertsmanagement.models.ActionGroup;
import com.azure.resourcemanager.alertsmanagement.models.ActionList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ActionListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ActionList model = BinaryData.fromString(
            "{\"actionGroups\":[{\"actionGroupId\":\"rkywuhpsvfuu\",\"webhookProperties\":{\"lniexz\":\"lwexxwl\",\"tybbwwpgda\":\"rzpgep\",\"xkjibnxmy\":\"chzyvlixqnrk\",\"ijpstte\":\"uxswqrntvl\"},\"actionProperties\":{\"uncuw\":\"qpwcyyufmh\",\"unqndyfpchrqb\":\"qspkcdqzhlctd\",\"boxjumvq\":\"jjrcgegydc\"}},{\"actionGroupId\":\"olihrra\",\"webhookProperties\":{\"fuojrngif\":\"aubrjtloq\",\"dfqwmkyoq\":\"rzpasccbiuimzdly\"},\"actionProperties\":{\"xotngfdguge\":\"vruzslzojhpctfnm\",\"zabs\":\"zihgrkyu\",\"hojeevy\":\"mfp\",\"czbgomfgbeg\":\"yhsgz\"}},{\"actionGroupId\":\"qgleohibetnluank\",\"webhookProperties\":{\"qqxlajr\":\"xeeebtijvacvbmqz\",\"uyxoaf\":\"wxacevehj\",\"inmfgvxirp\":\"aoqltfaey\",\"prlpy\":\"hriypoqeyhlqhy\"},\"actionProperties\":{\"iitdfuxt\":\"ciqdsme\",\"nlj\":\"asiibmiybnnust\"}}]}")
            .toObject(ActionList.class);
        Assertions.assertEquals("rkywuhpsvfuu", model.actionGroups().get(0).actionGroupId());
        Assertions.assertEquals("lwexxwl", model.actionGroups().get(0).webhookProperties().get("lniexz"));
        Assertions.assertEquals("qpwcyyufmh", model.actionGroups().get(0).actionProperties().get("uncuw"));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ActionList model = new ActionList().withActionGroups(Arrays.asList(
            new ActionGroup().withActionGroupId("rkywuhpsvfuu")
                .withWebhookProperties(mapOf("lniexz", "lwexxwl", "tybbwwpgda", "rzpgep", "xkjibnxmy", "chzyvlixqnrk",
                    "ijpstte", "uxswqrntvl"))
                .withActionProperties(
                    mapOf("uncuw", "qpwcyyufmh", "unqndyfpchrqb", "qspkcdqzhlctd", "boxjumvq", "jjrcgegydc")),
            new ActionGroup().withActionGroupId("olihrra")
                .withWebhookProperties(mapOf("fuojrngif", "aubrjtloq", "dfqwmkyoq", "rzpasccbiuimzdly"))
                .withActionProperties(mapOf("xotngfdguge", "vruzslzojhpctfnm", "zabs", "zihgrkyu", "hojeevy", "mfp",
                    "czbgomfgbeg", "yhsgz")),
            new ActionGroup().withActionGroupId("qgleohibetnluank")
                .withWebhookProperties(mapOf("qqxlajr", "xeeebtijvacvbmqz", "uyxoaf", "wxacevehj", "inmfgvxirp",
                    "aoqltfaey", "prlpy", "hriypoqeyhlqhy"))
                .withActionProperties(mapOf("iitdfuxt", "ciqdsme", "nlj", "asiibmiybnnust"))));
        model = BinaryData.fromObject(model).toObject(ActionList.class);
        Assertions.assertEquals("rkywuhpsvfuu", model.actionGroups().get(0).actionGroupId());
        Assertions.assertEquals("lwexxwl", model.actionGroups().get(0).webhookProperties().get("lniexz"));
        Assertions.assertEquals("qpwcyyufmh", model.actionGroups().get(0).actionProperties().get("uncuw"));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
