// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.alertsmanagement.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.alertsmanagement.models.Recurrence;
import com.azure.resourcemanager.alertsmanagement.models.Schedule;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ScheduleTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        Schedule model = BinaryData.fromString(
            "{\"effectiveFrom\":\"lwhijcoejctbzaq\",\"effectiveUntil\":\"sycbkbfk\",\"timeZone\":\"kdkexxp\",\"recurrences\":[{\"recurrenceType\":\"Recurrence\",\"startTime\":\"xaxcfjpgddtocjjx\",\"endTime\":\"pmouexhdz\"}]}")
            .toObject(Schedule.class);
        Assertions.assertEquals("lwhijcoejctbzaq", model.effectiveFrom());
        Assertions.assertEquals("sycbkbfk", model.effectiveUntil());
        Assertions.assertEquals("kdkexxp", model.timeZone());
        Assertions.assertEquals("xaxcfjpgddtocjjx", model.recurrences().get(0).startTime());
        Assertions.assertEquals("pmouexhdz", model.recurrences().get(0).endTime());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        Schedule model = new Schedule().withEffectiveFrom("lwhijcoejctbzaq")
            .withEffectiveUntil("sycbkbfk")
            .withTimeZone("kdkexxp")
            .withRecurrences(
                Arrays.asList(new Recurrence().withStartTime("xaxcfjpgddtocjjx").withEndTime("pmouexhdz")));
        model = BinaryData.fromObject(model).toObject(Schedule.class);
        Assertions.assertEquals("lwhijcoejctbzaq", model.effectiveFrom());
        Assertions.assertEquals("sycbkbfk", model.effectiveUntil());
        Assertions.assertEquals("kdkexxp", model.timeZone());
        Assertions.assertEquals("xaxcfjpgddtocjjx", model.recurrences().get(0).startTime());
        Assertions.assertEquals("pmouexhdz", model.recurrences().get(0).endTime());
    }
}
