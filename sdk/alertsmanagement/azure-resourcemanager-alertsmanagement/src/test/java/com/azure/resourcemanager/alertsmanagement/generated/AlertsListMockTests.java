// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.alertsmanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.alertsmanagement.AlertsManagementManager;
import com.azure.resourcemanager.alertsmanagement.models.Alert;
import com.azure.resourcemanager.alertsmanagement.models.AlertState;
import com.azure.resourcemanager.alertsmanagement.models.AlertsSortByFields;
import com.azure.resourcemanager.alertsmanagement.models.MonitorCondition;
import com.azure.resourcemanager.alertsmanagement.models.MonitorService;
import com.azure.resourcemanager.alertsmanagement.models.Severity;
import com.azure.resourcemanager.alertsmanagement.models.SortOrder;
import com.azure.resourcemanager.alertsmanagement.models.TimeRange;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AlertsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"essentials\":{\"severity\":\"Sev4\",\"signalType\":\"Log\",\"alertState\":\"New\",\"monitorCondition\":\"Resolved\",\"targetResource\":\"wamcxtczhup\",\"targetResourceName\":\"knijduyyes\",\"targetResourceGroup\":\"djfbocyv\",\"targetResourceType\":\"ulrtywikdmh\",\"monitorService\":\"VM Insights\",\"alertRule\":\"flgbhgau\",\"sourceCreatedId\":\"dixmxufrsryjq\",\"smartGroupId\":\"kfnozoeoqbvj\",\"smartGroupingReason\":\"efgwbmqjc\",\"startDateTime\":\"2021-06-11T09:24:49Z\",\"lastModifiedDateTime\":\"2021-07-31T17:06:02Z\",\"monitorConditionResolvedDateTime\":\"2021-10-02T19:27:57Z\",\"lastModifiedUserName\":\"mx\",\"actionStatus\":{\"isSuppressed\":true},\"description\":\"ealbmqkyo\"},\"context\":\"datayvfkmbts\",\"egressConfig\":\"datahxsgxj\"},\"id\":\"mmzrrscub\",\"name\":\"wsdrnpxqwodif\",\"type\":\"jxcjrmmuabwib\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AlertsManagementManager manager = AlertsManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Alert> response = manager.alerts()
            .list("lyjxltbsjus", "vsfxigctmgxuupbe", "qccydrtceukdq", MonitorService.LOG_ANALYTICS,
                MonitorCondition.RESOLVED, Severity.SEV0, AlertState.ACKNOWLEDGED, "ztgeqmgqzgwld", "ychillcecfe", true,
                false, 3980932242733156644L, AlertsSortByFields.START_DATE_TIME, SortOrder.ASC, "uhicqllizstacsjv",
                TimeRange.ONED, "weftkwq", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("wamcxtczhup", response.iterator().next().properties().essentials().targetResource());
        Assertions.assertEquals("knijduyyes",
            response.iterator().next().properties().essentials().targetResourceName());
        Assertions.assertEquals("djfbocyv", response.iterator().next().properties().essentials().targetResourceGroup());
        Assertions.assertEquals("ulrtywikdmh",
            response.iterator().next().properties().essentials().targetResourceType());
        Assertions.assertEquals(true,
            response.iterator().next().properties().essentials().actionStatus().isSuppressed());
        Assertions.assertEquals("ealbmqkyo", response.iterator().next().properties().essentials().description());
    }
}
