// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.alertsmanagement.generated;

import com.azure.resourcemanager.alertsmanagement.fluent.models.TenantActivityLogAlertResourceInner;
import com.azure.resourcemanager.alertsmanagement.models.ActionGroup;
import com.azure.resourcemanager.alertsmanagement.models.ActionList;
import com.azure.resourcemanager.alertsmanagement.models.AlertRuleAllOfCondition;
import com.azure.resourcemanager.alertsmanagement.models.AlertRuleAnyOfOrLeafCondition;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for TenantActivityLogAlerts CreateOrUpdate.
 */
public final class TenantActivityLogAlertsCreateOrUpdateSamples {
    /*
     * x-ms-original-file:
     * specification/alertsmanagement/resource-manager/Microsoft.AlertsManagement/preview/2023-04-01-preview/examples/
     * TenantActivityLogAlertRule_CreateOrUpdate.json
     */
    /**
     * Sample code: Create or update a Tenant Activity Log Alert rule for tenant level events.
     * 
     * @param manager Entry point to AlertsManagementManager.
     */
    public static void createOrUpdateATenantActivityLogAlertRuleForTenantLevelEvents(
        com.azure.resourcemanager.alertsmanagement.AlertsManagementManager manager) {
        manager.tenantActivityLogAlerts()
            .createOrUpdateWithResponse("72f988bf-86f1-41af-91ab-2d7cd011db47",
                "SampleActivityLogAlertSHRuleOnTenantLevel",
                new TenantActivityLogAlertResourceInner().withLocation("Global")
                    .withTags(mapOf())
                    .withTenantScope("72f988bf-86f1-41af-91ab-2d7cd011db47")
                    .withCondition(new AlertRuleAllOfCondition().withAllOf(Arrays
                        .asList(new AlertRuleAnyOfOrLeafCondition().withField("category").withEquals("ServiceHealth"))))
                    .withActions(new ActionList().withActionGroups(Arrays.asList(new ActionGroup().withActionGroupId(
                        "/providers/Microsoft.Management/ManagementGroups/72f988bf-86f1-41af-91ab-2d7cd011db47/providers/Microsoft.Insights/actionGroups/SampleActionGroup")
                        .withWebhookProperties(mapOf("sampleWebhookProperty", "SamplePropertyValue"))
                        .withActionProperties(mapOf("Email.Title", "my email title")))))
                    .withEnabled(true)
                    .withDescription(
                        "Description of sample Activity Log Alert service health rule on tenant level events."),
                com.azure.core.util.Context.NONE);
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
