// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridconnectivity.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridconnectivity.models.SolutionTypeSettingsProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SolutionTypeSettingsPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SolutionTypeSettingsProperties model = BinaryData.fromString(
            "{\"name\":\"gxywpmue\",\"displayName\":\"fjz\",\"type\":\"fqkquj\",\"description\":\"dsuyonobgla\",\"allowedValues\":[\"qxtccmgyudx\"],\"defaultValue\":\"tlmoyrx\"}")
            .toObject(SolutionTypeSettingsProperties.class);
        Assertions.assertEquals("gxywpmue", model.name());
        Assertions.assertEquals("fjz", model.displayName());
        Assertions.assertEquals("fqkquj", model.type());
        Assertions.assertEquals("dsuyonobgla", model.description());
        Assertions.assertEquals("qxtccmgyudx", model.allowedValues().get(0));
        Assertions.assertEquals("tlmoyrx", model.defaultValue());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SolutionTypeSettingsProperties model = new SolutionTypeSettingsProperties().withName("gxywpmue")
            .withDisplayName("fjz")
            .withType("fqkquj")
            .withDescription("dsuyonobgla")
            .withAllowedValues(Arrays.asList("qxtccmgyudx"))
            .withDefaultValue("tlmoyrx");
        model = BinaryData.fromObject(model).toObject(SolutionTypeSettingsProperties.class);
        Assertions.assertEquals("gxywpmue", model.name());
        Assertions.assertEquals("fjz", model.displayName());
        Assertions.assertEquals("fqkquj", model.type());
        Assertions.assertEquals("dsuyonobgla", model.description());
        Assertions.assertEquals("qxtccmgyudx", model.allowedValues().get(0));
        Assertions.assertEquals("tlmoyrx", model.defaultValue());
    }
}
