// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridconnectivity.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridconnectivity.fluent.models.PublicCloudConnectorInner;
import com.azure.resourcemanager.hybridconnectivity.models.AwsCloudProfile;
import com.azure.resourcemanager.hybridconnectivity.models.HostType;
import com.azure.resourcemanager.hybridconnectivity.models.PublicCloudConnectorListResult;
import com.azure.resourcemanager.hybridconnectivity.models.PublicCloudConnectorProperties;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class PublicCloudConnectorListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PublicCloudConnectorListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"awsCloudProfile\":{\"accountId\":\"xmnteiwaop\",\"excludedAccounts\":[\"ijcmmx\",\"cufufsrpymz\",\"dnsezcxtbzs\",\"fycc\"],\"isOrganizationalAccount\":false},\"hostType\":\"AWS\",\"provisioningState\":\"Failed\",\"connectorPrimaryIdentifier\":\"z\"},\"location\":\"iachbo\",\"tags\":{\"eeh\":\"lnrosfqp\",\"swjdkirso\":\"zvypyqrimzinp\",\"soifiyipjxsqw\":\"dqxhcrmnohjtckwh\",\"bznorcjxvsnby\":\"gr\"},\"id\":\"qabnmoc\",\"name\":\"cyshurzafbljjgp\",\"type\":\"toqcjmklja\"},{\"properties\":{\"awsCloudProfile\":{\"accountId\":\"qidtqajzyu\",\"excludedAccounts\":[\"u\",\"jkrlkhbzhfepg\",\"gqexzlocxs\"],\"isOrganizationalAccount\":false},\"hostType\":\"AWS\",\"provisioningState\":\"Failed\",\"connectorPrimaryIdentifier\":\"hbcsgl\"},\"location\":\"majtjaod\",\"tags\":{\"pxokajionp\":\"nbdxk\",\"dg\":\"mexgstxgcp\",\"djwzrlov\":\"aajrm\",\"qsqsy\":\"clwhijcoejctbz\"},\"id\":\"bkbfkgukdkex\",\"name\":\"ppofmxaxcfjpgdd\",\"type\":\"ocjjxhvpmouexh\"},{\"properties\":{\"awsCloudProfile\":{\"accountId\":\"xibqeojnx\",\"excludedAccounts\":[\"vddntwn\",\"eic\",\"twnpzaoqvuhrhcf\",\"cyddglmjthjqk\"],\"isOrganizationalAccount\":true},\"hostType\":\"AWS\",\"provisioningState\":\"Canceled\",\"connectorPrimaryIdentifier\":\"mqc\"},\"location\":\"q\",\"tags\":{\"igdtopbob\":\"hix\",\"m\":\"og\",\"a\":\"w\",\"hrzayvvtpgvdf\":\"a\"},\"id\":\"iotkftutqxl\",\"name\":\"gxlefgugnxkrxd\",\"type\":\"mi\"}],\"nextLink\":\"thz\"}")
            .toObject(PublicCloudConnectorListResult.class);
        Assertions.assertEquals("iachbo", model.value().get(0).location());
        Assertions.assertEquals("lnrosfqp", model.value().get(0).tags().get("eeh"));
        Assertions.assertEquals("xmnteiwaop", model.value().get(0).properties().awsCloudProfile().accountId());
        Assertions.assertEquals("ijcmmx",
            model.value().get(0).properties().awsCloudProfile().excludedAccounts().get(0));
        Assertions.assertEquals(false, model.value().get(0).properties().awsCloudProfile().isOrganizationalAccount());
        Assertions.assertEquals(HostType.AWS, model.value().get(0).properties().hostType());
        Assertions.assertEquals("thz", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PublicCloudConnectorListResult model
            = new PublicCloudConnectorListResult()
                .withValue(
                    Arrays
                        .asList(
                            new PublicCloudConnectorInner().withLocation("iachbo")
                                .withTags(mapOf("eeh", "lnrosfqp", "swjdkirso", "zvypyqrimzinp", "soifiyipjxsqw",
                                    "dqxhcrmnohjtckwh", "bznorcjxvsnby", "gr"))
                                .withProperties(
                                    new PublicCloudConnectorProperties()
                                        .withAwsCloudProfile(new AwsCloudProfile().withAccountId("xmnteiwaop")
                                            .withExcludedAccounts(
                                                Arrays.asList("ijcmmx", "cufufsrpymz", "dnsezcxtbzs", "fycc"))
                                            .withIsOrganizationalAccount(false))
                                        .withHostType(HostType.AWS)),
                            new PublicCloudConnectorInner().withLocation("majtjaod")
                                .withTags(mapOf("pxokajionp", "nbdxk", "dg", "mexgstxgcp", "djwzrlov", "aajrm", "qsqsy",
                                    "clwhijcoejctbz"))
                                .withProperties(
                                    new PublicCloudConnectorProperties()
                                        .withAwsCloudProfile(new AwsCloudProfile().withAccountId("qidtqajzyu")
                                            .withExcludedAccounts(Arrays.asList("u", "jkrlkhbzhfepg", "gqexzlocxs"))
                                            .withIsOrganizationalAccount(false))
                                        .withHostType(HostType.AWS)),
                            new PublicCloudConnectorInner().withLocation("q")
                                .withTags(mapOf("igdtopbob", "hix", "m", "og", "a", "w", "hrzayvvtpgvdf", "a"))
                                .withProperties(new PublicCloudConnectorProperties()
                                    .withAwsCloudProfile(new AwsCloudProfile().withAccountId("xibqeojnx")
                                        .withExcludedAccounts(
                                            Arrays.asList("vddntwn", "eic", "twnpzaoqvuhrhcf", "cyddglmjthjqk"))
                                        .withIsOrganizationalAccount(true))
                                    .withHostType(HostType.AWS))))
                .withNextLink("thz");
        model = BinaryData.fromObject(model).toObject(PublicCloudConnectorListResult.class);
        Assertions.assertEquals("iachbo", model.value().get(0).location());
        Assertions.assertEquals("lnrosfqp", model.value().get(0).tags().get("eeh"));
        Assertions.assertEquals("xmnteiwaop", model.value().get(0).properties().awsCloudProfile().accountId());
        Assertions.assertEquals("ijcmmx",
            model.value().get(0).properties().awsCloudProfile().excludedAccounts().get(0));
        Assertions.assertEquals(false, model.value().get(0).properties().awsCloudProfile().isOrganizationalAccount());
        Assertions.assertEquals(HostType.AWS, model.value().get(0).properties().hostType());
        Assertions.assertEquals("thz", model.nextLink());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
