// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.hybridconnectivity.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridconnectivity.models.AwsCloudProfileUpdate;
import com.azure.resourcemanager.hybridconnectivity.models.PublicCloudConnectorPropertiesUpdate;
import com.azure.resourcemanager.hybridconnectivity.models.PublicCloudConnectorUpdate;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class PublicCloudConnectorUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PublicCloudConnectorUpdate model = BinaryData.fromString(
            "{\"properties\":{\"awsCloudProfile\":{\"excludedAccounts\":[\"jxvsnbyxqabn\",\"ocpcy\",\"hurzafblj\"]}},\"tags\":{\"qajzyulpkudjkr\":\"btoqcjmkljavbqid\",\"e\":\"khbzhfepgzg\",\"scpai\":\"zloc\"},\"id\":\"hhbcsglummajtjao\",\"name\":\"xobnbdxkqpxok\",\"type\":\"jionpimexgstxgc\"}")
            .toObject(PublicCloudConnectorUpdate.class);
        Assertions.assertEquals("btoqcjmkljavbqid", model.tags().get("qajzyulpkudjkr"));
        Assertions.assertEquals("jxvsnbyxqabn", model.properties().awsCloudProfile().excludedAccounts().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PublicCloudConnectorUpdate model = new PublicCloudConnectorUpdate()
            .withTags(mapOf("qajzyulpkudjkr", "btoqcjmkljavbqid", "e", "khbzhfepgzg", "scpai", "zloc"))
            .withProperties(new PublicCloudConnectorPropertiesUpdate().withAwsCloudProfile(
                new AwsCloudProfileUpdate().withExcludedAccounts(Arrays.asList("jxvsnbyxqabn", "ocpcy", "hurzafblj"))));
        model = BinaryData.fromObject(model).toObject(PublicCloudConnectorUpdate.class);
        Assertions.assertEquals("btoqcjmkljavbqid", model.tags().get("qajzyulpkudjkr"));
        Assertions.assertEquals("jxvsnbyxqabn", model.properties().awsCloudProfile().excludedAccounts().get(0));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
