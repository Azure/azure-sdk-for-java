// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridconnectivity.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.hybridconnectivity.HybridConnectivityManager;
import com.azure.resourcemanager.hybridconnectivity.models.SolutionTypeResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SolutionTypesListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"solutionType\":\"ikpzimejza\",\"description\":\"fzxiavrmb\",\"supportedAzureRegions\":[\"okixrjqcir\",\"zpfrla\",\"szrnwo\",\"indfpwpjyl\"],\"solutionSettings\":[{\"name\":\"lhflsjcdhszfjvf\",\"displayName\":\"gofel\",\"type\":\"a\",\"description\":\"rqmq\",\"allowedValues\":[\"dvriiiojnal\",\"hfkvtvsexsowuel\",\"qhhahhxvrhmzkwpj\",\"wws\"],\"defaultValue\":\"ughftqsx\"},{\"name\":\"qxujxukndxd\",\"displayName\":\"grjguufzd\",\"type\":\"syqtfi\",\"description\":\"whbotzingamv\",\"allowedValues\":[\"ho\",\"zqzudph\"],\"defaultValue\":\"amvdkfwynwcvtbv\"},{\"name\":\"ayhmtnvyqiatkz\",\"displayName\":\"pcnp\",\"type\":\"zcjaesgvvsccy\",\"description\":\"jguq\",\"allowedValues\":[\"wygzlvdnkfxusem\"],\"defaultValue\":\"wzrmuh\"},{\"name\":\"pfcqdp\",\"displayName\":\"qxqvpsvuoymgc\",\"type\":\"elvezrypq\",\"description\":\"mfe\",\"allowedValues\":[\"erqwkyhkobopg\",\"edkowepbqpcrfk\"],\"defaultValue\":\"wccsnjvcdwxlpqek\"}]},\"id\":\"nkhtjsyingw\",\"name\":\"qatmtdhtmdvy\",\"type\":\"gikdgsz\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HybridConnectivityManager manager = HybridConnectivityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<SolutionTypeResource> response
            = manager.solutionTypes().listByResourceGroup("yowqkdwytisibir", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("ikpzimejza", response.iterator().next().properties().solutionType());
        Assertions.assertEquals("fzxiavrmb", response.iterator().next().properties().description());
        Assertions.assertEquals("okixrjqcir", response.iterator().next().properties().supportedAzureRegions().get(0));
        Assertions.assertEquals("lhflsjcdhszfjvf",
            response.iterator().next().properties().solutionSettings().get(0).name());
        Assertions.assertEquals("gofel",
            response.iterator().next().properties().solutionSettings().get(0).displayName());
        Assertions.assertEquals("a", response.iterator().next().properties().solutionSettings().get(0).type());
        Assertions.assertEquals("rqmq",
            response.iterator().next().properties().solutionSettings().get(0).description());
        Assertions.assertEquals("dvriiiojnal",
            response.iterator().next().properties().solutionSettings().get(0).allowedValues().get(0));
        Assertions.assertEquals("ughftqsx",
            response.iterator().next().properties().solutionSettings().get(0).defaultValue());
    }
}
