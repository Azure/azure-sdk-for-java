// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridconnectivity.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridconnectivity.fluent.models.SolutionConfigurationInner;
import com.azure.resourcemanager.hybridconnectivity.models.SolutionConfigurationListResult;
import com.azure.resourcemanager.hybridconnectivity.models.SolutionConfigurationProperties;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class SolutionConfigurationListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SolutionConfigurationListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"provisioningState\":\"Failed\",\"solutionType\":\"uv\",\"solutionSettings\":{\"phrupidgsybbejhp\":\"pybczmehmtzopb\"},\"status\":\"New\",\"statusDetails\":\"msxaobhd\",\"lastSyncTime\":\"2021-09-10T01:37:09Z\"},\"id\":\"qioqjzehtbmu\",\"name\":\"p\",\"type\":\"wnoi\"},{\"properties\":{\"provisioningState\":\"Canceled\",\"solutionType\":\"rxybqsoq\",\"solutionSettings\":{\"mbpazlobcufpdzn\":\"k\",\"nq\":\"btcqq\"},\"status\":\"Failed\",\"statusDetails\":\"gnufoooj\",\"lastSyncTime\":\"2021-06-05T07:25:28Z\"},\"id\":\"sqe\",\"name\":\"aagdfmg\",\"type\":\"zlhjxrifkwmrvkt\"},{\"properties\":{\"provisioningState\":\"Failed\",\"solutionType\":\"to\",\"solutionSettings\":{\"uajpsquc\":\"a\"},\"status\":\"New\",\"statusDetails\":\"fdkfogk\",\"lastSyncTime\":\"2021-05-13T10:35:22Z\"},\"id\":\"ofjdde\",\"name\":\"s\",\"type\":\"deupewnwrei\"}],\"nextLink\":\"zyf\"}")
            .toObject(SolutionConfigurationListResult.class);
        Assertions.assertEquals("uv", model.value().get(0).properties().solutionType());
        Assertions.assertEquals("pybczmehmtzopb",
            model.value().get(0).properties().solutionSettings().get("phrupidgsybbejhp"));
        Assertions.assertEquals("zyf", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SolutionConfigurationListResult model = new SolutionConfigurationListResult().withValue(Arrays.asList(
            new SolutionConfigurationInner().withProperties(new SolutionConfigurationProperties().withSolutionType("uv")
                .withSolutionSettings(mapOf("phrupidgsybbejhp", "pybczmehmtzopb"))),
            new SolutionConfigurationInner()
                .withProperties(new SolutionConfigurationProperties().withSolutionType("rxybqsoq")
                    .withSolutionSettings(mapOf("mbpazlobcufpdzn", "k", "nq", "btcqq"))),
            new SolutionConfigurationInner().withProperties(new SolutionConfigurationProperties().withSolutionType("to")
                .withSolutionSettings(mapOf("uajpsquc", "a")))))
            .withNextLink("zyf");
        model = BinaryData.fromObject(model).toObject(SolutionConfigurationListResult.class);
        Assertions.assertEquals("uv", model.value().get(0).properties().solutionType());
        Assertions.assertEquals("pybczmehmtzopb",
            model.value().get(0).properties().solutionSettings().get("phrupidgsybbejhp"));
        Assertions.assertEquals("zyf", model.nextLink());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
