// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.hybridconnectivity.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.hybridconnectivity.HybridConnectivityManager;
import com.azure.resourcemanager.hybridconnectivity.models.SolutionTypeResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SolutionTypesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"solutionType\":\"yajguqfhwygzlv\",\"description\":\"kfxu\",\"supportedAzureRegions\":[\"dwzrmuh\",\"pfcqdp\",\"qxqvpsvuoymgc\",\"elvezrypq\"],\"solutionSettings\":[{\"name\":\"eokerqwkyhkobopg\",\"displayName\":\"edkowepbqpcrfk\",\"type\":\"wccsnjvcdwxlpqek\",\"description\":\"tn\",\"allowedValues\":[\"tjsyin\",\"wfqatmtd\"],\"defaultValue\":\"tmdvypgikdgs\"}]},\"id\":\"w\",\"name\":\"birryuzhl\",\"type\":\"kj\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HybridConnectivityManager manager = HybridConnectivityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<SolutionTypeResource> response = manager.solutionTypes().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("yajguqfhwygzlv", response.iterator().next().properties().solutionType());
        Assertions.assertEquals("kfxu", response.iterator().next().properties().description());
        Assertions.assertEquals("dwzrmuh", response.iterator().next().properties().supportedAzureRegions().get(0));
        Assertions.assertEquals("eokerqwkyhkobopg",
            response.iterator().next().properties().solutionSettings().get(0).name());
        Assertions.assertEquals("edkowepbqpcrfk",
            response.iterator().next().properties().solutionSettings().get(0).displayName());
        Assertions.assertEquals("wccsnjvcdwxlpqek",
            response.iterator().next().properties().solutionSettings().get(0).type());
        Assertions.assertEquals("tn", response.iterator().next().properties().solutionSettings().get(0).description());
        Assertions.assertEquals("tjsyin",
            response.iterator().next().properties().solutionSettings().get(0).allowedValues().get(0));
        Assertions.assertEquals("tmdvypgikdgs",
            response.iterator().next().properties().solutionSettings().get(0).defaultValue());
    }
}
