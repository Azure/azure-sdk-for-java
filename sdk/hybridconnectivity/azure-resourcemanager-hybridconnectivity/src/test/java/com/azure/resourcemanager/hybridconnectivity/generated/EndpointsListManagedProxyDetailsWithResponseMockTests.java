// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.hybridconnectivity.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.hybridconnectivity.HybridConnectivityManager;
import com.azure.resourcemanager.hybridconnectivity.models.ManagedProxyRequest;
import com.azure.resourcemanager.hybridconnectivity.models.ManagedProxyResource;
import com.azure.resourcemanager.hybridconnectivity.models.ServiceName;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class EndpointsListManagedProxyDetailsWithResponseMockTests {
    @Test
    public void testListManagedProxyDetailsWithResponse() throws Exception {
        String responseStr = "{\"proxy\":\"zbn\",\"expiresOn\":1564863042825261686}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HybridConnectivityManager manager = HybridConnectivityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        ManagedProxyResource response = manager.endpoints()
            .listManagedProxyDetailsWithResponse("mdnbbglzpswiy", "mcwyhzdxssadb",
                new ManagedProxyRequest().withService("mnvdfzn").withHostname("ao").withServiceName(ServiceName.SSH),
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("zbn", response.proxy());
        Assertions.assertEquals(1564863042825261686L, response.expiresOn());
    }
}
