// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridconnectivity.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridconnectivity.fluent.models.InventoryResourceInner;
import com.azure.resourcemanager.hybridconnectivity.models.CloudNativeType;
import com.azure.resourcemanager.hybridconnectivity.models.InventoryProperties;
import com.azure.resourcemanager.hybridconnectivity.models.SolutionConfigurationStatus;
import org.junit.jupiter.api.Assertions;

public final class InventoryResourceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        InventoryResourceInner model = BinaryData.fromString(
            "{\"properties\":{\"cloudNativeType\":\"ec2\",\"cloudNativeResourceId\":\"nzl\",\"azureResourceId\":\"fmppe\",\"status\":\"InProgress\",\"statusDetails\":\"gxsabkyq\",\"provisioningState\":\"Succeeded\"},\"id\":\"itcjczdz\",\"name\":\"vndhkrwpdapp\",\"type\":\"sbdkvwr\"}")
            .toObject(InventoryResourceInner.class);
        Assertions.assertEquals(CloudNativeType.EC2, model.properties().cloudNativeType());
        Assertions.assertEquals("nzl", model.properties().cloudNativeResourceId());
        Assertions.assertEquals("fmppe", model.properties().azureResourceId());
        Assertions.assertEquals(SolutionConfigurationStatus.IN_PROGRESS, model.properties().status());
        Assertions.assertEquals("gxsabkyq", model.properties().statusDetails());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        InventoryResourceInner model = new InventoryResourceInner()
            .withProperties(new InventoryProperties().withCloudNativeType(CloudNativeType.EC2)
                .withCloudNativeResourceId("nzl")
                .withAzureResourceId("fmppe")
                .withStatus(SolutionConfigurationStatus.IN_PROGRESS)
                .withStatusDetails("gxsabkyq"));
        model = BinaryData.fromObject(model).toObject(InventoryResourceInner.class);
        Assertions.assertEquals(CloudNativeType.EC2, model.properties().cloudNativeType());
        Assertions.assertEquals("nzl", model.properties().cloudNativeResourceId());
        Assertions.assertEquals("fmppe", model.properties().azureResourceId());
        Assertions.assertEquals(SolutionConfigurationStatus.IN_PROGRESS, model.properties().status());
        Assertions.assertEquals("gxsabkyq", model.properties().statusDetails());
    }
}
