// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridconnectivity.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridconnectivity.fluent.models.ServiceConfigurationProperties;
import com.azure.resourcemanager.hybridconnectivity.models.ServiceName;
import org.junit.jupiter.api.Assertions;

public final class ServiceConfigurationPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ServiceConfigurationProperties model = BinaryData.fromString(
            "{\"serviceName\":\"WAC\",\"resourceId\":\"fqjhhkxbpvjymj\",\"port\":1509248183766128687,\"provisioningState\":\"Updating\"}")
            .toObject(ServiceConfigurationProperties.class);
        Assertions.assertEquals(ServiceName.WAC, model.serviceName());
        Assertions.assertEquals("fqjhhkxbpvjymj", model.resourceId());
        Assertions.assertEquals(1509248183766128687L, model.port());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ServiceConfigurationProperties model = new ServiceConfigurationProperties().withServiceName(ServiceName.WAC)
            .withResourceId("fqjhhkxbpvjymj")
            .withPort(1509248183766128687L);
        model = BinaryData.fromObject(model).toObject(ServiceConfigurationProperties.class);
        Assertions.assertEquals(ServiceName.WAC, model.serviceName());
        Assertions.assertEquals("fqjhhkxbpvjymj", model.resourceId());
        Assertions.assertEquals(1509248183766128687L, model.port());
    }
}
