// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridconnectivity.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridconnectivity.fluent.models.InventoryResourceInner;
import com.azure.resourcemanager.hybridconnectivity.models.CloudNativeType;
import com.azure.resourcemanager.hybridconnectivity.models.InventoryProperties;
import com.azure.resourcemanager.hybridconnectivity.models.InventoryResourceListResult;
import com.azure.resourcemanager.hybridconnectivity.models.SolutionConfigurationStatus;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class InventoryResourceListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        InventoryResourceListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"cloudNativeType\":\"ec2\",\"cloudNativeResourceId\":\"ojakhmsbzjhcrze\",\"azureResourceId\":\"phlxa\",\"status\":\"New\",\"statusDetails\":\"qtrgqjbpfzfsinzg\",\"provisioningState\":\"Canceled\"},\"id\":\"rwzoxxjtfelluwf\",\"name\":\"it\",\"type\":\"np\"},{\"properties\":{\"cloudNativeType\":\"ec2\",\"cloudNativeResourceId\":\"kjlxofpdvhpf\",\"azureResourceId\":\"ypininm\",\"status\":\"New\",\"statusDetails\":\"ybb\",\"provisioningState\":\"Failed\"},\"id\":\"epoo\",\"name\":\"inuvamiheogn\",\"type\":\"rxzxtheo\"},{\"properties\":{\"cloudNativeType\":\"ec2\",\"cloudNativeResourceId\":\"yevc\",\"azureResourceId\":\"qi\",\"status\":\"Completed\",\"statusDetails\":\"ngbwjz\",\"provisioningState\":\"Succeeded\"},\"id\":\"gxg\",\"name\":\"spemvtzfk\",\"type\":\"fublj\"},{\"properties\":{\"cloudNativeType\":\"ec2\",\"cloudNativeResourceId\":\"ofjaeqjhqjb\",\"azureResourceId\":\"v\",\"status\":\"Completed\",\"statusDetails\":\"qulngsntnbybkzgc\",\"provisioningState\":\"Succeeded\"},\"id\":\"lxxwrljdouskc\",\"name\":\"vkocrcjdkwtn\",\"type\":\"xbnjbiksq\"}],\"nextLink\":\"lssai\"}")
            .toObject(InventoryResourceListResult.class);
        Assertions.assertEquals(CloudNativeType.EC2, model.value().get(0).properties().cloudNativeType());
        Assertions.assertEquals("ojakhmsbzjhcrze", model.value().get(0).properties().cloudNativeResourceId());
        Assertions.assertEquals("phlxa", model.value().get(0).properties().azureResourceId());
        Assertions.assertEquals(SolutionConfigurationStatus.NEW, model.value().get(0).properties().status());
        Assertions.assertEquals("qtrgqjbpfzfsinzg", model.value().get(0).properties().statusDetails());
        Assertions.assertEquals("lssai", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        InventoryResourceListResult model = new InventoryResourceListResult().withValue(Arrays.asList(
            new InventoryResourceInner()
                .withProperties(new InventoryProperties().withCloudNativeType(CloudNativeType.EC2)
                    .withCloudNativeResourceId("ojakhmsbzjhcrze")
                    .withAzureResourceId("phlxa")
                    .withStatus(SolutionConfigurationStatus.NEW)
                    .withStatusDetails("qtrgqjbpfzfsinzg")),
            new InventoryResourceInner()
                .withProperties(new InventoryProperties().withCloudNativeType(CloudNativeType.EC2)
                    .withCloudNativeResourceId("kjlxofpdvhpf")
                    .withAzureResourceId("ypininm")
                    .withStatus(SolutionConfigurationStatus.NEW)
                    .withStatusDetails("ybb")),
            new InventoryResourceInner()
                .withProperties(new InventoryProperties().withCloudNativeType(CloudNativeType.EC2)
                    .withCloudNativeResourceId("yevc")
                    .withAzureResourceId("qi")
                    .withStatus(SolutionConfigurationStatus.COMPLETED)
                    .withStatusDetails("ngbwjz")),
            new InventoryResourceInner()
                .withProperties(new InventoryProperties().withCloudNativeType(CloudNativeType.EC2)
                    .withCloudNativeResourceId("ofjaeqjhqjb")
                    .withAzureResourceId("v")
                    .withStatus(SolutionConfigurationStatus.COMPLETED)
                    .withStatusDetails("qulngsntnbybkzgc"))))
            .withNextLink("lssai");
        model = BinaryData.fromObject(model).toObject(InventoryResourceListResult.class);
        Assertions.assertEquals(CloudNativeType.EC2, model.value().get(0).properties().cloudNativeType());
        Assertions.assertEquals("ojakhmsbzjhcrze", model.value().get(0).properties().cloudNativeResourceId());
        Assertions.assertEquals("phlxa", model.value().get(0).properties().azureResourceId());
        Assertions.assertEquals(SolutionConfigurationStatus.NEW, model.value().get(0).properties().status());
        Assertions.assertEquals("qtrgqjbpfzfsinzg", model.value().get(0).properties().statusDetails());
        Assertions.assertEquals("lssai", model.nextLink());
    }
}
