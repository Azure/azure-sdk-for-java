// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridconnectivity.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridconnectivity.fluent.models.ServiceConfigurationResourceInner;
import com.azure.resourcemanager.hybridconnectivity.models.ServiceConfigurationList;
import com.azure.resourcemanager.hybridconnectivity.models.ServiceName;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ServiceConfigurationListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ServiceConfigurationList model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"serviceName\":\"WAC\",\"resourceId\":\"n\",\"port\":6527904541779250049,\"provisioningState\":\"Creating\"},\"id\":\"zhxgktrmgucn\",\"name\":\"pkteo\",\"type\":\"llwptfdy\"}],\"nextLink\":\"fqbuaceopzf\"}")
            .toObject(ServiceConfigurationList.class);
        Assertions.assertEquals(ServiceName.WAC, model.value().get(0).serviceName());
        Assertions.assertEquals("n", model.value().get(0).resourceId());
        Assertions.assertEquals(6527904541779250049L, model.value().get(0).port());
        Assertions.assertEquals("fqbuaceopzf", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ServiceConfigurationList model = new ServiceConfigurationList()
            .withValue(Arrays.asList(new ServiceConfigurationResourceInner().withServiceName(ServiceName.WAC)
                .withResourceId("n")
                .withPort(6527904541779250049L)))
            .withNextLink("fqbuaceopzf");
        model = BinaryData.fromObject(model).toObject(ServiceConfigurationList.class);
        Assertions.assertEquals(ServiceName.WAC, model.value().get(0).serviceName());
        Assertions.assertEquals("n", model.value().get(0).resourceId());
        Assertions.assertEquals(6527904541779250049L, model.value().get(0).port());
        Assertions.assertEquals("fqbuaceopzf", model.nextLink());
    }
}
