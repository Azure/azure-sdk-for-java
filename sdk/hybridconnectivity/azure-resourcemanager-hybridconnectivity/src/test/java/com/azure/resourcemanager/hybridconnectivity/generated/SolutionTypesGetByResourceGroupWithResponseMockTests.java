// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridconnectivity.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.hybridconnectivity.HybridConnectivityManager;
import com.azure.resourcemanager.hybridconnectivity.models.SolutionTypeResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SolutionTypesGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"solutionType\":\"oqrvqqaatjin\",\"description\":\"goupmfiibfg\",\"supportedAzureRegions\":[\"ool\",\"rwxkvtkkgl\",\"qwjygvja\",\"vblm\"],\"solutionSettings\":[{\"name\":\"zuhbxvvyhgsopb\",\"displayName\":\"rqufegxuvwz\",\"type\":\"bnhlmc\",\"description\":\"l\",\"allowedValues\":[\"ngitvgbmhrixkwm\"],\"defaultValue\":\"ijejvegrhbpn\"}]},\"id\":\"xexccbdreaxhcexd\",\"name\":\"rvqahqkghtpwi\",\"type\":\"nhyjsv\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HybridConnectivityManager manager = HybridConnectivityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        SolutionTypeResource response = manager.solutionTypes()
            .getByResourceGroupWithResponse("w", "birryuzhl", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("oqrvqqaatjin", response.properties().solutionType());
        Assertions.assertEquals("goupmfiibfg", response.properties().description());
        Assertions.assertEquals("ool", response.properties().supportedAzureRegions().get(0));
        Assertions.assertEquals("zuhbxvvyhgsopb", response.properties().solutionSettings().get(0).name());
        Assertions.assertEquals("rqufegxuvwz", response.properties().solutionSettings().get(0).displayName());
        Assertions.assertEquals("bnhlmc", response.properties().solutionSettings().get(0).type());
        Assertions.assertEquals("l", response.properties().solutionSettings().get(0).description());
        Assertions.assertEquals("ngitvgbmhrixkwm",
            response.properties().solutionSettings().get(0).allowedValues().get(0));
        Assertions.assertEquals("ijejvegrhbpn", response.properties().solutionSettings().get(0).defaultValue());
    }
}
