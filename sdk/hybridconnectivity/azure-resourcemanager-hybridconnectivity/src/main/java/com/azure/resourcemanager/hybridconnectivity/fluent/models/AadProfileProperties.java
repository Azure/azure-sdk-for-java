// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridconnectivity.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The AAD Profile. */
@Fluent
public final class AadProfileProperties {
    /*
     * The arc ingress gateway server app id.
     */
    @JsonProperty(value = "serverId", required = true)
    private String serverId;

    /*
     * The target resource home tenant id.
     */
    @JsonProperty(value = "tenantId", required = true)
    private String tenantId;

    /** Creates an instance of AadProfileProperties class. */
    public AadProfileProperties() {
    }

    /**
     * Get the serverId property: The arc ingress gateway server app id.
     *
     * @return the serverId value.
     */
    public String serverId() {
        return this.serverId;
    }

    /**
     * Set the serverId property: The arc ingress gateway server app id.
     *
     * @param serverId the serverId value to set.
     * @return the AadProfileProperties object itself.
     */
    public AadProfileProperties withServerId(String serverId) {
        this.serverId = serverId;
        return this;
    }

    /**
     * Get the tenantId property: The target resource home tenant id.
     *
     * @return the tenantId value.
     */
    public String tenantId() {
        return this.tenantId;
    }

    /**
     * Set the tenantId property: The target resource home tenant id.
     *
     * @param tenantId the tenantId value to set.
     * @return the AadProfileProperties object itself.
     */
    public AadProfileProperties withTenantId(String tenantId) {
        this.tenantId = tenantId;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (serverId() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property serverId in model AadProfileProperties"));
        }
        if (tenantId() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property tenantId in model AadProfileProperties"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(AadProfileProperties.class);
}
