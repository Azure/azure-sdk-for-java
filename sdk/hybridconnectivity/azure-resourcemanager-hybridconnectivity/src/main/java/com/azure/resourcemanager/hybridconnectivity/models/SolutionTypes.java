// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.hybridconnectivity.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of SolutionTypes.
 */
public interface SolutionTypes {
    /**
     * Get a SolutionTypeResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param solutionType Solution Type resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a SolutionTypeResource along with {@link Response}.
     */
    Response<SolutionTypeResource> getByResourceGroupWithResponse(String resourceGroupName, String solutionType,
        Context context);

    /**
     * Get a SolutionTypeResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param solutionType Solution Type resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a SolutionTypeResource.
     */
    SolutionTypeResource getByResourceGroup(String resourceGroupName, String solutionType);

    /**
     * List SolutionTypeResource resources by resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a SolutionTypeResource list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<SolutionTypeResource> listByResourceGroup(String resourceGroupName);

    /**
     * List SolutionTypeResource resources by resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a SolutionTypeResource list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<SolutionTypeResource> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * List SolutionTypeResource resources by subscription ID.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a SolutionTypeResource list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<SolutionTypeResource> list();

    /**
     * List SolutionTypeResource resources by subscription ID.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a SolutionTypeResource list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<SolutionTypeResource> list(Context context);
}
