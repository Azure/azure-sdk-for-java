// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridconnectivity.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Endpoint details. */
@Fluent
public final class EndpointProperties {
    /*
     * The type of endpoint.
     */
    @JsonProperty(value = "type", required = true)
    private Type type;

    /*
     * The resource Id of the connectivity endpoint (optional).
     */
    @JsonProperty(value = "resourceId")
    private String resourceId;

    /*
     * The resource provisioning state.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private String provisioningState;

    /** Creates an instance of EndpointProperties class. */
    public EndpointProperties() {
    }

    /**
     * Get the type property: The type of endpoint.
     *
     * @return the type value.
     */
    public Type type() {
        return this.type;
    }

    /**
     * Set the type property: The type of endpoint.
     *
     * @param type the type value to set.
     * @return the EndpointProperties object itself.
     */
    public EndpointProperties withType(Type type) {
        this.type = type;
        return this;
    }

    /**
     * Get the resourceId property: The resource Id of the connectivity endpoint (optional).
     *
     * @return the resourceId value.
     */
    public String resourceId() {
        return this.resourceId;
    }

    /**
     * Set the resourceId property: The resource Id of the connectivity endpoint (optional).
     *
     * @param resourceId the resourceId value to set.
     * @return the EndpointProperties object itself.
     */
    public EndpointProperties withResourceId(String resourceId) {
        this.resourceId = resourceId;
        return this;
    }

    /**
     * Get the provisioningState property: The resource provisioning state.
     *
     * @return the provisioningState value.
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (type() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property type in model EndpointProperties"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(EndpointProperties.class);
}
