// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.hybridconnectivity.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.hybridconnectivity.fluent.models.OperationStatusResultInner;
import com.azure.resourcemanager.hybridconnectivity.fluent.models.PublicCloudConnectorInner;

/**
 * An instance of this class provides access to all the operations defined in PublicCloudConnectorsClient.
 */
public interface PublicCloudConnectorsClient {
    /**
     * Get a PublicCloudConnector.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publicCloudConnector Represent public cloud connectors resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a PublicCloudConnector along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<PublicCloudConnectorInner> getByResourceGroupWithResponse(String resourceGroupName,
        String publicCloudConnector, Context context);

    /**
     * Get a PublicCloudConnector.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publicCloudConnector Represent public cloud connectors resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a PublicCloudConnector.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    PublicCloudConnectorInner getByResourceGroup(String resourceGroupName, String publicCloudConnector);

    /**
     * Create a PublicCloudConnector.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publicCloudConnector Represent public cloud connectors resource.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of public Cloud Connector.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<PublicCloudConnectorInner>, PublicCloudConnectorInner>
        beginCreateOrUpdate(String resourceGroupName, String publicCloudConnector, PublicCloudConnectorInner resource);

    /**
     * Create a PublicCloudConnector.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publicCloudConnector Represent public cloud connectors resource.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of public Cloud Connector.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<PublicCloudConnectorInner>, PublicCloudConnectorInner> beginCreateOrUpdate(
        String resourceGroupName, String publicCloudConnector, PublicCloudConnectorInner resource, Context context);

    /**
     * Create a PublicCloudConnector.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publicCloudConnector Represent public cloud connectors resource.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return public Cloud Connector.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    PublicCloudConnectorInner createOrUpdate(String resourceGroupName, String publicCloudConnector,
        PublicCloudConnectorInner resource);

    /**
     * Create a PublicCloudConnector.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publicCloudConnector Represent public cloud connectors resource.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return public Cloud Connector.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    PublicCloudConnectorInner createOrUpdate(String resourceGroupName, String publicCloudConnector,
        PublicCloudConnectorInner resource, Context context);

    /**
     * Update a PublicCloudConnector.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publicCloudConnector Represent public cloud connectors resource.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return public Cloud Connector along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<PublicCloudConnectorInner> updateWithResponse(String resourceGroupName, String publicCloudConnector,
        PublicCloudConnectorInner properties, Context context);

    /**
     * Update a PublicCloudConnector.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publicCloudConnector Represent public cloud connectors resource.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return public Cloud Connector.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    PublicCloudConnectorInner update(String resourceGroupName, String publicCloudConnector,
        PublicCloudConnectorInner properties);

    /**
     * Delete a PublicCloudConnector.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publicCloudConnector Represent public cloud connectors resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String resourceGroupName, String publicCloudConnector, Context context);

    /**
     * Delete a PublicCloudConnector.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publicCloudConnector Represent public cloud connectors resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String publicCloudConnector);

    /**
     * List PublicCloudConnector resources by resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a PublicCloudConnector list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<PublicCloudConnectorInner> listByResourceGroup(String resourceGroupName);

    /**
     * List PublicCloudConnector resources by resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a PublicCloudConnector list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<PublicCloudConnectorInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * List PublicCloudConnector resources by subscription ID.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a PublicCloudConnector list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<PublicCloudConnectorInner> list();

    /**
     * List PublicCloudConnector resources by subscription ID.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a PublicCloudConnector list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<PublicCloudConnectorInner> list(Context context);

    /**
     * A long-running resource action.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publicCloudConnector Represent public cloud connectors resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<OperationStatusResultInner>, OperationStatusResultInner>
        beginTestPermissions(String resourceGroupName, String publicCloudConnector);

    /**
     * A long-running resource action.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publicCloudConnector Represent public cloud connectors resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<OperationStatusResultInner>, OperationStatusResultInner>
        beginTestPermissions(String resourceGroupName, String publicCloudConnector, Context context);

    /**
     * A long-running resource action.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publicCloudConnector Represent public cloud connectors resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    OperationStatusResultInner testPermissions(String resourceGroupName, String publicCloudConnector);

    /**
     * A long-running resource action.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publicCloudConnector Represent public cloud connectors resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    OperationStatusResultInner testPermissions(String resourceGroupName, String publicCloudConnector, Context context);
}
