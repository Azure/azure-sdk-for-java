// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridconnectivity.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Ingress gateway profile. */
@Fluent
public final class IngressProfileProperties {
    /*
     * The ingress hostname.
     */
    @JsonProperty(value = "hostname", required = true)
    private String hostname;

    /*
     * The AAD Profile
     */
    @JsonProperty(value = "aadProfile", required = true)
    private AadProfileProperties innerAadProfile = new AadProfileProperties();

    /** Creates an instance of IngressProfileProperties class. */
    public IngressProfileProperties() {
    }

    /**
     * Get the hostname property: The ingress hostname.
     *
     * @return the hostname value.
     */
    public String hostname() {
        return this.hostname;
    }

    /**
     * Set the hostname property: The ingress hostname.
     *
     * @param hostname the hostname value to set.
     * @return the IngressProfileProperties object itself.
     */
    public IngressProfileProperties withHostname(String hostname) {
        this.hostname = hostname;
        return this;
    }

    /**
     * Get the innerAadProfile property: The AAD Profile.
     *
     * @return the innerAadProfile value.
     */
    private AadProfileProperties innerAadProfile() {
        return this.innerAadProfile;
    }

    /**
     * Get the serverId property: The arc ingress gateway server app id.
     *
     * @return the serverId value.
     */
    public String serverId() {
        return this.innerAadProfile() == null ? null : this.innerAadProfile().serverId();
    }

    /**
     * Set the serverId property: The arc ingress gateway server app id.
     *
     * @param serverId the serverId value to set.
     * @return the IngressProfileProperties object itself.
     */
    public IngressProfileProperties withServerId(String serverId) {
        if (this.innerAadProfile() == null) {
            this.innerAadProfile = new AadProfileProperties();
        }
        this.innerAadProfile().withServerId(serverId);
        return this;
    }

    /**
     * Get the tenantId property: The target resource home tenant id.
     *
     * @return the tenantId value.
     */
    public String tenantId() {
        return this.innerAadProfile() == null ? null : this.innerAadProfile().tenantId();
    }

    /**
     * Set the tenantId property: The target resource home tenant id.
     *
     * @param tenantId the tenantId value to set.
     * @return the IngressProfileProperties object itself.
     */
    public IngressProfileProperties withTenantId(String tenantId) {
        if (this.innerAadProfile() == null) {
            this.innerAadProfile = new AadProfileProperties();
        }
        this.innerAadProfile().withTenantId(tenantId);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (hostname() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property hostname in model IngressProfileProperties"));
        }
        if (innerAadProfile() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property innerAadProfile in model IngressProfileProperties"));
        } else {
            innerAadProfile().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(IngressProfileProperties.class);
}
