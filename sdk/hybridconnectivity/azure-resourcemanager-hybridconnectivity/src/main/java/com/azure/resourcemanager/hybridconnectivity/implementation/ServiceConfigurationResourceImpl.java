// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridconnectivity.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.hybridconnectivity.fluent.models.ServiceConfigurationResourceInner;
import com.azure.resourcemanager.hybridconnectivity.models.ProvisioningState;
import com.azure.resourcemanager.hybridconnectivity.models.ServiceConfigurationResource;
import com.azure.resourcemanager.hybridconnectivity.models.ServiceConfigurationResourcePatch;
import com.azure.resourcemanager.hybridconnectivity.models.ServiceName;

public final class ServiceConfigurationResourceImpl
    implements ServiceConfigurationResource,
        ServiceConfigurationResource.Definition,
        ServiceConfigurationResource.Update {
    private ServiceConfigurationResourceInner innerObject;

    private final com.azure.resourcemanager.hybridconnectivity.HybridConnectivityManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public ServiceName serviceName() {
        return this.innerModel().serviceName();
    }

    public String resourceId() {
        return this.innerModel().resourceId();
    }

    public Long port() {
        return this.innerModel().port();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public ServiceConfigurationResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.hybridconnectivity.HybridConnectivityManager manager() {
        return this.serviceManager;
    }

    private String resourceUri;

    private String endpointName;

    private String serviceConfigurationName;

    private ServiceConfigurationResourcePatch updateServiceConfigurationResource;

    public ServiceConfigurationResourceImpl withExistingEndpoint(String resourceUri, String endpointName) {
        this.resourceUri = resourceUri;
        this.endpointName = endpointName;
        return this;
    }

    public ServiceConfigurationResource create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getServiceConfigurations()
                .createOrupdateWithResponse(
                    resourceUri, endpointName, serviceConfigurationName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public ServiceConfigurationResource create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getServiceConfigurations()
                .createOrupdateWithResponse(
                    resourceUri, endpointName, serviceConfigurationName, this.innerModel(), context)
                .getValue();
        return this;
    }

    ServiceConfigurationResourceImpl(
        String name, com.azure.resourcemanager.hybridconnectivity.HybridConnectivityManager serviceManager) {
        this.innerObject = new ServiceConfigurationResourceInner();
        this.serviceManager = serviceManager;
        this.serviceConfigurationName = name;
    }

    public ServiceConfigurationResourceImpl update() {
        this.updateServiceConfigurationResource = new ServiceConfigurationResourcePatch();
        return this;
    }

    public ServiceConfigurationResource apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getServiceConfigurations()
                .updateWithResponse(
                    resourceUri,
                    endpointName,
                    serviceConfigurationName,
                    updateServiceConfigurationResource,
                    Context.NONE)
                .getValue();
        return this;
    }

    public ServiceConfigurationResource apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getServiceConfigurations()
                .updateWithResponse(
                    resourceUri, endpointName, serviceConfigurationName, updateServiceConfigurationResource, context)
                .getValue();
        return this;
    }

    ServiceConfigurationResourceImpl(
        ServiceConfigurationResourceInner innerObject,
        com.azure.resourcemanager.hybridconnectivity.HybridConnectivityManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceUri =
            Utils
                .getValueFromIdByParameterName(
                    innerObject.id(),
                    "/{resourceUri}/providers/Microsoft.HybridConnectivity/endpoints/{endpointName}/serviceConfigurations/{serviceConfigurationName}",
                    "resourceUri");
        this.endpointName =
            Utils
                .getValueFromIdByParameterName(
                    innerObject.id(),
                    "/{resourceUri}/providers/Microsoft.HybridConnectivity/endpoints/{endpointName}/serviceConfigurations/{serviceConfigurationName}",
                    "endpointName");
        this.serviceConfigurationName =
            Utils
                .getValueFromIdByParameterName(
                    innerObject.id(),
                    "/{resourceUri}/providers/Microsoft.HybridConnectivity/endpoints/{endpointName}/serviceConfigurations/{serviceConfigurationName}",
                    "serviceConfigurationName");
    }

    public ServiceConfigurationResource refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getServiceConfigurations()
                .getWithResponse(resourceUri, endpointName, serviceConfigurationName, Context.NONE)
                .getValue();
        return this;
    }

    public ServiceConfigurationResource refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getServiceConfigurations()
                .getWithResponse(resourceUri, endpointName, serviceConfigurationName, context)
                .getValue();
        return this;
    }

    public ServiceConfigurationResourceImpl withServiceName(ServiceName serviceName) {
        this.innerModel().withServiceName(serviceName);
        return this;
    }

    public ServiceConfigurationResourceImpl withResourceId(String resourceId) {
        this.innerModel().withResourceId(resourceId);
        return this;
    }

    public ServiceConfigurationResourceImpl withPort(Long port) {
        if (isInCreateMode()) {
            this.innerModel().withPort(port);
            return this;
        } else {
            this.updateServiceConfigurationResource.withPort(port);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
