// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.hybridconnectivity.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * cloud profile for AWS.
 */
@Fluent
public final class AwsCloudProfile implements JsonSerializable<AwsCloudProfile> {
    /*
     * Account id for the AWS account.
     */
    private String accountId;

    /*
     * List of AWS accounts which need to be excluded.
     */
    private List<String> excludedAccounts;

    /*
     * Boolean value that indicates whether the account is organizational or not. True represents organization account,
     * whereas false represents a single account.
     */
    private Boolean isOrganizationalAccount;

    /**
     * Creates an instance of AwsCloudProfile class.
     */
    public AwsCloudProfile() {
    }

    /**
     * Get the accountId property: Account id for the AWS account.
     * 
     * @return the accountId value.
     */
    public String accountId() {
        return this.accountId;
    }

    /**
     * Set the accountId property: Account id for the AWS account.
     * 
     * @param accountId the accountId value to set.
     * @return the AwsCloudProfile object itself.
     */
    public AwsCloudProfile withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }

    /**
     * Get the excludedAccounts property: List of AWS accounts which need to be excluded.
     * 
     * @return the excludedAccounts value.
     */
    public List<String> excludedAccounts() {
        return this.excludedAccounts;
    }

    /**
     * Set the excludedAccounts property: List of AWS accounts which need to be excluded.
     * 
     * @param excludedAccounts the excludedAccounts value to set.
     * @return the AwsCloudProfile object itself.
     */
    public AwsCloudProfile withExcludedAccounts(List<String> excludedAccounts) {
        this.excludedAccounts = excludedAccounts;
        return this;
    }

    /**
     * Get the isOrganizationalAccount property: Boolean value that indicates whether the account is organizational or
     * not. True represents organization account, whereas false represents a single account.
     * 
     * @return the isOrganizationalAccount value.
     */
    public Boolean isOrganizationalAccount() {
        return this.isOrganizationalAccount;
    }

    /**
     * Set the isOrganizationalAccount property: Boolean value that indicates whether the account is organizational or
     * not. True represents organization account, whereas false represents a single account.
     * 
     * @param isOrganizationalAccount the isOrganizationalAccount value to set.
     * @return the AwsCloudProfile object itself.
     */
    public AwsCloudProfile withIsOrganizationalAccount(Boolean isOrganizationalAccount) {
        this.isOrganizationalAccount = isOrganizationalAccount;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (accountId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property accountId in model AwsCloudProfile"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(AwsCloudProfile.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("accountId", this.accountId);
        jsonWriter.writeArrayField("excludedAccounts", this.excludedAccounts,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeBooleanField("isOrganizationalAccount", this.isOrganizationalAccount);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AwsCloudProfile from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AwsCloudProfile if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AwsCloudProfile.
     */
    public static AwsCloudProfile fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AwsCloudProfile deserializedAwsCloudProfile = new AwsCloudProfile();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("accountId".equals(fieldName)) {
                    deserializedAwsCloudProfile.accountId = reader.getString();
                } else if ("excludedAccounts".equals(fieldName)) {
                    List<String> excludedAccounts = reader.readArray(reader1 -> reader1.getString());
                    deserializedAwsCloudProfile.excludedAccounts = excludedAccounts;
                } else if ("isOrganizationalAccount".equals(fieldName)) {
                    deserializedAwsCloudProfile.isOrganizationalAccount = reader.getNullable(JsonReader::getBoolean);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAwsCloudProfile;
        });
    }
}
