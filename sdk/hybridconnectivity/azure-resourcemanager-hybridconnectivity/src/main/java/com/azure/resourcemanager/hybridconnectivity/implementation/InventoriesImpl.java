// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.hybridconnectivity.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.hybridconnectivity.fluent.InventoriesClient;
import com.azure.resourcemanager.hybridconnectivity.fluent.models.InventoryResourceInner;
import com.azure.resourcemanager.hybridconnectivity.models.Inventories;
import com.azure.resourcemanager.hybridconnectivity.models.InventoryResource;

public final class InventoriesImpl implements Inventories {
    private static final ClientLogger LOGGER = new ClientLogger(InventoriesImpl.class);

    private final InventoriesClient innerClient;

    private final com.azure.resourcemanager.hybridconnectivity.HybridConnectivityManager serviceManager;

    public InventoriesImpl(InventoriesClient innerClient,
        com.azure.resourcemanager.hybridconnectivity.HybridConnectivityManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<InventoryResource> getWithResponse(String resourceUri, String solutionConfiguration,
        String inventoryId, Context context) {
        Response<InventoryResourceInner> inner
            = this.serviceClient().getWithResponse(resourceUri, solutionConfiguration, inventoryId, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new InventoryResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public InventoryResource get(String resourceUri, String solutionConfiguration, String inventoryId) {
        InventoryResourceInner inner = this.serviceClient().get(resourceUri, solutionConfiguration, inventoryId);
        if (inner != null) {
            return new InventoryResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public PagedIterable<InventoryResource> listBySolutionConfiguration(String resourceUri,
        String solutionConfiguration) {
        PagedIterable<InventoryResourceInner> inner
            = this.serviceClient().listBySolutionConfiguration(resourceUri, solutionConfiguration);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new InventoryResourceImpl(inner1, this.manager()));
    }

    public PagedIterable<InventoryResource> listBySolutionConfiguration(String resourceUri,
        String solutionConfiguration, Context context) {
        PagedIterable<InventoryResourceInner> inner
            = this.serviceClient().listBySolutionConfiguration(resourceUri, solutionConfiguration, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new InventoryResourceImpl(inner1, this.manager()));
    }

    private InventoriesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.hybridconnectivity.HybridConnectivityManager manager() {
        return this.serviceManager;
    }
}
