// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.hybridconnectivity.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Solution configuration resource.
 */
@Fluent
public final class SolutionConfigurationPropertiesUpdate
    implements JsonSerializable<SolutionConfigurationPropertiesUpdate> {
    /*
     * The type of the solution
     */
    private String solutionType;

    /*
     * Solution settings
     */
    private SolutionSettings solutionSettings;

    /**
     * Creates an instance of SolutionConfigurationPropertiesUpdate class.
     */
    public SolutionConfigurationPropertiesUpdate() {
    }

    /**
     * Get the solutionType property: The type of the solution.
     * 
     * @return the solutionType value.
     */
    public String solutionType() {
        return this.solutionType;
    }

    /**
     * Set the solutionType property: The type of the solution.
     * 
     * @param solutionType the solutionType value to set.
     * @return the SolutionConfigurationPropertiesUpdate object itself.
     */
    public SolutionConfigurationPropertiesUpdate withSolutionType(String solutionType) {
        this.solutionType = solutionType;
        return this;
    }

    /**
     * Get the solutionSettings property: Solution settings.
     * 
     * @return the solutionSettings value.
     */
    public SolutionSettings solutionSettings() {
        return this.solutionSettings;
    }

    /**
     * Set the solutionSettings property: Solution settings.
     * 
     * @param solutionSettings the solutionSettings value to set.
     * @return the SolutionConfigurationPropertiesUpdate object itself.
     */
    public SolutionConfigurationPropertiesUpdate withSolutionSettings(SolutionSettings solutionSettings) {
        this.solutionSettings = solutionSettings;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (solutionSettings() != null) {
            solutionSettings().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("solutionType", this.solutionType);
        jsonWriter.writeJsonField("solutionSettings", this.solutionSettings);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SolutionConfigurationPropertiesUpdate from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SolutionConfigurationPropertiesUpdate if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SolutionConfigurationPropertiesUpdate.
     */
    public static SolutionConfigurationPropertiesUpdate fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SolutionConfigurationPropertiesUpdate deserializedSolutionConfigurationPropertiesUpdate
                = new SolutionConfigurationPropertiesUpdate();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("solutionType".equals(fieldName)) {
                    deserializedSolutionConfigurationPropertiesUpdate.solutionType = reader.getString();
                } else if ("solutionSettings".equals(fieldName)) {
                    deserializedSolutionConfigurationPropertiesUpdate.solutionSettings
                        = SolutionSettings.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSolutionConfigurationPropertiesUpdate;
        });
    }
}
