// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridconnectivity.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.hybridconnectivity.models.Type;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The endpoint for the target resource. */
@Fluent
public final class EndpointResourceInner extends ProxyResource {
    /*
     * System data of endpoint resource
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData innerSystemData;

    /*
     * The endpoint properties.
     */
    @JsonProperty(value = "properties")
    private EndpointProperties innerProperties;

    /**
     * Get the innerSystemData property: System data of endpoint resource.
     *
     * @return the innerSystemData value.
     */
    private SystemData innerSystemData() {
        return this.innerSystemData;
    }

    /**
     * Get the innerProperties property: The endpoint properties.
     *
     * @return the innerProperties value.
     */
    private EndpointProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the type property: The type of endpoint.
     *
     * @return the type value.
     */
    public Type typePropertiesType() {
        return this.innerProperties() == null ? null : this.innerProperties().type();
    }

    /**
     * Set the type property: The type of endpoint.
     *
     * @param type the type value to set.
     * @return the EndpointResourceInner object itself.
     */
    public EndpointResourceInner withTypePropertiesType(Type type) {
        if (this.innerProperties() == null) {
            this.innerProperties = new EndpointProperties();
        }
        this.innerProperties().withType(type);
        return this;
    }

    /**
     * Get the resourceId property: The resource Id of the connectivity endpoint (optional).
     *
     * @return the resourceId value.
     */
    public String resourceId() {
        return this.innerProperties() == null ? null : this.innerProperties().resourceId();
    }

    /**
     * Set the resourceId property: The resource Id of the connectivity endpoint (optional).
     *
     * @param resourceId the resourceId value to set.
     * @return the EndpointResourceInner object itself.
     */
    public EndpointResourceInner withResourceId(String resourceId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new EndpointProperties();
        }
        this.innerProperties().withResourceId(resourceId);
        return this;
    }

    /**
     * Get the provisioningState property: The resource provisioning state.
     *
     * @return the provisioningState value.
     */
    public String provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
