// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridconnectivity.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Represent ListIngressGatewayCredentials Request object.
 */
@Fluent
public final class ListIngressGatewayCredentialsRequest
    implements JsonSerializable<ListIngressGatewayCredentialsRequest> {
    /*
     * The name of the service.
     */
    private ServiceName serviceName;

    /**
     * Creates an instance of ListIngressGatewayCredentialsRequest class.
     */
    public ListIngressGatewayCredentialsRequest() {
    }

    /**
     * Get the serviceName property: The name of the service.
     * 
     * @return the serviceName value.
     */
    public ServiceName serviceName() {
        return this.serviceName;
    }

    /**
     * Set the serviceName property: The name of the service.
     * 
     * @param serviceName the serviceName value to set.
     * @return the ListIngressGatewayCredentialsRequest object itself.
     */
    public ListIngressGatewayCredentialsRequest withServiceName(ServiceName serviceName) {
        this.serviceName = serviceName;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("serviceName", this.serviceName == null ? null : this.serviceName.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ListIngressGatewayCredentialsRequest from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ListIngressGatewayCredentialsRequest if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ListIngressGatewayCredentialsRequest.
     */
    public static ListIngressGatewayCredentialsRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ListIngressGatewayCredentialsRequest deserializedListIngressGatewayCredentialsRequest
                = new ListIngressGatewayCredentialsRequest();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("serviceName".equals(fieldName)) {
                    deserializedListIngressGatewayCredentialsRequest.serviceName
                        = ServiceName.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedListIngressGatewayCredentialsRequest;
        });
    }
}
