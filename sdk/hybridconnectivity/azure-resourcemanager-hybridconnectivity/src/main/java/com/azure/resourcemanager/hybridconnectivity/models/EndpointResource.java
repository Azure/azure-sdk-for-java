// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridconnectivity.models;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.hybridconnectivity.fluent.models.EndpointResourceInner;

/** An immutable client-side representation of EndpointResource. */
public interface EndpointResource {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the typePropertiesType property: The type of endpoint.
     *
     * @return the typePropertiesType value.
     */
    Type typePropertiesType();

    /**
     * Gets the resourceId property: The resource Id of the connectivity endpoint (optional).
     *
     * @return the resourceId value.
     */
    String resourceId();

    /**
     * Gets the provisioningState property: The provisioningState property.
     *
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * Gets the inner com.azure.resourcemanager.hybridconnectivity.fluent.models.EndpointResourceInner object.
     *
     * @return the inner object.
     */
    EndpointResourceInner innerModel();

    /** The entirety of the EndpointResource definition. */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithScope, DefinitionStages.WithCreate {
    }
    /** The EndpointResource definition stages. */
    interface DefinitionStages {
        /** The first stage of the EndpointResource definition. */
        interface Blank extends WithScope {
        }
        /** The stage of the EndpointResource definition allowing to specify parent resource. */
        interface WithScope {
            /**
             * Specifies resourceUri.
             *
             * @param resourceUri The fully qualified Azure Resource manager identifier of the resource to be connected.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceUri(String resourceUri);
        }
        /**
         * The stage of the EndpointResource definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithTypePropertiesType, DefinitionStages.WithResourceId {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            EndpointResource create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            EndpointResource create(Context context);
        }
        /** The stage of the EndpointResource definition allowing to specify typePropertiesType. */
        interface WithTypePropertiesType {
            /**
             * Specifies the typePropertiesType property: The type of endpoint..
             *
             * @param typePropertiesType The type of endpoint.
             * @return the next definition stage.
             */
            WithCreate withTypePropertiesType(Type typePropertiesType);
        }
        /** The stage of the EndpointResource definition allowing to specify resourceId. */
        interface WithResourceId {
            /**
             * Specifies the resourceId property: The resource Id of the connectivity endpoint (optional)..
             *
             * @param resourceId The resource Id of the connectivity endpoint (optional).
             * @return the next definition stage.
             */
            WithCreate withResourceId(String resourceId);
        }
    }
    /**
     * Begins update for the EndpointResource resource.
     *
     * @return the stage of resource update.
     */
    EndpointResource.Update update();

    /** The template for EndpointResource update. */
    interface Update extends UpdateStages.WithTypePropertiesType, UpdateStages.WithResourceId {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        EndpointResource apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        EndpointResource apply(Context context);
    }
    /** The EndpointResource update stages. */
    interface UpdateStages {
        /** The stage of the EndpointResource update allowing to specify typePropertiesType. */
        interface WithTypePropertiesType {
            /**
             * Specifies the typePropertiesType property: The type of endpoint..
             *
             * @param typePropertiesType The type of endpoint.
             * @return the next definition stage.
             */
            Update withTypePropertiesType(Type typePropertiesType);
        }
        /** The stage of the EndpointResource update allowing to specify resourceId. */
        interface WithResourceId {
            /**
             * Specifies the resourceId property: The resource Id of the connectivity endpoint (optional)..
             *
             * @param resourceId The resource Id of the connectivity endpoint (optional).
             * @return the next definition stage.
             */
            Update withResourceId(String resourceId);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    EndpointResource refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    EndpointResource refresh(Context context);

    /**
     * Gets the endpoint access credentials to the resource.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the endpoint access credentials to the resource.
     */
    EndpointAccessResource listCredentials();

    /**
     * Gets the endpoint access credentials to the resource.
     *
     * @param expiresin The is how long the endpoint access token is valid (in seconds).
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the endpoint access credentials to the resource.
     */
    Response<EndpointAccessResource> listCredentialsWithResponse(Long expiresin, Context context);
}
