// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.hybridconnectivity.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of PublicCloudConnectors.
 */
public interface PublicCloudConnectors {
    /**
     * Get a PublicCloudConnector.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publicCloudConnector Represent public cloud connectors resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a PublicCloudConnector along with {@link Response}.
     */
    Response<PublicCloudConnector> getByResourceGroupWithResponse(String resourceGroupName, String publicCloudConnector,
        Context context);

    /**
     * Get a PublicCloudConnector.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publicCloudConnector Represent public cloud connectors resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a PublicCloudConnector.
     */
    PublicCloudConnector getByResourceGroup(String resourceGroupName, String publicCloudConnector);

    /**
     * Delete a PublicCloudConnector.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publicCloudConnector Represent public cloud connectors resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByResourceGroupWithResponse(String resourceGroupName, String publicCloudConnector,
        Context context);

    /**
     * Delete a PublicCloudConnector.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publicCloudConnector Represent public cloud connectors resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String publicCloudConnector);

    /**
     * List PublicCloudConnector resources by resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a PublicCloudConnector list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<PublicCloudConnector> listByResourceGroup(String resourceGroupName);

    /**
     * List PublicCloudConnector resources by resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a PublicCloudConnector list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<PublicCloudConnector> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * List PublicCloudConnector resources by subscription ID.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a PublicCloudConnector list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<PublicCloudConnector> list();

    /**
     * List PublicCloudConnector resources by subscription ID.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a PublicCloudConnector list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<PublicCloudConnector> list(Context context);

    /**
     * A long-running resource action.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publicCloudConnector Represent public cloud connectors resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    OperationStatusResult testPermissions(String resourceGroupName, String publicCloudConnector);

    /**
     * A long-running resource action.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param publicCloudConnector Represent public cloud connectors resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    OperationStatusResult testPermissions(String resourceGroupName, String publicCloudConnector, Context context);

    /**
     * Get a PublicCloudConnector.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a PublicCloudConnector along with {@link Response}.
     */
    PublicCloudConnector getById(String id);

    /**
     * Get a PublicCloudConnector.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a PublicCloudConnector along with {@link Response}.
     */
    Response<PublicCloudConnector> getByIdWithResponse(String id, Context context);

    /**
     * Delete a PublicCloudConnector.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete a PublicCloudConnector.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new PublicCloudConnector resource.
     * 
     * @param name resource name.
     * @return the first stage of the new PublicCloudConnector definition.
     */
    PublicCloudConnector.DefinitionStages.Blank define(String name);
}
