/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * abc
 */

package com.microsoft.azure.management.resourcegraph.v2019_04_01.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.resourcegraph.v2019_04_01.ResourceProviders;
import rx.functions.Func1;
import rx.Observable;
import com.microsoft.azure.management.resourcegraph.v2019_04_01.QueryResponse;
import com.microsoft.azure.management.resourcegraph.v2019_04_01.QueryRequest;

class ResourceProvidersImpl extends WrapperImpl<ResourceProvidersInner> implements ResourceProviders {
    private final ResourceGraphManager manager;

    ResourceProvidersImpl(ResourceGraphManager manager) {
        super(manager.inner().resourceProviders());
        this.manager = manager;
    }

    public ResourceGraphManager manager() {
        return this.manager;
    }

    @Override
    public Observable<QueryResponse> resourcesAsync(QueryRequest query) {
        ResourceProvidersInner client = this.inner();
        return client.resourcesAsync(query)
        .map(new Func1<QueryResponseInner, QueryResponse>() {
            @Override
            public QueryResponse call(QueryResponseInner inner) {
                return new QueryResponseImpl(inner, manager());
            }
        });
    }

    @Override
    public QueryResponse resources(QueryRequest query) {
        return this.resourcesAsync(query).toBlocking().last();
    }

}
