// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.resourcegraph.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Describes a history request to be executed. */
@Fluent
public final class ResourcesHistoryRequest {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ResourcesHistoryRequest.class);

    /*
     * Azure subscriptions against which to execute the query.
     */
    @JsonProperty(value = "subscriptions")
    private List<String> subscriptions;

    /*
     * The resources query.
     */
    @JsonProperty(value = "query")
    private String query;

    /*
     * The history request evaluation options
     */
    @JsonProperty(value = "options")
    private ResourcesHistoryRequestOptions options;

    /*
     * Azure management groups against which to execute the query. Example: [
     * 'mg1', 'mg2' ]
     */
    @JsonProperty(value = "managementGroups")
    private List<String> managementGroups;

    /**
     * Get the subscriptions property: Azure subscriptions against which to execute the query.
     *
     * @return the subscriptions value.
     */
    public List<String> subscriptions() {
        return this.subscriptions;
    }

    /**
     * Set the subscriptions property: Azure subscriptions against which to execute the query.
     *
     * @param subscriptions the subscriptions value to set.
     * @return the ResourcesHistoryRequest object itself.
     */
    public ResourcesHistoryRequest withSubscriptions(List<String> subscriptions) {
        this.subscriptions = subscriptions;
        return this;
    }

    /**
     * Get the query property: The resources query.
     *
     * @return the query value.
     */
    public String query() {
        return this.query;
    }

    /**
     * Set the query property: The resources query.
     *
     * @param query the query value to set.
     * @return the ResourcesHistoryRequest object itself.
     */
    public ResourcesHistoryRequest withQuery(String query) {
        this.query = query;
        return this;
    }

    /**
     * Get the options property: The history request evaluation options.
     *
     * @return the options value.
     */
    public ResourcesHistoryRequestOptions options() {
        return this.options;
    }

    /**
     * Set the options property: The history request evaluation options.
     *
     * @param options the options value to set.
     * @return the ResourcesHistoryRequest object itself.
     */
    public ResourcesHistoryRequest withOptions(ResourcesHistoryRequestOptions options) {
        this.options = options;
        return this;
    }

    /**
     * Get the managementGroups property: Azure management groups against which to execute the query. Example: [ 'mg1',
     * 'mg2' ].
     *
     * @return the managementGroups value.
     */
    public List<String> managementGroups() {
        return this.managementGroups;
    }

    /**
     * Set the managementGroups property: Azure management groups against which to execute the query. Example: [ 'mg1',
     * 'mg2' ].
     *
     * @param managementGroups the managementGroups value to set.
     * @return the ResourcesHistoryRequest object itself.
     */
    public ResourcesHistoryRequest withManagementGroups(List<String> managementGroups) {
        this.managementGroups = managementGroups;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (options() != null) {
            options().validate();
        }
    }
}
