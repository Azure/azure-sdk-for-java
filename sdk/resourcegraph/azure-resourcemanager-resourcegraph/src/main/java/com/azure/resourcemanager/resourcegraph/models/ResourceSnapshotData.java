// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.resourcegraph.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** Data on a specific resource snapshot. */
@Fluent
public class ResourceSnapshotData {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ResourceSnapshotData.class);

    /*
     * The ID of the snapshot.
     */
    @JsonProperty(value = "snapshotId")
    private String snapshotId;

    /*
     * The time when the snapshot was created.
     * The snapshot timestamp provides an approximation as to when a
     * modification to a resource was detected.  There can be a difference
     * between the actual modification time and the detection time.  This is
     * due to differences in how operations that modify a resource are
     * processed, versus how operation that record resource snapshots are
     * processed.
     */
    @JsonProperty(value = "timestamp", required = true)
    private OffsetDateTime timestamp;

    /*
     * The resource snapshot content (in resourceChangeDetails response only).
     */
    @JsonProperty(value = "content")
    private Object content;

    /**
     * Get the snapshotId property: The ID of the snapshot.
     *
     * @return the snapshotId value.
     */
    public String snapshotId() {
        return this.snapshotId;
    }

    /**
     * Set the snapshotId property: The ID of the snapshot.
     *
     * @param snapshotId the snapshotId value to set.
     * @return the ResourceSnapshotData object itself.
     */
    public ResourceSnapshotData withSnapshotId(String snapshotId) {
        this.snapshotId = snapshotId;
        return this;
    }

    /**
     * Get the timestamp property: The time when the snapshot was created. The snapshot timestamp provides an
     * approximation as to when a modification to a resource was detected. There can be a difference between the actual
     * modification time and the detection time. This is due to differences in how operations that modify a resource are
     * processed, versus how operation that record resource snapshots are processed.
     *
     * @return the timestamp value.
     */
    public OffsetDateTime timestamp() {
        return this.timestamp;
    }

    /**
     * Set the timestamp property: The time when the snapshot was created. The snapshot timestamp provides an
     * approximation as to when a modification to a resource was detected. There can be a difference between the actual
     * modification time and the detection time. This is due to differences in how operations that modify a resource are
     * processed, versus how operation that record resource snapshots are processed.
     *
     * @param timestamp the timestamp value to set.
     * @return the ResourceSnapshotData object itself.
     */
    public ResourceSnapshotData withTimestamp(OffsetDateTime timestamp) {
        this.timestamp = timestamp;
        return this;
    }

    /**
     * Get the content property: The resource snapshot content (in resourceChangeDetails response only).
     *
     * @return the content value.
     */
    public Object content() {
        return this.content;
    }

    /**
     * Set the content property: The resource snapshot content (in resourceChangeDetails response only).
     *
     * @param content the content value to set.
     * @return the ResourceSnapshotData object itself.
     */
    public ResourceSnapshotData withContent(Object content) {
        this.content = content;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (timestamp() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property timestamp in model ResourceSnapshotData"));
        }
    }
}
