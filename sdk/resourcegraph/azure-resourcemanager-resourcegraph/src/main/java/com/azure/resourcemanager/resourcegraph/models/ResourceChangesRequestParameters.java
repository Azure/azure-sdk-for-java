// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.resourcegraph.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The parameters for a specific changes request. */
@Fluent
public final class ResourceChangesRequestParameters {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ResourceChangesRequestParameters.class);

    /*
     * Specifies the resource for a changes request.
     */
    @JsonProperty(value = "resourceId", required = true)
    private String resourceId;

    /*
     * Specifies the date and time interval for a changes request.
     */
    @JsonProperty(value = "interval", required = true)
    private DateTimeInterval interval;

    /*
     * Acts as the continuation token for paged responses.
     */
    @JsonProperty(value = "$skipToken")
    private String skipToken;

    /*
     * The maximum number of changes the client can accept in a paged response.
     */
    @JsonProperty(value = "$top")
    private Integer top;

    /*
     * The flag if set to true will fetch property changes
     */
    @JsonProperty(value = "fetchPropertyChanges")
    private Boolean fetchPropertyChanges;

    /**
     * Get the resourceId property: Specifies the resource for a changes request.
     *
     * @return the resourceId value.
     */
    public String resourceId() {
        return this.resourceId;
    }

    /**
     * Set the resourceId property: Specifies the resource for a changes request.
     *
     * @param resourceId the resourceId value to set.
     * @return the ResourceChangesRequestParameters object itself.
     */
    public ResourceChangesRequestParameters withResourceId(String resourceId) {
        this.resourceId = resourceId;
        return this;
    }

    /**
     * Get the interval property: Specifies the date and time interval for a changes request.
     *
     * @return the interval value.
     */
    public DateTimeInterval interval() {
        return this.interval;
    }

    /**
     * Set the interval property: Specifies the date and time interval for a changes request.
     *
     * @param interval the interval value to set.
     * @return the ResourceChangesRequestParameters object itself.
     */
    public ResourceChangesRequestParameters withInterval(DateTimeInterval interval) {
        this.interval = interval;
        return this;
    }

    /**
     * Get the skipToken property: Acts as the continuation token for paged responses.
     *
     * @return the skipToken value.
     */
    public String skipToken() {
        return this.skipToken;
    }

    /**
     * Set the skipToken property: Acts as the continuation token for paged responses.
     *
     * @param skipToken the skipToken value to set.
     * @return the ResourceChangesRequestParameters object itself.
     */
    public ResourceChangesRequestParameters withSkipToken(String skipToken) {
        this.skipToken = skipToken;
        return this;
    }

    /**
     * Get the top property: The maximum number of changes the client can accept in a paged response.
     *
     * @return the top value.
     */
    public Integer top() {
        return this.top;
    }

    /**
     * Set the top property: The maximum number of changes the client can accept in a paged response.
     *
     * @param top the top value to set.
     * @return the ResourceChangesRequestParameters object itself.
     */
    public ResourceChangesRequestParameters withTop(Integer top) {
        this.top = top;
        return this;
    }

    /**
     * Get the fetchPropertyChanges property: The flag if set to true will fetch property changes.
     *
     * @return the fetchPropertyChanges value.
     */
    public Boolean fetchPropertyChanges() {
        return this.fetchPropertyChanges;
    }

    /**
     * Set the fetchPropertyChanges property: The flag if set to true will fetch property changes.
     *
     * @param fetchPropertyChanges the fetchPropertyChanges value to set.
     * @return the ResourceChangesRequestParameters object itself.
     */
    public ResourceChangesRequestParameters withFetchPropertyChanges(Boolean fetchPropertyChanges) {
        this.fetchPropertyChanges = fetchPropertyChanges;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (resourceId() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property resourceId in model ResourceChangesRequestParameters"));
        }
        if (interval() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property interval in model ResourceChangesRequestParameters"));
        } else {
            interval().validate();
        }
    }
}
