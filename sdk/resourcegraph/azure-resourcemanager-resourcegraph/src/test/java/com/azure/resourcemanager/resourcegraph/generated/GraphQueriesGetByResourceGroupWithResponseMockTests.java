// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.resourcegraph.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.resourcegraph.ResourceGraphManager;
import com.azure.resourcemanager.resourcegraph.models.GraphQueryResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class GraphQueriesGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"timeModified\":\"2021-05-13T11:12:13Z\",\"description\":\"cuiywgqyw\",\"query\":\"ndrvynhzg\",\"resultKind\":\"basic\"},\"etag\":\"cgyncocpecf\",\"location\":\"m\",\"tags\":{\"zevgb\":\"ofsx\"},\"id\":\"qjqabcypmivkwl\",\"name\":\"uvcc\",\"type\":\"wnfnbacf\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ResourceGraphManager manager = ResourceGraphManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        GraphQueryResource response = manager.graphQueries()
            .getByResourceGroupWithResponse("tthzrvqd", "abhjybi", "ehoqfbowskan", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("m", response.location());
        Assertions.assertEquals("ofsx", response.tags().get("zevgb"));
        Assertions.assertEquals("cgyncocpecf", response.etag());
        Assertions.assertEquals("cuiywgqyw", response.description());
        Assertions.assertEquals("ndrvynhzg", response.query());
    }
}
