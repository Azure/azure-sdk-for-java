// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.resourcegraph.generated;

import com.azure.core.util.Context;
import com.azure.resourcemanager.resourcegraph.models.ResourceChangesRequestParameters;
import com.azure.resourcemanager.resourcegraph.models.ResourceChangesRequestParametersInterval;
import java.time.OffsetDateTime;
import java.util.Arrays;

/** Samples for ResourceProvider ResourceChanges. */
public final class ResourceProviderResourceChangesSamples {
    /*
     * x-ms-original-file: specification/resourcegraph/resource-manager/Microsoft.ResourceGraph/preview/2020-09-01-preview/examples/ResourceChanges.json
     */
    /**
     * Sample code: Basic query.
     *
     * @param manager Entry point to ResourceGraphManager.
     */
    public static void basicQuery(com.azure.resourcemanager.resourcegraph.ResourceGraphManager manager) {
        manager
            .resourceProviders()
            .resourceChangesWithResponse(
                new ResourceChangesRequestParameters()
                    .withResourceIds(
                        Arrays
                            .asList(
                                "/subscriptions/4d962866-1e3f-47f2-bd18-450c08f914c1/resourceGroups/MyResourceGroup/providers/Microsoft.Storage/storageAccounts/mystorageaccount"))
                    .withInterval(
                        new ResourceChangesRequestParametersInterval()
                            .withStart(OffsetDateTime.parse("2018-10-30T12:09:03.141Z"))
                            .withEnd(OffsetDateTime.parse("2018-10-31T12:09:03.141Z"))),
                Context.NONE);
    }

    /*
     * x-ms-original-file: specification/resourcegraph/resource-manager/Microsoft.ResourceGraph/preview/2020-09-01-preview/examples/ResourceChangesNextPage.json
     */
    /**
     * Sample code: Next page query.
     *
     * @param manager Entry point to ResourceGraphManager.
     */
    public static void nextPageQuery(com.azure.resourcemanager.resourcegraph.ResourceGraphManager manager) {
        manager
            .resourceProviders()
            .resourceChangesWithResponse(
                new ResourceChangesRequestParameters()
                    .withResourceIds(
                        Arrays
                            .asList(
                                "/subscriptions/4d962866-1e3f-47f2-bd18-450c08f914c1/resourceGroups/MyResourceGroup/providers/Microsoft.Storage/storageAccounts/mystorageaccount"))
                    .withInterval(
                        new ResourceChangesRequestParametersInterval()
                            .withStart(OffsetDateTime.parse("2018-10-30T12:09:03.141Z"))
                            .withEnd(OffsetDateTime.parse("2018-10-31T12:09:03.141Z")))
                    .withSkipToken("ew0KICAiJGlkIjogIjEiLA0KICAiRW5kVGltZSI6ICJcL0RhdGUoMTU1MDc0NT")
                    .withTop(2),
                Context.NONE);
    }

    /*
     * x-ms-original-file: specification/resourcegraph/resource-manager/Microsoft.ResourceGraph/preview/2020-09-01-preview/examples/ResourceChangesFirstPage.json
     */
    /**
     * Sample code: First page query.
     *
     * @param manager Entry point to ResourceGraphManager.
     */
    public static void firstPageQuery(com.azure.resourcemanager.resourcegraph.ResourceGraphManager manager) {
        manager
            .resourceProviders()
            .resourceChangesWithResponse(
                new ResourceChangesRequestParameters()
                    .withResourceIds(
                        Arrays
                            .asList(
                                "/subscriptions/4d962866-1e3f-47f2-bd18-450c08f914c1/resourceGroups/MyResourceGroup/providers/Microsoft.Storage/storageAccounts/mystorageaccount"))
                    .withInterval(
                        new ResourceChangesRequestParametersInterval()
                            .withStart(OffsetDateTime.parse("2018-10-30T12:09:03.141Z"))
                            .withEnd(OffsetDateTime.parse("2018-10-31T12:09:03.141Z")))
                    .withTop(2),
                Context.NONE);
    }
}
