// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.resourcegraph.generated;

import java.util.HashMap;
import java.util.Map;

/**
 * Samples for GraphQuery CreateOrUpdate.
 */
public final class GraphQueryCreateOrUpdateSamples {
    /*
     * x-ms-original-file:
     * specification/resourcegraph/resource-manager/Microsoft.ResourceGraph/stable/2021-03-01/examples/GraphQueryAdd.
     * json
     */
    /**
     * Sample code: Create Graph Query.
     * 
     * @param manager Entry point to ResourceGraphManager.
     */
    public static void createGraphQuery(com.azure.resourcemanager.resourcegraph.ResourceGraphManager manager) {
        manager.graphQueries()
            .define("MyDockerVMs")
            .withRegion((String) null)
            .withExistingResourceGroup("024e2271-06fa-46b6-9079-f1ed3c7b070e", "my-resource-group")
            .withTags(mapOf())
            .withDescription("Docker VMs in PROD")
            .withQuery("where isnotnull(tags['Prod']) and properties.extensions[0].Name == 'docker'")
            .create();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
