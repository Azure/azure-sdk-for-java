// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.edgeorder.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.edgeorder.models.ConfigurationFilters;
import com.azure.resourcemanager.edgeorder.models.FilterableProperty;
import com.azure.resourcemanager.edgeorder.models.HierarchyInformation;
import com.azure.resourcemanager.edgeorder.models.SupportedFilterTypes;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ConfigurationFiltersTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ConfigurationFilters model = BinaryData.fromString(
            "{\"hierarchyInformation\":{\"productFamilyName\":\"dqmh\",\"productLineName\":\"dhtldwkyz\",\"productName\":\"utknc\",\"configurationName\":\"cwsvlxotog\"},\"filterableProperty\":[{\"type\":\"ShipToCountries\",\"supportedValues\":[\"qsx\",\"nmic\",\"kvceoveilovnotyf\"]},{\"type\":\"ShipToCountries\",\"supportedValues\":[\"njbkcnxdhbttkph\",\"wpn\",\"jtoqne\"]},{\"type\":\"DoubleEncryptionStatus\",\"supportedValues\":[\"lfplp\"]}]}")
            .toObject(ConfigurationFilters.class);
        Assertions.assertEquals("dqmh", model.hierarchyInformation().productFamilyName());
        Assertions.assertEquals("dhtldwkyz", model.hierarchyInformation().productLineName());
        Assertions.assertEquals("utknc", model.hierarchyInformation().productName());
        Assertions.assertEquals("cwsvlxotog", model.hierarchyInformation().configurationName());
        Assertions.assertEquals(SupportedFilterTypes.SHIP_TO_COUNTRIES, model.filterableProperty().get(0).type());
        Assertions.assertEquals("qsx", model.filterableProperty().get(0).supportedValues().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ConfigurationFilters model = new ConfigurationFilters()
            .withHierarchyInformation(new HierarchyInformation().withProductFamilyName("dqmh")
                .withProductLineName("dhtldwkyz")
                .withProductName("utknc")
                .withConfigurationName("cwsvlxotog"))
            .withFilterableProperty(Arrays.asList(
                new FilterableProperty().withType(SupportedFilterTypes.SHIP_TO_COUNTRIES)
                    .withSupportedValues(Arrays.asList("qsx", "nmic", "kvceoveilovnotyf")),
                new FilterableProperty().withType(SupportedFilterTypes.SHIP_TO_COUNTRIES)
                    .withSupportedValues(Arrays.asList("njbkcnxdhbttkph", "wpn", "jtoqne")),
                new FilterableProperty().withType(SupportedFilterTypes.DOUBLE_ENCRYPTION_STATUS)
                    .withSupportedValues(Arrays.asList("lfplp"))));
        model = BinaryData.fromObject(model).toObject(ConfigurationFilters.class);
        Assertions.assertEquals("dqmh", model.hierarchyInformation().productFamilyName());
        Assertions.assertEquals("dhtldwkyz", model.hierarchyInformation().productLineName());
        Assertions.assertEquals("utknc", model.hierarchyInformation().productName());
        Assertions.assertEquals("cwsvlxotog", model.hierarchyInformation().configurationName());
        Assertions.assertEquals(SupportedFilterTypes.SHIP_TO_COUNTRIES, model.filterableProperty().get(0).type());
        Assertions.assertEquals("qsx", model.filterableProperty().get(0).supportedValues().get(0));
    }
}
