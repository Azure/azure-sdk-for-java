// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.edgeorder.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.edgeorder.models.ConfigurationFilters;
import com.azure.resourcemanager.edgeorder.models.ConfigurationsRequest;
import com.azure.resourcemanager.edgeorder.models.CustomerSubscriptionDetails;
import com.azure.resourcemanager.edgeorder.models.CustomerSubscriptionRegisteredFeatures;
import com.azure.resourcemanager.edgeorder.models.FilterableProperty;
import com.azure.resourcemanager.edgeorder.models.HierarchyInformation;
import com.azure.resourcemanager.edgeorder.models.SupportedFilterTypes;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ConfigurationsRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ConfigurationsRequest model = BinaryData.fromString(
            "{\"configurationFilters\":[{\"hierarchyInformation\":{\"productFamilyName\":\"uzycispnqza\",\"productLineName\":\"gkbrpyyd\",\"productName\":\"bnuqqkpik\",\"configurationName\":\"rgvtqag\"},\"filterableProperty\":[{\"type\":\"DoubleEncryptionStatus\",\"supportedValues\":[\"hijggme\",\"fsiarbutr\",\"vpnazzm\"]},{\"type\":\"DoubleEncryptionStatus\",\"supportedValues\":[\"unmpxttd\",\"hrbnlankxmyskpbh\"]}]},{\"hierarchyInformation\":{\"productFamilyName\":\"btkcxywnytnrsyn\",\"productLineName\":\"idybyxczf\",\"productName\":\"haaxdbabphl\",\"configurationName\":\"qlfktsths\"},\"filterableProperty\":[{\"type\":\"DoubleEncryptionStatus\",\"supportedValues\":[\"nyyazttbtwwrqpue\",\"ckzywbiexzfeyue\"]},{\"type\":\"DoubleEncryptionStatus\",\"supportedValues\":[\"bxu\"]},{\"type\":\"ShipToCountries\",\"supportedValues\":[\"hqwa\",\"muzyoxaepdk\",\"jancu\",\"rhdwbavxbniw\"]},{\"type\":\"DoubleEncryptionStatus\",\"supportedValues\":[\"wz\",\"s\"]}]},{\"hierarchyInformation\":{\"productFamilyName\":\"pgn\",\"productLineName\":\"txhp\",\"productName\":\"bzpfzab\",\"configurationName\":\"cuh\"},\"filterableProperty\":[{\"type\":\"ShipToCountries\",\"supportedValues\":[\"yqiklbbovplwzb\"]}]}],\"customerSubscriptionDetails\":{\"registeredFeatures\":[{\"name\":\"gu\",\"state\":\"vmkfssxqu\"},{\"name\":\"fpl\",\"state\":\"gsxnkjzkdeslpv\"},{\"name\":\"pwiyig\",\"state\":\"pkdwzbai\"},{\"name\":\"bbaumnyquped\",\"state\":\"jn\"}],\"locationPlacementId\":\"ckhsmtxpsieb\",\"quotaId\":\"fhvpesaps\"}}")
            .toObject(ConfigurationsRequest.class);
        Assertions.assertEquals("uzycispnqza",
            model.configurationFilters().get(0).hierarchyInformation().productFamilyName());
        Assertions.assertEquals("gkbrpyyd",
            model.configurationFilters().get(0).hierarchyInformation().productLineName());
        Assertions.assertEquals("bnuqqkpik", model.configurationFilters().get(0).hierarchyInformation().productName());
        Assertions.assertEquals("rgvtqag",
            model.configurationFilters().get(0).hierarchyInformation().configurationName());
        Assertions.assertEquals(SupportedFilterTypes.DOUBLE_ENCRYPTION_STATUS,
            model.configurationFilters().get(0).filterableProperty().get(0).type());
        Assertions.assertEquals("hijggme",
            model.configurationFilters().get(0).filterableProperty().get(0).supportedValues().get(0));
        Assertions.assertEquals("gu", model.customerSubscriptionDetails().registeredFeatures().get(0).name());
        Assertions.assertEquals("vmkfssxqu", model.customerSubscriptionDetails().registeredFeatures().get(0).state());
        Assertions.assertEquals("ckhsmtxpsieb", model.customerSubscriptionDetails().locationPlacementId());
        Assertions.assertEquals("fhvpesaps", model.customerSubscriptionDetails().quotaId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ConfigurationsRequest model = new ConfigurationsRequest()
            .withConfigurationFilters(Arrays.asList(
                new ConfigurationFilters()
                    .withHierarchyInformation(new HierarchyInformation().withProductFamilyName("uzycispnqza")
                        .withProductLineName("gkbrpyyd")
                        .withProductName("bnuqqkpik")
                        .withConfigurationName("rgvtqag"))
                    .withFilterableProperty(Arrays.asList(
                        new FilterableProperty().withType(SupportedFilterTypes.DOUBLE_ENCRYPTION_STATUS)
                            .withSupportedValues(Arrays.asList("hijggme", "fsiarbutr", "vpnazzm")),
                        new FilterableProperty().withType(SupportedFilterTypes.DOUBLE_ENCRYPTION_STATUS)
                            .withSupportedValues(Arrays.asList("unmpxttd", "hrbnlankxmyskpbh")))),
                new ConfigurationFilters()
                    .withHierarchyInformation(new HierarchyInformation().withProductFamilyName("btkcxywnytnrsyn")
                        .withProductLineName("idybyxczf")
                        .withProductName("haaxdbabphl")
                        .withConfigurationName("qlfktsths"))
                    .withFilterableProperty(Arrays.asList(
                        new FilterableProperty().withType(SupportedFilterTypes.DOUBLE_ENCRYPTION_STATUS)
                            .withSupportedValues(Arrays.asList("nyyazttbtwwrqpue", "ckzywbiexzfeyue")),
                        new FilterableProperty().withType(SupportedFilterTypes.DOUBLE_ENCRYPTION_STATUS)
                            .withSupportedValues(Arrays.asList("bxu")),
                        new FilterableProperty().withType(SupportedFilterTypes.SHIP_TO_COUNTRIES)
                            .withSupportedValues(Arrays.asList("hqwa", "muzyoxaepdk", "jancu", "rhdwbavxbniw")),
                        new FilterableProperty().withType(SupportedFilterTypes.DOUBLE_ENCRYPTION_STATUS)
                            .withSupportedValues(Arrays.asList("wz", "s")))),
                new ConfigurationFilters()
                    .withHierarchyInformation(new HierarchyInformation().withProductFamilyName("pgn")
                        .withProductLineName("txhp")
                        .withProductName("bzpfzab")
                        .withConfigurationName("cuh"))
                    .withFilterableProperty(
                        Arrays.asList(new FilterableProperty().withType(SupportedFilterTypes.SHIP_TO_COUNTRIES)
                            .withSupportedValues(Arrays.asList("yqiklbbovplwzb"))))))
            .withCustomerSubscriptionDetails(new CustomerSubscriptionDetails()
                .withRegisteredFeatures(
                    Arrays.asList(new CustomerSubscriptionRegisteredFeatures().withName("gu").withState("vmkfssxqu"),
                        new CustomerSubscriptionRegisteredFeatures().withName("fpl").withState("gsxnkjzkdeslpv"),
                        new CustomerSubscriptionRegisteredFeatures().withName("pwiyig").withState("pkdwzbai"),
                        new CustomerSubscriptionRegisteredFeatures().withName("bbaumnyquped").withState("jn")))
                .withLocationPlacementId("ckhsmtxpsieb")
                .withQuotaId("fhvpesaps"));
        model = BinaryData.fromObject(model).toObject(ConfigurationsRequest.class);
        Assertions.assertEquals("uzycispnqza",
            model.configurationFilters().get(0).hierarchyInformation().productFamilyName());
        Assertions.assertEquals("gkbrpyyd",
            model.configurationFilters().get(0).hierarchyInformation().productLineName());
        Assertions.assertEquals("bnuqqkpik", model.configurationFilters().get(0).hierarchyInformation().productName());
        Assertions.assertEquals("rgvtqag",
            model.configurationFilters().get(0).hierarchyInformation().configurationName());
        Assertions.assertEquals(SupportedFilterTypes.DOUBLE_ENCRYPTION_STATUS,
            model.configurationFilters().get(0).filterableProperty().get(0).type());
        Assertions.assertEquals("hijggme",
            model.configurationFilters().get(0).filterableProperty().get(0).supportedValues().get(0));
        Assertions.assertEquals("gu", model.customerSubscriptionDetails().registeredFeatures().get(0).name());
        Assertions.assertEquals("vmkfssxqu", model.customerSubscriptionDetails().registeredFeatures().get(0).state());
        Assertions.assertEquals("ckhsmtxpsieb", model.customerSubscriptionDetails().locationPlacementId());
        Assertions.assertEquals("fhvpesaps", model.customerSubscriptionDetails().quotaId());
    }
}
