// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.edgeorder.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.edgeorder.models.CustomerSubscriptionDetails;
import com.azure.resourcemanager.edgeorder.models.CustomerSubscriptionRegisteredFeatures;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class CustomerSubscriptionDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CustomerSubscriptionDetails model = BinaryData.fromString(
            "{\"registeredFeatures\":[{\"name\":\"dgak\",\"state\":\"s\"},{\"name\":\"yb\",\"state\":\"qedqytbciqfoufl\"},{\"name\":\"nkzsmodmglou\",\"state\":\"b\"},{\"name\":\"tmut\",\"state\":\"qktapspwgcuert\"}],\"locationPlacementId\":\"kdosvqw\",\"quotaId\":\"bmdg\"}")
            .toObject(CustomerSubscriptionDetails.class);
        Assertions.assertEquals("dgak", model.registeredFeatures().get(0).name());
        Assertions.assertEquals("s", model.registeredFeatures().get(0).state());
        Assertions.assertEquals("kdosvqw", model.locationPlacementId());
        Assertions.assertEquals("bmdg", model.quotaId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CustomerSubscriptionDetails model = new CustomerSubscriptionDetails()
            .withRegisteredFeatures(
                Arrays.asList(new CustomerSubscriptionRegisteredFeatures().withName("dgak").withState("s"),
                    new CustomerSubscriptionRegisteredFeatures().withName("yb").withState("qedqytbciqfoufl"),
                    new CustomerSubscriptionRegisteredFeatures().withName("nkzsmodmglou").withState("b"),
                    new CustomerSubscriptionRegisteredFeatures().withName("tmut").withState("qktapspwgcuert")))
            .withLocationPlacementId("kdosvqw")
            .withQuotaId("bmdg");
        model = BinaryData.fromObject(model).toObject(CustomerSubscriptionDetails.class);
        Assertions.assertEquals("dgak", model.registeredFeatures().get(0).name());
        Assertions.assertEquals("s", model.registeredFeatures().get(0).state());
        Assertions.assertEquals("kdosvqw", model.locationPlacementId());
        Assertions.assertEquals("bmdg", model.quotaId());
    }
}
