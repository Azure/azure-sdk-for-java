// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.edgeorder.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.edgeorder.fluent.models.ConfigurationInner;
import com.azure.resourcemanager.edgeorder.fluent.models.ProductProperties;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** List of Products. */
@Immutable
public final class Product {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(Product.class);

    /*
     * Properties of product
     */
    @JsonProperty(value = "properties", access = JsonProperty.Access.WRITE_ONLY)
    private ProductProperties innerProperties;

    /**
     * Get the innerProperties property: Properties of product.
     *
     * @return the innerProperties value.
     */
    private ProductProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the configurations property: List of configurations for the product.
     *
     * @return the configurations value.
     */
    public List<ConfigurationInner> configurations() {
        return this.innerProperties() == null ? null : this.innerProperties().configurations();
    }

    /**
     * Get the filterableProperties property: list of filters supported for a product.
     *
     * @return the filterableProperties value.
     */
    public List<FilterableProperty> filterableProperties() {
        return this.innerProperties() == null ? null : this.innerProperties().filterableProperties();
    }

    /**
     * Get the displayName property: Display Name for the product system.
     *
     * @return the displayName value.
     */
    public String displayName() {
        return this.innerProperties() == null ? null : this.innerProperties().displayName();
    }

    /**
     * Get the description property: Description related to the product system.
     *
     * @return the description value.
     */
    public Description description() {
        return this.innerProperties() == null ? null : this.innerProperties().description();
    }

    /**
     * Get the imageInformation property: Image information for the product system.
     *
     * @return the imageInformation value.
     */
    public List<ImageInformation> imageInformation() {
        return this.innerProperties() == null ? null : this.innerProperties().imageInformation();
    }

    /**
     * Get the costInformation property: Cost information for the product system.
     *
     * @return the costInformation value.
     */
    public CostInformation costInformation() {
        return this.innerProperties() == null ? null : this.innerProperties().costInformation();
    }

    /**
     * Get the availabilityInformation property: Availability information of the product system.
     *
     * @return the availabilityInformation value.
     */
    public AvailabilityInformation availabilityInformation() {
        return this.innerProperties() == null ? null : this.innerProperties().availabilityInformation();
    }

    /**
     * Get the hierarchyInformation property: Hierarchy information of a product.
     *
     * @return the hierarchyInformation value.
     */
    public HierarchyInformation hierarchyInformation() {
        return this.innerProperties() == null ? null : this.innerProperties().hierarchyInformation();
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
