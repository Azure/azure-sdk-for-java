// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.edgeorder.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Availability information of a product system. */
@Immutable
public final class AvailabilityInformation {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(AvailabilityInformation.class);

    /*
     * Current availability stage of the product. Availability stage
     */
    @JsonProperty(value = "availabilityStage", access = JsonProperty.Access.WRITE_ONLY)
    private AvailabilityStage availabilityStage;

    /*
     * Reason why the product is disabled.
     */
    @JsonProperty(value = "disabledReason", access = JsonProperty.Access.WRITE_ONLY)
    private DisabledReason disabledReason;

    /*
     * Message for why the product is disabled.
     */
    @JsonProperty(value = "disabledReasonMessage", access = JsonProperty.Access.WRITE_ONLY)
    private String disabledReasonMessage;

    /**
     * Get the availabilityStage property: Current availability stage of the product. Availability stage.
     *
     * @return the availabilityStage value.
     */
    public AvailabilityStage availabilityStage() {
        return this.availabilityStage;
    }

    /**
     * Get the disabledReason property: Reason why the product is disabled.
     *
     * @return the disabledReason value.
     */
    public DisabledReason disabledReason() {
        return this.disabledReason;
    }

    /**
     * Get the disabledReasonMessage property: Message for why the product is disabled.
     *
     * @return the disabledReasonMessage value.
     */
    public String disabledReasonMessage() {
        return this.disabledReasonMessage;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
