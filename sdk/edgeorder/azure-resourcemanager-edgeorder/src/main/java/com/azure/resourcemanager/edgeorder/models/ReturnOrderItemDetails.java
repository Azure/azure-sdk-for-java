// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.edgeorder.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.edgeorder.fluent.models.AddressProperties;
import java.io.IOException;

/**
 * Return order item request body.
 */
@Fluent
public final class ReturnOrderItemDetails implements JsonSerializable<ReturnOrderItemDetails> {
    /*
     * customer return address.
     */
    private AddressProperties returnAddress;

    /*
     * Return Reason.
     */
    private String returnReason;

    /*
     * Service tag (located on the bottom-right corner of the device)
     */
    private String serviceTag;

    /*
     * Shipping Box required
     */
    private Boolean shippingBoxRequired;

    /**
     * Creates an instance of ReturnOrderItemDetails class.
     */
    public ReturnOrderItemDetails() {
    }

    /**
     * Get the returnAddress property: customer return address.
     * 
     * @return the returnAddress value.
     */
    public AddressProperties returnAddress() {
        return this.returnAddress;
    }

    /**
     * Set the returnAddress property: customer return address.
     * 
     * @param returnAddress the returnAddress value to set.
     * @return the ReturnOrderItemDetails object itself.
     */
    public ReturnOrderItemDetails withReturnAddress(AddressProperties returnAddress) {
        this.returnAddress = returnAddress;
        return this;
    }

    /**
     * Get the returnReason property: Return Reason.
     * 
     * @return the returnReason value.
     */
    public String returnReason() {
        return this.returnReason;
    }

    /**
     * Set the returnReason property: Return Reason.
     * 
     * @param returnReason the returnReason value to set.
     * @return the ReturnOrderItemDetails object itself.
     */
    public ReturnOrderItemDetails withReturnReason(String returnReason) {
        this.returnReason = returnReason;
        return this;
    }

    /**
     * Get the serviceTag property: Service tag (located on the bottom-right corner of the device).
     * 
     * @return the serviceTag value.
     */
    public String serviceTag() {
        return this.serviceTag;
    }

    /**
     * Set the serviceTag property: Service tag (located on the bottom-right corner of the device).
     * 
     * @param serviceTag the serviceTag value to set.
     * @return the ReturnOrderItemDetails object itself.
     */
    public ReturnOrderItemDetails withServiceTag(String serviceTag) {
        this.serviceTag = serviceTag;
        return this;
    }

    /**
     * Get the shippingBoxRequired property: Shipping Box required.
     * 
     * @return the shippingBoxRequired value.
     */
    public Boolean shippingBoxRequired() {
        return this.shippingBoxRequired;
    }

    /**
     * Set the shippingBoxRequired property: Shipping Box required.
     * 
     * @param shippingBoxRequired the shippingBoxRequired value to set.
     * @return the ReturnOrderItemDetails object itself.
     */
    public ReturnOrderItemDetails withShippingBoxRequired(Boolean shippingBoxRequired) {
        this.shippingBoxRequired = shippingBoxRequired;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (returnAddress() != null) {
            returnAddress().validate();
        }
        if (returnReason() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property returnReason in model ReturnOrderItemDetails"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ReturnOrderItemDetails.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("returnReason", this.returnReason);
        jsonWriter.writeJsonField("returnAddress", this.returnAddress);
        jsonWriter.writeStringField("serviceTag", this.serviceTag);
        jsonWriter.writeBooleanField("shippingBoxRequired", this.shippingBoxRequired);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ReturnOrderItemDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ReturnOrderItemDetails if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the ReturnOrderItemDetails.
     */
    public static ReturnOrderItemDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ReturnOrderItemDetails deserializedReturnOrderItemDetails = new ReturnOrderItemDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("returnReason".equals(fieldName)) {
                    deserializedReturnOrderItemDetails.returnReason = reader.getString();
                } else if ("returnAddress".equals(fieldName)) {
                    deserializedReturnOrderItemDetails.returnAddress = AddressProperties.fromJson(reader);
                } else if ("serviceTag".equals(fieldName)) {
                    deserializedReturnOrderItemDetails.serviceTag = reader.getString();
                } else if ("shippingBoxRequired".equals(fieldName)) {
                    deserializedReturnOrderItemDetails.shippingBoxRequired = reader.getNullable(JsonReader::getBoolean);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedReturnOrderItemDetails;
        });
    }
}
