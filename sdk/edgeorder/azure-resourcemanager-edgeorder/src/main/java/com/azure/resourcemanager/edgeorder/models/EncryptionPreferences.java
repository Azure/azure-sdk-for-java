// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.edgeorder.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Preferences related to the double encryption. */
@Fluent
public final class EncryptionPreferences {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(EncryptionPreferences.class);

    /*
     * Double encryption status as entered by the customer. It is compulsory to
     * give this parameter if the 'Deny' or 'Disabled' policy is configured.
     */
    @JsonProperty(value = "doubleEncryptionStatus")
    private DoubleEncryptionStatus doubleEncryptionStatus;

    /**
     * Get the doubleEncryptionStatus property: Double encryption status as entered by the customer. It is compulsory to
     * give this parameter if the 'Deny' or 'Disabled' policy is configured.
     *
     * @return the doubleEncryptionStatus value.
     */
    public DoubleEncryptionStatus doubleEncryptionStatus() {
        return this.doubleEncryptionStatus;
    }

    /**
     * Set the doubleEncryptionStatus property: Double encryption status as entered by the customer. It is compulsory to
     * give this parameter if the 'Deny' or 'Disabled' policy is configured.
     *
     * @param doubleEncryptionStatus the doubleEncryptionStatus value to set.
     * @return the EncryptionPreferences object itself.
     */
    public EncryptionPreferences withDoubleEncryptionStatus(DoubleEncryptionStatus doubleEncryptionStatus) {
        this.doubleEncryptionStatus = doubleEncryptionStatus;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
