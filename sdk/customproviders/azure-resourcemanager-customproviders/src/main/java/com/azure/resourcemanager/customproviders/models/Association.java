// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.customproviders.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.customproviders.fluent.models.AssociationInner;

/** An immutable client-side representation of Association. */
public interface Association {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the targetResourceId property: The REST resource instance of the target resource for this association.
     *
     * @return the targetResourceId value.
     */
    String targetResourceId();

    /**
     * Gets the provisioningState property: The provisioning state of the association.
     *
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the inner com.azure.resourcemanager.customproviders.fluent.models.AssociationInner object.
     *
     * @return the inner object.
     */
    AssociationInner innerModel();

    /** The entirety of the Association definition. */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithScope, DefinitionStages.WithCreate {
    }
    /** The Association definition stages. */
    interface DefinitionStages {
        /** The first stage of the Association definition. */
        interface Blank extends WithScope {
        }
        /** The stage of the Association definition allowing to specify parent resource. */
        interface WithScope {
            /**
             * Specifies scope.
             *
             * @param scope The scope of the association. The scope can be any valid REST resource instance. For
             *     example, use
             *     '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/Microsoft.Compute/virtualMachines/{vm-name}'
             *     for a virtual machine resource.
             * @return the next definition stage.
             */
            WithCreate withExistingScope(String scope);
        }
        /**
         * The stage of the Association definition which contains all the minimum required properties for the resource
         * to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithTargetResourceId {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            Association create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            Association create(Context context);
        }
        /** The stage of the Association definition allowing to specify targetResourceId. */
        interface WithTargetResourceId {
            /**
             * Specifies the targetResourceId property: The REST resource instance of the target resource for this
             * association..
             *
             * @param targetResourceId The REST resource instance of the target resource for this association.
             * @return the next definition stage.
             */
            WithCreate withTargetResourceId(String targetResourceId);
        }
    }
    /**
     * Begins update for the Association resource.
     *
     * @return the stage of resource update.
     */
    Association.Update update();

    /** The template for Association update. */
    interface Update extends UpdateStages.WithTargetResourceId {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        Association apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        Association apply(Context context);
    }
    /** The Association update stages. */
    interface UpdateStages {
        /** The stage of the Association update allowing to specify targetResourceId. */
        interface WithTargetResourceId {
            /**
             * Specifies the targetResourceId property: The REST resource instance of the target resource for this
             * association..
             *
             * @param targetResourceId The REST resource instance of the target resource for this association.
             * @return the next definition stage.
             */
            Update withTargetResourceId(String targetResourceId);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    Association refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    Association refresh(Context context);
}
