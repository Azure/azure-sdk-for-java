// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.customproviders.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.Resource;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.customproviders.models.CustomRPActionRouteDefinition;
import com.azure.resourcemanager.customproviders.models.CustomRPResourceTypeRouteDefinition;
import com.azure.resourcemanager.customproviders.models.CustomRPValidations;
import com.azure.resourcemanager.customproviders.models.ProvisioningState;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/** A manifest file that defines the custom resource provider resources. */
@JsonFlatten
@Fluent
public class CustomRPManifestInner extends Resource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(CustomRPManifestInner.class);

    /*
     * A list of actions that the custom resource provider implements.
     */
    @JsonProperty(value = "properties.actions")
    private List<CustomRPActionRouteDefinition> actions;

    /*
     * A list of resource types that the custom resource provider implements.
     */
    @JsonProperty(value = "properties.resourceTypes")
    private List<CustomRPResourceTypeRouteDefinition> resourceTypes;

    /*
     * A list of validations to run on the custom resource provider's requests.
     */
    @JsonProperty(value = "properties.validations")
    private List<CustomRPValidations> validations;

    /*
     * The provisioning state of the resource provider.
     */
    @JsonProperty(value = "properties.provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /**
     * Get the actions property: A list of actions that the custom resource provider implements.
     *
     * @return the actions value.
     */
    public List<CustomRPActionRouteDefinition> actions() {
        return this.actions;
    }

    /**
     * Set the actions property: A list of actions that the custom resource provider implements.
     *
     * @param actions the actions value to set.
     * @return the CustomRPManifestInner object itself.
     */
    public CustomRPManifestInner withActions(List<CustomRPActionRouteDefinition> actions) {
        this.actions = actions;
        return this;
    }

    /**
     * Get the resourceTypes property: A list of resource types that the custom resource provider implements.
     *
     * @return the resourceTypes value.
     */
    public List<CustomRPResourceTypeRouteDefinition> resourceTypes() {
        return this.resourceTypes;
    }

    /**
     * Set the resourceTypes property: A list of resource types that the custom resource provider implements.
     *
     * @param resourceTypes the resourceTypes value to set.
     * @return the CustomRPManifestInner object itself.
     */
    public CustomRPManifestInner withResourceTypes(List<CustomRPResourceTypeRouteDefinition> resourceTypes) {
        this.resourceTypes = resourceTypes;
        return this;
    }

    /**
     * Get the validations property: A list of validations to run on the custom resource provider's requests.
     *
     * @return the validations value.
     */
    public List<CustomRPValidations> validations() {
        return this.validations;
    }

    /**
     * Set the validations property: A list of validations to run on the custom resource provider's requests.
     *
     * @param validations the validations value to set.
     * @return the CustomRPManifestInner object itself.
     */
    public CustomRPManifestInner withValidations(List<CustomRPValidations> validations) {
        this.validations = validations;
        return this;
    }

    /**
     * Get the provisioningState property: The provisioning state of the resource provider.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /** {@inheritDoc} */
    @Override
    public CustomRPManifestInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public CustomRPManifestInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (actions() != null) {
            actions().forEach(e -> e.validate());
        }
        if (resourceTypes() != null) {
            resourceTypes().forEach(e -> e.validate());
        }
        if (validations() != null) {
            validations().forEach(e -> e.validate());
        }
    }
}
