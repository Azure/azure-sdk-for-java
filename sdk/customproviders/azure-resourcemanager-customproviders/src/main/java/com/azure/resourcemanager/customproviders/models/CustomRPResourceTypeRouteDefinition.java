// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.customproviders.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The route definition for a resource implemented by the custom resource provider. */
@Fluent
public final class CustomRPResourceTypeRouteDefinition extends CustomRPRouteDefinition {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(CustomRPResourceTypeRouteDefinition.class);

    /*
     * The routing types that are supported for resource requests.
     */
    @JsonProperty(value = "routingType")
    private ResourceTypeRouting routingType;

    /**
     * Get the routingType property: The routing types that are supported for resource requests.
     *
     * @return the routingType value.
     */
    public ResourceTypeRouting routingType() {
        return this.routingType;
    }

    /**
     * Set the routingType property: The routing types that are supported for resource requests.
     *
     * @param routingType the routingType value to set.
     * @return the CustomRPResourceTypeRouteDefinition object itself.
     */
    public CustomRPResourceTypeRouteDefinition withRoutingType(ResourceTypeRouting routingType) {
        this.routingType = routingType;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public CustomRPResourceTypeRouteDefinition withName(String name) {
        super.withName(name);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public CustomRPResourceTypeRouteDefinition withEndpoint(String endpoint) {
        super.withEndpoint(endpoint);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
