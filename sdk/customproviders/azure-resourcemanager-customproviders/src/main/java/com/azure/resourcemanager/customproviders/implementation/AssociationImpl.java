// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.customproviders.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.customproviders.fluent.models.AssociationInner;
import com.azure.resourcemanager.customproviders.models.Association;
import com.azure.resourcemanager.customproviders.models.ProvisioningState;

public final class AssociationImpl implements Association, Association.Definition, Association.Update {
    private AssociationInner innerObject;

    private final com.azure.resourcemanager.customproviders.CustomprovidersManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String targetResourceId() {
        return this.innerModel().targetResourceId();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public AssociationInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.customproviders.CustomprovidersManager manager() {
        return this.serviceManager;
    }

    private String scope;

    private String associationName;

    public AssociationImpl withExistingScope(String scope) {
        this.scope = scope;
        return this;
    }

    public Association create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAssociations()
                .createOrUpdate(scope, associationName, this.innerModel(), Context.NONE);
        return this;
    }

    public Association create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAssociations()
                .createOrUpdate(scope, associationName, this.innerModel(), context);
        return this;
    }

    AssociationImpl(String name, com.azure.resourcemanager.customproviders.CustomprovidersManager serviceManager) {
        this.innerObject = new AssociationInner();
        this.serviceManager = serviceManager;
        this.associationName = name;
    }

    public AssociationImpl update() {
        return this;
    }

    public Association apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAssociations()
                .createOrUpdate(scope, associationName, this.innerModel(), Context.NONE);
        return this;
    }

    public Association apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAssociations()
                .createOrUpdate(scope, associationName, this.innerModel(), context);
        return this;
    }

    AssociationImpl(
        AssociationInner innerObject, com.azure.resourcemanager.customproviders.CustomprovidersManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.scope =
            Utils
                .getValueFromIdByParameterName(
                    innerObject.id(),
                    "/{scope}/providers/Microsoft.CustomProviders/associations/{associationName}",
                    "scope");
        this.associationName =
            Utils
                .getValueFromIdByParameterName(
                    innerObject.id(),
                    "/{scope}/providers/Microsoft.CustomProviders/associations/{associationName}",
                    "associationName");
    }

    public Association refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAssociations()
                .getWithResponse(scope, associationName, Context.NONE)
                .getValue();
        return this;
    }

    public Association refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAssociations()
                .getWithResponse(scope, associationName, context)
                .getValue();
        return this;
    }

    public AssociationImpl withTargetResourceId(String targetResourceId) {
        this.innerModel().withTargetResourceId(targetResourceId);
        return this;
    }
}
