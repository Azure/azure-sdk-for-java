/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * abc
 */

package com.microsoft.azure.management.adhybridhealthservice.v2014_01_01.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.adhybridhealthservice.v2014_01_01.AddsServicesUserPreferences;
import rx.Completable;
import rx.functions.Func1;
import rx.Observable;
import com.microsoft.azure.management.adhybridhealthservice.v2014_01_01.UserPreference;

class AddsServicesUserPreferencesImpl extends WrapperImpl<AddsServicesUserPreferencesInner> implements AddsServicesUserPreferences {
    private final ADHybridHealthServiceManager manager;

    AddsServicesUserPreferencesImpl(ADHybridHealthServiceManager manager) {
        super(manager.inner().addsServicesUserPreferences());
        this.manager = manager;
    }

    public ADHybridHealthServiceManager manager() {
        return this.manager;
    }

    @Override
    public Observable<UserPreference> getAsync(String serviceName, String featureName) {
        AddsServicesUserPreferencesInner client = this.inner();
        return client.getAsync(serviceName, featureName)
        .map(new Func1<UserPreferenceInner, UserPreference>() {
            @Override
            public UserPreference call(UserPreferenceInner inner) {
                return new UserPreferenceImpl(inner, manager());
            }
        });
    }

    @Override
    public Completable deleteAsync(String serviceName, String featureName) {
        AddsServicesUserPreferencesInner client = this.inner();
        return client.deleteAsync(serviceName, featureName).toCompletable();
    }

    @Override
    public Completable addAsync(String serviceName, String featureName) {
        AddsServicesUserPreferencesInner client = this.inner();
        return client.addAsync(serviceName, featureName).toCompletable();
    }

}
