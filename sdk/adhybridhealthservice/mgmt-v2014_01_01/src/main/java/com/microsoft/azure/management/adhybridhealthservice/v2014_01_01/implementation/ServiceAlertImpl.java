/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.adhybridhealthservice.v2014_01_01.implementation;

import com.microsoft.azure.management.adhybridhealthservice.v2014_01_01.ServiceAlert;
import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import rx.Observable;
import java.util.ArrayList;
import com.microsoft.azure.management.adhybridhealthservice.v2014_01_01.ServiceItem;
import java.util.List;
import com.microsoft.azure.management.adhybridhealthservice.v2014_01_01.AdditionalInformation;
import java.util.UUID;
import org.joda.time.DateTime;
import com.microsoft.azure.management.adhybridhealthservice.v2014_01_01.Level;
import com.microsoft.azure.management.adhybridhealthservice.v2014_01_01.HelpLink;
import com.microsoft.azure.management.adhybridhealthservice.v2014_01_01.State;

class ServiceAlertImpl extends WrapperImpl<AlertInner> implements ServiceAlert {
    private final ADHybridHealthServiceManager manager;

    ServiceAlertImpl(AlertInner inner,  ADHybridHealthServiceManager manager) {
        super(inner);
        this.manager = manager;
    }

    @Override
    public ADHybridHealthServiceManager manager() {
        return this.manager;
    }



    @Override
    public List<ServiceItem> activeAlertProperties() {
        List<ServiceItem> lst = new ArrayList<ServiceItem>();
        if (this.inner().activeAlertProperties() != null) {
            for (ItemInner inner : this.inner().activeAlertProperties()) {
                lst.add( new ServiceItemImpl(inner, manager()));
            }
        }
        return lst;
    }

    @Override
    public List<AdditionalInformation> additionalInformation() {
        return this.inner().additionalInformation();
    }

    @Override
    public UUID alertId() {
        return this.inner().alertId();
    }

    @Override
    public DateTime createdDate() {
        return this.inner().createdDate();
    }

    @Override
    public String description() {
        return this.inner().description();
    }

    @Override
    public String displayName() {
        return this.inner().displayName();
    }

    @Override
    public DateTime lastUpdated() {
        return this.inner().lastUpdated();
    }

    @Override
    public Level level() {
        return this.inner().level();
    }

    @Override
    public String monitorRoleType() {
        return this.inner().monitorRoleType();
    }

    @Override
    public List<HelpLink> relatedLinks() {
        return this.inner().relatedLinks();
    }

    @Override
    public String remediation() {
        return this.inner().remediation();
    }

    @Override
    public List<ServiceItem> resolvedAlertProperties() {
        List<ServiceItem> lst = new ArrayList<ServiceItem>();
        if (this.inner().resolvedAlertProperties() != null) {
            for (ItemInner inner : this.inner().resolvedAlertProperties()) {
                lst.add( new ServiceItemImpl(inner, manager()));
            }
        }
        return lst;
    }

    @Override
    public DateTime resolvedDate() {
        return this.inner().resolvedDate();
    }

    @Override
    public String scope() {
        return this.inner().scope();
    }

    @Override
    public UUID serviceId() {
        return this.inner().serviceId();
    }

    @Override
    public UUID serviceMemberId() {
        return this.inner().serviceMemberId();
    }

    @Override
    public String shortName() {
        return this.inner().shortName();
    }

    @Override
    public State state() {
        return this.inner().state();
    }

    @Override
    public UUID tenantId() {
        return this.inner().tenantId();
    }

}
