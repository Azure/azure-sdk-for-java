/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.adhybridhealthservice.v2014_01_01.implementation;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The key value pair for IP aggregate thresholds.
 */
public class IPAddressAggregateSettingInner {
    /**
     * Unique ID for the entree.
     */
    @JsonProperty(value = "id")
    private String id;

    /**
     * This threshold setting defines the per day trigger for a new event to be
     * generated in the report.
     */
    @JsonProperty(value = "badPasswordAndExtranetLockoutCombinedDailyThreshold")
    private Integer badPasswordAndExtranetLockoutCombinedDailyThreshold;

    /**
     * This threshold setting defines the per hour trigger for a new event to
     * be generated in the report.
     */
    @JsonProperty(value = "badPasswordAndExtranetLockoutCombinedHourlyThreshold")
    private Integer badPasswordAndExtranetLockoutCombinedHourlyThreshold;

    /**
     * This threshold setting defines the per hour trigger for a new event to
     * be generated in the report.
     */
    @JsonProperty(value = "extranetLockoutDailyThreshold")
    private Integer extranetLockoutDailyThreshold;

    /**
     * This threshold setting defines the per hour trigger for a new event to
     * be generated in the report.
     */
    @JsonProperty(value = "extranetLockoutHourlyThreshold")
    private Integer extranetLockoutHourlyThreshold;

    /**
     * A value indicating whether email notification has been enabled.
     */
    @JsonProperty(value = "emailNotificationEnabled")
    private Boolean emailNotificationEnabled;

    /**
     * Get unique ID for the entree.
     *
     * @return the id value
     */
    public String id() {
        return this.id;
    }

    /**
     * Set unique ID for the entree.
     *
     * @param id the id value to set
     * @return the IPAddressAggregateSettingInner object itself.
     */
    public IPAddressAggregateSettingInner withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get this threshold setting defines the per day trigger for a new event to be generated in the report.
     *
     * @return the badPasswordAndExtranetLockoutCombinedDailyThreshold value
     */
    public Integer badPasswordAndExtranetLockoutCombinedDailyThreshold() {
        return this.badPasswordAndExtranetLockoutCombinedDailyThreshold;
    }

    /**
     * Set this threshold setting defines the per day trigger for a new event to be generated in the report.
     *
     * @param badPasswordAndExtranetLockoutCombinedDailyThreshold the badPasswordAndExtranetLockoutCombinedDailyThreshold value to set
     * @return the IPAddressAggregateSettingInner object itself.
     */
    public IPAddressAggregateSettingInner withBadPasswordAndExtranetLockoutCombinedDailyThreshold(Integer badPasswordAndExtranetLockoutCombinedDailyThreshold) {
        this.badPasswordAndExtranetLockoutCombinedDailyThreshold = badPasswordAndExtranetLockoutCombinedDailyThreshold;
        return this;
    }

    /**
     * Get this threshold setting defines the per hour trigger for a new event to be generated in the report.
     *
     * @return the badPasswordAndExtranetLockoutCombinedHourlyThreshold value
     */
    public Integer badPasswordAndExtranetLockoutCombinedHourlyThreshold() {
        return this.badPasswordAndExtranetLockoutCombinedHourlyThreshold;
    }

    /**
     * Set this threshold setting defines the per hour trigger for a new event to be generated in the report.
     *
     * @param badPasswordAndExtranetLockoutCombinedHourlyThreshold the badPasswordAndExtranetLockoutCombinedHourlyThreshold value to set
     * @return the IPAddressAggregateSettingInner object itself.
     */
    public IPAddressAggregateSettingInner withBadPasswordAndExtranetLockoutCombinedHourlyThreshold(Integer badPasswordAndExtranetLockoutCombinedHourlyThreshold) {
        this.badPasswordAndExtranetLockoutCombinedHourlyThreshold = badPasswordAndExtranetLockoutCombinedHourlyThreshold;
        return this;
    }

    /**
     * Get this threshold setting defines the per hour trigger for a new event to be generated in the report.
     *
     * @return the extranetLockoutDailyThreshold value
     */
    public Integer extranetLockoutDailyThreshold() {
        return this.extranetLockoutDailyThreshold;
    }

    /**
     * Set this threshold setting defines the per hour trigger for a new event to be generated in the report.
     *
     * @param extranetLockoutDailyThreshold the extranetLockoutDailyThreshold value to set
     * @return the IPAddressAggregateSettingInner object itself.
     */
    public IPAddressAggregateSettingInner withExtranetLockoutDailyThreshold(Integer extranetLockoutDailyThreshold) {
        this.extranetLockoutDailyThreshold = extranetLockoutDailyThreshold;
        return this;
    }

    /**
     * Get this threshold setting defines the per hour trigger for a new event to be generated in the report.
     *
     * @return the extranetLockoutHourlyThreshold value
     */
    public Integer extranetLockoutHourlyThreshold() {
        return this.extranetLockoutHourlyThreshold;
    }

    /**
     * Set this threshold setting defines the per hour trigger for a new event to be generated in the report.
     *
     * @param extranetLockoutHourlyThreshold the extranetLockoutHourlyThreshold value to set
     * @return the IPAddressAggregateSettingInner object itself.
     */
    public IPAddressAggregateSettingInner withExtranetLockoutHourlyThreshold(Integer extranetLockoutHourlyThreshold) {
        this.extranetLockoutHourlyThreshold = extranetLockoutHourlyThreshold;
        return this;
    }

    /**
     * Get a value indicating whether email notification has been enabled.
     *
     * @return the emailNotificationEnabled value
     */
    public Boolean emailNotificationEnabled() {
        return this.emailNotificationEnabled;
    }

    /**
     * Set a value indicating whether email notification has been enabled.
     *
     * @param emailNotificationEnabled the emailNotificationEnabled value to set
     * @return the IPAddressAggregateSettingInner object itself.
     */
    public IPAddressAggregateSettingInner withEmailNotificationEnabled(Boolean emailNotificationEnabled) {
        this.emailNotificationEnabled = emailNotificationEnabled;
        return this;
    }

}
