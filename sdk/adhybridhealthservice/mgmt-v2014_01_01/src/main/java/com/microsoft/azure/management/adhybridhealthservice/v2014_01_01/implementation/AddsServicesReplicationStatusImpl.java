/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * abc
 */

package com.microsoft.azure.management.adhybridhealthservice.v2014_01_01.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.adhybridhealthservice.v2014_01_01.AddsServicesReplicationStatus;
import rx.functions.Func1;
import rx.Observable;
import com.microsoft.azure.management.adhybridhealthservice.v2014_01_01.ReplicationStatus;

class AddsServicesReplicationStatusImpl extends WrapperImpl<AddsServicesReplicationStatusInner> implements AddsServicesReplicationStatus {
    private final ADHybridHealthServiceManager manager;

    AddsServicesReplicationStatusImpl(ADHybridHealthServiceManager manager) {
        super(manager.inner().addsServicesReplicationStatus());
        this.manager = manager;
    }

    public ADHybridHealthServiceManager manager() {
        return this.manager;
    }

    @Override
    public Observable<ReplicationStatus> getAsync(String serviceName) {
        AddsServicesReplicationStatusInner client = this.inner();
        return client.getAsync(serviceName)
        .map(new Func1<ReplicationStatusInner, ReplicationStatus>() {
            @Override
            public ReplicationStatus call(ReplicationStatusInner inner) {
                return new ReplicationStatusImpl(inner, manager());
            }
        });
    }

}
