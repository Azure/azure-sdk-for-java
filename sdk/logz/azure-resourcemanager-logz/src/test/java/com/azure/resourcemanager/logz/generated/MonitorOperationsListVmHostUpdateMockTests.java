// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logz.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.logz.LogzManager;
import com.azure.resourcemanager.logz.fluent.models.VMResourcesInner;
import com.azure.resourcemanager.logz.models.VMHostUpdateRequest;
import com.azure.resourcemanager.logz.models.VMHostUpdateStates;
import com.azure.resourcemanager.logz.models.VMResources;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class MonitorOperationsListVmHostUpdateMockTests {
    @Test
    public void testListVmHostUpdate() throws Exception {
        String responseStr = "{\"value\":[{\"id\":\"dwoyuhhziuiefoz\",\"agentVersion\":\"dmsmlm\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        LogzManager manager = LogzManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<VMResources> response = manager.monitorOperations()
            .listVmHostUpdate("qqmoaku", "gm",
                new VMHostUpdateRequest()
                    .withVmResourceIds(
                        Arrays.asList(new VMResourcesInner().withId("rdgrtw").withAgentVersion("nuuzkopbm")))
                    .withState(VMHostUpdateStates.INSTALL),
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("dwoyuhhziuiefoz", response.iterator().next().id());
        Assertions.assertEquals("dmsmlm", response.iterator().next().agentVersion());
    }
}
