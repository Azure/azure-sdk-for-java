// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logz.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.logz.LogzManager;
import com.azure.resourcemanager.logz.fluent.models.MonitoringTagRulesInner;
import com.azure.resourcemanager.logz.models.FilteringTag;
import com.azure.resourcemanager.logz.models.LogRules;
import com.azure.resourcemanager.logz.models.MonitoringTagRules;
import com.azure.resourcemanager.logz.models.MonitoringTagRulesProperties;
import com.azure.resourcemanager.logz.models.TagAction;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SubAccountTagRulesCreateOrUpdateWithResponseMockTests {
    @Test
    public void testCreateOrUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"NotSpecified\",\"logRules\":{\"sendAadLogs\":true,\"sendSubscriptionLogs\":true,\"sendActivityLogs\":false,\"filteringTags\":[{\"name\":\"taeburuvdm\",\"value\":\"s\",\"action\":\"Include\"},{\"name\":\"wabm\",\"value\":\"efkifr\",\"action\":\"Exclude\"}]}},\"id\":\"qujmqlgkf\",\"name\":\"tndoaongbjc\",\"type\":\"tujitcjedft\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        LogzManager manager = LogzManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        MonitoringTagRules response = manager.subAccountTagRules()
            .createOrUpdateWithResponse("whxxbuyqax", "feqztppriol", "or", "altol", new MonitoringTagRulesInner()
                .withProperties(new MonitoringTagRulesProperties().withLogRules(new LogRules().withSendAadLogs(true)
                    .withSendSubscriptionLogs(true)
                    .withSendActivityLogs(false)
                    .withFilteringTags(Arrays.asList(
                        new FilteringTag().withName("dcfhucqdpf").withValue("glsbjjc").withAction(TagAction.INCLUDE),
                        new FilteringTag().withName("bvtvudutncormr")
                            .withValue("qtvcofudflvkgj")
                            .withAction(TagAction.INCLUDE))))),
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(true, response.properties().logRules().sendAadLogs());
        Assertions.assertEquals(true, response.properties().logRules().sendSubscriptionLogs());
        Assertions.assertEquals(false, response.properties().logRules().sendActivityLogs());
        Assertions.assertEquals("taeburuvdm", response.properties().logRules().filteringTags().get(0).name());
        Assertions.assertEquals("s", response.properties().logRules().filteringTags().get(0).value());
        Assertions.assertEquals(TagAction.INCLUDE, response.properties().logRules().filteringTags().get(0).action());
    }
}
