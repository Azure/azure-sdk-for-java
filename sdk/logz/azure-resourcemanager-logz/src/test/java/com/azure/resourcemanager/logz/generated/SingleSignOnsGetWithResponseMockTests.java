// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logz.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.logz.LogzManager;
import com.azure.resourcemanager.logz.models.LogzSingleSignOnResource;
import com.azure.resourcemanager.logz.models.SingleSignOnStates;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SingleSignOnsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"singleSignOnState\":\"Disable\",\"enterpriseAppId\":\"fxoblytkb\",\"singleSignOnUrl\":\"pe\",\"provisioningState\":\"Updating\"},\"id\":\"fbkrvrnsvs\",\"name\":\"q\",\"type\":\"ohxcrsbfova\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        LogzManager manager = LogzManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        LogzSingleSignOnResource response = manager.singleSignOns()
            .getWithResponse("szjfauvjfdxxivet", "t", "qaqtdoqmcbxvwvxy", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(SingleSignOnStates.DISABLE, response.properties().singleSignOnState());
        Assertions.assertEquals("fxoblytkb", response.properties().enterpriseAppId());
        Assertions.assertEquals("pe", response.properties().singleSignOnUrl());
    }
}
