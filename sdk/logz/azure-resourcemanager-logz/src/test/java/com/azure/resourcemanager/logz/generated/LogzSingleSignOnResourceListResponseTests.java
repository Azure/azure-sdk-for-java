// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logz.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.logz.fluent.models.LogzSingleSignOnResourceInner;
import com.azure.resourcemanager.logz.models.LogzSingleSignOnProperties;
import com.azure.resourcemanager.logz.models.LogzSingleSignOnResourceListResponse;
import com.azure.resourcemanager.logz.models.SingleSignOnStates;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class LogzSingleSignOnResourceListResponseTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LogzSingleSignOnResourceListResponse model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"singleSignOnState\":\"Initial\",\"enterpriseAppId\":\"yk\",\"singleSignOnUrl\":\"enevfyexfwhybci\",\"provisioningState\":\"Failed\"},\"id\":\"vdcsitynn\",\"name\":\"amdecte\",\"type\":\"f\"},{\"properties\":{\"singleSignOnState\":\"Initial\",\"enterpriseAppId\":\"ypvhezrkg\",\"singleSignOnUrl\":\"c\",\"provisioningState\":\"Creating\"},\"id\":\"fovgmkqsleyyvxy\",\"name\":\"jpkcattpng\",\"type\":\"cr\"}],\"nextLink\":\"zsqpjhvmdajvny\"}")
            .toObject(LogzSingleSignOnResourceListResponse.class);
        Assertions.assertEquals(SingleSignOnStates.INITIAL, model.value().get(0).properties().singleSignOnState());
        Assertions.assertEquals("yk", model.value().get(0).properties().enterpriseAppId());
        Assertions.assertEquals("enevfyexfwhybci", model.value().get(0).properties().singleSignOnUrl());
        Assertions.assertEquals("zsqpjhvmdajvny", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LogzSingleSignOnResourceListResponse model = new LogzSingleSignOnResourceListResponse().withValue(Arrays.asList(
            new LogzSingleSignOnResourceInner()
                .withProperties(new LogzSingleSignOnProperties().withSingleSignOnState(SingleSignOnStates.INITIAL)
                    .withEnterpriseAppId("yk")
                    .withSingleSignOnUrl("enevfyexfwhybci")),
            new LogzSingleSignOnResourceInner()
                .withProperties(new LogzSingleSignOnProperties().withSingleSignOnState(SingleSignOnStates.INITIAL)
                    .withEnterpriseAppId("ypvhezrkg")
                    .withSingleSignOnUrl("c"))))
            .withNextLink("zsqpjhvmdajvny");
        model = BinaryData.fromObject(model).toObject(LogzSingleSignOnResourceListResponse.class);
        Assertions.assertEquals(SingleSignOnStates.INITIAL, model.value().get(0).properties().singleSignOnState());
        Assertions.assertEquals("yk", model.value().get(0).properties().enterpriseAppId());
        Assertions.assertEquals("enevfyexfwhybci", model.value().get(0).properties().singleSignOnUrl());
        Assertions.assertEquals("zsqpjhvmdajvny", model.nextLink());
    }
}
