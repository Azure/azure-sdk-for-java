// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logz.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.logz.LogzManager;
import com.azure.resourcemanager.logz.models.FilteringTag;
import com.azure.resourcemanager.logz.models.LogRules;
import com.azure.resourcemanager.logz.models.MonitoringTagRules;
import com.azure.resourcemanager.logz.models.MonitoringTagRulesProperties;
import com.azure.resourcemanager.logz.models.TagAction;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class TagRulesCreateOrUpdateWithResponseMockTests {
    @Test
    public void testCreateOrUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Canceled\",\"logRules\":{\"sendAadLogs\":false,\"sendSubscriptionLogs\":true,\"sendActivityLogs\":true,\"filteringTags\":[{\"name\":\"apnyiropuhpig\",\"value\":\"gylgqgitxmedjvcs\",\"action\":\"Include\"},{\"name\":\"wwncwzzhxgk\",\"value\":\"mgucna\",\"action\":\"Include\"},{\"name\":\"oellwp\",\"value\":\"d\",\"action\":\"Exclude\"}]}},\"id\":\"qbuaceopzfqr\",\"name\":\"huaoppp\",\"type\":\"qeqxo\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        LogzManager manager = LogzManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        MonitoringTagRules response = manager.tagRules()
            .define("oekqvk")
            .withExistingMonitor("bsjyofdx", "uusdttouwa")
            .withProperties(new MonitoringTagRulesProperties().withLogRules(new LogRules().withSendAadLogs(true)
                .withSendSubscriptionLogs(true)
                .withSendActivityLogs(false)
                .withFilteringTags(Arrays.asList(
                    new FilteringTag().withName("hcaalnjix").withValue("xyawj").withAction(TagAction.INCLUDE)))))
            .create();

        Assertions.assertEquals(false, response.properties().logRules().sendAadLogs());
        Assertions.assertEquals(true, response.properties().logRules().sendSubscriptionLogs());
        Assertions.assertEquals(true, response.properties().logRules().sendActivityLogs());
        Assertions.assertEquals("apnyiropuhpig", response.properties().logRules().filteringTags().get(0).name());
        Assertions.assertEquals("gylgqgitxmedjvcs", response.properties().logRules().filteringTags().get(0).value());
        Assertions.assertEquals(TagAction.INCLUDE, response.properties().logRules().filteringTags().get(0).action());
    }
}
