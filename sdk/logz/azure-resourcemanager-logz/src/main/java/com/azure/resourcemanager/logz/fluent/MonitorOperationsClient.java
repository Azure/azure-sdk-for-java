// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logz.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.logz.fluent.models.VMExtensionPayloadInner;
import com.azure.resourcemanager.logz.fluent.models.VMResourcesInner;
import com.azure.resourcemanager.logz.models.VMHostUpdateRequest;

/** An instance of this class provides access to all the operations defined in MonitorOperationsClient. */
public interface MonitorOperationsClient {
    /**
     * Returns the payload that needs to be passed in the request body for installing Logz.io agent on a VM.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response of payload to be passed while installing VM agent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    VMExtensionPayloadInner vMHostPayload(String resourceGroupName, String monitorName);

    /**
     * Returns the payload that needs to be passed in the request body for installing Logz.io agent on a VM.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response of payload to be passed while installing VM agent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<VMExtensionPayloadInner> vMHostPayloadWithResponse(
        String resourceGroupName, String monitorName, Context context);

    /**
     * Sending request to update the collection when Logz.io agent has been installed on a VM for a given monitor.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response of a list VM Host Update Operation.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<VMResourcesInner> listVmHostUpdate(String resourceGroupName, String monitorName);

    /**
     * Sending request to update the collection when Logz.io agent has been installed on a VM for a given monitor.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name.
     * @param body Request body to update the collection for agent installed in the given monitor.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response of a list VM Host Update Operation.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<VMResourcesInner> listVmHostUpdate(
        String resourceGroupName, String monitorName, VMHostUpdateRequest body, Context context);

    /**
     * List the compute resources currently being monitored by the Logz main account resource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response of a list VM Host Update Operation.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<VMResourcesInner> listVMHosts(String resourceGroupName, String monitorName);

    /**
     * List the compute resources currently being monitored by the Logz main account resource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response of a list VM Host Update Operation.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<VMResourcesInner> listVMHosts(String resourceGroupName, String monitorName, Context context);
}
