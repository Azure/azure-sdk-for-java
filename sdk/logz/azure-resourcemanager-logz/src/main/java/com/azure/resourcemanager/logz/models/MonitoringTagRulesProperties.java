// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logz.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.SystemData;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of the properties for a TagRules resource.
 */
@Fluent
public final class MonitoringTagRulesProperties implements JsonSerializable<MonitoringTagRulesProperties> {
    /*
     * Flag specifying if the resource provisioning state as tracked by ARM.
     */
    private ProvisioningState provisioningState;

    /*
     * Set of rules for sending logs for the Monitor resource.
     */
    private LogRules logRules;

    /*
     * Metadata pertaining to creation and last modification of the resource.
     */
    private SystemData systemData;

    /**
     * Creates an instance of MonitoringTagRulesProperties class.
     */
    public MonitoringTagRulesProperties() {
    }

    /**
     * Get the provisioningState property: Flag specifying if the resource provisioning state as tracked by ARM.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the logRules property: Set of rules for sending logs for the Monitor resource.
     * 
     * @return the logRules value.
     */
    public LogRules logRules() {
        return this.logRules;
    }

    /**
     * Set the logRules property: Set of rules for sending logs for the Monitor resource.
     * 
     * @param logRules the logRules value to set.
     * @return the MonitoringTagRulesProperties object itself.
     */
    public MonitoringTagRulesProperties withLogRules(LogRules logRules) {
        this.logRules = logRules;
        return this;
    }

    /**
     * Get the systemData property: Metadata pertaining to creation and last modification of the resource.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (logRules() != null) {
            logRules().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("logRules", this.logRules);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MonitoringTagRulesProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MonitoringTagRulesProperties if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the MonitoringTagRulesProperties.
     */
    public static MonitoringTagRulesProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            MonitoringTagRulesProperties deserializedMonitoringTagRulesProperties = new MonitoringTagRulesProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("provisioningState".equals(fieldName)) {
                    deserializedMonitoringTagRulesProperties.provisioningState
                        = ProvisioningState.fromString(reader.getString());
                } else if ("logRules".equals(fieldName)) {
                    deserializedMonitoringTagRulesProperties.logRules = LogRules.fromJson(reader);
                } else if ("systemData".equals(fieldName)) {
                    deserializedMonitoringTagRulesProperties.systemData = SystemData.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedMonitoringTagRulesProperties;
        });
    }
}
