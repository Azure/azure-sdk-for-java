/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.communication.v2020_08_20_preview;

import com.microsoft.azure.arm.collection.SupportsCreating;
import com.microsoft.azure.arm.resources.collection.SupportsDeletingByResourceGroup;
import com.microsoft.azure.arm.resources.collection.SupportsBatchDeletion;
import com.microsoft.azure.arm.resources.collection.SupportsGettingByResourceGroup;
import rx.Observable;
import com.microsoft.azure.arm.resources.collection.SupportsListingByResourceGroup;
import com.microsoft.azure.arm.collection.SupportsListing;
import com.microsoft.azure.management.communication.v2020_08_20_preview.implementation.CommunicationServicesInner;
import com.microsoft.azure.arm.model.HasInner;

/**
 * Type representing CommunicationServices.
 */
public interface CommunicationServices extends SupportsCreating<CommunicationServiceResource.DefinitionStages.Blank>, SupportsDeletingByResourceGroup, SupportsBatchDeletion, SupportsGettingByResourceGroup<CommunicationServiceResource>, SupportsListingByResourceGroup<CommunicationServiceResource>, SupportsListing<CommunicationServiceResource>, HasInner<CommunicationServicesInner> {
    /**
     * Link Notification Hub.
     * Links an Azure Notification Hub to this communication service.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param communicationServiceName The name of the CommunicationService resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<LinkedNotificationHub> linkNotificationHubAsync(String resourceGroupName, String communicationServiceName);

    /**
     * List Keys.
     * Get the access keys of the CommunicationService resource.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param communicationServiceName The name of the CommunicationService resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<CommunicationServiceKeys> listKeysAsync(String resourceGroupName, String communicationServiceName);

    /**
     * Regenerate Key.
     * Regenerate CommunicationService access key. PrimaryKey and SecondaryKey cannot be regenerated at the same time.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param communicationServiceName The name of the CommunicationService resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<CommunicationServiceKeys> regenerateKeyAsync(String resourceGroupName, String communicationServiceName);

    /**
     * Check Name Availability.
     * Checks that the CommunicationService name is valid and is not already in use.
     *
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<NameAvailability> checkNameAvailabilityAsync();

}
