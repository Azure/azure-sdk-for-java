/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.communication.v2020_08_20_preview.implementation;

import com.microsoft.azure.management.communication.v2020_08_20_preview.Status;
import org.joda.time.DateTime;
import com.microsoft.azure.management.communication.v2020_08_20_preview.ErrorResponseError;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;

/**
 * The current status of an async operation.
 */
@JsonFlatten
public class OperationStatusInner {
    /**
     * Fully qualified ID for the operation status.
     */
    @JsonProperty(value = "id", access = JsonProperty.Access.WRITE_ONLY)
    private String id;

    /**
     * Provisioning state of the resource. Possible values include:
     * 'Succeeded', 'Failed', 'Canceled', 'Creating', 'Deleting', 'Moving'.
     */
    @JsonProperty(value = "status", access = JsonProperty.Access.WRITE_ONLY)
    private Status status;

    /**
     * The start time of the operation.
     */
    @JsonProperty(value = "startTime", access = JsonProperty.Access.WRITE_ONLY)
    private DateTime startTime;

    /**
     * The end time of the operation.
     */
    @JsonProperty(value = "endTime", access = JsonProperty.Access.WRITE_ONLY)
    private DateTime endTime;

    /**
     * Percent of the operation that is complete.
     */
    @JsonProperty(value = "percentComplete", access = JsonProperty.Access.WRITE_ONLY)
    private Double percentComplete;

    /**
     * The error.
     */
    @JsonProperty(value = "error.error")
    private ErrorResponseError error;

    /**
     * Get fully qualified ID for the operation status.
     *
     * @return the id value
     */
    public String id() {
        return this.id;
    }

    /**
     * Get provisioning state of the resource. Possible values include: 'Succeeded', 'Failed', 'Canceled', 'Creating', 'Deleting', 'Moving'.
     *
     * @return the status value
     */
    public Status status() {
        return this.status;
    }

    /**
     * Get the start time of the operation.
     *
     * @return the startTime value
     */
    public DateTime startTime() {
        return this.startTime;
    }

    /**
     * Get the end time of the operation.
     *
     * @return the endTime value
     */
    public DateTime endTime() {
        return this.endTime;
    }

    /**
     * Get percent of the operation that is complete.
     *
     * @return the percentComplete value
     */
    public Double percentComplete() {
        return this.percentComplete;
    }

    /**
     * Get the error.
     *
     * @return the error value
     */
    public ErrorResponseError error() {
        return this.error;
    }

    /**
     * Set the error.
     *
     * @param error the error value to set
     * @return the OperationStatusInner object itself.
     */
    public OperationStatusInner withError(ErrorResponseError error) {
        this.error = error;
        return this;
    }

}
