/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.communication.v2020_08_20_preview.implementation;

import com.microsoft.azure.arm.resources.models.implementation.GroupableResourceCoreImpl;
import com.microsoft.azure.management.communication.v2020_08_20_preview.CommunicationServiceResource;
import rx.Observable;
import com.microsoft.azure.management.communication.v2020_08_20_preview.ProvisioningState;

class CommunicationServiceResourceImpl extends GroupableResourceCoreImpl<CommunicationServiceResource, CommunicationServiceResourceInner, CommunicationServiceResourceImpl, CommunicationManager> implements CommunicationServiceResource, CommunicationServiceResource.Definition, CommunicationServiceResource.Update {
    CommunicationServiceResourceImpl(String name, CommunicationServiceResourceInner inner, CommunicationManager manager) {
        super(name, inner, manager);
    }

    @Override
    public Observable<CommunicationServiceResource> createResourceAsync() {
        CommunicationServicesInner client = this.manager().inner().communicationServices();
        return client.createOrUpdateAsync(this.resourceGroupName(), this.name(), this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    public Observable<CommunicationServiceResource> updateResourceAsync() {
        CommunicationServicesInner client = this.manager().inner().communicationServices();
        return client.createOrUpdateAsync(this.resourceGroupName(), this.name(), this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<CommunicationServiceResourceInner> getInnerAsync() {
        CommunicationServicesInner client = this.manager().inner().communicationServices();
        return client.getByResourceGroupAsync(this.resourceGroupName(), this.name());
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }


    @Override
    public String dataLocation() {
        return this.inner().dataLocation();
    }

    @Override
    public String hostName() {
        return this.inner().hostName();
    }

    @Override
    public String immutableResourceId() {
        return this.inner().immutableResourceId();
    }

    @Override
    public String notificationHubId() {
        return this.inner().notificationHubId();
    }

    @Override
    public ProvisioningState provisioningState() {
        return this.inner().provisioningState();
    }

    @Override
    public String version() {
        return this.inner().version();
    }

    @Override
    public CommunicationServiceResourceImpl withDataLocation(String dataLocation) {
        this.inner().withDataLocation(dataLocation);
        return this;
    }

}
