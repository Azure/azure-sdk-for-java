// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.communication.jobrouter.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

import java.util.Objects;

/** A rule providing inline expression rules. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "kind")
@JsonTypeName("expression-rule")
@Fluent
public final class ExpressionRouterRule extends RouterRule {
    /**
     * Creates an instance of ExpressionRouterRule class.
     *
     * @param expression The string containing the expression to evaluate. Should contain return statement with calculated values.
     */
    public ExpressionRouterRule(String expression) {
        this.expression = Objects.requireNonNull(expression, "'expression' cannot be null.");
        this.language = ExpressionRouterRuleLanguage.POWER_FX;
    }

    /*
     * The expression language to compile to and execute
     */
    @JsonProperty(value = "language")
    private ExpressionRouterRuleLanguage language;

    /*
     * The string containing the expression to evaluate. Should contain return
     * statement with calculated values.
     */
    @JsonProperty(value = "expression", required = true)
    private String expression;

    /**
     * Get the language property: The expression language to compile to and execute.
     *
     * @return the language value.
     */
    public ExpressionRouterRuleLanguage getLanguage() {
        return this.language;
    }

    /**
     * Get the expression property: The string containing the expression to evaluate. Should contain return statement
     * with calculated values.
     *
     * @return the expression value.
     */
    public String getExpression() {
        return this.expression;
    }
}
