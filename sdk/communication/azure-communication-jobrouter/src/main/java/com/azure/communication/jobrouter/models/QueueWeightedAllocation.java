// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.communication.jobrouter.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

import java.util.List;
import java.util.Objects;

/** Contains the weight percentage and queue selectors to be applied if selected for weighted distributions. */
@Fluent
public final class QueueWeightedAllocation {
    /**
     * Creates an instance of QueueWeightedAllocation class.
     *
     * @param weight The percentage of this weight, expressed as a fraction of 1.
     * @param queueSelectors A collection of queue selectors that will be applied if this allocation is selected.
     */
    public QueueWeightedAllocation(double weight, List<RouterQueueSelector> queueSelectors) {
        this.weight = weight;
        this.queueSelectors = Objects.requireNonNull(queueSelectors, "'queueSelectors' cannot be null.");
    }

    /*
     * The percentage of this weight, expressed as a fraction of 1.
     */
    @JsonProperty(value = "weight", required = true)
    private final double weight;

    /*
     * A collection of queue selectors that will be applied if this allocation
     * is selected.
     */
    @JsonProperty(value = "queueSelectors", required = true)
    private final List<RouterQueueSelector> queueSelectors;

    /**
     * Get the weight property: The percentage of this weight, expressed as a fraction of 1.
     *
     * @return the weight value.
     */
    public double getWeight() {
        return this.weight;
    }

    /**
     * Get the queueSelectors property: A collection of queue selectors that will be applied if this allocation is
     * selected.
     *
     * @return the queueSelectors value.
     */
    public List<RouterQueueSelector> getQueueSelectors() {
        return this.queueSelectors;
    }
}
