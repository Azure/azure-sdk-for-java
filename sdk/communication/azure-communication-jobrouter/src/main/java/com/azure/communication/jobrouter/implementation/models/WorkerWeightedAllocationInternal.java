// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.communication.jobrouter.implementation.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Contains the weight percentage and worker selectors to be applied if selected for weighted distributions. */
@Fluent
public final class WorkerWeightedAllocationInternal {
    /*
     * The percentage of this weight, expressed as a fraction of 1.
     */
    @JsonProperty(value = "weight", required = true)
    private double weight;

    /*
     * A collection of worker selectors that will be applied if this allocation is selected.
     */
    @JsonProperty(value = "workerSelectors", required = true)
    private List<RouterWorkerSelectorInternal> workerSelectors;

    /** Creates an instance of WorkerWeightedAllocationInternal class. */
    public WorkerWeightedAllocationInternal() {}

    /**
     * Get the weight property: The percentage of this weight, expressed as a fraction of 1.
     *
     * @return the weight value.
     */
    public double getWeight() {
        return this.weight;
    }

    /**
     * Set the weight property: The percentage of this weight, expressed as a fraction of 1.
     *
     * @param weight the weight value to set.
     * @return the WorkerWeightedAllocationInternal object itself.
     */
    public WorkerWeightedAllocationInternal setWeight(double weight) {
        this.weight = weight;
        return this;
    }

    /**
     * Get the workerSelectors property: A collection of worker selectors that will be applied if this allocation is
     * selected.
     *
     * @return the workerSelectors value.
     */
    public List<RouterWorkerSelectorInternal> getWorkerSelectors() {
        return this.workerSelectors;
    }

    /**
     * Set the workerSelectors property: A collection of worker selectors that will be applied if this allocation is
     * selected.
     *
     * @param workerSelectors the workerSelectors value to set.
     * @return the WorkerWeightedAllocationInternal object itself.
     */
    public WorkerWeightedAllocationInternal setWorkerSelectors(List<RouterWorkerSelectorInternal> workerSelectors) {
        this.workerSelectors = workerSelectors;
        return this;
    }
}
