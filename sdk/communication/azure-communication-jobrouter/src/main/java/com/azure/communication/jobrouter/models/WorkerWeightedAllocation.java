// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.communication.jobrouter.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

import java.util.List;
import java.util.Objects;

/** Contains the weight percentage and worker selectors to be applied if selected for weighted distributions. */
@Fluent
public final class WorkerWeightedAllocation {
    /**
     * Creates an instance of WorkerWeightedAllocation class.
     *
     * @param weight The percentage of this weight, expressed as a fraction of 1.
     * @param workerSelectors A collection of worker selectors that will be applied if this allocation is selected.
     */
    public WorkerWeightedAllocation(double weight, List<RouterWorkerSelector> workerSelectors) {
        this.weight = weight;
        this.workerSelectors = Objects.requireNonNull(workerSelectors, "'workerSelectors' cannot be null.");
    }

    /*
     * The percentage of this weight, expressed as a fraction of 1.
     */
    @JsonProperty(value = "weight", required = true)
    private final double weight;

    /*
     * A collection of worker selectors that will be applied if this allocation
     * is selected.
     */
    @JsonProperty(value = "workerSelectors", required = true)
    private final List<RouterWorkerSelector> workerSelectors;

    /**
     * Get the weight property: The percentage of this weight, expressed as a fraction of 1.
     *
     * @return the weight value.
     */
    public double getWeight() {
        return this.weight;
    }

    /**
     * Get the workerSelectors property: A collection of worker selectors that will be applied if this allocation is
     * selected.
     *
     * @return the workerSelectors value.
     */
    public List<RouterWorkerSelector> getWorkerSelectors() {
        return this.workerSelectors;
    }
}
