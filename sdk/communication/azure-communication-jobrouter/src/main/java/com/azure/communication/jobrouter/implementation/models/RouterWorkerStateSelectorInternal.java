// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.communication.jobrouter.implementation.models;

import com.azure.core.util.ExpandableStringEnum;
import com.fasterxml.jackson.annotation.JsonCreator;
import java.util.Collection;

/** Defines values for RouterWorkerStateSelectorInternal. */
public final class RouterWorkerStateSelectorInternal extends ExpandableStringEnum<RouterWorkerStateSelectorInternal> {
    /** Static value active for RouterWorkerStateSelectorInternal. */
    public static final RouterWorkerStateSelectorInternal ACTIVE = fromString("active");

    /** Static value draining for RouterWorkerStateSelectorInternal. */
    public static final RouterWorkerStateSelectorInternal DRAINING = fromString("draining");

    /** Static value inactive for RouterWorkerStateSelectorInternal. */
    public static final RouterWorkerStateSelectorInternal INACTIVE = fromString("inactive");

    /** Static value all for RouterWorkerStateSelectorInternal. */
    public static final RouterWorkerStateSelectorInternal ALL = fromString("all");

    /**
     * Creates a new instance of RouterWorkerStateSelectorInternal value.
     *
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public RouterWorkerStateSelectorInternal() {}

    /**
     * Creates or finds a RouterWorkerStateSelectorInternal from its string representation.
     *
     * @param name a name to look for.
     * @return the corresponding RouterWorkerStateSelectorInternal.
     */
    @JsonCreator
    public static RouterWorkerStateSelectorInternal fromString(String name) {
        return fromString(name, RouterWorkerStateSelectorInternal.class);
    }

    /**
     * Gets known RouterWorkerStateSelectorInternal values.
     *
     * @return known RouterWorkerStateSelectorInternal values.
     */
    public static Collection<RouterWorkerStateSelectorInternal> values() {
        return values(RouterWorkerStateSelectorInternal.class);
    }
}
