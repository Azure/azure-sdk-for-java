// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.communication.jobrouter.implementation.models;

import com.azure.communication.jobrouter.implementation.JsonMergePatchHelper;
import com.azure.communication.jobrouter.models.LabelOperator;
import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.HashSet;
import java.util.Set;

/**
 * Describes a condition that must be met against a set of labels for queue selection.
 */
@Fluent
public final class RouterQueueSelectorInternal implements JsonSerializable<RouterQueueSelectorInternal> {

    /*
     * The label key to query against.
     */
    @Generated
    private String key;

    /*
     * Describes how the value of the label is compared to the value defined on the label selector.
     */
    @Generated
    private LabelOperator labelOperator;

    /*
     * The value to compare against the actual label value with the given operator. Values must be primitive values - number, string, boolean.
     */
    @Generated
    private Object value;

    /**
     * Get the key property: The label key to query against.
     *
     * @return the key value.
     */
    @Generated
    public String getKey() {
        return this.key;
    }

    /**
     * Get the labelOperator property: Describes how the value of the label is compared to the value defined on the
     * label selector.
     *
     * @return the labelOperator value.
     */
    @Generated
    public LabelOperator getLabelOperator() {
        return this.labelOperator;
    }

    /**
     * Get the value property: The value to compare against the actual label value with the given operator. Values must
     * be primitive values - number, string, boolean.
     *
     * @return the value value.
     */
    @Generated
    public Object getValue() {
        return this.value;
    }

    /**
     * Set the value property: The value to compare against the actual label value with the given operator. Values must
     * be primitive values - number, string, boolean.
     *
     * @param value the value value to set.
     * @return the RouterQueueSelectorInternal object itself.
     */
    @Generated
    public RouterQueueSelectorInternal setValue(Object value) {
        this.value = value;
        this.updatedProperties.add("value");
        return this;
    }

    @Generated
    private boolean jsonMergePatch;

    /**
     * Stores updated model property, the value is property name, not serialized name.
     */
    @Generated
    private final Set<String> updatedProperties = new HashSet<>();

    @Generated
    void serializeAsJsonMergePatch(boolean jsonMergePatch) {
        this.jsonMergePatch = jsonMergePatch;
    }

    static {
        JsonMergePatchHelper.setRouterQueueSelectorInternalAccessor((model, jsonMergePatchEnabled) -> {
            model.serializeAsJsonMergePatch(jsonMergePatchEnabled);
            return model;
        });
    }

    /**
     * Creates an instance of RouterQueueSelectorInternal class.
     */
    @Generated
    public RouterQueueSelectorInternal() {
    }

    /**
     * Set the key property: The label key to query against.
     * <p>Required when create the resource.</p>
     *
     * @param key the key value to set.
     * @return the RouterQueueSelectorInternal object itself.
     */
    @Generated
    public RouterQueueSelectorInternal setKey(String key) {
        this.key = key;
        this.updatedProperties.add("key");
        return this;
    }

    /**
     * Set the labelOperator property: Describes how the value of the label is compared to the value defined on the
     * label selector.
     * <p>Required when create the resource.</p>
     *
     * @param labelOperator the labelOperator value to set.
     * @return the RouterQueueSelectorInternal object itself.
     */
    @Generated
    public RouterQueueSelectorInternal setLabelOperator(LabelOperator labelOperator) {
        this.labelOperator = labelOperator;
        this.updatedProperties.add("labelOperator");
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        if (jsonMergePatch) {
            return toJsonMergePatch(jsonWriter);
        } else {
            jsonWriter.writeStartObject();
            jsonWriter.writeStringField("key", this.key);
            jsonWriter.writeStringField("labelOperator",
                this.labelOperator == null ? null : this.labelOperator.toString());
            jsonWriter.writeUntypedField("value", this.value);
            return jsonWriter.writeEndObject();
        }
    }

    @Generated
    private JsonWriter toJsonMergePatch(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        if (updatedProperties.contains("key")) {
            if (this.key == null) {
                jsonWriter.writeNullField("key");
            } else {
                jsonWriter.writeStringField("key", this.key);
            }
        }
        if (updatedProperties.contains("labelOperator")) {
            if (this.labelOperator == null) {
                jsonWriter.writeNullField("labelOperator");
            } else {
                jsonWriter.writeStringField("labelOperator",
                    this.labelOperator == null ? null : this.labelOperator.toString());
            }
        }
        if (updatedProperties.contains("value")) {
            if (this.value == null) {
                jsonWriter.writeNullField("value");
            } else {
                jsonWriter.writeUntypedField("value", this.value);
            }
        }
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RouterQueueSelectorInternal from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of RouterQueueSelectorInternal if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the RouterQueueSelectorInternal.
     */
    @Generated
    public static RouterQueueSelectorInternal fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RouterQueueSelectorInternal deserializedRouterQueueSelectorInternal = new RouterQueueSelectorInternal();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("key".equals(fieldName)) {
                    deserializedRouterQueueSelectorInternal.key = reader.getString();
                } else if ("labelOperator".equals(fieldName)) {
                    deserializedRouterQueueSelectorInternal.labelOperator
                        = LabelOperator.fromString(reader.getString());
                } else if ("value".equals(fieldName)) {
                    deserializedRouterQueueSelectorInternal.value = reader.readUntyped();
                } else {
                    reader.skipChildren();
                }
            }
            return deserializedRouterQueueSelectorInternal;
        });
    }
}
