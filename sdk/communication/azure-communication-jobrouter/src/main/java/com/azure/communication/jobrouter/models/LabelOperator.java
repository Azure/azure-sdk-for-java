// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.communication.jobrouter.models;

import com.azure.core.annotation.Generated;
import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * Describes supported operations on label values.
 */
public final class LabelOperator extends ExpandableStringEnum<LabelOperator> {

    /**
     * Equal.
     */
    @Generated
    public static final LabelOperator EQUAL = fromString("equal");

    /**
     * Not Equal.
     */
    @Generated
    public static final LabelOperator NOT_EQUAL = fromString("notEqual");

    /**
     * Less than.
     */
    @Generated
    public static final LabelOperator LESS_THAN = fromString("lessThan");

    /**
     * Less than or equal.
     */
    @Generated
    public static final LabelOperator LESS_THAN_OR_EQUAL = fromString("lessThanOrEqual");

    /**
     * Greater than.
     */
    @Generated
    public static final LabelOperator GREATER_THAN = fromString("greaterThan");

    /**
     * Greater than or equal.
     */
    @Generated
    public static final LabelOperator GREATER_THAN_OR_EQUAL = fromString("greaterThanOrEqual");

    /**
     * Creates a new instance of LabelOperator value.
     *
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Generated
    @Deprecated
    public LabelOperator() {
    }

    /**
     * Creates or finds a LabelOperator from its string representation.
     *
     * @param name a name to look for.
     * @return the corresponding LabelOperator.
     */
    @Generated
    public static LabelOperator fromString(String name) {
        return fromString(name, LabelOperator.class);
    }

    /**
     * Gets known LabelOperator values.
     *
     * @return known LabelOperator values.
     */
    @Generated
    public static Collection<LabelOperator> values() {
        return values(LabelOperator.class);
    }
}
