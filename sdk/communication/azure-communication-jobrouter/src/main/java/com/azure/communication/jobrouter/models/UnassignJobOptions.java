// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.communication.jobrouter.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Request payload for unassigning a job.
 */
@Fluent
public final class UnassignJobOptions implements JsonSerializable<UnassignJobOptions> {

    /*
     * If SuspendMatching is true, then a job is not queued for re-matching with a worker.
     */
    @Generated
    private Boolean suspendMatching;

    /**
     * Creates an instance of UnassignJobOptions class.
     */
    @Generated
    public UnassignJobOptions() {
    }

    /**
     * Get the suspendMatching property: If SuspendMatching is true, then a job is not queued for re-matching with a
     * worker.
     *
     * @return the suspendMatching value.
     */
    @Generated
    public Boolean isSuspendMatching() {
        return this.suspendMatching;
    }

    /**
     * Set the suspendMatching property: If SuspendMatching is true, then a job is not queued for re-matching with a
     * worker.
     *
     * @param suspendMatching the suspendMatching value to set.
     * @return the UnassignJobOptions object itself.
     */
    @Generated
    public UnassignJobOptions setSuspendMatching(Boolean suspendMatching) {
        this.suspendMatching = suspendMatching;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("suspendMatching", this.suspendMatching);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of UnassignJobOptions from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of UnassignJobOptions if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the UnassignJobOptions.
     */
    @Generated
    public static UnassignJobOptions fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            UnassignJobOptions deserializedUnassignJobOptions = new UnassignJobOptions();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("suspendMatching".equals(fieldName)) {
                    deserializedUnassignJobOptions.suspendMatching = reader.getNullable(JsonReader::getBoolean);
                } else {
                    reader.skipChildren();
                }
            }
            return deserializedUnassignJobOptions;
        });
    }
}
