// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.communication.jobrouter.generated;

import com.azure.communication.jobrouter.models.ClassificationPolicy;
import com.azure.communication.jobrouter.models.QueueSelectorAttachment;
import com.azure.communication.jobrouter.models.QueueSelectorAttachmentKind;
import com.azure.communication.jobrouter.models.RouterRule;
import com.azure.communication.jobrouter.models.RouterRuleKind;
import com.azure.communication.jobrouter.models.WorkerSelectorAttachment;
import com.azure.communication.jobrouter.models.WorkerSelectorAttachmentKind;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class RetrievesAnExistingClassificationPolicyByIdTests extends JobRouterAdministrationClientTestBase {
    @Test
    @Disabled
    public void testRetrievesAnExistingClassificationPolicyByIdTests() {
        // method invocation
        ClassificationPolicy response
            = jobRouterAdministrationClient.getClassificationPolicy("MainClassificationPolicy");

        // response assertion
        Assertions.assertNotNull(response);
        // verify property "etag"
        Assertions.assertEquals("etag", response.getEtag());
        // verify property "id"
        Assertions.assertEquals("MainClassificationPolicy", response.getId());
        // verify property "name"
        Assertions.assertEquals("Main", response.getName());
        // verify property "fallbackQueueId"
        Assertions.assertEquals("MainQueue", response.getFallbackQueueId());
        // verify property "queueSelectorAttachments"
        List<QueueSelectorAttachment> responseQueueSelectorAttachments = response.getQueueSelectorAttachments();
        QueueSelectorAttachment responseQueueSelectorAttachmentsFirstItem
            = responseQueueSelectorAttachments.iterator().next();
        Assertions.assertNotNull(responseQueueSelectorAttachmentsFirstItem);
        Assertions.assertEquals(QueueSelectorAttachmentKind.CONDITIONAL,
            responseQueueSelectorAttachmentsFirstItem.getKind());
        // verify property "prioritizationRule"
        RouterRule responsePrioritizationRule = response.getPrioritizationRule();
        Assertions.assertNotNull(responsePrioritizationRule);
        Assertions.assertEquals(RouterRuleKind.STATIC, responsePrioritizationRule.getKind());
        // verify property "workerSelectorAttachments"
        List<WorkerSelectorAttachment> responseWorkerSelectorAttachments = response.getWorkerSelectorAttachments();
        WorkerSelectorAttachment responseWorkerSelectorAttachmentsFirstItem
            = responseWorkerSelectorAttachments.iterator().next();
        Assertions.assertNotNull(responseWorkerSelectorAttachmentsFirstItem);
        Assertions.assertEquals(WorkerSelectorAttachmentKind.PASS_THROUGH,
            responseWorkerSelectorAttachmentsFirstItem.getKind());
    }
}
