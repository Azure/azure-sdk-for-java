// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.communication.jobrouter.generated;

import com.azure.communication.jobrouter.models.DistributionMode;
import com.azure.communication.jobrouter.models.DistributionModeKind;
import com.azure.communication.jobrouter.models.DistributionPolicy;
import com.azure.core.http.rest.PagedIterable;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class RetrievesExistingDistributionPoliciesTests extends JobRouterAdministrationClientTestBase {
    @Test
    @Disabled
    public void testRetrievesExistingDistributionPoliciesTests() {
        // method invocation
        PagedIterable<DistributionPolicy> response = jobRouterAdministrationClient.listDistributionPolicies();

        // response assertion
        Assertions.assertEquals(200, response.iterableByPage().iterator().next().getStatusCode());
        DistributionPolicy firstItem = response.iterator().next();
        Assertions.assertNotNull(firstItem);
        // verify property "etag"
        Assertions.assertEquals("etag", firstItem.getEtag());
        // verify property "id"
        Assertions.assertEquals("SecondaryDistributionPolicy", firstItem.getId());
        // verify property "name"
        Assertions.assertEquals("Secondary", firstItem.getName());
        // verify property "offerExpiresAfterSeconds"
        Assertions.assertEquals(300.0D, firstItem.getOfferExpiresAfterSeconds());
        // verify property "mode"
        DistributionMode firstItemMode = firstItem.getMode();
        Assertions.assertNotNull(firstItemMode);
        Assertions.assertEquals(DistributionModeKind.ROUND_ROBIN, firstItemMode.getKind());
        Assertions.assertEquals(1, firstItemMode.getMinConcurrentOffers());
        Assertions.assertEquals(2, firstItemMode.getMaxConcurrentOffers());
        Assertions.assertEquals(false, firstItemMode.isBypassSelectors());
    }
}
