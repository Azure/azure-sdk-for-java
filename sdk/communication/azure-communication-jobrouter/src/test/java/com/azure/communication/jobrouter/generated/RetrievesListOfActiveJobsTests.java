// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.communication.jobrouter.generated;

import com.azure.communication.jobrouter.models.JobMatchingMode;
import com.azure.communication.jobrouter.models.JobMatchingModeKind;
import com.azure.communication.jobrouter.models.RouterJob;
import com.azure.communication.jobrouter.models.RouterJobNote;
import com.azure.communication.jobrouter.models.RouterJobStatus;
import com.azure.communication.jobrouter.models.RouterJobStatusSelector;
import com.azure.core.http.rest.PagedIterable;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class RetrievesListOfActiveJobsTests extends JobRouterAdministrationClientTestBase {
    @Test
    @Disabled
    public void testRetrievesListOfActiveJobsTests() {
        // method invocation
        PagedIterable<RouterJob> response
            = jobRouterClient.listJobs(RouterJobStatusSelector.ACTIVE, null, null, null, null, null);

        // response assertion
        Assertions.assertEquals(200, response.iterableByPage().iterator().next().getStatusCode());
        RouterJob firstItem = response.iterator().next();
        Assertions.assertNotNull(firstItem);
        // verify property "etag"
        Assertions.assertEquals("etag", firstItem.getEtag());
        // verify property "id"
        Assertions.assertEquals("383541b3-5637-4af6-8aac-3391da8a578a", firstItem.getId());
        // verify property "channelReference"
        Assertions.assertEquals("1d5896f3-8b54-40be-82d3-910323f5e2af", firstItem.getChannelReference());
        // verify property "status"
        Assertions.assertEquals(RouterJobStatus.QUEUED, firstItem.getStatus());
        // verify property "enqueuedAt"
        Assertions.assertNotNull(firstItem.getEnqueuedAt());
        // verify property "channelId"
        Assertions.assertEquals("CustomChatChannel", firstItem.getChannelId());
        // verify property "queueId"
        Assertions.assertEquals("MainQueue", firstItem.getQueueId());
        // verify property "priority"
        Assertions.assertEquals(5, firstItem.getPriority());
        // verify property "labels"
        Assertions.assertNotNull(firstItem.getLabels());
        // verify property "assignments"
        Assertions.assertNotNull(firstItem.getAssignments());
        // verify property "notes"
        List<RouterJobNote> firstItemNotes = firstItem.getNotes();
        Assertions.assertEquals(0, firstItemNotes.size());
        // verify property "matchingMode"
        JobMatchingMode firstItemMatchingMode = firstItem.getMatchingMode();
        Assertions.assertNotNull(firstItemMatchingMode);
        Assertions.assertEquals(JobMatchingModeKind.QUEUE_AND_MATCH, firstItemMatchingMode.getKind());
    }
}
