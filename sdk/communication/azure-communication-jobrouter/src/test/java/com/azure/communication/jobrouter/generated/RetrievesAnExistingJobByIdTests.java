// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.communication.jobrouter.generated;

import com.azure.communication.jobrouter.models.JobMatchingMode;
import com.azure.communication.jobrouter.models.JobMatchingModeKind;
import com.azure.communication.jobrouter.models.LabelOperator;
import com.azure.communication.jobrouter.models.RouterJob;
import com.azure.communication.jobrouter.models.RouterJobNote;
import com.azure.communication.jobrouter.models.RouterJobStatus;
import com.azure.communication.jobrouter.models.RouterWorkerSelector;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class RetrievesAnExistingJobByIdTests extends JobRouterAdministrationClientTestBase {
    @Test
    @Disabled
    public void testRetrievesAnExistingJobByIdTests() {
        // method invocation
        RouterJob response = jobRouterClient.getJob("8780b28c-7079-4de1-9143-4d369289e958");

        // response assertion
        Assertions.assertNotNull(response);
        // verify property "etag"
        Assertions.assertEquals("etag", response.getEtag());
        // verify property "id"
        Assertions.assertEquals("8780b28c-7079-4de1-9143-4d369289e958", response.getId());
        // verify property "channelReference"
        Assertions.assertEquals("1d5896f3-8b54-40be-82d3-910323f5e2af", response.getChannelReference());
        // verify property "status"
        Assertions.assertEquals(RouterJobStatus.QUEUED, response.getStatus());
        // verify property "enqueuedAt"
        Assertions.assertNotNull(response.getEnqueuedAt());
        // verify property "channelId"
        Assertions.assertEquals("CustomVoiceChannel", response.getChannelId());
        // verify property "queueId"
        Assertions.assertEquals("MainQueue", response.getQueueId());
        // verify property "priority"
        Assertions.assertEquals(5, response.getPriority());
        // verify property "requestedWorkerSelectors"
        List<RouterWorkerSelector> responseRequestedWorkerSelectors = response.getRequestedWorkerSelectors();
        RouterWorkerSelector responseRequestedWorkerSelectorsFirstItem
            = responseRequestedWorkerSelectors.iterator().next();
        Assertions.assertNotNull(responseRequestedWorkerSelectorsFirstItem);
        Assertions.assertEquals("Sales", responseRequestedWorkerSelectorsFirstItem.getKey());
        Assertions.assertEquals(LabelOperator.EQUAL, responseRequestedWorkerSelectorsFirstItem.getLabelOperator());
        Assertions.assertNotNull(responseRequestedWorkerSelectorsFirstItem.getValue());
        // verify property "attachedWorkerSelectors"
        List<RouterWorkerSelector> responseAttachedWorkerSelectors = response.getAttachedWorkerSelectors();
        Assertions.assertEquals(0, responseAttachedWorkerSelectors.size());
        // verify property "labels"
        Assertions.assertNotNull(response.getLabels());
        // verify property "assignments"
        Assertions.assertNotNull(response.getAssignments());
        // verify property "notes"
        List<RouterJobNote> responseNotes = response.getNotes();
        Assertions.assertEquals(0, responseNotes.size());
        // verify property "matchingMode"
        JobMatchingMode responseMatchingMode = response.getMatchingMode();
        Assertions.assertNotNull(responseMatchingMode);
        Assertions.assertEquals(JobMatchingModeKind.QUEUE_AND_MATCH, responseMatchingMode.getKind());
    }
}
