// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.communication.jobrouter.generated;

import com.azure.communication.jobrouter.models.RouterChannel;
import com.azure.communication.jobrouter.models.RouterJobOffer;
import com.azure.communication.jobrouter.models.RouterWorker;
import com.azure.communication.jobrouter.models.RouterWorkerAssignment;
import com.azure.communication.jobrouter.models.RouterWorkerState;
import com.azure.communication.jobrouter.models.RouterWorkerStateSelector;
import com.azure.core.http.rest.PagedIterable;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class RetrievesAvailableWorkerFilteredByChannelTests extends JobRouterAdministrationClientTestBase {
    @Test
    @Disabled
    public void testRetrievesAvailableWorkerFilteredByChannelTests() {
        // method invocation
        PagedIterable<RouterWorker> response
            = jobRouterClient.listWorkers(RouterWorkerStateSelector.ACTIVE, "CustomChatChannel", null, true);

        // response assertion
        Assertions.assertEquals(200, response.iterableByPage().iterator().next().getStatusCode());
        RouterWorker firstItem = response.iterator().next();
        Assertions.assertNotNull(firstItem);
        // verify property "etag"
        Assertions.assertEquals("etag", firstItem.getEtag());
        // verify property "id"
        Assertions.assertEquals("DefaultWorker", firstItem.getId());
        // verify property "state"
        Assertions.assertEquals(RouterWorkerState.ACTIVE, firstItem.getState());
        // verify property "queues"
        List<String> firstItemQueues = firstItem.getQueues();
        Assertions.assertEquals("MainQueue", firstItemQueues.iterator().next());
        // verify property "capacity"
        Assertions.assertEquals(100, firstItem.getCapacity());
        // verify property "labels"
        Assertions.assertNotNull(firstItem.getLabels());
        // verify property "tags"
        Assertions.assertNotNull(firstItem.getTags());
        // verify property "channels"
        List<RouterChannel> firstItemChannels = firstItem.getChannels();
        RouterChannel firstItemChannelsFirstItem = firstItemChannels.iterator().next();
        Assertions.assertNotNull(firstItemChannelsFirstItem);
        Assertions.assertEquals("CustomChatChannel", firstItemChannelsFirstItem.getChannelId());
        Assertions.assertEquals(10, firstItemChannelsFirstItem.getCapacityCostPerJob());
        Assertions.assertEquals(4, firstItemChannelsFirstItem.getMaxNumberOfJobs());
        // verify property "offers"
        List<RouterJobOffer> firstItemOffers = firstItem.getOffers();
        Assertions.assertEquals(0, firstItemOffers.size());
        // verify property "assignedJobs"
        List<RouterWorkerAssignment> firstItemAssignedJobs = firstItem.getAssignedJobs();
        Assertions.assertEquals(0, firstItemAssignedJobs.size());
        // verify property "loadRatio"
        Assertions.assertEquals(0.0D, firstItem.getLoadRatio());
        // verify property "availableForOffers"
        Assertions.assertEquals(true, firstItem.isAvailableForOffers());
    }
}
