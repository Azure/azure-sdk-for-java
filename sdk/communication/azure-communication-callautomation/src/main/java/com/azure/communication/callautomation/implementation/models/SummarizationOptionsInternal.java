// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.communication.callautomation.implementation.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Configuration options for call summarization.
 */
@Fluent
public final class SummarizationOptionsInternal implements JsonSerializable<SummarizationOptionsInternal> {
    /*
     * Indicating whether end call summary should be enabled.
     */
    @Generated
    private Boolean enableEndCallSummary;

    /*
     * Locale for summarization (e.g., en-US).
     */
    @Generated
    private String locale;

    /**
     * Creates an instance of SummarizationOptionsInternal class.
     */
    @Generated
    public SummarizationOptionsInternal() {
    }

    /**
     * Get the enableEndCallSummary property: Indicating whether end call summary should be enabled.
     * 
     * @return the enableEndCallSummary value.
     */
    @Generated
    public Boolean isEnableEndCallSummary() {
        return this.enableEndCallSummary;
    }

    /**
     * Set the enableEndCallSummary property: Indicating whether end call summary should be enabled.
     * 
     * @param enableEndCallSummary the enableEndCallSummary value to set.
     * @return the SummarizationOptionsInternal object itself.
     */
    @Generated
    public SummarizationOptionsInternal setEnableEndCallSummary(Boolean enableEndCallSummary) {
        this.enableEndCallSummary = enableEndCallSummary;
        return this;
    }

    /**
     * Get the locale property: Locale for summarization (e.g., en-US).
     * 
     * @return the locale value.
     */
    @Generated
    public String getLocale() {
        return this.locale;
    }

    /**
     * Set the locale property: Locale for summarization (e.g., en-US).
     * 
     * @param locale the locale value to set.
     * @return the SummarizationOptionsInternal object itself.
     */
    @Generated
    public SummarizationOptionsInternal setLocale(String locale) {
        this.locale = locale;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("enableEndCallSummary", this.enableEndCallSummary);
        jsonWriter.writeStringField("locale", this.locale);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SummarizationOptionsInternal from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SummarizationOptionsInternal if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SummarizationOptionsInternal.
     */
    @Generated
    public static SummarizationOptionsInternal fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SummarizationOptionsInternal deserializedSummarizationOptionsInternal = new SummarizationOptionsInternal();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("enableEndCallSummary".equals(fieldName)) {
                    deserializedSummarizationOptionsInternal.enableEndCallSummary
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("locale".equals(fieldName)) {
                    deserializedSummarizationOptionsInternal.locale = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSummarizationOptionsInternal;
        });
    }
}
