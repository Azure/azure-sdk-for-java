// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.communication.callautomation.implementation.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The call details which will be sent to the target.
 */
@Fluent
public final class TeamsPhoneCallDetailsInternal implements JsonSerializable<TeamsPhoneCallDetailsInternal> {
    /*
     * Container for details relating to the original caller of the call
     */
    @Generated
    private TeamsPhoneCallerDetailsInternal teamsPhoneCallerDetails;

    /*
     * Container for details relating to the entity responsible for the creation of these call details
     */
    @Generated
    private TeamsPhoneSourceDetailsInternal teamsPhoneSourceDetails;

    /*
     * Id to exclusively identify this call session. IVR will use this for their telemetry/reporting.
     */
    @Generated
    private String sessionId;

    /*
     * The intent of the call
     */
    @Generated
    private String intent;

    /*
     * A very short description (max 48 chars) of the reason for the call. To be displayed in Teams CallNotification
     */
    @Generated
    private String callTopic;

    /*
     * A summary of the call thus far. It will be displayed on a side panel in the Teams UI
     */
    @Generated
    private String callContext;

    /*
     * Url for fetching the transcript of the call
     */
    @Generated
    private String transcriptUrl;

    /*
     * Sentiment of the call thus far
     */
    @Generated
    private String callSentiment;

    /*
     * Recommendations for resolving the issue based on the customer's intent and interaction history
     */
    @Generated
    private String suggestedActions;

    /**
     * Creates an instance of TeamsPhoneCallDetailsInternal class.
     */
    @Generated
    public TeamsPhoneCallDetailsInternal() {
    }

    /**
     * Get the teamsPhoneCallerDetails property: Container for details relating to the original caller of the call.
     * 
     * @return the teamsPhoneCallerDetails value.
     */
    @Generated
    public TeamsPhoneCallerDetailsInternal getTeamsPhoneCallerDetails() {
        return this.teamsPhoneCallerDetails;
    }

    /**
     * Set the teamsPhoneCallerDetails property: Container for details relating to the original caller of the call.
     * 
     * @param teamsPhoneCallerDetails the teamsPhoneCallerDetails value to set.
     * @return the TeamsPhoneCallDetailsInternal object itself.
     */
    @Generated
    public TeamsPhoneCallDetailsInternal
        setTeamsPhoneCallerDetails(TeamsPhoneCallerDetailsInternal teamsPhoneCallerDetails) {
        this.teamsPhoneCallerDetails = teamsPhoneCallerDetails;
        return this;
    }

    /**
     * Get the teamsPhoneSourceDetails property: Container for details relating to the entity responsible for the
     * creation of these call details.
     * 
     * @return the teamsPhoneSourceDetails value.
     */
    @Generated
    public TeamsPhoneSourceDetailsInternal getTeamsPhoneSourceDetails() {
        return this.teamsPhoneSourceDetails;
    }

    /**
     * Set the teamsPhoneSourceDetails property: Container for details relating to the entity responsible for the
     * creation of these call details.
     * 
     * @param teamsPhoneSourceDetails the teamsPhoneSourceDetails value to set.
     * @return the TeamsPhoneCallDetailsInternal object itself.
     */
    @Generated
    public TeamsPhoneCallDetailsInternal
        setTeamsPhoneSourceDetails(TeamsPhoneSourceDetailsInternal teamsPhoneSourceDetails) {
        this.teamsPhoneSourceDetails = teamsPhoneSourceDetails;
        return this;
    }

    /**
     * Get the sessionId property: Id to exclusively identify this call session. IVR will use this for their
     * telemetry/reporting.
     * 
     * @return the sessionId value.
     */
    @Generated
    public String getSessionId() {
        return this.sessionId;
    }

    /**
     * Set the sessionId property: Id to exclusively identify this call session. IVR will use this for their
     * telemetry/reporting.
     * 
     * @param sessionId the sessionId value to set.
     * @return the TeamsPhoneCallDetailsInternal object itself.
     */
    @Generated
    public TeamsPhoneCallDetailsInternal setSessionId(String sessionId) {
        this.sessionId = sessionId;
        return this;
    }

    /**
     * Get the intent property: The intent of the call.
     * 
     * @return the intent value.
     */
    @Generated
    public String getIntent() {
        return this.intent;
    }

    /**
     * Set the intent property: The intent of the call.
     * 
     * @param intent the intent value to set.
     * @return the TeamsPhoneCallDetailsInternal object itself.
     */
    @Generated
    public TeamsPhoneCallDetailsInternal setIntent(String intent) {
        this.intent = intent;
        return this;
    }

    /**
     * Get the callTopic property: A very short description (max 48 chars) of the reason for the call. To be displayed
     * in Teams CallNotification.
     * 
     * @return the callTopic value.
     */
    @Generated
    public String getCallTopic() {
        return this.callTopic;
    }

    /**
     * Set the callTopic property: A very short description (max 48 chars) of the reason for the call. To be displayed
     * in Teams CallNotification.
     * 
     * @param callTopic the callTopic value to set.
     * @return the TeamsPhoneCallDetailsInternal object itself.
     */
    @Generated
    public TeamsPhoneCallDetailsInternal setCallTopic(String callTopic) {
        this.callTopic = callTopic;
        return this;
    }

    /**
     * Get the callContext property: A summary of the call thus far. It will be displayed on a side panel in the Teams
     * UI.
     * 
     * @return the callContext value.
     */
    @Generated
    public String getCallContext() {
        return this.callContext;
    }

    /**
     * Set the callContext property: A summary of the call thus far. It will be displayed on a side panel in the Teams
     * UI.
     * 
     * @param callContext the callContext value to set.
     * @return the TeamsPhoneCallDetailsInternal object itself.
     */
    @Generated
    public TeamsPhoneCallDetailsInternal setCallContext(String callContext) {
        this.callContext = callContext;
        return this;
    }

    /**
     * Get the transcriptUrl property: Url for fetching the transcript of the call.
     * 
     * @return the transcriptUrl value.
     */
    @Generated
    public String getTranscriptUrl() {
        return this.transcriptUrl;
    }

    /**
     * Set the transcriptUrl property: Url for fetching the transcript of the call.
     * 
     * @param transcriptUrl the transcriptUrl value to set.
     * @return the TeamsPhoneCallDetailsInternal object itself.
     */
    @Generated
    public TeamsPhoneCallDetailsInternal setTranscriptUrl(String transcriptUrl) {
        this.transcriptUrl = transcriptUrl;
        return this;
    }

    /**
     * Get the callSentiment property: Sentiment of the call thus far.
     * 
     * @return the callSentiment value.
     */
    @Generated
    public String getCallSentiment() {
        return this.callSentiment;
    }

    /**
     * Set the callSentiment property: Sentiment of the call thus far.
     * 
     * @param callSentiment the callSentiment value to set.
     * @return the TeamsPhoneCallDetailsInternal object itself.
     */
    @Generated
    public TeamsPhoneCallDetailsInternal setCallSentiment(String callSentiment) {
        this.callSentiment = callSentiment;
        return this;
    }

    /**
     * Get the suggestedActions property: Recommendations for resolving the issue based on the customer's intent and
     * interaction history.
     * 
     * @return the suggestedActions value.
     */
    @Generated
    public String getSuggestedActions() {
        return this.suggestedActions;
    }

    /**
     * Set the suggestedActions property: Recommendations for resolving the issue based on the customer's intent and
     * interaction history.
     * 
     * @param suggestedActions the suggestedActions value to set.
     * @return the TeamsPhoneCallDetailsInternal object itself.
     */
    @Generated
    public TeamsPhoneCallDetailsInternal setSuggestedActions(String suggestedActions) {
        this.suggestedActions = suggestedActions;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("teamsPhoneCallerDetails", this.teamsPhoneCallerDetails);
        jsonWriter.writeJsonField("teamsPhoneSourceDetails", this.teamsPhoneSourceDetails);
        jsonWriter.writeStringField("sessionId", this.sessionId);
        jsonWriter.writeStringField("intent", this.intent);
        jsonWriter.writeStringField("callTopic", this.callTopic);
        jsonWriter.writeStringField("callContext", this.callContext);
        jsonWriter.writeStringField("transcriptUrl", this.transcriptUrl);
        jsonWriter.writeStringField("callSentiment", this.callSentiment);
        jsonWriter.writeStringField("suggestedActions", this.suggestedActions);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of TeamsPhoneCallDetailsInternal from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of TeamsPhoneCallDetailsInternal if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the TeamsPhoneCallDetailsInternal.
     */
    @Generated
    public static TeamsPhoneCallDetailsInternal fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            TeamsPhoneCallDetailsInternal deserializedTeamsPhoneCallDetailsInternal
                = new TeamsPhoneCallDetailsInternal();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("teamsPhoneCallerDetails".equals(fieldName)) {
                    deserializedTeamsPhoneCallDetailsInternal.teamsPhoneCallerDetails
                        = TeamsPhoneCallerDetailsInternal.fromJson(reader);
                } else if ("teamsPhoneSourceDetails".equals(fieldName)) {
                    deserializedTeamsPhoneCallDetailsInternal.teamsPhoneSourceDetails
                        = TeamsPhoneSourceDetailsInternal.fromJson(reader);
                } else if ("sessionId".equals(fieldName)) {
                    deserializedTeamsPhoneCallDetailsInternal.sessionId = reader.getString();
                } else if ("intent".equals(fieldName)) {
                    deserializedTeamsPhoneCallDetailsInternal.intent = reader.getString();
                } else if ("callTopic".equals(fieldName)) {
                    deserializedTeamsPhoneCallDetailsInternal.callTopic = reader.getString();
                } else if ("callContext".equals(fieldName)) {
                    deserializedTeamsPhoneCallDetailsInternal.callContext = reader.getString();
                } else if ("transcriptUrl".equals(fieldName)) {
                    deserializedTeamsPhoneCallDetailsInternal.transcriptUrl = reader.getString();
                } else if ("callSentiment".equals(fieldName)) {
                    deserializedTeamsPhoneCallDetailsInternal.callSentiment = reader.getString();
                } else if ("suggestedActions".equals(fieldName)) {
                    deserializedTeamsPhoneCallDetailsInternal.suggestedActions = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedTeamsPhoneCallDetailsInternal;
        });
    }
}
