// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.communication.callautomation.implementation.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The PostProcessingOptions model.
 */
@Fluent
public final class PostProcessingOptions implements JsonSerializable<PostProcessingOptions> {
    /*
     * The endpoint of the Cognitive Service resource assigned to the post recording processing.
     * The Cognitive Service resource will be used by the summarization feature.
     */
    @Generated
    private String cognitiveServicesEndpoint;

    /*
     * Define options of the transcription for the post recording processing.
     */
    @Generated
    private Transcription transcription;

    /*
     * Define options of the summarization for the post recording processing.
     */
    @Generated
    private Summarization summarization;

    /**
     * Creates an instance of PostProcessingOptions class.
     */
    @Generated
    public PostProcessingOptions() {
    }

    /**
     * Get the cognitiveServicesEndpoint property: The endpoint of the Cognitive Service resource assigned to the post
     * recording processing.
     * The Cognitive Service resource will be used by the summarization feature.
     * 
     * @return the cognitiveServicesEndpoint value.
     */
    @Generated
    public String getCognitiveServicesEndpoint() {
        return this.cognitiveServicesEndpoint;
    }

    /**
     * Set the cognitiveServicesEndpoint property: The endpoint of the Cognitive Service resource assigned to the post
     * recording processing.
     * The Cognitive Service resource will be used by the summarization feature.
     * 
     * @param cognitiveServicesEndpoint the cognitiveServicesEndpoint value to set.
     * @return the PostProcessingOptions object itself.
     */
    @Generated
    public PostProcessingOptions setCognitiveServicesEndpoint(String cognitiveServicesEndpoint) {
        this.cognitiveServicesEndpoint = cognitiveServicesEndpoint;
        return this;
    }

    /**
     * Get the transcription property: Define options of the transcription for the post recording processing.
     * 
     * @return the transcription value.
     */
    @Generated
    public Transcription getTranscription() {
        return this.transcription;
    }

    /**
     * Set the transcription property: Define options of the transcription for the post recording processing.
     * 
     * @param transcription the transcription value to set.
     * @return the PostProcessingOptions object itself.
     */
    @Generated
    public PostProcessingOptions setTranscription(Transcription transcription) {
        this.transcription = transcription;
        return this;
    }

    /**
     * Get the summarization property: Define options of the summarization for the post recording processing.
     * 
     * @return the summarization value.
     */
    @Generated
    public Summarization getSummarization() {
        return this.summarization;
    }

    /**
     * Set the summarization property: Define options of the summarization for the post recording processing.
     * 
     * @param summarization the summarization value to set.
     * @return the PostProcessingOptions object itself.
     */
    @Generated
    public PostProcessingOptions setSummarization(Summarization summarization) {
        this.summarization = summarization;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("transcription", this.transcription);
        jsonWriter.writeStringField("cognitiveServicesEndpoint", this.cognitiveServicesEndpoint);
        jsonWriter.writeJsonField("summarization", this.summarization);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of PostProcessingOptions from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of PostProcessingOptions if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the PostProcessingOptions.
     */
    @Generated
    public static PostProcessingOptions fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            PostProcessingOptions deserializedPostProcessingOptions = new PostProcessingOptions();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("transcription".equals(fieldName)) {
                    deserializedPostProcessingOptions.transcription = Transcription.fromJson(reader);
                } else if ("cognitiveServicesEndpoint".equals(fieldName)) {
                    deserializedPostProcessingOptions.cognitiveServicesEndpoint = reader.getString();
                } else if ("summarization".equals(fieldName)) {
                    deserializedPostProcessingOptions.summarization = Summarization.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedPostProcessingOptions;
        });
    }
}
