// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.communication.callautomation.implementation.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The speech recognition status as a result.
 */
@Fluent
public final class SpeechResultInternal implements JsonSerializable<SpeechResultInternal> {
    /*
     * The recognized speech in string.
     */
    private String speech;

    /**
     * Creates an instance of SpeechResultInternal class.
     */
    public SpeechResultInternal() {
    }

    /**
     * Get the speech property: The recognized speech in string.
     * 
     * @return the speech value.
     */
    public String getSpeech() {
        return this.speech;
    }

    /**
     * Set the speech property: The recognized speech in string.
     * 
     * @param speech the speech value to set.
     * @return the SpeechResultInternal object itself.
     */
    public SpeechResultInternal setSpeech(String speech) {
        this.speech = speech;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("speech", this.speech);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SpeechResultInternal from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SpeechResultInternal if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SpeechResultInternal.
     */
    public static SpeechResultInternal fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SpeechResultInternal deserializedSpeechResultInternal = new SpeechResultInternal();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("speech".equals(fieldName)) {
                    deserializedSpeechResultInternal.speech = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSpeechResultInternal;
        });
    }
}
