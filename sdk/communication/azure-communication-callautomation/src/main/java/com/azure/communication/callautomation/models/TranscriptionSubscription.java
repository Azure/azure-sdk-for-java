// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.communication.callautomation.models;

import com.azure.core.annotation.Fluent;
import com.azure.communication.callautomation.implementation.models.TranscriptionSubscriptionInternal;
import com.azure.communication.callautomation.implementation.accesshelpers.TranscriptionSubscriptionConstructorProxy;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.stream.Collectors;

/**
 * Transcription Subscription Object.
 */
@Fluent
public final class TranscriptionSubscription {
    /*
     * Gets or Sets subscription Id.
     */
    @JsonProperty(value = "id")
    private String id;

    /*
     * Gets or Sets transcription subscription state.
     */
    @JsonProperty(value = "state")
    private TranscriptionSubscriptionState state;

    /*
     * Gets or Sets the subscribed transcription result types.
     */
    @JsonProperty(value = "subscribedResultTypes")
    private List<TranscriptionResultState> subscribedResultTypes;

    static {
        TranscriptionSubscriptionConstructorProxy.setAccessor(
            new TranscriptionSubscriptionConstructorProxy.TranscriptionSubscriptionConstructorAccessor() {
                @Override
                public TranscriptionSubscription create(TranscriptionSubscriptionInternal internalHeaders) {
                    return new TranscriptionSubscription(internalHeaders);
                }
            });
    }

    /**
     * Creates an instance of TranscriptionSubscriptionInternal class.
     */
    public TranscriptionSubscription() {
        id = null;
        state = null;
        subscribedResultTypes = null;
    }

     /**
     * Package-private constructor of the class, used internally.
     *
     * @param transcriptionSubscriptionInternal The internal response of TranscriptionSubscription
     */
    public TranscriptionSubscription(TranscriptionSubscriptionInternal transcriptionSubscriptionInternal) {
        id = transcriptionSubscriptionInternal.getId() != null ? transcriptionSubscriptionInternal.getId() : null;
        state = transcriptionSubscriptionInternal.getState() != null ? TranscriptionSubscriptionState.fromString(transcriptionSubscriptionInternal.getState().toString()) : null;
        subscribedResultTypes = transcriptionSubscriptionInternal.getSubscribedResultTypes() != null ? transcriptionSubscriptionInternal.getSubscribedResultTypes().stream()
                .map(resultType -> TranscriptionResultState.fromString(resultType.toString()))
                .collect(Collectors.toList()) : null;
    }

    /**
     * Get the id property: Gets or Sets subscription Id.
     * 
     * @return the id value.
     */
    public String getId() {
        return this.id;
    }

    /**
     * Get the state property: Gets or Sets transcription subscription state.
     * 
     * @return the state value.
     */
    public TranscriptionSubscriptionState getState() {
        return this.state;
    }

    /**
     * Get the subscribedResultTypes property: Gets or Sets the subscribed transcription result types.
     * 
     * @return the subscribedResultTypes value.
     */
    public List<TranscriptionResultState> getSubscribedResultTypes() {
        return this.subscribedResultTypes;
    }
}
