// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.communication.callautomation.implementation.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The DialogStateResponse model.
 */
@Fluent
public final class DialogStateResponse implements JsonSerializable<DialogStateResponse> {
    /*
     * The dialog ID.
     */
    private String dialogId;

    /*
     * Defines dialog.
     */
    private BaseDialog dialog;

    /*
     * The value to identify context of the operation.
     */
    private String operationContext;

    /**
     * Creates an instance of DialogStateResponse class.
     */
    public DialogStateResponse() {
    }

    /**
     * Get the dialogId property: The dialog ID.
     * 
     * @return the dialogId value.
     */
    public String getDialogId() {
        return this.dialogId;
    }

    /**
     * Set the dialogId property: The dialog ID.
     * 
     * @param dialogId the dialogId value to set.
     * @return the DialogStateResponse object itself.
     */
    public DialogStateResponse setDialogId(String dialogId) {
        this.dialogId = dialogId;
        return this;
    }

    /**
     * Get the dialog property: Defines dialog.
     * 
     * @return the dialog value.
     */
    public BaseDialog getDialog() {
        return this.dialog;
    }

    /**
     * Set the dialog property: Defines dialog.
     * 
     * @param dialog the dialog value to set.
     * @return the DialogStateResponse object itself.
     */
    public DialogStateResponse setDialog(BaseDialog dialog) {
        this.dialog = dialog;
        return this;
    }

    /**
     * Get the operationContext property: The value to identify context of the operation.
     * 
     * @return the operationContext value.
     */
    public String getOperationContext() {
        return this.operationContext;
    }

    /**
     * Set the operationContext property: The value to identify context of the operation.
     * 
     * @param operationContext the operationContext value to set.
     * @return the DialogStateResponse object itself.
     */
    public DialogStateResponse setOperationContext(String operationContext) {
        this.operationContext = operationContext;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("dialogId", this.dialogId);
        jsonWriter.writeJsonField("dialog", this.dialog);
        jsonWriter.writeStringField("operationContext", this.operationContext);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DialogStateResponse from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DialogStateResponse if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the DialogStateResponse.
     */
    public static DialogStateResponse fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            DialogStateResponse deserializedDialogStateResponse = new DialogStateResponse();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("dialogId".equals(fieldName)) {
                    deserializedDialogStateResponse.dialogId = reader.getString();
                } else if ("dialog".equals(fieldName)) {
                    deserializedDialogStateResponse.dialog = BaseDialog.fromJson(reader);
                } else if ("operationContext".equals(fieldName)) {
                    deserializedDialogStateResponse.operationContext = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedDialogStateResponse;
        });
    }
}
