// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.communication.callautomation.implementation.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The StartRecordingFailed model.
 */
@Fluent
public final class StartRecordingFailed implements JsonSerializable<StartRecordingFailed> {
    /*
     * Call connection ID.
     */
    private String callConnectionId;

    /*
     * Correlation ID for event to call correlation.
     */
    private String correlationId;

    /*
     * The call recording id
     */
    private String recordingId;

    /**
     * Creates an instance of StartRecordingFailed class.
     */
    public StartRecordingFailed() {
    }

    /**
     * Get the callConnectionId property: Call connection ID.
     * 
     * @return the callConnectionId value.
     */
    public String getCallConnectionId() {
        return this.callConnectionId;
    }

    /**
     * Set the callConnectionId property: Call connection ID.
     * 
     * @param callConnectionId the callConnectionId value to set.
     * @return the StartRecordingFailed object itself.
     */
    public StartRecordingFailed setCallConnectionId(String callConnectionId) {
        this.callConnectionId = callConnectionId;
        return this;
    }

    /**
     * Get the correlationId property: Correlation ID for event to call correlation.
     * 
     * @return the correlationId value.
     */
    public String getCorrelationId() {
        return this.correlationId;
    }

    /**
     * Set the correlationId property: Correlation ID for event to call correlation.
     * 
     * @param correlationId the correlationId value to set.
     * @return the StartRecordingFailed object itself.
     */
    public StartRecordingFailed setCorrelationId(String correlationId) {
        this.correlationId = correlationId;
        return this;
    }

    /**
     * Get the recordingId property: The call recording id.
     * 
     * @return the recordingId value.
     */
    public String getRecordingId() {
        return this.recordingId;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("callConnectionId", this.callConnectionId);
        jsonWriter.writeStringField("correlationId", this.correlationId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of StartRecordingFailed from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of StartRecordingFailed if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the StartRecordingFailed.
     */
    public static StartRecordingFailed fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            StartRecordingFailed deserializedStartRecordingFailed = new StartRecordingFailed();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("callConnectionId".equals(fieldName)) {
                    deserializedStartRecordingFailed.callConnectionId = reader.getString();
                } else if ("correlationId".equals(fieldName)) {
                    deserializedStartRecordingFailed.correlationId = reader.getString();
                } else if ("recordingId".equals(fieldName)) {
                    deserializedStartRecordingFailed.recordingId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedStartRecordingFailed;
        });
    }
}
