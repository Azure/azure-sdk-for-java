// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.communication.callautomation.implementation.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The PlaySourceInternal model. */
@Fluent
public final class PlaySourceInternal {
    /*
     * Defines the type of the play source
     */
    @JsonProperty(value = "kind", required = true)
    private PlaySourceTypeInternal kind;

    /*
     * Defines the identifier to be used for caching related media
     */
    @JsonProperty(value = "playSourceCacheId")
    private String playSourceCacheId;

    /*
     * Defines the file source info to be used for play
     */
    @JsonProperty(value = "file")
    private FileSourceInternal file;

    /*
     * Defines the text source info to be used for play
     */
    @JsonProperty(value = "text")
    private TextSourceInternal text;

    /*
     * Defines the ssml(Speech Synthesis Markup Language) source info to be
     * used for play
     */
    @JsonProperty(value = "ssml")
    private SsmlSourceInternal ssml;

    /**
     * Get the kind property: Defines the type of the play source.
     *
     * @return the kind value.
     */
    public PlaySourceTypeInternal getKind() {
        return this.kind;
    }

    /**
     * Set the kind property: Defines the type of the play source.
     *
     * @param kind the kind value to set.
     * @return the PlaySourceInternal object itself.
     */
    public PlaySourceInternal setKind(PlaySourceTypeInternal kind) {
        this.kind = kind;
        return this;
    }

    /**
     * Get the playSourceCacheId property: Defines the identifier to be used for caching related media.
     *
     * @return the playSourceCacheId value.
     */
    public String getPlaySourceCacheId() {
        return this.playSourceCacheId;
    }

    /**
     * Set the playSourceCacheId property: Defines the identifier to be used for caching related media.
     *
     * @param playSourceCacheId the playSourceCacheId value to set.
     * @return the PlaySourceInternal object itself.
     */
    public PlaySourceInternal setPlaySourceCacheId(String playSourceCacheId) {
        this.playSourceCacheId = playSourceCacheId;
        return this;
    }

    /**
     * Get the file property: Defines the file source info to be used for play.
     *
     * @return the file value.
     */
    public FileSourceInternal getFile() {
        return this.file;
    }

    /**
     * Set the file property: Defines the file source info to be used for play.
     *
     * @param file the file value to set.
     * @return the PlaySourceInternal object itself.
     */
    public PlaySourceInternal setFile(FileSourceInternal file) {
        this.file = file;
        return this;
    }

    /**
     * Get the text property: Defines the text source info to be used for play.
     *
     * @return the text value.
     */
    public TextSourceInternal getText() {
        return this.text;
    }

    /**
     * Set the text property: Defines the text source info to be used for play.
     *
     * @param text the text value to set.
     * @return the PlaySourceInternal object itself.
     */
    public PlaySourceInternal setText(TextSourceInternal text) {
        this.text = text;
        return this;
    }

    /**
     * Get the ssml property: Defines the ssml(Speech Synthesis Markup Language) source info to be used for play.
     *
     * @return the ssml value.
     */
    public SsmlSourceInternal getSsml() {
        return this.ssml;
    }

    /**
     * Set the ssml property: Defines the ssml(Speech Synthesis Markup Language) source info to be used for play.
     *
     * @param ssml the ssml value to set.
     * @return the PlaySourceInternal object itself.
     */
    public PlaySourceInternal setSsml(SsmlSourceInternal ssml) {
        this.ssml = ssml;
        return this;
    }
}
