// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.communication.messages.models;

import com.azure.core.models.GeoPosition;
import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The message template's location value information.
 */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    property = "kind",
    defaultImpl = MessageTemplateLocation.class,
    visible = true)
@JsonTypeName("location")
@Fluent
public final class MessageTemplateLocation extends MessageTemplateValue {

    /*
     * The [Optional] name of the location.
     */
    @Generated
    @JsonProperty(value = "locationName")
    private String locationName;

    /*
     * The [Optional] address of the location.
     */
    @Generated
    @JsonProperty(value = "address")
    private String address;

    /*
     * The latitude of the location.
     */
    @Generated
    @JsonProperty(value = "latitude")
    private final double latitude;

    /*
     * The longitude of the location.
     */
    @Generated
    @JsonProperty(value = "longitude")
    private final double longitude;

    /**
     * Creates an instance of MessageTemplateLocation class.
     *
     * @param refValue the refValue value to set.
     * @param geoPosition the geoPosition value to set.
     */
    @Generated
    @JsonCreator
    public MessageTemplateLocation(@JsonProperty(value = "name") String refValue, GeoPosition geoPosition) {
        super(refValue);
        this.latitude = geoPosition.getLatitude();
        this.longitude = geoPosition.getLongitude();
    }

    /**
     * Get the locationName property: The [Optional] name of the location.
     *
     * @return the locationName value.
     */
    @Generated
    public String getLocationName() {
        return this.locationName;
    }

    /**
     * Set the locationName property: The [Optional] name of the location.
     *
     * @param locationName the locationName value to set.
     * @return the MessageTemplateLocation object itself.
     */
    @Generated
    public MessageTemplateLocation setLocationName(String locationName) {
        this.locationName = locationName;
        return this;
    }

    /**
     * Get the address property: The [Optional] address of the location.
     *
     * @return the address value.
     */
    @Generated
    public String getAddress() {
        return this.address;
    }

    /**
     * Set the address property: The [Optional] address of the location.
     *
     * @param address the address value to set.
     * @return the MessageTemplateLocation object itself.
     */
    @Generated
    public MessageTemplateLocation setAddress(String address) {
        this.address = address;
        return this;
    }

    /**
     * Get the geo position: The longitude and latitude of the location.
     *
     * @return the GeoPosition object.
     */
    public GeoPosition getPosition() {
        return new GeoPosition(this.longitude, this.latitude);
    }

    /*
     * The type discriminator describing a template parameter type.
     */
    @Generated
    @JsonTypeId
    @JsonProperty(value = "kind")
    private MessageTemplateValueKind kind = MessageTemplateValueKind.LOCATION;

    /**
     * Get the kind property: The type discriminator describing a template parameter type.
     *
     * @return the kind value.
     */
    @Generated
    @Override
    public MessageTemplateValueKind getKind() {
        return this.kind;
    }
}
