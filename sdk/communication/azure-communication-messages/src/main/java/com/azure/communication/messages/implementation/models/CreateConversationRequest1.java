// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.communication.messages.implementation.models;

import com.azure.communication.messages.models.CommunicationConversation;
import com.azure.communication.messages.models.Message;
import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The CreateConversationRequest1 model.
 */
@Fluent
public final class CreateConversationRequest1 implements JsonSerializable<CreateConversationRequest1> {
    /*
     * The conversation details.
     */
    @Generated
    private CommunicationConversation conversation;

    /*
     * An initial message within the conversation.
     */
    @Generated
    private Message initialMessage;

    /**
     * Creates an instance of CreateConversationRequest1 class.
     */
    @Generated
    public CreateConversationRequest1() {
    }

    /**
     * Get the conversation property: The conversation details.
     * 
     * @return the conversation value.
     */
    @Generated
    public CommunicationConversation getConversation() {
        return this.conversation;
    }

    /**
     * Get the initialMessage property: An initial message within the conversation.
     * 
     * @return the initialMessage value.
     */
    @Generated
    public Message getInitialMessage() {
        return this.initialMessage;
    }

    /**
     * Set the initialMessage property: An initial message within the conversation.
     * 
     * @param initialMessage the initialMessage value to set.
     * @return the CreateConversationRequest1 object itself.
     */
    @Generated
    public CreateConversationRequest1 setInitialMessage(Message initialMessage) {
        this.initialMessage = initialMessage;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("initialMessage", this.initialMessage);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CreateConversationRequest1 from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CreateConversationRequest1 if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the CreateConversationRequest1.
     */
    @Generated
    public static CreateConversationRequest1 fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CreateConversationRequest1 deserializedCreateConversationRequest1 = new CreateConversationRequest1();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("conversation".equals(fieldName)) {
                    deserializedCreateConversationRequest1.conversation = CommunicationConversation.fromJson(reader);
                } else if ("initialMessage".equals(fieldName)) {
                    deserializedCreateConversationRequest1.initialMessage = Message.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCreateConversationRequest1;
        });
    }
}
