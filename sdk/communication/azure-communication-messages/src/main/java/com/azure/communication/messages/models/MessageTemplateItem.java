// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.communication.messages.models;

import com.azure.communication.messages.models.channels.WhatsAppMessageTemplateItem;
import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The message template as returned from the service.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = "kind", defaultImpl = MessageTemplateItem.class, visible = true)
@JsonTypeName("MessageTemplateItem")
@JsonSubTypes({ @JsonSubTypes.Type(name = "whatsApp", value = WhatsAppMessageTemplateItem.class) })
@Immutable
public abstract class MessageTemplateItem {

    /*
     * The template's name.
     */
    @Generated
    @JsonProperty(value = "name", access = JsonProperty.Access.WRITE_ONLY)
    private String name;

    /*
     * The template's language, in the ISO 639 format, consist of a two-letter language code followed by an optional two-letter country code, e.g., 'en' or 'en_US'.
     */
    @Generated
    @JsonProperty(value = "language")
    private final String language;

    /*
     * The aggregated template status.
     */
    @Generated
    @JsonProperty(value = "status")
    private final MessageTemplateStatus status;

    /**
     * Creates an instance of MessageTemplateItem class.
     *
     * @param language the language value to set.
     * @param status the status value to set.
     */
    @Generated
    @JsonCreator
    protected MessageTemplateItem(@JsonProperty(value = "language") String language,
        @JsonProperty(value = "status") MessageTemplateStatus status) {
        this.kind = CommunicationMessagesChannel.fromString("MessageTemplateItem");
        this.language = language;
        this.status = status;
    }

    /**
     * Get the name property: The template's name.
     *
     * @return the name value.
     */
    @Generated
    public String getName() {
        return this.name;
    }

    /**
     * Get the language property: The template's language, in the ISO 639 format, consist of a two-letter language code
     * followed by an optional two-letter country code, e.g., 'en' or 'en_US'.
     *
     * @return the language value.
     */
    @Generated
    public String getLanguage() {
        return this.language;
    }

    /**
     * Get the status property: The aggregated template status.
     *
     * @return the status value.
     */
    @Generated
    public MessageTemplateStatus getStatus() {
        return this.status;
    }

    /*
     * The type discriminator describing a template type.
     */
    @Generated
    @JsonTypeId
    @JsonProperty(value = "kind")
    private CommunicationMessagesChannel kind;

    /**
     * Get the kind property: The type discriminator describing a template type.
     *
     * @return the kind value.
     */
    @Generated
    public CommunicationMessagesChannel getKind() {
        return this.kind;
    }
}
