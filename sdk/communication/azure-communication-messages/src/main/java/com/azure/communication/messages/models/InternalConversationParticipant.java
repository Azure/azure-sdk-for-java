// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.communication.messages.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Internal conversation participant.
 */
@Fluent
public final class InternalConversationParticipant extends ConversationParticipant {
    /*
     * The type discriminator describing a participant type.
     */
    @Generated
    private ParticipantKind kind = ParticipantKind.INTERNAL;

    /*
     * The internal platform identifiers for the participant.
     */
    @Generated
    private final Contact contact;

    /**
     * Creates an instance of InternalConversationParticipant class.
     * 
     * @param contact the contact value to set.
     */
    @Generated
    public InternalConversationParticipant(Contact contact) {
        this.contact = contact;
    }

    /**
     * Get the kind property: The type discriminator describing a participant type.
     * 
     * @return the kind value.
     */
    @Generated
    @Override
    public ParticipantKind getKind() {
        return this.kind;
    }

    /**
     * Get the contact property: The internal platform identifiers for the participant.
     * 
     * @return the contact value.
     */
    @Generated
    public Contact getContact() {
        return this.contact;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public InternalConversationParticipant setDisplayName(String displayName) {
        super.setDisplayName(displayName);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("displayName", getDisplayName());
        jsonWriter.writeJsonField("contact", this.contact);
        jsonWriter.writeStringField("kind", this.kind == null ? null : this.kind.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of InternalConversationParticipant from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of InternalConversationParticipant if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the InternalConversationParticipant.
     */
    @Generated
    public static InternalConversationParticipant fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String id = null;
            String displayName = null;
            Contact contact = null;
            ParticipantKind kind = ParticipantKind.INTERNAL;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    id = reader.getString();
                } else if ("displayName".equals(fieldName)) {
                    displayName = reader.getString();
                } else if ("contact".equals(fieldName)) {
                    contact = Contact.fromJson(reader);
                } else if ("kind".equals(fieldName)) {
                    kind = ParticipantKind.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }
            InternalConversationParticipant deserializedInternalConversationParticipant
                = new InternalConversationParticipant(contact);
            deserializedInternalConversationParticipant.setId(id);
            deserializedInternalConversationParticipant.setDisplayName(displayName);
            deserializedInternalConversationParticipant.kind = kind;

            return deserializedInternalConversationParticipant;
        });
    }
}
