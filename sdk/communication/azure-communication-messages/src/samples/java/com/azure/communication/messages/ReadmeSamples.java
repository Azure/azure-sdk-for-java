// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.communication.messages;

import com.azure.communication.messages.models.ActionGroup;
import com.azure.communication.messages.models.ActionGroupContent;
import com.azure.communication.messages.models.ActionGroupItem;
import com.azure.communication.messages.models.AudioNotificationContent;
import com.azure.communication.messages.models.ButtonContent;
import com.azure.communication.messages.models.ButtonSetContent;
import com.azure.communication.messages.models.DocumentMessageContent;
import com.azure.communication.messages.models.DocumentNotificationContent;
import com.azure.communication.messages.models.ImageMessageContent;
import com.azure.communication.messages.models.ImageNotificationContent;
import com.azure.communication.messages.models.InteractiveMessage;
import com.azure.communication.messages.models.InteractiveNotificationContent;
import com.azure.communication.messages.models.MessageTemplate;
import com.azure.communication.messages.models.MessageTemplateBindings;
import com.azure.communication.messages.models.MessageTemplateItem;
import com.azure.communication.messages.models.MessageTemplateText;
import com.azure.communication.messages.models.MessageTemplateValue;
import com.azure.communication.messages.models.LinkContent;
import com.azure.communication.messages.models.ReactionNotificationContent;
import com.azure.communication.messages.models.StickerNotificationContent;
import com.azure.communication.messages.models.TextMessageContent;
import com.azure.communication.messages.models.TextNotificationContent;
import com.azure.communication.messages.models.TemplateNotificationContent;
import com.azure.communication.messages.models.VideoMessageContent;
import com.azure.communication.messages.models.VideoNotificationContent;
import com.azure.communication.messages.models.SendMessageResult;
import com.azure.communication.messages.models.channels.WhatsAppButtonActionBindings;
import com.azure.communication.messages.models.channels.WhatsAppMessageTemplateBindings;
import com.azure.communication.messages.models.channels.WhatsAppMessageTemplateBindingsComponent;
import com.azure.communication.messages.models.channels.WhatsAppMessageTemplateItem;
import com.azure.communication.messages.models.channels.WhatsAppListActionBindings;
import com.azure.communication.messages.models.channels.WhatsAppUrlActionBindings;
import com.azure.core.credential.AzureKeyCredential;
import com.azure.core.credential.TokenCredential;
import com.azure.core.http.rest.PagedIterable;
import com.azure.identity.DefaultAzureCredentialBuilder;

import java.util.ArrayList;
import java.util.List;

public final class ReadmeSamples {
    public void readmeSamples() {
        // BEGIN: com.azure.communication.messages.readme
        // END: com.azure.communication.messages.readme
    }

    private void createNotificationMessageClientWithConnectionString() {
        // BEGIN: readme-sample-createNotificationMessageClientWithConnectionString
        NotificationMessagesClient notificationClient = new NotificationMessagesClientBuilder()
            .connectionString("<CONNECTION_STRING>")
            .buildClient();
        // END: readme-sample-createNotificationMessageClientWithConnectionString
    }

    public void  createClientWithTokenCredential() {
        // BEGIN: readme-sample-createNotificationMessageClientWithAAD
        String endpoint = "https://<resource-name>.communication.azure.com";
        TokenCredential credential = new DefaultAzureCredentialBuilder().build();
        NotificationMessagesClient notificationClient =  new NotificationMessagesClientBuilder()
            .endpoint(endpoint)
            .credential(credential)
            .buildClient();
        // END: readme-sample-createNotificationMessageClientWithAAD
    }

    public void  createClientWithAzureKeyCredential() {
        // BEGIN: readme-sample-createNotificationMessageClientWithAzureKeyCredential
        String endpoint = "https://<resource-name>.communication.azure.com";
        AzureKeyCredential azureKeyCredential = new AzureKeyCredential("<access-key>");
        NotificationMessagesClient notificationClient = new NotificationMessagesClientBuilder()
            .endpoint(endpoint)
            .credential(azureKeyCredential)
            .buildClient();
        // END: readme-sample-createNotificationMessageClientWithAzureKeyCredential
    }

    private void createMessageTemplateClientWithConnectionString() {
        // BEGIN: readme-sample-createMessageTemplateClientWithConnectionString
        MessageTemplateClient messageTemplateClient = new MessageTemplateClientBuilder()
            .connectionString("<CONNECTION_STRING>")
            .buildClient();
        // END: readme-sample-createMessageTemplateClientWithConnectionString
    }

    public void createMessageTemplateClientWithTokenCredential() {
        // BEGIN: readme-sample-createMessageTemplateClientWithAAD
        String endpoint = "https://<resource-name>.communication.azure.com";
        TokenCredential credential = new DefaultAzureCredentialBuilder().build();
        MessageTemplateClient messageTemplateClient = new MessageTemplateClientBuilder()
            .endpoint(endpoint)
            .credential(credential)
            .buildClient();
        // END: readme-sample-createMessageTemplateClientWithAAD
    }

    public void createMessageTemplateClientWithAzureKeyCredential() {
        // BEGIN: readme-sample-createMessageTemplateClientWithAzureKeyCredential
        String endpoint = "https://<resource-name>.communication.azure.com";
        AzureKeyCredential azureKeyCredential = new AzureKeyCredential("<access-key>");
        MessageTemplateClient messageTemplateClient = new MessageTemplateClientBuilder()
            .endpoint(endpoint)
            .credential(azureKeyCredential)
            .buildClient();
        // END: readme-sample-createMessageTemplateClientWithAzureKeyCredential
    }

    // BEGIN: readme-sample-sendTemplateMessage
    /*
    * This sample shows how to send template message with below details
    * Name: sample_shipping_confirmation, Language: en_US
    *  [
          {
            "type": "BODY",
            "text": "Your package has been shipped. It will be delivered in {{1}} business days."
          },
          {
            "type": "FOOTER",
            "text": "This message is from an unverified business."
          }
        ]
    * */
    private void sendTemplateMessage() {

        //Update Template Name and language according your template associate to your channel.
        MessageTemplate template = new MessageTemplate("sample_shipping_confirmation", "en_US");

        //Update template parameter type and value
        List<MessageTemplateValue> messageTemplateValues = new ArrayList<>();
        messageTemplateValues.add(new MessageTemplateText("Days", "5"));
        template.setValues(messageTemplateValues);

        //Update template parameter binding
        List<WhatsAppMessageTemplateBindingsComponent> components = new ArrayList<>();
        components.add(new WhatsAppMessageTemplateBindingsComponent("Days"));
        MessageTemplateBindings bindings = new WhatsAppMessageTemplateBindings()
            .setBody(components);
        template.setBindings(bindings);

        NotificationMessagesClient client = new NotificationMessagesClientBuilder()
            .connectionString("<CONNECTION_STRING>")
            .buildClient();
        List<String> recipients = new ArrayList<>();
        recipients.add("<RECIPIENT_IDENTIFIER e.g. PhoneNumber>");
        SendMessageResult result = client.send(
            new TemplateNotificationContent("CHANNEL_ID", recipients, template));

        result.getReceipts().forEach(r -> System.out.println("Message sent to:" + r.getTo() + " and message id:" + r.getMessageId()));
    }
    // END: readme-sample-sendTemplateMessage

    // BEGIN: readme-sample-sendTextMessage
    /*
     * This sample shows how to send simple text message with below details
     * Note: Business cannot initiate conversation with text message.
     * */
    private void sendTextMessage() {
        NotificationMessagesClient client = new NotificationMessagesClientBuilder()
            .connectionString("<CONNECTION_STRING>")
            .buildClient();
        List<String> recipients = new ArrayList<>();
        recipients.add("<RECIPIENT_IDENTIFIER e.g. PhoneNumber>");
        SendMessageResult result = client.send(
            new TextNotificationContent("<CHANNEL_ID>", recipients, "Hello from ACS messaging"));

        result.getReceipts().forEach(r -> System.out.println("Message sent to:" + r.getTo() + " and message id:" + r.getMessageId()));
    }
    // END: readme-sample-sendTextMessage

    // BEGIN: readme-sample-sendImageMessage
    /*
     * This sample shows how to send image message with below details.
     * Supported image - image/jpeg (.jpeg), image/png (.png)
     * Note: Business cannot initiate conversation with media message.
     * */
    public void sendImageMessage() {
        //Update the Media URL
        String mediaUrl = "https://wallpapercave.com/wp/wp2163723.jpg";
        List<String> recipients = new ArrayList<>();
        recipients.add("<RECIPIENT_IDENTIFIER e.g. PhoneNumber>");
        NotificationMessagesClient client = new NotificationMessagesClientBuilder()
            .connectionString("<CONNECTION_STRING>")
            .buildClient();
        SendMessageResult result = client.send(
            new ImageNotificationContent("<CHANNEL_ID>", recipients, mediaUrl));

        result.getReceipts().forEach(r -> System.out.println("Message sent to:" + r.getTo() + " and message id:" + r.getMessageId()));
    }
    // END: readme-sample-sendImageMessage

    // BEGIN: readme-sample-sendVideoMessage
    /*
     * This sample shows how to send video message with below details
     * Supported video - video/3gp (.3gp), video/mp4 (.mp4)
     * Note: Business cannot initiate conversation with media message.
     * */
    public void sendVideoMessage() {
        //Update the Media URL
        String mediaUrl = "https://sample-videos.com/video321/mp4/480/big_buck_bunny_480p_1mb.mp4";
        List<String> recipients = new ArrayList<>();
        recipients.add("<RECIPIENT_IDENTIFIER e.g. PhoneNumber>");
        NotificationMessagesClient client = new NotificationMessagesClientBuilder()
            .connectionString("<CONNECTION_STRING>")
            .buildClient();
        SendMessageResult result = client.send(
            new VideoNotificationContent("<CHANNEL_ID>", recipients, mediaUrl));

        result.getReceipts().forEach(r -> System.out.println("Message sent to:" + r.getTo() + " and message id:" + r.getMessageId()));
    }
    // END: readme-sample-sendVideoMessage

    // BEGIN: readme-sample-sendAudioMessage
    /*
     * This sample shows how to send audio message with below details
     * Supported audio - audio/aac (.aac), audio/amr (.amr), audio/mpeg (.mp3), audio/a4a (.mp4), audio/ogg (.ogg )
     * Note: Business cannot initiate conversation with media message.
     * */
    public void sendAudioMessage() {
        //Update the Media URL
        String mediaUrl = "https://sample-videos.com/audio/mp3/wave.mp3";
        List<String> recipients = new ArrayList<>();
        recipients.add("<RECIPIENT_IDENTIFIER e.g. PhoneNumber>");
        NotificationMessagesClient client = new NotificationMessagesClientBuilder()
            .connectionString("<CONNECTION_STRING>")
            .buildClient();
        SendMessageResult result = client.send(
            new AudioNotificationContent("<CHANNEL_ID>", recipients, mediaUrl));

        result.getReceipts().forEach(r -> System.out.println("Message sent to:" + r.getTo() + " and message id:" + r.getMessageId()));
    }
    // END: readme-sample-sendAudioMessage

    // BEGIN: readme-sample-sendDocumentMessage
    /*
     * This sample shows how to send document message with below details
     * Supported Document type - Plain Text (.txt), PDF (.pdf), Microsoft Excel, Word, PowerPoint
     * Note: Business cannot initiate conversation with media message.
     * */
    public void sendDocumentMessage() {
        //Update the Media URL
        String mediaUrl = "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf";
        List<String> recipients = new ArrayList<>();
        recipients.add("<RECIPIENT_IDENTIFIER e.g. PhoneNumber>");
        NotificationMessagesClient client = new NotificationMessagesClientBuilder()
            .connectionString("<CONNECTION_STRING>")
            .buildClient();
        SendMessageResult result = client.send(
            new DocumentNotificationContent("<CHANNEL_ID>", recipients, mediaUrl));

        result.getReceipts().forEach(r -> System.out.println("Message sent to:" + r.getTo() + " and message id:" + r.getMessageId()));
    }
    // END: readme-sample-sendDocumentMessage

    // BEGIN: readme-sample-sendStickerMessage
    /*
     * This sample shows how to send sticker message with below details
     * Supported sticker type - (.webp)
     * Note: Business cannot initiate conversation with media message.
     * */
    public static void sendStickerMessage() {
        //Update the Media URL
        String mediaUrl = "https://www.gstatic.com/webp/gallery/1.sm.webp";
        List<String> recipients = new ArrayList<>();
        recipients.add("<RECIPIENT_IDENTIFIER e.g. PhoneNumber>");
        NotificationMessagesClient client = new NotificationMessagesClientBuilder()
            .connectionString("<CONNECTION_STRING>")
            .buildClient();
        SendMessageResult result = client.send(
            new StickerNotificationContent("<CHANNEL_ID>", recipients, mediaUrl));

        result.getReceipts().forEach(r -> System.out.println("Message sent to:" + r.getTo() + " and message id:" + r.getMessageId()));
    }
    // END: readme-sample-sendStickerMessage

    // BEGIN: readme-sample-sendReactionMessage
    /*
     * This sample shows how to send reaction message with below details
     * Emoji - unicode for emoji character.
     * Reply Message ID - ID of the message to be replied with emoji
     * Note: Business cannot initiate conversation with media message.
     * */
    public static void sendReactionMessage() {
        List<String> recipients = new ArrayList<>();
        recipients.add("<RECIPIENT_IDENTIFIER e.g. PhoneNumber>");
        NotificationMessagesClient client = new NotificationMessagesClientBuilder()
            .connectionString("<CONNECTION_STRING>")
            .buildClient();
        SendMessageResult result = client.send(
            new ReactionNotificationContent("<CHANNEL_ID>", recipients, "\uD83D\uDE00", "<REPLY_MESSAGE_ID>"));

        result.getReceipts().forEach(r -> System.out.println("Message sent to:" + r.getTo() + " and message id:" + r.getMessageId()));
    }
    // END: readme-sample-sendReactionMessage

    // BEGIN: readme-sample-sendInteractiveMessageWithButtonAction
    /*
     * This sample shows how to send interactive message with Button Action
     * Note: Business cannot initiate conversation with interactive message.
     * */
    public void sendInteractiveMessageWithButtonAction() {
        List<String> recipients = new ArrayList<>();
        recipients.add("<RECIPIENT_IDENTIFIER e.g. PhoneNumber>");
        NotificationMessagesClient client = new NotificationMessagesClientBuilder()
            .connectionString("<CONNECTION_STRING>")
            .buildClient();
        List<ButtonContent> buttonActions =  new ArrayList<>();
        buttonActions.add(new ButtonContent("no",  "No"));
        buttonActions.add(new ButtonContent("yes",  "Yes"));
        ButtonSetContent buttonSet = new ButtonSetContent(buttonActions);
        InteractiveMessage interactiveMessage = new InteractiveMessage(
            new TextMessageContent("Do you want to proceed?"), new WhatsAppButtonActionBindings(buttonSet));
        SendMessageResult result = client.send(
            new InteractiveNotificationContent("<CHANNEL_ID>",  recipients, interactiveMessage));

        result.getReceipts().forEach(r -> System.out.println("Message sent to:" + r.getTo() + " and message id:" + r.getMessageId()));
    }
    // END: readme-sample-sendInteractiveMessageWithButtonAction

    // BEGIN: readme-sample-sendInteractiveMessageWithButtonActionWithImageHeader
    /*
     * This sample shows how to send button action interactive message with image header
     * Note: Business cannot initiate conversation with interactive message.
     * */
    public void sendInteractiveMessageWithButtonActionWithImageHeader() {
        List<String> recipients = new ArrayList<>();
        recipients.add("<RECIPIENT_IDENTIFIER e.g. PhoneNumber>");
        NotificationMessagesClient client = new NotificationMessagesClientBuilder()
            .connectionString("<CONNECTION_STRING>")
            .buildClient();
        List<ButtonContent> buttonActions =  new ArrayList<>();
        buttonActions.add(new ButtonContent("no",  "No"));
        buttonActions.add(new ButtonContent("yes",  "Yes"));
        ButtonSetContent buttonSet = new ButtonSetContent(buttonActions);
        InteractiveMessage interactiveMessage = new InteractiveMessage(
            new TextMessageContent("Do you want to proceed?"), new WhatsAppButtonActionBindings(buttonSet));
        interactiveMessage.setHeader(new ImageMessageContent("https://wallpapercave.com/wp/wp2163723.jpg"));
        SendMessageResult result = client.send(
            new InteractiveNotificationContent("<CHANNEL_ID>",  recipients, interactiveMessage));

        result.getReceipts().forEach(r -> System.out.println("Message sent to:" + r.getTo() + " and message id:" + r.getMessageId()));
    }
    // END: readme-sample-sendInteractiveMessageWithButtonActionWithImageHeader

    // BEGIN: readme-sample-sendInteractiveMessageWithButtonActionWithDocumentHeader
    /*
     * This sample shows how to send button action interactive message with document header
     * Note: Business cannot initiate conversation with interactive message.
     * */
    public static void sendInteractiveMessageWithButtonActionWithDocumentHeader() {
        List<String> recipients = new ArrayList<>();
        recipients.add("<RECIPIENT_IDENTIFIER e.g. PhoneNumber>");
        NotificationMessagesClient client = new NotificationMessagesClientBuilder()
            .connectionString("<CONNECTION_STRING>")
            .buildClient();
        List<ButtonContent> buttonActions =  new ArrayList<>();
        buttonActions.add(new ButtonContent("no",  "No"));
        buttonActions.add(new ButtonContent("yes",  "Yes"));
        ButtonSetContent buttonSet = new ButtonSetContent(buttonActions);
        InteractiveMessage interactiveMessage = new InteractiveMessage(
            new TextMessageContent("Do you want to proceed?"), new WhatsAppButtonActionBindings(buttonSet));
        interactiveMessage.setHeader(new DocumentMessageContent("https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf"));
        SendMessageResult result = client.send(
            new InteractiveNotificationContent("<CHANNEL_ID>",  recipients, interactiveMessage));

        result.getReceipts().forEach(r -> System.out.println("Message sent to:" + r.getTo() + " and message id:" + r.getMessageId()));
    }
    // END: readme-sample-sendInteractiveMessageWithButtonActionWithDocumentHeader


    // BEGIN: readme-sample-sendInteractiveMessageWithButtonActionWithVideoHeader
    /*
     * This sample shows how to send button action interactive message with video header
     * Note: Business cannot initiate conversation with interactive message.
     * */
    public static void sendInteractiveMessageWithButtonActionWithVideoHeader() {
        List<String> recipients = new ArrayList<>();
        recipients.add("<RECIPIENT_IDENTIFIER e.g. PhoneNumber>");
        NotificationMessagesClient client = new NotificationMessagesClientBuilder()
            .connectionString("<CONNECTION_STRING>")
            .buildClient();
        List<ButtonContent> buttonActions =  new ArrayList<>();
        buttonActions.add(new ButtonContent("no",  "No"));
        buttonActions.add(new ButtonContent("yes",  "Yes"));
        ButtonSetContent buttonSet = new ButtonSetContent(buttonActions);
        InteractiveMessage interactiveMessage = new InteractiveMessage(
            new TextMessageContent("Do you like it?"), new WhatsAppButtonActionBindings(buttonSet));
        interactiveMessage.setHeader(new VideoMessageContent("https://sample-videos.com/audio/mp3/wave.mp3"));
        SendMessageResult result = client.send(
            new InteractiveNotificationContent("<CHANNEL_ID>",  recipients, interactiveMessage));

        result.getReceipts().forEach(r -> System.out.println("Message sent to:" + r.getTo() + " and message id:" + r.getMessageId()));
    }
    // END: readme-sample-sendInteractiveMessageWithButtonActionWithVideoHeader

    // BEGIN: readme-sample-sendInteractiveMessageWithListAction
    /*
     * This sample shows how to send list action interactive message
     * Note: Business cannot initiate conversation with interactive message.
     * */
    public static void sendInteractiveMessageWithListAction() {
        List<ActionGroupItem> group1 = new ArrayList<>();
        group1.add(new ActionGroupItem("priority_express", "Priority Mail Express", "Delivered on same day!"));
        group1.add(new ActionGroupItem("priority_mail", "Priority Mail", "Delivered in 1-2 days"));

        List<ActionGroupItem> group2 = new ArrayList<>();
        group2.add(new ActionGroupItem("usps_ground_advantage", "USPS Ground Advantage", "Delivered in 2-5 days"));
        group2.add(new ActionGroupItem("media_mail", "Media Mail", "Delivered in 5-8 days"));

        List<ActionGroup> options = new ArrayList<>();
        options.add(new ActionGroup("Express Delivery", group1));
        options.add(new ActionGroup("Normal Delivery", group2));

        ActionGroupContent actionGroupContent = new ActionGroupContent("Shipping Options", options);
        InteractiveMessage interactiveMessage = new InteractiveMessage(
            new TextMessageContent("Which shipping option do you want?"), new WhatsAppListActionBindings(actionGroupContent));
        interactiveMessage.setFooter(new TextMessageContent("Eagle Logistic"));
        interactiveMessage.setHeader(new TextMessageContent("Shipping Options"));

        List<String> recipients = new ArrayList<>();
        recipients.add("<RECIPIENT_IDENTIFIER e.g. PhoneNumber>");
        NotificationMessagesClient client = new NotificationMessagesClientBuilder()
            .connectionString("<CONNECTION_STRING>")
            .buildClient();
        SendMessageResult result = client.send(
            new InteractiveNotificationContent("<CHANNEL_ID>",  recipients, interactiveMessage));

        result.getReceipts().forEach(r -> System.out.println("Message sent to:" + r.getTo() + " and message id:" + r.getMessageId()));

    }
    // END: readme-sample-sendInteractiveMessageWithListAction

    // BEGIN: readme-sample-sendInteractiveMessageWithUrlAction
    /*
     * This sample shows how to send url action interactive message
     * Note: Business cannot initiate conversation with interactive message.
     * */
    public static void sendInteractiveMessageWithUrlAction() {
        LinkContent urlAction = new LinkContent("Rocket is the best!", "https://wallpapercave.com/wp/wp2163723.jpg");
        InteractiveMessage interactiveMessage = new InteractiveMessage(
            new TextMessageContent("The best Guardian of Galaxy"), new WhatsAppUrlActionBindings(urlAction));
        interactiveMessage.setFooter(new TextMessageContent("Intergalactic New Ltd"));

        List<String> recipients = new ArrayList<>();
        recipients.add("<RECIPIENT_IDENTIFIER e.g. PhoneNumber>");
        NotificationMessagesClient client = new NotificationMessagesClientBuilder()
            .connectionString("<CONNECTION_STRING>")
            .buildClient();
        SendMessageResult result = client.send(
            new InteractiveNotificationContent("<CHANNEL_ID>",  recipients, interactiveMessage));

        result.getReceipts().forEach(r -> System.out.println("Message sent to:" + r.getTo() + " and message id:" + r.getMessageId()));
    }
    // END: readme-sample-sendInteractiveMessageWithUrlAction

    public static void getMessageTemplateWithConnectionString() {
        // BEGIN: readme-sample-ListTemplates
        MessageTemplateClient templateClient =
            new MessageTemplateClientBuilder()
                .connectionString("<Connection_String>")
                .buildClient();

        PagedIterable<MessageTemplateItem> response = templateClient.listTemplates("<CHANNEL_ID>");

        response.stream().forEach(t -> {
            WhatsAppMessageTemplateItem template = (WhatsAppMessageTemplateItem) t;
            System.out.println("===============================");
            System.out.println("Template Name :: " + template.getName());
            System.out.println("Template Language :: " + template.getLanguage());
            System.out.println("Template Status :: " + template.getStatus());
            System.out.println("Template Content :: " + template.getContent());
            System.out.println("===============================");
        });
        // END: readme-sample-ListTemplates
    }

}
