// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.communication.sms.implementation.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Defines optional parameters for connecting with the Messaging Connect Partner to deliver SMS.
 */
@Fluent
public final class MessagingConnectOptions implements JsonSerializable<MessagingConnectOptions> {
    /*
     * Represents the API key associated with the customer's account in the Messaging Connect Partner portal.
     */
    @Generated
    private String apiKey;

    /*
     * Specifies the partner associated with the API key.
     */
    @Generated
    private String partner;

    /**
     * Creates an instance of MessagingConnectOptions class.
     */
    @Generated
    public MessagingConnectOptions() {
    }

    /**
     * Get the apiKey property: Represents the API key associated with the customer's account in the Messaging Connect
     * Partner portal.
     * 
     * @return the apiKey value.
     */
    @Generated
    public String getApiKey() {
        return this.apiKey;
    }

    /**
     * Set the apiKey property: Represents the API key associated with the customer's account in the Messaging Connect
     * Partner portal.
     * 
     * @param apiKey the apiKey value to set.
     * @return the MessagingConnectOptions object itself.
     */
    @Generated
    public MessagingConnectOptions setApiKey(String apiKey) {
        this.apiKey = apiKey;
        return this;
    }

    /**
     * Get the partner property: Specifies the partner associated with the API key.
     * 
     * @return the partner value.
     */
    @Generated
    public String getPartner() {
        return this.partner;
    }

    /**
     * Set the partner property: Specifies the partner associated with the API key.
     * 
     * @param partner the partner value to set.
     * @return the MessagingConnectOptions object itself.
     */
    @Generated
    public MessagingConnectOptions setPartner(String partner) {
        this.partner = partner;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("apiKey", this.apiKey);
        jsonWriter.writeStringField("partner", this.partner);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MessagingConnectOptions from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MessagingConnectOptions if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the MessagingConnectOptions.
     */
    @Generated
    public static MessagingConnectOptions fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            MessagingConnectOptions deserializedMessagingConnectOptions = new MessagingConnectOptions();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("apiKey".equals(fieldName)) {
                    deserializedMessagingConnectOptions.apiKey = reader.getString();
                } else if ("partner".equals(fieldName)) {
                    deserializedMessagingConnectOptions.partner = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedMessagingConnectOptions;
        });
    }
}
