// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.communication.sms.implementation.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * An opt out request.
 */
@Fluent
public final class OptOutRequest implements JsonSerializable<OptOutRequest> {
    /*
     * The sender's identifier (typically phone number in E.164 format) that is owned by the authenticated account.
     */
    @Generated
    private String from;

    /*
     * The recipients property.
     */
    @Generated
    private List<OptOutRecipient> recipients;

    /**
     * Creates an instance of OptOutRequest class.
     */
    @Generated
    public OptOutRequest() {
    }

    /**
     * Get the from property: The sender's identifier (typically phone number in E.164 format) that is owned by the
     * authenticated account.
     * 
     * @return the from value.
     */
    @Generated
    public String getFrom() {
        return this.from;
    }

    /**
     * Set the from property: The sender's identifier (typically phone number in E.164 format) that is owned by the
     * authenticated account.
     * 
     * @param from the from value to set.
     * @return the OptOutRequest object itself.
     */
    @Generated
    public OptOutRequest setFrom(String from) {
        this.from = from;
        return this;
    }

    /**
     * Get the recipients property: The recipients property.
     * 
     * @return the recipients value.
     */
    @Generated
    public List<OptOutRecipient> getRecipients() {
        return this.recipients;
    }

    /**
     * Set the recipients property: The recipients property.
     * 
     * @param recipients the recipients value to set.
     * @return the OptOutRequest object itself.
     */
    @Generated
    public OptOutRequest setRecipients(List<OptOutRecipient> recipients) {
        this.recipients = recipients;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("from", this.from);
        jsonWriter.writeArrayField("recipients", this.recipients, (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of OptOutRequest from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of OptOutRequest if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the OptOutRequest.
     */
    @Generated
    public static OptOutRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            OptOutRequest deserializedOptOutRequest = new OptOutRequest();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("from".equals(fieldName)) {
                    deserializedOptOutRequest.from = reader.getString();
                } else if ("recipients".equals(fieldName)) {
                    List<OptOutRecipient> recipients = reader.readArray(reader1 -> OptOutRecipient.fromJson(reader1));
                    deserializedOptOutRequest.recipients = recipients;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedOptOutRequest;
        });
    }
}
