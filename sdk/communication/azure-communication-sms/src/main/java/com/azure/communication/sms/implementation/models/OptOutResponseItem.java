// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.communication.sms.implementation.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The OptOutResponseItem model.
 */
@Fluent
public final class OptOutResponseItem implements JsonSerializable<OptOutResponseItem> {
    /*
     * The recipient phone number (in E.164 format).
     */
    @Generated
    private String to;

    /*
     * The httpStatusCode property.
     */
    @Generated
    private int httpStatusCode;

    /*
     * Optional flag specifying if number was Opted Out from receiving messages
     */
    @Generated
    private Boolean isOptedOut;

    /*
     * Optional error message in case of 4xx/5xx errors.
     */
    @Generated
    private String errorMessage;

    /**
     * Creates an instance of OptOutResponseItem class.
     */
    @Generated
    public OptOutResponseItem() {
    }

    /**
     * Get the to property: The recipient phone number (in E.164 format).
     * 
     * @return the to value.
     */
    @Generated
    public String getTo() {
        return this.to;
    }

    /**
     * Set the to property: The recipient phone number (in E.164 format).
     * 
     * @param to the to value to set.
     * @return the OptOutResponseItem object itself.
     */
    @Generated
    public OptOutResponseItem setTo(String to) {
        this.to = to;
        return this;
    }

    /**
     * Get the httpStatusCode property: The httpStatusCode property.
     * 
     * @return the httpStatusCode value.
     */
    @Generated
    public int getHttpStatusCode() {
        return this.httpStatusCode;
    }

    /**
     * Set the httpStatusCode property: The httpStatusCode property.
     * 
     * @param httpStatusCode the httpStatusCode value to set.
     * @return the OptOutResponseItem object itself.
     */
    @Generated
    public OptOutResponseItem setHttpStatusCode(int httpStatusCode) {
        this.httpStatusCode = httpStatusCode;
        return this;
    }

    /**
     * Get the isOptedOut property: Optional flag specifying if number was Opted Out from receiving messages.
     * 
     * @return the isOptedOut value.
     */
    @Generated
    public Boolean isOptedOut() {
        return this.isOptedOut;
    }

    /**
     * Set the isOptedOut property: Optional flag specifying if number was Opted Out from receiving messages.
     * 
     * @param isOptedOut the isOptedOut value to set.
     * @return the OptOutResponseItem object itself.
     */
    @Generated
    public OptOutResponseItem setIsOptedOut(Boolean isOptedOut) {
        this.isOptedOut = isOptedOut;
        return this;
    }

    /**
     * Get the errorMessage property: Optional error message in case of 4xx/5xx errors.
     * 
     * @return the errorMessage value.
     */
    @Generated
    public String getErrorMessage() {
        return this.errorMessage;
    }

    /**
     * Set the errorMessage property: Optional error message in case of 4xx/5xx errors.
     * 
     * @param errorMessage the errorMessage value to set.
     * @return the OptOutResponseItem object itself.
     */
    @Generated
    public OptOutResponseItem setErrorMessage(String errorMessage) {
        this.errorMessage = errorMessage;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("to", this.to);
        jsonWriter.writeIntField("httpStatusCode", this.httpStatusCode);
        jsonWriter.writeBooleanField("isOptedOut", this.isOptedOut);
        jsonWriter.writeStringField("errorMessage", this.errorMessage);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of OptOutResponseItem from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of OptOutResponseItem if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the OptOutResponseItem.
     */
    @Generated
    public static OptOutResponseItem fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            OptOutResponseItem deserializedOptOutResponseItem = new OptOutResponseItem();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("to".equals(fieldName)) {
                    deserializedOptOutResponseItem.to = reader.getString();
                } else if ("httpStatusCode".equals(fieldName)) {
                    deserializedOptOutResponseItem.httpStatusCode = reader.getInt();
                } else if ("isOptedOut".equals(fieldName)) {
                    deserializedOptOutResponseItem.isOptedOut = reader.getNullable(JsonReader::getBoolean);
                } else if ("errorMessage".equals(fieldName)) {
                    deserializedOptOutResponseItem.errorMessage = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedOptOutResponseItem;
        });
    }
}
