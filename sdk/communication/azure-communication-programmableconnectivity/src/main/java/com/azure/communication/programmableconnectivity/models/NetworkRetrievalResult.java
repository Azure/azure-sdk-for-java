// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.communication.programmableconnectivity.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The network that the device is on.
 */
@Immutable
public final class NetworkRetrievalResult implements JsonSerializable<NetworkRetrievalResult> {
    /*
     * The identifier for the network. This can be used as the networkIdentifier for the service APIs.
     */
    @Generated
    private final String networkCode;

    /**
     * Creates an instance of NetworkRetrievalResult class.
     * 
     * @param networkCode the networkCode value to set.
     */
    @Generated
    private NetworkRetrievalResult(String networkCode) {
        this.networkCode = networkCode;
    }

    /**
     * Get the networkCode property: The identifier for the network. This can be used as the networkIdentifier for the
     * service APIs.
     * 
     * @return the networkCode value.
     */
    @Generated
    public String getNetworkCode() {
        return this.networkCode;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("networkCode", this.networkCode);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of NetworkRetrievalResult from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of NetworkRetrievalResult if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the NetworkRetrievalResult.
     */
    @Generated
    public static NetworkRetrievalResult fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String networkCode = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("networkCode".equals(fieldName)) {
                    networkCode = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            return new NetworkRetrievalResult(networkCode);
        });
    }
}
