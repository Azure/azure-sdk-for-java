// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.communication.programmableconnectivity.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Request to retrieve SimSwap date.
 */
@Fluent
public final class SimSwapRetrievalContent implements JsonSerializable<SimSwapRetrievalContent> {
    /*
     * Phone number in E.164 format (starting with country code), and optionally prefixed with '+'
     */
    @Generated
    private String phoneNumber;

    /*
     * Network to query for this device
     */
    @Generated
    private final NetworkIdentifier networkIdentifier;

    /**
     * Creates an instance of SimSwapRetrievalContent class.
     * 
     * @param networkIdentifier the networkIdentifier value to set.
     */
    @Generated
    public SimSwapRetrievalContent(NetworkIdentifier networkIdentifier) {
        this.networkIdentifier = networkIdentifier;
    }

    /**
     * Get the phoneNumber property: Phone number in E.164 format (starting with country code), and optionally prefixed
     * with '+'.
     * 
     * @return the phoneNumber value.
     */
    @Generated
    public String getPhoneNumber() {
        return this.phoneNumber;
    }

    /**
     * Set the phoneNumber property: Phone number in E.164 format (starting with country code), and optionally prefixed
     * with '+'.
     * 
     * @param phoneNumber the phoneNumber value to set.
     * @return the SimSwapRetrievalContent object itself.
     */
    @Generated
    public SimSwapRetrievalContent setPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
        return this;
    }

    /**
     * Get the networkIdentifier property: Network to query for this device.
     * 
     * @return the networkIdentifier value.
     */
    @Generated
    public NetworkIdentifier getNetworkIdentifier() {
        return this.networkIdentifier;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("networkIdentifier", this.networkIdentifier);
        jsonWriter.writeStringField("phoneNumber", this.phoneNumber);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SimSwapRetrievalContent from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SimSwapRetrievalContent if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the SimSwapRetrievalContent.
     */
    @Generated
    public static SimSwapRetrievalContent fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            NetworkIdentifier networkIdentifier = null;
            String phoneNumber = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("networkIdentifier".equals(fieldName)) {
                    networkIdentifier = NetworkIdentifier.fromJson(reader);
                } else if ("phoneNumber".equals(fieldName)) {
                    phoneNumber = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            SimSwapRetrievalContent deserializedSimSwapRetrievalContent
                = new SimSwapRetrievalContent(networkIdentifier);
            deserializedSimSwapRetrievalContent.phoneNumber = phoneNumber;

            return deserializedSimSwapRetrievalContent;
        });
    }
}
