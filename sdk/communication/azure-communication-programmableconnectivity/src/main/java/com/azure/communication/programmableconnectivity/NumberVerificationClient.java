// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.communication.programmableconnectivity;

import com.azure.communication.programmableconnectivity.implementation.NumberVerificationsImpl;
import com.azure.communication.programmableconnectivity.models.NumberVerificationResult;
import com.azure.communication.programmableconnectivity.models.NumberVerificationWithCodeContent;
import com.azure.communication.programmableconnectivity.models.NumberVerificationWithoutCodeContent;
import com.azure.core.annotation.Generated;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;

/**
 * Initializes a new instance of the synchronous ProgrammableConnectivityClient type.
 */
@ServiceClient(builder = ProgrammableConnectivityClientBuilder.class)
public final class NumberVerificationClient {
    @Generated
    private final NumberVerificationsImpl serviceClient;

    /**
     * Initializes an instance of NumberVerificationClient class.
     * 
     * @param serviceClient the service client implementation.
     */
    @Generated
    NumberVerificationClient(NumberVerificationsImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * Verifies the phone number (MSISDN) associated with a device. As part of the frontend authorization flow, the
     * device is redirected to the operator network to authenticate directly.
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     networkIdentifier (Required): {
     *         identifierType: String (Required)
     *         identifier: String (Required)
     *     }
     *     phoneNumber: String (Optional)
     *     hashedPhoneNumber: String (Optional)
     *     redirectUri: String (Required)
     * }
     * }
     * </pre>
     * 
     * @param apcGatewayId The identifier of the APC Gateway resource which should handle this request.
     * @param body Body parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<Void> verifyWithoutCodeWithResponse(String apcGatewayId, BinaryData body,
        RequestOptions requestOptions) {
        return this.serviceClient.verifyWithoutCodeWithResponse(apcGatewayId, body, requestOptions);
    }

    /**
     * Verifies the phone number (MSISDN) associated with a device.
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     apcCode: String (Required)
     * }
     * }
     * </pre>
     * 
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     verificationResult: boolean (Required)
     * }
     * }
     * </pre>
     * 
     * @param apcGatewayId The identifier of the APC Gateway resource which should handle this request.
     * @param body Body parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return response verifying number of device along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> verifyWithCodeWithResponse(String apcGatewayId, BinaryData body,
        RequestOptions requestOptions) {
        return this.serviceClient.verifyWithCodeWithResponse(apcGatewayId, body, requestOptions);
    }

    /**
     * Verifies the phone number (MSISDN) associated with a device. As part of the frontend authorization flow, the
     * device is redirected to the operator network to authenticate directly.
     * 
     * @param apcGatewayId The identifier of the APC Gateway resource which should handle this request.
     * @param body Body parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public void verifyWithoutCode(String apcGatewayId, NumberVerificationWithoutCodeContent body) {
        // Generated convenience method for verifyWithoutCodeWithResponse
        RequestOptions requestOptions = new RequestOptions();
        verifyWithoutCodeWithResponse(apcGatewayId, BinaryData.fromObject(body), requestOptions).getValue();
    }

    /**
     * Verifies the phone number (MSISDN) associated with a device.
     * 
     * @param apcGatewayId The identifier of the APC Gateway resource which should handle this request.
     * @param body Body parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response verifying number of device.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public NumberVerificationResult verifyWithCode(String apcGatewayId, NumberVerificationWithCodeContent body) {
        // Generated convenience method for verifyWithCodeWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return verifyWithCodeWithResponse(apcGatewayId, BinaryData.fromObject(body), requestOptions).getValue()
            .toObject(NumberVerificationResult.class);
    }
}
