// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.communication.programmableconnectivity.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Response verifying number of device.
 */
@Immutable
public final class NumberVerificationResult implements JsonSerializable<NumberVerificationResult> {
    /*
     * True if number if the phone number matches the device, False otherwise
     */
    @Generated
    private final boolean verificationResult;

    /**
     * Creates an instance of NumberVerificationResult class.
     * 
     * @param verificationResult the verificationResult value to set.
     */
    @Generated
    private NumberVerificationResult(boolean verificationResult) {
        this.verificationResult = verificationResult;
    }

    /**
     * Get the verificationResult property: True if number if the phone number matches the device, False otherwise.
     * 
     * @return the verificationResult value.
     */
    @Generated
    public boolean isVerificationResult() {
        return this.verificationResult;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("verificationResult", this.verificationResult);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of NumberVerificationResult from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of NumberVerificationResult if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the NumberVerificationResult.
     */
    @Generated
    public static NumberVerificationResult fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            boolean verificationResult = false;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("verificationResult".equals(fieldName)) {
                    verificationResult = reader.getBoolean();
                } else {
                    reader.skipChildren();
                }
            }
            return new NumberVerificationResult(verificationResult);
        });
    }
}
