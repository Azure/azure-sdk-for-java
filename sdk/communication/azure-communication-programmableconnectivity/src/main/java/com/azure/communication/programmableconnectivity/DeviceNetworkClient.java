// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.communication.programmableconnectivity;

import com.azure.communication.programmableconnectivity.implementation.DeviceNetworksImpl;
import com.azure.communication.programmableconnectivity.models.NetworkIdentifier;
import com.azure.communication.programmableconnectivity.models.NetworkRetrievalResult;
import com.azure.core.annotation.Generated;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;

/**
 * Initializes a new instance of the synchronous ProgrammableConnectivityClient type.
 */
@ServiceClient(builder = ProgrammableConnectivityClientBuilder.class)
public final class DeviceNetworkClient {
    @Generated
    private final DeviceNetworksImpl serviceClient;

    /**
     * Initializes an instance of DeviceNetworkClient class.
     * 
     * @param serviceClient the service client implementation.
     */
    @Generated
    DeviceNetworkClient(DeviceNetworksImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * Retrieves the network a given device is on. Returns network in a networkCode format that can be used for other
     * APIs.
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     identifierType: String (Required)
     *     identifier: String (Required)
     * }
     * }
     * </pre>
     * 
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     networkCode: String (Required)
     * }
     * }
     * </pre>
     * 
     * @param apcGatewayId The identifier of the APC Gateway resource which should handle this request.
     * @param body Body parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the network that the device is on along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> retrieveWithResponse(String apcGatewayId, BinaryData body,
        RequestOptions requestOptions) {
        return this.serviceClient.retrieveWithResponse(apcGatewayId, body, requestOptions);
    }

    /**
     * Retrieves the network a given device is on. Returns network in a networkCode format that can be used for other
     * APIs.
     * 
     * @param apcGatewayId The identifier of the APC Gateway resource which should handle this request.
     * @param body Body parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the network that the device is on.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public NetworkRetrievalResult retrieve(String apcGatewayId, NetworkIdentifier body) {
        // Generated convenience method for retrieveWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return retrieveWithResponse(apcGatewayId, BinaryData.fromObject(body), requestOptions).getValue()
            .toObject(NetworkRetrievalResult.class);
    }
}
