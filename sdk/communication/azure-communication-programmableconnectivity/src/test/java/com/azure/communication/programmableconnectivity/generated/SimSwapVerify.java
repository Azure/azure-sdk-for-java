// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.communication.programmableconnectivity.generated;

import com.azure.communication.programmableconnectivity.ProgrammableConnectivityClientBuilder;
import com.azure.communication.programmableconnectivity.SimSwapClient;
import com.azure.communication.programmableconnectivity.models.NetworkIdentifier;
import com.azure.communication.programmableconnectivity.models.SimSwapVerificationContent;
import com.azure.communication.programmableconnectivity.models.SimSwapVerificationResult;
import com.azure.core.util.Configuration;
import com.azure.identity.AzurePowerShellCredentialBuilder;

//import com.azure.identity.DefaultAzureCredentialBuilder;
//import com.azure.identity.AzurePowerShellCredential;

/*public class SimSwapVerify {
    public static void main(String[] args) {
        SimSwapClient simSwapClient
            = new ProgrammableConnectivityClientBuilder().credential(new DefaultAzureCredentialBuilder().build())
                .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT"))
                .buildSimSwapClient();
         BEGIN:com.azure.communication.programmableconnectivity.generated.simswapverify.simswapverify
        SimSwapVerificationResult response = simSwapClient.verify("zdgrzzaxlodrvewbksn",
            new SimSwapVerificationContent(new NetworkIdentifier("ipv4", "12.12.12.12")).setMaxAgeHours(941));
         END:com.azure.communication.programmableconnectivity.generated.simswapverify.simswapverify
    }
}*/

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

public class SimSwapVerify {
    public static void main(String[] args) {
        System.out.println("Starting SimSwap verification...");
        System.out.println("Using endpoint: " + Configuration.getGlobalConfiguration().get("ENDPOINT"));

        try {
            // Use PowerShell credential directly instead of DefaultAzureCredential
            SimSwapClient simSwapClient
                = new ProgrammableConnectivityClientBuilder().credential(new AzurePowerShellCredentialBuilder().build())
                    .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT"))
                    .buildSimSwapClient();

            System.out.println("Client created successfully. Sending request...");

            // BEGIN:com.azure.communication.programmableconnectivity.generated.simswapverify.simswapverify
            SimSwapVerificationResult response = simSwapClient.verify(
                "/subscriptions/28269522-1d13-498d-92e9-23c999c3c997/resourceGroups/gteixeira-orange-testing2/providers/Private.programmableconnectivity/gateways/gateway-uksouth-2505201109",
                new SimSwapVerificationContent(new NetworkIdentifier("NetworkCode", "E2E_Test_Operator_Contoso"))
                    .setPhoneNumber("10000100")
                    .setMaxAgeHours(941));
            // END:com.azure.communication.programmableconnectivity.generated.simswapverify.simswapverify

            System.out.println("Request succeeded!");
            System.out.println("Verification result: " + response.isVerificationResult());

        } catch (Exception e) {
            System.err.println("Error executing SimSwap verification:");
            System.err.println("Error message: " + e.getMessage());
            e.printStackTrace();
        } finally {
            // For test code, simply exit to terminate all threads
            System.out.println("Test completed. Shutting down...");
            System.exit(0);
        }
    }
}
