// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.communication.programmableconnectivity.generated;

import com.azure.communication.programmableconnectivity.models.NetworkIdentifier;
import com.azure.communication.programmableconnectivity.models.SimSwapVerificationContent;
import com.azure.communication.programmableconnectivity.models.SimSwapVerificationResult;
import com.azure.core.test.models.TestProxySanitizer;
import com.azure.core.test.models.TestProxySanitizerType;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import java.util.Arrays;

public final class SimSwapVerifyTests extends ProgrammableConnectivityClientTestBase {

    @Override
    protected void beforeTest() {
        // Call the parent method to set up the client
        super.beforeTest();

        // Add sanitizers for sensitive information in recordings
        if (!interceptorManager.isLiveMode()) {
            interceptorManager.addSanitizers(Arrays.asList(
                new TestProxySanitizer("/subscriptions/[^/]+/", "/subscriptions/sanitized-subscription-id/",
                    TestProxySanitizerType.URL),
                new TestProxySanitizer("/resourceGroups/[^/]+/", "/resourceGroups/sanitized-resource-group/",
                    TestProxySanitizerType.URL),
                new TestProxySanitizer("/gateways/[^/\\s]+", "/gateways/sanitized-gateway", TestProxySanitizerType.URL),
                new TestProxySanitizer("$..phoneNumber", null, "sanitized-phone-number",
                    TestProxySanitizerType.BODY_KEY)));
        }
    }

    @Test
    public void testSimSwapVerify() {
        // Use actual gateway ID for your test environment
        String gatewayId
            = "/subscriptions/28269522-1d13-498d-92e9-23c999c3c997/resourceGroups/gteixeira-orange-testing2/providers/Private.programmableconnectivity/gateways/gateway-uksouth-2505201109";

        // Use Network Code instead of IPv4 as seen in your recent tests
        NetworkIdentifier networkId = new NetworkIdentifier("NetworkCode", "E2E_Test_Operator_Contoso");

        // Add a phone number - useful for API behavior
        SimSwapVerificationContent verificationContent
            = new SimSwapVerificationContent(networkId).setPhoneNumber("10000100").setMaxAgeHours(941);

        // Add some logging for debugging
        System.out.println("Starting SimSwap verification test...");
        System.out.println("Using gateway ID: " + gatewayId);
        System.out.println("Using network identifier type: " + networkId.getIdentifierType());
        System.out.println("Using network identifier: " + networkId.getIdentifier());

        // Execute the API call
        SimSwapVerificationResult response = simSwapClient.verify(gatewayId, verificationContent);

        // Basic validation
        Assertions.assertNotNull(response, "Response should not be null");

        // Log the result
        System.out.println("Verification result: " + response.isVerificationResult());

        // Verify the result is a boolean (either true or false is acceptable for the test)
        // We don't know what the expected result will be for test data, so just check the type
        boolean result = response.isVerificationResult();
        System.out.println("Test completed successfully.");
    }
}
