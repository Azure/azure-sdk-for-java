// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.communication.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.communication.models.ProvisioningState;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** A class representing a CommunicationService resource. */
@Fluent
public final class CommunicationServiceResourceInner extends ProxyResource {
    /*
     * The properties of the service.
     */
    @JsonProperty(value = "properties")
    private CommunicationServiceProperties innerProperties;

    /*
     * Metadata pertaining to creation and last modification of the resource.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /*
     * The Azure location where the CommunicationService is running.
     */
    @JsonProperty(value = "location")
    private String location;

    /*
     * Tags of the service which is a list of key value pairs that describe the
     * resource.
     */
    @JsonProperty(value = "tags")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> tags;

    /**
     * Get the innerProperties property: The properties of the service.
     *
     * @return the innerProperties value.
     */
    private CommunicationServiceProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Metadata pertaining to creation and last modification of the resource.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the location property: The Azure location where the CommunicationService is running.
     *
     * @return the location value.
     */
    public String location() {
        return this.location;
    }

    /**
     * Set the location property: The Azure location where the CommunicationService is running.
     *
     * @param location the location value to set.
     * @return the CommunicationServiceResourceInner object itself.
     */
    public CommunicationServiceResourceInner withLocation(String location) {
        this.location = location;
        return this;
    }

    /**
     * Get the tags property: Tags of the service which is a list of key value pairs that describe the resource.
     *
     * @return the tags value.
     */
    public Map<String, String> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: Tags of the service which is a list of key value pairs that describe the resource.
     *
     * @param tags the tags value to set.
     * @return the CommunicationServiceResourceInner object itself.
     */
    public CommunicationServiceResourceInner withTags(Map<String, String> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get the provisioningState property: Provisioning state of the resource.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Get the hostname property: FQDN of the CommunicationService instance.
     *
     * @return the hostname value.
     */
    public String hostname() {
        return this.innerProperties() == null ? null : this.innerProperties().hostname();
    }

    /**
     * Get the dataLocation property: The location where the communication service stores its data at rest.
     *
     * @return the dataLocation value.
     */
    public String dataLocation() {
        return this.innerProperties() == null ? null : this.innerProperties().dataLocation();
    }

    /**
     * Set the dataLocation property: The location where the communication service stores its data at rest.
     *
     * @param dataLocation the dataLocation value to set.
     * @return the CommunicationServiceResourceInner object itself.
     */
    public CommunicationServiceResourceInner withDataLocation(String dataLocation) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CommunicationServiceProperties();
        }
        this.innerProperties().withDataLocation(dataLocation);
        return this;
    }

    /**
     * Get the notificationHubId property: Resource ID of an Azure Notification Hub linked to this resource.
     *
     * @return the notificationHubId value.
     */
    public String notificationHubId() {
        return this.innerProperties() == null ? null : this.innerProperties().notificationHubId();
    }

    /**
     * Get the version property: Version of the CommunicationService resource. Probably you need the same or higher
     * version of client SDKs.
     *
     * @return the version value.
     */
    public String version() {
        return this.innerProperties() == null ? null : this.innerProperties().version();
    }

    /**
     * Get the immutableResourceId property: The immutable resource Id of the communication service.
     *
     * @return the immutableResourceId value.
     */
    public String immutableResourceId() {
        return this.innerProperties() == null ? null : this.innerProperties().immutableResourceId();
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
