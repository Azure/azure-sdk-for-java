// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.communication.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * A class representing the access keys of a CommunicationService.
 */
@Fluent
public final class CommunicationServiceKeysInner implements JsonSerializable<CommunicationServiceKeysInner> {
    /*
     * The primary access key.
     */
    private String primaryKey;

    /*
     * The secondary access key.
     */
    private String secondaryKey;

    /*
     * CommunicationService connection string constructed via the primaryKey
     */
    private String primaryConnectionString;

    /*
     * CommunicationService connection string constructed via the secondaryKey
     */
    private String secondaryConnectionString;

    /**
     * Creates an instance of CommunicationServiceKeysInner class.
     */
    public CommunicationServiceKeysInner() {
    }

    /**
     * Get the primaryKey property: The primary access key.
     * 
     * @return the primaryKey value.
     */
    public String primaryKey() {
        return this.primaryKey;
    }

    /**
     * Set the primaryKey property: The primary access key.
     * 
     * @param primaryKey the primaryKey value to set.
     * @return the CommunicationServiceKeysInner object itself.
     */
    public CommunicationServiceKeysInner withPrimaryKey(String primaryKey) {
        this.primaryKey = primaryKey;
        return this;
    }

    /**
     * Get the secondaryKey property: The secondary access key.
     * 
     * @return the secondaryKey value.
     */
    public String secondaryKey() {
        return this.secondaryKey;
    }

    /**
     * Set the secondaryKey property: The secondary access key.
     * 
     * @param secondaryKey the secondaryKey value to set.
     * @return the CommunicationServiceKeysInner object itself.
     */
    public CommunicationServiceKeysInner withSecondaryKey(String secondaryKey) {
        this.secondaryKey = secondaryKey;
        return this;
    }

    /**
     * Get the primaryConnectionString property: CommunicationService connection string constructed via the primaryKey.
     * 
     * @return the primaryConnectionString value.
     */
    public String primaryConnectionString() {
        return this.primaryConnectionString;
    }

    /**
     * Set the primaryConnectionString property: CommunicationService connection string constructed via the primaryKey.
     * 
     * @param primaryConnectionString the primaryConnectionString value to set.
     * @return the CommunicationServiceKeysInner object itself.
     */
    public CommunicationServiceKeysInner withPrimaryConnectionString(String primaryConnectionString) {
        this.primaryConnectionString = primaryConnectionString;
        return this;
    }

    /**
     * Get the secondaryConnectionString property: CommunicationService connection string constructed via the
     * secondaryKey.
     * 
     * @return the secondaryConnectionString value.
     */
    public String secondaryConnectionString() {
        return this.secondaryConnectionString;
    }

    /**
     * Set the secondaryConnectionString property: CommunicationService connection string constructed via the
     * secondaryKey.
     * 
     * @param secondaryConnectionString the secondaryConnectionString value to set.
     * @return the CommunicationServiceKeysInner object itself.
     */
    public CommunicationServiceKeysInner withSecondaryConnectionString(String secondaryConnectionString) {
        this.secondaryConnectionString = secondaryConnectionString;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("primaryKey", this.primaryKey);
        jsonWriter.writeStringField("secondaryKey", this.secondaryKey);
        jsonWriter.writeStringField("primaryConnectionString", this.primaryConnectionString);
        jsonWriter.writeStringField("secondaryConnectionString", this.secondaryConnectionString);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CommunicationServiceKeysInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CommunicationServiceKeysInner if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the CommunicationServiceKeysInner.
     */
    public static CommunicationServiceKeysInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CommunicationServiceKeysInner deserializedCommunicationServiceKeysInner
                = new CommunicationServiceKeysInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("primaryKey".equals(fieldName)) {
                    deserializedCommunicationServiceKeysInner.primaryKey = reader.getString();
                } else if ("secondaryKey".equals(fieldName)) {
                    deserializedCommunicationServiceKeysInner.secondaryKey = reader.getString();
                } else if ("primaryConnectionString".equals(fieldName)) {
                    deserializedCommunicationServiceKeysInner.primaryConnectionString = reader.getString();
                } else if ("secondaryConnectionString".equals(fieldName)) {
                    deserializedCommunicationServiceKeysInner.secondaryConnectionString = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCommunicationServiceKeysInner;
        });
    }
}
