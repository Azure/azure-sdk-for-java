// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.communication.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * A class that describes the properties that can be updated for CommunicationService resource.
 */
@Fluent
public final class CommunicationServiceUpdateProperties
    implements JsonSerializable<CommunicationServiceUpdateProperties> {
    /*
     * List of email Domain resource Ids.
     */
    private List<String> linkedDomains;

    /**
     * Creates an instance of CommunicationServiceUpdateProperties class.
     */
    public CommunicationServiceUpdateProperties() {
    }

    /**
     * Get the linkedDomains property: List of email Domain resource Ids.
     * 
     * @return the linkedDomains value.
     */
    public List<String> linkedDomains() {
        return this.linkedDomains;
    }

    /**
     * Set the linkedDomains property: List of email Domain resource Ids.
     * 
     * @param linkedDomains the linkedDomains value to set.
     * @return the CommunicationServiceUpdateProperties object itself.
     */
    public CommunicationServiceUpdateProperties withLinkedDomains(List<String> linkedDomains) {
        this.linkedDomains = linkedDomains;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("linkedDomains", this.linkedDomains,
            (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CommunicationServiceUpdateProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CommunicationServiceUpdateProperties if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the CommunicationServiceUpdateProperties.
     */
    public static CommunicationServiceUpdateProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CommunicationServiceUpdateProperties deserializedCommunicationServiceUpdateProperties
                = new CommunicationServiceUpdateProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("linkedDomains".equals(fieldName)) {
                    List<String> linkedDomains = reader.readArray(reader1 -> reader1.getString());
                    deserializedCommunicationServiceUpdateProperties.linkedDomains = linkedDomains;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCommunicationServiceUpdateProperties;
        });
    }
}
