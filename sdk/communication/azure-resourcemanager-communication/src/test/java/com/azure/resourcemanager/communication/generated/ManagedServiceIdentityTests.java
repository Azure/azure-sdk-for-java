// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.communication.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.communication.models.ManagedServiceIdentity;
import com.azure.resourcemanager.communication.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.communication.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ManagedServiceIdentityTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ManagedServiceIdentity model =
            BinaryData
                .fromString(
                    "{\"principalId\":\"d9480628-4fbf-498a-b769-42d157194656\",\"tenantId\":\"e297a5af-2ac5-47fa-b0f3-7dd597725a67\",\"type\":\"None\",\"userAssignedIdentities\":{\"txilnerkujy\":{\"principalId\":\"ae555323-aa31-47a3-9486-817a39c19632\",\"clientId\":\"15f3901a-6b66-459d-98e4-b2bd0a243d47\"},\"eju\":{\"principalId\":\"33cab526-be42-4fe0-b133-6deb34a31890\",\"clientId\":\"d7ccfc61-418a-4823-a9e1-9a05e5e37c6a\"},\"awrlyx\":{\"principalId\":\"00cd18cb-5bac-4bad-9c6b-665993571638\",\"clientId\":\"289f9391-0fbd-4c9c-94b0-c81f1482fb72\"},\"cpr\":{\"principalId\":\"0538de1b-21d9-43c6-9ede-df0b2199ece8\",\"clientId\":\"96914923-6ad5-42f0-8007-5541d5f8e917\"}}}")
                .toObject(ManagedServiceIdentity.class);
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ManagedServiceIdentity model =
            new ManagedServiceIdentity()
                .withType(ManagedServiceIdentityType.NONE)
                .withUserAssignedIdentities(
                    mapOf(
                        "txilnerkujy",
                        new UserAssignedIdentity(),
                        "eju",
                        new UserAssignedIdentity(),
                        "awrlyx",
                        new UserAssignedIdentity(),
                        "cpr",
                        new UserAssignedIdentity()));
        model = BinaryData.fromObject(model).toObject(ManagedServiceIdentity.class);
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.type());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
