// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.communication.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.communication.fluent.models.DomainResourceInner;
import com.azure.resourcemanager.communication.models.DomainManagement;
import com.azure.resourcemanager.communication.models.UserEngagementTracking;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class DomainResourceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DomainResourceInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"provisioningState\":\"Running\",\"dataLocation\":\"l\",\"fromSenderDomain\":\"uvfqawrlyxwj\",\"mailFromSenderDomain\":\"prbnwbxgjvtbv\",\"domainManagement\":\"AzureManaged\",\"verificationStates\":{},\"verificationRecords\":{},\"userEngagementTracking\":\"Disabled\"},\"location\":\"uqfprwzw\",\"tags\":{\"a\":\"uitnwuiz\"},\"id\":\"x\",\"name\":\"fizuckyf\",\"type\":\"hr\"}")
                .toObject(DomainResourceInner.class);
        Assertions.assertEquals("uqfprwzw", model.location());
        Assertions.assertEquals("uitnwuiz", model.tags().get("a"));
        Assertions.assertEquals(DomainManagement.AZURE_MANAGED, model.domainManagement());
        Assertions.assertEquals(UserEngagementTracking.DISABLED, model.userEngagementTracking());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DomainResourceInner model =
            new DomainResourceInner()
                .withLocation("uqfprwzw")
                .withTags(mapOf("a", "uitnwuiz"))
                .withDomainManagement(DomainManagement.AZURE_MANAGED)
                .withUserEngagementTracking(UserEngagementTracking.DISABLED);
        model = BinaryData.fromObject(model).toObject(DomainResourceInner.class);
        Assertions.assertEquals("uqfprwzw", model.location());
        Assertions.assertEquals("uitnwuiz", model.tags().get("a"));
        Assertions.assertEquals(DomainManagement.AZURE_MANAGED, model.domainManagement());
        Assertions.assertEquals(UserEngagementTracking.DISABLED, model.userEngagementTracking());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
