// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.communication.email.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** Message payload for sending an email. */
@Fluent
public final class EmailMessage {
    /*
     * Custom email headers to be passed.
     */
    @JsonProperty(value = "headers")
    private Map<String, String> headers;

    /*
     * Sender email address from a verified domain.
     */
    @JsonProperty(value = "senderEmail", required = true)
    private String senderEmail;

    /*
     * Email content to be sent.
     */
    @JsonProperty(value = "content", required = true)
    private EmailContent content;

    /*
     * Recipients for the email.
     */
    @JsonProperty(value = "recipients", required = true)
    private EmailRecipients recipients;

    /*
     * List of attachments. Please note that we limit the total size of an
     * email request (which includes attachments) to 10MB.
     */
    @JsonProperty(value = "attachments")
    private Iterable<EmailAttachment> attachments;

    /*
     * Email addresses where recipients' replies will be sent to.
     */
    @JsonProperty(value = "replyTo")
    private Iterable<EmailAddress> replyTo;

    /*
     * Indicates whether user engagement tracking should be disabled for this
     * request if the resource-level user engagement tracking setting was
     * already enabled in the control plane.
     */
    @JsonProperty(value = "disableUserEngagementTracking")
    private Boolean disableUserEngagementTracking;

    /**
     * Constructor for EmailMessage
     * @param senderEmail the sender email address from a verified domain
     * @param content the email content to be sent
     * @param recipients the recipients for the email
     */
    public EmailMessage(String senderEmail, EmailContent content, EmailRecipients recipients) {
        this.senderEmail = senderEmail;
        this.content = content;
        this.recipients = recipients;
    }

    /**
     * Get the headers property: Custom email headers to be passed.
     *
     * @return the headers value.
     */
    public Map<String, String> getHeaders() {
        return this.headers;
    }

    /**
     * Set the headers property: Custom email headers to be passed.
     *
     * @param headers the headers value to set.
     * @return the EmailMessage object itself.
     */
    public EmailMessage setHeaders(Map<String, String> headers) {
        this.headers = headers;
        return this;
    }

    /**
     * Get the senderEmail property: Sender email address from a verified domain.
     *
     * @return the senderEmail value.
     */
    public String getSenderEmail() {
        return this.senderEmail;
    }

    /**
     * Get the content property: Email content to be sent.
     *
     * @return the content value.
     */
    public EmailContent getContent() {
        return this.content;
    }

    /**
     * Get the recipients property: Recipients for the email.
     *
     * @return the recipients value.
     */
    public EmailRecipients getRecipients() {
        return this.recipients;
    }

    /**
     * Get the attachments property: List of attachments. Please note that we limit the total size of an email request
     * (which includes attachments) to 10MB.
     *
     * @return the attachments value.
     */
    public Iterable<EmailAttachment> getAttachments() {
        return this.attachments;
    }

    /**
     * Set the attachments property: List of attachments. Please note that we limit the total size of an email request
     * (which includes attachments) to 10MB.
     *
     * @param attachments the attachments value to set.
     * @return the EmailMessage object itself.
     */
    public EmailMessage setAttachments(Iterable<EmailAttachment> attachments) {
        this.attachments = attachments;
        return this;
    }

    /**
     * Get the replyTo property: Email addresses where recipients' replies will be sent to.
     *
     * @return the replyTo value.
     */
    public Iterable<EmailAddress> getReplyTo() {
        return this.replyTo;
    }

    /**
     * Set the replyTo property: Email addresses where recipients' replies will be sent to.
     *
     * @param replyTo the replyTo value to set.
     * @return the EmailMessage object itself.
     */
    public EmailMessage setReplyTo(Iterable<EmailAddress> replyTo) {
        this.replyTo = replyTo;
        return this;
    }

    /**
     * Get the disableUserEngagementTracking property: Indicates whether user engagement tracking should be disabled for
     * this request if the resource-level user engagement tracking setting was already enabled in the control plane.
     *
     * @return the disableUserEngagementTracking value.
     */
    public Boolean isDisableUserEngagementTracking() {
        return this.disableUserEngagementTracking;
    }

    /**
     * Set the disableUserEngagementTracking property: Indicates whether user engagement tracking should be disabled for
     * this request if the resource-level user engagement tracking setting was already enabled in the control plane.
     *
     * @param disableUserEngagementTracking the disableUserEngagementTracking value to set.
     * @return the EmailMessage object itself.
     */
    public EmailMessage setDisableUserEngagementTracking(Boolean disableUserEngagementTracking) {
        this.disableUserEngagementTracking = disableUserEngagementTracking;
        return this;
    }
}
