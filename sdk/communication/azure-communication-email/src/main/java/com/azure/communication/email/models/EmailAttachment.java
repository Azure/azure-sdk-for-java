// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.communication.email.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.BinaryData;
import com.fasterxml.jackson.annotation.JsonProperty;

import java.util.Base64;

/** Attachment to the email. */
@Fluent
public final class EmailAttachment {
    /*
     * Name of the attachment
     */
    @JsonProperty(value = "name", required = true)
    private String name;

    /*
     * MIME type of the content being attached.
     */
    @JsonProperty(value = "type", required = true)
    private String type;

    /*
     * Base64 encoded contents of the attachment
     */
    @JsonProperty(value = "contentBytesBase64", required = true)
    private String contentBytesBase64;

    /**
     * Constructor for EmailAttachment
     * @param name the name of the attachment
     * @param attachmentType the type of attachment file
     * @param content the contents of the attachment
     */
    public EmailAttachment(String name, String attachmentType, BinaryData content) {
        this.name = name;
        this.type = attachmentType;
        this.contentBytesBase64 = Base64.getEncoder().encodeToString(content.toBytes());
    }

    /**
     * Get the name property: Name of the attachment.
     *
     * @return the name value.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Get the type property: MIME type of the content being attached.
     *
     * @return the type value.
     */
    public String getType() {
        return this.type;
    }

    /**
     * Get the contentBytesBase64 property: Base64 encoded contents of the attachment.
     *
     * @return the contentBytesBase64 value.
     */
    public String getContentBytesBase64() {
        return this.contentBytesBase64;
    }
}
