// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.communication.chat.implementation.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Request payload for sending a read receipt.
 */
@Fluent
public final class SendReadReceiptRequest implements JsonSerializable<SendReadReceiptRequest> {
    /*
     * Id of the latest chat message read by the user.
     */
    private String chatMessageId;

    /**
     * Creates an instance of SendReadReceiptRequest class.
     */
    public SendReadReceiptRequest() {
    }

    /**
     * Get the chatMessageId property: Id of the latest chat message read by the user.
     * 
     * @return the chatMessageId value.
     */
    public String getChatMessageId() {
        return this.chatMessageId;
    }

    /**
     * Set the chatMessageId property: Id of the latest chat message read by the user.
     * 
     * @param chatMessageId the chatMessageId value to set.
     * @return the SendReadReceiptRequest object itself.
     */
    public SendReadReceiptRequest setChatMessageId(String chatMessageId) {
        this.chatMessageId = chatMessageId;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("chatMessageId", this.chatMessageId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SendReadReceiptRequest from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SendReadReceiptRequest if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the SendReadReceiptRequest.
     */
    public static SendReadReceiptRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SendReadReceiptRequest deserializedSendReadReceiptRequest = new SendReadReceiptRequest();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("chatMessageId".equals(fieldName)) {
                    deserializedSendReadReceiptRequest.chatMessageId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSendReadReceiptRequest;
        });
    }
}
