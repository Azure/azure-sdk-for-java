// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.communication.callingserver.implementation.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;

import java.io.IOException;

/** The AcsCallParticipantInternal model. */
@Fluent
public final class AcsCallParticipantInternal implements JsonSerializable<AcsCallParticipantInternal> {
    /*
     * Communication identifier of the participant
     */
    private CommunicationIdentifierModel identifier;

    /*
     * Is participant muted
     */
    private Boolean isMuted;

    /**
     * Get the identifier property: Communication identifier of the participant.
     *
     * @return the identifier value.
     */
    public CommunicationIdentifierModel getIdentifier() {
        return this.identifier;
    }

    /**
     * Set the identifier property: Communication identifier of the participant.
     *
     * @param identifier the identifier value to set.
     * @return the AcsCallParticipantInternal object itself.
     */
    public AcsCallParticipantInternal setIdentifier(CommunicationIdentifierModel identifier) {
        this.identifier = identifier;
        return this;
    }

    /**
     * Get the isMuted property: Is participant muted.
     *
     * @return the isMuted value.
     */
    public Boolean isMuted() {
        return this.isMuted;
    }

    /**
     * Set the isMuted property: Is participant muted.
     *
     * @param isMuted the isMuted value to set.
     * @return the AcsCallParticipantInternal object itself.
     */
    public AcsCallParticipantInternal setIsMuted(Boolean isMuted) {
        this.isMuted = isMuted;
        return this;
    }

    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        return jsonWriter.writeStartObject()
            .writeJsonField("identifier", identifier)
            .writeBooleanField("isMuted", isMuted)
            .writeEndObject();
    }

    /**
     * Reads an instance of {@link AcsCallParticipantInternal} from the {@link JsonReader}.
     *
     * @param jsonReader The {@link JsonReader} to read.
     * @return An instance of {@link AcsCallParticipantInternal}, or null if the {@link JsonReader} was pointing to
     * {@link JsonToken#NULL}.
     * @throws IOException If an error occurs while reading the {@link JsonReader}.
     */
    public static AcsCallParticipantInternal fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AcsCallParticipantInternal participant = new AcsCallParticipantInternal();

            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("identifier".equals(fieldName)) {
                    participant.identifier = CommunicationIdentifierModel.fromJson(reader);
                } else if ("isMuted".equals(fieldName)) {
                    participant.isMuted = reader.getNullable(JsonReader::getBoolean);
                } else {
                    reader.skipChildren();
                }
            }

            return participant;
        });
    }
}
