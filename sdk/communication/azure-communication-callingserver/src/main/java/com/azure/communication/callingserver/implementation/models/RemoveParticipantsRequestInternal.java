// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.communication.callingserver.implementation.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;

import java.io.IOException;
import java.util.List;

/** The remove participant by identifier request. */
@Fluent
public final class RemoveParticipantsRequestInternal implements JsonSerializable<RemoveParticipantsRequestInternal> {
    /*
     * The participants to invite.
     */
    private List<CommunicationIdentifierModel> participantsToRemove;

    /*
     * The operation context.
     */
    private String operationContext;

    /**
     * Get the participantsToRemove property: The participants to invite.
     *
     * @return the participantsToRemove value.
     */
    public List<CommunicationIdentifierModel> getParticipantsToRemove() {
        return this.participantsToRemove;
    }

    /**
     * Set the participantsToRemove property: The participants to invite.
     *
     * @param participantsToRemove the participantsToRemove value to set.
     * @return the RemoveParticipantsRequestInternal object itself.
     */
    public RemoveParticipantsRequestInternal setParticipantsToRemove(
            List<CommunicationIdentifierModel> participantsToRemove) {
        this.participantsToRemove = participantsToRemove;
        return this;
    }

    /**
     * Get the operationContext property: The operation context.
     *
     * @return the operationContext value.
     */
    public String getOperationContext() {
        return this.operationContext;
    }

    /**
     * Set the operationContext property: The operation context.
     *
     * @param operationContext the operationContext value to set.
     * @return the RemoveParticipantsRequestInternal object itself.
     */
    public RemoveParticipantsRequestInternal setOperationContext(String operationContext) {
        this.operationContext = operationContext;
        return this;
    }

    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        return jsonWriter.writeStartObject()
            .writeArrayField("participantsToRemove", participantsToRemove, JsonWriter::writeJson)
            .writeStringField("operationContext", operationContext)
            .writeEndObject();
    }

    /**
     * Reads an instance of {@link RemoveParticipantsRequestInternal} from the {@link JsonReader}.
     *
     * @param jsonReader The {@link JsonReader} to read.
     * @return An instance of {@link RemoveParticipantsRequestInternal}, or null if the {@link JsonReader} was pointing
     * to {@link JsonToken#NULL}.
     * @throws IOException If an error occurs while reading the {@link JsonReader}.
     */
    public static RemoveParticipantsRequestInternal fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RemoveParticipantsRequestInternal request = new RemoveParticipantsRequestInternal();

            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("participantsToRemove".equals(fieldName)) {
                    request.participantsToRemove = reader.readArray(CommunicationIdentifierModel::fromJson);
                } else if ("operationContext".equals(fieldName)) {
                    request.operationContext = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return request;
        });
    }
}
