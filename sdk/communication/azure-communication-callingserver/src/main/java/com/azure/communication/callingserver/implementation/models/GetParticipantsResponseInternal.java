// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.communication.callingserver.implementation.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;

import java.io.IOException;
import java.util.List;

/** The GetParticipantsResponseInternal model. */
@Fluent
public final class GetParticipantsResponseInternal implements JsonSerializable<GetParticipantsResponseInternal> {
    /*
     * The values property.
     */
    private List<AcsCallParticipantInternal> values;

    /*
     * The nextLink property.
     */
    private String nextLink;

    /**
     * Get the values property: The values property.
     *
     * @return the values value.
     */
    public List<AcsCallParticipantInternal> getValues() {
        return this.values;
    }

    /**
     * Set the values property: The values property.
     *
     * @param values the values value to set.
     * @return the GetParticipantsResponseInternal object itself.
     */
    public GetParticipantsResponseInternal setValues(List<AcsCallParticipantInternal> values) {
        this.values = values;
        return this;
    }

    /**
     * Get the nextLink property: The nextLink property.
     *
     * @return the nextLink value.
     */
    public String getNextLink() {
        return this.nextLink;
    }

    /**
     * Set the nextLink property: The nextLink property.
     *
     * @param nextLink the nextLink value to set.
     * @return the GetParticipantsResponseInternal object itself.
     */
    public GetParticipantsResponseInternal setNextLink(String nextLink) {
        this.nextLink = nextLink;
        return this;
    }

    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        return jsonWriter.writeStartObject()
            .writeArrayField("values", values, JsonWriter::writeJson)
            .writeStringField("nextLink", nextLink)
            .writeEndObject();
    }

    /**
     * Reads an instance of {@link GetParticipantsResponseInternal} from the {@link JsonReader}.
     *
     * @param jsonReader The {@link JsonReader} to read.
     * @return An instance of {@link GetParticipantsResponseInternal}, or null if the {@link JsonReader} was pointing to
     * {@link JsonToken#NULL}.
     * @throws IOException If an error occurs while reading the {@link JsonReader}.
     */
    public static GetParticipantsResponseInternal fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            GetParticipantsResponseInternal response = new GetParticipantsResponseInternal();

            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("values".equals(fieldName)) {
                    response.values = reader.readArray(AcsCallParticipantInternal::fromJson);
                } else if ("nextLink".equals(fieldName)) {
                    response.nextLink = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return response;
        });
    }
}
