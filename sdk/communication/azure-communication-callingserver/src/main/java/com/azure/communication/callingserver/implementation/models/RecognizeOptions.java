// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.communication.callingserver.implementation.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The RecognizeOptions model.
 */
@Fluent
public final class RecognizeOptions implements JsonSerializable<RecognizeOptions> {
    /*
     * Determines if we interrupt the prompt and start recognizing.
     */
    private Boolean interruptPrompt;

    /*
     * Time to wait for first input after prompt (if any).
     */
    private Integer initialSilenceTimeoutInSeconds;

    /*
     * Target participant of DTMF tone recognition.
     */
    private CommunicationIdentifierModel targetParticipant;

    /*
     * Defines configurations for DTMF.
     */
    private DtmfOptions dtmfOptions;

    /**
     * Creates an instance of RecognizeOptions class.
     */
    public RecognizeOptions() {
    }

    /**
     * Get the interruptPrompt property: Determines if we interrupt the prompt and start recognizing.
     * 
     * @return the interruptPrompt value.
     */
    public Boolean isInterruptPrompt() {
        return this.interruptPrompt;
    }

    /**
     * Set the interruptPrompt property: Determines if we interrupt the prompt and start recognizing.
     * 
     * @param interruptPrompt the interruptPrompt value to set.
     * @return the RecognizeOptions object itself.
     */
    public RecognizeOptions setInterruptPrompt(Boolean interruptPrompt) {
        this.interruptPrompt = interruptPrompt;
        return this;
    }

    /**
     * Get the initialSilenceTimeoutInSeconds property: Time to wait for first input after prompt (if any).
     * 
     * @return the initialSilenceTimeoutInSeconds value.
     */
    public Integer getInitialSilenceTimeoutInSeconds() {
        return this.initialSilenceTimeoutInSeconds;
    }

    /**
     * Set the initialSilenceTimeoutInSeconds property: Time to wait for first input after prompt (if any).
     * 
     * @param initialSilenceTimeoutInSeconds the initialSilenceTimeoutInSeconds value to set.
     * @return the RecognizeOptions object itself.
     */
    public RecognizeOptions setInitialSilenceTimeoutInSeconds(Integer initialSilenceTimeoutInSeconds) {
        this.initialSilenceTimeoutInSeconds = initialSilenceTimeoutInSeconds;
        return this;
    }

    /**
     * Get the targetParticipant property: Target participant of DTMF tone recognition.
     * 
     * @return the targetParticipant value.
     */
    public CommunicationIdentifierModel getTargetParticipant() {
        return this.targetParticipant;
    }

    /**
     * Set the targetParticipant property: Target participant of DTMF tone recognition.
     * 
     * @param targetParticipant the targetParticipant value to set.
     * @return the RecognizeOptions object itself.
     */
    public RecognizeOptions setTargetParticipant(CommunicationIdentifierModel targetParticipant) {
        this.targetParticipant = targetParticipant;
        return this;
    }

    /**
     * Get the dtmfOptions property: Defines configurations for DTMF.
     * 
     * @return the dtmfOptions value.
     */
    public DtmfOptions getDtmfOptions() {
        return this.dtmfOptions;
    }

    /**
     * Set the dtmfOptions property: Defines configurations for DTMF.
     * 
     * @param dtmfOptions the dtmfOptions value to set.
     * @return the RecognizeOptions object itself.
     */
    public RecognizeOptions setDtmfOptions(DtmfOptions dtmfOptions) {
        this.dtmfOptions = dtmfOptions;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("targetParticipant", this.targetParticipant);
        jsonWriter.writeBooleanField("interruptPrompt", this.interruptPrompt);
        jsonWriter.writeNumberField("initialSilenceTimeoutInSeconds", this.initialSilenceTimeoutInSeconds);
        jsonWriter.writeJsonField("dtmfOptions", this.dtmfOptions);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RecognizeOptions from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RecognizeOptions if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the RecognizeOptions.
     */
    public static RecognizeOptions fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RecognizeOptions deserializedRecognizeOptions = new RecognizeOptions();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("targetParticipant".equals(fieldName)) {
                    deserializedRecognizeOptions.targetParticipant = CommunicationIdentifierModel.fromJson(reader);
                } else if ("interruptPrompt".equals(fieldName)) {
                    deserializedRecognizeOptions.interruptPrompt = reader.getNullable(JsonReader::getBoolean);
                } else if ("initialSilenceTimeoutInSeconds".equals(fieldName)) {
                    deserializedRecognizeOptions.initialSilenceTimeoutInSeconds
                        = reader.getNullable(JsonReader::getInt);
                } else if ("dtmfOptions".equals(fieldName)) {
                    deserializedRecognizeOptions.dtmfOptions = DtmfOptions.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRecognizeOptions;
        });
    }
}
