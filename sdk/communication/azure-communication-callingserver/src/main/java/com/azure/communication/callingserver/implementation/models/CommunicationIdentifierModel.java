// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.communication.callingserver.implementation.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;

import java.io.IOException;
import java.util.Objects;

/** The CommunicationIdentifierModel model. */
@Fluent
public final class CommunicationIdentifierModel implements JsonSerializable<CommunicationIdentifierModel> {
    /*
     * Full ID of the identifier.
     */
    private String rawId;

    /*
     * Type of CommunicationIdentifierModel.
     */
    private CommunicationIdentifierModelKind kind;

    /*
     * The communication user.
     */
    private CommunicationUserIdentifierModel communicationUser;

    /*
     * The phone number.
     */
    private PhoneNumberIdentifierModel phoneNumber;

    /*
     * The Microsoft Teams user.
     */
    private MicrosoftTeamsUserIdentifierModel microsoftTeamsUser;

    /**
     * Get the rawId property: Full ID of the identifier.
     *
     * @return the rawId value.
     */
    public String getRawId() {
        return this.rawId;
    }

    /**
     * Set the rawId property: Full ID of the identifier.
     *
     * @param rawId the rawId value to set.
     * @return the CommunicationIdentifierModel object itself.
     */
    public CommunicationIdentifierModel setRawId(String rawId) {
        this.rawId = rawId;
        return this;
    }

    /**
     * Get the kind property: Type of CommunicationIdentifierModel.
     *
     * @return the kind value.
     */
    public CommunicationIdentifierModelKind getKind() {
        return this.kind;
    }

    /**
     * Set the kind property: Type of CommunicationIdentifierModel.
     *
     * @param kind the kind value to set.
     * @return the CommunicationIdentifierModel object itself.
     */
    public CommunicationIdentifierModel setKind(CommunicationIdentifierModelKind kind) {
        this.kind = kind;
        return this;
    }

    /**
     * Get the communicationUser property: The communication user.
     *
     * @return the communicationUser value.
     */
    public CommunicationUserIdentifierModel getCommunicationUser() {
        return this.communicationUser;
    }

    /**
     * Set the communicationUser property: The communication user.
     *
     * @param communicationUser the communicationUser value to set.
     * @return the CommunicationIdentifierModel object itself.
     */
    public CommunicationIdentifierModel setCommunicationUser(CommunicationUserIdentifierModel communicationUser) {
        this.communicationUser = communicationUser;
        return this;
    }

    /**
     * Get the phoneNumber property: The phone number.
     *
     * @return the phoneNumber value.
     */
    public PhoneNumberIdentifierModel getPhoneNumber() {
        return this.phoneNumber;
    }

    /**
     * Set the phoneNumber property: The phone number.
     *
     * @param phoneNumber the phoneNumber value to set.
     * @return the CommunicationIdentifierModel object itself.
     */
    public CommunicationIdentifierModel setPhoneNumber(PhoneNumberIdentifierModel phoneNumber) {
        this.phoneNumber = phoneNumber;
        return this;
    }

    /**
     * Get the microsoftTeamsUser property: The Microsoft Teams user.
     *
     * @return the microsoftTeamsUser value.
     */
    public MicrosoftTeamsUserIdentifierModel getMicrosoftTeamsUser() {
        return this.microsoftTeamsUser;
    }

    /**
     * Set the microsoftTeamsUser property: The Microsoft Teams user.
     *
     * @param microsoftTeamsUser the microsoftTeamsUser value to set.
     * @return the CommunicationIdentifierModel object itself.
     */
    public CommunicationIdentifierModel setMicrosoftTeamsUser(MicrosoftTeamsUserIdentifierModel microsoftTeamsUser) {
        this.microsoftTeamsUser = microsoftTeamsUser;
        return this;
    }

    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        return jsonWriter.writeStartObject()
            .writeStringField("rawId", rawId)
            .writeStringField("kind", Objects.toString(kind, null))
            .writeJsonField("communicationUser", communicationUser)
            .writeJsonField("phoneNumber", phoneNumber)
            .writeJsonField("microsoftTeamsUser", microsoftTeamsUser)
            .writeEndObject();
    }

    /**
     * Reads an instance of {@link CommunicationIdentifierModel} from the {@link JsonReader}.
     *
     * @param jsonReader The {@link JsonReader} to read from.
     * @return An instance of {@link CommunicationIdentifierModel}, or null if the {@link JsonReader} was pointing to
     * {@link JsonToken#NULL}.
     * @throws IOException If an error occurs while reading the {@link JsonReader}.
     */
    public static CommunicationIdentifierModel fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CommunicationIdentifierModel model = new CommunicationIdentifierModel();

            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("rawId".equals(fieldName)) {
                    model.rawId = reader.getString();
                } else if ("kind".equals(fieldName)) {
                    model.kind = CommunicationIdentifierModelKind.fromString(reader.getString());
                } else if ("communicationUser".equals(fieldName)) {
                    model.communicationUser = CommunicationUserIdentifierModel.fromJson(reader);
                } else if ("phoneNumber".equals(fieldName)) {
                    model.phoneNumber = PhoneNumberIdentifierModel.fromJson(reader);
                } else if ("microsoftTeamsUser".equals(fieldName)) {
                    model.microsoftTeamsUser = MicrosoftTeamsUserIdentifierModel.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return model;
        });
    }
}
