// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.communication.callingserver.implementation.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The MediaStreamingConfigurationDto model. */
@Fluent
public final class MediaStreamingConfigurationDto {
    /*
     * Transport URL for media streaming
     */
    @JsonProperty(value = "transportUrl")
    private String transportUrl;

    /*
     * The type of tranport to be used for media streaming, eg. Websocket
     */
    @JsonProperty(value = "transportType")
    private MediaStreamingTransportTypeDto transportType;

    /*
     * Content type to stream, eg. audio, audio/video
     */
    @JsonProperty(value = "contentType")
    private MediaStreamingContentTypeDto contentType;

    /*
     * Audio channel type to stream, eg. unmixed audio, mixed audio
     */
    @JsonProperty(value = "audioChannelType")
    private MediaStreamingAudioChannelTypeDto audioChannelType;

    /**
     * Get the transportUrl property: Transport URL for media streaming.
     *
     * @return the transportUrl value.
     */
    public String getTransportUrl() {
        return this.transportUrl;
    }

    /**
     * Set the transportUrl property: Transport URL for media streaming.
     *
     * @param transportUrl the transportUrl value to set.
     * @return the MediaStreamingConfigurationDto object itself.
     */
    public MediaStreamingConfigurationDto setTransportUrl(String transportUrl) {
        this.transportUrl = transportUrl;
        return this;
    }

    /**
     * Get the transportType property: The type of tranport to be used for media streaming, eg. Websocket.
     *
     * @return the transportType value.
     */
    public MediaStreamingTransportTypeDto getTransportType() {
        return this.transportType;
    }

    /**
     * Set the transportType property: The type of tranport to be used for media streaming, eg. Websocket.
     *
     * @param transportType the transportType value to set.
     * @return the MediaStreamingConfigurationDto object itself.
     */
    public MediaStreamingConfigurationDto setTransportType(MediaStreamingTransportTypeDto transportType) {
        this.transportType = transportType;
        return this;
    }

    /**
     * Get the contentType property: Content type to stream, eg. audio, audio/video.
     *
     * @return the contentType value.
     */
    public MediaStreamingContentTypeDto getContentType() {
        return this.contentType;
    }

    /**
     * Set the contentType property: Content type to stream, eg. audio, audio/video.
     *
     * @param contentType the contentType value to set.
     * @return the MediaStreamingConfigurationDto object itself.
     */
    public MediaStreamingConfigurationDto setContentType(MediaStreamingContentTypeDto contentType) {
        this.contentType = contentType;
        return this;
    }

    /**
     * Get the audioChannelType property: Audio channel type to stream, eg. unmixed audio, mixed audio.
     *
     * @return the audioChannelType value.
     */
    public MediaStreamingAudioChannelTypeDto getAudioChannelType() {
        return this.audioChannelType;
    }

    /**
     * Set the audioChannelType property: Audio channel type to stream, eg. unmixed audio, mixed audio.
     *
     * @param audioChannelType the audioChannelType value to set.
     * @return the MediaStreamingConfigurationDto object itself.
     */
    public MediaStreamingConfigurationDto setAudioChannelType(MediaStreamingAudioChannelTypeDto audioChannelType) {
        this.audioChannelType = audioChannelType;
        return this;
    }
}
