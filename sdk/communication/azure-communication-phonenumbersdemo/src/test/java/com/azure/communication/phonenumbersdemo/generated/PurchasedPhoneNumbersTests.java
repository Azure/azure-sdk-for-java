// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.communication.phonenumbersdemo.generated;

import com.azure.communication.phonenumbersdemo.implementation.models.PurchasedPhoneNumber;
import com.azure.communication.phonenumbersdemo.implementation.models.PurchasedPhoneNumbers;
import com.azure.communication.phonenumbersdemo.models.BillingFrequency;
import com.azure.communication.phonenumbersdemo.models.PhoneNumberAssignmentType;
import com.azure.communication.phonenumbersdemo.models.PhoneNumberCapabilities;
import com.azure.communication.phonenumbersdemo.models.PhoneNumberCapabilityType;
import com.azure.communication.phonenumbersdemo.models.PhoneNumberCost;
import com.azure.communication.phonenumbersdemo.models.PhoneNumberType;
import com.azure.core.util.BinaryData;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class PurchasedPhoneNumbersTests {
    @Test
    public void testDeserialize() {
        PurchasedPhoneNumbers model =
                BinaryData.fromString(
                                "{\"phoneNumbers\":[{\"id\":\"hgsopbyrqufegx\",\"phoneNumber\":\"vwz\",\"countryCode\":\"bnhlmc\",\"phoneNumberType\":\"geographic\",\"capabilities\":{\"calling\":\"none\",\"sms\":\"none\"},\"assignmentType\":\"application\",\"purchaseDate\":\"gitvg\",\"cost\":{\"amount\":91.80084088999047,\"currencyCode\":\"rixkwmyijejve\",\"billingFrequency\":\"monthly\"}},{\"id\":\"hbpnaixexccbd\",\"phoneNumber\":\"eaxhcexdrrvqahqk\",\"countryCode\":\"htpwij\",\"phoneNumberType\":\"tollFree\",\"capabilities\":{\"calling\":\"inbound\",\"sms\":\"inbound+outbound\"},\"assignmentType\":\"application\",\"purchaseDate\":\"vfycxzb\",\"cost\":{\"amount\":32.402661985604574,\"currencyCode\":\"owvrvmtgjqppyos\",\"billingFrequency\":\"monthly\"}},{\"id\":\"on\",\"phoneNumber\":\"myhgfipnsxkmc\",\"countryCode\":\"a\",\"phoneNumberType\":\"geographic\",\"capabilities\":{\"calling\":\"outbound\",\"sms\":\"outbound\"},\"assignmentType\":\"application\",\"purchaseDate\":\"reafxtsgumhjg\",\"cost\":{\"amount\":23.09460412665998,\"currencyCode\":\"kxw\",\"billingFrequency\":\"monthly\"}},{\"id\":\"olbq\",\"phoneNumber\":\"vuzlm\",\"countryCode\":\"felfktg\",\"phoneNumberType\":\"geographic\",\"capabilities\":{\"calling\":\"none\",\"sms\":\"none\"},\"assignmentType\":\"person\",\"purchaseDate\":\"wjxeznoigbr\",\"cost\":{\"amount\":51.77125486468781,\"currencyCode\":\"mw\",\"billingFrequency\":\"monthly\"}}],\"nextLink\":\"bsazejjoqka\"}")
                        .toObject(PurchasedPhoneNumbers.class);
        Assertions.assertEquals("hgsopbyrqufegx", model.getPhoneNumbers().get(0).getId());
        Assertions.assertEquals("vwz", model.getPhoneNumbers().get(0).getPhoneNumber());
        Assertions.assertEquals("bnhlmc", model.getPhoneNumbers().get(0).getCountryCode());
        Assertions.assertEquals(PhoneNumberType.GEOGRAPHIC, model.getPhoneNumbers().get(0).getPhoneNumberType());
        Assertions.assertEquals(
                PhoneNumberCapabilityType.NONE, model.getPhoneNumbers().get(0).getCapabilities().getCalling());
        Assertions.assertEquals(
                PhoneNumberCapabilityType.NONE, model.getPhoneNumbers().get(0).getCapabilities().getSms());
        Assertions.assertEquals(
                PhoneNumberAssignmentType.APPLICATION, model.getPhoneNumbers().get(0).getAssignmentType());
        Assertions.assertEquals("gitvg", model.getPhoneNumbers().get(0).getPurchaseDate());
        Assertions.assertEquals(91.80084088999047, model.getPhoneNumbers().get(0).getCost().getAmount());
        Assertions.assertEquals("rixkwmyijejve", model.getPhoneNumbers().get(0).getCost().getCurrencyCode());
        Assertions.assertEquals(
                BillingFrequency.MONTHLY, model.getPhoneNumbers().get(0).getCost().getBillingFrequency());
        Assertions.assertEquals("bsazejjoqka", model.getNextLink());
    }

    @Test
    public void testSerialize() {
        PurchasedPhoneNumbers model =
                new PurchasedPhoneNumbers()
                        .setPhoneNumbers(
                                Arrays.asList(
                                        new PurchasedPhoneNumber()
                                                .setId("hgsopbyrqufegx")
                                                .setPhoneNumber("vwz")
                                                .setCountryCode("bnhlmc")
                                                .setPhoneNumberType(PhoneNumberType.GEOGRAPHIC)
                                                .setCapabilities(
                                                        new PhoneNumberCapabilities()
                                                                .setCalling(PhoneNumberCapabilityType.NONE)
                                                                .setSms(PhoneNumberCapabilityType.NONE))
                                                .setAssignmentType(PhoneNumberAssignmentType.APPLICATION)
                                                .setPurchaseDate("gitvg")
                                                .setCost(
                                                        new PhoneNumberCost()
                                                                .setAmount(91.80084088999047)
                                                                .setCurrencyCode("rixkwmyijejve")
                                                                .setBillingFrequency(BillingFrequency.MONTHLY)),
                                        new PurchasedPhoneNumber()
                                                .setId("hbpnaixexccbd")
                                                .setPhoneNumber("eaxhcexdrrvqahqk")
                                                .setCountryCode("htpwij")
                                                .setPhoneNumberType(PhoneNumberType.TOLL_FREE)
                                                .setCapabilities(
                                                        new PhoneNumberCapabilities()
                                                                .setCalling(PhoneNumberCapabilityType.INBOUND)
                                                                .setSms(PhoneNumberCapabilityType.INBOUND_OUTBOUND))
                                                .setAssignmentType(PhoneNumberAssignmentType.APPLICATION)
                                                .setPurchaseDate("vfycxzb")
                                                .setCost(
                                                        new PhoneNumberCost()
                                                                .setAmount(32.402661985604574)
                                                                .setCurrencyCode("owvrvmtgjqppyos")
                                                                .setBillingFrequency(BillingFrequency.MONTHLY)),
                                        new PurchasedPhoneNumber()
                                                .setId("on")
                                                .setPhoneNumber("myhgfipnsxkmc")
                                                .setCountryCode("a")
                                                .setPhoneNumberType(PhoneNumberType.GEOGRAPHIC)
                                                .setCapabilities(
                                                        new PhoneNumberCapabilities()
                                                                .setCalling(PhoneNumberCapabilityType.OUTBOUND)
                                                                .setSms(PhoneNumberCapabilityType.OUTBOUND))
                                                .setAssignmentType(PhoneNumberAssignmentType.APPLICATION)
                                                .setPurchaseDate("reafxtsgumhjg")
                                                .setCost(
                                                        new PhoneNumberCost()
                                                                .setAmount(23.09460412665998)
                                                                .setCurrencyCode("kxw")
                                                                .setBillingFrequency(BillingFrequency.MONTHLY)),
                                        new PurchasedPhoneNumber()
                                                .setId("olbq")
                                                .setPhoneNumber("vuzlm")
                                                .setCountryCode("felfktg")
                                                .setPhoneNumberType(PhoneNumberType.GEOGRAPHIC)
                                                .setCapabilities(
                                                        new PhoneNumberCapabilities()
                                                                .setCalling(PhoneNumberCapabilityType.NONE)
                                                                .setSms(PhoneNumberCapabilityType.NONE))
                                                .setAssignmentType(PhoneNumberAssignmentType.PERSON)
                                                .setPurchaseDate("wjxeznoigbr")
                                                .setCost(
                                                        new PhoneNumberCost()
                                                                .setAmount(51.77125486468781)
                                                                .setCurrencyCode("mw")
                                                                .setBillingFrequency(BillingFrequency.MONTHLY))))
                        .setNextLink("bsazejjoqka");
        model = BinaryData.fromObject(model).toObject(PurchasedPhoneNumbers.class);
        Assertions.assertEquals("hgsopbyrqufegx", model.getPhoneNumbers().get(0).getId());
        Assertions.assertEquals("vwz", model.getPhoneNumbers().get(0).getPhoneNumber());
        Assertions.assertEquals("bnhlmc", model.getPhoneNumbers().get(0).getCountryCode());
        Assertions.assertEquals(PhoneNumberType.GEOGRAPHIC, model.getPhoneNumbers().get(0).getPhoneNumberType());
        Assertions.assertEquals(
                PhoneNumberCapabilityType.NONE, model.getPhoneNumbers().get(0).getCapabilities().getCalling());
        Assertions.assertEquals(
                PhoneNumberCapabilityType.NONE, model.getPhoneNumbers().get(0).getCapabilities().getSms());
        Assertions.assertEquals(
                PhoneNumberAssignmentType.APPLICATION, model.getPhoneNumbers().get(0).getAssignmentType());
        Assertions.assertEquals("gitvg", model.getPhoneNumbers().get(0).getPurchaseDate());
        Assertions.assertEquals(91.80084088999047, model.getPhoneNumbers().get(0).getCost().getAmount());
        Assertions.assertEquals("rixkwmyijejve", model.getPhoneNumbers().get(0).getCost().getCurrencyCode());
        Assertions.assertEquals(
                BillingFrequency.MONTHLY, model.getPhoneNumbers().get(0).getCost().getBillingFrequency());
        Assertions.assertEquals("bsazejjoqka", model.getNextLink());
    }
}
