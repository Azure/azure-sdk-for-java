// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.communication.phonenumbersdemo.generated;

import com.azure.communication.phonenumbersdemo.models.BillingFrequency;
import com.azure.communication.phonenumbersdemo.models.PhoneNumberAssignmentType;
import com.azure.communication.phonenumbersdemo.models.PhoneNumberCapabilities;
import com.azure.communication.phonenumbersdemo.models.PhoneNumberCapabilityType;
import com.azure.communication.phonenumbersdemo.models.PhoneNumberCost;
import com.azure.communication.phonenumbersdemo.models.PhoneNumberSearchResult;
import com.azure.communication.phonenumbersdemo.models.PhoneNumberType;
import com.azure.core.util.BinaryData;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class PhoneNumberSearchResultTests {
    @Test
    public void testDeserialize() {
        PhoneNumberSearchResult model =
                BinaryData.fromString(
                                "{\"searchId\":\"opb\",\"phoneNumbers\":[\"h\",\"upi\",\"gsybbejhp\",\"oycmsxaobhdxbmt\"],\"phoneNumberType\":\"geographic\",\"assignmentType\":\"application\",\"capabilities\":{\"calling\":\"none\",\"sms\":\"inbound\"},\"cost\":{\"amount\":42.35400894285311,\"currencyCode\":\"htbmuf\",\"billingFrequency\":\"monthly\"},\"searchExpiresBy\":\"wnoi\"}")
                        .toObject(PhoneNumberSearchResult.class);
        Assertions.assertEquals("opb", model.getSearchId());
        Assertions.assertEquals("h", model.getPhoneNumbers().get(0));
        Assertions.assertEquals(PhoneNumberType.GEOGRAPHIC, model.getPhoneNumberType());
        Assertions.assertEquals(PhoneNumberAssignmentType.APPLICATION, model.getAssignmentType());
        Assertions.assertEquals(PhoneNumberCapabilityType.NONE, model.getCapabilities().getCalling());
        Assertions.assertEquals(PhoneNumberCapabilityType.INBOUND, model.getCapabilities().getSms());
        Assertions.assertEquals(42.35400894285311, model.getCost().getAmount());
        Assertions.assertEquals("htbmuf", model.getCost().getCurrencyCode());
        Assertions.assertEquals(BillingFrequency.MONTHLY, model.getCost().getBillingFrequency());
        Assertions.assertEquals("wnoi", model.getSearchExpiresBy());
    }

    @Test
    public void testSerialize() {
        PhoneNumberSearchResult model =
                new PhoneNumberSearchResult()
                        .setSearchId("opb")
                        .setPhoneNumbers(Arrays.asList("h", "upi", "gsybbejhp", "oycmsxaobhdxbmt"))
                        .setPhoneNumberType(PhoneNumberType.GEOGRAPHIC)
                        .setAssignmentType(PhoneNumberAssignmentType.APPLICATION)
                        .setCapabilities(
                                new PhoneNumberCapabilities()
                                        .setCalling(PhoneNumberCapabilityType.NONE)
                                        .setSms(PhoneNumberCapabilityType.INBOUND))
                        .setCost(
                                new PhoneNumberCost()
                                        .setAmount(42.35400894285311)
                                        .setCurrencyCode("htbmuf")
                                        .setBillingFrequency(BillingFrequency.MONTHLY))
                        .setSearchExpiresBy("wnoi");
        model = BinaryData.fromObject(model).toObject(PhoneNumberSearchResult.class);
        Assertions.assertEquals("opb", model.getSearchId());
        Assertions.assertEquals("h", model.getPhoneNumbers().get(0));
        Assertions.assertEquals(PhoneNumberType.GEOGRAPHIC, model.getPhoneNumberType());
        Assertions.assertEquals(PhoneNumberAssignmentType.APPLICATION, model.getAssignmentType());
        Assertions.assertEquals(PhoneNumberCapabilityType.NONE, model.getCapabilities().getCalling());
        Assertions.assertEquals(PhoneNumberCapabilityType.INBOUND, model.getCapabilities().getSms());
        Assertions.assertEquals(42.35400894285311, model.getCost().getAmount());
        Assertions.assertEquals("htbmuf", model.getCost().getCurrencyCode());
        Assertions.assertEquals(BillingFrequency.MONTHLY, model.getCost().getBillingFrequency());
        Assertions.assertEquals("wnoi", model.getSearchExpiresBy());
    }
}
