// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.communication.phonenumbersdemo.generated;

import com.azure.communication.phonenumbersdemo.implementation.models.PhoneNumberSearchRequest;
import com.azure.communication.phonenumbersdemo.models.PhoneNumberAssignmentType;
import com.azure.communication.phonenumbersdemo.models.PhoneNumberCapabilities;
import com.azure.communication.phonenumbersdemo.models.PhoneNumberCapabilityType;
import com.azure.communication.phonenumbersdemo.models.PhoneNumberType;
import com.azure.core.util.BinaryData;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class PhoneNumberSearchRequestTests {
    @Test
    public void testDeserialize() {
        PhoneNumberSearchRequest model =
                BinaryData.fromString(
                                "{\"phoneNumberType\":\"tollFree\",\"assignmentType\":\"application\",\"capabilities\":{\"calling\":\"none\",\"sms\":\"inbound+outbound\"},\"areaCode\":\"vgjxpybczm\",\"quantity\":580736275}")
                        .toObject(PhoneNumberSearchRequest.class);
        Assertions.assertEquals(PhoneNumberType.TOLL_FREE, model.getPhoneNumberType());
        Assertions.assertEquals(PhoneNumberAssignmentType.APPLICATION, model.getAssignmentType());
        Assertions.assertEquals(PhoneNumberCapabilityType.NONE, model.getCapabilities().getCalling());
        Assertions.assertEquals(PhoneNumberCapabilityType.INBOUND_OUTBOUND, model.getCapabilities().getSms());
        Assertions.assertEquals("vgjxpybczm", model.getAreaCode());
        Assertions.assertEquals(580736275, model.getQuantity());
    }

    @Test
    public void testSerialize() {
        PhoneNumberSearchRequest model =
                new PhoneNumberSearchRequest()
                        .setPhoneNumberType(PhoneNumberType.TOLL_FREE)
                        .setAssignmentType(PhoneNumberAssignmentType.APPLICATION)
                        .setCapabilities(
                                new PhoneNumberCapabilities()
                                        .setCalling(PhoneNumberCapabilityType.NONE)
                                        .setSms(PhoneNumberCapabilityType.INBOUND_OUTBOUND))
                        .setAreaCode("vgjxpybczm")
                        .setQuantity(580736275);
        model = BinaryData.fromObject(model).toObject(PhoneNumberSearchRequest.class);
        Assertions.assertEquals(PhoneNumberType.TOLL_FREE, model.getPhoneNumberType());
        Assertions.assertEquals(PhoneNumberAssignmentType.APPLICATION, model.getAssignmentType());
        Assertions.assertEquals(PhoneNumberCapabilityType.NONE, model.getCapabilities().getCalling());
        Assertions.assertEquals(PhoneNumberCapabilityType.INBOUND_OUTBOUND, model.getCapabilities().getSms());
        Assertions.assertEquals("vgjxpybczm", model.getAreaCode());
        Assertions.assertEquals(580736275, model.getQuantity());
    }
}
