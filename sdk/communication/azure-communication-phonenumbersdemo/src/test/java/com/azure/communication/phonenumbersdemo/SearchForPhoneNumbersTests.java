// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.communication.phonenumbersdemo;

import com.azure.core.http.rest.RequestOptions;
import com.azure.core.util.BinaryData;
import com.azure.core.util.polling.LongRunningOperationStatus;
import com.azure.core.util.polling.PollResponse;
import com.azure.core.util.polling.SyncPoller;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import java.io.IOException;

public final class SearchForPhoneNumbersTests extends PhoneNumbersClientTestBase {

    private static final ObjectMapper MAPPER = new ObjectMapper();

    @Test
    public void testSearchForPhoneNumbersTests() throws IOException {
        BinaryData body =
                BinaryData.fromString(
                        "{\"areaCode\":\"425\",\"assignmentType\":\"application\",\"capabilities\":{\"calling\":\"none\",\"sms\":\"inbound+outbound\"},\"phoneNumberType\":\"tollFree\",\"quantity\":1}");
        RequestOptions requestOptions = new RequestOptions();
        SyncPoller<BinaryData, BinaryData> poller =
                phoneNumbersClient.beginSearchAvailablePhoneNumbers("US", body, requestOptions);

        PollResponse<BinaryData> pollResponse = poller.poll();
        JsonNode pollResponseNode = MAPPER.readTree(pollResponse.getValue().toBytes());
        Assertions.assertEquals("search", pollResponseNode.get("operationType").asText());
        Assertions.assertEquals("notStarted", pollResponseNode.get("status").asText());

        PollResponse<BinaryData> lastPollResponse = poller.waitForCompletion();
        pollResponseNode = MAPPER.readTree(lastPollResponse.getValue().toBytes());
        Assertions.assertEquals("succeeded", pollResponseNode.get("status").asText());

        Assertions.assertEquals(LongRunningOperationStatus.SUCCESSFULLY_COMPLETED, lastPollResponse.getStatus());

        BinaryData finalResult = poller.getFinalResult();
        JsonNode finalResultNode = MAPPER.readTree(finalResult.toBytes());
        Assertions.assertEquals("+18332705858", finalResultNode.get("phoneNumbers").get(0).asText());
    }
}
