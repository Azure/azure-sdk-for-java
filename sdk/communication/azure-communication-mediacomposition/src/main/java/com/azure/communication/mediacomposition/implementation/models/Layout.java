// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.communication.mediacomposition.implementation.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The Layout model. */
@Fluent
public final class Layout {
    /*
     * The type property.
     */
    @JsonProperty(value = "type")
    private LayoutType type;

    /*
     * The resolution property.
     */
    @JsonProperty(value = "resolution")
    private Resolution resolution;

    /*
     * The trackActiveSpeaker property.
     */
    @JsonProperty(value = "trackActiveSpeaker")
    private Boolean trackActiveSpeaker;

    /*
     * The presentationWithContentLayoutOptions property.
     */
    @JsonProperty(value = "presentationWithContentLayoutOptions")
    private PresentationWithContentLayoutOptions presentationWithContentLayoutOptions;

    /*
     * The gridOptions property.
     */
    @JsonProperty(value = "gridOptions")
    private GridLayoutOptions gridOptions;

    /*
     * The presentationOptions property.
     */
    @JsonProperty(value = "presentationOptions")
    private PresentationLayoutOptions presentationOptions;

    /*
     * The presenterOptions property.
     */
    @JsonProperty(value = "presenterOptions")
    private PresenterLayoutOptions presenterOptions;

    /*
     * The containers property.
     */
    @JsonProperty(value = "containers")
    private List<Container> containers;

    /**
     * Get the type property: The type property.
     *
     * @return the type value.
     */
    public LayoutType getType() {
        return this.type;
    }

    /**
     * Set the type property: The type property.
     *
     * @param type the type value to set.
     * @return the Layout object itself.
     */
    public Layout setType(LayoutType type) {
        this.type = type;
        return this;
    }

    /**
     * Get the resolution property: The resolution property.
     *
     * @return the resolution value.
     */
    public Resolution getResolution() {
        return this.resolution;
    }

    /**
     * Set the resolution property: The resolution property.
     *
     * @param resolution the resolution value to set.
     * @return the Layout object itself.
     */
    public Layout setResolution(Resolution resolution) {
        this.resolution = resolution;
        return this;
    }

    /**
     * Get the trackActiveSpeaker property: The trackActiveSpeaker property.
     *
     * @return the trackActiveSpeaker value.
     */
    public Boolean isTrackActiveSpeaker() {
        return this.trackActiveSpeaker;
    }

    /**
     * Set the trackActiveSpeaker property: The trackActiveSpeaker property.
     *
     * @param trackActiveSpeaker the trackActiveSpeaker value to set.
     * @return the Layout object itself.
     */
    public Layout setTrackActiveSpeaker(Boolean trackActiveSpeaker) {
        this.trackActiveSpeaker = trackActiveSpeaker;
        return this;
    }

    /**
     * Get the presentationWithContentLayoutOptions property: The presentationWithContentLayoutOptions property.
     *
     * @return the presentationWithContentLayoutOptions value.
     */
    public PresentationWithContentLayoutOptions getPresentationWithContentLayoutOptions() {
        return this.presentationWithContentLayoutOptions;
    }

    /**
     * Set the presentationWithContentLayoutOptions property: The presentationWithContentLayoutOptions property.
     *
     * @param presentationWithContentLayoutOptions the presentationWithContentLayoutOptions value to set.
     * @return the Layout object itself.
     */
    public Layout setPresentationWithContentLayoutOptions(
            PresentationWithContentLayoutOptions presentationWithContentLayoutOptions) {
        this.presentationWithContentLayoutOptions = presentationWithContentLayoutOptions;
        return this;
    }

    /**
     * Get the gridOptions property: The gridOptions property.
     *
     * @return the gridOptions value.
     */
    public GridLayoutOptions getGridOptions() {
        return this.gridOptions;
    }

    /**
     * Set the gridOptions property: The gridOptions property.
     *
     * @param gridOptions the gridOptions value to set.
     * @return the Layout object itself.
     */
    public Layout setGridOptions(GridLayoutOptions gridOptions) {
        this.gridOptions = gridOptions;
        return this;
    }

    /**
     * Get the presentationOptions property: The presentationOptions property.
     *
     * @return the presentationOptions value.
     */
    public PresentationLayoutOptions getPresentationOptions() {
        return this.presentationOptions;
    }

    /**
     * Set the presentationOptions property: The presentationOptions property.
     *
     * @param presentationOptions the presentationOptions value to set.
     * @return the Layout object itself.
     */
    public Layout setPresentationOptions(PresentationLayoutOptions presentationOptions) {
        this.presentationOptions = presentationOptions;
        return this;
    }

    /**
     * Get the presenterOptions property: The presenterOptions property.
     *
     * @return the presenterOptions value.
     */
    public PresenterLayoutOptions getPresenterOptions() {
        return this.presenterOptions;
    }

    /**
     * Set the presenterOptions property: The presenterOptions property.
     *
     * @param presenterOptions the presenterOptions value to set.
     * @return the Layout object itself.
     */
    public Layout setPresenterOptions(PresenterLayoutOptions presenterOptions) {
        this.presenterOptions = presenterOptions;
        return this;
    }

    /**
     * Get the containers property: The containers property.
     *
     * @return the containers value.
     */
    public List<Container> getContainers() {
        return this.containers;
    }

    /**
     * Set the containers property: The containers property.
     *
     * @param containers the containers value to set.
     * @return the Layout object itself.
     */
    public Layout setContainers(List<Container> containers) {
        this.containers = containers;
        return this;
    }
}
