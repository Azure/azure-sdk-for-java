// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.monitor.opentelemetry.autoconfigure.implementation.quickpulse.swagger.models;

import com.azure.core.annotation.Generated;
import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * Telemetry type.
 */
public final class TelemetryType extends ExpandableStringEnum<TelemetryType> {
    /**
     * Represents a request telemetry type.
     */
    @Generated
    public static final TelemetryType REQUEST = fromString("Request");

    /**
     * Represents a dependency telemetry type.
     */
    @Generated
    public static final TelemetryType DEPENDENCY = fromString("Dependency");

    /**
     * Represents an exception telemetry type.
     */
    @Generated
    public static final TelemetryType EXCEPTION = fromString("Exception");

    /**
     * Represents an event telemetry type.
     */
    @Generated
    public static final TelemetryType EVENT = fromString("Event");

    /**
     * Represents a metric telemetry type.
     */
    @Generated
    public static final TelemetryType METRIC = fromString("Metric");

    /**
     * Represents a performance counter telemetry type.
     */
    @Generated
    public static final TelemetryType PERFORMANCE_COUNTER = fromString("PerformanceCounter");

    /**
     * Represents a trace telemetry type.
     */
    @Generated
    public static final TelemetryType TRACE = fromString("Trace");

    /**
     * Creates a new instance of TelemetryType value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Generated
    @Deprecated
    public TelemetryType() {
    }

    /**
     * Creates or finds a TelemetryType from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding TelemetryType.
     */
    @Generated
    public static TelemetryType fromString(String name) {
        return fromString(name, TelemetryType.class);
    }

    /**
     * Gets known TelemetryType values.
     * 
     * @return known TelemetryType values.
     */
    @Generated
    public static Collection<TelemetryType> values() {
        return values(TelemetryType.class);
    }
}
