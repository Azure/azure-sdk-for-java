// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.monitor.opentelemetry.exporter.implementation.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The error details.
 */
@Fluent
public final class TelemetryErrorDetails implements JsonSerializable<TelemetryErrorDetails> {
    /*
     * The index in the original payload of the item.
     */
    private Integer index;

    /*
     * The item specific [HTTP Response status code](#Response Status Codes).
     */
    private Integer statusCode;

    /*
     * The error message.
     */
    private String message;

    /**
     * Creates an instance of TelemetryErrorDetails class.
     */
    public TelemetryErrorDetails() {
    }

    /**
     * Get the index property: The index in the original payload of the item.
     *
     * @return the index value.
     */
    public Integer getIndex() {
        return this.index;
    }

    /**
     * Set the index property: The index in the original payload of the item.
     *
     * @param index the index value to set.
     * @return the TelemetryErrorDetails object itself.
     */
    public TelemetryErrorDetails setIndex(Integer index) {
        this.index = index;
        return this;
    }

    /**
     * Get the statusCode property: The item specific [HTTP Response status code](#Response Status Codes).
     *
     * @return the statusCode value.
     */
    public Integer getStatusCode() {
        return this.statusCode;
    }

    /**
     * Set the statusCode property: The item specific [HTTP Response status code](#Response Status Codes).
     *
     * @param statusCode the statusCode value to set.
     * @return the TelemetryErrorDetails object itself.
     */
    public TelemetryErrorDetails setStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }

    /**
     * Get the message property: The error message.
     *
     * @return the message value.
     */
    public String getMessage() {
        return this.message;
    }

    /**
     * Set the message property: The error message.
     *
     * @param message the message value to set.
     * @return the TelemetryErrorDetails object itself.
     */
    public TelemetryErrorDetails setMessage(String message) {
        this.message = message;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("index", this.index);
        jsonWriter.writeNumberField("statusCode", this.statusCode);
        jsonWriter.writeStringField("message", this.message);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of TelemetryErrorDetails from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of TelemetryErrorDetails if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the TelemetryErrorDetails.
     */
    public static TelemetryErrorDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            TelemetryErrorDetails deserializedTelemetryErrorDetails = new TelemetryErrorDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("index".equals(fieldName)) {
                    deserializedTelemetryErrorDetails.index = reader.getNullable(JsonReader::getInt);
                } else if ("statusCode".equals(fieldName)) {
                    deserializedTelemetryErrorDetails.statusCode = reader.getNullable(JsonReader::getInt);
                } else if ("message".equals(fieldName)) {
                    deserializedTelemetryErrorDetails.message = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedTelemetryErrorDetails;
        });
    }
}
