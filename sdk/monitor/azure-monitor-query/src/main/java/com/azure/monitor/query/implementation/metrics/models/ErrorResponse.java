// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.monitor.query.implementation.metrics.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Error Response
 * 
 * Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also
 * follows the OData error response format.).
 */
@Immutable
public final class ErrorResponse implements JsonSerializable<ErrorResponse> {
    /*
     * The error code.
     */
    private String code;

    /*
     * The error message.
     */
    private String message;

    /*
     * The error target.
     */
    private String target;

    /*
     * The error details.
     */
    private List<ErrorResponse> details;

    /*
     * The error additional info.
     */
    private List<ErrorAdditionalInfo> additionalInfo;

    /**
     * Creates an instance of ErrorResponse class.
     */
    public ErrorResponse() {
    }

    /**
     * Get the code property: The error code.
     * 
     * @return the code value.
     */
    public String getCode() {
        return this.code;
    }

    /**
     * Get the message property: The error message.
     * 
     * @return the message value.
     */
    public String getMessage() {
        return this.message;
    }

    /**
     * Get the target property: The error target.
     * 
     * @return the target value.
     */
    public String getTarget() {
        return this.target;
    }

    /**
     * Get the details property: The error details.
     * 
     * @return the details value.
     */
    public List<ErrorResponse> getDetails() {
        return this.details;
    }

    /**
     * Get the additionalInfo property: The error additional info.
     * 
     * @return the additionalInfo value.
     */
    public List<ErrorAdditionalInfo> getAdditionalInfo() {
        return this.additionalInfo;
    }

    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ErrorResponse from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ErrorResponse if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the ErrorResponse.
     */
    public static ErrorResponse fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ErrorResponse deserializedErrorResponse = new ErrorResponse();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("code".equals(fieldName)) {
                    deserializedErrorResponse.code = reader.getString();
                } else if ("message".equals(fieldName)) {
                    deserializedErrorResponse.message = reader.getString();
                } else if ("target".equals(fieldName)) {
                    deserializedErrorResponse.target = reader.getString();
                } else if ("details".equals(fieldName)) {
                    List<ErrorResponse> details = reader.readArray(reader1 -> ErrorResponse.fromJson(reader1));
                    deserializedErrorResponse.details = details;
                } else if ("additionalInfo".equals(fieldName)) {
                    List<ErrorAdditionalInfo> additionalInfo
                        = reader.readArray(reader1 -> ErrorAdditionalInfo.fromJson(reader1));
                    deserializedErrorResponse.additionalInfo = additionalInfo;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedErrorResponse;
        });
    }
}
