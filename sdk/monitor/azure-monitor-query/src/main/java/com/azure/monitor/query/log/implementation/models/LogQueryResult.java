// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.monitor.query.log.implementation.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Contains the tables, columns &amp; rows resulting from the query or the error details if the query failed. */
@Fluent
public final class LogQueryResult {
    /*
     * The list of tables, columns and rows.
     */
    @JsonProperty(value = "tables")
    private List<Table> tables;

    /*
     * The code and message for an error.
     */
    @JsonProperty(value = "error")
    private ErrorInfo error;

    /**
     * Get the tables property: The list of tables, columns and rows.
     *
     * @return the tables value.
     */
    public List<Table> getTables() {
        return this.tables;
    }

    /**
     * Set the tables property: The list of tables, columns and rows.
     *
     * @param tables the tables value to set.
     * @return the LogQueryResult object itself.
     */
    public LogQueryResult setTables(List<Table> tables) {
        this.tables = tables;
        return this;
    }

    /**
     * Get the error property: The code and message for an error.
     *
     * @return the error value.
     */
    public ErrorInfo getError() {
        return this.error;
    }

    /**
     * Set the error property: The code and message for an error.
     *
     * @param error the error value to set.
     * @return the LogQueryResult object itself.
     */
    public LogQueryResult setError(ErrorInfo error) {
        this.error = error;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (getTables() != null) {
            getTables().forEach(e -> e.validate());
        }
        if (getError() != null) {
            getError().validate();
        }
    }
}
