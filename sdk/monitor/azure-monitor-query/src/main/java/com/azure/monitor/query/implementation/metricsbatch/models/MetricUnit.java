// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.monitor.query.implementation.metricsbatch.models;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/** The unit of the metric. */
public enum MetricUnit {
    /** Unit of raw quantity. */
    COUNT("Count"),

    /** Unit of memory in bytes. */
    BYTES("Bytes"),

    /** Unit of time in seconds. */
    SECONDS("Seconds"),

    /** Rate unit of raw quantity per second. */
    COUNT_PER_SECOND("CountPerSecond"),

    /** Rate unit of memory in bytes per second. */
    BYTES_PER_SECOND("BytesPerSecond"),

    /** Percentage unit. */
    PERCENT("Percent"),

    /** Unit of time in 1/1000th of a second. */
    MILLI_SECONDS("MilliSeconds"),

    /**
     * Unit of data transfer or storage. It is the size of the data in bytes multiplied by the time it takes to transfer
     * or store the data in seconds.
     */
    BYTE_SECONDS("ByteSeconds"),

    /** No specified unit. */
    UNSPECIFIED("Unspecified"),

    /** Unit of processing power. */
    CORES("Cores"),

    /** Unit of processing power in 1/1000th of a CPU core. */
    MILLI_CORES("MilliCores"),

    /** Unit of processing power in one billionth of a CPU core. */
    NANO_CORES("NanoCores"),

    /** Rate unit of binary digits per second. */
    BITS_PER_SECOND("BitsPerSecond");

    /** The actual serialized value for a MetricUnit instance. */
    private final String value;

    MetricUnit(String value) {
        this.value = value;
    }

    /**
     * Parses a serialized value to a MetricUnit instance.
     *
     * @param value the serialized value to parse.
     * @return the parsed MetricUnit object, or null if unable to parse.
     */
    @JsonCreator
    public static MetricUnit fromString(String value) {
        if (value == null) {
            return null;
        }
        MetricUnit[] items = MetricUnit.values();
        for (MetricUnit item : items) {
            if (item.toString().equalsIgnoreCase(value)) {
                return item;
            }
        }
        return null;
    }

    /** {@inheritDoc} */
    @JsonValue
    @Override
    public String toString() {
        return this.value;
    }
}
