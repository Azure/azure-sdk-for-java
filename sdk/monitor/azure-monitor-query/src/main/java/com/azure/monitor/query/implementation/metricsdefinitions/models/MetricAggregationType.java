// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.monitor.query.implementation.metricsdefinitions.models;

import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * The aggregation type of the metric.
 */
public final class MetricAggregationType extends ExpandableStringEnum<MetricAggregationType> {
    /**
     * Static value None for MetricAggregationType.
     */
    public static final MetricAggregationType NONE = fromString("None");

    /**
     * Static value Average for MetricAggregationType.
     */
    public static final MetricAggregationType AVERAGE = fromString("Average");

    /**
     * Static value Count for MetricAggregationType.
     */
    public static final MetricAggregationType COUNT = fromString("Count");

    /**
     * Static value Minimum for MetricAggregationType.
     */
    public static final MetricAggregationType MINIMUM = fromString("Minimum");

    /**
     * Static value Maximum for MetricAggregationType.
     */
    public static final MetricAggregationType MAXIMUM = fromString("Maximum");

    /**
     * Static value Total for MetricAggregationType.
     */
    public static final MetricAggregationType TOTAL = fromString("Total");

    /**
     * Creates a new instance of MetricAggregationType value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public MetricAggregationType() {
    }

    /**
     * Creates or finds a MetricAggregationType from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding MetricAggregationType.
     */
    public static MetricAggregationType fromString(String name) {
        return fromString(name, MetricAggregationType.class);
    }

    /**
     * Gets known MetricAggregationType values.
     * 
     * @return known MetricAggregationType values.
     */
    public static Collection<MetricAggregationType> values() {
        return values(MetricAggregationType.class);
    }
}
