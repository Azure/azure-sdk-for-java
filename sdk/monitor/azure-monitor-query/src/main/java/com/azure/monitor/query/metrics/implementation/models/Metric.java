// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.monitor.query.metrics.implementation.models;

import com.azure.core.annotation.Fluent;
import com.azure.monitor.query.models.MetricsUnit;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The result data of a query. */
@Fluent
public final class Metric {
    /*
     * the metric Id.
     */
    @JsonProperty(value = "id", required = true)
    private String id;

    /*
     * the resource type of the metric resource.
     */
    @JsonProperty(value = "type", required = true)
    private String type;

    /*
     * the name and the display name of the metric, i.e. it is localizable
     * string.
     */
    @JsonProperty(value = "name", required = true)
    private LocalizableString name;

    /*
     * the metricsUnit of the metric.
     */
    @JsonProperty(value = "unit", required = true)
    private MetricsUnit metricsUnit;

    /*
     * the time series returned when a data query is performed.
     */
    @JsonProperty(value = "timeseries", required = true)
    private List<TimeSeriesElement> timeseries;

    /**
     * Creates an instance of Metric class.
     *
     * @param id the id value to set.
     * @param type the type value to set.
     * @param name the name value to set.
     * @param metricsUnit the metricsUnit value to set.
     * @param timeseries the timeseries value to set.
     */
    @JsonCreator
    public Metric(
            @JsonProperty(value = "id", required = true) String id,
            @JsonProperty(value = "type", required = true) String type,
            @JsonProperty(value = "name", required = true) LocalizableString name,
            @JsonProperty(value = "unit", required = true) MetricsUnit metricsUnit,
            @JsonProperty(value = "timeseries", required = true) List<TimeSeriesElement> timeseries) {
        this.id = id;
        this.type = type;
        this.name = name;
        this.metricsUnit = metricsUnit;
        this.timeseries = timeseries;
    }

    /**
     * Get the id property: the metric Id.
     *
     * @return the id value.
     */
    public String getId() {
        return this.id;
    }

    /**
     * Get the type property: the resource type of the metric resource.
     *
     * @return the type value.
     */
    public String getType() {
        return this.type;
    }

    /**
     * Get the name property: the name and the display name of the metric, i.e. it is localizable string.
     *
     * @return the name value.
     */
    public LocalizableString getName() {
        return this.name;
    }

    /**
     * Get the metricsUnit property: the metricsUnit of the metric.
     *
     * @return the metricsUnit value.
     */
    public MetricsUnit getUnit() {
        return this.metricsUnit;
    }

    /**
     * Get the timeseries property: the time series returned when a data query is performed.
     *
     * @return the timeseries value.
     */
    public List<TimeSeriesElement> getTimeseries() {
        return this.timeseries;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (getId() == null) {
            throw new IllegalArgumentException("Missing required property id in model Metric");
        }
        if (getType() == null) {
            throw new IllegalArgumentException("Missing required property type in model Metric");
        }
        if (getName() == null) {
            throw new IllegalArgumentException("Missing required property name in model Metric");
        } else {
            getName().validate();
        }
        if (getUnit() == null) {
            throw new IllegalArgumentException("Missing required property metricsUnit in model Metric");
        }
        if (getTimeseries() == null) {
            throw new IllegalArgumentException("Missing required property timeseries in model Metric");
        } else {
            getTimeseries().forEach(e -> e.validate());
        }
    }
}
