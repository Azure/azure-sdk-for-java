// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.monitor.generated.generated;

import com.azure.resourcemanager.monitor.generated.models.AggregationTypeEnum;
import com.azure.resourcemanager.monitor.generated.models.DynamicMetricCriteria;
import com.azure.resourcemanager.monitor.generated.models.DynamicThresholdFailingPeriods;
import com.azure.resourcemanager.monitor.generated.models.DynamicThresholdOperator;
import com.azure.resourcemanager.monitor.generated.models.DynamicThresholdSensitivity;
import com.azure.resourcemanager.monitor.generated.models.MetricAlertAction;
import com.azure.resourcemanager.monitor.generated.models.MetricAlertMultipleResourceMultipleMetricCriteria;
import com.azure.resourcemanager.monitor.generated.models.MetricAlertSingleResourceMultipleMetricCriteria;
import com.azure.resourcemanager.monitor.generated.models.MetricCriteria;
import com.azure.resourcemanager.monitor.generated.models.MetricDimension;
import com.azure.resourcemanager.monitor.generated.models.Operator;
import com.azure.resourcemanager.monitor.generated.models.WebtestLocationAvailabilityCriteria;
import java.time.Duration;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/** Samples for MetricAlerts CreateOrUpdate. */
public final class MetricAlertsCreateOrUpdateSamples {
    /*
     * x-ms-original-file: specification/monitor/resource-manager/Microsoft.Insights/stable/2018-03-01/examples/createOrUpdateMetricAlertSubscription.json
     */
    /**
     * Sample code: Create or update an alert rule on Subscription.
     *
     * @param manager Entry point to MonitorManager.
     */
    public static void createOrUpdateAnAlertRuleOnSubscription(
        com.azure.resourcemanager.monitor.generated.MonitorManager manager) {
        manager
            .metricAlerts()
            .define("MetricAlertAtSubscriptionLevel")
            .withRegion("global")
            .withExistingResourceGroup("gigtest")
            .withSeverity(3)
            .withEnabled(true)
            .withScopes(Arrays.asList("/subscriptions/14ddf0c5-77c5-4b53-84f6-e1fa43ad68f7"))
            .withEvaluationFrequency(Duration.parse("PT1M"))
            .withWindowSize(Duration.parse("PT15M"))
            .withCriteria(
                new MetricAlertMultipleResourceMultipleMetricCriteria()
                    .withAllOf(
                        Arrays
                            .asList(
                                new MetricCriteria()
                                    .withName("High_CPU_80")
                                    .withMetricName("Percentage CPU")
                                    .withMetricNamespace("microsoft.compute/virtualmachines")
                                    .withTimeAggregation(AggregationTypeEnum.AVERAGE)
                                    .withDimensions(Arrays.asList())
                                    .withOperator(Operator.GREATER_THAN)
                                    .withThreshold(80.5))))
            .withTags(mapOf())
            .withDescription("This is the description of the rule1")
            .withTargetResourceType("Microsoft.Compute/virtualMachines")
            .withTargetResourceRegion("southcentralus")
            .withAutoMitigate(true)
            .withActions(
                Arrays
                    .asList(
                        new MetricAlertAction()
                            .withActionGroupId(
                                "/subscriptions/14ddf0c5-77c5-4b53-84f6-e1fa43ad68f7/resourcegroups/gigtest/providers/microsoft.insights/actiongroups/group2")
                            .withWebhookProperties(mapOf("key11", "value11", "key12", "value12"))))
            .create();
    }

    /*
     * x-ms-original-file: specification/monitor/resource-manager/Microsoft.Insights/stable/2018-03-01/examples/createOrUpdateMetricAlertResourceGroup.json
     */
    /**
     * Sample code: Create or update an alert rule on Resource group(s).
     *
     * @param manager Entry point to MonitorManager.
     */
    public static void createOrUpdateAnAlertRuleOnResourceGroupS(
        com.azure.resourcemanager.monitor.generated.MonitorManager manager) {
        manager
            .metricAlerts()
            .define("MetricAlertAtResourceGroupLevel")
            .withRegion("global")
            .withExistingResourceGroup("gigtest1")
            .withSeverity(3)
            .withEnabled(true)
            .withScopes(
                Arrays
                    .asList(
                        "/subscriptions/14ddf0c5-77c5-4b53-84f6-e1fa43ad68f7/resourceGroups/gigtest1",
                        "/subscriptions/14ddf0c5-77c5-4b53-84f6-e1fa43ad68f7/resourceGroups/gigtest2"))
            .withEvaluationFrequency(Duration.parse("PT1M"))
            .withWindowSize(Duration.parse("PT15M"))
            .withCriteria(
                new MetricAlertMultipleResourceMultipleMetricCriteria()
                    .withAllOf(
                        Arrays
                            .asList(
                                new MetricCriteria()
                                    .withName("High_CPU_80")
                                    .withMetricName("Percentage CPU")
                                    .withMetricNamespace("microsoft.compute/virtualmachines")
                                    .withTimeAggregation(AggregationTypeEnum.AVERAGE)
                                    .withDimensions(Arrays.asList())
                                    .withOperator(Operator.GREATER_THAN)
                                    .withThreshold(80.5))))
            .withTags(mapOf())
            .withDescription("This is the description of the rule1")
            .withTargetResourceType("Microsoft.Compute/virtualMachines")
            .withTargetResourceRegion("southcentralus")
            .withAutoMitigate(true)
            .withActions(
                Arrays
                    .asList(
                        new MetricAlertAction()
                            .withActionGroupId(
                                "/subscriptions/14ddf0c5-77c5-4b53-84f6-e1fa43ad68f7/resourcegroups/gigtest/providers/microsoft.insights/actiongroups/group2")
                            .withWebhookProperties(mapOf("key11", "value11", "key12", "value12"))))
            .create();
    }

    /*
     * x-ms-original-file: specification/monitor/resource-manager/Microsoft.Insights/stable/2018-03-01/examples/createOrUpdateMetricAlertWithDimensions.json
     */
    /**
     * Sample code: Create or update an alert rules with dimensions.
     *
     * @param manager Entry point to MonitorManager.
     */
    public static void createOrUpdateAnAlertRulesWithDimensions(
        com.azure.resourcemanager.monitor.generated.MonitorManager manager) {
        manager
            .metricAlerts()
            .define("MetricAlertOnMultipleDimensions")
            .withRegion("global")
            .withExistingResourceGroup("gigtest")
            .withSeverity(3)
            .withEnabled(true)
            .withScopes(
                Arrays
                    .asList(
                        "/subscriptions/14ddf0c5-77c5-4b53-84f6-e1fa43ad68f7/resourceGroups/gigtest/providers/Microsoft.KeyVault/vaults/keyVaultResource"))
            .withEvaluationFrequency(Duration.parse("PT1H"))
            .withWindowSize(Duration.parse("P1D"))
            .withCriteria(
                new MetricAlertMultipleResourceMultipleMetricCriteria()
                    .withAllOf(
                        Arrays
                            .asList(
                                new MetricCriteria()
                                    .withName("Metric1")
                                    .withMetricName("Availability")
                                    .withMetricNamespace("Microsoft.KeyVault/vaults")
                                    .withTimeAggregation(AggregationTypeEnum.AVERAGE)
                                    .withDimensions(
                                        Arrays
                                            .asList(
                                                new MetricDimension()
                                                    .withName("ActivityName")
                                                    .withOperator("Include")
                                                    .withValues(Arrays.asList("*")),
                                                new MetricDimension()
                                                    .withName("StatusCode")
                                                    .withOperator("Include")
                                                    .withValues(Arrays.asList("200"))))
                                    .withOperator(Operator.GREATER_THAN)
                                    .withThreshold(55.0))))
            .withTags(mapOf())
            .withDescription("This is the description of the rule1")
            .withAutoMitigate(true)
            .withActions(
                Arrays
                    .asList(
                        new MetricAlertAction()
                            .withActionGroupId(
                                "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/gigtest/providers/microsoft.insights/actiongroups/group2")
                            .withWebhookProperties(mapOf("key11", "value11", "key12", "value12"))))
            .create();
    }

    /*
     * x-ms-original-file: specification/monitor/resource-manager/Microsoft.Insights/stable/2018-03-01/examples/createOrUpdateWebTestMetricAlert.json
     */
    /**
     * Sample code: Create or update a web test alert rule.
     *
     * @param manager Entry point to MonitorManager.
     */
    public static void createOrUpdateAWebTestAlertRule(
        com.azure.resourcemanager.monitor.generated.MonitorManager manager) {
        manager
            .metricAlerts()
            .define("webtest-name-example")
            .withRegion("global")
            .withExistingResourceGroup("rg-example")
            .withSeverity(4)
            .withEnabled(true)
            .withScopes(
                Arrays
                    .asList(
                        "/subscriptions/12345678-1234-1234-1234-123456789101/resourcegroups/rg-example/providers/microsoft.insights/webtests/component-example",
                        "/subscriptions/12345678-1234-1234-1234-123456789101/resourcegroups/rg-example/providers/microsoft.insights/components/webtest-name-example"))
            .withEvaluationFrequency(Duration.parse("PT1M"))
            .withWindowSize(Duration.parse("PT15M"))
            .withCriteria(
                new WebtestLocationAvailabilityCriteria()
                    .withWebTestId(
                        "/subscriptions/12345678-1234-1234-1234-123456789101/resourcegroups/rg-example/providers/microsoft.insights/webtests/component-example")
                    .withComponentId(
                        "/subscriptions/12345678-1234-1234-1234-123456789101/resourcegroups/rg-example/providers/microsoft.insights/components/webtest-name-example")
                    .withFailedLocationCount(2f))
            .withTags(
                mapOf(
                    "hidden-link:/subscriptions/12345678-1234-1234-1234-123456789101/resourcegroups/rg-example/providers/microsoft.insights/components/webtest-name-example",
                    "Resource",
                    "hidden-link:/subscriptions/12345678-1234-1234-1234-123456789101/resourcegroups/rg-example/providers/microsoft.insights/webtests/component-example",
                    "Resource"))
            .withDescription("Automatically created alert rule for availability test \"component-example\" a")
            .withActions(Arrays.asList())
            .create();
    }

    /*
     * x-ms-original-file: specification/monitor/resource-manager/Microsoft.Insights/stable/2018-03-01/examples/createOrUpdateDynamicMetricAlertSingleResource.json
     */
    /**
     * Sample code: Create or update a dynamic alert rule for Single Resource.
     *
     * @param manager Entry point to MonitorManager.
     */
    public static void createOrUpdateADynamicAlertRuleForSingleResource(
        com.azure.resourcemanager.monitor.generated.MonitorManager manager) {
        manager
            .metricAlerts()
            .define("chiricutin")
            .withRegion("global")
            .withExistingResourceGroup("gigtest")
            .withSeverity(3)
            .withEnabled(true)
            .withScopes(
                Arrays
                    .asList(
                        "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/gigtest/providers/Microsoft.Compute/virtualMachines/gigwadme"))
            .withEvaluationFrequency(Duration.parse("PT1M"))
            .withWindowSize(Duration.parse("PT15M"))
            .withCriteria(
                new MetricAlertMultipleResourceMultipleMetricCriteria()
                    .withAllOf(
                        Arrays
                            .asList(
                                new DynamicMetricCriteria()
                                    .withName("High_CPU_80")
                                    .withMetricName("Percentage CPU")
                                    .withMetricNamespace("microsoft.compute/virtualmachines")
                                    .withTimeAggregation(AggregationTypeEnum.AVERAGE)
                                    .withDimensions(Arrays.asList())
                                    .withOperator(DynamicThresholdOperator.GREATER_OR_LESS_THAN)
                                    .withAlertSensitivity(DynamicThresholdSensitivity.MEDIUM)
                                    .withFailingPeriods(
                                        new DynamicThresholdFailingPeriods()
                                            .withNumberOfEvaluationPeriods(4f)
                                            .withMinFailingPeriodsToAlert(4f))
                                    .withIgnoreDataBefore(OffsetDateTime.parse("2019-04-04T21:00:00.000Z")))))
            .withTags(mapOf())
            .withDescription("This is the description of the rule1")
            .withAutoMitigate(true)
            .withActions(
                Arrays
                    .asList(
                        new MetricAlertAction()
                            .withActionGroupId(
                                "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/gigtest/providers/microsoft.insights/actiongroups/group2")
                            .withWebhookProperties(mapOf("key11", "value11", "key12", "value12"))))
            .create();
    }

    /*
     * x-ms-original-file: specification/monitor/resource-manager/Microsoft.Insights/stable/2018-03-01/examples/createOrUpdateMetricAlertSingleResource.json
     */
    /**
     * Sample code: Create or update an alert rule for Single Resource.
     *
     * @param manager Entry point to MonitorManager.
     */
    public static void createOrUpdateAnAlertRuleForSingleResource(
        com.azure.resourcemanager.monitor.generated.MonitorManager manager) {
        manager
            .metricAlerts()
            .define("chiricutin")
            .withRegion("global")
            .withExistingResourceGroup("gigtest")
            .withSeverity(3)
            .withEnabled(true)
            .withScopes(
                Arrays
                    .asList(
                        "/subscriptions/14ddf0c5-77c5-4b53-84f6-e1fa43ad68f7/resourceGroups/gigtest/providers/Microsoft.Compute/virtualMachines/gigwadme"))
            .withEvaluationFrequency(Duration.parse("Pt1m"))
            .withWindowSize(Duration.parse("Pt15m"))
            .withCriteria(
                new MetricAlertSingleResourceMultipleMetricCriteria()
                    .withAllOf(
                        Arrays
                            .asList(
                                new MetricCriteria()
                                    .withName("High_CPU_80")
                                    .withMetricName("\\Processor(_Total)\\% Processor Time")
                                    .withTimeAggregation(AggregationTypeEnum.AVERAGE)
                                    .withDimensions(Arrays.asList())
                                    .withOperator(Operator.GREATER_THAN)
                                    .withThreshold(80.5))))
            .withTags(mapOf())
            .withDescription("This is the description of the rule1")
            .withAutoMitigate(true)
            .withActions(
                Arrays
                    .asList(
                        new MetricAlertAction()
                            .withActionGroupId(
                                "/subscriptions/14ddf0c5-77c5-4b53-84f6-e1fa43ad68f7/resourcegroups/gigtest/providers/microsoft.insights/actiongroups/group2")
                            .withWebhookProperties(mapOf("key11", "value11", "key12", "value12"))))
            .create();
    }

    /*
     * x-ms-original-file: specification/monitor/resource-manager/Microsoft.Insights/stable/2018-03-01/examples/createOrUpdateMetricAlertMultipleResource.json
     */
    /**
     * Sample code: Create or update an alert rule for Multiple Resource.
     *
     * @param manager Entry point to MonitorManager.
     */
    public static void createOrUpdateAnAlertRuleForMultipleResource(
        com.azure.resourcemanager.monitor.generated.MonitorManager manager) {
        manager
            .metricAlerts()
            .define("MetricAlertOnMultipleResources")
            .withRegion("global")
            .withExistingResourceGroup("gigtest")
            .withSeverity(3)
            .withEnabled(true)
            .withScopes(
                Arrays
                    .asList(
                        "/subscriptions/14ddf0c5-77c5-4b53-84f6-e1fa43ad68f7/resourceGroups/gigtest/providers/Microsoft.Compute/virtualMachines/gigwadme1",
                        "/subscriptions/14ddf0c5-77c5-4b53-84f6-e1fa43ad68f7/resourceGroups/gigtest/providers/Microsoft.Compute/virtualMachines/gigwadme2"))
            .withEvaluationFrequency(Duration.parse("PT1M"))
            .withWindowSize(Duration.parse("PT15M"))
            .withCriteria(
                new MetricAlertMultipleResourceMultipleMetricCriteria()
                    .withAllOf(
                        Arrays
                            .asList(
                                new MetricCriteria()
                                    .withName("High_CPU_80")
                                    .withMetricName("Percentage CPU")
                                    .withMetricNamespace("microsoft.compute/virtualmachines")
                                    .withTimeAggregation(AggregationTypeEnum.AVERAGE)
                                    .withDimensions(Arrays.asList())
                                    .withOperator(Operator.GREATER_THAN)
                                    .withThreshold(80.5))))
            .withTags(mapOf())
            .withDescription("This is the description of the rule1")
            .withTargetResourceType("Microsoft.Compute/virtualMachines")
            .withTargetResourceRegion("southcentralus")
            .withAutoMitigate(true)
            .withActions(
                Arrays
                    .asList(
                        new MetricAlertAction()
                            .withActionGroupId(
                                "/subscriptions/14ddf0c5-77c5-4b53-84f6-e1fa43ad68f7/resourcegroups/gigtest/providers/microsoft.insights/actiongroups/group2")
                            .withWebhookProperties(mapOf("key11", "value11", "key12", "value12"))))
            .create();
    }

    /*
     * x-ms-original-file: specification/monitor/resource-manager/Microsoft.Insights/stable/2018-03-01/examples/createOrUpdateDynamicMetricAlertMultipleResource.json
     */
    /**
     * Sample code: Create or update a dynamic alert rule for Multiple Resources.
     *
     * @param manager Entry point to MonitorManager.
     */
    public static void createOrUpdateADynamicAlertRuleForMultipleResources(
        com.azure.resourcemanager.monitor.generated.MonitorManager manager) {
        manager
            .metricAlerts()
            .define("MetricAlertOnMultipleResources")
            .withRegion("global")
            .withExistingResourceGroup("gigtest")
            .withSeverity(3)
            .withEnabled(true)
            .withScopes(
                Arrays
                    .asList(
                        "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/gigtest/providers/Microsoft.Compute/virtualMachines/gigwadme1",
                        "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/gigtest/providers/Microsoft.Compute/virtualMachines/gigwadme2"))
            .withEvaluationFrequency(Duration.parse("PT1M"))
            .withWindowSize(Duration.parse("PT15M"))
            .withCriteria(
                new MetricAlertMultipleResourceMultipleMetricCriteria()
                    .withAllOf(
                        Arrays
                            .asList(
                                new DynamicMetricCriteria()
                                    .withName("High_CPU_80")
                                    .withMetricName("Percentage CPU")
                                    .withMetricNamespace("microsoft.compute/virtualmachines")
                                    .withTimeAggregation(AggregationTypeEnum.AVERAGE)
                                    .withDimensions(Arrays.asList())
                                    .withOperator(DynamicThresholdOperator.GREATER_OR_LESS_THAN)
                                    .withAlertSensitivity(DynamicThresholdSensitivity.MEDIUM)
                                    .withFailingPeriods(
                                        new DynamicThresholdFailingPeriods()
                                            .withNumberOfEvaluationPeriods(4f)
                                            .withMinFailingPeriodsToAlert(4f)))))
            .withTags(mapOf())
            .withDescription("This is the description of the rule1")
            .withTargetResourceType("Microsoft.Compute/virtualMachines")
            .withTargetResourceRegion("southcentralus")
            .withAutoMitigate(true)
            .withActions(
                Arrays
                    .asList(
                        new MetricAlertAction()
                            .withActionGroupId(
                                "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/gigtest/providers/microsoft.insights/actiongroups/group2")
                            .withWebhookProperties(mapOf("key11", "value11", "key12", "value12"))))
            .create();
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
