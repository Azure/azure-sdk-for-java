// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.monitor.generated.generated;

import com.azure.resourcemanager.monitor.generated.models.LogSettings;
import com.azure.resourcemanager.monitor.generated.models.MetricSettings;
import com.azure.resourcemanager.monitor.generated.models.RetentionPolicy;
import java.util.Arrays;

/** Samples for DiagnosticSettingsOperation CreateOrUpdate. */
public final class DiagnosticSettingsOperationCreateOrUpdateSamples {
    /*
     * x-ms-original-file: specification/monitor/resource-manager/Microsoft.Insights/preview/2017-05-01-preview/examples/createOrUpdateDiagnosticSetting.json
     */
    /**
     * Sample code: Creates or Updates the diagnostic setting.
     *
     * @param manager Entry point to MonitorManager.
     */
    public static void createsOrUpdatesTheDiagnosticSetting(
        com.azure.resourcemanager.monitor.generated.MonitorManager manager) {
        manager
            .diagnosticSettingsOperations()
            .define("mysetting")
            .withExistingResourceUri(
                "subscriptions/1a66ce04-b633-4a0b-b2bc-a912ec8986a6/resourcegroups/viruela1/providers/microsoft.logic/workflows/viruela6")
            .withStorageAccountId(
                "/subscriptions/df602c9c-7aa0-407d-a6fb-eb20c8bd1192/resourceGroups/apptest/providers/Microsoft.Storage/storageAccounts/appteststorage1")
            .withEventHubAuthorizationRuleId(
                "/subscriptions/1a66ce04-b633-4a0b-b2bc-a912ec8986a6/resourceGroups/montest/providers/microsoft.eventhub/namespaces/mynamespace/eventhubs/myeventhub/authorizationrules/myrule")
            .withEventHubName("myeventhub")
            .withMetrics(
                Arrays
                    .asList(
                        new MetricSettings()
                            .withCategory("WorkflowMetrics")
                            .withEnabled(true)
                            .withRetentionPolicy(new RetentionPolicy().withEnabled(false).withDays(0))))
            .withLogs(
                Arrays
                    .asList(
                        new LogSettings()
                            .withCategory("WorkflowRuntime")
                            .withEnabled(true)
                            .withRetentionPolicy(new RetentionPolicy().withEnabled(false).withDays(0))))
            .withWorkspaceId("")
            .withLogAnalyticsDestinationType("Dedicated")
            .create();
    }
}
