// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.monitor.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.monitor.generated.MonitorManager;
import com.azure.resourcemanager.monitor.generated.fluent.BaselinesClient;
import com.azure.resourcemanager.monitor.generated.fluent.models.SingleMetricBaselineInner;
import com.azure.resourcemanager.monitor.generated.models.Baselines;
import com.azure.resourcemanager.monitor.generated.models.ResultType;
import com.azure.resourcemanager.monitor.generated.models.SingleMetricBaseline;
import com.fasterxml.jackson.annotation.JsonIgnore;
import java.time.Duration;

public final class BaselinesImpl implements Baselines {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(BaselinesImpl.class);

    private final BaselinesClient innerClient;

    private final MonitorManager serviceManager;

    public BaselinesImpl(BaselinesClient innerClient, MonitorManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<SingleMetricBaseline> list(String resourceUri) {
        PagedIterable<SingleMetricBaselineInner> inner = this.serviceClient().list(resourceUri);
        return inner.mapPage(inner1 -> new SingleMetricBaselineImpl(inner1, this.manager()));
    }

    public PagedIterable<SingleMetricBaseline> list(
        String resourceUri,
        String metricnames,
        String metricnamespace,
        String timespan,
        Duration interval,
        String aggregation,
        String sensitivities,
        String filter,
        ResultType resultType,
        Context context) {
        PagedIterable<SingleMetricBaselineInner> inner =
            this
                .serviceClient()
                .list(
                    resourceUri,
                    metricnames,
                    metricnamespace,
                    timespan,
                    interval,
                    aggregation,
                    sensitivities,
                    filter,
                    resultType,
                    context);
        return inner.mapPage(inner1 -> new SingleMetricBaselineImpl(inner1, this.manager()));
    }

    private BaselinesClient serviceClient() {
        return this.innerClient;
    }

    private MonitorManager manager() {
        return this.serviceManager;
    }
}
