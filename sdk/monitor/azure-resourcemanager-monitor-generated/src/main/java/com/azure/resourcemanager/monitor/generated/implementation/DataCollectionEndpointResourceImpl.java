// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.monitor.generated.implementation;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.monitor.generated.fluent.models.DataCollectionEndpointResourceInner;
import com.azure.resourcemanager.monitor.generated.models.DataCollectionEndpointConfigurationAccess;
import com.azure.resourcemanager.monitor.generated.models.DataCollectionEndpointLogsIngestion;
import com.azure.resourcemanager.monitor.generated.models.DataCollectionEndpointNetworkAcls;
import com.azure.resourcemanager.monitor.generated.models.DataCollectionEndpointResource;
import com.azure.resourcemanager.monitor.generated.models.DataCollectionEndpointResourceSystemData;
import com.azure.resourcemanager.monitor.generated.models.KnownDataCollectionEndpointProvisioningState;
import com.azure.resourcemanager.monitor.generated.models.KnownDataCollectionEndpointResourceKind;
import com.azure.resourcemanager.monitor.generated.models.ResourceForUpdate;
import java.util.Collections;
import java.util.Map;

public final class DataCollectionEndpointResourceImpl
    implements DataCollectionEndpointResource,
        DataCollectionEndpointResource.Definition,
        DataCollectionEndpointResource.Update {
    private DataCollectionEndpointResourceInner innerObject;

    private final com.azure.resourcemanager.monitor.generated.MonitorManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public KnownDataCollectionEndpointResourceKind kind() {
        return this.innerModel().kind();
    }

    public String etag() {
        return this.innerModel().etag();
    }

    public DataCollectionEndpointResourceSystemData systemData() {
        return this.innerModel().systemData();
    }

    public String description() {
        return this.innerModel().description();
    }

    public String immutableId() {
        return this.innerModel().immutableId();
    }

    public DataCollectionEndpointConfigurationAccess configurationAccess() {
        return this.innerModel().configurationAccess();
    }

    public DataCollectionEndpointLogsIngestion logsIngestion() {
        return this.innerModel().logsIngestion();
    }

    public DataCollectionEndpointNetworkAcls networkAcls() {
        return this.innerModel().networkAcls();
    }

    public KnownDataCollectionEndpointProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public DataCollectionEndpointResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.monitor.generated.MonitorManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String dataCollectionEndpointName;

    private ResourceForUpdate updateBody;

    public DataCollectionEndpointResourceImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public DataCollectionEndpointResource create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDataCollectionEndpoints()
                .createWithResponse(resourceGroupName, dataCollectionEndpointName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public DataCollectionEndpointResource create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDataCollectionEndpoints()
                .createWithResponse(resourceGroupName, dataCollectionEndpointName, this.innerModel(), context)
                .getValue();
        return this;
    }

    DataCollectionEndpointResourceImpl(
        String name, com.azure.resourcemanager.monitor.generated.MonitorManager serviceManager) {
        this.innerObject = new DataCollectionEndpointResourceInner();
        this.serviceManager = serviceManager;
        this.dataCollectionEndpointName = name;
    }

    public DataCollectionEndpointResourceImpl update() {
        this.updateBody = new ResourceForUpdate();
        return this;
    }

    public DataCollectionEndpointResource apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDataCollectionEndpoints()
                .updateWithResponse(resourceGroupName, dataCollectionEndpointName, updateBody, Context.NONE)
                .getValue();
        return this;
    }

    public DataCollectionEndpointResource apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDataCollectionEndpoints()
                .updateWithResponse(resourceGroupName, dataCollectionEndpointName, updateBody, context)
                .getValue();
        return this;
    }

    DataCollectionEndpointResourceImpl(
        DataCollectionEndpointResourceInner innerObject,
        com.azure.resourcemanager.monitor.generated.MonitorManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.dataCollectionEndpointName = Utils.getValueFromIdByName(innerObject.id(), "dataCollectionEndpoints");
    }

    public DataCollectionEndpointResource refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDataCollectionEndpoints()
                .getByResourceGroupWithResponse(resourceGroupName, dataCollectionEndpointName, Context.NONE)
                .getValue();
        return this;
    }

    public DataCollectionEndpointResource refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDataCollectionEndpoints()
                .getByResourceGroupWithResponse(resourceGroupName, dataCollectionEndpointName, context)
                .getValue();
        return this;
    }

    public DataCollectionEndpointResourceImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public DataCollectionEndpointResourceImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public DataCollectionEndpointResourceImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateBody.withTags(tags);
            return this;
        }
    }

    public DataCollectionEndpointResourceImpl withKind(KnownDataCollectionEndpointResourceKind kind) {
        this.innerModel().withKind(kind);
        return this;
    }

    public DataCollectionEndpointResourceImpl withDescription(String description) {
        this.innerModel().withDescription(description);
        return this;
    }

    public DataCollectionEndpointResourceImpl withImmutableId(String immutableId) {
        this.innerModel().withImmutableId(immutableId);
        return this;
    }

    public DataCollectionEndpointResourceImpl withConfigurationAccess(
        DataCollectionEndpointConfigurationAccess configurationAccess) {
        this.innerModel().withConfigurationAccess(configurationAccess);
        return this;
    }

    public DataCollectionEndpointResourceImpl withLogsIngestion(DataCollectionEndpointLogsIngestion logsIngestion) {
        this.innerModel().withLogsIngestion(logsIngestion);
        return this;
    }

    public DataCollectionEndpointResourceImpl withNetworkAcls(DataCollectionEndpointNetworkAcls networkAcls) {
        this.innerModel().withNetworkAcls(networkAcls);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
