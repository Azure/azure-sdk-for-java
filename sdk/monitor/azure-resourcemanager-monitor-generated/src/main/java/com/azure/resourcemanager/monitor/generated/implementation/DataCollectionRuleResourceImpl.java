// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.monitor.generated.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.monitor.generated.fluent.models.DataCollectionRuleResourceInner;
import com.azure.resourcemanager.monitor.generated.models.DataCollectionRuleResource;
import com.azure.resourcemanager.monitor.generated.models.KnownDataCollectionRuleResourceKind;
import com.azure.resourcemanager.monitor.generated.models.ResourceForUpdate;
import java.util.Collections;
import java.util.Map;

public final class DataCollectionRuleResourceImpl
    implements DataCollectionRuleResource, DataCollectionRuleResource.Definition, DataCollectionRuleResource.Update {
    private DataCollectionRuleResourceInner innerObject;

    private final com.azure.resourcemanager.monitor.generated.MonitorManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public KnownDataCollectionRuleResourceKind kind() {
        return this.innerModel().kind();
    }

    public String etag() {
        return this.innerModel().etag();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public DataCollectionRuleResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.monitor.generated.MonitorManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String dataCollectionRuleName;

    private ResourceForUpdate updateBody;

    public DataCollectionRuleResourceImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public DataCollectionRuleResource create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDataCollectionRules()
                .createWithResponse(resourceGroupName, dataCollectionRuleName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public DataCollectionRuleResource create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDataCollectionRules()
                .createWithResponse(resourceGroupName, dataCollectionRuleName, this.innerModel(), context)
                .getValue();
        return this;
    }

    DataCollectionRuleResourceImpl(
        String name, com.azure.resourcemanager.monitor.generated.MonitorManager serviceManager) {
        this.innerObject = new DataCollectionRuleResourceInner();
        this.serviceManager = serviceManager;
        this.dataCollectionRuleName = name;
    }

    public DataCollectionRuleResourceImpl update() {
        this.updateBody = new ResourceForUpdate();
        return this;
    }

    public DataCollectionRuleResource apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDataCollectionRules()
                .updateWithResponse(resourceGroupName, dataCollectionRuleName, updateBody, Context.NONE)
                .getValue();
        return this;
    }

    public DataCollectionRuleResource apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDataCollectionRules()
                .updateWithResponse(resourceGroupName, dataCollectionRuleName, updateBody, context)
                .getValue();
        return this;
    }

    DataCollectionRuleResourceImpl(
        DataCollectionRuleResourceInner innerObject,
        com.azure.resourcemanager.monitor.generated.MonitorManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.dataCollectionRuleName = Utils.getValueFromIdByName(innerObject.id(), "dataCollectionRules");
    }

    public DataCollectionRuleResource refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDataCollectionRules()
                .getByResourceGroupWithResponse(resourceGroupName, dataCollectionRuleName, Context.NONE)
                .getValue();
        return this;
    }

    public DataCollectionRuleResource refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDataCollectionRules()
                .getByResourceGroupWithResponse(resourceGroupName, dataCollectionRuleName, context)
                .getValue();
        return this;
    }

    public DataCollectionRuleResourceImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public DataCollectionRuleResourceImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public DataCollectionRuleResourceImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateBody.withTags(tags);
            return this;
        }
    }

    public DataCollectionRuleResourceImpl withKind(KnownDataCollectionRuleResourceKind kind) {
        this.innerModel().withKind(kind);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
