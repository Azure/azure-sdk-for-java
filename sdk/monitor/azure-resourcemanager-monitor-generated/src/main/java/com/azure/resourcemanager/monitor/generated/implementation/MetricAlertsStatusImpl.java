// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.monitor.generated.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.monitor.generated.MonitorManager;
import com.azure.resourcemanager.monitor.generated.fluent.MetricAlertsStatusClient;
import com.azure.resourcemanager.monitor.generated.fluent.models.MetricAlertStatusCollectionInner;
import com.azure.resourcemanager.monitor.generated.models.MetricAlertStatusCollection;
import com.azure.resourcemanager.monitor.generated.models.MetricAlertsStatus;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class MetricAlertsStatusImpl implements MetricAlertsStatus {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(MetricAlertsStatusImpl.class);

    private final MetricAlertsStatusClient innerClient;

    private final MonitorManager serviceManager;

    public MetricAlertsStatusImpl(MetricAlertsStatusClient innerClient, MonitorManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public MetricAlertStatusCollection list(String resourceGroupName, String ruleName) {
        MetricAlertStatusCollectionInner inner = this.serviceClient().list(resourceGroupName, ruleName);
        if (inner != null) {
            return new MetricAlertStatusCollectionImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<MetricAlertStatusCollection> listWithResponse(
        String resourceGroupName, String ruleName, Context context) {
        Response<MetricAlertStatusCollectionInner> inner =
            this.serviceClient().listWithResponse(resourceGroupName, ruleName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new MetricAlertStatusCollectionImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public MetricAlertStatusCollection listByName(String resourceGroupName, String ruleName, String statusName) {
        MetricAlertStatusCollectionInner inner =
            this.serviceClient().listByName(resourceGroupName, ruleName, statusName);
        if (inner != null) {
            return new MetricAlertStatusCollectionImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<MetricAlertStatusCollection> listByNameWithResponse(
        String resourceGroupName, String ruleName, String statusName, Context context) {
        Response<MetricAlertStatusCollectionInner> inner =
            this.serviceClient().listByNameWithResponse(resourceGroupName, ruleName, statusName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new MetricAlertStatusCollectionImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    private MetricAlertsStatusClient serviceClient() {
        return this.innerClient;
    }

    private MonitorManager manager() {
        return this.serviceManager;
    }
}
