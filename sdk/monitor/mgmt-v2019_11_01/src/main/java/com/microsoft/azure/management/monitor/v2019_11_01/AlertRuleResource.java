/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.monitor.v2019_11_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.arm.resources.models.Resource;
import com.microsoft.azure.arm.resources.models.GroupableResourceCore;
import com.microsoft.azure.arm.resources.models.HasResourceGroup;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.monitor.v2019_11_01.implementation.MonitorManager;
import java.util.List;
import org.joda.time.DateTime;
import com.microsoft.azure.management.monitor.v2019_11_01.implementation.AlertRuleResourceInner;

/**
 * Type representing AlertRuleResource.
 */
public interface AlertRuleResource extends HasInner<AlertRuleResourceInner>, Resource, GroupableResourceCore<MonitorManager, AlertRuleResourceInner>, HasResourceGroup, Refreshable<AlertRuleResource>, Updatable<AlertRuleResource.Update>, HasManager<MonitorManager> {
    /**
     * @return the actions value.
     */
    List<RuleAction> actions();

    /**
     * @return the alertRuleResourceName value.
     */
    String alertRuleResourceName();

    /**
     * @return the condition value.
     */
    RuleCondition condition();

    /**
     * @return the description value.
     */
    String description();

    /**
     * @return the isEnabled value.
     */
    boolean isEnabled();

    /**
     * @return the lastUpdatedTime value.
     */
    DateTime lastUpdatedTime();

    /**
     * The entirety of the AlertRuleResource definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithGroup, DefinitionStages.WithAlertRuleResourceName, DefinitionStages.WithCondition, DefinitionStages.WithIsEnabled, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of AlertRuleResource definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a AlertRuleResource definition.
         */
        interface Blank extends GroupableResourceCore.DefinitionWithRegion<WithGroup> {
        }

        /**
         * The stage of the AlertRuleResource definition allowing to specify the resource group.
         */
        interface WithGroup extends GroupableResourceCore.DefinitionStages.WithGroup<WithAlertRuleResourceName> {
        }

        /**
         * The stage of the alertruleresource definition allowing to specify AlertRuleResourceName.
         */
        interface WithAlertRuleResourceName {
           /**
            * Specifies alertRuleResourceName.
            * @param alertRuleResourceName the name of the alert rule
            * @return the next definition stage
*/
            WithCondition withAlertRuleResourceName(String alertRuleResourceName);
        }

        /**
         * The stage of the alertruleresource definition allowing to specify Condition.
         */
        interface WithCondition {
           /**
            * Specifies condition.
            * @param condition the condition that results in the alert rule being activated
            * @return the next definition stage
*/
            WithIsEnabled withCondition(RuleCondition condition);
        }

        /**
         * The stage of the alertruleresource definition allowing to specify IsEnabled.
         */
        interface WithIsEnabled {
           /**
            * Specifies isEnabled.
            * @param isEnabled the flag that indicates whether the alert rule is enabled
            * @return the next definition stage
*/
            WithCreate withIsEnabled(boolean isEnabled);
        }

        /**
         * The stage of the alertruleresource definition allowing to specify Actions.
         */
        interface WithActions {
            /**
             * Specifies actions.
             * @param actions the array of actions that are performed when the alert rule becomes active, and when an alert condition is resolved
             * @return the next definition stage
             */
            WithCreate withActions(List<RuleAction> actions);
        }

        /**
         * The stage of the alertruleresource definition allowing to specify Description.
         */
        interface WithDescription {
            /**
             * Specifies description.
             * @param description the description of the alert rule that will be included in the alert email
             * @return the next definition stage
             */
            WithCreate withDescription(String description);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<AlertRuleResource>, Resource.DefinitionWithTags<WithCreate>, DefinitionStages.WithActions, DefinitionStages.WithDescription {
        }
    }
    /**
     * The template for a AlertRuleResource update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<AlertRuleResource>, Resource.UpdateWithTags<Update>, UpdateStages.WithActions, UpdateStages.WithDescription {
    }

    /**
     * Grouping of AlertRuleResource update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the alertruleresource update allowing to specify Actions.
         */
        interface WithActions {
            /**
             * Specifies actions.
             * @param actions the array of actions that are performed when the alert rule becomes active, and when an alert condition is resolved
             * @return the next update stage
             */
            Update withActions(List<RuleAction> actions);
        }

        /**
         * The stage of the alertruleresource update allowing to specify Description.
         */
        interface WithDescription {
            /**
             * Specifies description.
             * @param description the description of the alert rule that will be included in the alert email
             * @return the next update stage
             */
            Update withDescription(String description);
        }

    }
}
