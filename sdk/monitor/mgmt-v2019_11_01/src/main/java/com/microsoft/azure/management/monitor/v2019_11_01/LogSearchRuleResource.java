/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.monitor.v2019_11_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.arm.resources.models.Resource;
import com.microsoft.azure.arm.resources.models.GroupableResourceCore;
import com.microsoft.azure.arm.resources.models.HasResourceGroup;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.monitor.v2019_11_01.implementation.MonitorManager;
import org.joda.time.DateTime;
import com.microsoft.azure.management.monitor.v2019_11_01.implementation.LogSearchRuleResourceInner;

/**
 * Type representing LogSearchRuleResource.
 */
public interface LogSearchRuleResource extends HasInner<LogSearchRuleResourceInner>, Resource, GroupableResourceCore<MonitorManager, LogSearchRuleResourceInner>, HasResourceGroup, Refreshable<LogSearchRuleResource>, Updatable<LogSearchRuleResource.Update>, HasManager<MonitorManager> {
    /**
     * @return the action value.
     */
    Action action();

    /**
     * @return the description value.
     */
    String description();

    /**
     * @return the enabled value.
     */
    Enabled enabled();

    /**
     * @return the lastUpdatedTime value.
     */
    DateTime lastUpdatedTime();

    /**
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * @return the schedule value.
     */
    Schedule schedule();

    /**
     * @return the source value.
     */
    Source source();

    /**
     * The entirety of the LogSearchRuleResource definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithGroup, DefinitionStages.WithAction, DefinitionStages.WithSource, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of LogSearchRuleResource definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a LogSearchRuleResource definition.
         */
        interface Blank extends GroupableResourceCore.DefinitionWithRegion<WithGroup> {
        }

        /**
         * The stage of the LogSearchRuleResource definition allowing to specify the resource group.
         */
        interface WithGroup extends GroupableResourceCore.DefinitionStages.WithGroup<WithAction> {
        }

        /**
         * The stage of the logsearchruleresource definition allowing to specify Action.
         */
        interface WithAction {
           /**
            * Specifies action.
            * @param action Action needs to be taken on rule execution
            * @return the next definition stage
*/
            WithSource withAction(Action action);
        }

        /**
         * The stage of the logsearchruleresource definition allowing to specify Source.
         */
        interface WithSource {
           /**
            * Specifies source.
            * @param source Data Source against which rule will Query Data
            * @return the next definition stage
*/
            WithCreate withSource(Source source);
        }

        /**
         * The stage of the logsearchruleresource definition allowing to specify Description.
         */
        interface WithDescription {
            /**
             * Specifies description.
             * @param description The description of the Log Search rule
             * @return the next definition stage
             */
            WithCreate withDescription(String description);
        }

        /**
         * The stage of the logsearchruleresource definition allowing to specify Enabled.
         */
        interface WithEnabled {
            /**
             * Specifies enabled.
             * @param enabled The flag which indicates whether the Log Search rule is enabled. Value should be true or false. Possible values include: 'true', 'false'
             * @return the next definition stage
             */
            WithCreate withEnabled(Enabled enabled);
        }

        /**
         * The stage of the logsearchruleresource definition allowing to specify Schedule.
         */
        interface WithSchedule {
            /**
             * Specifies schedule.
             * @param schedule Schedule (Frequency, Time Window) for rule. Required for action type - AlertingAction
             * @return the next definition stage
             */
            WithCreate withSchedule(Schedule schedule);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<LogSearchRuleResource>, Resource.DefinitionWithTags<WithCreate>, DefinitionStages.WithDescription, DefinitionStages.WithEnabled, DefinitionStages.WithSchedule {
        }
    }
    /**
     * The template for a LogSearchRuleResource update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<LogSearchRuleResource>, Resource.UpdateWithTags<Update>, UpdateStages.WithEnabled {
    }

    /**
     * Grouping of LogSearchRuleResource update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the logsearchruleresource update allowing to specify Enabled.
         */
        interface WithEnabled {
            /**
             * Specifies enabled.
             * @param enabled The flag which indicates whether the Log Search rule is enabled. Value should be true or false. Possible values include: 'true', 'false'
             * @return the next update stage
             */
            Update withEnabled(Enabled enabled);
        }

    }
}
