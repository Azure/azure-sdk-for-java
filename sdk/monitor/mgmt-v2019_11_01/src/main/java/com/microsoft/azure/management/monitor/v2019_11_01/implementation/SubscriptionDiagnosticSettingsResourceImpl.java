/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 *
 */

package com.microsoft.azure.management.monitor.v2019_11_01.implementation;

import com.microsoft.azure.management.monitor.v2019_11_01.SubscriptionDiagnosticSettingsResource;
import com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl;
import rx.Observable;
import java.util.List;
import com.microsoft.azure.management.monitor.v2019_11_01.SubscriptionLogSettings;

class SubscriptionDiagnosticSettingsResourceImpl extends CreatableUpdatableImpl<SubscriptionDiagnosticSettingsResource, SubscriptionDiagnosticSettingsResourceInner, SubscriptionDiagnosticSettingsResourceImpl> implements SubscriptionDiagnosticSettingsResource, SubscriptionDiagnosticSettingsResource.Definition, SubscriptionDiagnosticSettingsResource.Update {
    private String name;
    private final MonitorManager manager;

    SubscriptionDiagnosticSettingsResourceImpl(String name, MonitorManager manager) {
        super(name, new SubscriptionDiagnosticSettingsResourceInner());
        this.manager = manager;
        // Set resource name
        this.name = name;
        //
    }

    SubscriptionDiagnosticSettingsResourceImpl(SubscriptionDiagnosticSettingsResourceInner inner, MonitorManager manager) {
        super(inner.name(), inner);
        this.manager = manager;
        // Set resource name
        this.name = inner.name();
        // set resource ancestor and positional variables
        this.name = IdParsingUtils.getValueFromIdByName(inner.id(), "diagnosticSettings");
        // set other parameters for create and update
    }

    @Override
    public MonitorManager manager() {
        return this.manager;
    }

    @Override
    public Observable<SubscriptionDiagnosticSettingsResource> createResourceAsync() {
        SubscriptionDiagnosticSettingsInner client = this.manager().inner().subscriptionDiagnosticSettings();
        return client.createOrUpdateAsync(this.name, this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    public Observable<SubscriptionDiagnosticSettingsResource> updateResourceAsync() {
        SubscriptionDiagnosticSettingsInner client = this.manager().inner().subscriptionDiagnosticSettings();
        return client.createOrUpdateAsync(this.name, this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<SubscriptionDiagnosticSettingsResourceInner> getInnerAsync() {
        SubscriptionDiagnosticSettingsInner client = this.manager().inner().subscriptionDiagnosticSettings();
        return client.getAsync(this.name);
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }


    @Override
    public String eventHubAuthorizationRuleId() {
        return this.inner().eventHubAuthorizationRuleId();
    }

    @Override
    public String eventHubName() {
        return this.inner().eventHubName();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public String location() {
        return this.inner().location();
    }

    @Override
    public List<SubscriptionLogSettings> logs() {
        return this.inner().logs();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public String serviceBusRuleId() {
        return this.inner().serviceBusRuleId();
    }

    @Override
    public String storageAccountId() {
        return this.inner().storageAccountId();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

    @Override
    public String workspaceId() {
        return this.inner().workspaceId();
    }

    @Override
    public SubscriptionDiagnosticSettingsResourceImpl withEventHubAuthorizationRuleId(String eventHubAuthorizationRuleId) {
        this.inner().withEventHubAuthorizationRuleId(eventHubAuthorizationRuleId);
        return this;
    }

    @Override
    public SubscriptionDiagnosticSettingsResourceImpl withEventHubName(String eventHubName) {
        this.inner().withEventHubName(eventHubName);
        return this;
    }

    @Override
    public SubscriptionDiagnosticSettingsResourceImpl withLocation(String location) {
        this.inner().withLocation(location);
        return this;
    }

    @Override
    public SubscriptionDiagnosticSettingsResourceImpl withLogs(List<SubscriptionLogSettings> logs) {
        this.inner().withLogs(logs);
        return this;
    }

    @Override
    public SubscriptionDiagnosticSettingsResourceImpl withServiceBusRuleId(String serviceBusRuleId) {
        this.inner().withServiceBusRuleId(serviceBusRuleId);
        return this;
    }

    @Override
    public SubscriptionDiagnosticSettingsResourceImpl withStorageAccountId(String storageAccountId) {
        this.inner().withStorageAccountId(storageAccountId);
        return this;
    }

    @Override
    public SubscriptionDiagnosticSettingsResourceImpl withWorkspaceId(String workspaceId) {
        this.inner().withWorkspaceId(workspaceId);
        return this;
    }

}
