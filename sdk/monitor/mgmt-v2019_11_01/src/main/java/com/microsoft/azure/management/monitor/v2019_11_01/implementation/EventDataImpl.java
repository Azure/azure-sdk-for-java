/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.monitor.v2019_11_01.implementation;

import com.microsoft.azure.management.monitor.v2019_11_01.EventData;
import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.monitor.v2019_11_01.SenderAuthorization;
import java.util.Map;
import org.joda.time.DateTime;
import com.microsoft.azure.management.monitor.v2019_11_01.HttpRequestInfo;
import com.microsoft.azure.management.monitor.v2019_11_01.EventLevel;

class EventDataImpl extends WrapperImpl<EventDataInner> implements EventData {
    private final MonitorManager manager;
    EventDataImpl(EventDataInner inner, MonitorManager manager) {
        super(inner);
        this.manager = manager;
    }

    @Override
    public MonitorManager manager() {
        return this.manager;
    }

    @Override
    public SenderAuthorization authorization() {
        return this.inner().authorization();
    }

    @Override
    public String caller() {
        return this.inner().caller();
    }

    @Override
    public LocalizableStringInner category() {
        return this.inner().category();
    }

    @Override
    public Map<String, String> claims() {
        return this.inner().claims();
    }

    @Override
    public String correlationId() {
        return this.inner().correlationId();
    }

    @Override
    public String description() {
        return this.inner().description();
    }

    @Override
    public String eventDataId() {
        return this.inner().eventDataId();
    }

    @Override
    public LocalizableStringInner eventName() {
        return this.inner().eventName();
    }

    @Override
    public DateTime eventTimestamp() {
        return this.inner().eventTimestamp();
    }

    @Override
    public HttpRequestInfo httpRequest() {
        return this.inner().httpRequest();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public EventLevel level() {
        return this.inner().level();
    }

    @Override
    public String operationId() {
        return this.inner().operationId();
    }

    @Override
    public LocalizableStringInner operationName() {
        return this.inner().operationName();
    }

    @Override
    public Map<String, String> properties() {
        return this.inner().properties();
    }

    @Override
    public String resourceGroupName() {
        return this.inner().resourceGroupName();
    }

    @Override
    public String resourceId() {
        return this.inner().resourceId();
    }

    @Override
    public LocalizableStringInner resourceProviderName() {
        return this.inner().resourceProviderName();
    }

    @Override
    public LocalizableStringInner resourceType() {
        return this.inner().resourceType();
    }

    @Override
    public LocalizableStringInner status() {
        return this.inner().status();
    }

    @Override
    public DateTime submissionTimestamp() {
        return this.inner().submissionTimestamp();
    }

    @Override
    public String subscriptionId() {
        return this.inner().subscriptionId();
    }

    @Override
    public LocalizableStringInner subStatus() {
        return this.inner().subStatus();
    }

    @Override
    public String tenantId() {
        return this.inner().tenantId();
    }

}
