/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.monitor.v2019_11_01.implementation;

import com.microsoft.azure.arm.resources.models.implementation.GroupableResourceCoreImpl;
import com.microsoft.azure.management.monitor.v2019_11_01.AutoscaleSettingResource;
import rx.Observable;
import com.microsoft.azure.management.monitor.v2019_11_01.AutoscaleSettingResourcePatch;
import java.util.List;
import com.microsoft.azure.management.monitor.v2019_11_01.AutoscaleProfile;
import com.microsoft.azure.management.monitor.v2019_11_01.AutoscaleNotification;
import rx.functions.Func1;

class AutoscaleSettingResourceImpl extends GroupableResourceCoreImpl<AutoscaleSettingResource, AutoscaleSettingResourceInner, AutoscaleSettingResourceImpl, MonitorManager> implements AutoscaleSettingResource, AutoscaleSettingResource.Definition, AutoscaleSettingResource.Update {
    private AutoscaleSettingResourcePatch updateParameter;
    AutoscaleSettingResourceImpl(String name, AutoscaleSettingResourceInner inner, MonitorManager manager) {
        super(name, inner, manager);
        this.updateParameter = new AutoscaleSettingResourcePatch();
    }

    @Override
    public Observable<AutoscaleSettingResource> createResourceAsync() {
        AutoscaleSettingsInner client = this.manager().inner().autoscaleSettings();
        return client.createOrUpdateAsync(this.resourceGroupName(), this.name(), this.inner())
            .map(new Func1<AutoscaleSettingResourceInner, AutoscaleSettingResourceInner>() {
               @Override
               public AutoscaleSettingResourceInner call(AutoscaleSettingResourceInner resource) {
                   resetCreateUpdateParameters();
                   return resource;
               }
            })
            .map(innerToFluentMap(this));
    }

    @Override
    public Observable<AutoscaleSettingResource> updateResourceAsync() {
        AutoscaleSettingsInner client = this.manager().inner().autoscaleSettings();
        return client.updateAsync(this.resourceGroupName(), this.name(), this.updateParameter)
            .map(new Func1<AutoscaleSettingResourceInner, AutoscaleSettingResourceInner>() {
               @Override
               public AutoscaleSettingResourceInner call(AutoscaleSettingResourceInner resource) {
                   resetCreateUpdateParameters();
                   return resource;
               }
            })
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<AutoscaleSettingResourceInner> getInnerAsync() {
        AutoscaleSettingsInner client = this.manager().inner().autoscaleSettings();
        return client.getByResourceGroupAsync(this.resourceGroupName(), this.name());
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }

    private void resetCreateUpdateParameters() {
        this.updateParameter = new AutoscaleSettingResourcePatch();
    }

    @Override
    public String autoscaleSettingResourceName() {
        return this.inner().autoscaleSettingResourceName();
    }

    @Override
    public Boolean enabled() {
        return this.inner().enabled();
    }

    @Override
    public List<AutoscaleNotification> notifications() {
        return this.inner().notifications();
    }

    @Override
    public List<AutoscaleProfile> profiles() {
        return this.inner().profiles();
    }

    @Override
    public String targetResourceUri() {
        return this.inner().targetResourceUri();
    }

    @Override
    public AutoscaleSettingResourceImpl withProfiles(List<AutoscaleProfile> profiles) {
        this.inner().withProfiles(profiles);
        return this;
    }

    @Override
    public AutoscaleSettingResourceImpl withAutoscaleSettingResourceName(String autoscaleSettingResourceName) {
        this.inner().withAutoscaleSettingResourceName(autoscaleSettingResourceName);
        return this;
    }

    @Override
    public AutoscaleSettingResourceImpl withEnabled(Boolean enabled) {
        if (isInCreateMode()) {
            this.inner().withEnabled(enabled);
        } else {
            this.updateParameter.withEnabled(enabled);
        }
        return this;
    }

    @Override
    public AutoscaleSettingResourceImpl withNotifications(List<AutoscaleNotification> notifications) {
        if (isInCreateMode()) {
            this.inner().withNotifications(notifications);
        } else {
            this.updateParameter.withNotifications(notifications);
        }
        return this;
    }

    @Override
    public AutoscaleSettingResourceImpl withTargetResourceUri(String targetResourceUri) {
        if (isInCreateMode()) {
            this.inner().withTargetResourceUri(targetResourceUri);
        } else {
            this.updateParameter.withTargetResourceUri(targetResourceUri);
        }
        return this;
    }

}
