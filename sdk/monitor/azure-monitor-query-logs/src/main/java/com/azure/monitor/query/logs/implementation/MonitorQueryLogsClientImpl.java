// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.monitor.query.logs.implementation;

import com.azure.core.annotation.BodyParam;
import com.azure.core.annotation.ExpectedResponses;
import com.azure.core.annotation.HeaderParam;
import com.azure.core.annotation.Host;
import com.azure.core.annotation.HostParam;
import com.azure.core.annotation.PathParam;
import com.azure.core.annotation.Post;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceInterface;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.annotation.UnexpectedResponseExceptionType;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.HttpPipeline;
import com.azure.core.http.HttpPipelineBuilder;
import com.azure.core.http.policy.RetryPolicy;
import com.azure.core.http.policy.UserAgentPolicy;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.RestProxy;
import com.azure.core.util.BinaryData;
import com.azure.core.util.Context;
import com.azure.core.util.FluxUtil;
import com.azure.core.util.serializer.JacksonAdapter;
import com.azure.core.util.serializer.SerializerAdapter;
import com.azure.monitor.query.logs.LogsQueryServiceVersion;
import reactor.core.publisher.Mono;

/**
 * Initializes a new instance of the MonitorQueryLogsClient type.
 */
public final class MonitorQueryLogsClientImpl {
    /**
     * The proxy service used to perform REST calls.
     */
    private final MonitorQueryLogsClientService service;

    /**
     * The Log Analytics service endpoint.
     */
    private final String endpoint;

    /**
     * Gets The Log Analytics service endpoint.
     * 
     * @return the endpoint value.
     */
    public String getEndpoint() {
        return this.endpoint;
    }

    /**
     * Service version.
     */
    private final LogsQueryServiceVersion serviceVersion;

    /**
     * Gets Service version.
     * 
     * @return the serviceVersion value.
     */
    public LogsQueryServiceVersion getServiceVersion() {
        return this.serviceVersion;
    }

    /**
     * The HTTP pipeline to send requests through.
     */
    private final HttpPipeline httpPipeline;

    /**
     * Gets The HTTP pipeline to send requests through.
     * 
     * @return the httpPipeline value.
     */
    public HttpPipeline getHttpPipeline() {
        return this.httpPipeline;
    }

    /**
     * The serializer to serialize an object into a string.
     */
    private final SerializerAdapter serializerAdapter;

    /**
     * Gets The serializer to serialize an object into a string.
     * 
     * @return the serializerAdapter value.
     */
    public SerializerAdapter getSerializerAdapter() {
        return this.serializerAdapter;
    }

    /**
     * Initializes an instance of MonitorQueryLogsClient client.
     * 
     * @param endpoint The Log Analytics service endpoint.
     * @param serviceVersion Service version.
     */
    MonitorQueryLogsClientImpl(String endpoint, LogsQueryServiceVersion serviceVersion) {
        this(new HttpPipelineBuilder().policies(new UserAgentPolicy(), new RetryPolicy()).build(),
            JacksonAdapter.createDefaultSerializerAdapter(), endpoint, serviceVersion);
    }

    /**
     * Initializes an instance of MonitorQueryLogsClient client.
     * 
     * @param httpPipeline The HTTP pipeline to send requests through.
     * @param endpoint The Log Analytics service endpoint.
     * @param serviceVersion Service version.
     */
    MonitorQueryLogsClientImpl(HttpPipeline httpPipeline, String endpoint, LogsQueryServiceVersion serviceVersion) {
        this(httpPipeline, JacksonAdapter.createDefaultSerializerAdapter(), endpoint, serviceVersion);
    }

    /**
     * Initializes an instance of MonitorQueryLogsClient client.
     * 
     * @param httpPipeline The HTTP pipeline to send requests through.
     * @param serializerAdapter The serializer to serialize an object into a string.
     * @param endpoint The Log Analytics service endpoint.
     * @param serviceVersion Service version.
     */
    MonitorQueryLogsClientImpl(HttpPipeline httpPipeline, SerializerAdapter serializerAdapter, String endpoint,
        LogsQueryServiceVersion serviceVersion) {
        this.httpPipeline = httpPipeline;
        this.serializerAdapter = serializerAdapter;
        this.endpoint = endpoint;
        this.serviceVersion = serviceVersion;
        this.service
            = RestProxy.create(MonitorQueryLogsClientService.class, this.httpPipeline, this.getSerializerAdapter());
    }

    /**
     * The interface defining all the services for MonitorQueryLogsClient to be used by the proxy service to perform
     * REST calls.
     */
    @Host("{endpoint}/{apiVersion}")
    @ServiceInterface(name = "MonitorQueryLogsClient")
    public interface MonitorQueryLogsClientService {
        @Post("/workspaces/{workspaceId}/query")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> execute(@HostParam("endpoint") String endpoint,
            @HostParam("apiVersion") String apiVersion, @PathParam("workspaceId") String workspaceId,
            @HeaderParam("content-type") String contentType, @HeaderParam("Accept") String accept,
            @BodyParam("application/json") BinaryData body, RequestOptions requestOptions, Context context);

        @Post("/workspaces/{workspaceId}/query")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Response<BinaryData> executeSync(@HostParam("endpoint") String endpoint,
            @HostParam("apiVersion") String apiVersion, @PathParam("workspaceId") String workspaceId,
            @HeaderParam("content-type") String contentType, @HeaderParam("Accept") String accept,
            @BodyParam("application/json") BinaryData body, RequestOptions requestOptions, Context context);

        @Post("/{resourceId}/query")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> executeWithResourceId(@HostParam("endpoint") String endpoint,
            @HostParam("apiVersion") String apiVersion, @PathParam("resourceId") String resourceId,
            @HeaderParam("content-type") String contentType, @HeaderParam("Accept") String accept,
            @BodyParam("application/json") BinaryData body, RequestOptions requestOptions, Context context);

        @Post("/{resourceId}/query")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Response<BinaryData> executeWithResourceIdSync(@HostParam("endpoint") String endpoint,
            @HostParam("apiVersion") String apiVersion, @PathParam("resourceId") String resourceId,
            @HeaderParam("content-type") String contentType, @HeaderParam("Accept") String accept,
            @BodyParam("application/json") BinaryData body, RequestOptions requestOptions, Context context);

        @Post("/$batch")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> batch(@HostParam("endpoint") String endpoint,
            @HostParam("apiVersion") String apiVersion, @HeaderParam("content-type") String contentType,
            @HeaderParam("Accept") String accept, @BodyParam("application/json") BinaryData body,
            RequestOptions requestOptions, Context context);

        @Post("/$batch")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Response<BinaryData> batchSync(@HostParam("endpoint") String endpoint,
            @HostParam("apiVersion") String apiVersion, @HeaderParam("content-type") String contentType,
            @HeaderParam("Accept") String accept, @BodyParam("application/json") BinaryData body,
            RequestOptions requestOptions, Context context);
    }

    /**
     * Execute an Analytics query
     * 
     * Executes an Analytics query for data.
     * [Here](https://learn.microsoft.com/azure/azure-monitor/logs/api/request-format)
     * is an example for using POST with an Analytics query.
     * <p><strong>Header Parameters</strong></p>
     * <table border="1">
     * <caption>Header Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>Prefer</td><td>String</td><td>No</td><td>Optional. The prefer header to set server timeout, query
     * statistics and visualization information.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addHeader}
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     query: String (Required)
     *     timespan: String (Optional)
     *     workspaces (Optional): [
     *         String (Optional)
     *     ]
     * }
     * }
     * </pre>
     * 
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     tables (Required): [
     *          (Required){
     *             name: String (Required)
     *             columns (Required): [
     *                  (Required){
     *                     name: String (Required)
     *                     type: String(bool/datetime/dynamic/int/long/real/string/guid/decimal/timespan) (Required)
     *                 }
     *             ]
     *             rows (Required): [
     *                  (Required)[
     *                     Object (Required)
     *                 ]
     *             ]
     *         }
     *     ]
     *     statistics (Optional): {
     *         String: Object (Required)
     *     }
     *     render (Optional): {
     *         String: Object (Required)
     *     }
     *     error (Optional): {
     *         code: String (Required)
     *         message: String (Required)
     *         details (Optional): [
     *              (Optional){
     *                 code: String (Required)
     *                 message: String (Required)
     *                 target: String (Optional)
     *                 value: String (Optional)
     *                 resources (Optional): [
     *                     String (Optional)
     *                 ]
     *                 additionalProperties (Optional): {
     *                     String: Object (Required)
     *                 }
     *             }
     *         ]
     *         innererror (Optional): (recursive schema, see innererror above)
     *         additionalProperties (Optional): {
     *             String: Object (Required)
     *         }
     *     }
     * }
     * }
     * </pre>
     * 
     * @param workspaceId Primary Workspace ID of the query. This is the Workspace ID from the Properties
     * blade in the Azure portal.
     * @param body The Analytics query. Learn more about the
     * [Analytics query syntax](https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/).
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return contains the tables, columns &amp; rows resulting from a query along with {@link Response} on successful
     * completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> executeWithResponseAsync(String workspaceId, BinaryData body,
        RequestOptions requestOptions) {
        final String contentType = "application/json";
        final String accept = "application/json";
        return FluxUtil.withContext(context -> service.execute(this.getEndpoint(),
            this.getServiceVersion().getVersion(), workspaceId, contentType, accept, body, requestOptions, context));
    }

    /**
     * Execute an Analytics query
     * 
     * Executes an Analytics query for data.
     * [Here](https://learn.microsoft.com/azure/azure-monitor/logs/api/request-format)
     * is an example for using POST with an Analytics query.
     * <p><strong>Header Parameters</strong></p>
     * <table border="1">
     * <caption>Header Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>Prefer</td><td>String</td><td>No</td><td>Optional. The prefer header to set server timeout, query
     * statistics and visualization information.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addHeader}
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     query: String (Required)
     *     timespan: String (Optional)
     *     workspaces (Optional): [
     *         String (Optional)
     *     ]
     * }
     * }
     * </pre>
     * 
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     tables (Required): [
     *          (Required){
     *             name: String (Required)
     *             columns (Required): [
     *                  (Required){
     *                     name: String (Required)
     *                     type: String(bool/datetime/dynamic/int/long/real/string/guid/decimal/timespan) (Required)
     *                 }
     *             ]
     *             rows (Required): [
     *                  (Required)[
     *                     Object (Required)
     *                 ]
     *             ]
     *         }
     *     ]
     *     statistics (Optional): {
     *         String: Object (Required)
     *     }
     *     render (Optional): {
     *         String: Object (Required)
     *     }
     *     error (Optional): {
     *         code: String (Required)
     *         message: String (Required)
     *         details (Optional): [
     *              (Optional){
     *                 code: String (Required)
     *                 message: String (Required)
     *                 target: String (Optional)
     *                 value: String (Optional)
     *                 resources (Optional): [
     *                     String (Optional)
     *                 ]
     *                 additionalProperties (Optional): {
     *                     String: Object (Required)
     *                 }
     *             }
     *         ]
     *         innererror (Optional): (recursive schema, see innererror above)
     *         additionalProperties (Optional): {
     *             String: Object (Required)
     *         }
     *     }
     * }
     * }
     * </pre>
     * 
     * @param workspaceId Primary Workspace ID of the query. This is the Workspace ID from the Properties
     * blade in the Azure portal.
     * @param body The Analytics query. Learn more about the
     * [Analytics query syntax](https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/).
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return contains the tables, columns &amp; rows resulting from a query along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> executeWithResponse(String workspaceId, BinaryData body,
        RequestOptions requestOptions) {
        final String contentType = "application/json";
        final String accept = "application/json";
        return service.executeSync(this.getEndpoint(), this.getServiceVersion().getVersion(), workspaceId, contentType,
            accept, body, requestOptions, Context.NONE);
    }

    /**
     * Execute an Analytics query using resource ID
     * 
     * Executes an Analytics query for data in the context of a resource.
     * [Here](https://learn.microsoft.com/azure/azure-monitor/logs/api/azure-resource-queries)
     * is an example for using POST with an Analytics query.
     * <p><strong>Header Parameters</strong></p>
     * <table border="1">
     * <caption>Header Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>Prefer</td><td>String</td><td>No</td><td>Optional. The prefer header to set server timeout, query
     * statistics and
     * visualization information.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addHeader}
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     query: String (Required)
     *     timespan: String (Optional)
     *     workspaces (Optional): [
     *         String (Optional)
     *     ]
     * }
     * }
     * </pre>
     * 
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     tables (Required): [
     *          (Required){
     *             name: String (Required)
     *             columns (Required): [
     *                  (Required){
     *                     name: String (Required)
     *                     type: String(bool/datetime/dynamic/int/long/real/string/guid/decimal/timespan) (Required)
     *                 }
     *             ]
     *             rows (Required): [
     *                  (Required)[
     *                     Object (Required)
     *                 ]
     *             ]
     *         }
     *     ]
     *     statistics (Optional): {
     *         String: Object (Required)
     *     }
     *     render (Optional): {
     *         String: Object (Required)
     *     }
     *     error (Optional): {
     *         code: String (Required)
     *         message: String (Required)
     *         details (Optional): [
     *              (Optional){
     *                 code: String (Required)
     *                 message: String (Required)
     *                 target: String (Optional)
     *                 value: String (Optional)
     *                 resources (Optional): [
     *                     String (Optional)
     *                 ]
     *                 additionalProperties (Optional): {
     *                     String: Object (Required)
     *                 }
     *             }
     *         ]
     *         innererror (Optional): (recursive schema, see innererror above)
     *         additionalProperties (Optional): {
     *             String: Object (Required)
     *         }
     *     }
     * }
     * }
     * </pre>
     * 
     * @param resourceId The identifier of the resource.
     * @param body The Analytics query. Learn more about the
     * [Analytics query syntax](https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/).
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return contains the tables, columns &amp; rows resulting from a query along with {@link Response} on successful
     * completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> executeWithResourceIdWithResponseAsync(String resourceId, BinaryData body,
        RequestOptions requestOptions) {
        final String contentType = "application/json";
        final String accept = "application/json";
        return FluxUtil.withContext(context -> service.executeWithResourceId(this.getEndpoint(),
            this.getServiceVersion().getVersion(), resourceId, contentType, accept, body, requestOptions, context));
    }

    /**
     * Execute an Analytics query using resource ID
     * 
     * Executes an Analytics query for data in the context of a resource.
     * [Here](https://learn.microsoft.com/azure/azure-monitor/logs/api/azure-resource-queries)
     * is an example for using POST with an Analytics query.
     * <p><strong>Header Parameters</strong></p>
     * <table border="1">
     * <caption>Header Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>Prefer</td><td>String</td><td>No</td><td>Optional. The prefer header to set server timeout, query
     * statistics and
     * visualization information.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addHeader}
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     query: String (Required)
     *     timespan: String (Optional)
     *     workspaces (Optional): [
     *         String (Optional)
     *     ]
     * }
     * }
     * </pre>
     * 
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     tables (Required): [
     *          (Required){
     *             name: String (Required)
     *             columns (Required): [
     *                  (Required){
     *                     name: String (Required)
     *                     type: String(bool/datetime/dynamic/int/long/real/string/guid/decimal/timespan) (Required)
     *                 }
     *             ]
     *             rows (Required): [
     *                  (Required)[
     *                     Object (Required)
     *                 ]
     *             ]
     *         }
     *     ]
     *     statistics (Optional): {
     *         String: Object (Required)
     *     }
     *     render (Optional): {
     *         String: Object (Required)
     *     }
     *     error (Optional): {
     *         code: String (Required)
     *         message: String (Required)
     *         details (Optional): [
     *              (Optional){
     *                 code: String (Required)
     *                 message: String (Required)
     *                 target: String (Optional)
     *                 value: String (Optional)
     *                 resources (Optional): [
     *                     String (Optional)
     *                 ]
     *                 additionalProperties (Optional): {
     *                     String: Object (Required)
     *                 }
     *             }
     *         ]
     *         innererror (Optional): (recursive schema, see innererror above)
     *         additionalProperties (Optional): {
     *             String: Object (Required)
     *         }
     *     }
     * }
     * }
     * </pre>
     * 
     * @param resourceId The identifier of the resource.
     * @param body The Analytics query. Learn more about the
     * [Analytics query syntax](https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/).
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return contains the tables, columns &amp; rows resulting from a query along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> executeWithResourceIdWithResponse(String resourceId, BinaryData body,
        RequestOptions requestOptions) {
        final String contentType = "application/json";
        final String accept = "application/json";
        return service.executeWithResourceIdSync(this.getEndpoint(), this.getServiceVersion().getVersion(), resourceId,
            contentType, accept, body, requestOptions, Context.NONE);
    }

    /**
     * Execute a batch of Analytics queries
     * 
     * Executes a batch of Analytics queries for data.
     * [Here](https://learn.microsoft.com/azure/azure-monitor/logs/api/batch-queries)
     * is an example for using POST with an Analytics query.
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     requests (Required): [
     *          (Required){
     *             id: String (Required)
     *             headers (Optional): {
     *                 String: String (Required)
     *             }
     *             body (Required): {
     *                 query: String (Required)
     *                 timespan: String (Optional)
     *                 workspaces (Optional): [
     *                     String (Optional)
     *                 ]
     *             }
     *             path: String (Required)
     *             method: String (Required)
     *             workspace: String (Required)
     *         }
     *     ]
     * }
     * }
     * </pre>
     * 
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     responses (Optional): [
     *          (Optional){
     *             id: String (Optional)
     *             status: Integer (Optional)
     *             body (Optional): {
     *                 tables (Optional): [
     *                      (Optional){
     *                         name: String (Required)
     *                         columns (Required): [
     *                              (Required){
     *                                 name: String (Required)
     *                                 type: String(bool/datetime/dynamic/int/long/real/string/guid/decimal/timespan) (Required)
     *                             }
     *                         ]
     *                         rows (Required): [
     *                              (Required)[
     *                                 Object (Required)
     *                             ]
     *                         ]
     *                     }
     *                 ]
     *                 statistics (Optional): {
     *                     String: Object (Required)
     *                 }
     *                 render (Optional): {
     *                     String: Object (Required)
     *                 }
     *                 error (Optional): {
     *                     code: String (Required)
     *                     message: String (Required)
     *                     details (Optional): [
     *                          (Optional){
     *                             code: String (Required)
     *                             message: String (Required)
     *                             target: String (Optional)
     *                             value: String (Optional)
     *                             resources (Optional): [
     *                                 String (Optional)
     *                             ]
     *                             additionalProperties (Optional): {
     *                                 String: Object (Required)
     *                             }
     *                         }
     *                     ]
     *                     innererror (Optional): (recursive schema, see innererror above)
     *                     additionalProperties (Optional): {
     *                         String: Object (Required)
     *                     }
     *                 }
     *             }
     *             headers (Optional): {
     *                 String: String (Required)
     *             }
     *         }
     *     ]
     * }
     * }
     * </pre>
     * 
     * @param body The batch request body.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return response to a batch query along with {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> batchWithResponseAsync(BinaryData body, RequestOptions requestOptions) {
        final String contentType = "application/json";
        final String accept = "application/json";
        return FluxUtil.withContext(context -> service.batch(this.getEndpoint(), this.getServiceVersion().getVersion(),
            contentType, accept, body, requestOptions, context));
    }

    /**
     * Execute a batch of Analytics queries
     * 
     * Executes a batch of Analytics queries for data.
     * [Here](https://learn.microsoft.com/azure/azure-monitor/logs/api/batch-queries)
     * is an example for using POST with an Analytics query.
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     requests (Required): [
     *          (Required){
     *             id: String (Required)
     *             headers (Optional): {
     *                 String: String (Required)
     *             }
     *             body (Required): {
     *                 query: String (Required)
     *                 timespan: String (Optional)
     *                 workspaces (Optional): [
     *                     String (Optional)
     *                 ]
     *             }
     *             path: String (Required)
     *             method: String (Required)
     *             workspace: String (Required)
     *         }
     *     ]
     * }
     * }
     * </pre>
     * 
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     responses (Optional): [
     *          (Optional){
     *             id: String (Optional)
     *             status: Integer (Optional)
     *             body (Optional): {
     *                 tables (Optional): [
     *                      (Optional){
     *                         name: String (Required)
     *                         columns (Required): [
     *                              (Required){
     *                                 name: String (Required)
     *                                 type: String(bool/datetime/dynamic/int/long/real/string/guid/decimal/timespan) (Required)
     *                             }
     *                         ]
     *                         rows (Required): [
     *                              (Required)[
     *                                 Object (Required)
     *                             ]
     *                         ]
     *                     }
     *                 ]
     *                 statistics (Optional): {
     *                     String: Object (Required)
     *                 }
     *                 render (Optional): {
     *                     String: Object (Required)
     *                 }
     *                 error (Optional): {
     *                     code: String (Required)
     *                     message: String (Required)
     *                     details (Optional): [
     *                          (Optional){
     *                             code: String (Required)
     *                             message: String (Required)
     *                             target: String (Optional)
     *                             value: String (Optional)
     *                             resources (Optional): [
     *                                 String (Optional)
     *                             ]
     *                             additionalProperties (Optional): {
     *                                 String: Object (Required)
     *                             }
     *                         }
     *                     ]
     *                     innererror (Optional): (recursive schema, see innererror above)
     *                     additionalProperties (Optional): {
     *                         String: Object (Required)
     *                     }
     *                 }
     *             }
     *             headers (Optional): {
     *                 String: String (Required)
     *             }
     *         }
     *     ]
     * }
     * }
     * </pre>
     * 
     * @param body The batch request body.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return response to a batch query along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> batchWithResponse(BinaryData body, RequestOptions requestOptions) {
        final String contentType = "application/json";
        final String accept = "application/json";
        return service.batchSync(this.getEndpoint(), this.getServiceVersion().getVersion(), contentType, accept, body,
            requestOptions, Context.NONE);
    }
}
