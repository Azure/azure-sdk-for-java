// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.monitor.query.logs.implementation;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.HttpHeaderName;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;
import com.azure.core.util.FluxUtil;
import com.azure.monitor.query.logs.implementation.models.BatchRequest;
import com.azure.monitor.query.logs.implementation.models.BatchResponse;
import com.azure.monitor.query.logs.implementation.models.QueryBody;
import com.azure.monitor.query.logs.implementation.models.QueryResults;
import reactor.core.publisher.Mono;

/**
 * Initializes a new instance of the asynchronous MonitorQueryLogsClient type.
 */
@ServiceClient(builder = MonitorQueryLogsClientBuilder.class, isAsync = true)
public final class MonitorQueryLogsAsyncClient {

    @Generated
    private final MonitorQueryLogsClientImpl serviceClient;

    /**
     * Initializes an instance of MonitorQueryLogsAsyncClient class.
     *
     * @param serviceClient the service client implementation.
     */
    @Generated
    MonitorQueryLogsAsyncClient(MonitorQueryLogsClientImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * Execute an Analytics query
     *
     * Executes an Analytics query for data.
     * [Here](https://learn.microsoft.com/azure/azure-monitor/logs/api/request-format)
     * is an example for using POST with an Analytics query.
     * <p><strong>Header Parameters</strong></p>
     * <table border="1">
     * <caption>Header Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>Prefer</td><td>String</td><td>No</td><td>Optional. The prefer header to set server timeout, query
     * statistics and visualization information.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addHeader}
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     query: String (Required)
     *     timespan: String (Optional)
     *     workspaces (Optional): [
     *         String (Optional)
     *     ]
     * }
     * }
     * </pre>
     * 
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     tables (Required): [
     *          (Required){
     *             name: String (Required)
     *             columns (Required): [
     *                  (Required){
     *                     name: String (Required)
     *                     type: String(bool/datetime/dynamic/int/long/real/string/guid/decimal/timespan) (Required)
     *                 }
     *             ]
     *             rows (Required): [
     *                  (Required)[
     *                     Object (Required)
     *                 ]
     *             ]
     *         }
     *     ]
     *     statistics (Optional): {
     *         String: Object (Required)
     *     }
     *     render (Optional): {
     *         String: Object (Required)
     *     }
     *     error (Optional): {
     *         code: String (Required)
     *         message: String (Required)
     *         details (Optional): [
     *              (Optional){
     *                 code: String (Required)
     *                 message: String (Required)
     *                 target: String (Optional)
     *                 value: String (Optional)
     *                 resources (Optional): [
     *                     String (Optional)
     *                 ]
     *                 additionalProperties (Optional): {
     *                     String: Object (Required)
     *                 }
     *             }
     *         ]
     *         innererror (Optional): (recursive schema, see innererror above)
     *         additionalProperties (Optional): {
     *             String: Object (Required)
     *         }
     *     }
     * }
     * }
     * </pre>
     *
     * @param workspaceId Primary Workspace ID of the query. This is the Workspace ID from the Properties
     * blade in the Azure portal.
     * @param body The Analytics query. Learn more about the
     * [Analytics query syntax](https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/).
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return contains the tables, columns &amp; rows resulting from a query along with {@link Response} on successful
     * completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> executeWithResponse(String workspaceId, BinaryData body,
        RequestOptions requestOptions) {
        return this.serviceClient.executeWithResponseAsync(workspaceId, body, requestOptions);
    }

    /**
     * Execute an Analytics query using resource ID
     *
     * Executes an Analytics query for data in the context of a resource.
     * [Here](https://learn.microsoft.com/azure/azure-monitor/logs/api/azure-resource-queries)
     * is an example for using POST with an Analytics query.
     * <p><strong>Header Parameters</strong></p>
     * <table border="1">
     * <caption>Header Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>Prefer</td><td>String</td><td>No</td><td>Optional. The prefer header to set server timeout, query
     * statistics and
     * visualization information.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addHeader}
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     query: String (Required)
     *     timespan: String (Optional)
     *     workspaces (Optional): [
     *         String (Optional)
     *     ]
     * }
     * }
     * </pre>
     * 
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     tables (Required): [
     *          (Required){
     *             name: String (Required)
     *             columns (Required): [
     *                  (Required){
     *                     name: String (Required)
     *                     type: String(bool/datetime/dynamic/int/long/real/string/guid/decimal/timespan) (Required)
     *                 }
     *             ]
     *             rows (Required): [
     *                  (Required)[
     *                     Object (Required)
     *                 ]
     *             ]
     *         }
     *     ]
     *     statistics (Optional): {
     *         String: Object (Required)
     *     }
     *     render (Optional): {
     *         String: Object (Required)
     *     }
     *     error (Optional): {
     *         code: String (Required)
     *         message: String (Required)
     *         details (Optional): [
     *              (Optional){
     *                 code: String (Required)
     *                 message: String (Required)
     *                 target: String (Optional)
     *                 value: String (Optional)
     *                 resources (Optional): [
     *                     String (Optional)
     *                 ]
     *                 additionalProperties (Optional): {
     *                     String: Object (Required)
     *                 }
     *             }
     *         ]
     *         innererror (Optional): (recursive schema, see innererror above)
     *         additionalProperties (Optional): {
     *             String: Object (Required)
     *         }
     *     }
     * }
     * }
     * </pre>
     *
     * @param resourceId The identifier of the resource.
     * @param body The Analytics query. Learn more about the
     * [Analytics query syntax](https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/).
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return contains the tables, columns &amp; rows resulting from a query along with {@link Response} on successful
     * completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> executeWithResourceIdWithResponse(String resourceId, BinaryData body,
        RequestOptions requestOptions) {
        return this.serviceClient.executeWithResourceIdWithResponseAsync(resourceId, body, requestOptions);
    }

    /**
     * Execute a batch of Analytics queries
     *
     * Executes a batch of Analytics queries for data.
     * [Here](https://learn.microsoft.com/azure/azure-monitor/logs/api/batch-queries)
     * is an example for using POST with an Analytics query.
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     requests (Required): [
     *          (Required){
     *             id: String (Required)
     *             headers (Optional): {
     *                 String: String (Required)
     *             }
     *             body (Required): {
     *                 query: String (Required)
     *                 timespan: String (Optional)
     *                 workspaces (Optional): [
     *                     String (Optional)
     *                 ]
     *             }
     *             path: String(/query) (Optional)
     *             method: String(POST) (Optional)
     *             workspace: String (Required)
     *         }
     *     ]
     * }
     * }
     * </pre>
     * 
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     responses (Optional): [
     *          (Optional){
     *             id: String (Optional)
     *             status: Integer (Optional)
     *             body (Optional): {
     *                 tables (Optional): [
     *                      (Optional){
     *                         name: String (Required)
     *                         columns (Required): [
     *                              (Required){
     *                                 name: String (Required)
     *                                 type: String(bool/datetime/dynamic/int/long/real/string/guid/decimal/timespan) (Required)
     *                             }
     *                         ]
     *                         rows (Required): [
     *                              (Required)[
     *                                 Object (Required)
     *                             ]
     *                         ]
     *                     }
     *                 ]
     *                 statistics (Optional): {
     *                     String: Object (Required)
     *                 }
     *                 render (Optional): {
     *                     String: Object (Required)
     *                 }
     *                 error (Optional): {
     *                     code: String (Required)
     *                     message: String (Required)
     *                     details (Optional): [
     *                          (Optional){
     *                             code: String (Required)
     *                             message: String (Required)
     *                             target: String (Optional)
     *                             value: String (Optional)
     *                             resources (Optional): [
     *                                 String (Optional)
     *                             ]
     *                             additionalProperties (Optional): {
     *                                 String: Object (Required)
     *                             }
     *                         }
     *                     ]
     *                     innererror (Optional): (recursive schema, see innererror above)
     *                     additionalProperties (Optional): {
     *                         String: Object (Required)
     *                     }
     *                 }
     *             }
     *             headers (Optional): {
     *                 String: String (Required)
     *             }
     *         }
     *     ]
     * }
     * }
     * </pre>
     *
     * @param body The batch request body.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return response to a batch query along with {@link Response} on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> batchWithResponse(BinaryData body, RequestOptions requestOptions) {
        return this.serviceClient.batchWithResponseAsync(body, requestOptions);
    }

    /**
     * Execute an Analytics query
     *
     * Executes an Analytics query for data.
     * [Here](https://learn.microsoft.com/azure/azure-monitor/logs/api/request-format)
     * is an example for using POST with an Analytics query.
     *
     * @param workspaceId Primary Workspace ID of the query. This is the Workspace ID from the Properties
     * blade in the Azure portal.
     * @param body The Analytics query. Learn more about the
     * [Analytics query syntax](https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/).
     * @param prefer Optional. The prefer header to set server timeout, query statistics and visualization information.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return contains the tables, columns &amp; rows resulting from a query on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<QueryResults> execute(String workspaceId, QueryBody body, String prefer) {
        // Generated convenience method for executeWithResponse
        RequestOptions requestOptions = new RequestOptions();
        if (prefer != null) {
            requestOptions.setHeader(HttpHeaderName.PREFER, prefer);
        }
        return executeWithResponse(workspaceId, BinaryData.fromObject(body), requestOptions).flatMap(FluxUtil::toMono)
            .map(protocolMethodData -> protocolMethodData.toObject(QueryResults.class));
    }

    /**
     * Execute an Analytics query
     *
     * Executes an Analytics query for data.
     * [Here](https://learn.microsoft.com/azure/azure-monitor/logs/api/request-format)
     * is an example for using POST with an Analytics query.
     *
     * @param workspaceId Primary Workspace ID of the query. This is the Workspace ID from the Properties
     * blade in the Azure portal.
     * @param body The Analytics query. Learn more about the
     * [Analytics query syntax](https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/).
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return contains the tables, columns &amp; rows resulting from a query on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<QueryResults> execute(String workspaceId, QueryBody body) {
        // Generated convenience method for executeWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return executeWithResponse(workspaceId, BinaryData.fromObject(body), requestOptions).flatMap(FluxUtil::toMono)
            .map(protocolMethodData -> protocolMethodData.toObject(QueryResults.class));
    }

    /**
     * Execute an Analytics query using resource ID
     *
     * Executes an Analytics query for data in the context of a resource.
     * [Here](https://learn.microsoft.com/azure/azure-monitor/logs/api/azure-resource-queries)
     * is an example for using POST with an Analytics query.
     *
     * @param resourceId The identifier of the resource.
     * @param body The Analytics query. Learn more about the
     * [Analytics query syntax](https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/).
     * @param prefer Optional. The prefer header to set server timeout, query statistics and
     * visualization information.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return contains the tables, columns &amp; rows resulting from a query on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<QueryResults> executeWithResourceId(String resourceId, QueryBody body, String prefer) {
        // Generated convenience method for executeWithResourceIdWithResponse
        RequestOptions requestOptions = new RequestOptions();
        if (prefer != null) {
            requestOptions.setHeader(HttpHeaderName.PREFER, prefer);
        }
        return executeWithResourceIdWithResponse(resourceId, BinaryData.fromObject(body), requestOptions)
            .flatMap(FluxUtil::toMono)
            .map(protocolMethodData -> protocolMethodData.toObject(QueryResults.class));
    }

    /**
     * Execute an Analytics query using resource ID
     *
     * Executes an Analytics query for data in the context of a resource.
     * [Here](https://learn.microsoft.com/azure/azure-monitor/logs/api/azure-resource-queries)
     * is an example for using POST with an Analytics query.
     *
     * @param resourceId The identifier of the resource.
     * @param body The Analytics query. Learn more about the
     * [Analytics query syntax](https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/).
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return contains the tables, columns &amp; rows resulting from a query on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<QueryResults> executeWithResourceId(String resourceId, QueryBody body) {
        // Generated convenience method for executeWithResourceIdWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return executeWithResourceIdWithResponse(resourceId, BinaryData.fromObject(body), requestOptions)
            .flatMap(FluxUtil::toMono)
            .map(protocolMethodData -> protocolMethodData.toObject(QueryResults.class));
    }

    /**
     * Execute a batch of Analytics queries
     *
     * Executes a batch of Analytics queries for data.
     * [Here](https://learn.microsoft.com/azure/azure-monitor/logs/api/batch-queries)
     * is an example for using POST with an Analytics query.
     *
     * @param body The batch request body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response to a batch query on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<BatchResponse> batch(BatchRequest body) {
        // Generated convenience method for batchWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return batchWithResponse(BinaryData.fromObject(body), requestOptions).flatMap(FluxUtil::toMono)
            .map(protocolMethodData -> protocolMethodData.toObject(BatchResponse.class));
    }
}
