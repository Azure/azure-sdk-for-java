// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.monitor.query.logs.implementation.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.Map;

/**
 * A single request in a batch.
 */
@Fluent
public final class BatchQueryRequest implements JsonSerializable<BatchQueryRequest> {

    /*
     * Unique ID corresponding to each request in the batch.
     */
    @Generated
    private final String id;

    /*
     * Headers of the request. Can use prefer header to set server timeout and to
     * query statistics and visualization information.
     */
    @Generated
    private Map<String, String> headers;

    /*
     * The Analytics query. Learn more about the [Analytics query
     * syntax](https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/)
     */
    @Generated
    private final QueryBody body;

    /*
     * The query path of a single request in a batch, defaults to /query
     */
    @Generated
    private BatchQueryRequestPath path;

    /*
     * The method of a single request in a batch, defaults to POST
     */
    @Generated
    private BatchQueryRequestMethod method;

    /*
     * Primary Workspace ID of the query. This is the Workspace ID from the Properties
     * blade in the Azure portal.
     */
    @Generated
    private final String workspace;

    /**
     * Creates an instance of BatchQueryRequest class.
     *
     * @param id the id value to set.
     * @param body the body value to set.
     * @param workspace the workspace value to set.
     */
    @Generated
    public BatchQueryRequest(String id, QueryBody body, String workspace) {
        this.id = id;
        this.body = body;
        this.workspace = workspace;
    }

    /**
     * Get the id property: Unique ID corresponding to each request in the batch.
     *
     * @return the id value.
     */
    @Generated
    public String getId() {
        return this.id;
    }

    /**
     * Get the headers property: Headers of the request. Can use prefer header to set server timeout and to
     * query statistics and visualization information.
     *
     * @return the headers value.
     */
    @Generated
    public Map<String, String> getHeaders() {
        return this.headers;
    }

    /**
     * Set the headers property: Headers of the request. Can use prefer header to set server timeout and to
     * query statistics and visualization information.
     *
     * @param headers the headers value to set.
     * @return the BatchQueryRequest object itself.
     */
    @Generated
    public BatchQueryRequest setHeaders(Map<String, String> headers) {
        this.headers = headers;
        return this;
    }

    /**
     * Get the body property: The Analytics query. Learn more about the [Analytics query
     * syntax](https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/).
     *
     * @return the body value.
     */
    @Generated
    public QueryBody getBody() {
        return this.body;
    }

    /**
     * Get the path property: The query path of a single request in a batch, defaults to /query.
     *
     * @return the path value.
     */
    @Generated
    public BatchQueryRequestPath getPath() {
        return this.path;
    }

    /**
     * Set the path property: The query path of a single request in a batch, defaults to /query.
     *
     * @param path the path value to set.
     * @return the BatchQueryRequest object itself.
     */
    @Generated
    public BatchQueryRequest setPath(BatchQueryRequestPath path) {
        this.path = path;
        return this;
    }

    /**
     * Get the method property: The method of a single request in a batch, defaults to POST.
     *
     * @return the method value.
     */
    @Generated
    public BatchQueryRequestMethod getMethod() {
        return this.method;
    }

    /**
     * Set the method property: The method of a single request in a batch, defaults to POST.
     *
     * @param method the method value to set.
     * @return the BatchQueryRequest object itself.
     */
    @Generated
    public BatchQueryRequest setMethod(BatchQueryRequestMethod method) {
        this.method = method;
        return this;
    }

    /**
     * Get the workspace property: Primary Workspace ID of the query. This is the Workspace ID from the Properties
     * blade in the Azure portal.
     *
     * @return the workspace value.
     */
    @Generated
    public String getWorkspace() {
        return this.workspace;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("id", this.id);
        jsonWriter.writeJsonField("body", this.body);
        jsonWriter.writeStringField("workspace", this.workspace);
        jsonWriter.writeMapField("headers", this.headers, (writer, element) -> writer.writeString(element));
        jsonWriter.writeStringField("path", this.path == null ? null : this.path.toString());
        jsonWriter.writeStringField("method", this.method == null ? null : this.method.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of BatchQueryRequest from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of BatchQueryRequest if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the BatchQueryRequest.
     */
    @Generated
    public static BatchQueryRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String id = null;
            QueryBody body = null;
            String workspace = null;
            Map<String, String> headers = null;
            BatchQueryRequestPath path = null;
            BatchQueryRequestMethod method = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("id".equals(fieldName)) {
                    id = reader.getString();
                } else if ("body".equals(fieldName)) {
                    body = QueryBody.fromJson(reader);
                } else if ("workspace".equals(fieldName)) {
                    workspace = reader.getString();
                } else if ("headers".equals(fieldName)) {
                    headers = reader.readMap(reader1 -> reader1.getString());
                } else if ("path".equals(fieldName)) {
                    path = BatchQueryRequestPath.fromString(reader.getString());
                } else if ("method".equals(fieldName)) {
                    method = BatchQueryRequestMethod.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }
            BatchQueryRequest deserializedBatchQueryRequest = new BatchQueryRequest(id, body, workspace);
            deserializedBatchQueryRequest.headers = headers;
            deserializedBatchQueryRequest.path = path;
            deserializedBatchQueryRequest.method = method;
            return deserializedBatchQueryRequest;
        });
    }
}
