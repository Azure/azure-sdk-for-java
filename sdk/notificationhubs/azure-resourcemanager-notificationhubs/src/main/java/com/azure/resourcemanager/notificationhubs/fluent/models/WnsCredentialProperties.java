// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.notificationhubs.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Description of a NotificationHub WnsCredential.
 */
@Fluent
public final class WnsCredentialProperties implements JsonSerializable<WnsCredentialProperties> {
    /*
     * Gets or sets the package ID for this credential.
     */
    private String packageSid;

    /*
     * Gets or sets the secret key.
     */
    private String secretKey;

    /*
     * Gets or sets the Windows Live endpoint.
     */
    private String windowsLiveEndpoint;

    /*
     * Ges or sets the WNS Certificate Key.
     */
    private String certificateKey;

    /*
     * Gets or sets the WNS Certificate.
     */
    private String wnsCertificate;

    /**
     * Creates an instance of WnsCredentialProperties class.
     */
    public WnsCredentialProperties() {
    }

    /**
     * Get the packageSid property: Gets or sets the package ID for this credential.
     * 
     * @return the packageSid value.
     */
    public String packageSid() {
        return this.packageSid;
    }

    /**
     * Set the packageSid property: Gets or sets the package ID for this credential.
     * 
     * @param packageSid the packageSid value to set.
     * @return the WnsCredentialProperties object itself.
     */
    public WnsCredentialProperties withPackageSid(String packageSid) {
        this.packageSid = packageSid;
        return this;
    }

    /**
     * Get the secretKey property: Gets or sets the secret key.
     * 
     * @return the secretKey value.
     */
    public String secretKey() {
        return this.secretKey;
    }

    /**
     * Set the secretKey property: Gets or sets the secret key.
     * 
     * @param secretKey the secretKey value to set.
     * @return the WnsCredentialProperties object itself.
     */
    public WnsCredentialProperties withSecretKey(String secretKey) {
        this.secretKey = secretKey;
        return this;
    }

    /**
     * Get the windowsLiveEndpoint property: Gets or sets the Windows Live endpoint.
     * 
     * @return the windowsLiveEndpoint value.
     */
    public String windowsLiveEndpoint() {
        return this.windowsLiveEndpoint;
    }

    /**
     * Set the windowsLiveEndpoint property: Gets or sets the Windows Live endpoint.
     * 
     * @param windowsLiveEndpoint the windowsLiveEndpoint value to set.
     * @return the WnsCredentialProperties object itself.
     */
    public WnsCredentialProperties withWindowsLiveEndpoint(String windowsLiveEndpoint) {
        this.windowsLiveEndpoint = windowsLiveEndpoint;
        return this;
    }

    /**
     * Get the certificateKey property: Ges or sets the WNS Certificate Key.
     * 
     * @return the certificateKey value.
     */
    public String certificateKey() {
        return this.certificateKey;
    }

    /**
     * Set the certificateKey property: Ges or sets the WNS Certificate Key.
     * 
     * @param certificateKey the certificateKey value to set.
     * @return the WnsCredentialProperties object itself.
     */
    public WnsCredentialProperties withCertificateKey(String certificateKey) {
        this.certificateKey = certificateKey;
        return this;
    }

    /**
     * Get the wnsCertificate property: Gets or sets the WNS Certificate.
     * 
     * @return the wnsCertificate value.
     */
    public String wnsCertificate() {
        return this.wnsCertificate;
    }

    /**
     * Set the wnsCertificate property: Gets or sets the WNS Certificate.
     * 
     * @param wnsCertificate the wnsCertificate value to set.
     * @return the WnsCredentialProperties object itself.
     */
    public WnsCredentialProperties withWnsCertificate(String wnsCertificate) {
        this.wnsCertificate = wnsCertificate;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("packageSid", this.packageSid);
        jsonWriter.writeStringField("secretKey", this.secretKey);
        jsonWriter.writeStringField("windowsLiveEndpoint", this.windowsLiveEndpoint);
        jsonWriter.writeStringField("certificateKey", this.certificateKey);
        jsonWriter.writeStringField("wnsCertificate", this.wnsCertificate);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of WnsCredentialProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of WnsCredentialProperties if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the WnsCredentialProperties.
     */
    public static WnsCredentialProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            WnsCredentialProperties deserializedWnsCredentialProperties = new WnsCredentialProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("packageSid".equals(fieldName)) {
                    deserializedWnsCredentialProperties.packageSid = reader.getString();
                } else if ("secretKey".equals(fieldName)) {
                    deserializedWnsCredentialProperties.secretKey = reader.getString();
                } else if ("windowsLiveEndpoint".equals(fieldName)) {
                    deserializedWnsCredentialProperties.windowsLiveEndpoint = reader.getString();
                } else if ("certificateKey".equals(fieldName)) {
                    deserializedWnsCredentialProperties.certificateKey = reader.getString();
                } else if ("wnsCertificate".equals(fieldName)) {
                    deserializedWnsCredentialProperties.wnsCertificate = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedWnsCredentialProperties;
        });
    }
}
