// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.notificationhubs.models;

import com.azure.core.annotation.Immutable;
import com.azure.resourcemanager.notificationhubs.fluent.models.SharedAccessAuthorizationRuleResourceInner;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * The response of the List Namespace operation.
 */
@Immutable
public final class SharedAccessAuthorizationRuleListResult {
    /*
     * Gets or sets result of the List AuthorizationRules operation.
     */
    @JsonProperty(value = "value", access = JsonProperty.Access.WRITE_ONLY)
    private List<SharedAccessAuthorizationRuleResourceInner> value;

    /*
     * Gets or sets link to the next set of results.
     */
    @JsonProperty(value = "nextLink", access = JsonProperty.Access.WRITE_ONLY)
    private String nextLink;

    /**
     * Creates an instance of SharedAccessAuthorizationRuleListResult class.
     */
    public SharedAccessAuthorizationRuleListResult() {
    }

    /**
     * Get the value property: Gets or sets result of the List AuthorizationRules operation.
     * 
     * @return the value value.
     */
    public List<SharedAccessAuthorizationRuleResourceInner> value() {
        return this.value;
    }

    /**
     * Get the nextLink property: Gets or sets link to the next set of results.
     * 
     * @return the nextLink value.
     */
    public String nextLink() {
        return this.nextLink;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (value() != null) {
            value().forEach(e -> e.validate());
        }
    }
}
