// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.notificationhubs.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Description of a NotificationHub AdmCredential.
 */
@Fluent
public final class AdmCredentialProperties {
    /*
     * Gets or sets the client identifier.
     */
    @JsonProperty(value = "clientId")
    private String clientId;

    /*
     * Gets or sets the credential secret access key.
     */
    @JsonProperty(value = "clientSecret")
    private String clientSecret;

    /*
     * Gets or sets the URL of the authorization token.
     */
    @JsonProperty(value = "authTokenUrl")
    private String authTokenUrl;

    /**
     * Creates an instance of AdmCredentialProperties class.
     */
    public AdmCredentialProperties() {
    }

    /**
     * Get the clientId property: Gets or sets the client identifier.
     * 
     * @return the clientId value.
     */
    public String clientId() {
        return this.clientId;
    }

    /**
     * Set the clientId property: Gets or sets the client identifier.
     * 
     * @param clientId the clientId value to set.
     * @return the AdmCredentialProperties object itself.
     */
    public AdmCredentialProperties withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }

    /**
     * Get the clientSecret property: Gets or sets the credential secret access key.
     * 
     * @return the clientSecret value.
     */
    public String clientSecret() {
        return this.clientSecret;
    }

    /**
     * Set the clientSecret property: Gets or sets the credential secret access key.
     * 
     * @param clientSecret the clientSecret value to set.
     * @return the AdmCredentialProperties object itself.
     */
    public AdmCredentialProperties withClientSecret(String clientSecret) {
        this.clientSecret = clientSecret;
        return this;
    }

    /**
     * Get the authTokenUrl property: Gets or sets the URL of the authorization token.
     * 
     * @return the authTokenUrl value.
     */
    public String authTokenUrl() {
        return this.authTokenUrl;
    }

    /**
     * Set the authTokenUrl property: Gets or sets the URL of the authorization token.
     * 
     * @param authTokenUrl the authTokenUrl value to set.
     * @return the AdmCredentialProperties object itself.
     */
    public AdmCredentialProperties withAuthTokenUrl(String authTokenUrl) {
        this.authTokenUrl = authTokenUrl;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (clientId() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property clientId in model AdmCredentialProperties"));
        }
        if (clientSecret() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property clientSecret in model AdmCredentialProperties"));
        }
        if (authTokenUrl() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property authTokenUrl in model AdmCredentialProperties"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(AdmCredentialProperties.class);
}
