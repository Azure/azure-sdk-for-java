// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.notificationhubs.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Private Endpoint Connection properties.
 */
@Fluent
public final class PrivateEndpointConnectionProperties {
    /*
     * State of Private Endpoint Connection.
     */
    @JsonProperty(value = "provisioningState")
    private PrivateEndpointConnectionProvisioningState provisioningState;

    /*
     * Represents a Private Endpoint that is connected to Notification Hubs namespace using Private Endpoint
     * Connection.
     */
    @JsonProperty(value = "privateEndpoint")
    private RemotePrivateEndpointConnection privateEndpoint;

    /*
     * List of group ids. For Notification Hubs, it always contains a single "namespace" element.
     */
    @JsonProperty(value = "groupIds", access = JsonProperty.Access.WRITE_ONLY)
    private List<String> groupIds;

    /*
     * State of the Private Link Service connection.
     */
    @JsonProperty(value = "privateLinkServiceConnectionState")
    private RemotePrivateLinkServiceConnectionState privateLinkServiceConnectionState;

    /**
     * Creates an instance of PrivateEndpointConnectionProperties class.
     */
    public PrivateEndpointConnectionProperties() {
    }

    /**
     * Get the provisioningState property: State of Private Endpoint Connection.
     * 
     * @return the provisioningState value.
     */
    public PrivateEndpointConnectionProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Set the provisioningState property: State of Private Endpoint Connection.
     * 
     * @param provisioningState the provisioningState value to set.
     * @return the PrivateEndpointConnectionProperties object itself.
     */
    public PrivateEndpointConnectionProperties
        withProvisioningState(PrivateEndpointConnectionProvisioningState provisioningState) {
        this.provisioningState = provisioningState;
        return this;
    }

    /**
     * Get the privateEndpoint property: Represents a Private Endpoint that is connected to Notification Hubs namespace
     * using Private Endpoint Connection.
     * 
     * @return the privateEndpoint value.
     */
    public RemotePrivateEndpointConnection privateEndpoint() {
        return this.privateEndpoint;
    }

    /**
     * Set the privateEndpoint property: Represents a Private Endpoint that is connected to Notification Hubs namespace
     * using Private Endpoint Connection.
     * 
     * @param privateEndpoint the privateEndpoint value to set.
     * @return the PrivateEndpointConnectionProperties object itself.
     */
    public PrivateEndpointConnectionProperties withPrivateEndpoint(RemotePrivateEndpointConnection privateEndpoint) {
        this.privateEndpoint = privateEndpoint;
        return this;
    }

    /**
     * Get the groupIds property: List of group ids. For Notification Hubs, it always contains a single "namespace"
     * element.
     * 
     * @return the groupIds value.
     */
    public List<String> groupIds() {
        return this.groupIds;
    }

    /**
     * Get the privateLinkServiceConnectionState property: State of the Private Link Service connection.
     * 
     * @return the privateLinkServiceConnectionState value.
     */
    public RemotePrivateLinkServiceConnectionState privateLinkServiceConnectionState() {
        return this.privateLinkServiceConnectionState;
    }

    /**
     * Set the privateLinkServiceConnectionState property: State of the Private Link Service connection.
     * 
     * @param privateLinkServiceConnectionState the privateLinkServiceConnectionState value to set.
     * @return the PrivateEndpointConnectionProperties object itself.
     */
    public PrivateEndpointConnectionProperties withPrivateLinkServiceConnectionState(
        RemotePrivateLinkServiceConnectionState privateLinkServiceConnectionState) {
        this.privateLinkServiceConnectionState = privateLinkServiceConnectionState;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (privateEndpoint() != null) {
            privateEndpoint().validate();
        }
        if (privateLinkServiceConnectionState() != null) {
            privateLinkServiceConnectionState().validate();
        }
    }
}
