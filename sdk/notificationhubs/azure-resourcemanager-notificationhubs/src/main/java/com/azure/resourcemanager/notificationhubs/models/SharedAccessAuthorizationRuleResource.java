// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.notificationhubs.models;

import com.azure.core.http.rest.Response;
import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.notificationhubs.fluent.models.SharedAccessAuthorizationRuleResourceInner;
import java.util.Map;

/**
 * An immutable client-side representation of SharedAccessAuthorizationRuleResource.
 */
public interface SharedAccessAuthorizationRuleResource {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the properties property: SharedAccessAuthorizationRule properties.
     * 
     * @return the properties value.
     */
    SharedAccessAuthorizationRuleProperties properties();

    /**
     * Gets the location property: Deprecated - only for compatibility.
     * 
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Deprecated - only for compatibility.
     * 
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the region of the resource.
     * 
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     * 
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner
     * com.azure.resourcemanager.notificationhubs.fluent.models.SharedAccessAuthorizationRuleResourceInner object.
     * 
     * @return the inner object.
     */
    SharedAccessAuthorizationRuleResourceInner innerModel();

    /**
     * The entirety of the SharedAccessAuthorizationRuleResource definition.
     */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }

    /**
     * The SharedAccessAuthorizationRuleResource definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the SharedAccessAuthorizationRuleResource definition.
         */
        interface Blank extends WithParentResource {
        }

        /**
         * The stage of the SharedAccessAuthorizationRuleResource definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, namespaceName, notificationHubName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param namespaceName Namespace name.
             * @param notificationHubName Notification Hub name.
             * @return the next definition stage.
             */
            WithCreate withExistingNotificationHub(String resourceGroupName, String namespaceName,
                String notificationHubName);
        }

        /**
         * The stage of the SharedAccessAuthorizationRuleResource definition which contains all the minimum required
         * properties for the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithLocation, DefinitionStages.WithTags, DefinitionStages.WithProperties {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            SharedAccessAuthorizationRuleResource create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            SharedAccessAuthorizationRuleResource create(Context context);
        }

        /**
         * The stage of the SharedAccessAuthorizationRuleResource definition allowing to specify location.
         */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             * 
             * @param location Deprecated - only for compatibility.
             * @return the next definition stage.
             */
            WithCreate withRegion(Region location);

            /**
             * Specifies the region for the resource.
             * 
             * @param location Deprecated - only for compatibility.
             * @return the next definition stage.
             */
            WithCreate withRegion(String location);
        }

        /**
         * The stage of the SharedAccessAuthorizationRuleResource definition allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Deprecated - only for compatibility..
             * 
             * @param tags Deprecated - only for compatibility.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the SharedAccessAuthorizationRuleResource definition allowing to specify properties.
         */
        interface WithProperties {
            /**
             * Specifies the properties property: SharedAccessAuthorizationRule properties..
             * 
             * @param properties SharedAccessAuthorizationRule properties.
             * @return the next definition stage.
             */
            WithCreate withProperties(SharedAccessAuthorizationRuleProperties properties);
        }
    }

    /**
     * Begins update for the SharedAccessAuthorizationRuleResource resource.
     * 
     * @return the stage of resource update.
     */
    SharedAccessAuthorizationRuleResource.Update update();

    /**
     * The template for SharedAccessAuthorizationRuleResource update.
     */
    interface Update extends UpdateStages.WithTags, UpdateStages.WithProperties {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        SharedAccessAuthorizationRuleResource apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        SharedAccessAuthorizationRuleResource apply(Context context);
    }

    /**
     * The SharedAccessAuthorizationRuleResource update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the SharedAccessAuthorizationRuleResource update allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Deprecated - only for compatibility..
             * 
             * @param tags Deprecated - only for compatibility.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }

        /**
         * The stage of the SharedAccessAuthorizationRuleResource update allowing to specify properties.
         */
        interface WithProperties {
            /**
             * Specifies the properties property: SharedAccessAuthorizationRule properties..
             * 
             * @param properties SharedAccessAuthorizationRule properties.
             * @return the next definition stage.
             */
            Update withProperties(SharedAccessAuthorizationRuleProperties properties);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    SharedAccessAuthorizationRuleResource refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    SharedAccessAuthorizationRuleResource refresh(Context context);

    /**
     * Gets the Primary and Secondary ConnectionStrings to the NotificationHub.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Primary and Secondary ConnectionStrings to the NotificationHub along with {@link Response}.
     */
    Response<ResourceListKeys> listKeysWithResponse(Context context);

    /**
     * Gets the Primary and Secondary ConnectionStrings to the NotificationHub.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Primary and Secondary ConnectionStrings to the NotificationHub.
     */
    ResourceListKeys listKeys();

    /**
     * Regenerates the Primary/Secondary Keys to the NotificationHub Authorization Rule.
     * 
     * @param parameters Request content.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response for the POST request that returns Namespace or NotificationHub access keys (connection strings)
     * along with {@link Response}.
     */
    Response<ResourceListKeys> regenerateKeysWithResponse(PolicyKeyResource parameters, Context context);

    /**
     * Regenerates the Primary/Secondary Keys to the NotificationHub Authorization Rule.
     * 
     * @param parameters Request content.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response for the POST request that returns Namespace or NotificationHub access keys (connection strings).
     */
    ResourceListKeys regenerateKeys(PolicyKeyResource parameters);
}
