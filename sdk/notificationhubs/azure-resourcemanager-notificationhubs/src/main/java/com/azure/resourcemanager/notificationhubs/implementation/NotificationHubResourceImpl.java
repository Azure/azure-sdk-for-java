// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.notificationhubs.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.notificationhubs.fluent.models.NotificationHubResourceInner;
import com.azure.resourcemanager.notificationhubs.models.DebugSendResponse;
import com.azure.resourcemanager.notificationhubs.models.NotificationHubPatchParameters;
import com.azure.resourcemanager.notificationhubs.models.NotificationHubProperties;
import com.azure.resourcemanager.notificationhubs.models.NotificationHubResource;
import com.azure.resourcemanager.notificationhubs.models.PnsCredentialsResource;
import com.azure.resourcemanager.notificationhubs.models.Sku;
import java.util.Collections;
import java.util.Map;

public final class NotificationHubResourceImpl
    implements NotificationHubResource, NotificationHubResource.Definition, NotificationHubResource.Update {
    private NotificationHubResourceInner innerObject;

    private final com.azure.resourcemanager.notificationhubs.NotificationHubsManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public NotificationHubProperties properties() {
        return this.innerModel().properties();
    }

    public Sku sku() {
        return this.innerModel().sku();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public NotificationHubResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.notificationhubs.NotificationHubsManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String namespaceName;

    private String notificationHubName;

    private NotificationHubPatchParameters updateParameters;

    public NotificationHubResourceImpl withExistingNamespace(String resourceGroupName, String namespaceName) {
        this.resourceGroupName = resourceGroupName;
        this.namespaceName = namespaceName;
        return this;
    }

    public NotificationHubResource create() {
        this.innerObject
            = serviceManager.serviceClient().getNotificationHubs().createOrUpdateWithResponse(resourceGroupName,
                namespaceName, notificationHubName, this.innerModel(), Context.NONE).getValue();
        return this;
    }

    public NotificationHubResource create(Context context) {
        this.innerObject
            = serviceManager.serviceClient().getNotificationHubs().createOrUpdateWithResponse(resourceGroupName,
                namespaceName, notificationHubName, this.innerModel(), context).getValue();
        return this;
    }

    NotificationHubResourceImpl(String name,
        com.azure.resourcemanager.notificationhubs.NotificationHubsManager serviceManager) {
        this.innerObject = new NotificationHubResourceInner();
        this.serviceManager = serviceManager;
        this.notificationHubName = name;
    }

    public NotificationHubResourceImpl update() {
        this.updateParameters = new NotificationHubPatchParameters();
        return this;
    }

    public NotificationHubResource apply() {
        this.innerObject = serviceManager.serviceClient().getNotificationHubs()
            .updateWithResponse(resourceGroupName, namespaceName, notificationHubName, updateParameters, Context.NONE)
            .getValue();
        return this;
    }

    public NotificationHubResource apply(Context context) {
        this.innerObject = serviceManager.serviceClient().getNotificationHubs()
            .updateWithResponse(resourceGroupName, namespaceName, notificationHubName, updateParameters, context)
            .getValue();
        return this;
    }

    NotificationHubResourceImpl(NotificationHubResourceInner innerObject,
        com.azure.resourcemanager.notificationhubs.NotificationHubsManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.namespaceName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "namespaces");
        this.notificationHubName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "notificationHubs");
    }

    public NotificationHubResource refresh() {
        this.innerObject = serviceManager.serviceClient().getNotificationHubs()
            .getWithResponse(resourceGroupName, namespaceName, notificationHubName, Context.NONE).getValue();
        return this;
    }

    public NotificationHubResource refresh(Context context) {
        this.innerObject = serviceManager.serviceClient().getNotificationHubs()
            .getWithResponse(resourceGroupName, namespaceName, notificationHubName, context).getValue();
        return this;
    }

    public Response<DebugSendResponse> debugSendWithResponse(Context context) {
        return serviceManager.notificationHubs().debugSendWithResponse(resourceGroupName, namespaceName,
            notificationHubName, context);
    }

    public DebugSendResponse debugSend() {
        return serviceManager.notificationHubs().debugSend(resourceGroupName, namespaceName, notificationHubName);
    }

    public Response<PnsCredentialsResource> getPnsCredentialsWithResponse(Context context) {
        return serviceManager.notificationHubs().getPnsCredentialsWithResponse(resourceGroupName, namespaceName,
            notificationHubName, context);
    }

    public PnsCredentialsResource getPnsCredentials() {
        return serviceManager.notificationHubs().getPnsCredentials(resourceGroupName, namespaceName,
            notificationHubName);
    }

    public NotificationHubResourceImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public NotificationHubResourceImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public NotificationHubResourceImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateParameters.withTags(tags);
            return this;
        }
    }

    public NotificationHubResourceImpl withProperties(NotificationHubProperties properties) {
        if (isInCreateMode()) {
            this.innerModel().withProperties(properties);
            return this;
        } else {
            this.updateParameters.withProperties(properties);
            return this;
        }
    }

    public NotificationHubResourceImpl withSku(Sku sku) {
        if (isInCreateMode()) {
            this.innerModel().withSku(sku);
            return this;
        } else {
            this.updateParameters.withSku(sku);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
