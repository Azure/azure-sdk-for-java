// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.notificationhubs.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Response for the POST request that returns Namespace or NotificationHub access keys (connection strings).
 */
@Immutable
public final class ResourceListKeysInner implements JsonSerializable<ResourceListKeysInner> {
    /*
     * Gets or sets primaryConnectionString of the AuthorizationRule.
     */
    private String primaryConnectionString;

    /*
     * Gets or sets secondaryConnectionString of the created
     * AuthorizationRule
     */
    private String secondaryConnectionString;

    /*
     * Gets or sets primaryKey of the created AuthorizationRule.
     */
    private String primaryKey;

    /*
     * Gets or sets secondaryKey of the created AuthorizationRule
     */
    private String secondaryKey;

    /*
     * Gets or sets keyName of the created AuthorizationRule
     */
    private String keyName;

    /**
     * Creates an instance of ResourceListKeysInner class.
     */
    public ResourceListKeysInner() {
    }

    /**
     * Get the primaryConnectionString property: Gets or sets primaryConnectionString of the AuthorizationRule.
     * 
     * @return the primaryConnectionString value.
     */
    public String primaryConnectionString() {
        return this.primaryConnectionString;
    }

    /**
     * Get the secondaryConnectionString property: Gets or sets secondaryConnectionString of the created
     * AuthorizationRule.
     * 
     * @return the secondaryConnectionString value.
     */
    public String secondaryConnectionString() {
        return this.secondaryConnectionString;
    }

    /**
     * Get the primaryKey property: Gets or sets primaryKey of the created AuthorizationRule.
     * 
     * @return the primaryKey value.
     */
    public String primaryKey() {
        return this.primaryKey;
    }

    /**
     * Get the secondaryKey property: Gets or sets secondaryKey of the created AuthorizationRule.
     * 
     * @return the secondaryKey value.
     */
    public String secondaryKey() {
        return this.secondaryKey;
    }

    /**
     * Get the keyName property: Gets or sets keyName of the created AuthorizationRule.
     * 
     * @return the keyName value.
     */
    public String keyName() {
        return this.keyName;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ResourceListKeysInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ResourceListKeysInner if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ResourceListKeysInner.
     */
    public static ResourceListKeysInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ResourceListKeysInner deserializedResourceListKeysInner = new ResourceListKeysInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("primaryConnectionString".equals(fieldName)) {
                    deserializedResourceListKeysInner.primaryConnectionString = reader.getString();
                } else if ("secondaryConnectionString".equals(fieldName)) {
                    deserializedResourceListKeysInner.secondaryConnectionString = reader.getString();
                } else if ("primaryKey".equals(fieldName)) {
                    deserializedResourceListKeysInner.primaryKey = reader.getString();
                } else if ("secondaryKey".equals(fieldName)) {
                    deserializedResourceListKeysInner.secondaryKey = reader.getString();
                } else if ("keyName".equals(fieldName)) {
                    deserializedResourceListKeysInner.keyName = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedResourceListKeysInner;
        });
    }
}
