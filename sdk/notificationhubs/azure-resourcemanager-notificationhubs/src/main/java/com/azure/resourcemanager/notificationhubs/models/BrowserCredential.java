// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.notificationhubs.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.notificationhubs.fluent.models.BrowserCredentialProperties;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Description of a NotificationHub BrowserCredential.
 */
@Fluent
public final class BrowserCredential {
    /*
     * Description of a NotificationHub BrowserCredential.
     */
    @JsonProperty(value = "properties", required = true)
    private BrowserCredentialProperties innerProperties = new BrowserCredentialProperties();

    /**
     * Creates an instance of BrowserCredential class.
     */
    public BrowserCredential() {
    }

    /**
     * Get the innerProperties property: Description of a NotificationHub BrowserCredential.
     * 
     * @return the innerProperties value.
     */
    private BrowserCredentialProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the subject property: Gets or sets web push subject.
     * 
     * @return the subject value.
     */
    public String subject() {
        return this.innerProperties() == null ? null : this.innerProperties().subject();
    }

    /**
     * Set the subject property: Gets or sets web push subject.
     * 
     * @param subject the subject value to set.
     * @return the BrowserCredential object itself.
     */
    public BrowserCredential withSubject(String subject) {
        if (this.innerProperties() == null) {
            this.innerProperties = new BrowserCredentialProperties();
        }
        this.innerProperties().withSubject(subject);
        return this;
    }

    /**
     * Get the vapidPrivateKey property: Gets or sets VAPID private key.
     * 
     * @return the vapidPrivateKey value.
     */
    public String vapidPrivateKey() {
        return this.innerProperties() == null ? null : this.innerProperties().vapidPrivateKey();
    }

    /**
     * Set the vapidPrivateKey property: Gets or sets VAPID private key.
     * 
     * @param vapidPrivateKey the vapidPrivateKey value to set.
     * @return the BrowserCredential object itself.
     */
    public BrowserCredential withVapidPrivateKey(String vapidPrivateKey) {
        if (this.innerProperties() == null) {
            this.innerProperties = new BrowserCredentialProperties();
        }
        this.innerProperties().withVapidPrivateKey(vapidPrivateKey);
        return this;
    }

    /**
     * Get the vapidPublicKey property: Gets or sets VAPID public key.
     * 
     * @return the vapidPublicKey value.
     */
    public String vapidPublicKey() {
        return this.innerProperties() == null ? null : this.innerProperties().vapidPublicKey();
    }

    /**
     * Set the vapidPublicKey property: Gets or sets VAPID public key.
     * 
     * @param vapidPublicKey the vapidPublicKey value to set.
     * @return the BrowserCredential object itself.
     */
    public BrowserCredential withVapidPublicKey(String vapidPublicKey) {
        if (this.innerProperties() == null) {
            this.innerProperties = new BrowserCredentialProperties();
        }
        this.innerProperties().withVapidPublicKey(vapidPublicKey);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property innerProperties in model BrowserCredential"));
        } else {
            innerProperties().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(BrowserCredential.class);
}
