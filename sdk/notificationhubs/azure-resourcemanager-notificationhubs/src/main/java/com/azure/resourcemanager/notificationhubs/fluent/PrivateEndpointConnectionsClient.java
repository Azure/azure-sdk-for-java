// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.notificationhubs.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.notificationhubs.fluent.models.PrivateEndpointConnectionResourceInner;
import com.azure.resourcemanager.notificationhubs.fluent.models.PrivateLinkResourceInner;

/**
 * An instance of this class provides access to all the operations defined in PrivateEndpointConnectionsClient.
 */
public interface PrivateEndpointConnectionsClient {
    /**
     * Approves or rejects Private Endpoint Connection.
     * This is a public API that can be called directly by Notification Hubs users.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param namespaceName Namespace name.
     * @param privateEndpointConnectionName Private Endpoint Connection Name.
     * @param parameters Description of the Private Endpoint Connection resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of represents a Private Endpoint Connection ARM resource - a
     * sub-resource of Notification Hubs namespace.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<PrivateEndpointConnectionResourceInner>, PrivateEndpointConnectionResourceInner> beginUpdate(
        String resourceGroupName, String namespaceName, String privateEndpointConnectionName,
        PrivateEndpointConnectionResourceInner parameters);

    /**
     * Approves or rejects Private Endpoint Connection.
     * This is a public API that can be called directly by Notification Hubs users.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param namespaceName Namespace name.
     * @param privateEndpointConnectionName Private Endpoint Connection Name.
     * @param parameters Description of the Private Endpoint Connection resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of represents a Private Endpoint Connection ARM resource - a
     * sub-resource of Notification Hubs namespace.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<PrivateEndpointConnectionResourceInner>, PrivateEndpointConnectionResourceInner> beginUpdate(
        String resourceGroupName, String namespaceName, String privateEndpointConnectionName,
        PrivateEndpointConnectionResourceInner parameters, Context context);

    /**
     * Approves or rejects Private Endpoint Connection.
     * This is a public API that can be called directly by Notification Hubs users.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param namespaceName Namespace name.
     * @param privateEndpointConnectionName Private Endpoint Connection Name.
     * @param parameters Description of the Private Endpoint Connection resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a Private Endpoint Connection ARM resource - a sub-resource of Notification Hubs namespace.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    PrivateEndpointConnectionResourceInner update(String resourceGroupName, String namespaceName,
        String privateEndpointConnectionName, PrivateEndpointConnectionResourceInner parameters);

    /**
     * Approves or rejects Private Endpoint Connection.
     * This is a public API that can be called directly by Notification Hubs users.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param namespaceName Namespace name.
     * @param privateEndpointConnectionName Private Endpoint Connection Name.
     * @param parameters Description of the Private Endpoint Connection resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a Private Endpoint Connection ARM resource - a sub-resource of Notification Hubs namespace.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    PrivateEndpointConnectionResourceInner update(String resourceGroupName, String namespaceName,
        String privateEndpointConnectionName, PrivateEndpointConnectionResourceInner parameters, Context context);

    /**
     * Deletes the Private Endpoint Connection.
     * This is a public API that can be called directly by Notification Hubs users.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param namespaceName Namespace name.
     * @param privateEndpointConnectionName Private Endpoint Connection Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String namespaceName,
        String privateEndpointConnectionName);

    /**
     * Deletes the Private Endpoint Connection.
     * This is a public API that can be called directly by Notification Hubs users.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param namespaceName Namespace name.
     * @param privateEndpointConnectionName Private Endpoint Connection Name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String namespaceName,
        String privateEndpointConnectionName, Context context);

    /**
     * Deletes the Private Endpoint Connection.
     * This is a public API that can be called directly by Notification Hubs users.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param namespaceName Namespace name.
     * @param privateEndpointConnectionName Private Endpoint Connection Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String namespaceName, String privateEndpointConnectionName);

    /**
     * Deletes the Private Endpoint Connection.
     * This is a public API that can be called directly by Notification Hubs users.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param namespaceName Namespace name.
     * @param privateEndpointConnectionName Private Endpoint Connection Name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String namespaceName, String privateEndpointConnectionName, Context context);

    /**
     * Returns a Private Endpoint Connection with a given name.
     * This is a public API that can be called directly by Notification Hubs users.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param namespaceName Namespace name.
     * @param privateEndpointConnectionName Private Endpoint Connection Name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a Private Endpoint Connection ARM resource - a sub-resource of Notification Hubs namespace
     * along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<PrivateEndpointConnectionResourceInner> getWithResponse(String resourceGroupName, String namespaceName,
        String privateEndpointConnectionName, Context context);

    /**
     * Returns a Private Endpoint Connection with a given name.
     * This is a public API that can be called directly by Notification Hubs users.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param namespaceName Namespace name.
     * @param privateEndpointConnectionName Private Endpoint Connection Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a Private Endpoint Connection ARM resource - a sub-resource of Notification Hubs namespace.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    PrivateEndpointConnectionResourceInner get(String resourceGroupName, String namespaceName,
        String privateEndpointConnectionName);

    /**
     * Returns all Private Endpoint Connections that belong to the given Notification Hubs namespace.
     * This is a public API that can be called directly by Notification Hubs users.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param namespaceName Namespace name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of the List Private Endpoint Connections operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<PrivateEndpointConnectionResourceInner> list(String resourceGroupName, String namespaceName);

    /**
     * Returns all Private Endpoint Connections that belong to the given Notification Hubs namespace.
     * This is a public API that can be called directly by Notification Hubs users.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param namespaceName Namespace name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of the List Private Endpoint Connections operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<PrivateEndpointConnectionResourceInner> list(String resourceGroupName, String namespaceName,
        Context context);

    /**
     * Returns Group Id response.
     * This is a public API required by the Networking RP contract. It can be used directly by Notification Hubs users.
     * 
     * Even though this namespace requires subscription id, resource group and namespace name, it returns a constant
     * payload (for a given namespacE) every time it's called.
     * That's why we don't send it to the sibling RP, but process it directly in the scale unit that received the
     * request.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param namespaceName Namespace name.
     * @param subResourceName Name of the Private Link sub-resource. The only supported sub-resource is "namespace".
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Private Link Arm Resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<PrivateLinkResourceInner> getGroupIdWithResponse(String resourceGroupName, String namespaceName,
        String subResourceName, Context context);

    /**
     * Returns Group Id response.
     * This is a public API required by the Networking RP contract. It can be used directly by Notification Hubs users.
     * 
     * Even though this namespace requires subscription id, resource group and namespace name, it returns a constant
     * payload (for a given namespacE) every time it's called.
     * That's why we don't send it to the sibling RP, but process it directly in the scale unit that received the
     * request.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param namespaceName Namespace name.
     * @param subResourceName Name of the Private Link sub-resource. The only supported sub-resource is "namespace".
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Private Link Arm Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    PrivateLinkResourceInner getGroupId(String resourceGroupName, String namespaceName, String subResourceName);

    /**
     * Returns all Group Ids supported by the Notification Hubs RP.
     * This is a public API required by the Networking RP contract. It can be used directly by Notification Hubs users.
     * 
     * Even though this namespace requires subscription id, resource group and namespace name, it returns a constant
     * payload (for a given namespacE) every time it's called.
     * That's why we don't send it to the sibling RP, but process it directly in the scale unit that received the
     * request.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param namespaceName Namespace name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of the List Private Link Resources operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<PrivateLinkResourceInner> listGroupIds(String resourceGroupName, String namespaceName);

    /**
     * Returns all Group Ids supported by the Notification Hubs RP.
     * This is a public API required by the Networking RP contract. It can be used directly by Notification Hubs users.
     * 
     * Even though this namespace requires subscription id, resource group and namespace name, it returns a constant
     * payload (for a given namespacE) every time it's called.
     * That's why we don't send it to the sibling RP, but process it directly in the scale unit that received the
     * request.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param namespaceName Namespace name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of the List Private Link Resources operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<PrivateLinkResourceInner> listGroupIds(String resourceGroupName, String namespaceName,
        Context context);
}
