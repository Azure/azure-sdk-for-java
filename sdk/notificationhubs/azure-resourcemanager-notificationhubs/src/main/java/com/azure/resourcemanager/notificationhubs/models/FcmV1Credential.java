// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.notificationhubs.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.notificationhubs.fluent.models.FcmV1CredentialProperties;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Description of a NotificationHub FcmV1Credential.
 */
@Fluent
public final class FcmV1Credential {
    /*
     * Description of a NotificationHub FcmV1Credential.
     */
    @JsonProperty(value = "properties", required = true)
    private FcmV1CredentialProperties innerProperties = new FcmV1CredentialProperties();

    /**
     * Creates an instance of FcmV1Credential class.
     */
    public FcmV1Credential() {
    }

    /**
     * Get the innerProperties property: Description of a NotificationHub FcmV1Credential.
     * 
     * @return the innerProperties value.
     */
    private FcmV1CredentialProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the clientEmail property: Gets or sets client email.
     * 
     * @return the clientEmail value.
     */
    public String clientEmail() {
        return this.innerProperties() == null ? null : this.innerProperties().clientEmail();
    }

    /**
     * Set the clientEmail property: Gets or sets client email.
     * 
     * @param clientEmail the clientEmail value to set.
     * @return the FcmV1Credential object itself.
     */
    public FcmV1Credential withClientEmail(String clientEmail) {
        if (this.innerProperties() == null) {
            this.innerProperties = new FcmV1CredentialProperties();
        }
        this.innerProperties().withClientEmail(clientEmail);
        return this;
    }

    /**
     * Get the privateKey property: Gets or sets private key.
     * 
     * @return the privateKey value.
     */
    public String privateKey() {
        return this.innerProperties() == null ? null : this.innerProperties().privateKey();
    }

    /**
     * Set the privateKey property: Gets or sets private key.
     * 
     * @param privateKey the privateKey value to set.
     * @return the FcmV1Credential object itself.
     */
    public FcmV1Credential withPrivateKey(String privateKey) {
        if (this.innerProperties() == null) {
            this.innerProperties = new FcmV1CredentialProperties();
        }
        this.innerProperties().withPrivateKey(privateKey);
        return this;
    }

    /**
     * Get the projectId property: Gets or sets project id.
     * 
     * @return the projectId value.
     */
    public String projectId() {
        return this.innerProperties() == null ? null : this.innerProperties().projectId();
    }

    /**
     * Set the projectId property: Gets or sets project id.
     * 
     * @param projectId the projectId value to set.
     * @return the FcmV1Credential object itself.
     */
    public FcmV1Credential withProjectId(String projectId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new FcmV1CredentialProperties();
        }
        this.innerProperties().withProjectId(projectId);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property innerProperties in model FcmV1Credential"));
        } else {
            innerProperties().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(FcmV1Credential.class);
}
