// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.notificationhubs.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.Resource;
import com.azure.core.management.SystemData;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.notificationhubs.models.NamespaceStatus;
import com.azure.resourcemanager.notificationhubs.models.NamespaceType;
import com.azure.resourcemanager.notificationhubs.models.NetworkAcls;
import com.azure.resourcemanager.notificationhubs.models.OperationProvisioningState;
import com.azure.resourcemanager.notificationhubs.models.PublicNetworkAccess;
import com.azure.resourcemanager.notificationhubs.models.ReplicationRegion;
import com.azure.resourcemanager.notificationhubs.models.Sku;
import com.azure.resourcemanager.notificationhubs.models.ZoneRedundancyPreference;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;

/**
 * Notification Hubs Namespace Resource.
 */
@Fluent
public final class NamespaceResourceInner extends Resource {
    /*
     * The Sku description for a namespace
     */
    @JsonProperty(value = "sku", required = true)
    private Sku sku;

    /*
     * Represents namespace properties.
     */
    @JsonProperty(value = "properties")
    private NamespaceProperties innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Creates an instance of NamespaceResourceInner class.
     */
    public NamespaceResourceInner() {
    }

    /**
     * Get the sku property: The Sku description for a namespace.
     * 
     * @return the sku value.
     */
    public Sku sku() {
        return this.sku;
    }

    /**
     * Set the sku property: The Sku description for a namespace.
     * 
     * @param sku the sku value to set.
     * @return the NamespaceResourceInner object itself.
     */
    public NamespaceResourceInner withSku(Sku sku) {
        this.sku = sku;
        return this;
    }

    /**
     * Get the innerProperties property: Represents namespace properties.
     * 
     * @return the innerProperties value.
     */
    private NamespaceProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NamespaceResourceInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NamespaceResourceInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Get the name property: Name of the Notification Hubs namespace. This is immutable property, set automatically
     * by the service when the namespace is created.
     * 
     * @return the name value.
     */
    public String namePropertiesName() {
        return this.innerProperties() == null ? null : this.innerProperties().name();
    }

    /**
     * Get the provisioningState property: Defines values for OperationProvisioningState.
     * 
     * @return the provisioningState value.
     */
    public OperationProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Set the provisioningState property: Defines values for OperationProvisioningState.
     * 
     * @param provisioningState the provisioningState value to set.
     * @return the NamespaceResourceInner object itself.
     */
    public NamespaceResourceInner withProvisioningState(OperationProvisioningState provisioningState) {
        if (this.innerProperties() == null) {
            this.innerProperties = new NamespaceProperties();
        }
        this.innerProperties().withProvisioningState(provisioningState);
        return this;
    }

    /**
     * Get the status property: Namespace status.
     * 
     * @return the status value.
     */
    public NamespaceStatus status() {
        return this.innerProperties() == null ? null : this.innerProperties().status();
    }

    /**
     * Set the status property: Namespace status.
     * 
     * @param status the status value to set.
     * @return the NamespaceResourceInner object itself.
     */
    public NamespaceResourceInner withStatus(NamespaceStatus status) {
        if (this.innerProperties() == null) {
            this.innerProperties = new NamespaceProperties();
        }
        this.innerProperties().withStatus(status);
        return this;
    }

    /**
     * Get the enabled property: Gets or sets whether or not the namespace is currently enabled.
     * 
     * @return the enabled value.
     */
    public Boolean enabled() {
        return this.innerProperties() == null ? null : this.innerProperties().enabled();
    }

    /**
     * Get the critical property: Gets or sets whether or not the namespace is set as Critical.
     * 
     * @return the critical value.
     */
    public Boolean critical() {
        return this.innerProperties() == null ? null : this.innerProperties().critical();
    }

    /**
     * Get the subscriptionId property: Namespace subscription id.
     * 
     * @return the subscriptionId value.
     */
    public String subscriptionId() {
        return this.innerProperties() == null ? null : this.innerProperties().subscriptionId();
    }

    /**
     * Get the region property: Region. The value is always set to the same value as Namespace.Location, so we are
     * deprecating
     * this property.
     * 
     * @return the region value.
     */
    public String region() {
        return this.innerProperties() == null ? null : this.innerProperties().region();
    }

    /**
     * Get the metricId property: Azure Insights Metrics id.
     * 
     * @return the metricId value.
     */
    public String metricId() {
        return this.innerProperties() == null ? null : this.innerProperties().metricId();
    }

    /**
     * Get the createdAt property: Time when the namespace was created.
     * 
     * @return the createdAt value.
     */
    public OffsetDateTime createdAt() {
        return this.innerProperties() == null ? null : this.innerProperties().createdAt();
    }

    /**
     * Get the updatedAt property: Time when the namespace was updated.
     * 
     * @return the updatedAt value.
     */
    public OffsetDateTime updatedAt() {
        return this.innerProperties() == null ? null : this.innerProperties().updatedAt();
    }

    /**
     * Get the namespaceType property: Defines values for NamespaceType.
     * 
     * @return the namespaceType value.
     */
    public NamespaceType namespaceType() {
        return this.innerProperties() == null ? null : this.innerProperties().namespaceType();
    }

    /**
     * Set the namespaceType property: Defines values for NamespaceType.
     * 
     * @param namespaceType the namespaceType value to set.
     * @return the NamespaceResourceInner object itself.
     */
    public NamespaceResourceInner withNamespaceType(NamespaceType namespaceType) {
        if (this.innerProperties() == null) {
            this.innerProperties = new NamespaceProperties();
        }
        this.innerProperties().withNamespaceType(namespaceType);
        return this;
    }

    /**
     * Get the replicationRegion property: Allowed replication region.
     * 
     * @return the replicationRegion value.
     */
    public ReplicationRegion replicationRegion() {
        return this.innerProperties() == null ? null : this.innerProperties().replicationRegion();
    }

    /**
     * Set the replicationRegion property: Allowed replication region.
     * 
     * @param replicationRegion the replicationRegion value to set.
     * @return the NamespaceResourceInner object itself.
     */
    public NamespaceResourceInner withReplicationRegion(ReplicationRegion replicationRegion) {
        if (this.innerProperties() == null) {
            this.innerProperties = new NamespaceProperties();
        }
        this.innerProperties().withReplicationRegion(replicationRegion);
        return this;
    }

    /**
     * Get the zoneRedundancy property: Namespace SKU name.
     * 
     * @return the zoneRedundancy value.
     */
    public ZoneRedundancyPreference zoneRedundancy() {
        return this.innerProperties() == null ? null : this.innerProperties().zoneRedundancy();
    }

    /**
     * Set the zoneRedundancy property: Namespace SKU name.
     * 
     * @param zoneRedundancy the zoneRedundancy value to set.
     * @return the NamespaceResourceInner object itself.
     */
    public NamespaceResourceInner withZoneRedundancy(ZoneRedundancyPreference zoneRedundancy) {
        if (this.innerProperties() == null) {
            this.innerProperties = new NamespaceProperties();
        }
        this.innerProperties().withZoneRedundancy(zoneRedundancy);
        return this;
    }

    /**
     * Get the networkAcls property: A collection of network authorization rules.
     * 
     * @return the networkAcls value.
     */
    public NetworkAcls networkAcls() {
        return this.innerProperties() == null ? null : this.innerProperties().networkAcls();
    }

    /**
     * Set the networkAcls property: A collection of network authorization rules.
     * 
     * @param networkAcls the networkAcls value to set.
     * @return the NamespaceResourceInner object itself.
     */
    public NamespaceResourceInner withNetworkAcls(NetworkAcls networkAcls) {
        if (this.innerProperties() == null) {
            this.innerProperties = new NamespaceProperties();
        }
        this.innerProperties().withNetworkAcls(networkAcls);
        return this;
    }

    /**
     * Get the pnsCredentials property: Collection of Notification Hub or Notification Hub Namespace PNS credentials.
     * 
     * @return the pnsCredentials value.
     */
    public PnsCredentials pnsCredentials() {
        return this.innerProperties() == null ? null : this.innerProperties().pnsCredentials();
    }

    /**
     * Set the pnsCredentials property: Collection of Notification Hub or Notification Hub Namespace PNS credentials.
     * 
     * @param pnsCredentials the pnsCredentials value to set.
     * @return the NamespaceResourceInner object itself.
     */
    public NamespaceResourceInner withPnsCredentials(PnsCredentials pnsCredentials) {
        if (this.innerProperties() == null) {
            this.innerProperties = new NamespaceProperties();
        }
        this.innerProperties().withPnsCredentials(pnsCredentials);
        return this;
    }

    /**
     * Get the serviceBusEndpoint property: Gets or sets endpoint you can use to perform NotificationHub
     * operations.
     * 
     * @return the serviceBusEndpoint value.
     */
    public String serviceBusEndpoint() {
        return this.innerProperties() == null ? null : this.innerProperties().serviceBusEndpoint();
    }

    /**
     * Get the privateEndpointConnections property: Private Endpoint Connections for namespace.
     * 
     * @return the privateEndpointConnections value.
     */
    public List<PrivateEndpointConnectionResourceInner> privateEndpointConnections() {
        return this.innerProperties() == null ? null : this.innerProperties().privateEndpointConnections();
    }

    /**
     * Get the scaleUnit property: Gets or sets scaleUnit where the namespace gets created.
     * 
     * @return the scaleUnit value.
     */
    public String scaleUnit() {
        return this.innerProperties() == null ? null : this.innerProperties().scaleUnit();
    }

    /**
     * Set the scaleUnit property: Gets or sets scaleUnit where the namespace gets created.
     * 
     * @param scaleUnit the scaleUnit value to set.
     * @return the NamespaceResourceInner object itself.
     */
    public NamespaceResourceInner withScaleUnit(String scaleUnit) {
        if (this.innerProperties() == null) {
            this.innerProperties = new NamespaceProperties();
        }
        this.innerProperties().withScaleUnit(scaleUnit);
        return this;
    }

    /**
     * Get the dataCenter property: Deprecated.
     * 
     * @return the dataCenter value.
     */
    public String dataCenter() {
        return this.innerProperties() == null ? null : this.innerProperties().dataCenter();
    }

    /**
     * Set the dataCenter property: Deprecated.
     * 
     * @param dataCenter the dataCenter value to set.
     * @return the NamespaceResourceInner object itself.
     */
    public NamespaceResourceInner withDataCenter(String dataCenter) {
        if (this.innerProperties() == null) {
            this.innerProperties = new NamespaceProperties();
        }
        this.innerProperties().withDataCenter(dataCenter);
        return this;
    }

    /**
     * Get the publicNetworkAccess property: Type of public network access.
     * 
     * @return the publicNetworkAccess value.
     */
    public PublicNetworkAccess publicNetworkAccess() {
        return this.innerProperties() == null ? null : this.innerProperties().publicNetworkAccess();
    }

    /**
     * Set the publicNetworkAccess property: Type of public network access.
     * 
     * @param publicNetworkAccess the publicNetworkAccess value to set.
     * @return the NamespaceResourceInner object itself.
     */
    public NamespaceResourceInner withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess) {
        if (this.innerProperties() == null) {
            this.innerProperties = new NamespaceProperties();
        }
        this.innerProperties().withPublicNetworkAccess(publicNetworkAccess);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (sku() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property sku in model NamespaceResourceInner"));
        } else {
            sku().validate();
        }
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(NamespaceResourceInner.class);
}
