// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.notificationhubs.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Description of a NotificationHub MpnsCredential.
 */
@Fluent
public final class MpnsCredentialProperties {
    /*
     * Gets or sets the MPNS certificate.
     */
    @JsonProperty(value = "mpnsCertificate")
    private String mpnsCertificate;

    /*
     * Gets or sets the certificate key for this credential.
     */
    @JsonProperty(value = "certificateKey")
    private String certificateKey;

    /*
     * Gets or sets the MPNS certificate Thumbprint
     */
    @JsonProperty(value = "thumbprint")
    private String thumbprint;

    /**
     * Creates an instance of MpnsCredentialProperties class.
     */
    public MpnsCredentialProperties() {
    }

    /**
     * Get the mpnsCertificate property: Gets or sets the MPNS certificate.
     * 
     * @return the mpnsCertificate value.
     */
    public String mpnsCertificate() {
        return this.mpnsCertificate;
    }

    /**
     * Set the mpnsCertificate property: Gets or sets the MPNS certificate.
     * 
     * @param mpnsCertificate the mpnsCertificate value to set.
     * @return the MpnsCredentialProperties object itself.
     */
    public MpnsCredentialProperties withMpnsCertificate(String mpnsCertificate) {
        this.mpnsCertificate = mpnsCertificate;
        return this;
    }

    /**
     * Get the certificateKey property: Gets or sets the certificate key for this credential.
     * 
     * @return the certificateKey value.
     */
    public String certificateKey() {
        return this.certificateKey;
    }

    /**
     * Set the certificateKey property: Gets or sets the certificate key for this credential.
     * 
     * @param certificateKey the certificateKey value to set.
     * @return the MpnsCredentialProperties object itself.
     */
    public MpnsCredentialProperties withCertificateKey(String certificateKey) {
        this.certificateKey = certificateKey;
        return this;
    }

    /**
     * Get the thumbprint property: Gets or sets the MPNS certificate Thumbprint.
     * 
     * @return the thumbprint value.
     */
    public String thumbprint() {
        return this.thumbprint;
    }

    /**
     * Set the thumbprint property: Gets or sets the MPNS certificate Thumbprint.
     * 
     * @param thumbprint the thumbprint value to set.
     * @return the MpnsCredentialProperties object itself.
     */
    public MpnsCredentialProperties withThumbprint(String thumbprint) {
        this.thumbprint = thumbprint;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (mpnsCertificate() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property mpnsCertificate in model MpnsCredentialProperties"));
        }
        if (certificateKey() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property certificateKey in model MpnsCredentialProperties"));
        }
        if (thumbprint() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property thumbprint in model MpnsCredentialProperties"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(MpnsCredentialProperties.class);
}
