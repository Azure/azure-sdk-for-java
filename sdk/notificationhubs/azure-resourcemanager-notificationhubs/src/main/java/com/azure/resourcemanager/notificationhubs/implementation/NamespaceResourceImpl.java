// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.notificationhubs.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.notificationhubs.fluent.models.NamespaceProperties;
import com.azure.resourcemanager.notificationhubs.fluent.models.NamespaceResourceInner;
import com.azure.resourcemanager.notificationhubs.fluent.models.PnsCredentials;
import com.azure.resourcemanager.notificationhubs.fluent.models.PrivateEndpointConnectionResourceInner;
import com.azure.resourcemanager.notificationhubs.models.NamespacePatchParameters;
import com.azure.resourcemanager.notificationhubs.models.NamespaceResource;
import com.azure.resourcemanager.notificationhubs.models.NamespaceStatus;
import com.azure.resourcemanager.notificationhubs.models.NamespaceType;
import com.azure.resourcemanager.notificationhubs.models.NetworkAcls;
import com.azure.resourcemanager.notificationhubs.models.OperationProvisioningState;
import com.azure.resourcemanager.notificationhubs.models.PnsCredentialsResource;
import com.azure.resourcemanager.notificationhubs.models.PrivateEndpointConnectionResource;
import com.azure.resourcemanager.notificationhubs.models.PublicNetworkAccess;
import com.azure.resourcemanager.notificationhubs.models.ReplicationRegion;
import com.azure.resourcemanager.notificationhubs.models.Sku;
import com.azure.resourcemanager.notificationhubs.models.ZoneRedundancyPreference;
import java.time.OffsetDateTime;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

public final class NamespaceResourceImpl
    implements NamespaceResource, NamespaceResource.Definition, NamespaceResource.Update {
    private NamespaceResourceInner innerObject;

    private final com.azure.resourcemanager.notificationhubs.NotificationHubsManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public Sku sku() {
        return this.innerModel().sku();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String namePropertiesName() {
        return this.innerModel().namePropertiesName();
    }

    public OperationProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public NamespaceStatus status() {
        return this.innerModel().status();
    }

    public Boolean enabled() {
        return this.innerModel().enabled();
    }

    public Boolean critical() {
        return this.innerModel().critical();
    }

    public String subscriptionId() {
        return this.innerModel().subscriptionId();
    }

    public String region() {
        return this.innerModel().region();
    }

    public String metricId() {
        return this.innerModel().metricId();
    }

    public OffsetDateTime createdAt() {
        return this.innerModel().createdAt();
    }

    public OffsetDateTime updatedAt() {
        return this.innerModel().updatedAt();
    }

    public NamespaceType namespaceType() {
        return this.innerModel().namespaceType();
    }

    public ReplicationRegion replicationRegion() {
        return this.innerModel().replicationRegion();
    }

    public ZoneRedundancyPreference zoneRedundancy() {
        return this.innerModel().zoneRedundancy();
    }

    public NetworkAcls networkAcls() {
        return this.innerModel().networkAcls();
    }

    public PnsCredentials pnsCredentials() {
        return this.innerModel().pnsCredentials();
    }

    public String serviceBusEndpoint() {
        return this.innerModel().serviceBusEndpoint();
    }

    public List<PrivateEndpointConnectionResource> privateEndpointConnections() {
        List<PrivateEndpointConnectionResourceInner> inner = this.innerModel().privateEndpointConnections();
        if (inner != null) {
            return Collections.unmodifiableList(
                inner.stream().map(inner1 -> new PrivateEndpointConnectionResourceImpl(inner1, this.manager()))
                    .collect(Collectors.toList()));
        } else {
            return Collections.emptyList();
        }
    }

    public String scaleUnit() {
        return this.innerModel().scaleUnit();
    }

    public String dataCenter() {
        return this.innerModel().dataCenter();
    }

    public PublicNetworkAccess publicNetworkAccess() {
        return this.innerModel().publicNetworkAccess();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public NamespaceResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.notificationhubs.NotificationHubsManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String namespaceName;

    private NamespacePatchParameters updateParameters;

    public NamespaceResourceImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public NamespaceResource create() {
        this.innerObject = serviceManager.serviceClient().getNamespaces().createOrUpdate(resourceGroupName,
            namespaceName, this.innerModel(), Context.NONE);
        return this;
    }

    public NamespaceResource create(Context context) {
        this.innerObject = serviceManager.serviceClient().getNamespaces().createOrUpdate(resourceGroupName,
            namespaceName, this.innerModel(), context);
        return this;
    }

    NamespaceResourceImpl(String name,
        com.azure.resourcemanager.notificationhubs.NotificationHubsManager serviceManager) {
        this.innerObject = new NamespaceResourceInner();
        this.serviceManager = serviceManager;
        this.namespaceName = name;
    }

    public NamespaceResourceImpl update() {
        this.updateParameters = new NamespacePatchParameters();
        return this;
    }

    public NamespaceResource apply() {
        this.innerObject = serviceManager.serviceClient().getNamespaces()
            .updateWithResponse(resourceGroupName, namespaceName, updateParameters, Context.NONE).getValue();
        return this;
    }

    public NamespaceResource apply(Context context) {
        this.innerObject = serviceManager.serviceClient().getNamespaces()
            .updateWithResponse(resourceGroupName, namespaceName, updateParameters, context).getValue();
        return this;
    }

    NamespaceResourceImpl(NamespaceResourceInner innerObject,
        com.azure.resourcemanager.notificationhubs.NotificationHubsManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.namespaceName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "namespaces");
    }

    public NamespaceResource refresh() {
        this.innerObject = serviceManager.serviceClient().getNamespaces()
            .getByResourceGroupWithResponse(resourceGroupName, namespaceName, Context.NONE).getValue();
        return this;
    }

    public NamespaceResource refresh(Context context) {
        this.innerObject = serviceManager.serviceClient().getNamespaces()
            .getByResourceGroupWithResponse(resourceGroupName, namespaceName, context).getValue();
        return this;
    }

    public Response<PnsCredentialsResource> getPnsCredentialsWithResponse(Context context) {
        return serviceManager.namespaces().getPnsCredentialsWithResponse(resourceGroupName, namespaceName, context);
    }

    public PnsCredentialsResource getPnsCredentials() {
        return serviceManager.namespaces().getPnsCredentials(resourceGroupName, namespaceName);
    }

    public NamespaceResourceImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public NamespaceResourceImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public NamespaceResourceImpl withSku(Sku sku) {
        if (isInCreateMode()) {
            this.innerModel().withSku(sku);
            return this;
        } else {
            this.updateParameters.withSku(sku);
            return this;
        }
    }

    public NamespaceResourceImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateParameters.withTags(tags);
            return this;
        }
    }

    public NamespaceResourceImpl withProvisioningState(OperationProvisioningState provisioningState) {
        this.innerModel().withProvisioningState(provisioningState);
        return this;
    }

    public NamespaceResourceImpl withStatus(NamespaceStatus status) {
        this.innerModel().withStatus(status);
        return this;
    }

    public NamespaceResourceImpl withNamespaceType(NamespaceType namespaceType) {
        this.innerModel().withNamespaceType(namespaceType);
        return this;
    }

    public NamespaceResourceImpl withReplicationRegion(ReplicationRegion replicationRegion) {
        this.innerModel().withReplicationRegion(replicationRegion);
        return this;
    }

    public NamespaceResourceImpl withZoneRedundancy(ZoneRedundancyPreference zoneRedundancy) {
        this.innerModel().withZoneRedundancy(zoneRedundancy);
        return this;
    }

    public NamespaceResourceImpl withNetworkAcls(NetworkAcls networkAcls) {
        this.innerModel().withNetworkAcls(networkAcls);
        return this;
    }

    public NamespaceResourceImpl withPnsCredentials(PnsCredentials pnsCredentials) {
        this.innerModel().withPnsCredentials(pnsCredentials);
        return this;
    }

    public NamespaceResourceImpl withScaleUnit(String scaleUnit) {
        this.innerModel().withScaleUnit(scaleUnit);
        return this;
    }

    public NamespaceResourceImpl withDataCenter(String dataCenter) {
        this.innerModel().withDataCenter(dataCenter);
        return this;
    }

    public NamespaceResourceImpl withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess) {
        this.innerModel().withPublicNetworkAccess(publicNetworkAccess);
        return this;
    }

    public NamespaceResourceImpl withProperties(NamespaceProperties properties) {
        this.updateParameters.withProperties(properties);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
