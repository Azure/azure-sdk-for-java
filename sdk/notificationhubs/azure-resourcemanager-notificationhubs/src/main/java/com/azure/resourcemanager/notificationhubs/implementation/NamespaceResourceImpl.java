// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.notificationhubs.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.notificationhubs.fluent.models.NamespaceResourceInner;
import com.azure.resourcemanager.notificationhubs.models.NamespacePatchParameters;
import com.azure.resourcemanager.notificationhubs.models.NamespaceProperties;
import com.azure.resourcemanager.notificationhubs.models.NamespaceResource;
import com.azure.resourcemanager.notificationhubs.models.PnsCredentialsResource;
import com.azure.resourcemanager.notificationhubs.models.Sku;
import java.util.Collections;
import java.util.Map;

public final class NamespaceResourceImpl
    implements NamespaceResource, NamespaceResource.Definition, NamespaceResource.Update {
    private NamespaceResourceInner innerObject;

    private final com.azure.resourcemanager.notificationhubs.NotificationHubsManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public Sku sku() {
        return this.innerModel().sku();
    }

    public NamespaceProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public NamespaceResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.notificationhubs.NotificationHubsManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String namespaceName;

    private NamespacePatchParameters updateParameters;

    public NamespaceResourceImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public NamespaceResource create() {
        this.innerObject = serviceManager.serviceClient().getNamespaces().createOrUpdate(resourceGroupName,
            namespaceName, this.innerModel(), Context.NONE);
        return this;
    }

    public NamespaceResource create(Context context) {
        this.innerObject = serviceManager.serviceClient().getNamespaces().createOrUpdate(resourceGroupName,
            namespaceName, this.innerModel(), context);
        return this;
    }

    NamespaceResourceImpl(String name,
        com.azure.resourcemanager.notificationhubs.NotificationHubsManager serviceManager) {
        this.innerObject = new NamespaceResourceInner();
        this.serviceManager = serviceManager;
        this.namespaceName = name;
    }

    public NamespaceResourceImpl update() {
        this.updateParameters = new NamespacePatchParameters();
        return this;
    }

    public NamespaceResource apply() {
        this.innerObject = serviceManager.serviceClient().getNamespaces()
            .updateWithResponse(resourceGroupName, namespaceName, updateParameters, Context.NONE).getValue();
        return this;
    }

    public NamespaceResource apply(Context context) {
        this.innerObject = serviceManager.serviceClient().getNamespaces()
            .updateWithResponse(resourceGroupName, namespaceName, updateParameters, context).getValue();
        return this;
    }

    NamespaceResourceImpl(NamespaceResourceInner innerObject,
        com.azure.resourcemanager.notificationhubs.NotificationHubsManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.namespaceName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "namespaces");
    }

    public NamespaceResource refresh() {
        this.innerObject = serviceManager.serviceClient().getNamespaces()
            .getByResourceGroupWithResponse(resourceGroupName, namespaceName, Context.NONE).getValue();
        return this;
    }

    public NamespaceResource refresh(Context context) {
        this.innerObject = serviceManager.serviceClient().getNamespaces()
            .getByResourceGroupWithResponse(resourceGroupName, namespaceName, context).getValue();
        return this;
    }

    public Response<PnsCredentialsResource> getPnsCredentialsWithResponse(Context context) {
        return serviceManager.namespaces().getPnsCredentialsWithResponse(resourceGroupName, namespaceName, context);
    }

    public PnsCredentialsResource getPnsCredentials() {
        return serviceManager.namespaces().getPnsCredentials(resourceGroupName, namespaceName);
    }

    public NamespaceResourceImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public NamespaceResourceImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public NamespaceResourceImpl withSku(Sku sku) {
        if (isInCreateMode()) {
            this.innerModel().withSku(sku);
            return this;
        } else {
            this.updateParameters.withSku(sku);
            return this;
        }
    }

    public NamespaceResourceImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateParameters.withTags(tags);
            return this;
        }
    }

    public NamespaceResourceImpl withProperties(NamespaceProperties properties) {
        if (isInCreateMode()) {
            this.innerModel().withProperties(properties);
            return this;
        } else {
            this.updateParameters.withProperties(properties);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
