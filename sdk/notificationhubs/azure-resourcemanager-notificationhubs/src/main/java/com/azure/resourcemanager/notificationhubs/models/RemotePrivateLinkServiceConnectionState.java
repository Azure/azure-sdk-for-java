// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.notificationhubs.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * State of the Private Link Service connection.
 */
@Fluent
public final class RemotePrivateLinkServiceConnectionState
    implements JsonSerializable<RemotePrivateLinkServiceConnectionState> {
    /*
     * State of Private Link Connection.
     */
    private PrivateLinkConnectionStatus status;

    /*
     * Human-friendly description.
     */
    private String description;

    /*
     * Human-friendly description of required actions.
     */
    private String actionsRequired;

    /**
     * Creates an instance of RemotePrivateLinkServiceConnectionState class.
     */
    public RemotePrivateLinkServiceConnectionState() {
    }

    /**
     * Get the status property: State of Private Link Connection.
     * 
     * @return the status value.
     */
    public PrivateLinkConnectionStatus status() {
        return this.status;
    }

    /**
     * Set the status property: State of Private Link Connection.
     * 
     * @param status the status value to set.
     * @return the RemotePrivateLinkServiceConnectionState object itself.
     */
    public RemotePrivateLinkServiceConnectionState withStatus(PrivateLinkConnectionStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Get the description property: Human-friendly description.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Get the actionsRequired property: Human-friendly description of required actions.
     * 
     * @return the actionsRequired value.
     */
    public String actionsRequired() {
        return this.actionsRequired;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("status", this.status == null ? null : this.status.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RemotePrivateLinkServiceConnectionState from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RemotePrivateLinkServiceConnectionState if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the RemotePrivateLinkServiceConnectionState.
     */
    public static RemotePrivateLinkServiceConnectionState fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RemotePrivateLinkServiceConnectionState deserializedRemotePrivateLinkServiceConnectionState
                = new RemotePrivateLinkServiceConnectionState();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("status".equals(fieldName)) {
                    deserializedRemotePrivateLinkServiceConnectionState.status
                        = PrivateLinkConnectionStatus.fromString(reader.getString());
                } else if ("description".equals(fieldName)) {
                    deserializedRemotePrivateLinkServiceConnectionState.description = reader.getString();
                } else if ("actionsRequired".equals(fieldName)) {
                    deserializedRemotePrivateLinkServiceConnectionState.actionsRequired = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRemotePrivateLinkServiceConnectionState;
        });
    }
}
