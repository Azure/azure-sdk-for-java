// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.notificationhubs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.notificationhubs.NotificationHubsManager;
import com.azure.resourcemanager.notificationhubs.models.NamespaceResource;
import com.azure.resourcemanager.notificationhubs.models.NamespaceType;
import com.azure.resourcemanager.notificationhubs.models.SkuName;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class NamespacesGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"name\":\"t\",\"provisioningState\":\"n\",\"region\":\"lexxbczwtru\",\"metricId\":\"qzbqjvsov\",\"status\":\"okacspk\",\"createdAt\":\"2021-04-15T03:02:29Z\",\"updatedAt\":\"2021-04-27T23:18:31Z\",\"serviceBusEndpoint\":\"bpxjmfl\",\"subscriptionId\":\"vnchrkcci\",\"scaleUnit\":\"zjuqkhrsaj\",\"enabled\":false,\"critical\":false,\"dataCenter\":\"oskg\",\"namespaceType\":\"Messaging\"},\"sku\":{\"name\":\"Standard\",\"tier\":\"mjmvxieduugidyjr\",\"size\":\"byao\",\"family\":\"e\",\"capacity\":981492544},\"location\":\"onpc\",\"tags\":{\"eggzfb\":\"cohslkev\",\"ithlvmezyvshxm\":\"hfmvfaxkffe\",\"gigr\":\"sbbzo\"},\"id\":\"wburvjxxjnspydpt\",\"name\":\"oenkouknvudwti\",\"type\":\"kbldngkpocipa\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NotificationHubsManager manager = NotificationHubsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        NamespaceResource response = manager.namespaces()
            .getByResourceGroupWithResponse("jsllrmv", "d", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("onpc", response.location());
        Assertions.assertEquals("cohslkev", response.tags().get("eggzfb"));
        Assertions.assertEquals(SkuName.STANDARD, response.sku().name());
        Assertions.assertEquals("mjmvxieduugidyjr", response.sku().tier());
        Assertions.assertEquals("byao", response.sku().size());
        Assertions.assertEquals("e", response.sku().family());
        Assertions.assertEquals(981492544, response.sku().capacity());
        Assertions.assertEquals("t", response.namePropertiesName());
        Assertions.assertEquals("n", response.provisioningState());
        Assertions.assertEquals("lexxbczwtru", response.region());
        Assertions.assertEquals("okacspk", response.status());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-15T03:02:29Z"), response.createdAt());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-27T23:18:31Z"), response.updatedAt());
        Assertions.assertEquals("bpxjmfl", response.serviceBusEndpoint());
        Assertions.assertEquals("vnchrkcci", response.subscriptionId());
        Assertions.assertEquals("zjuqkhrsaj", response.scaleUnit());
        Assertions.assertEquals(false, response.enabled());
        Assertions.assertEquals(false, response.critical());
        Assertions.assertEquals("oskg", response.dataCenter());
        Assertions.assertEquals(NamespaceType.MESSAGING, response.namespaceType());
    }
}
