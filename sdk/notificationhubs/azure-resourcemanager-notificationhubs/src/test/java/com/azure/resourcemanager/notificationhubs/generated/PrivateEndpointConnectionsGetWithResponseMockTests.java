// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.notificationhubs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.notificationhubs.NotificationHubsManager;
import com.azure.resourcemanager.notificationhubs.models.PrivateEndpointConnectionProvisioningState;
import com.azure.resourcemanager.notificationhubs.models.PrivateEndpointConnectionResource;
import com.azure.resourcemanager.notificationhubs.models.PrivateLinkConnectionStatus;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PrivateEndpointConnectionsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Deleted\",\"privateEndpoint\":{\"id\":\"wp\"},\"groupIds\":[\"wbtlhflsjcdh\",\"zfjvfbgofe\"],\"privateLinkServiceConnectionState\":{\"status\":\"Approved\",\"description\":\"qmqhldvriii\",\"actionsRequired\":\"nalghfkvtvsexso\"}},\"id\":\"el\",\"name\":\"qhhahhxvrhmzkwpj\",\"type\":\"wws\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NotificationHubsManager manager = NotificationHubsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PrivateEndpointConnectionResource response = manager.privateEndpointConnections()
            .getWithResponse("okixrjqcir", "zpfrla", "szrnwo", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(PrivateEndpointConnectionProvisioningState.DELETED,
            response.properties().provisioningState());
        Assertions.assertEquals(PrivateLinkConnectionStatus.APPROVED,
            response.properties().privateLinkServiceConnectionState().status());
    }
}
