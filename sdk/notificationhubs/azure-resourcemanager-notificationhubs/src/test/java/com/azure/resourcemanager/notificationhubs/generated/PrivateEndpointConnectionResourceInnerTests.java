// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.notificationhubs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.notificationhubs.fluent.models.PrivateEndpointConnectionResourceInner;
import com.azure.resourcemanager.notificationhubs.models.PrivateEndpointConnectionProperties;
import com.azure.resourcemanager.notificationhubs.models.PrivateEndpointConnectionProvisioningState;
import com.azure.resourcemanager.notificationhubs.models.PrivateLinkConnectionStatus;
import com.azure.resourcemanager.notificationhubs.models.RemotePrivateEndpointConnection;
import com.azure.resourcemanager.notificationhubs.models.RemotePrivateLinkServiceConnectionState;
import org.junit.jupiter.api.Assertions;

public final class PrivateEndpointConnectionResourceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateEndpointConnectionResourceInner model = BinaryData.fromString(
            "{\"properties\":{\"provisioningState\":\"Succeeded\",\"privateEndpoint\":{\"id\":\"axcfjpgddtocjjx\"},\"groupIds\":[\"mouexhdzx\",\"bqe\",\"jnxqbzvddntwn\"],\"privateLinkServiceConnectionState\":{\"status\":\"Rejected\",\"description\":\"twnpzaoqvuhrhcf\",\"actionsRequired\":\"yd\"}},\"id\":\"lmjthjq\",\"name\":\"wpyeicxmqciwqvh\",\"type\":\"hix\"}")
            .toObject(PrivateEndpointConnectionResourceInner.class);
        Assertions.assertEquals(PrivateEndpointConnectionProvisioningState.SUCCEEDED,
            model.properties().provisioningState());
        Assertions.assertEquals(PrivateLinkConnectionStatus.REJECTED,
            model.properties().privateLinkServiceConnectionState().status());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateEndpointConnectionResourceInner model
            = new PrivateEndpointConnectionResourceInner().withProperties(new PrivateEndpointConnectionProperties()
                .withProvisioningState(PrivateEndpointConnectionProvisioningState.SUCCEEDED)
                .withPrivateEndpoint(new RemotePrivateEndpointConnection()).withPrivateLinkServiceConnectionState(
                    new RemotePrivateLinkServiceConnectionState().withStatus(PrivateLinkConnectionStatus.REJECTED)));
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnectionResourceInner.class);
        Assertions.assertEquals(PrivateEndpointConnectionProvisioningState.SUCCEEDED,
            model.properties().provisioningState());
        Assertions.assertEquals(PrivateLinkConnectionStatus.REJECTED,
            model.properties().privateLinkServiceConnectionState().status());
    }
}
