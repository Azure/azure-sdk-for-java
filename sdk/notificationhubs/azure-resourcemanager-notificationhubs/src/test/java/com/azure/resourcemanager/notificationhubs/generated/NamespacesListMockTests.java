// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.notificationhubs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.notificationhubs.NotificationHubsManager;
import com.azure.resourcemanager.notificationhubs.models.NamespaceResource;
import com.azure.resourcemanager.notificationhubs.models.NamespaceType;
import com.azure.resourcemanager.notificationhubs.models.SkuName;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class NamespacesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"name\":\"ahmgkbrp\",\"provisioningState\":\"dhibnuq\",\"region\":\"pikad\",\"metricId\":\"vtq\",\"status\":\"n\",\"createdAt\":\"2021-11-05T12:10:44Z\",\"updatedAt\":\"2021-04-18T08:45:47Z\",\"serviceBusEndpoint\":\"jggmebfsiarbu\",\"subscriptionId\":\"cvpnazzmhjrunmpx\",\"scaleUnit\":\"dbhrbnlankxm\",\"enabled\":false,\"critical\":true,\"dataCenter\":\"enbtkcxywny\",\"namespaceType\":\"Messaging\"},\"sku\":{\"name\":\"Basic\",\"tier\":\"lqidyby\",\"size\":\"zfcl\",\"family\":\"axdbabph\",\"capacity\":2118768153},\"location\":\"qlfktsths\",\"tags\":{\"wwrq\":\"cmnyyazttb\",\"ywbiexzfeyueax\":\"uedck\",\"wbhqwal\":\"bxu\",\"kzjancuxrhdwbav\":\"uzyoxaep\"},\"id\":\"bniwdj\",\"name\":\"wz\",\"type\":\"s\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NotificationHubsManager manager = NotificationHubsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<NamespaceResource> response = manager.namespaces().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("qlfktsths", response.iterator().next().location());
        Assertions.assertEquals("cmnyyazttb", response.iterator().next().tags().get("wwrq"));
        Assertions.assertEquals(SkuName.BASIC, response.iterator().next().sku().name());
        Assertions.assertEquals("lqidyby", response.iterator().next().sku().tier());
        Assertions.assertEquals("zfcl", response.iterator().next().sku().size());
        Assertions.assertEquals("axdbabph", response.iterator().next().sku().family());
        Assertions.assertEquals(2118768153, response.iterator().next().sku().capacity());
        Assertions.assertEquals("ahmgkbrp", response.iterator().next().namePropertiesName());
        Assertions.assertEquals("dhibnuq", response.iterator().next().provisioningState());
        Assertions.assertEquals("pikad", response.iterator().next().region());
        Assertions.assertEquals("n", response.iterator().next().status());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-05T12:10:44Z"), response.iterator().next().createdAt());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-18T08:45:47Z"), response.iterator().next().updatedAt());
        Assertions.assertEquals("jggmebfsiarbu", response.iterator().next().serviceBusEndpoint());
        Assertions.assertEquals("cvpnazzmhjrunmpx", response.iterator().next().subscriptionId());
        Assertions.assertEquals("dbhrbnlankxm", response.iterator().next().scaleUnit());
        Assertions.assertEquals(false, response.iterator().next().enabled());
        Assertions.assertEquals(true, response.iterator().next().critical());
        Assertions.assertEquals("enbtkcxywny", response.iterator().next().dataCenter());
        Assertions.assertEquals(NamespaceType.MESSAGING, response.iterator().next().namespaceType());
    }
}
