// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.notificationhubs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.notificationhubs.models.AccessRights;
import com.azure.resourcemanager.notificationhubs.models.IpRule;
import com.azure.resourcemanager.notificationhubs.models.NetworkAcls;
import com.azure.resourcemanager.notificationhubs.models.PublicInternetAuthorizationRule;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NetworkAclsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkAcls model = BinaryData.fromString(
            "{\"ipRules\":[{\"ipMask\":\"jwzrl\",\"rights\":[\"Manage\",\"Listen\"]},{\"ipMask\":\"lwhijcoejctbzaq\",\"rights\":[\"Send\",\"Manage\",\"Send\"]}],\"publicNetworkRule\":{\"rights\":[\"Listen\",\"Listen\"]}}")
            .toObject(NetworkAcls.class);
        Assertions.assertEquals("jwzrl", model.ipRules().get(0).ipMask());
        Assertions.assertEquals(AccessRights.MANAGE, model.ipRules().get(0).rights().get(0));
        Assertions.assertEquals(AccessRights.LISTEN, model.publicNetworkRule().rights().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkAcls model = new NetworkAcls()
            .withIpRules(Arrays.asList(
                new IpRule().withIpMask("jwzrl").withRights(Arrays.asList(AccessRights.MANAGE, AccessRights.LISTEN)),
                new IpRule().withIpMask("lwhijcoejctbzaq")
                    .withRights(Arrays.asList(AccessRights.SEND, AccessRights.MANAGE, AccessRights.SEND))))
            .withPublicNetworkRule(new PublicInternetAuthorizationRule()
                .withRights(Arrays.asList(AccessRights.LISTEN, AccessRights.LISTEN)));
        model = BinaryData.fromObject(model).toObject(NetworkAcls.class);
        Assertions.assertEquals("jwzrl", model.ipRules().get(0).ipMask());
        Assertions.assertEquals(AccessRights.MANAGE, model.ipRules().get(0).rights().get(0));
        Assertions.assertEquals(AccessRights.LISTEN, model.publicNetworkRule().rights().get(0));
    }
}
