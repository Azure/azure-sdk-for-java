// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.notificationhubs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.notificationhubs.fluent.models.NamespaceProperties;
import com.azure.resourcemanager.notificationhubs.models.NamespaceType;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class NamespacePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NamespaceProperties model = BinaryData.fromString(
            "{\"name\":\"hungbwjzrnf\",\"provisioningState\":\"xgispemvtzfkufu\",\"region\":\"jofxqe\",\"metricId\":\"jaeq\",\"status\":\"qjbasvms\",\"createdAt\":\"2021-08-09T10:57:51Z\",\"updatedAt\":\"2021-09-27T07:52:20Z\",\"serviceBusEndpoint\":\"gsntnbybkzgcwr\",\"subscriptionId\":\"lxxwrljdouskc\",\"scaleUnit\":\"kocrcjdkwtnhx\",\"enabled\":true,\"critical\":false,\"dataCenter\":\"sqrglssainq\",\"namespaceType\":\"NotificationHub\"}")
            .toObject(NamespaceProperties.class);
        Assertions.assertEquals("hungbwjzrnf", model.name());
        Assertions.assertEquals("xgispemvtzfkufu", model.provisioningState());
        Assertions.assertEquals("jofxqe", model.region());
        Assertions.assertEquals("qjbasvms", model.status());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-09T10:57:51Z"), model.createdAt());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-27T07:52:20Z"), model.updatedAt());
        Assertions.assertEquals("gsntnbybkzgcwr", model.serviceBusEndpoint());
        Assertions.assertEquals("lxxwrljdouskc", model.subscriptionId());
        Assertions.assertEquals("kocrcjdkwtnhx", model.scaleUnit());
        Assertions.assertEquals(true, model.enabled());
        Assertions.assertEquals(false, model.critical());
        Assertions.assertEquals("sqrglssainq", model.dataCenter());
        Assertions.assertEquals(NamespaceType.NOTIFICATION_HUB, model.namespaceType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NamespaceProperties model = new NamespaceProperties().withName("hungbwjzrnf")
            .withProvisioningState("xgispemvtzfkufu")
            .withRegion("jofxqe")
            .withStatus("qjbasvms")
            .withCreatedAt(OffsetDateTime.parse("2021-08-09T10:57:51Z"))
            .withUpdatedAt(OffsetDateTime.parse("2021-09-27T07:52:20Z"))
            .withServiceBusEndpoint("gsntnbybkzgcwr")
            .withSubscriptionId("lxxwrljdouskc")
            .withScaleUnit("kocrcjdkwtnhx")
            .withEnabled(true)
            .withCritical(false)
            .withDataCenter("sqrglssainq")
            .withNamespaceType(NamespaceType.NOTIFICATION_HUB);
        model = BinaryData.fromObject(model).toObject(NamespaceProperties.class);
        Assertions.assertEquals("hungbwjzrnf", model.name());
        Assertions.assertEquals("xgispemvtzfkufu", model.provisioningState());
        Assertions.assertEquals("jofxqe", model.region());
        Assertions.assertEquals("qjbasvms", model.status());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-09T10:57:51Z"), model.createdAt());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-27T07:52:20Z"), model.updatedAt());
        Assertions.assertEquals("gsntnbybkzgcwr", model.serviceBusEndpoint());
        Assertions.assertEquals("lxxwrljdouskc", model.subscriptionId());
        Assertions.assertEquals("kocrcjdkwtnhx", model.scaleUnit());
        Assertions.assertEquals(true, model.enabled());
        Assertions.assertEquals(false, model.critical());
        Assertions.assertEquals("sqrglssainq", model.dataCenter());
        Assertions.assertEquals(NamespaceType.NOTIFICATION_HUB, model.namespaceType());
    }
}
