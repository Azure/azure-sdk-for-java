// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.notificationhubs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.notificationhubs.NotificationHubsManager;
import com.azure.resourcemanager.notificationhubs.models.PrivateEndpointConnectionProvisioningState;
import com.azure.resourcemanager.notificationhubs.models.PrivateEndpointConnectionResource;
import com.azure.resourcemanager.notificationhubs.models.PrivateLinkConnectionStatus;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PrivateEndpointConnectionsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Updating\",\"privateEndpoint\":{\"id\":\"ufzdmsyq\"},\"groupIds\":[\"hwhbotzingamv\",\"phoszqz\",\"dphqamv\",\"kfwynw\"],\"privateLinkServiceConnectionState\":{\"status\":\"Pending\",\"description\":\"kayh\",\"actionsRequired\":\"nvyq\"}},\"id\":\"tkzwpcnpwzc\",\"name\":\"a\",\"type\":\"sgvvsccyajguq\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NotificationHubsManager manager = NotificationHubsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<PrivateEndpointConnectionResource> response
            = manager.privateEndpointConnections().list("ughftqsx", "qxujxukndxd", com.azure.core.util.Context.NONE);

        Assertions.assertEquals(PrivateEndpointConnectionProvisioningState.UPDATING,
            response.iterator().next().properties().provisioningState());
        Assertions.assertEquals(PrivateLinkConnectionStatus.PENDING,
            response.iterator().next().properties().privateLinkServiceConnectionState().status());
    }
}
