// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.videoanalyzer.models;

import com.azure.core.http.rest.Response;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.videoanalyzer.fluent.models.VideoEntityInner;

/** An immutable client-side representation of VideoEntity. */
public interface VideoEntity {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the title property: Optional video title provided by the user. Value can be up to 256 characters long.
     *
     * @return the title value.
     */
    String title();

    /**
     * Gets the description property: Optional video description provided by the user. Value can be up to 2048
     * characters long.
     *
     * @return the description value.
     */
    String description();

    /**
     * Gets the typePropertiesType property: Video content type. Different content types are suitable for different
     * applications and scenarios.
     *
     * @return the typePropertiesType value.
     */
    VideoType typePropertiesType();

    /**
     * Gets the flags property: Video flags contain information about the available video actions and its dynamic
     * properties based on the current video state.
     *
     * @return the flags value.
     */
    VideoFlags flags();

    /**
     * Gets the contentUrls property: Set of URLs to the video content.
     *
     * @return the contentUrls value.
     */
    VideoContentUrls contentUrls();

    /**
     * Gets the mediaInfo property: Contains information about the video and audio content.
     *
     * @return the mediaInfo value.
     */
    VideoMediaInfo mediaInfo();

    /**
     * Gets the archival property: Video archival properties.
     *
     * @return the archival value.
     */
    VideoArchival archival();

    /**
     * Gets the name of the resource group.
     *
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.videoanalyzer.fluent.models.VideoEntityInner object.
     *
     * @return the inner object.
     */
    VideoEntityInner innerModel();

    /** The entirety of the VideoEntity definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The VideoEntity definition stages. */
    interface DefinitionStages {
        /** The first stage of the VideoEntity definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the VideoEntity definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, accountName.
             *
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param accountName The Azure Video Analyzer account name.
             * @return the next definition stage.
             */
            WithCreate withExistingVideoAnalyzer(String resourceGroupName, String accountName);
        }
        /**
         * The stage of the VideoEntity definition which contains all the minimum required properties for the resource
         * to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTitle,
                DefinitionStages.WithDescription,
                DefinitionStages.WithMediaInfo,
                DefinitionStages.WithArchival {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            VideoEntity create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            VideoEntity create(Context context);
        }
        /** The stage of the VideoEntity definition allowing to specify title. */
        interface WithTitle {
            /**
             * Specifies the title property: Optional video title provided by the user. Value can be up to 256
             * characters long..
             *
             * @param title Optional video title provided by the user. Value can be up to 256 characters long.
             * @return the next definition stage.
             */
            WithCreate withTitle(String title);
        }
        /** The stage of the VideoEntity definition allowing to specify description. */
        interface WithDescription {
            /**
             * Specifies the description property: Optional video description provided by the user. Value can be up to
             * 2048 characters long..
             *
             * @param description Optional video description provided by the user. Value can be up to 2048 characters
             *     long.
             * @return the next definition stage.
             */
            WithCreate withDescription(String description);
        }
        /** The stage of the VideoEntity definition allowing to specify mediaInfo. */
        interface WithMediaInfo {
            /**
             * Specifies the mediaInfo property: Contains information about the video and audio content..
             *
             * @param mediaInfo Contains information about the video and audio content.
             * @return the next definition stage.
             */
            WithCreate withMediaInfo(VideoMediaInfo mediaInfo);
        }
        /** The stage of the VideoEntity definition allowing to specify archival. */
        interface WithArchival {
            /**
             * Specifies the archival property: Video archival properties..
             *
             * @param archival Video archival properties.
             * @return the next definition stage.
             */
            WithCreate withArchival(VideoArchival archival);
        }
    }
    /**
     * Begins update for the VideoEntity resource.
     *
     * @return the stage of resource update.
     */
    VideoEntity.Update update();

    /** The template for VideoEntity update. */
    interface Update
        extends UpdateStages.WithTitle,
            UpdateStages.WithDescription,
            UpdateStages.WithMediaInfo,
            UpdateStages.WithArchival {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        VideoEntity apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        VideoEntity apply(Context context);
    }
    /** The VideoEntity update stages. */
    interface UpdateStages {
        /** The stage of the VideoEntity update allowing to specify title. */
        interface WithTitle {
            /**
             * Specifies the title property: Optional video title provided by the user. Value can be up to 256
             * characters long..
             *
             * @param title Optional video title provided by the user. Value can be up to 256 characters long.
             * @return the next definition stage.
             */
            Update withTitle(String title);
        }
        /** The stage of the VideoEntity update allowing to specify description. */
        interface WithDescription {
            /**
             * Specifies the description property: Optional video description provided by the user. Value can be up to
             * 2048 characters long..
             *
             * @param description Optional video description provided by the user. Value can be up to 2048 characters
             *     long.
             * @return the next definition stage.
             */
            Update withDescription(String description);
        }
        /** The stage of the VideoEntity update allowing to specify mediaInfo. */
        interface WithMediaInfo {
            /**
             * Specifies the mediaInfo property: Contains information about the video and audio content..
             *
             * @param mediaInfo Contains information about the video and audio content.
             * @return the next definition stage.
             */
            Update withMediaInfo(VideoMediaInfo mediaInfo);
        }
        /** The stage of the VideoEntity update allowing to specify archival. */
        interface WithArchival {
            /**
             * Specifies the archival property: Video archival properties..
             *
             * @param archival Video archival properties.
             * @return the next definition stage.
             */
            Update withArchival(VideoArchival archival);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    VideoEntity refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    VideoEntity refresh(Context context);

    /**
     * Generates a streaming token which can be used for accessing content from video content URLs, for a video resource
     * with the given name.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return "Video content token grants access to the video content URLs.".
     */
    VideoContentToken listContentToken();

    /**
     * Generates a streaming token which can be used for accessing content from video content URLs, for a video resource
     * with the given name.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return "Video content token grants access to the video content URLs." along with {@link Response}.
     */
    Response<VideoContentToken> listContentTokenWithResponse(Context context);
}
