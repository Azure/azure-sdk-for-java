// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.videoanalyzer.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Base type for all audio encoder presets, which define the recipe or instructions on how audio should be processed.
 */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    include = JsonTypeInfo.As.PROPERTY,
    property = "@type",
    defaultImpl = AudioEncoderBase.class)
@JsonTypeName("AudioEncoderBase")
@JsonSubTypes({@JsonSubTypes.Type(name = "#Microsoft.VideoAnalyzer.AudioEncoderAac", value = AudioEncoderAac.class)})
@Fluent
public class AudioEncoderBase {
    /*
     * Bitrate, in kilobits per second or Kbps, at which audio should be
     * encoded (2-channel stereo audio at a sampling rate of 48 kHz). Allowed
     * values are 96, 112, 128, 160, 192, 224, and 256. If omitted, the bitrate
     * of the input audio is used.
     */
    @JsonProperty(value = "bitrateKbps")
    private String bitrateKbps;

    /**
     * Get the bitrateKbps property: Bitrate, in kilobits per second or Kbps, at which audio should be encoded
     * (2-channel stereo audio at a sampling rate of 48 kHz). Allowed values are 96, 112, 128, 160, 192, 224, and 256.
     * If omitted, the bitrate of the input audio is used.
     *
     * @return the bitrateKbps value.
     */
    public String bitrateKbps() {
        return this.bitrateKbps;
    }

    /**
     * Set the bitrateKbps property: Bitrate, in kilobits per second or Kbps, at which audio should be encoded
     * (2-channel stereo audio at a sampling rate of 48 kHz). Allowed values are 96, 112, 128, 160, 192, 224, and 256.
     * If omitted, the bitrate of the input audio is used.
     *
     * @param bitrateKbps the bitrateKbps value to set.
     * @return the AudioEncoderBase object itself.
     */
    public AudioEncoderBase withBitrateKbps(String bitrateKbps) {
        this.bitrateKbps = bitrateKbps;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
