// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.videoanalyzer.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.videoanalyzer.fluent.models.VideoContentTokenInner;
import com.azure.resourcemanager.videoanalyzer.fluent.models.VideoEntityInner;

/** An instance of this class provides access to all the operations defined in VideosClient. */
public interface VideosClient {
    /**
     * Retrieves a list of video resources that have been created, along with their JSON representations.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The Azure Video Analyzer account name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a collection of VideoEntity items as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<VideoEntityInner> list(String resourceGroupName, String accountName);

    /**
     * Retrieves a list of video resources that have been created, along with their JSON representations.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The Azure Video Analyzer account name.
     * @param top Specifies a non-negative integer n that limits the number of items returned from a collection. The
     *     service returns the number of available items up to but not greater than the specified value n.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a collection of VideoEntity items as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<VideoEntityInner> list(String resourceGroupName, String accountName, Integer top, Context context);

    /**
     * Retrieves an existing video resource with the given name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The Azure Video Analyzer account name.
     * @param videoName The Video name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a video resource within Azure Video Analyzer.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    VideoEntityInner get(String resourceGroupName, String accountName, String videoName);

    /**
     * Retrieves an existing video resource with the given name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The Azure Video Analyzer account name.
     * @param videoName The Video name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a video resource within Azure Video Analyzer along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<VideoEntityInner> getWithResponse(
        String resourceGroupName, String accountName, String videoName, Context context);

    /**
     * Creates a new video resource or updates an existing video resource with the given name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The Azure Video Analyzer account name.
     * @param videoName The Video name.
     * @param parameters The request parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a video resource within Azure Video Analyzer.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    VideoEntityInner createOrUpdate(
        String resourceGroupName, String accountName, String videoName, VideoEntityInner parameters);

    /**
     * Creates a new video resource or updates an existing video resource with the given name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The Azure Video Analyzer account name.
     * @param videoName The Video name.
     * @param parameters The request parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a video resource within Azure Video Analyzer along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<VideoEntityInner> createOrUpdateWithResponse(
        String resourceGroupName, String accountName, String videoName, VideoEntityInner parameters, Context context);

    /**
     * Deletes an existing video resource and its underlying data. This operation is irreversible.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The Azure Video Analyzer account name.
     * @param videoName The Video name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String accountName, String videoName);

    /**
     * Deletes an existing video resource and its underlying data. This operation is irreversible.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The Azure Video Analyzer account name.
     * @param videoName The Video name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String resourceGroupName, String accountName, String videoName, Context context);

    /**
     * Updates individual properties of an existing video resource with the given name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The Azure Video Analyzer account name.
     * @param videoName The Video name.
     * @param parameters The request parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a video resource within Azure Video Analyzer.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    VideoEntityInner update(
        String resourceGroupName, String accountName, String videoName, VideoEntityInner parameters);

    /**
     * Updates individual properties of an existing video resource with the given name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The Azure Video Analyzer account name.
     * @param videoName The Video name.
     * @param parameters The request parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a video resource within Azure Video Analyzer along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<VideoEntityInner> updateWithResponse(
        String resourceGroupName, String accountName, String videoName, VideoEntityInner parameters, Context context);

    /**
     * Generates a streaming token which can be used for accessing content from video content URLs, for a video resource
     * with the given name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The Azure Video Analyzer account name.
     * @param videoName The Video name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return "Video content token grants access to the video content URLs.".
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    VideoContentTokenInner listContentToken(String resourceGroupName, String accountName, String videoName);

    /**
     * Generates a streaming token which can be used for accessing content from video content URLs, for a video resource
     * with the given name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The Azure Video Analyzer account name.
     * @param videoName The Video name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return "Video content token grants access to the video content URLs." along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<VideoContentTokenInner> listContentTokenWithResponse(
        String resourceGroupName, String accountName, String videoName, Context context);
}
