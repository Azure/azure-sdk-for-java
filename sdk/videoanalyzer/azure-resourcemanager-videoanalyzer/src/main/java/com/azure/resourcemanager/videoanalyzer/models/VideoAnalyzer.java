// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.videoanalyzer.models;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.videoanalyzer.fluent.models.VideoAnalyzerInner;
import java.util.List;
import java.util.Map;

/** An immutable client-side representation of VideoAnalyzer. */
public interface VideoAnalyzer {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the identity property: The identities associated to the Video Analyzer resource.
     *
     * @return the identity value.
     */
    VideoAnalyzerIdentity identity();

    /**
     * Gets the storageAccounts property: The storage accounts for this resource.
     *
     * @return the storageAccounts value.
     */
    List<StorageAccount> storageAccounts();

    /**
     * Gets the endpoints property: The endpoints associated with this resource.
     *
     * @return the endpoints value.
     */
    List<Endpoint> endpoints();

    /**
     * Gets the encryption property: The account encryption properties.
     *
     * @return the encryption value.
     */
    AccountEncryption encryption();

    /**
     * Gets the iotHubs property: The IoT Hubs for this resource.
     *
     * @return the iotHubs value.
     */
    List<IotHub> iotHubs();

    /**
     * Gets the publicNetworkAccess property: Whether or not public network access is allowed for resources under the
     * Video Analyzer account.
     *
     * @return the publicNetworkAccess value.
     */
    PublicNetworkAccess publicNetworkAccess();

    /**
     * Gets the networkAccessControl property: Network access control for Video Analyzer.
     *
     * @return the networkAccessControl value.
     */
    NetworkAccessControl networkAccessControl();

    /**
     * Gets the provisioningState property: Provisioning state of the Video Analyzer account.
     *
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the privateEndpointConnections property: Private Endpoint Connections created under Video Analyzer account.
     *
     * @return the privateEndpointConnections value.
     */
    List<PrivateEndpointConnection> privateEndpointConnections();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     *
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.videoanalyzer.fluent.models.VideoAnalyzerInner object.
     *
     * @return the inner object.
     */
    VideoAnalyzerInner innerModel();

    /** The entirety of the VideoAnalyzer definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithResourceGroup,
            DefinitionStages.WithCreate {
    }
    /** The VideoAnalyzer definition stages. */
    interface DefinitionStages {
        /** The first stage of the VideoAnalyzer definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the VideoAnalyzer definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }
        /** The stage of the VideoAnalyzer definition allowing to specify parent resource. */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             *
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }
        /**
         * The stage of the VideoAnalyzer definition which contains all the minimum required properties for the resource
         * to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithIdentity,
                DefinitionStages.WithStorageAccounts,
                DefinitionStages.WithEncryption,
                DefinitionStages.WithIotHubs,
                DefinitionStages.WithPublicNetworkAccess,
                DefinitionStages.WithNetworkAccessControl {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            VideoAnalyzer create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            VideoAnalyzer create(Context context);
        }
        /** The stage of the VideoAnalyzer definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the VideoAnalyzer definition allowing to specify identity. */
        interface WithIdentity {
            /**
             * Specifies the identity property: The identities associated to the Video Analyzer resource..
             *
             * @param identity The identities associated to the Video Analyzer resource.
             * @return the next definition stage.
             */
            WithCreate withIdentity(VideoAnalyzerIdentity identity);
        }
        /** The stage of the VideoAnalyzer definition allowing to specify storageAccounts. */
        interface WithStorageAccounts {
            /**
             * Specifies the storageAccounts property: The storage accounts for this resource..
             *
             * @param storageAccounts The storage accounts for this resource.
             * @return the next definition stage.
             */
            WithCreate withStorageAccounts(List<StorageAccount> storageAccounts);
        }
        /** The stage of the VideoAnalyzer definition allowing to specify encryption. */
        interface WithEncryption {
            /**
             * Specifies the encryption property: The account encryption properties..
             *
             * @param encryption The account encryption properties.
             * @return the next definition stage.
             */
            WithCreate withEncryption(AccountEncryption encryption);
        }
        /** The stage of the VideoAnalyzer definition allowing to specify iotHubs. */
        interface WithIotHubs {
            /**
             * Specifies the iotHubs property: The IoT Hubs for this resource..
             *
             * @param iotHubs The IoT Hubs for this resource.
             * @return the next definition stage.
             */
            WithCreate withIotHubs(List<IotHub> iotHubs);
        }
        /** The stage of the VideoAnalyzer definition allowing to specify publicNetworkAccess. */
        interface WithPublicNetworkAccess {
            /**
             * Specifies the publicNetworkAccess property: Whether or not public network access is allowed for resources
             * under the Video Analyzer account..
             *
             * @param publicNetworkAccess Whether or not public network access is allowed for resources under the Video
             *     Analyzer account.
             * @return the next definition stage.
             */
            WithCreate withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess);
        }
        /** The stage of the VideoAnalyzer definition allowing to specify networkAccessControl. */
        interface WithNetworkAccessControl {
            /**
             * Specifies the networkAccessControl property: Network access control for Video Analyzer..
             *
             * @param networkAccessControl Network access control for Video Analyzer.
             * @return the next definition stage.
             */
            WithCreate withNetworkAccessControl(NetworkAccessControl networkAccessControl);
        }
    }
    /**
     * Begins update for the VideoAnalyzer resource.
     *
     * @return the stage of resource update.
     */
    VideoAnalyzer.Update update();

    /** The template for VideoAnalyzer update. */
    interface Update
        extends UpdateStages.WithTags,
            UpdateStages.WithIdentity,
            UpdateStages.WithStorageAccounts,
            UpdateStages.WithEncryption,
            UpdateStages.WithIotHubs,
            UpdateStages.WithPublicNetworkAccess,
            UpdateStages.WithNetworkAccessControl {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        VideoAnalyzer apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        VideoAnalyzer apply(Context context);
    }
    /** The VideoAnalyzer update stages. */
    interface UpdateStages {
        /** The stage of the VideoAnalyzer update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
        /** The stage of the VideoAnalyzer update allowing to specify identity. */
        interface WithIdentity {
            /**
             * Specifies the identity property: The identities associated to the Video Analyzer resource..
             *
             * @param identity The identities associated to the Video Analyzer resource.
             * @return the next definition stage.
             */
            Update withIdentity(VideoAnalyzerIdentity identity);
        }
        /** The stage of the VideoAnalyzer update allowing to specify storageAccounts. */
        interface WithStorageAccounts {
            /**
             * Specifies the storageAccounts property: The storage accounts for this resource..
             *
             * @param storageAccounts The storage accounts for this resource.
             * @return the next definition stage.
             */
            Update withStorageAccounts(List<StorageAccount> storageAccounts);
        }
        /** The stage of the VideoAnalyzer update allowing to specify encryption. */
        interface WithEncryption {
            /**
             * Specifies the encryption property: The account encryption properties..
             *
             * @param encryption The account encryption properties.
             * @return the next definition stage.
             */
            Update withEncryption(AccountEncryption encryption);
        }
        /** The stage of the VideoAnalyzer update allowing to specify iotHubs. */
        interface WithIotHubs {
            /**
             * Specifies the iotHubs property: The IoT Hubs for this resource..
             *
             * @param iotHubs The IoT Hubs for this resource.
             * @return the next definition stage.
             */
            Update withIotHubs(List<IotHub> iotHubs);
        }
        /** The stage of the VideoAnalyzer update allowing to specify publicNetworkAccess. */
        interface WithPublicNetworkAccess {
            /**
             * Specifies the publicNetworkAccess property: Whether or not public network access is allowed for resources
             * under the Video Analyzer account..
             *
             * @param publicNetworkAccess Whether or not public network access is allowed for resources under the Video
             *     Analyzer account.
             * @return the next definition stage.
             */
            Update withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess);
        }
        /** The stage of the VideoAnalyzer update allowing to specify networkAccessControl. */
        interface WithNetworkAccessControl {
            /**
             * Specifies the networkAccessControl property: Network access control for Video Analyzer..
             *
             * @param networkAccessControl Network access control for Video Analyzer.
             * @return the next definition stage.
             */
            Update withNetworkAccessControl(NetworkAccessControl networkAccessControl);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    VideoAnalyzer refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    VideoAnalyzer refresh(Context context);
}
