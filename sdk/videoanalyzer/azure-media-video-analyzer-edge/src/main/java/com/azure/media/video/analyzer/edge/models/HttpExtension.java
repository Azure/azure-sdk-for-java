// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

package com.azure.media.video.analyzer.edge.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;

/**
 * A processor that allows the pipeline topology to send video frames (mostly at low frame rates e.g. &lt;5 fps) to an
 * external inference container over an HTTP-based RESTful API. Inference results are relayed to downstream nodes.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "@type")
@JsonTypeName("#Microsoft.VideoAnalyzer.HttpExtension")
@Immutable
public final class HttpExtension extends ExtensionProcessorBase {
    /** {@inheritDoc} */
    @Override
    public HttpExtension setEndpoint(Endpoint endpoint) {
        super.setEndpoint(endpoint);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public HttpExtension setImage(Image image) {
        super.setImage(image);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public HttpExtension setSamplingOptions(SamplingOptions samplingOptions) {
        super.setSamplingOptions(samplingOptions);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public HttpExtension setName(String name) {
        super.setName(name);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public HttpExtension setInputs(List<NodeInput> inputs) {
        super.setInputs(inputs);
        return this;
    }
}
