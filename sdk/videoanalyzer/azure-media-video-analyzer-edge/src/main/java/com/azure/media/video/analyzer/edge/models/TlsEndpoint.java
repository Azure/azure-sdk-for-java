// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

package com.azure.media.video.analyzer.edge.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/** A TLS endpoint for pipeline topology external connections. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "@type")
@JsonTypeName("#Microsoft.VideoAnalyzer.TlsEndpoint")
@Fluent
public final class TlsEndpoint extends Endpoint {
    /*
     * Trusted certificates when authenticating a TLS connection. Null
     * designates that Azure Media Service's source of trust should be used.
     */
    @JsonProperty(value = "trustedCertificates")
    private CertificateSource trustedCertificates;

    /*
     * Validation options to use when authenticating a TLS connection. By
     * default, strict validation is used.
     */
    @JsonProperty(value = "validationOptions")
    private TlsValidationOptions validationOptions;

    /**
     * Get the trustedCertificates property: Trusted certificates when authenticating a TLS connection. Null designates
     * that Azure Media Service's source of trust should be used.
     *
     * @return the trustedCertificates value.
     */
    public CertificateSource getTrustedCertificates() {
        return this.trustedCertificates;
    }

    /**
     * Set the trustedCertificates property: Trusted certificates when authenticating a TLS connection. Null designates
     * that Azure Media Service's source of trust should be used.
     *
     * @param trustedCertificates the trustedCertificates value to set.
     * @return the TlsEndpoint object itself.
     */
    public TlsEndpoint setTrustedCertificates(CertificateSource trustedCertificates) {
        this.trustedCertificates = trustedCertificates;
        return this;
    }

    /**
     * Get the validationOptions property: Validation options to use when authenticating a TLS connection. By default,
     * strict validation is used.
     *
     * @return the validationOptions value.
     */
    public TlsValidationOptions getValidationOptions() {
        return this.validationOptions;
    }

    /**
     * Set the validationOptions property: Validation options to use when authenticating a TLS connection. By default,
     * strict validation is used.
     *
     * @param validationOptions the validationOptions value to set.
     * @return the TlsEndpoint object itself.
     */
    public TlsEndpoint setValidationOptions(TlsValidationOptions validationOptions) {
        this.validationOptions = validationOptions;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public TlsEndpoint setCredentials(Credentials credentials) {
        super.setCredentials(credentials);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public TlsEndpoint setUrl(String url) {
        super.setUrl(url);
        return this;
    }
}
