// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

package com.azure.media.video.analyzer.edge.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/** Enables a pipeline topology to capture media from a RTSP server. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "@type")
@JsonTypeName("#Microsoft.VideoAnalyzer.RtspSource")
@Fluent
public final class RtspSource extends Source {
    /*
     * Underlying RTSP transport. This is used to enable or disable HTTP
     * tunneling.
     */
    @JsonProperty(value = "transport")
    private RtspTransport transport;

    /*
     * RTSP endpoint of the stream that is being connected to.
     */
    @JsonProperty(value = "endpoint", required = true)
    private Endpoint endpoint;

    /**
     * Get the transport property: Underlying RTSP transport. This is used to enable or disable HTTP tunneling.
     *
     * @return the transport value.
     */
    public RtspTransport getTransport() {
        return this.transport;
    }

    /**
     * Set the transport property: Underlying RTSP transport. This is used to enable or disable HTTP tunneling.
     *
     * @param transport the transport value to set.
     * @return the RtspSource object itself.
     */
    public RtspSource setTransport(RtspTransport transport) {
        this.transport = transport;
        return this;
    }

    /**
     * Get the endpoint property: RTSP endpoint of the stream that is being connected to.
     *
     * @return the endpoint value.
     */
    public Endpoint getEndpoint() {
        return this.endpoint;
    }

    /**
     * Set the endpoint property: RTSP endpoint of the stream that is being connected to.
     *
     * @param endpoint the endpoint value to set.
     * @return the RtspSource object itself.
     */
    public RtspSource setEndpoint(Endpoint endpoint) {
        this.endpoint = endpoint;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public RtspSource setName(String name) {
        super.setName(name);
        return this;
    }
}
