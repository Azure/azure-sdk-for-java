// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.media.video.analyzer.edge.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;

/**
 * A node that accepts raw video as input, and detects if there are moving objects present. If so, then it emits an
 * event, and allows frames where motion was detected to pass through. Other frames are blocked/dropped.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "@type")
@JsonTypeName("#Microsoft.VideoAnalyzer.MotionDetectionProcessor")
@Fluent
public final class MotionDetectionProcessor extends Processor {
    /*
     * Enumeration that specifies the sensitivity of the motion detection
     * processor.
     */
    @JsonProperty(value = "sensitivity")
    private MotionDetectionSensitivity sensitivity;

    /*
     * Indicates whether the processor should detect and output the regions,
     * within the video frame, where motion was detected. Default is true.
     */
    @JsonProperty(value = "outputMotionRegion")
    private Boolean outputMotionRegion;

    /*
     * Event aggregation window duration, or 0 for no aggregation.
     */
    @JsonProperty(value = "eventAggregationWindow")
    private String eventAggregationWindow;

    /**
     * Creates an instance of MotionDetectionProcessor class.
     *
     * @param name the name value to set.
     * @param inputs the inputs value to set.
     */
    @JsonCreator
    public MotionDetectionProcessor(
            @JsonProperty(value = "name", required = true) String name,
            @JsonProperty(value = "inputs", required = true) List<NodeInput> inputs) {
        super(name, inputs);
    }

    /**
     * Get the sensitivity property: Enumeration that specifies the sensitivity of the motion detection processor.
     *
     * @return the sensitivity value.
     */
    public MotionDetectionSensitivity getSensitivity() {
        return this.sensitivity;
    }

    /**
     * Set the sensitivity property: Enumeration that specifies the sensitivity of the motion detection processor.
     *
     * @param sensitivity the sensitivity value to set.
     * @return the MotionDetectionProcessor object itself.
     */
    public MotionDetectionProcessor setSensitivity(MotionDetectionSensitivity sensitivity) {
        this.sensitivity = sensitivity;
        return this;
    }

    /**
     * Get the outputMotionRegion property: Indicates whether the processor should detect and output the regions, within
     * the video frame, where motion was detected. Default is true.
     *
     * @return the outputMotionRegion value.
     */
    public Boolean isOutputMotionRegion() {
        return this.outputMotionRegion;
    }

    /**
     * Set the outputMotionRegion property: Indicates whether the processor should detect and output the regions, within
     * the video frame, where motion was detected. Default is true.
     *
     * @param outputMotionRegion the outputMotionRegion value to set.
     * @return the MotionDetectionProcessor object itself.
     */
    public MotionDetectionProcessor setOutputMotionRegion(Boolean outputMotionRegion) {
        this.outputMotionRegion = outputMotionRegion;
        return this;
    }

    /**
     * Get the eventAggregationWindow property: Event aggregation window duration, or 0 for no aggregation.
     *
     * @return the eventAggregationWindow value.
     */
    public String getEventAggregationWindow() {
        return this.eventAggregationWindow;
    }

    /**
     * Set the eventAggregationWindow property: Event aggregation window duration, or 0 for no aggregation.
     *
     * @param eventAggregationWindow the eventAggregationWindow value to set.
     * @return the MotionDetectionProcessor object itself.
     */
    public MotionDetectionProcessor setEventAggregationWindow(String eventAggregationWindow) {
        this.eventAggregationWindow = eventAggregationWindow;
        return this;
    }
}
