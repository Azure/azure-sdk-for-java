// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

package com.azure.media.video.analyzer.edge.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The declaration of a parameter in the pipeline topology. A topology can be authored with parameters. Then, during
 * live pipeline creation, the value for those parameters can be specified. This allows the same pipeline topology to be
 * used as a blueprint for multiple live pipelines with different values for the parameters.
 */
@Fluent
public final class ParameterDeclaration {
    /*
     * The name of the parameter.
     */
    @JsonProperty(value = "name", required = true)
    private String name;

    /*
     * The type of the parameter.
     */
    @JsonProperty(value = "type", required = true)
    private ParameterType type;

    /*
     * Description of the parameter.
     */
    @JsonProperty(value = "description")
    private String description;

    /*
     * The default value for the parameter to be used if the live pipeline does
     * not specify a value.
     */
    @JsonProperty(value = "default")
    private String defaultProperty;

    /**
     * Get the name property: The name of the parameter.
     *
     * @return the name value.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Set the name property: The name of the parameter.
     *
     * @param name the name value to set.
     * @return the ParameterDeclaration object itself.
     */
    public ParameterDeclaration setName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the type property: The type of the parameter.
     *
     * @return the type value.
     */
    public ParameterType getType() {
        return this.type;
    }

    /**
     * Set the type property: The type of the parameter.
     *
     * @param type the type value to set.
     * @return the ParameterDeclaration object itself.
     */
    public ParameterDeclaration setType(ParameterType type) {
        this.type = type;
        return this;
    }

    /**
     * Get the description property: Description of the parameter.
     *
     * @return the description value.
     */
    public String getDescription() {
        return this.description;
    }

    /**
     * Set the description property: Description of the parameter.
     *
     * @param description the description value to set.
     * @return the ParameterDeclaration object itself.
     */
    public ParameterDeclaration setDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the defaultProperty property: The default value for the parameter to be used if the live pipeline does not
     * specify a value.
     *
     * @return the defaultProperty value.
     */
    public String getDefaultProperty() {
        return this.defaultProperty;
    }

    /**
     * Set the defaultProperty property: The default value for the parameter to be used if the live pipeline does not
     * specify a value.
     *
     * @param defaultProperty the defaultProperty value to set.
     * @return the ParameterDeclaration object itself.
     */
    public ParameterDeclaration setDefaultProperty(String defaultProperty) {
        this.defaultProperty = defaultProperty;
        return this;
    }
}
