// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.
package com.azure.media.videoanalyzer.edge.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Lists all the discoverable ONVIF devices on the same subnet as the Edge Module.
 */
@Fluent
public final class OnvifDeviceDiscoverRequest extends MethodRequest {

    /*
     * The amount of time that the ONVIF device discovery will wait for supported device responses.
     */
    private String discoveryDuration;

    /*
     * method name
     */
    private String methodName;

    /**
     * Creates an instance of OnvifDeviceDiscoverRequest class.
     */
    public OnvifDeviceDiscoverRequest() {
    }

    /**
     * Get the discoveryDuration property: The amount of time that the ONVIF device discovery will wait for supported
     * device responses.
     *
     * @return the discoveryDuration value.
     */
    public String getDiscoveryDuration() {
        return this.discoveryDuration;
    }

    /**
     * Set the discoveryDuration property: The amount of time that the ONVIF device discovery will wait for supported
     * device responses.
     *
     * @param discoveryDuration the discoveryDuration value to set.
     * @return the OnvifDeviceDiscoverRequest object itself.
     */
    public OnvifDeviceDiscoverRequest setDiscoveryDuration(String discoveryDuration) {
        this.discoveryDuration = discoveryDuration;
        return this;
    }

    /**
     * Get the methodName property: method name.
     *
     * @return the methodName value.
     */
    public String getMethodName() {
        return this.methodName;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("@apiVersion", getApiVersion());
        jsonWriter.writeStringField("discoveryDuration", this.discoveryDuration);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of OnvifDeviceDiscoverRequest from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of OnvifDeviceDiscoverRequest if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the OnvifDeviceDiscoverRequest.
     */
    public static OnvifDeviceDiscoverRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            OnvifDeviceDiscoverRequest deserializedOnvifDeviceDiscoverRequest = new OnvifDeviceDiscoverRequest();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("@apiVersion".equals(fieldName)) {
                    deserializedOnvifDeviceDiscoverRequest.setApiVersion(reader.getString());
                } else if ("methodName".equals(fieldName)) {
                    deserializedOnvifDeviceDiscoverRequest.methodName = reader.getString();
                } else if ("discoveryDuration".equals(fieldName)) {
                    deserializedOnvifDeviceDiscoverRequest.discoveryDuration = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            return deserializedOnvifDeviceDiscoverRequest;
        });
    }
}
