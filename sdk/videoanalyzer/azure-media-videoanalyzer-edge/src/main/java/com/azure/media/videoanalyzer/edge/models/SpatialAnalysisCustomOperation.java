// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.media.videoanalyzer.edge.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Defines a Spatial Analysis custom operation. This requires the Azure Cognitive Services Spatial analysis module to be
 * deployed alongside the Video Analyzer module, please see https://aka.ms/ava-spatial-analysis for more information.
 */
@Immutable
public final class SpatialAnalysisCustomOperation extends SpatialAnalysisOperationBase {
    /*
     * The Type discriminator for the derived types.
     */
    private String type = "#Microsoft.VideoAnalyzer.SpatialAnalysisCustomOperation";

    /*
     * Custom configuration to pass to the Azure Cognitive Services Spatial Analysis module.
     */
    private final String extensionConfiguration;

    /**
     * Creates an instance of SpatialAnalysisCustomOperation class.
     * 
     * @param extensionConfiguration the extensionConfiguration value to set.
     */
    public SpatialAnalysisCustomOperation(String extensionConfiguration) {
        this.extensionConfiguration = extensionConfiguration;
    }

    /**
     * Get the type property: The Type discriminator for the derived types.
     * 
     * @return the type value.
     */
    @Override
    public String getType() {
        return this.type;
    }

    /**
     * Get the extensionConfiguration property: Custom configuration to pass to the Azure Cognitive Services Spatial
     * Analysis module.
     * 
     * @return the extensionConfiguration value.
     */
    public String getExtensionConfiguration() {
        return this.extensionConfiguration;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("extensionConfiguration", this.extensionConfiguration);
        jsonWriter.writeStringField("@type", this.type);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SpatialAnalysisCustomOperation from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SpatialAnalysisCustomOperation if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the SpatialAnalysisCustomOperation.
     */
    public static SpatialAnalysisCustomOperation fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            boolean extensionConfigurationFound = false;
            String extensionConfiguration = null;
            String type = "#Microsoft.VideoAnalyzer.SpatialAnalysisCustomOperation";
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("extensionConfiguration".equals(fieldName)) {
                    extensionConfiguration = reader.getString();
                    extensionConfigurationFound = true;
                } else if ("@type".equals(fieldName)) {
                    type = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            if (extensionConfigurationFound) {
                SpatialAnalysisCustomOperation deserializedSpatialAnalysisCustomOperation
                    = new SpatialAnalysisCustomOperation(extensionConfiguration);
                deserializedSpatialAnalysisCustomOperation.type = type;

                return deserializedSpatialAnalysisCustomOperation;
            }
            throw new IllegalStateException("Missing required property: extensionConfiguration");
        });
    }
}
