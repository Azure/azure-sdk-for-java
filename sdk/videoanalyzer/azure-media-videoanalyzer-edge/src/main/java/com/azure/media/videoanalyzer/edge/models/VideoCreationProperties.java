// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.media.videoanalyzer.edge.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Optional video properties to be used in case a new video resource needs to be created on the service. These will not
 * take effect if the video already exists.
 */
@Fluent
public final class VideoCreationProperties implements JsonSerializable<VideoCreationProperties> {
    /*
     * Optional video title provided by the user. Value can be up to 256 characters long.
     */
    private String title;

    /*
     * Optional video description provided by the user. Value can be up to 2048 characters long.
     */
    private String description;

    /*
     * Video segment length indicates the length of individual video files (segments) which are persisted to storage.
     * Smaller segments provide lower archive playback latency but generate larger volume of storage transactions.
     * Larger segments reduce the amount of storage transactions while increasing the archive playback latency. Value
     * must be specified in ISO8601 duration format (i.e. "PT30S" equals 30 seconds) and can vary between 30 seconds to
     * 5 minutes, in 30 seconds increments. Changing this value after the video is initially created can lead to errors
     * when uploading media to the archive. Default value is 30 seconds.
     */
    private String segmentLength;

    /*
     * Video retention period indicates how long the video is kept in storage, and must be a multiple of 1 day. For
     * example, if this is set to 30 days, then content older than 30 days will be deleted.
     */
    private String retentionPeriod;

    /**
     * Creates an instance of VideoCreationProperties class.
     */
    public VideoCreationProperties() {
    }

    /**
     * Get the title property: Optional video title provided by the user. Value can be up to 256 characters long.
     * 
     * @return the title value.
     */
    public String getTitle() {
        return this.title;
    }

    /**
     * Set the title property: Optional video title provided by the user. Value can be up to 256 characters long.
     * 
     * @param title the title value to set.
     * @return the VideoCreationProperties object itself.
     */
    public VideoCreationProperties setTitle(String title) {
        this.title = title;
        return this;
    }

    /**
     * Get the description property: Optional video description provided by the user. Value can be up to 2048 characters
     * long.
     * 
     * @return the description value.
     */
    public String getDescription() {
        return this.description;
    }

    /**
     * Set the description property: Optional video description provided by the user. Value can be up to 2048 characters
     * long.
     * 
     * @param description the description value to set.
     * @return the VideoCreationProperties object itself.
     */
    public VideoCreationProperties setDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the segmentLength property: Video segment length indicates the length of individual video files (segments)
     * which are persisted to storage. Smaller segments provide lower archive playback latency but generate larger
     * volume of storage transactions. Larger segments reduce the amount of storage transactions while increasing the
     * archive playback latency. Value must be specified in ISO8601 duration format (i.e. "PT30S" equals 30 seconds) and
     * can vary between 30 seconds to 5 minutes, in 30 seconds increments. Changing this value after the video is
     * initially created can lead to errors when uploading media to the archive. Default value is 30 seconds.
     * 
     * @return the segmentLength value.
     */
    public String getSegmentLength() {
        return this.segmentLength;
    }

    /**
     * Set the segmentLength property: Video segment length indicates the length of individual video files (segments)
     * which are persisted to storage. Smaller segments provide lower archive playback latency but generate larger
     * volume of storage transactions. Larger segments reduce the amount of storage transactions while increasing the
     * archive playback latency. Value must be specified in ISO8601 duration format (i.e. "PT30S" equals 30 seconds) and
     * can vary between 30 seconds to 5 minutes, in 30 seconds increments. Changing this value after the video is
     * initially created can lead to errors when uploading media to the archive. Default value is 30 seconds.
     * 
     * @param segmentLength the segmentLength value to set.
     * @return the VideoCreationProperties object itself.
     */
    public VideoCreationProperties setSegmentLength(String segmentLength) {
        this.segmentLength = segmentLength;
        return this;
    }

    /**
     * Get the retentionPeriod property: Video retention period indicates how long the video is kept in storage, and
     * must be a multiple of 1 day. For example, if this is set to 30 days, then content older than 30 days will be
     * deleted.
     * 
     * @return the retentionPeriod value.
     */
    public String getRetentionPeriod() {
        return this.retentionPeriod;
    }

    /**
     * Set the retentionPeriod property: Video retention period indicates how long the video is kept in storage, and
     * must be a multiple of 1 day. For example, if this is set to 30 days, then content older than 30 days will be
     * deleted.
     * 
     * @param retentionPeriod the retentionPeriod value to set.
     * @return the VideoCreationProperties object itself.
     */
    public VideoCreationProperties setRetentionPeriod(String retentionPeriod) {
        this.retentionPeriod = retentionPeriod;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("title", this.title);
        jsonWriter.writeStringField("description", this.description);
        jsonWriter.writeStringField("segmentLength", this.segmentLength);
        jsonWriter.writeStringField("retentionPeriod", this.retentionPeriod);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of VideoCreationProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of VideoCreationProperties if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the VideoCreationProperties.
     */
    public static VideoCreationProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            VideoCreationProperties deserializedVideoCreationProperties = new VideoCreationProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("title".equals(fieldName)) {
                    deserializedVideoCreationProperties.title = reader.getString();
                } else if ("description".equals(fieldName)) {
                    deserializedVideoCreationProperties.description = reader.getString();
                } else if ("segmentLength".equals(fieldName)) {
                    deserializedVideoCreationProperties.segmentLength = reader.getString();
                } else if ("retentionPeriod".equals(fieldName)) {
                    deserializedVideoCreationProperties.retentionPeriod = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedVideoCreationProperties;
        });
    }
}
