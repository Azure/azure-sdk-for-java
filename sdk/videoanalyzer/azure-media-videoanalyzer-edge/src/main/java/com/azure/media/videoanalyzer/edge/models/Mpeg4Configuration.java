// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.media.videoanalyzer.edge.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Class representing the MPEG4 Configuration.
 */
@Fluent
public final class Mpeg4Configuration implements JsonSerializable<Mpeg4Configuration> {
    /*
     * Group of Video frames length.
     */
    private Float govLength;

    /*
     * The MPEG4 Profile
     */
    private Mpeg4Profile profile;

    /**
     * Creates an instance of Mpeg4Configuration class.
     */
    public Mpeg4Configuration() {
    }

    /**
     * Get the govLength property: Group of Video frames length.
     * 
     * @return the govLength value.
     */
    public Float getGovLength() {
        return this.govLength;
    }

    /**
     * Set the govLength property: Group of Video frames length.
     * 
     * @param govLength the govLength value to set.
     * @return the Mpeg4Configuration object itself.
     */
    public Mpeg4Configuration setGovLength(Float govLength) {
        this.govLength = govLength;
        return this;
    }

    /**
     * Get the profile property: The MPEG4 Profile.
     * 
     * @return the profile value.
     */
    public Mpeg4Profile getProfile() {
        return this.profile;
    }

    /**
     * Set the profile property: The MPEG4 Profile.
     * 
     * @param profile the profile value to set.
     * @return the Mpeg4Configuration object itself.
     */
    public Mpeg4Configuration setProfile(Mpeg4Profile profile) {
        this.profile = profile;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("govLength", this.govLength);
        jsonWriter.writeStringField("profile", this.profile == null ? null : this.profile.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of Mpeg4Configuration from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of Mpeg4Configuration if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the Mpeg4Configuration.
     */
    public static Mpeg4Configuration fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            Mpeg4Configuration deserializedMpeg4Configuration = new Mpeg4Configuration();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("govLength".equals(fieldName)) {
                    deserializedMpeg4Configuration.govLength = reader.getNullable(JsonReader::getFloat);
                } else if ("profile".equals(fieldName)) {
                    deserializedMpeg4Configuration.profile = Mpeg4Profile.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedMpeg4Configuration;
        });
    }
}
