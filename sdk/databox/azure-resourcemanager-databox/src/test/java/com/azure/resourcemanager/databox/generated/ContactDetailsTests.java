// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databox.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.databox.models.ContactDetails;
import com.azure.resourcemanager.databox.models.NotificationPreference;
import com.azure.resourcemanager.databox.models.NotificationStageName;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ContactDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ContactDetails model = BinaryData.fromString(
            "{\"contactName\":\"ltmrldh\",\"phone\":\"gjzzdatqxhocdg\",\"phoneExtension\":\"blgphuticn\",\"mobile\":\"kao\",\"emailList\":[\"yiftyhxhuro\",\"ftyxolniw\",\"wcukjfkgiawxk\"],\"notificationPreference\":[{\"stageName\":\"PickedUp\",\"sendNotification\":true}]}")
            .toObject(ContactDetails.class);
        Assertions.assertEquals("ltmrldh", model.contactName());
        Assertions.assertEquals("gjzzdatqxhocdg", model.phone());
        Assertions.assertEquals("blgphuticn", model.phoneExtension());
        Assertions.assertEquals("kao", model.mobile());
        Assertions.assertEquals("yiftyhxhuro", model.emailList().get(0));
        Assertions.assertEquals(NotificationStageName.PICKED_UP, model.notificationPreference().get(0).stageName());
        Assertions.assertEquals(true, model.notificationPreference().get(0).sendNotification());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ContactDetails model = new ContactDetails().withContactName("ltmrldh")
            .withPhone("gjzzdatqxhocdg")
            .withPhoneExtension("blgphuticn")
            .withMobile("kao")
            .withEmailList(Arrays.asList("yiftyhxhuro", "ftyxolniw", "wcukjfkgiawxk"))
            .withNotificationPreference(
                Arrays.asList(new NotificationPreference().withStageName(NotificationStageName.PICKED_UP)
                    .withSendNotification(true)));
        model = BinaryData.fromObject(model).toObject(ContactDetails.class);
        Assertions.assertEquals("ltmrldh", model.contactName());
        Assertions.assertEquals("gjzzdatqxhocdg", model.phone());
        Assertions.assertEquals("blgphuticn", model.phoneExtension());
        Assertions.assertEquals("kao", model.mobile());
        Assertions.assertEquals("yiftyhxhuro", model.emailList().get(0));
        Assertions.assertEquals(NotificationStageName.PICKED_UP, model.notificationPreference().get(0).stageName());
        Assertions.assertEquals(true, model.notificationPreference().get(0).sendNotification());
    }
}
