// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databox.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.databox.models.AzureFileFilterDetails;
import com.azure.resourcemanager.databox.models.BlobFilterDetails;
import com.azure.resourcemanager.databox.models.DataAccountType;
import com.azure.resourcemanager.databox.models.FilterFileDetails;
import com.azure.resourcemanager.databox.models.FilterFileType;
import com.azure.resourcemanager.databox.models.TransferFilterDetails;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class TransferFilterDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TransferFilterDetails model =
            BinaryData
                .fromString(
                    "{\"dataAccountType\":\"StorageAccount\",\"blobFilterDetails\":{\"blobPrefixList\":[\"h\",\"qfbow\",\"kanyktzlcuiywg\"],\"blobPathList\":[\"gndrvynh\",\"gpphrcgyn\",\"ocpecfvmmco\",\"fsxlzevgbmqjqa\"],\"containerList\":[\"pmivkwlzu\"]},\"azureFileFilterDetails\":{\"filePrefixList\":[\"wnfnbacf\",\"onlebxetqgtzxdpn\"],\"filePathList\":[\"qwxrjfeallnw\"],\"fileShareList\":[\"isnjampmngnz\",\"c\"]},\"filterFileDetails\":[{\"filterFileType\":\"AzureBlob\",\"filterFilePath\":\"ooch\"},{\"filterFileType\":\"AzureFile\",\"filterFilePath\":\"onq\"},{\"filterFileType\":\"AzureBlob\",\"filterFilePath\":\"kvlrxnj\"}]}")
                .toObject(TransferFilterDetails.class);
        Assertions.assertEquals(DataAccountType.STORAGE_ACCOUNT, model.dataAccountType());
        Assertions.assertEquals("h", model.blobFilterDetails().blobPrefixList().get(0));
        Assertions.assertEquals("gndrvynh", model.blobFilterDetails().blobPathList().get(0));
        Assertions.assertEquals("pmivkwlzu", model.blobFilterDetails().containerList().get(0));
        Assertions.assertEquals("wnfnbacf", model.azureFileFilterDetails().filePrefixList().get(0));
        Assertions.assertEquals("qwxrjfeallnw", model.azureFileFilterDetails().filePathList().get(0));
        Assertions.assertEquals("isnjampmngnz", model.azureFileFilterDetails().fileShareList().get(0));
        Assertions.assertEquals(FilterFileType.AZURE_BLOB, model.filterFileDetails().get(0).filterFileType());
        Assertions.assertEquals("ooch", model.filterFileDetails().get(0).filterFilePath());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TransferFilterDetails model =
            new TransferFilterDetails()
                .withDataAccountType(DataAccountType.STORAGE_ACCOUNT)
                .withBlobFilterDetails(
                    new BlobFilterDetails()
                        .withBlobPrefixList(Arrays.asList("h", "qfbow", "kanyktzlcuiywg"))
                        .withBlobPathList(Arrays.asList("gndrvynh", "gpphrcgyn", "ocpecfvmmco", "fsxlzevgbmqjqa"))
                        .withContainerList(Arrays.asList("pmivkwlzu")))
                .withAzureFileFilterDetails(
                    new AzureFileFilterDetails()
                        .withFilePrefixList(Arrays.asList("wnfnbacf", "onlebxetqgtzxdpn"))
                        .withFilePathList(Arrays.asList("qwxrjfeallnw"))
                        .withFileShareList(Arrays.asList("isnjampmngnz", "c")))
                .withFilterFileDetails(
                    Arrays
                        .asList(
                            new FilterFileDetails()
                                .withFilterFileType(FilterFileType.AZURE_BLOB)
                                .withFilterFilePath("ooch"),
                            new FilterFileDetails()
                                .withFilterFileType(FilterFileType.AZURE_FILE)
                                .withFilterFilePath("onq"),
                            new FilterFileDetails()
                                .withFilterFileType(FilterFileType.AZURE_BLOB)
                                .withFilterFilePath("kvlrxnj")));
        model = BinaryData.fromObject(model).toObject(TransferFilterDetails.class);
        Assertions.assertEquals(DataAccountType.STORAGE_ACCOUNT, model.dataAccountType());
        Assertions.assertEquals("h", model.blobFilterDetails().blobPrefixList().get(0));
        Assertions.assertEquals("gndrvynh", model.blobFilterDetails().blobPathList().get(0));
        Assertions.assertEquals("pmivkwlzu", model.blobFilterDetails().containerList().get(0));
        Assertions.assertEquals("wnfnbacf", model.azureFileFilterDetails().filePrefixList().get(0));
        Assertions.assertEquals("qwxrjfeallnw", model.azureFileFilterDetails().filePathList().get(0));
        Assertions.assertEquals("isnjampmngnz", model.azureFileFilterDetails().fileShareList().get(0));
        Assertions.assertEquals(FilterFileType.AZURE_BLOB, model.filterFileDetails().get(0).filterFileType());
        Assertions.assertEquals("ooch", model.filterFileDetails().get(0).filterFilePath());
    }
}
