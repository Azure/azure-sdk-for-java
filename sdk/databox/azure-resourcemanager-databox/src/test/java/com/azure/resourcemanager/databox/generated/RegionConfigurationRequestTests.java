// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databox.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.databox.models.DatacenterAddressRequest;
import com.azure.resourcemanager.databox.models.RegionConfigurationRequest;
import com.azure.resourcemanager.databox.models.ScheduleAvailabilityRequest;
import com.azure.resourcemanager.databox.models.SkuName;
import com.azure.resourcemanager.databox.models.TransportAvailabilityRequest;
import org.junit.jupiter.api.Assertions;

public final class RegionConfigurationRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RegionConfigurationRequest model = BinaryData.fromString(
            "{\"scheduleAvailabilityRequest\":{\"skuName\":\"ScheduleAvailabilityRequest\",\"storageLocation\":\"nedgfbc\",\"country\":\"cvqvpkeqdcv\"},\"transportAvailabilityRequest\":{\"skuName\":\"DataBox\"},\"datacenterAddressRequest\":{\"storageLocation\":\"odsotbobzdop\",\"skuName\":\"DataBox\"}}")
            .toObject(RegionConfigurationRequest.class);
        Assertions.assertEquals("nedgfbc", model.scheduleAvailabilityRequest().storageLocation());
        Assertions.assertEquals("cvqvpkeqdcv", model.scheduleAvailabilityRequest().country());
        Assertions.assertEquals(SkuName.DATA_BOX, model.transportAvailabilityRequest().skuName());
        Assertions.assertEquals("odsotbobzdop", model.datacenterAddressRequest().storageLocation());
        Assertions.assertEquals(SkuName.DATA_BOX, model.datacenterAddressRequest().skuName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RegionConfigurationRequest model = new RegionConfigurationRequest()
            .withScheduleAvailabilityRequest(
                new ScheduleAvailabilityRequest().withStorageLocation("nedgfbc").withCountry("cvqvpkeqdcv"))
            .withTransportAvailabilityRequest(new TransportAvailabilityRequest().withSkuName(SkuName.DATA_BOX))
            .withDatacenterAddressRequest(
                new DatacenterAddressRequest().withStorageLocation("odsotbobzdop").withSkuName(SkuName.DATA_BOX));
        model = BinaryData.fromObject(model).toObject(RegionConfigurationRequest.class);
        Assertions.assertEquals("nedgfbc", model.scheduleAvailabilityRequest().storageLocation());
        Assertions.assertEquals("cvqvpkeqdcv", model.scheduleAvailabilityRequest().country());
        Assertions.assertEquals(SkuName.DATA_BOX, model.transportAvailabilityRequest().skuName());
        Assertions.assertEquals("odsotbobzdop", model.datacenterAddressRequest().storageLocation());
        Assertions.assertEquals(SkuName.DATA_BOX, model.datacenterAddressRequest().skuName());
    }
}
