// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databox.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.databox.models.AzureFileFilterDetails;
import com.azure.resourcemanager.databox.models.BlobFilterDetails;
import com.azure.resourcemanager.databox.models.DataAccountType;
import com.azure.resourcemanager.databox.models.FilterFileDetails;
import com.azure.resourcemanager.databox.models.FilterFileType;
import com.azure.resourcemanager.databox.models.TransferConfigurationTransferFilterDetails;
import com.azure.resourcemanager.databox.models.TransferFilterDetails;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class TransferConfigurationTransferFilterDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TransferConfigurationTransferFilterDetails model =
            BinaryData
                .fromString(
                    "{\"include\":{\"dataAccountType\":\"ManagedDisk\",\"blobFilterDetails\":{\"blobPrefixList\":[\"uexhdzx\"],\"blobPathList\":[\"eojnxqbzvddn\",\"wndeicbtwnp\",\"aoqvuh\",\"hcffcyddglmjthjq\"],\"containerList\":[\"yeicxmqciwqvhk\",\"ixuigdtopbobj\"]},\"azureFileFilterDetails\":{\"filePrefixList\":[\"e\"],\"filePathList\":[\"m\"],\"fileShareList\":[\"rzayv\",\"t\",\"gvdfgiotkftutq\",\"ln\"]},\"filterFileDetails\":[{\"filterFileType\":\"AzureBlob\",\"filterFilePath\":\"fgugnxkrxdqmid\"},{\"filterFileType\":\"AzureBlob\",\"filterFilePath\":\"hzrvqd\"},{\"filterFileType\":\"AzureBlob\",\"filterFilePath\":\"bhj\"}]}}")
                .toObject(TransferConfigurationTransferFilterDetails.class);
        Assertions.assertEquals(DataAccountType.MANAGED_DISK, model.include().dataAccountType());
        Assertions.assertEquals("uexhdzx", model.include().blobFilterDetails().blobPrefixList().get(0));
        Assertions.assertEquals("eojnxqbzvddn", model.include().blobFilterDetails().blobPathList().get(0));
        Assertions.assertEquals("yeicxmqciwqvhk", model.include().blobFilterDetails().containerList().get(0));
        Assertions.assertEquals("e", model.include().azureFileFilterDetails().filePrefixList().get(0));
        Assertions.assertEquals("m", model.include().azureFileFilterDetails().filePathList().get(0));
        Assertions.assertEquals("rzayv", model.include().azureFileFilterDetails().fileShareList().get(0));
        Assertions.assertEquals(FilterFileType.AZURE_BLOB, model.include().filterFileDetails().get(0).filterFileType());
        Assertions.assertEquals("fgugnxkrxdqmid", model.include().filterFileDetails().get(0).filterFilePath());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TransferConfigurationTransferFilterDetails model =
            new TransferConfigurationTransferFilterDetails()
                .withInclude(
                    new TransferFilterDetails()
                        .withDataAccountType(DataAccountType.MANAGED_DISK)
                        .withBlobFilterDetails(
                            new BlobFilterDetails()
                                .withBlobPrefixList(Arrays.asList("uexhdzx"))
                                .withBlobPathList(
                                    Arrays.asList("eojnxqbzvddn", "wndeicbtwnp", "aoqvuh", "hcffcyddglmjthjq"))
                                .withContainerList(Arrays.asList("yeicxmqciwqvhk", "ixuigdtopbobj")))
                        .withAzureFileFilterDetails(
                            new AzureFileFilterDetails()
                                .withFilePrefixList(Arrays.asList("e"))
                                .withFilePathList(Arrays.asList("m"))
                                .withFileShareList(Arrays.asList("rzayv", "t", "gvdfgiotkftutq", "ln")))
                        .withFilterFileDetails(
                            Arrays
                                .asList(
                                    new FilterFileDetails()
                                        .withFilterFileType(FilterFileType.AZURE_BLOB)
                                        .withFilterFilePath("fgugnxkrxdqmid"),
                                    new FilterFileDetails()
                                        .withFilterFileType(FilterFileType.AZURE_BLOB)
                                        .withFilterFilePath("hzrvqd"),
                                    new FilterFileDetails()
                                        .withFilterFileType(FilterFileType.AZURE_BLOB)
                                        .withFilterFilePath("bhj"))));
        model = BinaryData.fromObject(model).toObject(TransferConfigurationTransferFilterDetails.class);
        Assertions.assertEquals(DataAccountType.MANAGED_DISK, model.include().dataAccountType());
        Assertions.assertEquals("uexhdzx", model.include().blobFilterDetails().blobPrefixList().get(0));
        Assertions.assertEquals("eojnxqbzvddn", model.include().blobFilterDetails().blobPathList().get(0));
        Assertions.assertEquals("yeicxmqciwqvhk", model.include().blobFilterDetails().containerList().get(0));
        Assertions.assertEquals("e", model.include().azureFileFilterDetails().filePrefixList().get(0));
        Assertions.assertEquals("m", model.include().azureFileFilterDetails().filePathList().get(0));
        Assertions.assertEquals("rzayv", model.include().azureFileFilterDetails().fileShareList().get(0));
        Assertions.assertEquals(FilterFileType.AZURE_BLOB, model.include().filterFileDetails().get(0).filterFileType());
        Assertions.assertEquals("fgugnxkrxdqmid", model.include().filterFileDetails().get(0).filterFilePath());
    }
}
