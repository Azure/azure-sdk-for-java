// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databox.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Dc access security code. */
@Fluent
public final class DcAccessSecurityCode {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(DcAccessSecurityCode.class);

    /*
     * Reverse Dc access security code.
     */
    @JsonProperty(value = "reverseDCAccessCode")
    private String reverseDCAccessCode;

    /*
     * Forward Dc access security code.
     */
    @JsonProperty(value = "forwardDCAccessCode")
    private String forwardDCAccessCode;

    /**
     * Get the reverseDCAccessCode property: Reverse Dc access security code.
     *
     * @return the reverseDCAccessCode value.
     */
    public String reverseDCAccessCode() {
        return this.reverseDCAccessCode;
    }

    /**
     * Set the reverseDCAccessCode property: Reverse Dc access security code.
     *
     * @param reverseDCAccessCode the reverseDCAccessCode value to set.
     * @return the DcAccessSecurityCode object itself.
     */
    public DcAccessSecurityCode withReverseDCAccessCode(String reverseDCAccessCode) {
        this.reverseDCAccessCode = reverseDCAccessCode;
        return this;
    }

    /**
     * Get the forwardDCAccessCode property: Forward Dc access security code.
     *
     * @return the forwardDCAccessCode value.
     */
    public String forwardDCAccessCode() {
        return this.forwardDCAccessCode;
    }

    /**
     * Set the forwardDCAccessCode property: Forward Dc access security code.
     *
     * @param forwardDCAccessCode the forwardDCAccessCode value to set.
     * @return the DcAccessSecurityCode object itself.
     */
    public DcAccessSecurityCode withForwardDCAccessCode(String forwardDCAccessCode) {
        this.forwardDCAccessCode = forwardDCAccessCode;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
