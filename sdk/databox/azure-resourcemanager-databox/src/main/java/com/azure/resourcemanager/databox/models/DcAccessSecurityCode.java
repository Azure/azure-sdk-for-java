// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databox.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Dc access security code. */
@Fluent
public final class DcAccessSecurityCode {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(DcAccessSecurityCode.class);

    /*
     * Reverse Dc access security code.
     */
    @JsonProperty(value = "reverseDcAccessCode")
    private String reverseDcAccessCode;

    /*
     * Forward Dc access security code.
     */
    @JsonProperty(value = "forwardDcAccessCode")
    private String forwardDcAccessCode;

    /**
     * Get the reverseDcAccessCode property: Reverse Dc access security code.
     *
     * @return the reverseDcAccessCode value.
     */
    public String reverseDcAccessCode() {
        return this.reverseDcAccessCode;
    }

    /**
     * Set the reverseDcAccessCode property: Reverse Dc access security code.
     *
     * @param reverseDcAccessCode the reverseDcAccessCode value to set.
     * @return the DcAccessSecurityCode object itself.
     */
    public DcAccessSecurityCode withReverseDcAccessCode(String reverseDcAccessCode) {
        this.reverseDcAccessCode = reverseDcAccessCode;
        return this;
    }

    /**
     * Get the forwardDcAccessCode property: Forward Dc access security code.
     *
     * @return the forwardDcAccessCode value.
     */
    public String forwardDcAccessCode() {
        return this.forwardDcAccessCode;
    }

    /**
     * Set the forwardDcAccessCode property: Forward Dc access security code.
     *
     * @param forwardDcAccessCode the forwardDcAccessCode value to set.
     * @return the DcAccessSecurityCode object itself.
     */
    public DcAccessSecurityCode withForwardDcAccessCode(String forwardDcAccessCode) {
        this.forwardDcAccessCode = forwardDcAccessCode;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
