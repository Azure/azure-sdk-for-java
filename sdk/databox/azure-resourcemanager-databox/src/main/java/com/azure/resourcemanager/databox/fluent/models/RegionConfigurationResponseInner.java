// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databox.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.databox.models.DatacenterAddressResponse;
import com.azure.resourcemanager.databox.models.ScheduleAvailabilityResponse;
import com.azure.resourcemanager.databox.models.TransportAvailabilityResponse;
import java.io.IOException;

/**
 * Configuration response specific to a region.
 */
@Immutable
public final class RegionConfigurationResponseInner implements JsonSerializable<RegionConfigurationResponseInner> {
    /*
     * Schedule availability for given sku in a region.
     */
    private ScheduleAvailabilityResponse scheduleAvailabilityResponse;

    /*
     * Transport options available for given sku in a region.
     */
    private TransportAvailabilityResponse transportAvailabilityResponse;

    /*
     * Datacenter address for given sku in a region.
     */
    private DatacenterAddressResponse datacenterAddressResponse;

    /**
     * Creates an instance of RegionConfigurationResponseInner class.
     */
    public RegionConfigurationResponseInner() {
    }

    /**
     * Get the scheduleAvailabilityResponse property: Schedule availability for given sku in a region.
     * 
     * @return the scheduleAvailabilityResponse value.
     */
    public ScheduleAvailabilityResponse scheduleAvailabilityResponse() {
        return this.scheduleAvailabilityResponse;
    }

    /**
     * Get the transportAvailabilityResponse property: Transport options available for given sku in a region.
     * 
     * @return the transportAvailabilityResponse value.
     */
    public TransportAvailabilityResponse transportAvailabilityResponse() {
        return this.transportAvailabilityResponse;
    }

    /**
     * Get the datacenterAddressResponse property: Datacenter address for given sku in a region.
     * 
     * @return the datacenterAddressResponse value.
     */
    public DatacenterAddressResponse datacenterAddressResponse() {
        return this.datacenterAddressResponse;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (scheduleAvailabilityResponse() != null) {
            scheduleAvailabilityResponse().validate();
        }
        if (transportAvailabilityResponse() != null) {
            transportAvailabilityResponse().validate();
        }
        if (datacenterAddressResponse() != null) {
            datacenterAddressResponse().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RegionConfigurationResponseInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RegionConfigurationResponseInner if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the RegionConfigurationResponseInner.
     */
    public static RegionConfigurationResponseInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RegionConfigurationResponseInner deserializedRegionConfigurationResponseInner
                = new RegionConfigurationResponseInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("scheduleAvailabilityResponse".equals(fieldName)) {
                    deserializedRegionConfigurationResponseInner.scheduleAvailabilityResponse
                        = ScheduleAvailabilityResponse.fromJson(reader);
                } else if ("transportAvailabilityResponse".equals(fieldName)) {
                    deserializedRegionConfigurationResponseInner.transportAvailabilityResponse
                        = TransportAvailabilityResponse.fromJson(reader);
                } else if ("datacenterAddressResponse".equals(fieldName)) {
                    deserializedRegionConfigurationResponseInner.datacenterAddressResponse
                        = DatacenterAddressResponse.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRegionConfigurationResponseInner;
        });
    }
}
