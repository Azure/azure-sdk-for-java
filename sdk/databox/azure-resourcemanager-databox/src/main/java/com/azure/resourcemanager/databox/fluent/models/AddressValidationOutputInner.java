// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databox.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.databox.models.AddressValidationStatus;
import com.azure.resourcemanager.databox.models.CloudError;
import com.azure.resourcemanager.databox.models.ShippingAddress;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Output of the address validation api. */
@JsonFlatten
@Immutable
public class AddressValidationOutputInner {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(AddressValidationOutputInner.class);

    /*
     * Error code and message of validation response.
     */
    @JsonProperty(value = "properties.error", access = JsonProperty.Access.WRITE_ONLY)
    private CloudError error;

    /*
     * The address validation status.
     */
    @JsonProperty(value = "properties.validationStatus", access = JsonProperty.Access.WRITE_ONLY)
    private AddressValidationStatus validationStatus;

    /*
     * List of alternate addresses.
     */
    @JsonProperty(value = "properties.alternateAddresses", access = JsonProperty.Access.WRITE_ONLY)
    private List<ShippingAddress> alternateAddresses;

    /**
     * Get the error property: Error code and message of validation response.
     *
     * @return the error value.
     */
    public CloudError error() {
        return this.error;
    }

    /**
     * Get the validationStatus property: The address validation status.
     *
     * @return the validationStatus value.
     */
    public AddressValidationStatus validationStatus() {
        return this.validationStatus;
    }

    /**
     * Get the alternateAddresses property: List of alternate addresses.
     *
     * @return the alternateAddresses value.
     */
    public List<ShippingAddress> alternateAddresses() {
        return this.alternateAddresses;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (error() != null) {
            error().validate();
        }
        if (alternateAddresses() != null) {
            alternateAddresses().forEach(e -> e.validate());
        }
    }
}
