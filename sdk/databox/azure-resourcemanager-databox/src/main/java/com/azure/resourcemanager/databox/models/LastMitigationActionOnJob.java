// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databox.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** Last Mitigation Action Performed On Job. */
@Fluent
public final class LastMitigationActionOnJob {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(LastMitigationActionOnJob.class);

    /*
     * Action performed date time
     */
    @JsonProperty(value = "actionDateTimeInUtc")
    private OffsetDateTime actionDateTimeInUtc;

    /*
     * Action performed by customer,
     * possibility is that mitigation might happen by customer or service or by
     * ops
     */
    @JsonProperty(value = "isPerformedByCustomer")
    private Boolean isPerformedByCustomer;

    /*
     * Resolution code provided by customer
     */
    @JsonProperty(value = "customerResolution")
    private CustomerResolutionCode customerResolution;

    /**
     * Get the actionDateTimeInUtc property: Action performed date time.
     *
     * @return the actionDateTimeInUtc value.
     */
    public OffsetDateTime actionDateTimeInUtc() {
        return this.actionDateTimeInUtc;
    }

    /**
     * Set the actionDateTimeInUtc property: Action performed date time.
     *
     * @param actionDateTimeInUtc the actionDateTimeInUtc value to set.
     * @return the LastMitigationActionOnJob object itself.
     */
    public LastMitigationActionOnJob withActionDateTimeInUtc(OffsetDateTime actionDateTimeInUtc) {
        this.actionDateTimeInUtc = actionDateTimeInUtc;
        return this;
    }

    /**
     * Get the isPerformedByCustomer property: Action performed by customer, possibility is that mitigation might happen
     * by customer or service or by ops.
     *
     * @return the isPerformedByCustomer value.
     */
    public Boolean isPerformedByCustomer() {
        return this.isPerformedByCustomer;
    }

    /**
     * Set the isPerformedByCustomer property: Action performed by customer, possibility is that mitigation might happen
     * by customer or service or by ops.
     *
     * @param isPerformedByCustomer the isPerformedByCustomer value to set.
     * @return the LastMitigationActionOnJob object itself.
     */
    public LastMitigationActionOnJob withIsPerformedByCustomer(Boolean isPerformedByCustomer) {
        this.isPerformedByCustomer = isPerformedByCustomer;
        return this;
    }

    /**
     * Get the customerResolution property: Resolution code provided by customer.
     *
     * @return the customerResolution value.
     */
    public CustomerResolutionCode customerResolution() {
        return this.customerResolution;
    }

    /**
     * Set the customerResolution property: Resolution code provided by customer.
     *
     * @param customerResolution the customerResolution value to set.
     * @return the LastMitigationActionOnJob object itself.
     */
    public LastMitigationActionOnJob withCustomerResolution(CustomerResolutionCode customerResolution) {
        this.customerResolution = customerResolution;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
