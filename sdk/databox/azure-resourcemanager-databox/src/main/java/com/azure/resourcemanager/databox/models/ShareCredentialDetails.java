// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databox.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Credential details of the shares in account. */
@Immutable
public final class ShareCredentialDetails {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ShareCredentialDetails.class);

    /*
     * Name of the share.
     */
    @JsonProperty(value = "shareName", access = JsonProperty.Access.WRITE_ONLY)
    private String shareName;

    /*
     * Type of the share.
     */
    @JsonProperty(value = "shareType", access = JsonProperty.Access.WRITE_ONLY)
    private ShareDestinationFormatType shareType;

    /*
     * User name for the share.
     */
    @JsonProperty(value = "userName", access = JsonProperty.Access.WRITE_ONLY)
    private String username;

    /*
     * Password for the share.
     */
    @JsonProperty(value = "password", access = JsonProperty.Access.WRITE_ONLY)
    private String password;

    /*
     * Access protocols supported on the device.
     */
    @JsonProperty(value = "supportedAccessProtocols", access = JsonProperty.Access.WRITE_ONLY)
    private List<AccessProtocol> supportedAccessProtocols;

    /**
     * Get the shareName property: Name of the share.
     *
     * @return the shareName value.
     */
    public String shareName() {
        return this.shareName;
    }

    /**
     * Get the shareType property: Type of the share.
     *
     * @return the shareType value.
     */
    public ShareDestinationFormatType shareType() {
        return this.shareType;
    }

    /**
     * Get the username property: User name for the share.
     *
     * @return the username value.
     */
    public String username() {
        return this.username;
    }

    /**
     * Get the password property: Password for the share.
     *
     * @return the password value.
     */
    public String password() {
        return this.password;
    }

    /**
     * Get the supportedAccessProtocols property: Access protocols supported on the device.
     *
     * @return the supportedAccessProtocols value.
     */
    public List<AccessProtocol> supportedAccessProtocols() {
        return this.supportedAccessProtocols;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
