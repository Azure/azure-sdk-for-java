// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databox.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Request body to get the device capabilities for given sku.
 */
@Fluent
public final class DeviceCapabilityRequest implements JsonSerializable<DeviceCapabilityRequest> {
    /*
     * Type of the device.
     */
    private SkuName skuName;

    /*
     * The customer friendly name of the combination of version and capacity of the device. This field is necessary only
     * at the time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025
     */
    private ModelName model;

    /**
     * Creates an instance of DeviceCapabilityRequest class.
     */
    public DeviceCapabilityRequest() {
    }

    /**
     * Get the skuName property: Type of the device.
     * 
     * @return the skuName value.
     */
    public SkuName skuName() {
        return this.skuName;
    }

    /**
     * Set the skuName property: Type of the device.
     * 
     * @param skuName the skuName value to set.
     * @return the DeviceCapabilityRequest object itself.
     */
    public DeviceCapabilityRequest withSkuName(SkuName skuName) {
        this.skuName = skuName;
        return this;
    }

    /**
     * Get the model property: The customer friendly name of the combination of version and capacity of the device. This
     * field is necessary only at the time of ordering the newer generation device i.e. AzureDataBox120 and
     * AzureDataBox525 as of Feb/2025.
     * 
     * @return the model value.
     */
    public ModelName model() {
        return this.model;
    }

    /**
     * Set the model property: The customer friendly name of the combination of version and capacity of the device. This
     * field is necessary only at the time of ordering the newer generation device i.e. AzureDataBox120 and
     * AzureDataBox525 as of Feb/2025.
     * 
     * @param model the model value to set.
     * @return the DeviceCapabilityRequest object itself.
     */
    public DeviceCapabilityRequest withModel(ModelName model) {
        this.model = model;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("skuName", this.skuName == null ? null : this.skuName.toString());
        jsonWriter.writeStringField("model", this.model == null ? null : this.model.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DeviceCapabilityRequest from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DeviceCapabilityRequest if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the DeviceCapabilityRequest.
     */
    public static DeviceCapabilityRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            DeviceCapabilityRequest deserializedDeviceCapabilityRequest = new DeviceCapabilityRequest();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("skuName".equals(fieldName)) {
                    deserializedDeviceCapabilityRequest.skuName = SkuName.fromString(reader.getString());
                } else if ("model".equals(fieldName)) {
                    deserializedDeviceCapabilityRequest.model = ModelName.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedDeviceCapabilityRequest;
        });
    }
}
