// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.deploymentmanager.models;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.deploymentmanager.fluent.models.ServiceTopologyResourceInner;
import java.util.Map;

/** An immutable client-side representation of ServiceTopologyResource. */
public interface ServiceTopologyResource {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the artifactSourceId property: The resource Id of the artifact source that contains the artifacts that can
     * be referenced in the service units.
     *
     * @return the artifactSourceId value.
     */
    String artifactSourceId();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.deploymentmanager.fluent.models.ServiceTopologyResourceInner object.
     *
     * @return the inner object.
     */
    ServiceTopologyResourceInner innerModel();

    /** The entirety of the ServiceTopologyResource definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithResourceGroup,
            DefinitionStages.WithCreate {
    }
    /** The ServiceTopologyResource definition stages. */
    interface DefinitionStages {
        /** The first stage of the ServiceTopologyResource definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the ServiceTopologyResource definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }
        /** The stage of the ServiceTopologyResource definition allowing to specify parent resource. */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             *
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }
        /**
         * The stage of the ServiceTopologyResource definition which contains all the minimum required properties for
         * the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithTags, DefinitionStages.WithArtifactSourceId {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            ServiceTopologyResource create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            ServiceTopologyResource create(Context context);
        }
        /** The stage of the ServiceTopologyResource definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the ServiceTopologyResource definition allowing to specify artifactSourceId. */
        interface WithArtifactSourceId {
            /**
             * Specifies the artifactSourceId property: The resource Id of the artifact source that contains the
             * artifacts that can be referenced in the service units..
             *
             * @param artifactSourceId The resource Id of the artifact source that contains the artifacts that can be
             *     referenced in the service units.
             * @return the next definition stage.
             */
            WithCreate withArtifactSourceId(String artifactSourceId);
        }
    }
    /**
     * Begins update for the ServiceTopologyResource resource.
     *
     * @return the stage of resource update.
     */
    ServiceTopologyResource.Update update();

    /** The template for ServiceTopologyResource update. */
    interface Update extends UpdateStages.WithTags, UpdateStages.WithArtifactSourceId {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        ServiceTopologyResource apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        ServiceTopologyResource apply(Context context);
    }
    /** The ServiceTopologyResource update stages. */
    interface UpdateStages {
        /** The stage of the ServiceTopologyResource update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
        /** The stage of the ServiceTopologyResource update allowing to specify artifactSourceId. */
        interface WithArtifactSourceId {
            /**
             * Specifies the artifactSourceId property: The resource Id of the artifact source that contains the
             * artifacts that can be referenced in the service units..
             *
             * @param artifactSourceId The resource Id of the artifact source that contains the artifacts that can be
             *     referenced in the service units.
             * @return the next definition stage.
             */
            Update withArtifactSourceId(String artifactSourceId);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    ServiceTopologyResource refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    ServiceTopologyResource refresh(Context context);
}
