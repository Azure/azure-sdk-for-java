// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.deploymentmanager.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;

/** Defines the REST health check step properties. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type")
@JsonTypeName("REST")
@JsonFlatten
@Fluent
public class RestHealthCheckStepAttributes extends HealthCheckStepAttributes {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(RestHealthCheckStepAttributes.class);

    /*
     * The list of checks that form the health check step.
     */
    @JsonProperty(value = "properties.healthChecks")
    private List<RestHealthCheck> healthChecks;

    /**
     * Get the healthChecks property: The list of checks that form the health check step.
     *
     * @return the healthChecks value.
     */
    public List<RestHealthCheck> healthChecks() {
        return this.healthChecks;
    }

    /**
     * Set the healthChecks property: The list of checks that form the health check step.
     *
     * @param healthChecks the healthChecks value to set.
     * @return the RestHealthCheckStepAttributes object itself.
     */
    public RestHealthCheckStepAttributes withHealthChecks(List<RestHealthCheck> healthChecks) {
        this.healthChecks = healthChecks;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public RestHealthCheckStepAttributes withWaitDuration(String waitDuration) {
        super.withWaitDuration(waitDuration);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public RestHealthCheckStepAttributes withMaxElasticDuration(String maxElasticDuration) {
        super.withMaxElasticDuration(maxElasticDuration);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public RestHealthCheckStepAttributes withHealthyStateDuration(String healthyStateDuration) {
        super.withHealthyStateDuration(healthyStateDuration);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (healthChecks() != null) {
            healthChecks().forEach(e -> e.validate());
        }
    }
}
