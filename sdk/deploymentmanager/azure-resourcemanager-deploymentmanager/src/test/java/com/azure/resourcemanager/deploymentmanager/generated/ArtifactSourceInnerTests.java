// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.deploymentmanager.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.deploymentmanager.fluent.models.ArtifactSourceInner;
import com.azure.resourcemanager.deploymentmanager.models.Authentication;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ArtifactSourceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ArtifactSourceInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"sourceType\":\"udxorrqn\",\"artifactRoot\":\"oczvy\",\"authentication\":{\"type\":\"Authentication\"}},\"location\":\"fqrvkdvjsllrmvvd\",\"tags\":{\"pnpulexxbczwtru\":\"t\",\"vsovmyokac\":\"iqzbq\"},\"id\":\"pkwlhz\",\"name\":\"obpxjmflbvvn\",\"type\":\"hrk\"}")
                .toObject(ArtifactSourceInner.class);
        Assertions.assertEquals("fqrvkdvjsllrmvvd", model.location());
        Assertions.assertEquals("t", model.tags().get("pnpulexxbczwtru"));
        Assertions.assertEquals("udxorrqn", model.sourceType());
        Assertions.assertEquals("oczvy", model.artifactRoot());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ArtifactSourceInner model =
            new ArtifactSourceInner()
                .withLocation("fqrvkdvjsllrmvvd")
                .withTags(mapOf("pnpulexxbczwtru", "t", "vsovmyokac", "iqzbq"))
                .withSourceType("udxorrqn")
                .withArtifactRoot("oczvy")
                .withAuthentication(new Authentication());
        model = BinaryData.fromObject(model).toObject(ArtifactSourceInner.class);
        Assertions.assertEquals("fqrvkdvjsllrmvvd", model.location());
        Assertions.assertEquals("t", model.tags().get("pnpulexxbczwtru"));
        Assertions.assertEquals("udxorrqn", model.sourceType());
        Assertions.assertEquals("oczvy", model.artifactRoot());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
