// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagepool.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.storagepool.models.CreatedByType;
import com.azure.resourcemanager.storagepool.models.SystemMetadata;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class SystemMetadataTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SystemMetadata model = BinaryData.fromString(
            "{\"createdBy\":\"kexxppof\",\"createdByType\":\"Key\",\"createdAt\":\"2021-11-01T06:54:57Z\",\"lastModifiedBy\":\"jpgd\",\"lastModifiedByType\":\"Key\",\"lastModifiedAt\":\"2021-05-05T12:18:06Z\"}")
            .toObject(SystemMetadata.class);
        Assertions.assertEquals("kexxppof", model.createdBy());
        Assertions.assertEquals(CreatedByType.KEY, model.createdByType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-01T06:54:57Z"), model.createdAt());
        Assertions.assertEquals("jpgd", model.lastModifiedBy());
        Assertions.assertEquals(CreatedByType.KEY, model.lastModifiedByType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-05T12:18:06Z"), model.lastModifiedAt());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SystemMetadata model = new SystemMetadata().withCreatedBy("kexxppof")
            .withCreatedByType(CreatedByType.KEY)
            .withCreatedAt(OffsetDateTime.parse("2021-11-01T06:54:57Z"))
            .withLastModifiedBy("jpgd")
            .withLastModifiedByType(CreatedByType.KEY)
            .withLastModifiedAt(OffsetDateTime.parse("2021-05-05T12:18:06Z"));
        model = BinaryData.fromObject(model).toObject(SystemMetadata.class);
        Assertions.assertEquals("kexxppof", model.createdBy());
        Assertions.assertEquals(CreatedByType.KEY, model.createdByType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-01T06:54:57Z"), model.createdAt());
        Assertions.assertEquals("jpgd", model.lastModifiedBy());
        Assertions.assertEquals(CreatedByType.KEY, model.lastModifiedByType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-05T12:18:06Z"), model.lastModifiedAt());
    }
}
