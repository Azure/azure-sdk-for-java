// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagepool.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.storagepool.StoragePoolManager;
import com.azure.resourcemanager.storagepool.models.DiskPool;
import com.azure.resourcemanager.storagepool.models.OperationalStatus;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DiskPoolsGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"sku\":{\"name\":\"foqouicybx\",\"tier\":\"zg\"},\"properties\":{\"provisioningState\":\"Succeeded\",\"availabilityZones\":[\"foxciq\",\"p\"],\"status\":\"Running\",\"disks\":[{\"id\":\"mciodhkhazxkhn\"},{\"id\":\"bon\"}],\"subnetId\":\"wntoegokdwbwh\",\"additionalCapabilities\":[\"zcmrvexztvb\"]},\"managedBy\":\"gsfraoyzkoow\",\"managedByExtended\":[\"nguxawqaldsy\",\"uximerqfobw\",\"znkbykutwpfhpagm\",\"r\"],\"systemData\":{\"createdBy\":\"snfdsdoakgtdl\",\"createdByType\":\"Key\",\"createdAt\":\"2021-06-21T09:18:55Z\",\"lastModifiedBy\":\"dlhewp\",\"lastModifiedByType\":\"Application\",\"lastModifiedAt\":\"2021-04-05T04:34:32Z\"},\"location\":\"twvogvbbe\",\"tags\":{\"m\":\"ngqqmoakuf\",\"rdgrtw\":\"zr\",\"nrfdw\":\"enuuzkopbm\",\"efozbhdms\":\"yuhhziu\"},\"id\":\"l\",\"name\":\"zqhof\",\"type\":\"rmaequ\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        StoragePoolManager manager = StoragePoolManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        DiskPool response = manager.diskPools()
            .getByResourceGroupWithResponse("tcje", "ftwwaezkojvdc", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("twvogvbbe", response.location());
        Assertions.assertEquals("ngqqmoakuf", response.tags().get("m"));
        Assertions.assertEquals("foqouicybx", response.nameSkuName());
        Assertions.assertEquals("zg", response.tier());
        Assertions.assertEquals("foxciq", response.availabilityZones().get(0));
        Assertions.assertEquals(OperationalStatus.RUNNING, response.status());
        Assertions.assertEquals("mciodhkhazxkhn", response.disks().get(0).id());
        Assertions.assertEquals("wntoegokdwbwh", response.subnetId());
        Assertions.assertEquals("zcmrvexztvb", response.additionalCapabilities().get(0));
    }
}
