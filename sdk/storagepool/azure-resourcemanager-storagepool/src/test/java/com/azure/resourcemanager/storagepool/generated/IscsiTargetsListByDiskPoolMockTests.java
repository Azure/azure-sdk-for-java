// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagepool.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.storagepool.StoragePoolManager;
import com.azure.resourcemanager.storagepool.models.IscsiTarget;
import com.azure.resourcemanager.storagepool.models.IscsiTargetAclMode;
import com.azure.resourcemanager.storagepool.models.OperationalStatus;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class IscsiTargetsListByDiskPoolMockTests {
    @Test
    public void testListByDiskPool() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"aclMode\":\"Dynamic\",\"staticAcls\":[{\"initiatorIqn\":\"nvrk\",\"mappedLuns\":[\"ou\"]},{\"initiatorIqn\":\"ibreb\",\"mappedLuns\":[\"aysjkixqtnqttez\"]},{\"initiatorIqn\":\"wfff\",\"mappedLuns\":[\"kpj\",\"qqmtedltmmji\",\"yeozphvwauyqncy\",\"upkvipmdsc\"]},{\"initiatorIqn\":\"xqupevzhf\",\"mappedLuns\":[\"otxhojujby\",\"elmcuvhixbjxyfw\",\"yl\"]}],\"luns\":[{\"name\":\"o\",\"managedDiskAzureResourceId\":\"sttp\",\"lun\":156092628}],\"targetIqn\":\"kkbnu\",\"provisioningState\":\"Creating\",\"status\":\"Running\",\"endpoints\":[\"tylbfpncurdoiw\",\"ithtywu\",\"xcbihw\"],\"port\":821207264,\"sessions\":[\"ntwjch\",\"dgoihxumwctondzj\",\"uu\"]},\"systemData\":{\"createdBy\":\"lwg\",\"createdByType\":\"ManagedIdentity\",\"createdAt\":\"2021-08-12T18:38:44Z\",\"lastModifiedBy\":\"tov\",\"lastModifiedByType\":\"Application\",\"lastModifiedAt\":\"2021-03-02T03:24:34Z\"},\"managedBy\":\"nqfiufxqknpi\",\"managedByExtended\":[\"epttwqmsniff\",\"dmqnrojlpij\",\"k\"],\"id\":\"xfrdd\",\"name\":\"c\",\"type\":\"atiz\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        StoragePoolManager manager = StoragePoolManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<IscsiTarget> response
            = manager.iscsiTargets().listByDiskPool("gzxnfaazpxdtnk", "mkqjj", com.azure.core.util.Context.NONE);

        Assertions.assertEquals(IscsiTargetAclMode.DYNAMIC, response.iterator().next().aclMode());
        Assertions.assertEquals("nvrk", response.iterator().next().staticAcls().get(0).initiatorIqn());
        Assertions.assertEquals("ou", response.iterator().next().staticAcls().get(0).mappedLuns().get(0));
        Assertions.assertEquals("o", response.iterator().next().luns().get(0).name());
        Assertions.assertEquals("sttp", response.iterator().next().luns().get(0).managedDiskAzureResourceId());
        Assertions.assertEquals("kkbnu", response.iterator().next().targetIqn());
        Assertions.assertEquals(OperationalStatus.RUNNING, response.iterator().next().status());
        Assertions.assertEquals("tylbfpncurdoiw", response.iterator().next().endpoints().get(0));
        Assertions.assertEquals(821207264, response.iterator().next().port());
    }
}
