/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.logic.v2016_06_01;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Defines values for TrackingRecordType.
 */
public enum TrackingRecordType {
    /** Enum value NotSpecified. */
    NOT_SPECIFIED("NotSpecified"),

    /** Enum value Custom. */
    CUSTOM("Custom"),

    /** Enum value AS2Message. */
    AS2MESSAGE("AS2Message"),

    /** Enum value AS2MDN. */
    AS2MDN("AS2MDN"),

    /** Enum value X12Interchange. */
    X12INTERCHANGE("X12Interchange"),

    /** Enum value X12FunctionalGroup. */
    X12FUNCTIONAL_GROUP("X12FunctionalGroup"),

    /** Enum value X12TransactionSet. */
    X12TRANSACTION_SET("X12TransactionSet"),

    /** Enum value X12InterchangeAcknowledgment. */
    X12INTERCHANGE_ACKNOWLEDGMENT("X12InterchangeAcknowledgment"),

    /** Enum value X12FunctionalGroupAcknowledgment. */
    X12FUNCTIONAL_GROUP_ACKNOWLEDGMENT("X12FunctionalGroupAcknowledgment"),

    /** Enum value X12TransactionSetAcknowledgment. */
    X12TRANSACTION_SET_ACKNOWLEDGMENT("X12TransactionSetAcknowledgment"),

    /** Enum value EdifactInterchange. */
    EDIFACT_INTERCHANGE("EdifactInterchange"),

    /** Enum value EdifactFunctionalGroup. */
    EDIFACT_FUNCTIONAL_GROUP("EdifactFunctionalGroup"),

    /** Enum value EdifactTransactionSet. */
    EDIFACT_TRANSACTION_SET("EdifactTransactionSet"),

    /** Enum value EdifactInterchangeAcknowledgment. */
    EDIFACT_INTERCHANGE_ACKNOWLEDGMENT("EdifactInterchangeAcknowledgment"),

    /** Enum value EdifactFunctionalGroupAcknowledgment. */
    EDIFACT_FUNCTIONAL_GROUP_ACKNOWLEDGMENT("EdifactFunctionalGroupAcknowledgment"),

    /** Enum value EdifactTransactionSetAcknowledgment. */
    EDIFACT_TRANSACTION_SET_ACKNOWLEDGMENT("EdifactTransactionSetAcknowledgment");

    /** The actual serialized value for a TrackingRecordType instance. */
    private String value;

    TrackingRecordType(String value) {
        this.value = value;
    }

    /**
     * Parses a serialized value to a TrackingRecordType instance.
     *
     * @param value the serialized value to parse.
     * @return the parsed TrackingRecordType object, or null if unable to parse.
     */
    @JsonCreator
    public static TrackingRecordType fromString(String value) {
        TrackingRecordType[] items = TrackingRecordType.values();
        for (TrackingRecordType item : items) {
            if (item.toString().equalsIgnoreCase(value)) {
                return item;
            }
        }
        return null;
    }

    @JsonValue
    @Override
    public String toString() {
        return this.value;
    }
}
