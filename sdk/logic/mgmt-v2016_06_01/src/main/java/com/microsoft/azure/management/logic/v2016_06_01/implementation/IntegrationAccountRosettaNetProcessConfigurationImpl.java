/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.logic.v2016_06_01.implementation;

import com.microsoft.azure.management.logic.v2016_06_01.IntegrationAccountRosettaNetProcessConfiguration;
import com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl;
import rx.Observable;
import java.util.Map;
import org.joda.time.DateTime;
import com.microsoft.azure.management.logic.v2016_06_01.RosettaNetPipActivitySettings;
import com.microsoft.azure.management.logic.v2016_06_01.RosettaNetPipRoleSettings;

class IntegrationAccountRosettaNetProcessConfigurationImpl extends CreatableUpdatableImpl<IntegrationAccountRosettaNetProcessConfiguration, IntegrationAccountRosettaNetProcessConfigurationInner, IntegrationAccountRosettaNetProcessConfigurationImpl> implements IntegrationAccountRosettaNetProcessConfiguration, IntegrationAccountRosettaNetProcessConfiguration.Definition, IntegrationAccountRosettaNetProcessConfiguration.Update {
    private final LogicManager manager;
    private String resourceGroupName;
    private String integrationAccountName;
    private String rosettaNetProcessConfigurationName;

    IntegrationAccountRosettaNetProcessConfigurationImpl(String name, LogicManager manager) {
        super(name, new IntegrationAccountRosettaNetProcessConfigurationInner());
        this.manager = manager;
        // Set resource name
        this.rosettaNetProcessConfigurationName = name;
        //
    }

    IntegrationAccountRosettaNetProcessConfigurationImpl(IntegrationAccountRosettaNetProcessConfigurationInner inner, LogicManager manager) {
        super(inner.name(), inner);
        this.manager = manager;
        // Set resource name
        this.rosettaNetProcessConfigurationName = inner.name();
        // set resource ancestor and positional variables
        this.resourceGroupName = IdParsingUtils.getValueFromIdByName(inner.id(), "resourceGroups");
        this.integrationAccountName = IdParsingUtils.getValueFromIdByName(inner.id(), "integrationAccounts");
        this.rosettaNetProcessConfigurationName = IdParsingUtils.getValueFromIdByName(inner.id(), "rosettanetprocessconfigurations");
        //
    }

    @Override
    public LogicManager manager() {
        return this.manager;
    }

    @Override
    public Observable<IntegrationAccountRosettaNetProcessConfiguration> createResourceAsync() {
        RosettaNetProcessConfigurationsInner client = this.manager().inner().rosettaNetProcessConfigurations();
        return client.createOrUpdateAsync(this.resourceGroupName, this.integrationAccountName, this.rosettaNetProcessConfigurationName, this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    public Observable<IntegrationAccountRosettaNetProcessConfiguration> updateResourceAsync() {
        RosettaNetProcessConfigurationsInner client = this.manager().inner().rosettaNetProcessConfigurations();
        return client.createOrUpdateAsync(this.resourceGroupName, this.integrationAccountName, this.rosettaNetProcessConfigurationName, this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<IntegrationAccountRosettaNetProcessConfigurationInner> getInnerAsync() {
        RosettaNetProcessConfigurationsInner client = this.manager().inner().rosettaNetProcessConfigurations();
        return client.getAsync(this.resourceGroupName, this.integrationAccountName, this.rosettaNetProcessConfigurationName);
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }


    @Override
    public RosettaNetPipActivitySettings activitySettings() {
        return this.inner().activitySettings();
    }

    @Override
    public DateTime changedTime() {
        return this.inner().changedTime();
    }

    @Override
    public DateTime createdTime() {
        return this.inner().createdTime();
    }

    @Override
    public String description() {
        return this.inner().description();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public RosettaNetPipRoleSettings initiatorRoleSettings() {
        return this.inner().initiatorRoleSettings();
    }

    @Override
    public String location() {
        return this.inner().location();
    }

    @Override
    public Map<String, String> metadata() {
        return this.inner().metadata();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public String processCode() {
        return this.inner().processCode();
    }

    @Override
    public String processName() {
        return this.inner().processName();
    }

    @Override
    public String processVersion() {
        return this.inner().processVersion();
    }

    @Override
    public RosettaNetPipRoleSettings responderRoleSettings() {
        return this.inner().responderRoleSettings();
    }

    @Override
    public Map<String, String> tags() {
        return this.inner().getTags();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

    @Override
    public IntegrationAccountRosettaNetProcessConfigurationImpl withExistingIntegrationAccount(String resourceGroupName, String integrationAccountName) {
        this.resourceGroupName = resourceGroupName;
        this.integrationAccountName = integrationAccountName;
        return this;
    }

    @Override
    public IntegrationAccountRosettaNetProcessConfigurationImpl withActivitySettings(RosettaNetPipActivitySettings activitySettings) {
        this.inner().withActivitySettings(activitySettings);
        return this;
    }

    @Override
    public IntegrationAccountRosettaNetProcessConfigurationImpl withInitiatorRoleSettings(RosettaNetPipRoleSettings initiatorRoleSettings) {
        this.inner().withInitiatorRoleSettings(initiatorRoleSettings);
        return this;
    }

    @Override
    public IntegrationAccountRosettaNetProcessConfigurationImpl withProcessCode(String processCode) {
        this.inner().withProcessCode(processCode);
        return this;
    }

    @Override
    public IntegrationAccountRosettaNetProcessConfigurationImpl withProcessName(String processName) {
        this.inner().withProcessName(processName);
        return this;
    }

    @Override
    public IntegrationAccountRosettaNetProcessConfigurationImpl withProcessVersion(String processVersion) {
        this.inner().withProcessVersion(processVersion);
        return this;
    }

    @Override
    public IntegrationAccountRosettaNetProcessConfigurationImpl withResponderRoleSettings(RosettaNetPipRoleSettings responderRoleSettings) {
        this.inner().withResponderRoleSettings(responderRoleSettings);
        return this;
    }

    @Override
    public IntegrationAccountRosettaNetProcessConfigurationImpl withDescription(String description) {
        this.inner().withDescription(description);
        return this;
    }

    @Override
    public IntegrationAccountRosettaNetProcessConfigurationImpl withLocation(String location) {
        this.inner().withLocation(location);
        return this;
    }

    @Override
    public IntegrationAccountRosettaNetProcessConfigurationImpl withMetadata(Map<String, String> metadata) {
        this.inner().withMetadata(metadata);
        return this;
    }

    @Override
    public IntegrationAccountRosettaNetProcessConfigurationImpl withTags(Map<String, String> tags) {
        this.inner().withTags(tags);
        return this;
    }

}
