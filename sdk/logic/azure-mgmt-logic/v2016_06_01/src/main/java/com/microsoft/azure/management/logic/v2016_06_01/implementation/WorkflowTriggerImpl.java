/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.logic.v2016_06_01.implementation;

import com.microsoft.azure.management.logic.v2016_06_01.WorkflowTrigger;
import com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl;
import rx.Observable;
import org.joda.time.DateTime;
import com.microsoft.azure.management.logic.v2016_06_01.WorkflowTriggerProvisioningState;
import com.microsoft.azure.management.logic.v2016_06_01.WorkflowTriggerRecurrence;
import com.microsoft.azure.management.logic.v2016_06_01.WorkflowState;
import com.microsoft.azure.management.logic.v2016_06_01.WorkflowStatus;
import com.microsoft.azure.management.logic.v2016_06_01.ResourceReference;

class WorkflowTriggerImpl extends IndexableRefreshableWrapperImpl<WorkflowTrigger, WorkflowTriggerInner> implements WorkflowTrigger {
    private final LogicManager manager;
    private String resourceGroupName;
    private String workflowName;
    private String triggerName;

    WorkflowTriggerImpl(WorkflowTriggerInner inner,  LogicManager manager) {
        super(null, inner);
        this.manager = manager;
        this.resourceGroupName = IdParsingUtils.getValueFromIdByName(inner.id(), "resourceGroups");
        this.workflowName = IdParsingUtils.getValueFromIdByName(inner.id(), "workflows");
        this.triggerName = IdParsingUtils.getValueFromIdByName(inner.id(), "triggers");
    }

    @Override
    public LogicManager manager() {
        return this.manager;
    }

    @Override
    protected Observable<WorkflowTriggerInner> getInnerAsync() {
        WorkflowTriggersInner client = this.manager().inner().workflowTriggers();
        return client.getAsync(this.resourceGroupName, this.workflowName, this.triggerName);
    }



    @Override
    public DateTime changedTime() {
        return this.inner().changedTime();
    }

    @Override
    public DateTime createdTime() {
        return this.inner().createdTime();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public DateTime lastExecutionTime() {
        return this.inner().lastExecutionTime();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public DateTime nextExecutionTime() {
        return this.inner().nextExecutionTime();
    }

    @Override
    public WorkflowTriggerProvisioningState provisioningState() {
        return this.inner().provisioningState();
    }

    @Override
    public WorkflowTriggerRecurrence recurrence() {
        return this.inner().recurrence();
    }

    @Override
    public WorkflowState state() {
        return this.inner().state();
    }

    @Override
    public WorkflowStatus status() {
        return this.inner().status();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

    @Override
    public ResourceReference workflow() {
        return this.inner().workflow();
    }

}
