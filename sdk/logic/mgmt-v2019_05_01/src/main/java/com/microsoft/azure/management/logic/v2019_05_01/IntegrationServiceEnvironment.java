/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.logic.v2019_05_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.arm.resources.models.Resource;
import com.microsoft.azure.arm.resources.models.GroupableResourceCore;
import com.microsoft.azure.arm.resources.models.HasResourceGroup;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.logic.v2019_05_01.implementation.LogicManager;
import com.microsoft.azure.management.logic.v2019_05_01.implementation.IntegrationServiceEnvironmentSkuInner;
import com.microsoft.azure.management.logic.v2019_05_01.implementation.IntegrationServiceEnvironmentInner;

/**
 * Type representing IntegrationServiceEnvironment.
 */
public interface IntegrationServiceEnvironment extends HasInner<IntegrationServiceEnvironmentInner>, Resource, GroupableResourceCore<LogicManager, IntegrationServiceEnvironmentInner>, HasResourceGroup, Refreshable<IntegrationServiceEnvironment>, Updatable<IntegrationServiceEnvironment.Update>, HasManager<LogicManager> {
    /**
     * @return the properties value.
     */
    IntegrationServiceEnvironmentProperties properties();

    /**
     * @return the sku value.
     */
    IntegrationServiceEnvironmentSkuInner sku();

    /**
     * The entirety of the IntegrationServiceEnvironment definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithGroup, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of IntegrationServiceEnvironment definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a IntegrationServiceEnvironment definition.
         */
        interface Blank extends GroupableResourceCore.DefinitionWithRegion<WithGroup> {
        }

        /**
         * The stage of the IntegrationServiceEnvironment definition allowing to specify the resource group.
         */
        interface WithGroup extends GroupableResourceCore.DefinitionStages.WithGroup<WithCreate> {
        }

        /**
         * The stage of the integrationserviceenvironment definition allowing to specify Properties.
         */
        interface WithProperties {
            /**
             * Specifies properties.
             * @param properties The integration service environment properties
             * @return the next definition stage
             */
            WithCreate withProperties(IntegrationServiceEnvironmentProperties properties);
        }

        /**
         * The stage of the integrationserviceenvironment definition allowing to specify Sku.
         */
        interface WithSku {
            /**
             * Specifies sku.
             * @param sku The sku
             * @return the next definition stage
             */
            WithCreate withSku(IntegrationServiceEnvironmentSkuInner sku);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<IntegrationServiceEnvironment>, Resource.DefinitionWithTags<WithCreate>, DefinitionStages.WithProperties, DefinitionStages.WithSku {
        }
    }
    /**
     * The template for a IntegrationServiceEnvironment update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<IntegrationServiceEnvironment>, Resource.UpdateWithTags<Update>, UpdateStages.WithProperties, UpdateStages.WithSku {
    }

    /**
     * Grouping of IntegrationServiceEnvironment update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the integrationserviceenvironment update allowing to specify Properties.
         */
        interface WithProperties {
            /**
             * Specifies properties.
             * @param properties The integration service environment properties
             * @return the next update stage
             */
            Update withProperties(IntegrationServiceEnvironmentProperties properties);
        }

        /**
         * The stage of the integrationserviceenvironment update allowing to specify Sku.
         */
        interface WithSku {
            /**
             * Specifies sku.
             * @param sku The sku
             * @return the next update stage
             */
            Update withSku(IntegrationServiceEnvironmentSkuInner sku);
        }

    }
}
