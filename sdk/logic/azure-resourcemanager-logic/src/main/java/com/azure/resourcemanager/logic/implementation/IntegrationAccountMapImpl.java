// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.logic.fluent.models.IntegrationAccountMapInner;
import com.azure.resourcemanager.logic.models.ContentLink;
import com.azure.resourcemanager.logic.models.GetCallbackUrlParameters;
import com.azure.resourcemanager.logic.models.IntegrationAccountMap;
import com.azure.resourcemanager.logic.models.IntegrationAccountMapPropertiesParametersSchema;
import com.azure.resourcemanager.logic.models.MapType;
import com.azure.resourcemanager.logic.models.WorkflowTriggerCallbackUrl;
import java.time.OffsetDateTime;
import java.util.Collections;
import java.util.Map;

public final class IntegrationAccountMapImpl
    implements IntegrationAccountMap, IntegrationAccountMap.Definition, IntegrationAccountMap.Update {
    private IntegrationAccountMapInner innerObject;

    private final com.azure.resourcemanager.logic.LogicManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public MapType mapType() {
        return this.innerModel().mapType();
    }

    public IntegrationAccountMapPropertiesParametersSchema parametersSchema() {
        return this.innerModel().parametersSchema();
    }

    public OffsetDateTime createdTime() {
        return this.innerModel().createdTime();
    }

    public OffsetDateTime changedTime() {
        return this.innerModel().changedTime();
    }

    public String content() {
        return this.innerModel().content();
    }

    public String contentType() {
        return this.innerModel().contentType();
    }

    public ContentLink contentLink() {
        return this.innerModel().contentLink();
    }

    public Object metadata() {
        return this.innerModel().metadata();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public IntegrationAccountMapInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.logic.LogicManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String integrationAccountName;

    private String mapName;

    public IntegrationAccountMapImpl withExistingIntegrationAccount(
        String resourceGroupName, String integrationAccountName) {
        this.resourceGroupName = resourceGroupName;
        this.integrationAccountName = integrationAccountName;
        return this;
    }

    public IntegrationAccountMap create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getIntegrationAccountMaps()
                .createOrUpdateWithResponse(
                    resourceGroupName, integrationAccountName, mapName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public IntegrationAccountMap create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getIntegrationAccountMaps()
                .createOrUpdateWithResponse(
                    resourceGroupName, integrationAccountName, mapName, this.innerModel(), context)
                .getValue();
        return this;
    }

    IntegrationAccountMapImpl(String name, com.azure.resourcemanager.logic.LogicManager serviceManager) {
        this.innerObject = new IntegrationAccountMapInner();
        this.serviceManager = serviceManager;
        this.mapName = name;
    }

    public IntegrationAccountMapImpl update() {
        return this;
    }

    public IntegrationAccountMap apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getIntegrationAccountMaps()
                .createOrUpdateWithResponse(
                    resourceGroupName, integrationAccountName, mapName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public IntegrationAccountMap apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getIntegrationAccountMaps()
                .createOrUpdateWithResponse(
                    resourceGroupName, integrationAccountName, mapName, this.innerModel(), context)
                .getValue();
        return this;
    }

    IntegrationAccountMapImpl(
        IntegrationAccountMapInner innerObject, com.azure.resourcemanager.logic.LogicManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.integrationAccountName = Utils.getValueFromIdByName(innerObject.id(), "integrationAccounts");
        this.mapName = Utils.getValueFromIdByName(innerObject.id(), "maps");
    }

    public IntegrationAccountMap refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getIntegrationAccountMaps()
                .getWithResponse(resourceGroupName, integrationAccountName, mapName, Context.NONE)
                .getValue();
        return this;
    }

    public IntegrationAccountMap refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getIntegrationAccountMaps()
                .getWithResponse(resourceGroupName, integrationAccountName, mapName, context)
                .getValue();
        return this;
    }

    public WorkflowTriggerCallbackUrl listContentCallbackUrl(GetCallbackUrlParameters listContentCallbackUrl) {
        return serviceManager
            .integrationAccountMaps()
            .listContentCallbackUrl(resourceGroupName, integrationAccountName, mapName, listContentCallbackUrl);
    }

    public Response<WorkflowTriggerCallbackUrl> listContentCallbackUrlWithResponse(
        GetCallbackUrlParameters listContentCallbackUrl, Context context) {
        return serviceManager
            .integrationAccountMaps()
            .listContentCallbackUrlWithResponse(
                resourceGroupName, integrationAccountName, mapName, listContentCallbackUrl, context);
    }

    public IntegrationAccountMapImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public IntegrationAccountMapImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public IntegrationAccountMapImpl withMapType(MapType mapType) {
        this.innerModel().withMapType(mapType);
        return this;
    }

    public IntegrationAccountMapImpl withTags(Map<String, String> tags) {
        this.innerModel().withTags(tags);
        return this;
    }

    public IntegrationAccountMapImpl withParametersSchema(
        IntegrationAccountMapPropertiesParametersSchema parametersSchema) {
        this.innerModel().withParametersSchema(parametersSchema);
        return this;
    }

    public IntegrationAccountMapImpl withContent(String content) {
        this.innerModel().withContent(content);
        return this;
    }

    public IntegrationAccountMapImpl withContentType(String contentType) {
        this.innerModel().withContentType(contentType);
        return this;
    }

    public IntegrationAccountMapImpl withMetadata(Object metadata) {
        this.innerModel().withMetadata(metadata);
        return this;
    }
}
