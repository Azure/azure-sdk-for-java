// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.logic.fluent.models.IntegrationServiceEnvironmentManagedApiInner;

/**
 * An instance of this class provides access to all the operations defined in
 * IntegrationServiceEnvironmentManagedApisClient.
 */
public interface IntegrationServiceEnvironmentManagedApisClient {
    /**
     * Gets the integration service environment managed Apis.
     *
     * @param resourceGroup The resource group.
     * @param integrationServiceEnvironmentName The integration service environment name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the integration service environment managed Apis as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<IntegrationServiceEnvironmentManagedApiInner> list(
        String resourceGroup, String integrationServiceEnvironmentName);

    /**
     * Gets the integration service environment managed Apis.
     *
     * @param resourceGroup The resource group.
     * @param integrationServiceEnvironmentName The integration service environment name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the integration service environment managed Apis as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<IntegrationServiceEnvironmentManagedApiInner> list(
        String resourceGroup, String integrationServiceEnvironmentName, Context context);

    /**
     * Gets the integration service environment managed Api.
     *
     * @param resourceGroup The resource group name.
     * @param integrationServiceEnvironmentName The integration service environment name.
     * @param apiName The api name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the integration service environment managed Api along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<IntegrationServiceEnvironmentManagedApiInner> getWithResponse(
        String resourceGroup, String integrationServiceEnvironmentName, String apiName, Context context);

    /**
     * Gets the integration service environment managed Api.
     *
     * @param resourceGroup The resource group name.
     * @param integrationServiceEnvironmentName The integration service environment name.
     * @param apiName The api name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the integration service environment managed Api.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    IntegrationServiceEnvironmentManagedApiInner get(
        String resourceGroup, String integrationServiceEnvironmentName, String apiName);

    /**
     * Puts the integration service environment managed Api.
     *
     * @param resourceGroup The resource group name.
     * @param integrationServiceEnvironmentName The integration service environment name.
     * @param apiName The api name.
     * @param integrationServiceEnvironmentManagedApi The integration service environment managed api.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the integration service environment managed api.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<IntegrationServiceEnvironmentManagedApiInner>, IntegrationServiceEnvironmentManagedApiInner>
        beginPut(
            String resourceGroup,
            String integrationServiceEnvironmentName,
            String apiName,
            IntegrationServiceEnvironmentManagedApiInner integrationServiceEnvironmentManagedApi);

    /**
     * Puts the integration service environment managed Api.
     *
     * @param resourceGroup The resource group name.
     * @param integrationServiceEnvironmentName The integration service environment name.
     * @param apiName The api name.
     * @param integrationServiceEnvironmentManagedApi The integration service environment managed api.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the integration service environment managed api.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<IntegrationServiceEnvironmentManagedApiInner>, IntegrationServiceEnvironmentManagedApiInner>
        beginPut(
            String resourceGroup,
            String integrationServiceEnvironmentName,
            String apiName,
            IntegrationServiceEnvironmentManagedApiInner integrationServiceEnvironmentManagedApi,
            Context context);

    /**
     * Puts the integration service environment managed Api.
     *
     * @param resourceGroup The resource group name.
     * @param integrationServiceEnvironmentName The integration service environment name.
     * @param apiName The api name.
     * @param integrationServiceEnvironmentManagedApi The integration service environment managed api.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the integration service environment managed api.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    IntegrationServiceEnvironmentManagedApiInner put(
        String resourceGroup,
        String integrationServiceEnvironmentName,
        String apiName,
        IntegrationServiceEnvironmentManagedApiInner integrationServiceEnvironmentManagedApi);

    /**
     * Puts the integration service environment managed Api.
     *
     * @param resourceGroup The resource group name.
     * @param integrationServiceEnvironmentName The integration service environment name.
     * @param apiName The api name.
     * @param integrationServiceEnvironmentManagedApi The integration service environment managed api.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the integration service environment managed api.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    IntegrationServiceEnvironmentManagedApiInner put(
        String resourceGroup,
        String integrationServiceEnvironmentName,
        String apiName,
        IntegrationServiceEnvironmentManagedApiInner integrationServiceEnvironmentManagedApi,
        Context context);

    /**
     * Deletes the integration service environment managed Api.
     *
     * @param resourceGroup The resource group.
     * @param integrationServiceEnvironmentName The integration service environment name.
     * @param apiName The api name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(
        String resourceGroup, String integrationServiceEnvironmentName, String apiName);

    /**
     * Deletes the integration service environment managed Api.
     *
     * @param resourceGroup The resource group.
     * @param integrationServiceEnvironmentName The integration service environment name.
     * @param apiName The api name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(
        String resourceGroup, String integrationServiceEnvironmentName, String apiName, Context context);

    /**
     * Deletes the integration service environment managed Api.
     *
     * @param resourceGroup The resource group.
     * @param integrationServiceEnvironmentName The integration service environment name.
     * @param apiName The api name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroup, String integrationServiceEnvironmentName, String apiName);

    /**
     * Deletes the integration service environment managed Api.
     *
     * @param resourceGroup The resource group.
     * @param integrationServiceEnvironmentName The integration service environment name.
     * @param apiName The api name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroup, String integrationServiceEnvironmentName, String apiName, Context context);
}
