// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.models;

import com.azure.core.http.rest.Response;
import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.logic.fluent.models.IntegrationAccountSchemaInner;
import java.time.OffsetDateTime;
import java.util.Map;

/** An immutable client-side representation of IntegrationAccountSchema. */
public interface IntegrationAccountSchema {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the schemaType property: The schema type.
     *
     * @return the schemaType value.
     */
    SchemaType schemaType();

    /**
     * Gets the targetNamespace property: The target namespace of the schema.
     *
     * @return the targetNamespace value.
     */
    String targetNamespace();

    /**
     * Gets the documentName property: The document name.
     *
     * @return the documentName value.
     */
    String documentName();

    /**
     * Gets the fileName property: The file name.
     *
     * @return the fileName value.
     */
    String fileName();

    /**
     * Gets the createdTime property: The created time.
     *
     * @return the createdTime value.
     */
    OffsetDateTime createdTime();

    /**
     * Gets the changedTime property: The changed time.
     *
     * @return the changedTime value.
     */
    OffsetDateTime changedTime();

    /**
     * Gets the metadata property: The metadata.
     *
     * @return the metadata value.
     */
    Object metadata();

    /**
     * Gets the content property: The content.
     *
     * @return the content value.
     */
    String content();

    /**
     * Gets the contentType property: The content type.
     *
     * @return the contentType value.
     */
    String contentType();

    /**
     * Gets the contentLink property: The content link.
     *
     * @return the contentLink value.
     */
    ContentLink contentLink();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.logic.fluent.models.IntegrationAccountSchemaInner object.
     *
     * @return the inner object.
     */
    IntegrationAccountSchemaInner innerModel();

    /** The entirety of the IntegrationAccountSchema definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithParentResource,
            DefinitionStages.WithSchemaType,
            DefinitionStages.WithCreate {
    }
    /** The IntegrationAccountSchema definition stages. */
    interface DefinitionStages {
        /** The first stage of the IntegrationAccountSchema definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the IntegrationAccountSchema definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(String location);
        }
        /** The stage of the IntegrationAccountSchema definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, integrationAccountName.
             *
             * @param resourceGroupName The resource group name.
             * @param integrationAccountName The integration account name.
             * @return the next definition stage.
             */
            WithSchemaType withExistingIntegrationAccount(String resourceGroupName, String integrationAccountName);
        }
        /** The stage of the IntegrationAccountSchema definition allowing to specify schemaType. */
        interface WithSchemaType {
            /**
             * Specifies the schemaType property: The schema type..
             *
             * @param schemaType The schema type.
             * @return the next definition stage.
             */
            WithCreate withSchemaType(SchemaType schemaType);
        }
        /**
         * The stage of the IntegrationAccountSchema definition which contains all the minimum required properties for
         * the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithTargetNamespace,
                DefinitionStages.WithDocumentName,
                DefinitionStages.WithFileName,
                DefinitionStages.WithMetadata,
                DefinitionStages.WithContent,
                DefinitionStages.WithContentType {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            IntegrationAccountSchema create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            IntegrationAccountSchema create(Context context);
        }
        /** The stage of the IntegrationAccountSchema definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the IntegrationAccountSchema definition allowing to specify targetNamespace. */
        interface WithTargetNamespace {
            /**
             * Specifies the targetNamespace property: The target namespace of the schema..
             *
             * @param targetNamespace The target namespace of the schema.
             * @return the next definition stage.
             */
            WithCreate withTargetNamespace(String targetNamespace);
        }
        /** The stage of the IntegrationAccountSchema definition allowing to specify documentName. */
        interface WithDocumentName {
            /**
             * Specifies the documentName property: The document name..
             *
             * @param documentName The document name.
             * @return the next definition stage.
             */
            WithCreate withDocumentName(String documentName);
        }
        /** The stage of the IntegrationAccountSchema definition allowing to specify fileName. */
        interface WithFileName {
            /**
             * Specifies the fileName property: The file name..
             *
             * @param fileName The file name.
             * @return the next definition stage.
             */
            WithCreate withFileName(String fileName);
        }
        /** The stage of the IntegrationAccountSchema definition allowing to specify metadata. */
        interface WithMetadata {
            /**
             * Specifies the metadata property: The metadata..
             *
             * @param metadata The metadata.
             * @return the next definition stage.
             */
            WithCreate withMetadata(Object metadata);
        }
        /** The stage of the IntegrationAccountSchema definition allowing to specify content. */
        interface WithContent {
            /**
             * Specifies the content property: The content..
             *
             * @param content The content.
             * @return the next definition stage.
             */
            WithCreate withContent(String content);
        }
        /** The stage of the IntegrationAccountSchema definition allowing to specify contentType. */
        interface WithContentType {
            /**
             * Specifies the contentType property: The content type..
             *
             * @param contentType The content type.
             * @return the next definition stage.
             */
            WithCreate withContentType(String contentType);
        }
    }
    /**
     * Begins update for the IntegrationAccountSchema resource.
     *
     * @return the stage of resource update.
     */
    IntegrationAccountSchema.Update update();

    /** The template for IntegrationAccountSchema update. */
    interface Update
        extends UpdateStages.WithTags,
            UpdateStages.WithSchemaType,
            UpdateStages.WithTargetNamespace,
            UpdateStages.WithDocumentName,
            UpdateStages.WithFileName,
            UpdateStages.WithMetadata,
            UpdateStages.WithContent,
            UpdateStages.WithContentType {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        IntegrationAccountSchema apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        IntegrationAccountSchema apply(Context context);
    }
    /** The IntegrationAccountSchema update stages. */
    interface UpdateStages {
        /** The stage of the IntegrationAccountSchema update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
        /** The stage of the IntegrationAccountSchema update allowing to specify schemaType. */
        interface WithSchemaType {
            /**
             * Specifies the schemaType property: The schema type..
             *
             * @param schemaType The schema type.
             * @return the next definition stage.
             */
            Update withSchemaType(SchemaType schemaType);
        }
        /** The stage of the IntegrationAccountSchema update allowing to specify targetNamespace. */
        interface WithTargetNamespace {
            /**
             * Specifies the targetNamespace property: The target namespace of the schema..
             *
             * @param targetNamespace The target namespace of the schema.
             * @return the next definition stage.
             */
            Update withTargetNamespace(String targetNamespace);
        }
        /** The stage of the IntegrationAccountSchema update allowing to specify documentName. */
        interface WithDocumentName {
            /**
             * Specifies the documentName property: The document name..
             *
             * @param documentName The document name.
             * @return the next definition stage.
             */
            Update withDocumentName(String documentName);
        }
        /** The stage of the IntegrationAccountSchema update allowing to specify fileName. */
        interface WithFileName {
            /**
             * Specifies the fileName property: The file name..
             *
             * @param fileName The file name.
             * @return the next definition stage.
             */
            Update withFileName(String fileName);
        }
        /** The stage of the IntegrationAccountSchema update allowing to specify metadata. */
        interface WithMetadata {
            /**
             * Specifies the metadata property: The metadata..
             *
             * @param metadata The metadata.
             * @return the next definition stage.
             */
            Update withMetadata(Object metadata);
        }
        /** The stage of the IntegrationAccountSchema update allowing to specify content. */
        interface WithContent {
            /**
             * Specifies the content property: The content..
             *
             * @param content The content.
             * @return the next definition stage.
             */
            Update withContent(String content);
        }
        /** The stage of the IntegrationAccountSchema update allowing to specify contentType. */
        interface WithContentType {
            /**
             * Specifies the contentType property: The content type..
             *
             * @param contentType The content type.
             * @return the next definition stage.
             */
            Update withContentType(String contentType);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    IntegrationAccountSchema refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    IntegrationAccountSchema refresh(Context context);

    /**
     * Get the content callback url.
     *
     * @param listContentCallbackUrl The callback url parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the content callback url.
     */
    WorkflowTriggerCallbackUrl listContentCallbackUrl(GetCallbackUrlParameters listContentCallbackUrl);

    /**
     * Get the content callback url.
     *
     * @param listContentCallbackUrl The callback url parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the content callback url.
     */
    Response<WorkflowTriggerCallbackUrl> listContentCallbackUrlWithResponse(
        GetCallbackUrlParameters listContentCallbackUrl, Context context);
}
