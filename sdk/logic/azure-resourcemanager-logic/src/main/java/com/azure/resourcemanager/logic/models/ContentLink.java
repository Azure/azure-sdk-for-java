// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The content link. */
@Fluent
public final class ContentLink {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ContentLink.class);

    /*
     * The content link URI.
     */
    @JsonProperty(value = "uri")
    private String uri;

    /*
     * The content version.
     */
    @JsonProperty(value = "contentVersion")
    private String contentVersion;

    /*
     * The content size.
     */
    @JsonProperty(value = "contentSize")
    private Long contentSize;

    /*
     * The content hash.
     */
    @JsonProperty(value = "contentHash")
    private ContentHash contentHash;

    /*
     * The metadata.
     */
    @JsonProperty(value = "metadata")
    private Object metadata;

    /**
     * Get the uri property: The content link URI.
     *
     * @return the uri value.
     */
    public String uri() {
        return this.uri;
    }

    /**
     * Set the uri property: The content link URI.
     *
     * @param uri the uri value to set.
     * @return the ContentLink object itself.
     */
    public ContentLink withUri(String uri) {
        this.uri = uri;
        return this;
    }

    /**
     * Get the contentVersion property: The content version.
     *
     * @return the contentVersion value.
     */
    public String contentVersion() {
        return this.contentVersion;
    }

    /**
     * Set the contentVersion property: The content version.
     *
     * @param contentVersion the contentVersion value to set.
     * @return the ContentLink object itself.
     */
    public ContentLink withContentVersion(String contentVersion) {
        this.contentVersion = contentVersion;
        return this;
    }

    /**
     * Get the contentSize property: The content size.
     *
     * @return the contentSize value.
     */
    public Long contentSize() {
        return this.contentSize;
    }

    /**
     * Set the contentSize property: The content size.
     *
     * @param contentSize the contentSize value to set.
     * @return the ContentLink object itself.
     */
    public ContentLink withContentSize(Long contentSize) {
        this.contentSize = contentSize;
        return this;
    }

    /**
     * Get the contentHash property: The content hash.
     *
     * @return the contentHash value.
     */
    public ContentHash contentHash() {
        return this.contentHash;
    }

    /**
     * Set the contentHash property: The content hash.
     *
     * @param contentHash the contentHash value to set.
     * @return the ContentLink object itself.
     */
    public ContentLink withContentHash(ContentHash contentHash) {
        this.contentHash = contentHash;
        return this;
    }

    /**
     * Get the metadata property: The metadata.
     *
     * @return the metadata value.
     */
    public Object metadata() {
        return this.metadata;
    }

    /**
     * Set the metadata property: The metadata.
     *
     * @param metadata the metadata value to set.
     * @return the ContentLink object itself.
     */
    public ContentLink withMetadata(Object metadata) {
        this.metadata = metadata;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (contentHash() != null) {
            contentHash().validate();
        }
    }
}
