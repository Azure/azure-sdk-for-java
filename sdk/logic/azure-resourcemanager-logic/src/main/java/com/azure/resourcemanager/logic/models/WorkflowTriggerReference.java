// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The workflow trigger reference. */
@Fluent
public final class WorkflowTriggerReference extends ResourceReference {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(WorkflowTriggerReference.class);

    /*
     * The workflow name.
     */
    @JsonProperty(value = "flowName")
    private String flowName;

    /*
     * The workflow trigger name.
     */
    @JsonProperty(value = "triggerName")
    private String triggerName;

    /**
     * Get the flowName property: The workflow name.
     *
     * @return the flowName value.
     */
    public String flowName() {
        return this.flowName;
    }

    /**
     * Set the flowName property: The workflow name.
     *
     * @param flowName the flowName value to set.
     * @return the WorkflowTriggerReference object itself.
     */
    public WorkflowTriggerReference withFlowName(String flowName) {
        this.flowName = flowName;
        return this;
    }

    /**
     * Get the triggerName property: The workflow trigger name.
     *
     * @return the triggerName value.
     */
    public String triggerName() {
        return this.triggerName;
    }

    /**
     * Set the triggerName property: The workflow trigger name.
     *
     * @param triggerName the triggerName value to set.
     * @return the WorkflowTriggerReference object itself.
     */
    public WorkflowTriggerReference withTriggerName(String triggerName) {
        this.triggerName = triggerName;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public WorkflowTriggerReference withId(String id) {
        super.withId(id);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
