// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.logic.models.ApiResourceProperties;
import com.azure.resourcemanager.logic.models.IntegrationServiceEnvironmentManagedApiDeploymentParameters;
import com.azure.resourcemanager.logic.models.ResourceReference;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The integration service environment managed api properties. */
@Fluent
public final class IntegrationServiceEnvironmentManagedApiProperties extends ApiResourceProperties {
    /*
     * The integration service environment managed api deployment parameters.
     */
    @JsonProperty(value = "deploymentParameters")
    private IntegrationServiceEnvironmentManagedApiDeploymentParameters deploymentParameters;

    /** Creates an instance of IntegrationServiceEnvironmentManagedApiProperties class. */
    public IntegrationServiceEnvironmentManagedApiProperties() {
    }

    /**
     * Get the deploymentParameters property: The integration service environment managed api deployment parameters.
     *
     * @return the deploymentParameters value.
     */
    public IntegrationServiceEnvironmentManagedApiDeploymentParameters deploymentParameters() {
        return this.deploymentParameters;
    }

    /**
     * Set the deploymentParameters property: The integration service environment managed api deployment parameters.
     *
     * @param deploymentParameters the deploymentParameters value to set.
     * @return the IntegrationServiceEnvironmentManagedApiProperties object itself.
     */
    public IntegrationServiceEnvironmentManagedApiProperties withDeploymentParameters(
        IntegrationServiceEnvironmentManagedApiDeploymentParameters deploymentParameters) {
        this.deploymentParameters = deploymentParameters;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public IntegrationServiceEnvironmentManagedApiProperties withIntegrationServiceEnvironment(
        ResourceReference integrationServiceEnvironment) {
        super.withIntegrationServiceEnvironment(integrationServiceEnvironment);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (deploymentParameters() != null) {
            deploymentParameters().validate();
        }
    }
}
