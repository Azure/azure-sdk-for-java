// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of IntegrationServiceEnvironmentManagedApis. */
public interface IntegrationServiceEnvironmentManagedApis {
    /**
     * Gets the integration service environment managed Apis.
     *
     * @param resourceGroup The resource group.
     * @param integrationServiceEnvironmentName The integration service environment name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the integration service environment managed Apis.
     */
    PagedIterable<ManagedApi> list(String resourceGroup, String integrationServiceEnvironmentName);

    /**
     * Gets the integration service environment managed Apis.
     *
     * @param resourceGroup The resource group.
     * @param integrationServiceEnvironmentName The integration service environment name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the integration service environment managed Apis.
     */
    PagedIterable<ManagedApi> list(String resourceGroup, String integrationServiceEnvironmentName, Context context);

    /**
     * Gets the integration service environment managed Api.
     *
     * @param resourceGroup The resource group name.
     * @param integrationServiceEnvironmentName The integration service environment name.
     * @param apiName The api name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the integration service environment managed Api.
     */
    ManagedApi get(String resourceGroup, String integrationServiceEnvironmentName, String apiName);

    /**
     * Gets the integration service environment managed Api.
     *
     * @param resourceGroup The resource group name.
     * @param integrationServiceEnvironmentName The integration service environment name.
     * @param apiName The api name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the integration service environment managed Api.
     */
    Response<ManagedApi> getWithResponse(
        String resourceGroup, String integrationServiceEnvironmentName, String apiName, Context context);

    /**
     * Puts the integration service environment managed Api.
     *
     * @param resourceGroup The resource group name.
     * @param integrationServiceEnvironmentName The integration service environment name.
     * @param apiName The api name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the managed api definition.
     */
    ManagedApi put(String resourceGroup, String integrationServiceEnvironmentName, String apiName);

    /**
     * Puts the integration service environment managed Api.
     *
     * @param resourceGroup The resource group name.
     * @param integrationServiceEnvironmentName The integration service environment name.
     * @param apiName The api name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the managed api definition.
     */
    ManagedApi put(String resourceGroup, String integrationServiceEnvironmentName, String apiName, Context context);

    /**
     * Deletes the integration service environment managed Api.
     *
     * @param resourceGroup The resource group.
     * @param integrationServiceEnvironmentName The integration service environment name.
     * @param apiName The api name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroup, String integrationServiceEnvironmentName, String apiName);

    /**
     * Deletes the integration service environment managed Api.
     *
     * @param resourceGroup The resource group.
     * @param integrationServiceEnvironmentName The integration service environment name.
     * @param apiName The api name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroup, String integrationServiceEnvironmentName, String apiName, Context context);
}
