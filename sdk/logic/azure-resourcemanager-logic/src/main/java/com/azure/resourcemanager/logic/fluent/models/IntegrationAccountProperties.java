// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.logic.models.ResourceReference;
import com.azure.resourcemanager.logic.models.WorkflowState;
import java.io.IOException;

/**
 * The integration account properties.
 */
@Fluent
public final class IntegrationAccountProperties implements JsonSerializable<IntegrationAccountProperties> {
    /*
     * The integration service environment.
     */
    private ResourceReference integrationServiceEnvironment;

    /*
     * The workflow state.
     */
    private WorkflowState state;

    /**
     * Creates an instance of IntegrationAccountProperties class.
     */
    public IntegrationAccountProperties() {
    }

    /**
     * Get the integrationServiceEnvironment property: The integration service environment.
     * 
     * @return the integrationServiceEnvironment value.
     */
    public ResourceReference integrationServiceEnvironment() {
        return this.integrationServiceEnvironment;
    }

    /**
     * Set the integrationServiceEnvironment property: The integration service environment.
     * 
     * @param integrationServiceEnvironment the integrationServiceEnvironment value to set.
     * @return the IntegrationAccountProperties object itself.
     */
    public IntegrationAccountProperties
        withIntegrationServiceEnvironment(ResourceReference integrationServiceEnvironment) {
        this.integrationServiceEnvironment = integrationServiceEnvironment;
        return this;
    }

    /**
     * Get the state property: The workflow state.
     * 
     * @return the state value.
     */
    public WorkflowState state() {
        return this.state;
    }

    /**
     * Set the state property: The workflow state.
     * 
     * @param state the state value to set.
     * @return the IntegrationAccountProperties object itself.
     */
    public IntegrationAccountProperties withState(WorkflowState state) {
        this.state = state;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (integrationServiceEnvironment() != null) {
            integrationServiceEnvironment().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("integrationServiceEnvironment", this.integrationServiceEnvironment);
        jsonWriter.writeStringField("state", this.state == null ? null : this.state.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of IntegrationAccountProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of IntegrationAccountProperties if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the IntegrationAccountProperties.
     */
    public static IntegrationAccountProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            IntegrationAccountProperties deserializedIntegrationAccountProperties = new IntegrationAccountProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("integrationServiceEnvironment".equals(fieldName)) {
                    deserializedIntegrationAccountProperties.integrationServiceEnvironment
                        = ResourceReference.fromJson(reader);
                } else if ("state".equals(fieldName)) {
                    deserializedIntegrationAccountProperties.state = WorkflowState.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedIntegrationAccountProperties;
        });
    }
}
