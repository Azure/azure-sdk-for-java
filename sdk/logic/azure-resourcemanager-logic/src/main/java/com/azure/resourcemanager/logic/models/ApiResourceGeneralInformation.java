// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The API general information.
 */
@Fluent
public final class ApiResourceGeneralInformation implements JsonSerializable<ApiResourceGeneralInformation> {
    /*
     * The icon url.
     */
    private String iconUrl;

    /*
     * The display name.
     */
    private String displayName;

    /*
     * The description.
     */
    private String description;

    /*
     * The terms of use url.
     */
    private String termsOfUseUrl;

    /*
     * The release tag.
     */
    private String releaseTag;

    /*
     * The tier.
     */
    private ApiTier tier;

    /**
     * Creates an instance of ApiResourceGeneralInformation class.
     */
    public ApiResourceGeneralInformation() {
    }

    /**
     * Get the iconUrl property: The icon url.
     * 
     * @return the iconUrl value.
     */
    public String iconUrl() {
        return this.iconUrl;
    }

    /**
     * Set the iconUrl property: The icon url.
     * 
     * @param iconUrl the iconUrl value to set.
     * @return the ApiResourceGeneralInformation object itself.
     */
    public ApiResourceGeneralInformation withIconUrl(String iconUrl) {
        this.iconUrl = iconUrl;
        return this;
    }

    /**
     * Get the displayName property: The display name.
     * 
     * @return the displayName value.
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set the displayName property: The display name.
     * 
     * @param displayName the displayName value to set.
     * @return the ApiResourceGeneralInformation object itself.
     */
    public ApiResourceGeneralInformation withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the description property: The description.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: The description.
     * 
     * @param description the description value to set.
     * @return the ApiResourceGeneralInformation object itself.
     */
    public ApiResourceGeneralInformation withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the termsOfUseUrl property: The terms of use url.
     * 
     * @return the termsOfUseUrl value.
     */
    public String termsOfUseUrl() {
        return this.termsOfUseUrl;
    }

    /**
     * Set the termsOfUseUrl property: The terms of use url.
     * 
     * @param termsOfUseUrl the termsOfUseUrl value to set.
     * @return the ApiResourceGeneralInformation object itself.
     */
    public ApiResourceGeneralInformation withTermsOfUseUrl(String termsOfUseUrl) {
        this.termsOfUseUrl = termsOfUseUrl;
        return this;
    }

    /**
     * Get the releaseTag property: The release tag.
     * 
     * @return the releaseTag value.
     */
    public String releaseTag() {
        return this.releaseTag;
    }

    /**
     * Set the releaseTag property: The release tag.
     * 
     * @param releaseTag the releaseTag value to set.
     * @return the ApiResourceGeneralInformation object itself.
     */
    public ApiResourceGeneralInformation withReleaseTag(String releaseTag) {
        this.releaseTag = releaseTag;
        return this;
    }

    /**
     * Get the tier property: The tier.
     * 
     * @return the tier value.
     */
    public ApiTier tier() {
        return this.tier;
    }

    /**
     * Set the tier property: The tier.
     * 
     * @param tier the tier value to set.
     * @return the ApiResourceGeneralInformation object itself.
     */
    public ApiResourceGeneralInformation withTier(ApiTier tier) {
        this.tier = tier;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("iconUrl", this.iconUrl);
        jsonWriter.writeStringField("displayName", this.displayName);
        jsonWriter.writeStringField("description", this.description);
        jsonWriter.writeStringField("termsOfUseUrl", this.termsOfUseUrl);
        jsonWriter.writeStringField("releaseTag", this.releaseTag);
        jsonWriter.writeStringField("tier", this.tier == null ? null : this.tier.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ApiResourceGeneralInformation from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ApiResourceGeneralInformation if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ApiResourceGeneralInformation.
     */
    public static ApiResourceGeneralInformation fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ApiResourceGeneralInformation deserializedApiResourceGeneralInformation
                = new ApiResourceGeneralInformation();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("iconUrl".equals(fieldName)) {
                    deserializedApiResourceGeneralInformation.iconUrl = reader.getString();
                } else if ("displayName".equals(fieldName)) {
                    deserializedApiResourceGeneralInformation.displayName = reader.getString();
                } else if ("description".equals(fieldName)) {
                    deserializedApiResourceGeneralInformation.description = reader.getString();
                } else if ("termsOfUseUrl".equals(fieldName)) {
                    deserializedApiResourceGeneralInformation.termsOfUseUrl = reader.getString();
                } else if ("releaseTag".equals(fieldName)) {
                    deserializedApiResourceGeneralInformation.releaseTag = reader.getString();
                } else if ("tier".equals(fieldName)) {
                    deserializedApiResourceGeneralInformation.tier = ApiTier.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedApiResourceGeneralInformation;
        });
    }
}
