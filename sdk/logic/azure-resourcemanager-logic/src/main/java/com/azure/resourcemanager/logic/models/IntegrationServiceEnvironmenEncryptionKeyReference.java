// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The encryption key details for the integration service environment.
 */
@Fluent
public final class IntegrationServiceEnvironmenEncryptionKeyReference
    implements JsonSerializable<IntegrationServiceEnvironmenEncryptionKeyReference> {
    /*
     * The key vault reference.
     */
    private ResourceReference keyVault;

    /*
     * Gets the key name in the Key Vault.
     */
    private String keyName;

    /*
     * Gets the version of the key specified in the keyName property.
     */
    private String keyVersion;

    /**
     * Creates an instance of IntegrationServiceEnvironmenEncryptionKeyReference class.
     */
    public IntegrationServiceEnvironmenEncryptionKeyReference() {
    }

    /**
     * Get the keyVault property: The key vault reference.
     * 
     * @return the keyVault value.
     */
    public ResourceReference keyVault() {
        return this.keyVault;
    }

    /**
     * Set the keyVault property: The key vault reference.
     * 
     * @param keyVault the keyVault value to set.
     * @return the IntegrationServiceEnvironmenEncryptionKeyReference object itself.
     */
    public IntegrationServiceEnvironmenEncryptionKeyReference withKeyVault(ResourceReference keyVault) {
        this.keyVault = keyVault;
        return this;
    }

    /**
     * Get the keyName property: Gets the key name in the Key Vault.
     * 
     * @return the keyName value.
     */
    public String keyName() {
        return this.keyName;
    }

    /**
     * Set the keyName property: Gets the key name in the Key Vault.
     * 
     * @param keyName the keyName value to set.
     * @return the IntegrationServiceEnvironmenEncryptionKeyReference object itself.
     */
    public IntegrationServiceEnvironmenEncryptionKeyReference withKeyName(String keyName) {
        this.keyName = keyName;
        return this;
    }

    /**
     * Get the keyVersion property: Gets the version of the key specified in the keyName property.
     * 
     * @return the keyVersion value.
     */
    public String keyVersion() {
        return this.keyVersion;
    }

    /**
     * Set the keyVersion property: Gets the version of the key specified in the keyName property.
     * 
     * @param keyVersion the keyVersion value to set.
     * @return the IntegrationServiceEnvironmenEncryptionKeyReference object itself.
     */
    public IntegrationServiceEnvironmenEncryptionKeyReference withKeyVersion(String keyVersion) {
        this.keyVersion = keyVersion;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (keyVault() != null) {
            keyVault().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("keyVault", this.keyVault);
        jsonWriter.writeStringField("keyName", this.keyName);
        jsonWriter.writeStringField("keyVersion", this.keyVersion);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of IntegrationServiceEnvironmenEncryptionKeyReference from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of IntegrationServiceEnvironmenEncryptionKeyReference if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the IntegrationServiceEnvironmenEncryptionKeyReference.
     */
    public static IntegrationServiceEnvironmenEncryptionKeyReference fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            IntegrationServiceEnvironmenEncryptionKeyReference deserializedIntegrationServiceEnvironmenEncryptionKeyReference
                = new IntegrationServiceEnvironmenEncryptionKeyReference();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("keyVault".equals(fieldName)) {
                    deserializedIntegrationServiceEnvironmenEncryptionKeyReference.keyVault
                        = ResourceReference.fromJson(reader);
                } else if ("keyName".equals(fieldName)) {
                    deserializedIntegrationServiceEnvironmenEncryptionKeyReference.keyName = reader.getString();
                } else if ("keyVersion".equals(fieldName)) {
                    deserializedIntegrationServiceEnvironmenEncryptionKeyReference.keyVersion = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedIntegrationServiceEnvironmenEncryptionKeyReference;
        });
    }
}
