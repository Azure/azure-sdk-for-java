// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The WSDL service.
 */
@Fluent
public final class WsdlService implements JsonSerializable<WsdlService> {
    /*
     * The qualified name.
     */
    private String qualifiedName;

    /*
     * The list of endpoints' qualified names.
     */
    private List<String> endpointQualifiedNames;

    /**
     * Creates an instance of WsdlService class.
     */
    public WsdlService() {
    }

    /**
     * Get the qualifiedName property: The qualified name.
     * 
     * @return the qualifiedName value.
     */
    public String qualifiedName() {
        return this.qualifiedName;
    }

    /**
     * Set the qualifiedName property: The qualified name.
     * 
     * @param qualifiedName the qualifiedName value to set.
     * @return the WsdlService object itself.
     */
    public WsdlService withQualifiedName(String qualifiedName) {
        this.qualifiedName = qualifiedName;
        return this;
    }

    /**
     * Get the endpointQualifiedNames property: The list of endpoints' qualified names.
     * 
     * @return the endpointQualifiedNames value.
     */
    public List<String> endpointQualifiedNames() {
        return this.endpointQualifiedNames;
    }

    /**
     * Set the endpointQualifiedNames property: The list of endpoints' qualified names.
     * 
     * @param endpointQualifiedNames the endpointQualifiedNames value to set.
     * @return the WsdlService object itself.
     */
    public WsdlService withEndpointQualifiedNames(List<String> endpointQualifiedNames) {
        this.endpointQualifiedNames = endpointQualifiedNames;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("qualifiedName", this.qualifiedName);
        jsonWriter.writeArrayField("EndpointQualifiedNames", this.endpointQualifiedNames,
            (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of WsdlService from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of WsdlService if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the WsdlService.
     */
    public static WsdlService fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            WsdlService deserializedWsdlService = new WsdlService();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("qualifiedName".equals(fieldName)) {
                    deserializedWsdlService.qualifiedName = reader.getString();
                } else if ("EndpointQualifiedNames".equals(fieldName)) {
                    List<String> endpointQualifiedNames = reader.readArray(reader1 -> reader1.getString());
                    deserializedWsdlService.endpointQualifiedNames = endpointQualifiedNames;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedWsdlService;
        });
    }
}
