// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The X12 message filter for odata query. */
@Fluent
public final class X12MessageFilter {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(X12MessageFilter.class);

    /*
     * The message filter type.
     */
    @JsonProperty(value = "messageFilterType", required = true)
    private MessageFilterType messageFilterType;

    /**
     * Get the messageFilterType property: The message filter type.
     *
     * @return the messageFilterType value.
     */
    public MessageFilterType messageFilterType() {
        return this.messageFilterType;
    }

    /**
     * Set the messageFilterType property: The message filter type.
     *
     * @param messageFilterType the messageFilterType value to set.
     * @return the X12MessageFilter object itself.
     */
    public X12MessageFilter withMessageFilterType(MessageFilterType messageFilterType) {
        this.messageFilterType = messageFilterType;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (messageFilterType() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property messageFilterType in model X12MessageFilter"));
        }
    }
}
