// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The Api Operation Annotation.
 */
@Fluent
public final class ApiOperationAnnotation implements JsonSerializable<ApiOperationAnnotation> {
    /*
     * The status annotation.
     */
    private StatusAnnotation status;

    /*
     * The family.
     */
    private String family;

    /*
     * The revision.
     */
    private Integer revision;

    /**
     * Creates an instance of ApiOperationAnnotation class.
     */
    public ApiOperationAnnotation() {
    }

    /**
     * Get the status property: The status annotation.
     * 
     * @return the status value.
     */
    public StatusAnnotation status() {
        return this.status;
    }

    /**
     * Set the status property: The status annotation.
     * 
     * @param status the status value to set.
     * @return the ApiOperationAnnotation object itself.
     */
    public ApiOperationAnnotation withStatus(StatusAnnotation status) {
        this.status = status;
        return this;
    }

    /**
     * Get the family property: The family.
     * 
     * @return the family value.
     */
    public String family() {
        return this.family;
    }

    /**
     * Set the family property: The family.
     * 
     * @param family the family value to set.
     * @return the ApiOperationAnnotation object itself.
     */
    public ApiOperationAnnotation withFamily(String family) {
        this.family = family;
        return this;
    }

    /**
     * Get the revision property: The revision.
     * 
     * @return the revision value.
     */
    public Integer revision() {
        return this.revision;
    }

    /**
     * Set the revision property: The revision.
     * 
     * @param revision the revision value to set.
     * @return the ApiOperationAnnotation object itself.
     */
    public ApiOperationAnnotation withRevision(Integer revision) {
        this.revision = revision;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("status", this.status == null ? null : this.status.toString());
        jsonWriter.writeStringField("family", this.family);
        jsonWriter.writeNumberField("revision", this.revision);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ApiOperationAnnotation from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ApiOperationAnnotation if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ApiOperationAnnotation.
     */
    public static ApiOperationAnnotation fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ApiOperationAnnotation deserializedApiOperationAnnotation = new ApiOperationAnnotation();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("status".equals(fieldName)) {
                    deserializedApiOperationAnnotation.status = StatusAnnotation.fromString(reader.getString());
                } else if ("family".equals(fieldName)) {
                    deserializedApiOperationAnnotation.family = reader.getString();
                } else if ("revision".equals(fieldName)) {
                    deserializedApiOperationAnnotation.revision = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedApiOperationAnnotation;
        });
    }
}
