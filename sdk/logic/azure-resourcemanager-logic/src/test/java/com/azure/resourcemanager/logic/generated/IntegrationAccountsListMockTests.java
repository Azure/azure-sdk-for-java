// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.logic.LogicManager;
import com.azure.resourcemanager.logic.models.IntegrationAccount;
import com.azure.resourcemanager.logic.models.IntegrationAccountSkuName;
import com.azure.resourcemanager.logic.models.WorkflowState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class IntegrationAccountsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"integrationServiceEnvironment\":{\"id\":\"ujnsznjskwjj\",\"name\":\"ukhx\",\"type\":\"xuyyqson\"},\"state\":\"Suspended\"},\"sku\":{\"name\":\"Standard\"},\"location\":\"edjnxicufxt\",\"tags\":{\"sp\":\"e\",\"sqpjcuuyttuindpm\":\"duhztvbgcfltt\"},\"id\":\"ijncaqgtsbahtlop\",\"name\":\"nsbjzrnjcagagm\",\"type\":\"ul\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        LogicManager manager = LogicManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<IntegrationAccount> response
            = manager.integrationAccounts().list(1335575950, com.azure.core.util.Context.NONE);

        Assertions.assertEquals("edjnxicufxt", response.iterator().next().location());
        Assertions.assertEquals("e", response.iterator().next().tags().get("sp"));
        Assertions.assertEquals(IntegrationAccountSkuName.STANDARD, response.iterator().next().sku().name());
        Assertions.assertEquals("ujnsznjskwjj", response.iterator().next().integrationServiceEnvironment().id());
        Assertions.assertEquals(WorkflowState.SUSPENDED, response.iterator().next().state());
    }
}
