// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.logic.models.TrailingSeparatorPolicy;
import com.azure.resourcemanager.logic.models.X12ValidationSettings;
import org.junit.jupiter.api.Assertions;

public final class X12ValidationSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        X12ValidationSettings model = BinaryData.fromString(
            "{\"validateCharacterSet\":true,\"checkDuplicateInterchangeControlNumber\":false,\"interchangeControlNumberValidityDays\":2061917602,\"checkDuplicateGroupControlNumber\":true,\"checkDuplicateTransactionSetControlNumber\":false,\"validateEDITypes\":false,\"validateXSDTypes\":true,\"allowLeadingAndTrailingSpacesAndZeroes\":true,\"trimLeadingAndTrailingSpacesAndZeroes\":true,\"trailingSeparatorPolicy\":\"Mandatory\"}")
            .toObject(X12ValidationSettings.class);
        Assertions.assertEquals(true, model.validateCharacterSet());
        Assertions.assertEquals(false, model.checkDuplicateInterchangeControlNumber());
        Assertions.assertEquals(2061917602, model.interchangeControlNumberValidityDays());
        Assertions.assertEquals(true, model.checkDuplicateGroupControlNumber());
        Assertions.assertEquals(false, model.checkDuplicateTransactionSetControlNumber());
        Assertions.assertEquals(false, model.validateEdiTypes());
        Assertions.assertEquals(true, model.validateXsdTypes());
        Assertions.assertEquals(true, model.allowLeadingAndTrailingSpacesAndZeroes());
        Assertions.assertEquals(true, model.trimLeadingAndTrailingSpacesAndZeroes());
        Assertions.assertEquals(TrailingSeparatorPolicy.MANDATORY, model.trailingSeparatorPolicy());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        X12ValidationSettings model = new X12ValidationSettings().withValidateCharacterSet(true)
            .withCheckDuplicateInterchangeControlNumber(false)
            .withInterchangeControlNumberValidityDays(2061917602)
            .withCheckDuplicateGroupControlNumber(true)
            .withCheckDuplicateTransactionSetControlNumber(false)
            .withValidateEdiTypes(false)
            .withValidateXsdTypes(true)
            .withAllowLeadingAndTrailingSpacesAndZeroes(true)
            .withTrimLeadingAndTrailingSpacesAndZeroes(true)
            .withTrailingSeparatorPolicy(TrailingSeparatorPolicy.MANDATORY);
        model = BinaryData.fromObject(model).toObject(X12ValidationSettings.class);
        Assertions.assertEquals(true, model.validateCharacterSet());
        Assertions.assertEquals(false, model.checkDuplicateInterchangeControlNumber());
        Assertions.assertEquals(2061917602, model.interchangeControlNumberValidityDays());
        Assertions.assertEquals(true, model.checkDuplicateGroupControlNumber());
        Assertions.assertEquals(false, model.checkDuplicateTransactionSetControlNumber());
        Assertions.assertEquals(false, model.validateEdiTypes());
        Assertions.assertEquals(true, model.validateXsdTypes());
        Assertions.assertEquals(true, model.allowLeadingAndTrailingSpacesAndZeroes());
        Assertions.assertEquals(true, model.trimLeadingAndTrailingSpacesAndZeroes());
        Assertions.assertEquals(TrailingSeparatorPolicy.MANDATORY, model.trailingSeparatorPolicy());
    }
}
