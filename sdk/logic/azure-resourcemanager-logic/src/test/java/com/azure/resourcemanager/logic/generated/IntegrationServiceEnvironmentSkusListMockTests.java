// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.logic.LogicManager;
import com.azure.resourcemanager.logic.models.IntegrationServiceEnvironmentSkuDefinition;
import com.azure.resourcemanager.logic.models.IntegrationServiceEnvironmentSkuName;
import com.azure.resourcemanager.logic.models.IntegrationServiceEnvironmentSkuScaleType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class IntegrationServiceEnvironmentSkusListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"resourceType\":\"jvsvywnzliqv\",\"sku\":{\"name\":\"Premium\",\"tier\":\"hn\"},\"capacity\":{\"minimum\":876119533,\"maximum\":1095149992,\"default\":1819344288,\"scaleType\":\"Manual\"}}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        LogicManager manager = LogicManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<IntegrationServiceEnvironmentSkuDefinition> response
            = manager.integrationServiceEnvironmentSkus().list("bexk", "j", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("jvsvywnzliqv", response.iterator().next().resourceType());
        Assertions.assertEquals(IntegrationServiceEnvironmentSkuName.PREMIUM, response.iterator().next().sku().name());
        Assertions.assertEquals("hn", response.iterator().next().sku().tier());
        Assertions.assertEquals(876119533, response.iterator().next().capacity().minimum());
        Assertions.assertEquals(1095149992, response.iterator().next().capacity().maximum());
        Assertions.assertEquals(1819344288, response.iterator().next().capacity().defaultProperty());
        Assertions.assertEquals(IntegrationServiceEnvironmentSkuScaleType.MANUAL,
            response.iterator().next().capacity().scaleType());
    }
}
