// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.logic.models.TrailingSeparatorPolicy;
import com.azure.resourcemanager.logic.models.X12ValidationOverride;
import org.junit.jupiter.api.Assertions;

public final class X12ValidationOverrideTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        X12ValidationOverride model = BinaryData.fromString(
            "{\"messageId\":\"ujlzqnhcvsqltn\",\"validateEDITypes\":false,\"validateXSDTypes\":false,\"allowLeadingAndTrailingSpacesAndZeroes\":true,\"validateCharacterSet\":true,\"trimLeadingAndTrailingSpacesAndZeroes\":false,\"trailingSeparatorPolicy\":\"Mandatory\"}")
            .toObject(X12ValidationOverride.class);
        Assertions.assertEquals("ujlzqnhcvsqltn", model.messageId());
        Assertions.assertEquals(false, model.validateEdiTypes());
        Assertions.assertEquals(false, model.validateXsdTypes());
        Assertions.assertEquals(true, model.allowLeadingAndTrailingSpacesAndZeroes());
        Assertions.assertEquals(true, model.validateCharacterSet());
        Assertions.assertEquals(false, model.trimLeadingAndTrailingSpacesAndZeroes());
        Assertions.assertEquals(TrailingSeparatorPolicy.MANDATORY, model.trailingSeparatorPolicy());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        X12ValidationOverride model = new X12ValidationOverride().withMessageId("ujlzqnhcvsqltn")
            .withValidateEdiTypes(false)
            .withValidateXsdTypes(false)
            .withAllowLeadingAndTrailingSpacesAndZeroes(true)
            .withValidateCharacterSet(true)
            .withTrimLeadingAndTrailingSpacesAndZeroes(false)
            .withTrailingSeparatorPolicy(TrailingSeparatorPolicy.MANDATORY);
        model = BinaryData.fromObject(model).toObject(X12ValidationOverride.class);
        Assertions.assertEquals("ujlzqnhcvsqltn", model.messageId());
        Assertions.assertEquals(false, model.validateEdiTypes());
        Assertions.assertEquals(false, model.validateXsdTypes());
        Assertions.assertEquals(true, model.allowLeadingAndTrailingSpacesAndZeroes());
        Assertions.assertEquals(true, model.validateCharacterSet());
        Assertions.assertEquals(false, model.trimLeadingAndTrailingSpacesAndZeroes());
        Assertions.assertEquals(TrailingSeparatorPolicy.MANDATORY, model.trailingSeparatorPolicy());
    }
}
