// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.logic.models.SwaggerCustomDynamicTreeCommand;
import com.azure.resourcemanager.logic.models.SwaggerCustomDynamicTreeParameter;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class SwaggerCustomDynamicTreeCommandTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SwaggerCustomDynamicTreeCommand model = BinaryData.fromString(
            "{\"operationId\":\"lsbna\",\"itemsPath\":\"fdzmrlprb\",\"itemValuePath\":\"jx\",\"itemTitlePath\":\"aawnzzlfve\",\"itemFullTitlePath\":\"kjbasmrdpbmo\",\"itemIsParent\":\"svukgfzby\",\"selectableFilter\":\"pmeomc\",\"parameters\":{\"xwv\":{\"selectedItemValuePath\":\"kdtgpny\",\"value\":\"datanwy\",\"parameterReference\":\"ew\",\"required\":true}}}")
            .toObject(SwaggerCustomDynamicTreeCommand.class);
        Assertions.assertEquals("lsbna", model.operationId());
        Assertions.assertEquals("fdzmrlprb", model.itemsPath());
        Assertions.assertEquals("jx", model.itemValuePath());
        Assertions.assertEquals("aawnzzlfve", model.itemTitlePath());
        Assertions.assertEquals("kjbasmrdpbmo", model.itemFullTitlePath());
        Assertions.assertEquals("svukgfzby", model.itemIsParent());
        Assertions.assertEquals("pmeomc", model.selectableFilter());
        Assertions.assertEquals("kdtgpny", model.parameters().get("xwv").selectedItemValuePath());
        Assertions.assertEquals("ew", model.parameters().get("xwv").parameterReference());
        Assertions.assertEquals(true, model.parameters().get("xwv").required());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SwaggerCustomDynamicTreeCommand model = new SwaggerCustomDynamicTreeCommand().withOperationId("lsbna")
            .withItemsPath("fdzmrlprb")
            .withItemValuePath("jx")
            .withItemTitlePath("aawnzzlfve")
            .withItemFullTitlePath("kjbasmrdpbmo")
            .withItemIsParent("svukgfzby")
            .withSelectableFilter("pmeomc")
            .withParameters(mapOf("xwv",
                new SwaggerCustomDynamicTreeParameter().withSelectedItemValuePath("kdtgpny")
                    .withValue("datanwy")
                    .withParameterReference("ew")
                    .withRequired(true)));
        model = BinaryData.fromObject(model).toObject(SwaggerCustomDynamicTreeCommand.class);
        Assertions.assertEquals("lsbna", model.operationId());
        Assertions.assertEquals("fdzmrlprb", model.itemsPath());
        Assertions.assertEquals("jx", model.itemValuePath());
        Assertions.assertEquals("aawnzzlfve", model.itemTitlePath());
        Assertions.assertEquals("kjbasmrdpbmo", model.itemFullTitlePath());
        Assertions.assertEquals("svukgfzby", model.itemIsParent());
        Assertions.assertEquals("pmeomc", model.selectableFilter());
        Assertions.assertEquals("kdtgpny", model.parameters().get("xwv").selectedItemValuePath());
        Assertions.assertEquals("ew", model.parameters().get("xwv").parameterReference());
        Assertions.assertEquals(true, model.parameters().get("xwv").required());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
