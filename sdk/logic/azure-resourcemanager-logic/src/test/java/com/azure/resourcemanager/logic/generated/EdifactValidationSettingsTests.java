// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.logic.models.EdifactValidationSettings;
import com.azure.resourcemanager.logic.models.TrailingSeparatorPolicy;
import org.junit.jupiter.api.Assertions;

public final class EdifactValidationSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        EdifactValidationSettings model = BinaryData.fromString(
            "{\"validateCharacterSet\":false,\"checkDuplicateInterchangeControlNumber\":true,\"interchangeControlNumberValidityDays\":230332643,\"checkDuplicateGroupControlNumber\":true,\"checkDuplicateTransactionSetControlNumber\":true,\"validateEDITypes\":true,\"validateXSDTypes\":false,\"allowLeadingAndTrailingSpacesAndZeroes\":true,\"trimLeadingAndTrailingSpacesAndZeroes\":false,\"trailingSeparatorPolicy\":\"Mandatory\"}")
            .toObject(EdifactValidationSettings.class);
        Assertions.assertEquals(false, model.validateCharacterSet());
        Assertions.assertEquals(true, model.checkDuplicateInterchangeControlNumber());
        Assertions.assertEquals(230332643, model.interchangeControlNumberValidityDays());
        Assertions.assertEquals(true, model.checkDuplicateGroupControlNumber());
        Assertions.assertEquals(true, model.checkDuplicateTransactionSetControlNumber());
        Assertions.assertEquals(true, model.validateEdiTypes());
        Assertions.assertEquals(false, model.validateXsdTypes());
        Assertions.assertEquals(true, model.allowLeadingAndTrailingSpacesAndZeroes());
        Assertions.assertEquals(false, model.trimLeadingAndTrailingSpacesAndZeroes());
        Assertions.assertEquals(TrailingSeparatorPolicy.MANDATORY, model.trailingSeparatorPolicy());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        EdifactValidationSettings model = new EdifactValidationSettings().withValidateCharacterSet(false)
            .withCheckDuplicateInterchangeControlNumber(true)
            .withInterchangeControlNumberValidityDays(230332643)
            .withCheckDuplicateGroupControlNumber(true)
            .withCheckDuplicateTransactionSetControlNumber(true)
            .withValidateEdiTypes(true)
            .withValidateXsdTypes(false)
            .withAllowLeadingAndTrailingSpacesAndZeroes(true)
            .withTrimLeadingAndTrailingSpacesAndZeroes(false)
            .withTrailingSeparatorPolicy(TrailingSeparatorPolicy.MANDATORY);
        model = BinaryData.fromObject(model).toObject(EdifactValidationSettings.class);
        Assertions.assertEquals(false, model.validateCharacterSet());
        Assertions.assertEquals(true, model.checkDuplicateInterchangeControlNumber());
        Assertions.assertEquals(230332643, model.interchangeControlNumberValidityDays());
        Assertions.assertEquals(true, model.checkDuplicateGroupControlNumber());
        Assertions.assertEquals(true, model.checkDuplicateTransactionSetControlNumber());
        Assertions.assertEquals(true, model.validateEdiTypes());
        Assertions.assertEquals(false, model.validateXsdTypes());
        Assertions.assertEquals(true, model.allowLeadingAndTrailingSpacesAndZeroes());
        Assertions.assertEquals(false, model.trimLeadingAndTrailingSpacesAndZeroes());
        Assertions.assertEquals(TrailingSeparatorPolicy.MANDATORY, model.trailingSeparatorPolicy());
    }
}
