// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.logic.fluent.models.WorkflowTriggerCallbackUrlInner;
import com.azure.resourcemanager.logic.models.WorkflowTriggerListCallbackUrlQueries;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkflowTriggerCallbackUrlInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkflowTriggerCallbackUrlInner model = BinaryData.fromString(
            "{\"value\":\"p\",\"method\":\"jyofdxluusdtto\",\"basePath\":\"aboekqv\",\"relativePath\":\"lns\",\"relativePathParameters\":[\"xwyjsflhhc\",\"aln\",\"ixisxyawjoy\",\"qcslyjpkiid\"],\"queries\":{\"api-version\":\"xznelixhnrztf\",\"sp\":\"hb\",\"sv\":\"knalaulppg\",\"sig\":\"tpnapnyiropuhpig\",\"se\":\"gylgqgitxmedjvcs\"}}")
            .toObject(WorkflowTriggerCallbackUrlInner.class);
        Assertions.assertEquals("xwyjsflhhc", model.relativePathParameters().get(0));
        Assertions.assertEquals("xznelixhnrztf", model.queries().apiVersion());
        Assertions.assertEquals("hb", model.queries().sp());
        Assertions.assertEquals("knalaulppg", model.queries().sv());
        Assertions.assertEquals("tpnapnyiropuhpig", model.queries().sig());
        Assertions.assertEquals("gylgqgitxmedjvcs", model.queries().se());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkflowTriggerCallbackUrlInner model = new WorkflowTriggerCallbackUrlInner()
            .withRelativePathParameters(Arrays.asList("xwyjsflhhc", "aln", "ixisxyawjoy", "qcslyjpkiid"))
            .withQueries(new WorkflowTriggerListCallbackUrlQueries().withApiVersion("xznelixhnrztf")
                .withSp("hb")
                .withSv("knalaulppg")
                .withSig("tpnapnyiropuhpig")
                .withSe("gylgqgitxmedjvcs"));
        model = BinaryData.fromObject(model).toObject(WorkflowTriggerCallbackUrlInner.class);
        Assertions.assertEquals("xwyjsflhhc", model.relativePathParameters().get(0));
        Assertions.assertEquals("xznelixhnrztf", model.queries().apiVersion());
        Assertions.assertEquals("hb", model.queries().sp());
        Assertions.assertEquals("knalaulppg", model.queries().sv());
        Assertions.assertEquals("tpnapnyiropuhpig", model.queries().sig());
        Assertions.assertEquals("gylgqgitxmedjvcs", model.queries().se());
    }
}
