// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.logic.fluent.models.IntegrationServiceEnvironmentSkuDefinitionInner;
import com.azure.resourcemanager.logic.models.IntegrationServiceEnvironmentSkuCapacity;
import com.azure.resourcemanager.logic.models.IntegrationServiceEnvironmentSkuDefinitionSku;
import com.azure.resourcemanager.logic.models.IntegrationServiceEnvironmentSkuName;
import com.azure.resourcemanager.logic.models.IntegrationServiceEnvironmentSkuScaleType;
import org.junit.jupiter.api.Assertions;

public final class IntegrationServiceEnvironmentSkuDefinitionInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IntegrationServiceEnvironmentSkuDefinitionInner model = BinaryData.fromString(
            "{\"resourceType\":\"gmditgueiookjbs\",\"sku\":{\"name\":\"NotSpecified\",\"tier\":\"tpdelqa\"},\"capacity\":{\"minimum\":18436259,\"maximum\":1596109972,\"default\":148028664,\"scaleType\":\"None\"}}")
            .toObject(IntegrationServiceEnvironmentSkuDefinitionInner.class);
        Assertions.assertEquals("gmditgueiookjbs", model.resourceType());
        Assertions.assertEquals(IntegrationServiceEnvironmentSkuName.NOT_SPECIFIED, model.sku().name());
        Assertions.assertEquals("tpdelqa", model.sku().tier());
        Assertions.assertEquals(18436259, model.capacity().minimum());
        Assertions.assertEquals(1596109972, model.capacity().maximum());
        Assertions.assertEquals(148028664, model.capacity().defaultProperty());
        Assertions.assertEquals(IntegrationServiceEnvironmentSkuScaleType.NONE, model.capacity().scaleType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IntegrationServiceEnvironmentSkuDefinitionInner model
            = new IntegrationServiceEnvironmentSkuDefinitionInner().withResourceType("gmditgueiookjbs")
                .withSku(new IntegrationServiceEnvironmentSkuDefinitionSku()
                    .withName(IntegrationServiceEnvironmentSkuName.NOT_SPECIFIED)
                    .withTier("tpdelqa"))
                .withCapacity(new IntegrationServiceEnvironmentSkuCapacity().withMinimum(18436259)
                    .withMaximum(1596109972)
                    .withDefaultProperty(148028664)
                    .withScaleType(IntegrationServiceEnvironmentSkuScaleType.NONE));
        model = BinaryData.fromObject(model).toObject(IntegrationServiceEnvironmentSkuDefinitionInner.class);
        Assertions.assertEquals("gmditgueiookjbs", model.resourceType());
        Assertions.assertEquals(IntegrationServiceEnvironmentSkuName.NOT_SPECIFIED, model.sku().name());
        Assertions.assertEquals("tpdelqa", model.sku().tier());
        Assertions.assertEquals(18436259, model.capacity().minimum());
        Assertions.assertEquals(1596109972, model.capacity().maximum());
        Assertions.assertEquals(148028664, model.capacity().defaultProperty());
        Assertions.assertEquals(IntegrationServiceEnvironmentSkuScaleType.NONE, model.capacity().scaleType());
    }
}
