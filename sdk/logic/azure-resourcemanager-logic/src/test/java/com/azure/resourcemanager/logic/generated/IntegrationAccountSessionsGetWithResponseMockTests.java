// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.logic.LogicManager;
import com.azure.resourcemanager.logic.models.IntegrationAccountSession;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class IntegrationAccountSessionsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"createdTime\":\"2021-10-18T22:34:24Z\",\"changedTime\":\"2021-11-19T22:23:30Z\",\"content\":\"datamueemexar\"},\"location\":\"xaawentkokndjwpx\",\"tags\":{\"bclgrkfwofwe\":\"jqfwxicbvwnnvt\"},\"id\":\"yowzptxpe\",\"name\":\"dbmuzpdjthpsyc\",\"type\":\"sxuhi\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        LogicManager manager = LogicManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        IntegrationAccountSession response = manager.integrationAccountSessions()
            .getWithResponse("dgbguaxilcdbud", "wlpgpxyrfksl", "pladqcmkdhgpzqib", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("xaawentkokndjwpx", response.location());
        Assertions.assertEquals("jqfwxicbvwnnvt", response.tags().get("bclgrkfwofwe"));
    }
}
