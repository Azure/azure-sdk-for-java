// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.logic.models.AS2ValidationSettings;
import com.azure.resourcemanager.logic.models.EncryptionAlgorithm;
import com.azure.resourcemanager.logic.models.SigningAlgorithm;
import org.junit.jupiter.api.Assertions;

public final class AS2ValidationSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AS2ValidationSettings model = BinaryData.fromString(
            "{\"overrideMessageProperties\":false,\"encryptMessage\":true,\"signMessage\":false,\"compressMessage\":false,\"checkDuplicateMessage\":true,\"interchangeDuplicatesValidityDays\":539540216,\"checkCertificateRevocationListOnSend\":false,\"checkCertificateRevocationListOnReceive\":false,\"encryptionAlgorithm\":\"NotSpecified\",\"signingAlgorithm\":\"NotSpecified\"}")
            .toObject(AS2ValidationSettings.class);
        Assertions.assertEquals(false, model.overrideMessageProperties());
        Assertions.assertEquals(true, model.encryptMessage());
        Assertions.assertEquals(false, model.signMessage());
        Assertions.assertEquals(false, model.compressMessage());
        Assertions.assertEquals(true, model.checkDuplicateMessage());
        Assertions.assertEquals(539540216, model.interchangeDuplicatesValidityDays());
        Assertions.assertEquals(false, model.checkCertificateRevocationListOnSend());
        Assertions.assertEquals(false, model.checkCertificateRevocationListOnReceive());
        Assertions.assertEquals(EncryptionAlgorithm.NOT_SPECIFIED, model.encryptionAlgorithm());
        Assertions.assertEquals(SigningAlgorithm.NOT_SPECIFIED, model.signingAlgorithm());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AS2ValidationSettings model = new AS2ValidationSettings().withOverrideMessageProperties(false)
            .withEncryptMessage(true)
            .withSignMessage(false)
            .withCompressMessage(false)
            .withCheckDuplicateMessage(true)
            .withInterchangeDuplicatesValidityDays(539540216)
            .withCheckCertificateRevocationListOnSend(false)
            .withCheckCertificateRevocationListOnReceive(false)
            .withEncryptionAlgorithm(EncryptionAlgorithm.NOT_SPECIFIED)
            .withSigningAlgorithm(SigningAlgorithm.NOT_SPECIFIED);
        model = BinaryData.fromObject(model).toObject(AS2ValidationSettings.class);
        Assertions.assertEquals(false, model.overrideMessageProperties());
        Assertions.assertEquals(true, model.encryptMessage());
        Assertions.assertEquals(false, model.signMessage());
        Assertions.assertEquals(false, model.compressMessage());
        Assertions.assertEquals(true, model.checkDuplicateMessage());
        Assertions.assertEquals(539540216, model.interchangeDuplicatesValidityDays());
        Assertions.assertEquals(false, model.checkCertificateRevocationListOnSend());
        Assertions.assertEquals(false, model.checkCertificateRevocationListOnReceive());
        Assertions.assertEquals(EncryptionAlgorithm.NOT_SPECIFIED, model.encryptionAlgorithm());
        Assertions.assertEquals(SigningAlgorithm.NOT_SPECIFIED, model.signingAlgorithm());
    }
}
