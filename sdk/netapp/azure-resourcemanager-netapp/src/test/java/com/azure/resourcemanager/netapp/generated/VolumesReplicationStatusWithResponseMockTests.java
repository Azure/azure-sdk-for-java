// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.netapp.NetAppFilesManager;
import com.azure.resourcemanager.netapp.models.MirrorState;
import com.azure.resourcemanager.netapp.models.RelationshipStatus;
import com.azure.resourcemanager.netapp.models.ReplicationStatus;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class VolumesReplicationStatusWithResponseMockTests {
    @Test
    public void testReplicationStatusWithResponse() throws Exception {
        String responseStr
            = "{\"healthy\":true,\"relationshipStatus\":\"Idle\",\"mirrorState\":\"Mirrored\",\"totalProgress\":\"zsdbccxjmon\",\"errorMessage\":\"gnwncypuuwwlt\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NetAppFilesManager manager = NetAppFilesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ReplicationStatus response = manager.volumes()
            .replicationStatusWithResponse("reljeamur", "zmlovuanash", "xlpm", "erbdk",
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(true, response.healthy());
        Assertions.assertEquals(RelationshipStatus.IDLE, response.relationshipStatus());
        Assertions.assertEquals(MirrorState.MIRRORED, response.mirrorState());
        Assertions.assertEquals("zsdbccxjmon", response.totalProgress());
        Assertions.assertEquals("gnwncypuuwwlt", response.errorMessage());
    }
}
