// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.fluent.models.BucketInner;
import com.azure.resourcemanager.netapp.models.BucketList;
import com.azure.resourcemanager.netapp.models.BucketPermissions;
import com.azure.resourcemanager.netapp.models.BucketServerProperties;
import com.azure.resourcemanager.netapp.models.CifsUser;
import com.azure.resourcemanager.netapp.models.FileSystemUser;
import com.azure.resourcemanager.netapp.models.NfsUser;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class BucketListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BucketList model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"path\":\"vwrdnhfukuvsj\",\"fileSystemUser\":{\"nfsUser\":{\"userId\":4555995825543462077,\"groupId\":5004966782756902203},\"cifsUser\":{\"username\":\"qypfcv\"}},\"provisioningState\":\"Accepted\",\"status\":\"NoCredentialsSet\",\"server\":{\"fqdn\":\"bm\",\"certificateCommonName\":\"jbabwidf\",\"certificateExpiryDate\":\"2021-05-31T20:33:23Z\",\"ipAddress\":\"puunnoxyhkxgqd\",\"certificateObject\":\"i\"},\"permissions\":\"ReadOnly\"},\"id\":\"oqcaaewdaomdj\",\"name\":\"l\",\"type\":\"jxxkzbrmsgei\"},{\"properties\":{\"path\":\"ykzkdncjdxo\",\"fileSystemUser\":{\"nfsUser\":{\"userId\":5953743800911269792,\"groupId\":63941224599650233},\"cifsUser\":{\"username\":\"z\"}},\"provisioningState\":\"Moving\",\"status\":\"Active\",\"server\":{\"fqdn\":\"tqxepn\",\"certificateCommonName\":\"b\",\"certificateExpiryDate\":\"2021-09-26T03:21:12Z\",\"ipAddress\":\"lyjt\",\"certificateObject\":\"of\"},\"permissions\":\"ReadWrite\"},\"id\":\"fcibyfmowuxrkj\",\"name\":\"vdwxfzwi\",\"type\":\"vwzjbhyz\"}],\"nextLink\":\"jrkambtrnegvmnv\"}")
            .toObject(BucketList.class);
        Assertions.assertEquals("vwrdnhfukuvsj", model.value().get(0).path());
        Assertions.assertEquals(4555995825543462077L, model.value().get(0).fileSystemUser().nfsUser().userId());
        Assertions.assertEquals(5004966782756902203L, model.value().get(0).fileSystemUser().nfsUser().groupId());
        Assertions.assertEquals("qypfcv", model.value().get(0).fileSystemUser().cifsUser().username());
        Assertions.assertEquals("bm", model.value().get(0).server().fqdn());
        Assertions.assertEquals("i", model.value().get(0).server().certificateObject());
        Assertions.assertEquals(BucketPermissions.READ_ONLY, model.value().get(0).permissions());
        Assertions.assertEquals("jrkambtrnegvmnv", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BucketList model
            = new BucketList()
                .withValue(
                    Arrays
                        .asList(
                            new BucketInner().withPath("vwrdnhfukuvsj")
                                .withFileSystemUser(new FileSystemUser()
                                    .withNfsUser(new NfsUser().withUserId(4555995825543462077L)
                                        .withGroupId(5004966782756902203L))
                                    .withCifsUser(new CifsUser().withUsername("qypfcv")))
                                .withServer(new BucketServerProperties().withFqdn("bm").withCertificateObject("i"))
                                .withPermissions(BucketPermissions.READ_ONLY),
                            new BucketInner().withPath("ykzkdncjdxo")
                                .withFileSystemUser(new FileSystemUser()
                                    .withNfsUser(
                                        new NfsUser().withUserId(5953743800911269792L).withGroupId(63941224599650233L))
                                    .withCifsUser(new CifsUser().withUsername("z")))
                                .withServer(new BucketServerProperties().withFqdn("tqxepn").withCertificateObject("of"))
                                .withPermissions(BucketPermissions.READ_WRITE)))
                .withNextLink("jrkambtrnegvmnv");
        model = BinaryData.fromObject(model).toObject(BucketList.class);
        Assertions.assertEquals("vwrdnhfukuvsj", model.value().get(0).path());
        Assertions.assertEquals(4555995825543462077L, model.value().get(0).fileSystemUser().nfsUser().userId());
        Assertions.assertEquals(5004966782756902203L, model.value().get(0).fileSystemUser().nfsUser().groupId());
        Assertions.assertEquals("qypfcv", model.value().get(0).fileSystemUser().cifsUser().username());
        Assertions.assertEquals("bm", model.value().get(0).server().fqdn());
        Assertions.assertEquals("i", model.value().get(0).server().certificateObject());
        Assertions.assertEquals(BucketPermissions.READ_ONLY, model.value().get(0).permissions());
        Assertions.assertEquals("jrkambtrnegvmnv", model.nextLink());
    }
}
