// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.netapp.NetAppFilesManager;
import com.azure.resourcemanager.netapp.models.MetricAggregationType;
import com.azure.resourcemanager.netapp.models.Operation;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class OperationsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"name\":\"naeo\",\"display\":{\"provider\":\"vhmgorffukis\",\"resource\":\"w\",\"operation\":\"hwplefaxvx\",\"description\":\"cbtgnhnz\"},\"origin\":\"qxtjjfzqlqhyca\",\"properties\":{\"serviceSpecification\":{\"metricSpecifications\":[{\"name\":\"dbeesmie\",\"displayName\":\"lrariaawiu\",\"displayDescription\":\"ydwqfbylyrf\",\"unit\":\"agt\",\"supportedAggregationTypes\":[\"Average\",\"Average\",\"Average\",\"Average\"],\"supportedTimeGrainTypes\":[\"fnzjvusfzldm\",\"zuxylfsbtkadpyso\"],\"internalMetricName\":\"btgkbugrjqctoj\",\"enableRegionalMdmAccount\":true,\"sourceMdmAccount\":\"of\",\"sourceMdmNamespace\":\"ypefojyqdhcupl\",\"dimensions\":[{},{},{}],\"aggregationType\":\"wkhihihlhzdsqt\",\"fillGapWithZero\":false,\"category\":\"gnowcjhfgmveca\",\"resourceIdDimensionNameOverride\":\"xmwoteyowcluqo\",\"isInternal\":false},{\"name\":\"vgqouwifzmpj\",\"displayName\":\"ivqikfxcvhr\",\"displayDescription\":\"phuagrttikteusq\",\"unit\":\"kvyklxubyjaffmm\",\"supportedAggregationTypes\":[\"Average\",\"Average\",\"Average\",\"Average\"],\"supportedTimeGrainTypes\":[\"gqibrtalmetttw\"],\"internalMetricName\":\"slqxi\",\"enableRegionalMdmAccount\":true,\"sourceMdmAccount\":\"ooizqseyp\",\"sourceMdmNamespace\":\"utcxapzhy\",\"dimensions\":[{},{}],\"aggregationType\":\"o\",\"fillGapWithZero\":false,\"category\":\"oxslh\",\"resourceIdDimensionNameOverride\":\"hlabrq\",\"isInternal\":true},{\"name\":\"jcjbt\",\"displayName\":\"aehvvibrxjjstoq\",\"displayDescription\":\"it\",\"unit\":\"xztmo\",\"supportedAggregationTypes\":[\"Average\"],\"supportedTimeGrainTypes\":[\"idgfc\",\"qmpimaqxzhem\"],\"internalMetricName\":\"h\",\"enableRegionalMdmAccount\":false,\"sourceMdmAccount\":\"swtwkozzwc\",\"sourceMdmNamespace\":\"kb\",\"dimensions\":[{},{},{},{}],\"aggregationType\":\"ajnjwltlwtjj\",\"fillGapWithZero\":true,\"category\":\"alhsnvkc\",\"resourceIdDimensionNameOverride\":\"xzrpo\",\"isInternal\":true}],\"logSpecifications\":[{\"name\":\"iaaomylweazul\",\"displayName\":\"ethwwnpjhlfz\"},{\"name\":\"pchwa\",\"displayName\":\"bousn\"},{\"name\":\"pgfewetwlyx\",\"displayName\":\"cxy\"}]}}}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NetAppFilesManager manager = NetAppFilesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Operation> response = manager.operations().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("naeo", response.iterator().next().name());
        Assertions.assertEquals("vhmgorffukis", response.iterator().next().display().provider());
        Assertions.assertEquals("w", response.iterator().next().display().resource());
        Assertions.assertEquals("hwplefaxvx", response.iterator().next().display().operation());
        Assertions.assertEquals("cbtgnhnz", response.iterator().next().display().description());
        Assertions.assertEquals("qxtjjfzqlqhyca", response.iterator().next().origin());
        Assertions.assertEquals("dbeesmie",
            response.iterator().next().serviceSpecification().metricSpecifications().get(0).name());
        Assertions.assertEquals("lrariaawiu",
            response.iterator().next().serviceSpecification().metricSpecifications().get(0).displayName());
        Assertions.assertEquals("ydwqfbylyrf",
            response.iterator().next().serviceSpecification().metricSpecifications().get(0).displayDescription());
        Assertions.assertEquals("agt",
            response.iterator().next().serviceSpecification().metricSpecifications().get(0).unit());
        Assertions.assertEquals(MetricAggregationType.AVERAGE,
            response.iterator()
                .next()
                .serviceSpecification()
                .metricSpecifications()
                .get(0)
                .supportedAggregationTypes()
                .get(0));
        Assertions.assertEquals("fnzjvusfzldm",
            response.iterator()
                .next()
                .serviceSpecification()
                .metricSpecifications()
                .get(0)
                .supportedTimeGrainTypes()
                .get(0));
        Assertions.assertEquals("btgkbugrjqctoj",
            response.iterator().next().serviceSpecification().metricSpecifications().get(0).internalMetricName());
        Assertions.assertEquals(true,
            response.iterator().next().serviceSpecification().metricSpecifications().get(0).enableRegionalMdmAccount());
        Assertions.assertEquals("of",
            response.iterator().next().serviceSpecification().metricSpecifications().get(0).sourceMdmAccount());
        Assertions.assertEquals("ypefojyqdhcupl",
            response.iterator().next().serviceSpecification().metricSpecifications().get(0).sourceMdmNamespace());
        Assertions.assertEquals("wkhihihlhzdsqt",
            response.iterator().next().serviceSpecification().metricSpecifications().get(0).aggregationType());
        Assertions.assertEquals(false,
            response.iterator().next().serviceSpecification().metricSpecifications().get(0).fillGapWithZero());
        Assertions.assertEquals("gnowcjhfgmveca",
            response.iterator().next().serviceSpecification().metricSpecifications().get(0).category());
        Assertions.assertEquals("xmwoteyowcluqo",
            response.iterator()
                .next()
                .serviceSpecification()
                .metricSpecifications()
                .get(0)
                .resourceIdDimensionNameOverride());
        Assertions.assertEquals(false,
            response.iterator().next().serviceSpecification().metricSpecifications().get(0).isInternal());
        Assertions.assertEquals("iaaomylweazul",
            response.iterator().next().serviceSpecification().logSpecifications().get(0).name());
        Assertions.assertEquals("ethwwnpjhlfz",
            response.iterator().next().serviceSpecification().logSpecifications().get(0).displayName());
    }
}
