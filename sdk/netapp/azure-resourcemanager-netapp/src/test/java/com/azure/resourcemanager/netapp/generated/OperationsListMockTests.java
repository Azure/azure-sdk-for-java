// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.netapp.NetAppFilesManager;
import com.azure.resourcemanager.netapp.models.MetricAggregationType;
import com.azure.resourcemanager.netapp.models.Operation;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class OperationsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"name\":\"ywdxsmic\",\"display\":{\"provider\":\"wfscjfn\",\"resource\":\"szqujizdvoq\",\"operation\":\"ibyowbblgyavutp\",\"description\":\"joxoism\"},\"origin\":\"sbpimlq\",\"properties\":{\"serviceSpecification\":{\"metricSpecifications\":[{\"name\":\"gxxlxsffgcvizq\",\"displayName\":\"wlvwlyoupf\",\"displayDescription\":\"bkjubdyhgkfmins\",\"unit\":\"wzf\",\"supportedAggregationTypes\":[\"Average\",\"Average\",\"Average\"],\"supportedTimeGrainTypes\":[\"ahbqactxtgzuk\"],\"internalMetricName\":\"tmmqtgqqqxhrn\",\"enableRegionalMdmAccount\":true,\"sourceMdmAccount\":\"pjui\",\"sourceMdmNamespace\":\"vokqdzfv\",\"dimensions\":[{},{},{},{}],\"aggregationType\":\"jlfrq\",\"fillGapWithZero\":false,\"category\":\"jlkatnwxy\",\"resourceIdDimensionNameOverride\":\"pidkqqfkuvscxkdm\",\"isInternal\":true},{\"name\":\"vibrxkpmloazuruo\",\"displayName\":\"goorbteo\",\"displayDescription\":\"fhjxakvvjgs\",\"unit\":\"r\",\"supportedAggregationTypes\":[\"Average\",\"Average\",\"Average\",\"Average\"],\"supportedTimeGrainTypes\":[\"gkxnyedabg\",\"vudtjuewbcihx\"],\"internalMetricName\":\"whcjyxcc\",\"enableRegionalMdmAccount\":true,\"sourceMdmAccount\":\"ayakkudzpx\",\"sourceMdmNamespace\":\"jplmagstcy\",\"dimensions\":[{},{},{},{}],\"aggregationType\":\"kyrk\",\"fillGapWithZero\":false,\"category\":\"iogsjkmnwq\",\"resourceIdDimensionNameOverride\":\"obaiyhddviaceg\",\"isInternal\":false},{\"name\":\"tfpmvmemfnczdw\",\"displayName\":\"b\",\"displayDescription\":\"xlllchp\",\"unit\":\"bzevwrd\",\"supportedAggregationTypes\":[\"Average\",\"Average\",\"Average\",\"Average\"],\"supportedTimeGrainTypes\":[\"cswsmystul\",\"qypfcv\"],\"internalMetricName\":\"rchpqbmfpjbabwid\",\"enableRegionalMdmAccount\":true,\"sourceMdmAccount\":\"spuunnoxyhkxgq\",\"sourceMdmNamespace\":\"rihpfhoq\",\"dimensions\":[{}],\"aggregationType\":\"wdaomdjvlpjxxkzb\",\"fillGapWithZero\":false,\"category\":\"eivsiykzkdnc\",\"resourceIdDimensionNameOverride\":\"xonbzoggculapz\",\"isInternal\":true},{\"name\":\"gogtqxepnylbf\",\"displayName\":\"jlyjtlvofq\",\"displayDescription\":\"vfcibyfmowux\",\"unit\":\"jpvd\",\"supportedAggregationTypes\":[\"Average\",\"Average\",\"Average\",\"Average\"],\"supportedTimeGrainTypes\":[\"zjb\",\"yzsxjrkambtrne\"],\"internalMetricName\":\"mnvuqe\",\"enableRegionalMdmAccount\":false,\"sourceMdmAccount\":\"spastjbkkdmf\",\"sourceMdmNamespace\":\"est\",\"dimensions\":[{}],\"aggregationType\":\"rriloz\",\"fillGapWithZero\":true,\"category\":\"wchpxlk\",\"resourceIdDimensionNameOverride\":\"kuziycsle\",\"isInternal\":false}],\"logSpecifications\":[{\"name\":\"cktyh\",\"displayName\":\"qedcgzulwm\"},{\"name\":\"qzz\",\"displayName\":\"jvpglydzgk\"}]}}}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NetAppFilesManager manager = NetAppFilesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Operation> response = manager.operations().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("ywdxsmic", response.iterator().next().name());
        Assertions.assertEquals("wfscjfn", response.iterator().next().display().provider());
        Assertions.assertEquals("szqujizdvoq", response.iterator().next().display().resource());
        Assertions.assertEquals("ibyowbblgyavutp", response.iterator().next().display().operation());
        Assertions.assertEquals("joxoism", response.iterator().next().display().description());
        Assertions.assertEquals("sbpimlq", response.iterator().next().origin());
        Assertions.assertEquals("gxxlxsffgcvizq",
            response.iterator().next().serviceSpecification().metricSpecifications().get(0).name());
        Assertions.assertEquals("wlvwlyoupf",
            response.iterator().next().serviceSpecification().metricSpecifications().get(0).displayName());
        Assertions.assertEquals("bkjubdyhgkfmins",
            response.iterator().next().serviceSpecification().metricSpecifications().get(0).displayDescription());
        Assertions.assertEquals("wzf",
            response.iterator().next().serviceSpecification().metricSpecifications().get(0).unit());
        Assertions.assertEquals(MetricAggregationType.AVERAGE,
            response.iterator()
                .next()
                .serviceSpecification()
                .metricSpecifications()
                .get(0)
                .supportedAggregationTypes()
                .get(0));
        Assertions.assertEquals("ahbqactxtgzuk",
            response.iterator()
                .next()
                .serviceSpecification()
                .metricSpecifications()
                .get(0)
                .supportedTimeGrainTypes()
                .get(0));
        Assertions.assertEquals("tmmqtgqqqxhrn",
            response.iterator().next().serviceSpecification().metricSpecifications().get(0).internalMetricName());
        Assertions.assertEquals(true,
            response.iterator().next().serviceSpecification().metricSpecifications().get(0).enableRegionalMdmAccount());
        Assertions.assertEquals("pjui",
            response.iterator().next().serviceSpecification().metricSpecifications().get(0).sourceMdmAccount());
        Assertions.assertEquals("vokqdzfv",
            response.iterator().next().serviceSpecification().metricSpecifications().get(0).sourceMdmNamespace());
        Assertions.assertEquals("jlfrq",
            response.iterator().next().serviceSpecification().metricSpecifications().get(0).aggregationType());
        Assertions.assertEquals(false,
            response.iterator().next().serviceSpecification().metricSpecifications().get(0).fillGapWithZero());
        Assertions.assertEquals("jlkatnwxy",
            response.iterator().next().serviceSpecification().metricSpecifications().get(0).category());
        Assertions.assertEquals("pidkqqfkuvscxkdm",
            response.iterator()
                .next()
                .serviceSpecification()
                .metricSpecifications()
                .get(0)
                .resourceIdDimensionNameOverride());
        Assertions.assertEquals(true,
            response.iterator().next().serviceSpecification().metricSpecifications().get(0).isInternal());
        Assertions.assertEquals("cktyh",
            response.iterator().next().serviceSpecification().logSpecifications().get(0).name());
        Assertions.assertEquals("qedcgzulwm",
            response.iterator().next().serviceSpecification().logSpecifications().get(0).displayName());
    }
}
