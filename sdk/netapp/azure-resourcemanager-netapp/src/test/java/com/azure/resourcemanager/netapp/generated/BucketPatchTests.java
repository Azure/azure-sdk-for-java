// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.models.BucketPatch;
import com.azure.resourcemanager.netapp.models.BucketPatchPermissions;
import com.azure.resourcemanager.netapp.models.BucketServerPatchProperties;
import com.azure.resourcemanager.netapp.models.CifsUser;
import com.azure.resourcemanager.netapp.models.FileSystemUser;
import com.azure.resourcemanager.netapp.models.NfsUser;
import org.junit.jupiter.api.Assertions;

public final class BucketPatchTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BucketPatch model = BinaryData.fromString(
            "{\"properties\":{\"path\":\"yik\",\"fileSystemUser\":{\"nfsUser\":{\"userId\":4524825461883558353,\"groupId\":3474591298556028282},\"cifsUser\":{\"username\":\"mncsttijfybvp\"}},\"provisioningState\":\"Provisioning\",\"server\":{\"fqdn\":\"gsgbdhuzq\",\"certificateObject\":\"j\"},\"permissions\":\"ReadWrite\"},\"id\":\"nscliqhzvhxnk\",\"name\":\"mtk\",\"type\":\"bo\"}")
            .toObject(BucketPatch.class);
        Assertions.assertEquals("yik", model.path());
        Assertions.assertEquals(4524825461883558353L, model.fileSystemUser().nfsUser().userId());
        Assertions.assertEquals(3474591298556028282L, model.fileSystemUser().nfsUser().groupId());
        Assertions.assertEquals("mncsttijfybvp", model.fileSystemUser().cifsUser().username());
        Assertions.assertEquals("gsgbdhuzq", model.server().fqdn());
        Assertions.assertEquals("j", model.server().certificateObject());
        Assertions.assertEquals(BucketPatchPermissions.READ_WRITE, model.permissions());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BucketPatch model = new BucketPatch().withPath("yik")
            .withFileSystemUser(new FileSystemUser()
                .withNfsUser(new NfsUser().withUserId(4524825461883558353L).withGroupId(3474591298556028282L))
                .withCifsUser(new CifsUser().withUsername("mncsttijfybvp")))
            .withServer(new BucketServerPatchProperties().withFqdn("gsgbdhuzq").withCertificateObject("j"))
            .withPermissions(BucketPatchPermissions.READ_WRITE);
        model = BinaryData.fromObject(model).toObject(BucketPatch.class);
        Assertions.assertEquals("yik", model.path());
        Assertions.assertEquals(4524825461883558353L, model.fileSystemUser().nfsUser().userId());
        Assertions.assertEquals(3474591298556028282L, model.fileSystemUser().nfsUser().groupId());
        Assertions.assertEquals("mncsttijfybvp", model.fileSystemUser().cifsUser().username());
        Assertions.assertEquals("gsgbdhuzq", model.server().fqdn());
        Assertions.assertEquals("j", model.server().certificateObject());
        Assertions.assertEquals(BucketPatchPermissions.READ_WRITE, model.permissions());
    }
}
