// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.netapp.NetAppFilesManager;
import com.azure.resourcemanager.netapp.models.Snapshot;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SnapshotsUpdateMockTests {
    @Test
    public void testUpdate() throws Exception {
        String responseStr
            = "{\"location\":\"aglkafhon\",\"properties\":{\"snapshotId\":\"jeick\",\"created\":\"2021-09-30T10:47:03Z\",\"provisioningState\":\"Succeeded\"},\"id\":\"mxelnwcltyjed\",\"name\":\"xxmlfmkqscazua\",\"type\":\"xtzx\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NetAppFilesManager manager = NetAppFilesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Snapshot response = manager.snapshots()
            .update("xwaabzmifrygznmm", "xrizkzobgop", "lhslnelxieixyn", "lxecwcrojphslh", "awjutifd",
                "datafmvigorqjbttzh", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("aglkafhon", response.location());
    }
}
