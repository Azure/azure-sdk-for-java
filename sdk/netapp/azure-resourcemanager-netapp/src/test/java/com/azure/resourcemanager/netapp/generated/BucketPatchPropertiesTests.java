// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.fluent.models.BucketPatchProperties;
import com.azure.resourcemanager.netapp.models.BucketPatchPermissions;
import com.azure.resourcemanager.netapp.models.BucketServerPatchProperties;
import com.azure.resourcemanager.netapp.models.CifsUser;
import com.azure.resourcemanager.netapp.models.FileSystemUser;
import com.azure.resourcemanager.netapp.models.NfsUser;
import org.junit.jupiter.api.Assertions;

public final class BucketPatchPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BucketPatchProperties model = BinaryData.fromString(
            "{\"path\":\"pnvdxz\",\"fileSystemUser\":{\"nfsUser\":{\"userId\":5184735928624525939,\"groupId\":107685473629648091},\"cifsUser\":{\"username\":\"qagt\"}},\"provisioningState\":\"Deleting\",\"server\":{\"fqdn\":\"fkqojpy\",\"certificateObject\":\"gtrd\"},\"permissions\":\"ReadOnly\"}")
            .toObject(BucketPatchProperties.class);
        Assertions.assertEquals("pnvdxz", model.path());
        Assertions.assertEquals(5184735928624525939L, model.fileSystemUser().nfsUser().userId());
        Assertions.assertEquals(107685473629648091L, model.fileSystemUser().nfsUser().groupId());
        Assertions.assertEquals("qagt", model.fileSystemUser().cifsUser().username());
        Assertions.assertEquals("fkqojpy", model.server().fqdn());
        Assertions.assertEquals("gtrd", model.server().certificateObject());
        Assertions.assertEquals(BucketPatchPermissions.READ_ONLY, model.permissions());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BucketPatchProperties model = new BucketPatchProperties().withPath("pnvdxz")
            .withFileSystemUser(new FileSystemUser()
                .withNfsUser(new NfsUser().withUserId(5184735928624525939L).withGroupId(107685473629648091L))
                .withCifsUser(new CifsUser().withUsername("qagt")))
            .withServer(new BucketServerPatchProperties().withFqdn("fkqojpy").withCertificateObject("gtrd"))
            .withPermissions(BucketPatchPermissions.READ_ONLY);
        model = BinaryData.fromObject(model).toObject(BucketPatchProperties.class);
        Assertions.assertEquals("pnvdxz", model.path());
        Assertions.assertEquals(5184735928624525939L, model.fileSystemUser().nfsUser().userId());
        Assertions.assertEquals(107685473629648091L, model.fileSystemUser().nfsUser().groupId());
        Assertions.assertEquals("qagt", model.fileSystemUser().cifsUser().username());
        Assertions.assertEquals("fkqojpy", model.server().fqdn());
        Assertions.assertEquals("gtrd", model.server().certificateObject());
        Assertions.assertEquals(BucketPatchPermissions.READ_ONLY, model.permissions());
    }
}
