// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.netapp.NetAppFilesManager;
import com.azure.resourcemanager.netapp.models.Bucket;
import com.azure.resourcemanager.netapp.models.BucketServerProperties;
import com.azure.resourcemanager.netapp.models.CifsUser;
import com.azure.resourcemanager.netapp.models.FileSystemUser;
import com.azure.resourcemanager.netapp.models.NfsUser;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class BucketsCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"path\":\"wsdrnpxqwodif\",\"fileSystemUser\":{\"nfsUser\":{\"userId\":1910314229809424815,\"groupId\":8512701647184661240},\"cifsUser\":{\"username\":\"wibvjogj\"}},\"provisioningState\":\"Succeeded\",\"status\":\"CredentialsExpired\",\"server\":{\"fqdn\":\"oyzbamwineofvf\",\"certificateCommonName\":\"kpoldtvevboc\",\"certificateExpiryDate\":\"2021-03-19T15:36:01Z\",\"ipAddress\":\"jknyu\",\"certificateObject\":\"vt\"}},\"id\":\"pnrupzaamrdi\",\"name\":\"trekidswys\",\"type\":\"br\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NetAppFilesManager manager = NetAppFilesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Bucket response = manager.buckets()
            .define("hulrtywikdmhla")
            .withExistingVolume("euknijduyyes", "ydjfb", "c", "v")
            .withPath("lgbhgauacdi")
            .withFileSystemUser(new FileSystemUser()
                .withNfsUser(new NfsUser().withUserId(340170086144635298L).withGroupId(8950923037770050787L))
                .withCifsUser(new CifsUser().withUsername("gdkfnoz")))
            .withServer(new BucketServerProperties().withFqdn("h").withCertificateObject("ymxbulpzealb"))
            .create();

        Assertions.assertEquals("wsdrnpxqwodif", response.path());
        Assertions.assertEquals(1910314229809424815L, response.fileSystemUser().nfsUser().userId());
        Assertions.assertEquals(8512701647184661240L, response.fileSystemUser().nfsUser().groupId());
        Assertions.assertEquals("wibvjogj", response.fileSystemUser().cifsUser().username());
        Assertions.assertEquals("oyzbamwineofvf", response.server().fqdn());
        Assertions.assertEquals("vt", response.server().certificateObject());
    }
}
