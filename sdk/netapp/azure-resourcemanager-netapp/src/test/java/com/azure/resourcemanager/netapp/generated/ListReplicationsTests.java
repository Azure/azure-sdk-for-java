// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.fluent.models.ReplicationInner;
import com.azure.resourcemanager.netapp.models.EndpointType;
import com.azure.resourcemanager.netapp.models.ListReplications;
import com.azure.resourcemanager.netapp.models.ReplicationSchedule;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ListReplicationsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ListReplications model = BinaryData.fromString(
            "{\"value\":[{\"replicationId\":\"ipqiiobyuqerpq\",\"endpointType\":\"src\",\"replicationSchedule\":\"daily\",\"remoteVolumeResourceId\":\"ciuqgbdb\",\"remoteVolumeRegion\":\"auvfbtkuwhhmhyk\"},{\"replicationId\":\"oxafn\",\"endpointType\":\"src\",\"replicationSchedule\":\"daily\",\"remoteVolumeResourceId\":\"chkoymkcdyh\",\"remoteVolumeRegion\":\"kkpwdreqnovvq\"}]}")
            .toObject(ListReplications.class);
        Assertions.assertEquals(EndpointType.SRC, model.value().get(0).endpointType());
        Assertions.assertEquals(ReplicationSchedule.DAILY, model.value().get(0).replicationSchedule());
        Assertions.assertEquals("ciuqgbdb", model.value().get(0).remoteVolumeResourceId());
        Assertions.assertEquals("auvfbtkuwhhmhyk", model.value().get(0).remoteVolumeRegion());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ListReplications model = new ListReplications().withValue(Arrays.asList(
            new ReplicationInner().withEndpointType(EndpointType.SRC)
                .withReplicationSchedule(ReplicationSchedule.DAILY)
                .withRemoteVolumeResourceId("ciuqgbdb")
                .withRemoteVolumeRegion("auvfbtkuwhhmhyk"),
            new ReplicationInner().withEndpointType(EndpointType.SRC)
                .withReplicationSchedule(ReplicationSchedule.DAILY)
                .withRemoteVolumeResourceId("chkoymkcdyh")
                .withRemoteVolumeRegion("kkpwdreqnovvq")));
        model = BinaryData.fromObject(model).toObject(ListReplications.class);
        Assertions.assertEquals(EndpointType.SRC, model.value().get(0).endpointType());
        Assertions.assertEquals(ReplicationSchedule.DAILY, model.value().get(0).replicationSchedule());
        Assertions.assertEquals("ciuqgbdb", model.value().get(0).remoteVolumeResourceId());
        Assertions.assertEquals("auvfbtkuwhhmhyk", model.value().get(0).remoteVolumeRegion());
    }
}
