// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.fluent.models.RegionInfoResourceInner;
import com.azure.resourcemanager.netapp.models.RegionInfoAvailabilityZoneMappingsItem;
import com.azure.resourcemanager.netapp.models.RegionStorageToNetworkProximity;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RegionInfoResourceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RegionInfoResourceInner model = BinaryData.fromString(
            "{\"properties\":{\"storageToNetworkProximity\":\"T2\",\"availabilityZoneMappings\":[{\"availabilityZone\":\"nkymuctqhjfbebrj\",\"isAvailable\":true},{\"availabilityZone\":\"fuwutttxf\",\"isAvailable\":false},{\"availabilityZone\":\"i\",\"isAvailable\":true}]},\"id\":\"epcyvahfnlj\",\"name\":\"yq\",\"type\":\"j\"}")
            .toObject(RegionInfoResourceInner.class);
        Assertions.assertEquals(RegionStorageToNetworkProximity.T2, model.storageToNetworkProximity());
        Assertions.assertEquals("nkymuctqhjfbebrj", model.availabilityZoneMappings().get(0).availabilityZone());
        Assertions.assertEquals(true, model.availabilityZoneMappings().get(0).isAvailable());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RegionInfoResourceInner model = new RegionInfoResourceInner()
            .withStorageToNetworkProximity(RegionStorageToNetworkProximity.T2)
            .withAvailabilityZoneMappings(Arrays.asList(
                new RegionInfoAvailabilityZoneMappingsItem().withAvailabilityZone("nkymuctqhjfbebrj")
                    .withIsAvailable(true),
                new RegionInfoAvailabilityZoneMappingsItem().withAvailabilityZone("fuwutttxf").withIsAvailable(false),
                new RegionInfoAvailabilityZoneMappingsItem().withAvailabilityZone("i").withIsAvailable(true)));
        model = BinaryData.fromObject(model).toObject(RegionInfoResourceInner.class);
        Assertions.assertEquals(RegionStorageToNetworkProximity.T2, model.storageToNetworkProximity());
        Assertions.assertEquals("nkymuctqhjfbebrj", model.availabilityZoneMappings().get(0).availabilityZone());
        Assertions.assertEquals(true, model.availabilityZoneMappings().get(0).isAvailable());
    }
}
