// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.fluent.models.RegionInfoResourceInner;
import com.azure.resourcemanager.netapp.models.RegionInfoAvailabilityZoneMappingsItem;
import com.azure.resourcemanager.netapp.models.RegionInfosList;
import com.azure.resourcemanager.netapp.models.RegionStorageToNetworkProximity;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RegionInfosListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RegionInfosList model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"storageToNetworkProximity\":\"AcrossT2\",\"availabilityZoneMappings\":[{\"availabilityZone\":\"yjr\",\"isAvailable\":false},{\"availabilityZone\":\"aos\",\"isAvailable\":false},{\"availabilityZone\":\"sonpclhocohs\",\"isAvailable\":false},{\"availabilityZone\":\"leggzfbu\",\"isAvailable\":true}]},\"id\":\"faxkffeii\",\"name\":\"hl\",\"type\":\"m\"},{\"properties\":{\"storageToNetworkProximity\":\"Default\",\"availabilityZoneMappings\":[{\"availabilityZone\":\"mzsb\",\"isAvailable\":true},{\"availabilityZone\":\"gigr\",\"isAvailable\":true},{\"availabilityZone\":\"rvjx\",\"isAvailable\":true},{\"availabilityZone\":\"pydptko\",\"isAvailable\":true}]},\"id\":\"uknvudwti\",\"name\":\"kbldngkpocipa\",\"type\":\"yxoegukgjnp\"}],\"nextLink\":\"cgygev\"}")
            .toObject(RegionInfosList.class);
        Assertions.assertEquals(RegionStorageToNetworkProximity.ACROSS_T2,
            model.value().get(0).storageToNetworkProximity());
        Assertions.assertEquals("yjr", model.value().get(0).availabilityZoneMappings().get(0).availabilityZone());
        Assertions.assertFalse(model.value().get(0).availabilityZoneMappings().get(0).isAvailable());
        Assertions.assertEquals("cgygev", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RegionInfosList model = new RegionInfosList().withValue(Arrays.asList(
            new RegionInfoResourceInner().withStorageToNetworkProximity(RegionStorageToNetworkProximity.ACROSS_T2)
                .withAvailabilityZoneMappings(Arrays.asList(
                    new RegionInfoAvailabilityZoneMappingsItem().withAvailabilityZone("yjr").withIsAvailable(false),
                    new RegionInfoAvailabilityZoneMappingsItem().withAvailabilityZone("aos").withIsAvailable(false),
                    new RegionInfoAvailabilityZoneMappingsItem()
                        .withAvailabilityZone("sonpclhocohs")
                        .withIsAvailable(false),
                    new RegionInfoAvailabilityZoneMappingsItem().withAvailabilityZone("leggzfbu")
                        .withIsAvailable(true))),
            new RegionInfoResourceInner().withStorageToNetworkProximity(RegionStorageToNetworkProximity.DEFAULT)
                .withAvailabilityZoneMappings(Arrays.asList(
                    new RegionInfoAvailabilityZoneMappingsItem().withAvailabilityZone("mzsb").withIsAvailable(true),
                    new RegionInfoAvailabilityZoneMappingsItem().withAvailabilityZone("gigr").withIsAvailable(true),
                    new RegionInfoAvailabilityZoneMappingsItem().withAvailabilityZone("rvjx").withIsAvailable(true),
                    new RegionInfoAvailabilityZoneMappingsItem().withAvailabilityZone("pydptko")
                        .withIsAvailable(true)))))
            .withNextLink("cgygev");
        model = BinaryData.fromObject(model).toObject(RegionInfosList.class);
        Assertions.assertEquals(RegionStorageToNetworkProximity.ACROSS_T2,
            model.value().get(0).storageToNetworkProximity());
        Assertions.assertEquals("yjr", model.value().get(0).availabilityZoneMappings().get(0).availabilityZone());
        Assertions.assertFalse(model.value().get(0).availabilityZoneMappings().get(0).isAvailable());
        Assertions.assertEquals("cgygev", model.nextLink());
    }
}
