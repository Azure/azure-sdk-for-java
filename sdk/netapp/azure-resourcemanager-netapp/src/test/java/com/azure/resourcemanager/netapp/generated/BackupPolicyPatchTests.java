// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.models.BackupPolicyPatch;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class BackupPolicyPatchTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BackupPolicyPatch model = BinaryData.fromString(
            "{\"properties\":{\"backupPolicyId\":\"vfxzsjab\",\"provisioningState\":\"systawfsdjp\",\"dailyBackupsToKeep\":387671304,\"weeklyBackupsToKeep\":250834954,\"monthlyBackupsToKeep\":911357247,\"volumesAssigned\":1795251983,\"enabled\":false,\"volumeBackups\":[{\"volumeName\":\"vncjabudurgk\",\"volumeResourceId\":\"mokzhjjklf\",\"backupsCount\":1604322971,\"policyEnabled\":true}]},\"location\":\"wqlgzrf\",\"tags\":{\"lbjbsyb\":\"yebizikayuh\",\"vm\":\"qwrvtldgmfp\",\"wbdsr\":\"ipaslthaqfxssmwu\",\"owqkdwytisi\":\"zpdrhneu\"},\"id\":\"ircgpikpz\",\"name\":\"mejzanlfzxia\",\"type\":\"rmbzo\"}")
            .toObject(BackupPolicyPatch.class);
        Assertions.assertEquals("wqlgzrf", model.location());
        Assertions.assertEquals("yebizikayuh", model.tags().get("lbjbsyb"));
        Assertions.assertEquals(387671304, model.dailyBackupsToKeep());
        Assertions.assertEquals(250834954, model.weeklyBackupsToKeep());
        Assertions.assertEquals(911357247, model.monthlyBackupsToKeep());
        Assertions.assertFalse(model.enabled());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BackupPolicyPatch model = new BackupPolicyPatch().withLocation("wqlgzrf")
            .withTags(mapOf("lbjbsyb", "yebizikayuh", "vm", "qwrvtldgmfp", "wbdsr", "ipaslthaqfxssmwu", "owqkdwytisi",
                "zpdrhneu"))
            .withDailyBackupsToKeep(387671304)
            .withWeeklyBackupsToKeep(250834954)
            .withMonthlyBackupsToKeep(911357247)
            .withEnabled(false);
        model = BinaryData.fromObject(model).toObject(BackupPolicyPatch.class);
        Assertions.assertEquals("wqlgzrf", model.location());
        Assertions.assertEquals("yebizikayuh", model.tags().get("lbjbsyb"));
        Assertions.assertEquals(387671304, model.dailyBackupsToKeep());
        Assertions.assertEquals(250834954, model.weeklyBackupsToKeep());
        Assertions.assertEquals(911357247, model.monthlyBackupsToKeep());
        Assertions.assertFalse(model.enabled());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
