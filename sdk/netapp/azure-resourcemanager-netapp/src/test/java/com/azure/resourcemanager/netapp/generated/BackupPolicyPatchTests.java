// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.models.BackupPolicyPatch;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class BackupPolicyPatchTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BackupPolicyPatch model = BinaryData.fromString(
            "{\"properties\":{\"backupPolicyId\":\"vfelfktgplcrpwj\",\"provisioningState\":\"znoigbrn\",\"dailyBackupsToKeep\":509080980,\"weeklyBackupsToKeep\":820542416,\"monthlyBackupsToKeep\":1312335759,\"volumesAssigned\":650056423,\"enabled\":false,\"volumeBackups\":[{\"volumeName\":\"oqkag\",\"volumeResourceId\":\"sxtta\",\"backupsCount\":1689987065,\"policyEnabled\":true},{\"volumeName\":\"aa\",\"volumeResourceId\":\"xdtnkdmkqjjlw\",\"backupsCount\":953269937,\"policyEnabled\":true}]},\"location\":\"kpyouaibrebqaay\",\"tags\":{\"ttezlw\":\"ixqtn\",\"pqqmted\":\"ffiakp\",\"wau\":\"tmmjihyeozph\"},\"id\":\"qncygupkvi\",\"name\":\"mdscwxqupev\",\"type\":\"hfstotxhojujbyp\"}")
            .toObject(BackupPolicyPatch.class);
        Assertions.assertEquals("kpyouaibrebqaay", model.location());
        Assertions.assertEquals("ixqtn", model.tags().get("ttezlw"));
        Assertions.assertEquals(509080980, model.dailyBackupsToKeep());
        Assertions.assertEquals(820542416, model.weeklyBackupsToKeep());
        Assertions.assertEquals(1312335759, model.monthlyBackupsToKeep());
        Assertions.assertEquals(false, model.enabled());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BackupPolicyPatch model = new BackupPolicyPatch().withLocation("kpyouaibrebqaay")
            .withTags(mapOf("ttezlw", "ixqtn", "pqqmted", "ffiakp", "wau", "tmmjihyeozph"))
            .withDailyBackupsToKeep(509080980)
            .withWeeklyBackupsToKeep(820542416)
            .withMonthlyBackupsToKeep(1312335759)
            .withEnabled(false);
        model = BinaryData.fromObject(model).toObject(BackupPolicyPatch.class);
        Assertions.assertEquals("kpyouaibrebqaay", model.location());
        Assertions.assertEquals("ixqtn", model.tags().get("ttezlw"));
        Assertions.assertEquals(509080980, model.dailyBackupsToKeep());
        Assertions.assertEquals(820542416, model.weeklyBackupsToKeep());
        Assertions.assertEquals(1312335759, model.monthlyBackupsToKeep());
        Assertions.assertEquals(false, model.enabled());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
