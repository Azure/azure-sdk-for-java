// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.models.BackupPolicyPatch;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class BackupPolicyPatchTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BackupPolicyPatch model = BinaryData.fromString(
            "{\"properties\":{\"backupPolicyId\":\"iakp\",\"provisioningState\":\"qqmtedltmmji\",\"dailyBackupsToKeep\":1482322760,\"weeklyBackupsToKeep\":968506113,\"monthlyBackupsToKeep\":448290186,\"volumesAssigned\":689960691,\"enabled\":true,\"volumeBackups\":[{\"volumeName\":\"c\",\"volumeResourceId\":\"upkvipmdsc\",\"backupsCount\":1651652179,\"policyEnabled\":false},{\"volumeName\":\"vzhfstotxhoj\",\"volumeResourceId\":\"bypel\",\"backupsCount\":912797424,\"policyEnabled\":true},{\"volumeName\":\"xbjxyfwnylrcools\",\"volumeResourceId\":\"p\",\"backupsCount\":156092628,\"policyEnabled\":false}]},\"location\":\"bnujrywvtylbf\",\"tags\":{\"iithtywu\":\"urdoi\",\"knfd\":\"xcbihw\",\"ihxumwctondzj\":\"twjchrdg\"},\"id\":\"uu\",\"name\":\"fdlwg\",\"type\":\"ytsbwtovv\"}")
            .toObject(BackupPolicyPatch.class);
        Assertions.assertEquals("bnujrywvtylbf", model.location());
        Assertions.assertEquals("urdoi", model.tags().get("iithtywu"));
        Assertions.assertEquals(1482322760, model.dailyBackupsToKeep());
        Assertions.assertEquals(968506113, model.weeklyBackupsToKeep());
        Assertions.assertEquals(448290186, model.monthlyBackupsToKeep());
        Assertions.assertEquals(true, model.enabled());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BackupPolicyPatch model = new BackupPolicyPatch().withLocation("bnujrywvtylbf")
            .withTags(mapOf("iithtywu", "urdoi", "knfd", "xcbihw", "ihxumwctondzj", "twjchrdg"))
            .withDailyBackupsToKeep(1482322760)
            .withWeeklyBackupsToKeep(968506113)
            .withMonthlyBackupsToKeep(448290186)
            .withEnabled(true);
        model = BinaryData.fromObject(model).toObject(BackupPolicyPatch.class);
        Assertions.assertEquals("bnujrywvtylbf", model.location());
        Assertions.assertEquals("urdoi", model.tags().get("iithtywu"));
        Assertions.assertEquals(1482322760, model.dailyBackupsToKeep());
        Assertions.assertEquals(968506113, model.weeklyBackupsToKeep());
        Assertions.assertEquals(448290186, model.monthlyBackupsToKeep());
        Assertions.assertEquals(true, model.enabled());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
