// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.models.BackupPolicyPatch;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class BackupPolicyPatchTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BackupPolicyPatch model = BinaryData.fromString(
            "{\"properties\":{\"backupPolicyId\":\"cwaekrrjre\",\"provisioningState\":\"xt\",\"dailyBackupsToKeep\":747215260,\"weeklyBackupsToKeep\":1781492308,\"monthlyBackupsToKeep\":1019109775,\"volumesAssigned\":991905690,\"enabled\":false,\"volumeBackups\":[{\"volumeName\":\"lo\",\"volumeResourceId\":\"qpvuzlmvfelf\",\"backupsCount\":2091794134,\"policyEnabled\":false},{\"volumeName\":\"rpw\",\"volumeResourceId\":\"eznoig\",\"backupsCount\":1629929143,\"policyEnabled\":false}]},\"location\":\"mw\",\"tags\":{\"fhsxttaugz\":\"bsazejjoqka\",\"jlwuenvrkp\":\"nfaazpxdtnkdmkq\",\"ibreb\":\"ou\",\"kixqtnqtt\":\"aays\"},\"id\":\"zlwfffiakp\",\"name\":\"pqqmted\",\"type\":\"tmmjihyeozph\"}")
            .toObject(BackupPolicyPatch.class);
        Assertions.assertEquals("mw", model.location());
        Assertions.assertEquals("bsazejjoqka", model.tags().get("fhsxttaugz"));
        Assertions.assertEquals(747215260, model.dailyBackupsToKeep());
        Assertions.assertEquals(1781492308, model.weeklyBackupsToKeep());
        Assertions.assertEquals(1019109775, model.monthlyBackupsToKeep());
        Assertions.assertEquals(false, model.enabled());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BackupPolicyPatch model = new BackupPolicyPatch().withLocation("mw")
            .withTags(
                mapOf("fhsxttaugz", "bsazejjoqka", "jlwuenvrkp", "nfaazpxdtnkdmkq", "ibreb", "ou", "kixqtnqtt", "aays"))
            .withDailyBackupsToKeep(747215260)
            .withWeeklyBackupsToKeep(1781492308)
            .withMonthlyBackupsToKeep(1019109775)
            .withEnabled(false);
        model = BinaryData.fromObject(model).toObject(BackupPolicyPatch.class);
        Assertions.assertEquals("mw", model.location());
        Assertions.assertEquals("bsazejjoqka", model.tags().get("fhsxttaugz"));
        Assertions.assertEquals(747215260, model.dailyBackupsToKeep());
        Assertions.assertEquals(1781492308, model.weeklyBackupsToKeep());
        Assertions.assertEquals(1019109775, model.monthlyBackupsToKeep());
        Assertions.assertEquals(false, model.enabled());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
