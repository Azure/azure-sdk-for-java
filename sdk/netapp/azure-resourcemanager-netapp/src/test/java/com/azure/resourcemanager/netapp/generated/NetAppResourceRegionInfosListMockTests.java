// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.netapp.NetAppFilesManager;
import com.azure.resourcemanager.netapp.models.RegionInfoResource;
import com.azure.resourcemanager.netapp.models.RegionStorageToNetworkProximity;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class NetAppResourceRegionInfosListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"storageToNetworkProximity\":\"T2\",\"availabilityZoneMappings\":[{\"availabilityZone\":\"ch\",\"isAvailable\":false},{\"availabilityZone\":\"m\",\"isAvailable\":true},{\"availabilityZone\":\"qnsdfzpbgtgky\",\"isAvailable\":false},{\"availabilityZone\":\"hrjeuutlw\",\"isAvailable\":false}]},\"id\":\"zhokvbwnhh\",\"name\":\"qlgehg\",\"type\":\"pipifh\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NetAppFilesManager manager = NetAppFilesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<RegionInfoResource> response
            = manager.netAppResourceRegionInfos().list("btmvpdvjdhttza", com.azure.core.util.Context.NONE);

        Assertions.assertEquals(RegionStorageToNetworkProximity.T2,
            response.iterator().next().storageToNetworkProximity());
        Assertions.assertEquals("ch", response.iterator().next().availabilityZoneMappings().get(0).availabilityZone());
        Assertions.assertFalse(response.iterator().next().availabilityZoneMappings().get(0).isAvailable());
    }
}
