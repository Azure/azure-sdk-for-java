// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.fluent.models.BackupInner;
import com.azure.resourcemanager.netapp.models.BackupsList;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class BackupsListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BackupsList model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"backupId\":\"pidkqqfkuvscxkdm\",\"creationDate\":\"2021-09-17T02:50:14Z\",\"provisioningState\":\"vibrxkpmloazuruo\",\"size\":8517542743150127284,\"label\":\"rb\",\"backupType\":\"Scheduled\",\"failureReason\":\"bfhjxakvvjgsl\",\"volumeResourceId\":\"r\",\"useExistingSnapshot\":true,\"snapshotName\":\"yw\",\"backupPolicyResourceId\":\"kgkxn\"},\"id\":\"dabg\",\"name\":\"vudtjuewbcihx\",\"type\":\"uwhcjyxccybv\"},{\"properties\":{\"backupId\":\"yakk\",\"creationDate\":\"2021-07-27T17:18:09Z\",\"provisioningState\":\"xgwjplmagstcyoh\",\"size\":3845696618127187337,\"label\":\"kdbdgiogsj\",\"backupType\":\"Manual\",\"failureReason\":\"qjnobaiyhddviac\",\"volumeResourceId\":\"gfnmntfpmvmemfnc\",\"useExistingSnapshot\":false,\"snapshotName\":\"vbalxlllc\",\"backupPolicyResourceId\":\"odbzevwrdnhf\"},\"id\":\"uvsj\",\"name\":\"swsmys\",\"type\":\"uluqypfc\"}],\"nextLink\":\"er\"}")
            .toObject(BackupsList.class);
        Assertions.assertEquals("rb", model.value().get(0).label());
        Assertions.assertEquals("r", model.value().get(0).volumeResourceId());
        Assertions.assertEquals(true, model.value().get(0).useExistingSnapshot());
        Assertions.assertEquals("yw", model.value().get(0).snapshotName());
        Assertions.assertEquals("er", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BackupsList model = new BackupsList().withValue(Arrays.asList(
            new BackupInner().withLabel("rb")
                .withVolumeResourceId("r")
                .withUseExistingSnapshot(true)
                .withSnapshotName("yw"),
            new BackupInner().withLabel("kdbdgiogsj")
                .withVolumeResourceId("gfnmntfpmvmemfnc")
                .withUseExistingSnapshot(false)
                .withSnapshotName("vbalxlllc")))
            .withNextLink("er");
        model = BinaryData.fromObject(model).toObject(BackupsList.class);
        Assertions.assertEquals("rb", model.value().get(0).label());
        Assertions.assertEquals("r", model.value().get(0).volumeResourceId());
        Assertions.assertEquals(true, model.value().get(0).useExistingSnapshot());
        Assertions.assertEquals("yw", model.value().get(0).snapshotName());
        Assertions.assertEquals("er", model.nextLink());
    }
}
