// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.fluent.models.BackupInner;
import com.azure.resourcemanager.netapp.models.BackupsList;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class BackupsListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BackupsList model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"backupId\":\"qg\",\"creationDate\":\"2021-09-02T13:08:41Z\",\"provisioningState\":\"fqntcyp\",\"size\":1419187115637928307,\"label\":\"oimwkslirc\",\"backupType\":\"Manual\",\"failureReason\":\"vydfceacvlhvygdy\",\"volumeResourceId\":\"t\",\"useExistingSnapshot\":true,\"snapshotName\":\"wnawjslbiw\",\"backupPolicyResourceId\":\"jgcyztsfmznba\"},\"id\":\"ph\",\"name\":\"hqnrn\",\"type\":\"pxehuwrykqga\"},{\"properties\":{\"backupId\":\"mvikl\",\"creationDate\":\"2021-05-22T16:01:58Z\",\"provisioningState\":\"khbejdznxc\",\"size\":8784071109028394620,\"label\":\"njivolvtnovq\",\"backupType\":\"Scheduled\",\"failureReason\":\"mjdftu\",\"volumeResourceId\":\"jltduceam\",\"useExistingSnapshot\":false,\"snapshotName\":\"u\",\"backupPolicyResourceId\":\"ejwcwwqiok\"},\"id\":\"sx\",\"name\":\"ojmsvpkjprvkwc\",\"type\":\"zqljyxgtczh\"}],\"nextLink\":\"dbsdshm\"}")
            .toObject(BackupsList.class);
        Assertions.assertEquals("oimwkslirc", model.value().get(0).label());
        Assertions.assertEquals("t", model.value().get(0).volumeResourceId());
        Assertions.assertEquals(true, model.value().get(0).useExistingSnapshot());
        Assertions.assertEquals("wnawjslbiw", model.value().get(0).snapshotName());
        Assertions.assertEquals("dbsdshm", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BackupsList model = new BackupsList().withValue(Arrays.asList(
            new BackupInner().withLabel("oimwkslirc")
                .withVolumeResourceId("t")
                .withUseExistingSnapshot(true)
                .withSnapshotName("wnawjslbiw"),
            new BackupInner().withLabel("njivolvtnovq")
                .withVolumeResourceId("jltduceam")
                .withUseExistingSnapshot(false)
                .withSnapshotName("u")))
            .withNextLink("dbsdshm");
        model = BinaryData.fromObject(model).toObject(BackupsList.class);
        Assertions.assertEquals("oimwkslirc", model.value().get(0).label());
        Assertions.assertEquals("t", model.value().get(0).volumeResourceId());
        Assertions.assertEquals(true, model.value().get(0).useExistingSnapshot());
        Assertions.assertEquals("wnawjslbiw", model.value().get(0).snapshotName());
        Assertions.assertEquals("dbsdshm", model.nextLink());
    }
}
