// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.fluent.models.BackupInner;
import com.azure.resourcemanager.netapp.models.BackupsList;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class BackupsListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BackupsList model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"backupId\":\"dvoqyt\",\"creationDate\":\"2021-11-02T20:40:47Z\",\"provisioningState\":\"wb\",\"size\":5557233869903086465,\"label\":\"vutpthjoxo\",\"backupType\":\"Manual\",\"failureReason\":\"ksbpimlqoljx\",\"volumeResourceId\":\"cgxxlxs\",\"useExistingSnapshot\":true,\"snapshotName\":\"vizqzdwl\",\"backupPolicyResourceId\":\"lyoupfgfbkju\"},\"id\":\"yhgk\",\"name\":\"minsgowzf\",\"type\":\"tsttktlahbq\"}],\"nextLink\":\"tx\"}")
            .toObject(BackupsList.class);
        Assertions.assertEquals("vutpthjoxo", model.value().get(0).label());
        Assertions.assertEquals("cgxxlxs", model.value().get(0).volumeResourceId());
        Assertions.assertEquals(true, model.value().get(0).useExistingSnapshot());
        Assertions.assertEquals("vizqzdwl", model.value().get(0).snapshotName());
        Assertions.assertEquals("tx", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BackupsList model = new BackupsList().withValue(Arrays.asList(new BackupInner().withLabel("vutpthjoxo")
            .withVolumeResourceId("cgxxlxs")
            .withUseExistingSnapshot(true)
            .withSnapshotName("vizqzdwl"))).withNextLink("tx");
        model = BinaryData.fromObject(model).toObject(BackupsList.class);
        Assertions.assertEquals("vutpthjoxo", model.value().get(0).label());
        Assertions.assertEquals("cgxxlxs", model.value().get(0).volumeResourceId());
        Assertions.assertEquals(true, model.value().get(0).useExistingSnapshot());
        Assertions.assertEquals("vizqzdwl", model.value().get(0).snapshotName());
        Assertions.assertEquals("tx", model.nextLink());
    }
}
