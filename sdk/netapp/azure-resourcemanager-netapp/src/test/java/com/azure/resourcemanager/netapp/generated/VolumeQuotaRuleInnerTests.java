// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.fluent.models.VolumeQuotaRuleInner;
import com.azure.resourcemanager.netapp.models.Type;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class VolumeQuotaRuleInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VolumeQuotaRuleInner model = BinaryData.fromString(
            "{\"properties\":{\"provisioningState\":\"Deleting\",\"quotaSizeInKiBs\":8756648845252646804,\"quotaType\":\"IndividualGroupQuota\",\"quotaTarget\":\"qs\"},\"location\":\"qxujxukndxd\",\"tags\":{\"yqtfihwh\":\"jguufzdm\",\"gamv\":\"otzi\",\"dphqamv\":\"phoszqz\",\"vtbvkayh\":\"kfwynw\"},\"id\":\"tnvyqiatkzwp\",\"name\":\"npwzcjaes\",\"type\":\"vvsccyajguq\"}")
            .toObject(VolumeQuotaRuleInner.class);
        Assertions.assertEquals("qxujxukndxd", model.location());
        Assertions.assertEquals("jguufzdm", model.tags().get("yqtfihwh"));
        Assertions.assertEquals(8756648845252646804L, model.quotaSizeInKiBs());
        Assertions.assertEquals(Type.INDIVIDUAL_GROUP_QUOTA, model.quotaType());
        Assertions.assertEquals("qs", model.quotaTarget());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VolumeQuotaRuleInner model = new VolumeQuotaRuleInner().withLocation("qxujxukndxd")
            .withTags(mapOf("yqtfihwh", "jguufzdm", "gamv", "otzi", "dphqamv", "phoszqz", "vtbvkayh", "kfwynw"))
            .withQuotaSizeInKiBs(8756648845252646804L)
            .withQuotaType(Type.INDIVIDUAL_GROUP_QUOTA)
            .withQuotaTarget("qs");
        model = BinaryData.fromObject(model).toObject(VolumeQuotaRuleInner.class);
        Assertions.assertEquals("qxujxukndxd", model.location());
        Assertions.assertEquals("jguufzdm", model.tags().get("yqtfihwh"));
        Assertions.assertEquals(8756648845252646804L, model.quotaSizeInKiBs());
        Assertions.assertEquals(Type.INDIVIDUAL_GROUP_QUOTA, model.quotaType());
        Assertions.assertEquals("qs", model.quotaTarget());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
