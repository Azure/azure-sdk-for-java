// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.fluent.models.SubvolumeInfoInner;
import com.azure.resourcemanager.netapp.models.SubvolumesList;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SubvolumesListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SubvolumesList model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"path\":\"epn\",\"size\":6219904994785247374,\"parentPath\":\"xgibbda\",\"provisioningState\":\"onfo\"},\"id\":\"uors\",\"name\":\"kokwbqplhlvnu\",\"type\":\"epzl\"}],\"nextLink\":\"hw\"}")
            .toObject(SubvolumesList.class);
        Assertions.assertEquals("epn", model.value().get(0).path());
        Assertions.assertEquals(6219904994785247374L, model.value().get(0).size());
        Assertions.assertEquals("xgibbda", model.value().get(0).parentPath());
        Assertions.assertEquals("hw", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SubvolumesList model = new SubvolumesList()
            .withValue(Arrays.asList(
                new SubvolumeInfoInner().withPath("epn").withSize(6219904994785247374L).withParentPath("xgibbda")))
            .withNextLink("hw");
        model = BinaryData.fromObject(model).toObject(SubvolumesList.class);
        Assertions.assertEquals("epn", model.value().get(0).path());
        Assertions.assertEquals(6219904994785247374L, model.value().get(0).size());
        Assertions.assertEquals("xgibbda", model.value().get(0).parentPath());
        Assertions.assertEquals("hw", model.nextLink());
    }
}
