// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.fluent.models.SubvolumeInfoInner;
import com.azure.resourcemanager.netapp.models.SubvolumesList;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SubvolumesListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SubvolumesList model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"path\":\"sxiftozq\",\"size\":319144288054659459,\"parentPath\":\"wesgogczh\",\"provisioningState\":\"nxkrlgnyhmossxkk\"},\"id\":\"h\",\"name\":\"rghxjb\",\"type\":\"hqxvcxgfrpdsofbs\"},{\"properties\":{\"path\":\"svbuswdvzyy\",\"size\":9049331973830942528,\"parentPath\":\"nvjsrtkfa\",\"provisioningState\":\"opqgikyzirtxdyux\"},\"id\":\"jntpsewgioilqu\",\"name\":\"rydxtqm\",\"type\":\"eoxorggufhyao\"},{\"properties\":{\"path\":\"ghhavgrvkffo\",\"size\":1220387324863982995,\"parentPath\":\"jbibg\",\"provisioningState\":\"fxumv\"},\"id\":\"luyovwxnbkfezzx\",\"name\":\"cy\",\"type\":\"wzdgirujbzbo\"}],\"nextLink\":\"zzbtdcqvpniyujvi\"}")
            .toObject(SubvolumesList.class);
        Assertions.assertEquals("sxiftozq", model.value().get(0).path());
        Assertions.assertEquals(319144288054659459L, model.value().get(0).size());
        Assertions.assertEquals("wesgogczh", model.value().get(0).parentPath());
        Assertions.assertEquals("zzbtdcqvpniyujvi", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SubvolumesList model = new SubvolumesList().withValue(Arrays.asList(
            new SubvolumeInfoInner().withPath("sxiftozq").withSize(319144288054659459L).withParentPath("wesgogczh"),
            new SubvolumeInfoInner().withPath("svbuswdvzyy").withSize(9049331973830942528L).withParentPath("nvjsrtkfa"),
            new SubvolumeInfoInner().withPath("ghhavgrvkffo").withSize(1220387324863982995L).withParentPath("jbibg")))
            .withNextLink("zzbtdcqvpniyujvi");
        model = BinaryData.fromObject(model).toObject(SubvolumesList.class);
        Assertions.assertEquals("sxiftozq", model.value().get(0).path());
        Assertions.assertEquals(319144288054659459L, model.value().get(0).size());
        Assertions.assertEquals("wesgogczh", model.value().get(0).parentPath());
        Assertions.assertEquals("zzbtdcqvpniyujvi", model.nextLink());
    }
}
