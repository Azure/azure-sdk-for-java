// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.fluent.models.SubvolumeInfoInner;
import com.azure.resourcemanager.netapp.models.SubvolumesList;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SubvolumesListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SubvolumesList model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"path\":\"zcjznmwcpmgua\",\"size\":6174770568857951171,\"parentPath\":\"factka\",\"provisioningState\":\"ovajjziuxxps\"},\"id\":\"eekulfgslqubkwd\",\"name\":\"enr\",\"type\":\"sutujba\"},{\"properties\":{\"path\":\"uo\",\"size\":7506794440055599533,\"parentPath\":\"flnorwmduvwp\",\"provisioningState\":\"vxwmygd\"},\"id\":\"gpqch\",\"name\":\"sze\",\"type\":\"nnbj\"}],\"nextLink\":\"xgibbda\"}")
            .toObject(SubvolumesList.class);
        Assertions.assertEquals("zcjznmwcpmgua", model.value().get(0).path());
        Assertions.assertEquals(6174770568857951171L, model.value().get(0).size());
        Assertions.assertEquals("factka", model.value().get(0).parentPath());
        Assertions.assertEquals("xgibbda", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SubvolumesList model = new SubvolumesList().withValue(Arrays.asList(
            new SubvolumeInfoInner().withPath("zcjznmwcpmgua").withSize(6174770568857951171L).withParentPath("factka"),
            new SubvolumeInfoInner().withPath("uo").withSize(7506794440055599533L).withParentPath("flnorwmduvwp")))
            .withNextLink("xgibbda");
        model = BinaryData.fromObject(model).toObject(SubvolumesList.class);
        Assertions.assertEquals("zcjznmwcpmgua", model.value().get(0).path());
        Assertions.assertEquals(6174770568857951171L, model.value().get(0).size());
        Assertions.assertEquals("factka", model.value().get(0).parentPath());
        Assertions.assertEquals("xgibbda", model.nextLink());
    }
}
