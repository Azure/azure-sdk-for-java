// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.fluent.models.SubvolumeInfoInner;
import com.azure.resourcemanager.netapp.models.SubvolumesList;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SubvolumesListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SubvolumesList model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"path\":\"nasx\",\"size\":6179205416301149482,\"parentPath\":\"qyzhf\",\"provisioningState\":\"esgogc\"},\"id\":\"onnxkrlgnyhm\",\"name\":\"ssxkkgthr\",\"type\":\"gh\"},{\"properties\":{\"path\":\"dhqxvcx\",\"size\":5980541858152242986,\"parentPath\":\"sofbshrn\",\"provisioningState\":\"buswdvzyy\"},\"id\":\"cnunvjsr\",\"name\":\"kfawnopqgikyz\",\"type\":\"rtxdyuxzejnt\"},{\"properties\":{\"path\":\"wgioilqukry\",\"size\":6982114006443169318,\"parentPath\":\"ieoxorggufhyaomt\",\"provisioningState\":\"hhavgrvkffovjz\"},\"id\":\"jbibg\",\"name\":\"mfxumvfcluyovw\",\"type\":\"nbkfezzxscy\"}],\"nextLink\":\"zdgiruj\"}")
            .toObject(SubvolumesList.class);
        Assertions.assertEquals("nasx", model.value().get(0).path());
        Assertions.assertEquals(6179205416301149482L, model.value().get(0).size());
        Assertions.assertEquals("qyzhf", model.value().get(0).parentPath());
        Assertions.assertEquals("zdgiruj", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SubvolumesList model = new SubvolumesList().withValue(Arrays.asList(
            new SubvolumeInfoInner().withPath("nasx").withSize(6179205416301149482L).withParentPath("qyzhf"),
            new SubvolumeInfoInner().withPath("dhqxvcx").withSize(5980541858152242986L).withParentPath("sofbshrn"),
            new SubvolumeInfoInner().withPath("wgioilqukry")
                .withSize(6982114006443169318L)
                .withParentPath("ieoxorggufhyaomt")))
            .withNextLink("zdgiruj");
        model = BinaryData.fromObject(model).toObject(SubvolumesList.class);
        Assertions.assertEquals("nasx", model.value().get(0).path());
        Assertions.assertEquals(6179205416301149482L, model.value().get(0).size());
        Assertions.assertEquals("qyzhf", model.value().get(0).parentPath());
        Assertions.assertEquals("zdgiruj", model.nextLink());
    }
}
