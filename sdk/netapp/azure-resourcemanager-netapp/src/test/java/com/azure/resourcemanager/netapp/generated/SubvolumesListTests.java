// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.fluent.models.SubvolumeInfoInner;
import com.azure.resourcemanager.netapp.models.SubvolumesList;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SubvolumesListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SubvolumesList model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"path\":\"wkpnbsaz\",\"size\":2373159244093314342,\"parentPath\":\"kagfhsxtt\",\"provisioningState\":\"gzxnfaazpxdtnk\"},\"id\":\"mkqjj\",\"name\":\"wuenvr\",\"type\":\"pyouaibrebqaays\"},{\"properties\":{\"path\":\"xqtnq\",\"size\":2784974934686338692,\"parentPath\":\"wfff\",\"provisioningState\":\"kpj\"},\"id\":\"qqmtedltmmji\",\"name\":\"yeozphvwauyqncy\",\"type\":\"upkvipmdsc\"},{\"properties\":{\"path\":\"upev\",\"size\":991520049605764174,\"parentPath\":\"otxhojujby\",\"provisioningState\":\"lmcuvhixb\"},\"id\":\"xyfwnylrcool\",\"name\":\"ttpkiwkkbnujrywv\",\"type\":\"y\"}],\"nextLink\":\"fpncurdo\"}")
                .toObject(SubvolumesList.class);
        Assertions.assertEquals("wkpnbsaz", model.value().get(0).path());
        Assertions.assertEquals(2373159244093314342L, model.value().get(0).size());
        Assertions.assertEquals("kagfhsxtt", model.value().get(0).parentPath());
        Assertions.assertEquals("fpncurdo", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SubvolumesList model =
            new SubvolumesList()
                .withValue(
                    Arrays
                        .asList(
                            new SubvolumeInfoInner()
                                .withPath("wkpnbsaz")
                                .withSize(2373159244093314342L)
                                .withParentPath("kagfhsxtt"),
                            new SubvolumeInfoInner()
                                .withPath("xqtnq")
                                .withSize(2784974934686338692L)
                                .withParentPath("wfff"),
                            new SubvolumeInfoInner()
                                .withPath("upev")
                                .withSize(991520049605764174L)
                                .withParentPath("otxhojujby")))
                .withNextLink("fpncurdo");
        model = BinaryData.fromObject(model).toObject(SubvolumesList.class);
        Assertions.assertEquals("wkpnbsaz", model.value().get(0).path());
        Assertions.assertEquals(2373159244093314342L, model.value().get(0).size());
        Assertions.assertEquals("kagfhsxtt", model.value().get(0).parentPath());
        Assertions.assertEquals("fpncurdo", model.nextLink());
    }
}
