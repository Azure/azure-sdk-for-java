// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.fluent.models.SubvolumeInfoInner;
import com.azure.resourcemanager.netapp.models.SubvolumesList;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SubvolumesListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SubvolumesList model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"path\":\"tac\",\"size\":1896818914623797810,\"parentPath\":\"ewzcjznmwcp\",\"provisioningState\":\"uaadraufactkahzo\"},\"id\":\"jjziuxxpsh\",\"name\":\"eekulfgslqubkwd\",\"type\":\"enr\"},{\"properties\":{\"path\":\"tujbazpju\",\"size\":2825730842736557509,\"parentPath\":\"yfln\",\"provisioningState\":\"wmd\"},\"id\":\"wpklvxw\",\"name\":\"ygdxpgpqchis\",\"type\":\"epn\"},{\"properties\":{\"path\":\"crxgibb\",\"size\":3991598245357381450,\"parentPath\":\"nfo\",\"provisioningState\":\"uors\"},\"id\":\"okwbqplh\",\"name\":\"vnuuepzl\",\"type\":\"phwzsoldweyuqdu\"}],\"nextLink\":\"mnnrwr\"}")
            .toObject(SubvolumesList.class);
        Assertions.assertEquals("tac", model.value().get(0).path());
        Assertions.assertEquals(1896818914623797810L, model.value().get(0).size());
        Assertions.assertEquals("ewzcjznmwcp", model.value().get(0).parentPath());
        Assertions.assertEquals("mnnrwr", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SubvolumesList model = new SubvolumesList()
            .withValue(Arrays.asList(
                new SubvolumeInfoInner().withPath("tac").withSize(1896818914623797810L).withParentPath("ewzcjznmwcp"),
                new SubvolumeInfoInner().withPath("tujbazpju").withSize(2825730842736557509L).withParentPath("yfln"),
                new SubvolumeInfoInner().withPath("crxgibb").withSize(3991598245357381450L).withParentPath("nfo")))
            .withNextLink("mnnrwr");
        model = BinaryData.fromObject(model).toObject(SubvolumesList.class);
        Assertions.assertEquals("tac", model.value().get(0).path());
        Assertions.assertEquals(1896818914623797810L, model.value().get(0).size());
        Assertions.assertEquals("ewzcjznmwcp", model.value().get(0).parentPath());
        Assertions.assertEquals("mnnrwr", model.nextLink());
    }
}
