// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.fluent.models.SnapshotPolicyProperties;
import com.azure.resourcemanager.netapp.models.DailySchedule;
import com.azure.resourcemanager.netapp.models.HourlySchedule;
import com.azure.resourcemanager.netapp.models.MonthlySchedule;
import com.azure.resourcemanager.netapp.models.WeeklySchedule;
import org.junit.jupiter.api.Assertions;

public final class SnapshotPolicyPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SnapshotPolicyProperties model = BinaryData.fromString(
            "{\"hourlySchedule\":{\"snapshotsToKeep\":748127164,\"minute\":1174203733,\"usedBytes\":85717460698050500},\"dailySchedule\":{\"snapshotsToKeep\":538424722,\"hour\":73661757,\"minute\":444921706,\"usedBytes\":2987884868949644497},\"weeklySchedule\":{\"snapshotsToKeep\":827255205,\"day\":\"w\",\"hour\":840450646,\"minute\":1308163389,\"usedBytes\":423468759806751864},\"monthlySchedule\":{\"snapshotsToKeep\":1451810874,\"daysOfMonth\":\"uexmkttlst\",\"hour\":1961670618,\"minute\":596743052,\"usedBytes\":5017420893473411481},\"enabled\":true,\"provisioningState\":\"csdtclusiypbs\"}")
            .toObject(SnapshotPolicyProperties.class);
        Assertions.assertEquals(748127164, model.hourlySchedule().snapshotsToKeep());
        Assertions.assertEquals(1174203733, model.hourlySchedule().minute());
        Assertions.assertEquals(85717460698050500L, model.hourlySchedule().usedBytes());
        Assertions.assertEquals(538424722, model.dailySchedule().snapshotsToKeep());
        Assertions.assertEquals(73661757, model.dailySchedule().hour());
        Assertions.assertEquals(444921706, model.dailySchedule().minute());
        Assertions.assertEquals(2987884868949644497L, model.dailySchedule().usedBytes());
        Assertions.assertEquals(827255205, model.weeklySchedule().snapshotsToKeep());
        Assertions.assertEquals("w", model.weeklySchedule().day());
        Assertions.assertEquals(840450646, model.weeklySchedule().hour());
        Assertions.assertEquals(1308163389, model.weeklySchedule().minute());
        Assertions.assertEquals(423468759806751864L, model.weeklySchedule().usedBytes());
        Assertions.assertEquals(1451810874, model.monthlySchedule().snapshotsToKeep());
        Assertions.assertEquals("uexmkttlst", model.monthlySchedule().daysOfMonth());
        Assertions.assertEquals(1961670618, model.monthlySchedule().hour());
        Assertions.assertEquals(596743052, model.monthlySchedule().minute());
        Assertions.assertEquals(5017420893473411481L, model.monthlySchedule().usedBytes());
        Assertions.assertTrue(model.enabled());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SnapshotPolicyProperties model = new SnapshotPolicyProperties()
            .withHourlySchedule(new HourlySchedule().withSnapshotsToKeep(748127164)
                .withMinute(1174203733)
                .withUsedBytes(85717460698050500L))
            .withDailySchedule(new DailySchedule().withSnapshotsToKeep(538424722)
                .withHour(73661757)
                .withMinute(444921706)
                .withUsedBytes(2987884868949644497L))
            .withWeeklySchedule(new WeeklySchedule().withSnapshotsToKeep(827255205)
                .withDay("w")
                .withHour(840450646)
                .withMinute(1308163389)
                .withUsedBytes(423468759806751864L))
            .withMonthlySchedule(new MonthlySchedule().withSnapshotsToKeep(1451810874)
                .withDaysOfMonth("uexmkttlst")
                .withHour(1961670618)
                .withMinute(596743052)
                .withUsedBytes(5017420893473411481L))
            .withEnabled(true);
        model = BinaryData.fromObject(model).toObject(SnapshotPolicyProperties.class);
        Assertions.assertEquals(748127164, model.hourlySchedule().snapshotsToKeep());
        Assertions.assertEquals(1174203733, model.hourlySchedule().minute());
        Assertions.assertEquals(85717460698050500L, model.hourlySchedule().usedBytes());
        Assertions.assertEquals(538424722, model.dailySchedule().snapshotsToKeep());
        Assertions.assertEquals(73661757, model.dailySchedule().hour());
        Assertions.assertEquals(444921706, model.dailySchedule().minute());
        Assertions.assertEquals(2987884868949644497L, model.dailySchedule().usedBytes());
        Assertions.assertEquals(827255205, model.weeklySchedule().snapshotsToKeep());
        Assertions.assertEquals("w", model.weeklySchedule().day());
        Assertions.assertEquals(840450646, model.weeklySchedule().hour());
        Assertions.assertEquals(1308163389, model.weeklySchedule().minute());
        Assertions.assertEquals(423468759806751864L, model.weeklySchedule().usedBytes());
        Assertions.assertEquals(1451810874, model.monthlySchedule().snapshotsToKeep());
        Assertions.assertEquals("uexmkttlst", model.monthlySchedule().daysOfMonth());
        Assertions.assertEquals(1961670618, model.monthlySchedule().hour());
        Assertions.assertEquals(596743052, model.monthlySchedule().minute());
        Assertions.assertEquals(5017420893473411481L, model.monthlySchedule().usedBytes());
        Assertions.assertTrue(model.enabled());
    }
}
