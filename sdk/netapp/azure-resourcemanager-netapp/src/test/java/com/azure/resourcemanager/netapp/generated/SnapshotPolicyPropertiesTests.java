// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.fluent.models.SnapshotPolicyProperties;
import com.azure.resourcemanager.netapp.models.DailySchedule;
import com.azure.resourcemanager.netapp.models.HourlySchedule;
import com.azure.resourcemanager.netapp.models.MonthlySchedule;
import com.azure.resourcemanager.netapp.models.WeeklySchedule;
import org.junit.jupiter.api.Assertions;

public final class SnapshotPolicyPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SnapshotPolicyProperties model = BinaryData.fromString(
            "{\"hourlySchedule\":{\"snapshotsToKeep\":1719388893,\"minute\":1969431903,\"usedBytes\":1943240829085978893},\"dailySchedule\":{\"snapshotsToKeep\":1200703069,\"hour\":1154493453,\"minute\":1641212216,\"usedBytes\":4480372692035357519},\"weeklySchedule\":{\"snapshotsToKeep\":32059747,\"day\":\"ujmqlgkfbtndoa\",\"hour\":1440714343,\"minute\":1443237539,\"usedBytes\":4713729032495268823},\"monthlySchedule\":{\"snapshotsToKeep\":175195194,\"daysOfMonth\":\"c\",\"hour\":307486773,\"minute\":1652429831,\"usedBytes\":537247289030713733},\"enabled\":false,\"provisioningState\":\"ojvdcpzfoqo\"}")
            .toObject(SnapshotPolicyProperties.class);
        Assertions.assertEquals(1719388893, model.hourlySchedule().snapshotsToKeep());
        Assertions.assertEquals(1969431903, model.hourlySchedule().minute());
        Assertions.assertEquals(1943240829085978893L, model.hourlySchedule().usedBytes());
        Assertions.assertEquals(1200703069, model.dailySchedule().snapshotsToKeep());
        Assertions.assertEquals(1154493453, model.dailySchedule().hour());
        Assertions.assertEquals(1641212216, model.dailySchedule().minute());
        Assertions.assertEquals(4480372692035357519L, model.dailySchedule().usedBytes());
        Assertions.assertEquals(32059747, model.weeklySchedule().snapshotsToKeep());
        Assertions.assertEquals("ujmqlgkfbtndoa", model.weeklySchedule().day());
        Assertions.assertEquals(1440714343, model.weeklySchedule().hour());
        Assertions.assertEquals(1443237539, model.weeklySchedule().minute());
        Assertions.assertEquals(4713729032495268823L, model.weeklySchedule().usedBytes());
        Assertions.assertEquals(175195194, model.monthlySchedule().snapshotsToKeep());
        Assertions.assertEquals("c", model.monthlySchedule().daysOfMonth());
        Assertions.assertEquals(307486773, model.monthlySchedule().hour());
        Assertions.assertEquals(1652429831, model.monthlySchedule().minute());
        Assertions.assertEquals(537247289030713733L, model.monthlySchedule().usedBytes());
        Assertions.assertEquals(false, model.enabled());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SnapshotPolicyProperties model = new SnapshotPolicyProperties()
            .withHourlySchedule(new HourlySchedule().withSnapshotsToKeep(1719388893)
                .withMinute(1969431903)
                .withUsedBytes(1943240829085978893L))
            .withDailySchedule(new DailySchedule().withSnapshotsToKeep(1200703069)
                .withHour(1154493453)
                .withMinute(1641212216)
                .withUsedBytes(4480372692035357519L))
            .withWeeklySchedule(new WeeklySchedule().withSnapshotsToKeep(32059747)
                .withDay("ujmqlgkfbtndoa")
                .withHour(1440714343)
                .withMinute(1443237539)
                .withUsedBytes(4713729032495268823L))
            .withMonthlySchedule(new MonthlySchedule().withSnapshotsToKeep(175195194)
                .withDaysOfMonth("c")
                .withHour(307486773)
                .withMinute(1652429831)
                .withUsedBytes(537247289030713733L))
            .withEnabled(false);
        model = BinaryData.fromObject(model).toObject(SnapshotPolicyProperties.class);
        Assertions.assertEquals(1719388893, model.hourlySchedule().snapshotsToKeep());
        Assertions.assertEquals(1969431903, model.hourlySchedule().minute());
        Assertions.assertEquals(1943240829085978893L, model.hourlySchedule().usedBytes());
        Assertions.assertEquals(1200703069, model.dailySchedule().snapshotsToKeep());
        Assertions.assertEquals(1154493453, model.dailySchedule().hour());
        Assertions.assertEquals(1641212216, model.dailySchedule().minute());
        Assertions.assertEquals(4480372692035357519L, model.dailySchedule().usedBytes());
        Assertions.assertEquals(32059747, model.weeklySchedule().snapshotsToKeep());
        Assertions.assertEquals("ujmqlgkfbtndoa", model.weeklySchedule().day());
        Assertions.assertEquals(1440714343, model.weeklySchedule().hour());
        Assertions.assertEquals(1443237539, model.weeklySchedule().minute());
        Assertions.assertEquals(4713729032495268823L, model.weeklySchedule().usedBytes());
        Assertions.assertEquals(175195194, model.monthlySchedule().snapshotsToKeep());
        Assertions.assertEquals("c", model.monthlySchedule().daysOfMonth());
        Assertions.assertEquals(307486773, model.monthlySchedule().hour());
        Assertions.assertEquals(1652429831, model.monthlySchedule().minute());
        Assertions.assertEquals(537247289030713733L, model.monthlySchedule().usedBytes());
        Assertions.assertEquals(false, model.enabled());
    }
}
