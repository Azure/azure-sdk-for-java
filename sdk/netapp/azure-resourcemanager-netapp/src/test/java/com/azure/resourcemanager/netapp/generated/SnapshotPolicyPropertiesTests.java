// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.fluent.models.SnapshotPolicyProperties;
import com.azure.resourcemanager.netapp.models.DailySchedule;
import com.azure.resourcemanager.netapp.models.HourlySchedule;
import com.azure.resourcemanager.netapp.models.MonthlySchedule;
import com.azure.resourcemanager.netapp.models.WeeklySchedule;
import org.junit.jupiter.api.Assertions;

public final class SnapshotPolicyPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SnapshotPolicyProperties model = BinaryData.fromString(
            "{\"hourlySchedule\":{\"snapshotsToKeep\":1115314881,\"minute\":803302222,\"usedBytes\":609111947256097194},\"dailySchedule\":{\"snapshotsToKeep\":1440361385,\"hour\":1081662268,\"minute\":535447173,\"usedBytes\":378458520885066116},\"weeklySchedule\":{\"snapshotsToKeep\":1478958255,\"day\":\"ugjhky\",\"hour\":314169873,\"minute\":642347272,\"usedBytes\":6938259574609186760},\"monthlySchedule\":{\"snapshotsToKeep\":1063119881,\"daysOfMonth\":\"qmzqalkrmnjijpx\",\"hour\":222517676,\"minute\":208789733,\"usedBytes\":1969083362588133830},\"enabled\":true,\"provisioningState\":\"baaa\"}")
            .toObject(SnapshotPolicyProperties.class);
        Assertions.assertEquals(1115314881, model.hourlySchedule().snapshotsToKeep());
        Assertions.assertEquals(803302222, model.hourlySchedule().minute());
        Assertions.assertEquals(609111947256097194L, model.hourlySchedule().usedBytes());
        Assertions.assertEquals(1440361385, model.dailySchedule().snapshotsToKeep());
        Assertions.assertEquals(1081662268, model.dailySchedule().hour());
        Assertions.assertEquals(535447173, model.dailySchedule().minute());
        Assertions.assertEquals(378458520885066116L, model.dailySchedule().usedBytes());
        Assertions.assertEquals(1478958255, model.weeklySchedule().snapshotsToKeep());
        Assertions.assertEquals("ugjhky", model.weeklySchedule().day());
        Assertions.assertEquals(314169873, model.weeklySchedule().hour());
        Assertions.assertEquals(642347272, model.weeklySchedule().minute());
        Assertions.assertEquals(6938259574609186760L, model.weeklySchedule().usedBytes());
        Assertions.assertEquals(1063119881, model.monthlySchedule().snapshotsToKeep());
        Assertions.assertEquals("qmzqalkrmnjijpx", model.monthlySchedule().daysOfMonth());
        Assertions.assertEquals(222517676, model.monthlySchedule().hour());
        Assertions.assertEquals(208789733, model.monthlySchedule().minute());
        Assertions.assertEquals(1969083362588133830L, model.monthlySchedule().usedBytes());
        Assertions.assertEquals(true, model.enabled());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SnapshotPolicyProperties model = new SnapshotPolicyProperties()
            .withHourlySchedule(new HourlySchedule().withSnapshotsToKeep(1115314881)
                .withMinute(803302222)
                .withUsedBytes(609111947256097194L))
            .withDailySchedule(new DailySchedule().withSnapshotsToKeep(1440361385)
                .withHour(1081662268)
                .withMinute(535447173)
                .withUsedBytes(378458520885066116L))
            .withWeeklySchedule(new WeeklySchedule().withSnapshotsToKeep(1478958255)
                .withDay("ugjhky")
                .withHour(314169873)
                .withMinute(642347272)
                .withUsedBytes(6938259574609186760L))
            .withMonthlySchedule(new MonthlySchedule().withSnapshotsToKeep(1063119881)
                .withDaysOfMonth("qmzqalkrmnjijpx")
                .withHour(222517676)
                .withMinute(208789733)
                .withUsedBytes(1969083362588133830L))
            .withEnabled(true);
        model = BinaryData.fromObject(model).toObject(SnapshotPolicyProperties.class);
        Assertions.assertEquals(1115314881, model.hourlySchedule().snapshotsToKeep());
        Assertions.assertEquals(803302222, model.hourlySchedule().minute());
        Assertions.assertEquals(609111947256097194L, model.hourlySchedule().usedBytes());
        Assertions.assertEquals(1440361385, model.dailySchedule().snapshotsToKeep());
        Assertions.assertEquals(1081662268, model.dailySchedule().hour());
        Assertions.assertEquals(535447173, model.dailySchedule().minute());
        Assertions.assertEquals(378458520885066116L, model.dailySchedule().usedBytes());
        Assertions.assertEquals(1478958255, model.weeklySchedule().snapshotsToKeep());
        Assertions.assertEquals("ugjhky", model.weeklySchedule().day());
        Assertions.assertEquals(314169873, model.weeklySchedule().hour());
        Assertions.assertEquals(642347272, model.weeklySchedule().minute());
        Assertions.assertEquals(6938259574609186760L, model.weeklySchedule().usedBytes());
        Assertions.assertEquals(1063119881, model.monthlySchedule().snapshotsToKeep());
        Assertions.assertEquals("qmzqalkrmnjijpx", model.monthlySchedule().daysOfMonth());
        Assertions.assertEquals(222517676, model.monthlySchedule().hour());
        Assertions.assertEquals(208789733, model.monthlySchedule().minute());
        Assertions.assertEquals(1969083362588133830L, model.monthlySchedule().usedBytes());
        Assertions.assertEquals(true, model.enabled());
    }
}
