// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.models.Dimension;
import com.azure.resourcemanager.netapp.models.LogSpecification;
import com.azure.resourcemanager.netapp.models.MetricAggregationType;
import com.azure.resourcemanager.netapp.models.MetricSpecification;
import com.azure.resourcemanager.netapp.models.ServiceSpecification;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ServiceSpecificationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ServiceSpecification model = BinaryData.fromString(
            "{\"metricSpecifications\":[{\"name\":\"zcxtbzsgfyccsn\",\"displayName\":\"mdwzjeiachboo\",\"displayDescription\":\"lnrosfqp\",\"unit\":\"ehzzvypyqrim\",\"supportedAggregationTypes\":[\"Average\",\"Average\",\"Average\"],\"supportedTimeGrainTypes\":[\"dkirsoodqxhcr\",\"nohjt\",\"kwh\"],\"internalMetricName\":\"oifiyipjxsqwpgr\",\"enableRegionalMdmAccount\":false,\"sourceMdmAccount\":\"orcjxvsnby\",\"sourceMdmNamespace\":\"abnmocpcyshu\",\"dimensions\":[{\"name\":\"bl\",\"displayName\":\"gpbtoqcjmklj\"},{\"name\":\"bqidtqaj\",\"displayName\":\"ulpkudjkrl\"},{\"name\":\"bzhfepgzgqexz\",\"displayName\":\"c\"},{\"name\":\"c\",\"displayName\":\"ierhhbcsglummaj\"}],\"aggregationType\":\"aodxo\",\"fillGapWithZero\":true,\"category\":\"xkqpxo\",\"resourceIdDimensionNameOverride\":\"jionpimexgstxgc\",\"isInternal\":false},{\"name\":\"maajrmvdjwzrlo\",\"displayName\":\"clwhijcoejctbz\",\"displayDescription\":\"s\",\"unit\":\"y\",\"supportedAggregationTypes\":[\"Average\",\"Average\"],\"supportedTimeGrainTypes\":[\"ukdkexxppofmxa\",\"c\",\"jpgd\"],\"internalMetricName\":\"ocjjxhvpmouexh\",\"enableRegionalMdmAccount\":true,\"sourceMdmAccount\":\"bqe\",\"sourceMdmNamespace\":\"nxqbzvddn\",\"dimensions\":[{\"name\":\"eic\",\"displayName\":\"w\"}],\"aggregationType\":\"zao\",\"fillGapWithZero\":true,\"category\":\"rhcffcydd\",\"resourceIdDimensionNameOverride\":\"mjthjqkwp\",\"isInternal\":false}],\"logSpecifications\":[{\"name\":\"qciwqvhkhixuigdt\",\"displayName\":\"bob\"},{\"name\":\"ghmewuam\",\"displayName\":\"hrzayvvtpgvdf\"}]}")
            .toObject(ServiceSpecification.class);
        Assertions.assertEquals("zcxtbzsgfyccsn", model.metricSpecifications().get(0).name());
        Assertions.assertEquals("mdwzjeiachboo", model.metricSpecifications().get(0).displayName());
        Assertions.assertEquals("lnrosfqp", model.metricSpecifications().get(0).displayDescription());
        Assertions.assertEquals("ehzzvypyqrim", model.metricSpecifications().get(0).unit());
        Assertions.assertEquals(MetricAggregationType.AVERAGE,
            model.metricSpecifications().get(0).supportedAggregationTypes().get(0));
        Assertions.assertEquals("dkirsoodqxhcr", model.metricSpecifications().get(0).supportedTimeGrainTypes().get(0));
        Assertions.assertEquals("oifiyipjxsqwpgr", model.metricSpecifications().get(0).internalMetricName());
        Assertions.assertFalse(model.metricSpecifications().get(0).enableRegionalMdmAccount());
        Assertions.assertEquals("orcjxvsnby", model.metricSpecifications().get(0).sourceMdmAccount());
        Assertions.assertEquals("abnmocpcyshu", model.metricSpecifications().get(0).sourceMdmNamespace());
        Assertions.assertEquals("bl", model.metricSpecifications().get(0).dimensions().get(0).name());
        Assertions.assertEquals("gpbtoqcjmklj", model.metricSpecifications().get(0).dimensions().get(0).displayName());
        Assertions.assertEquals("aodxo", model.metricSpecifications().get(0).aggregationType());
        Assertions.assertTrue(model.metricSpecifications().get(0).fillGapWithZero());
        Assertions.assertEquals("xkqpxo", model.metricSpecifications().get(0).category());
        Assertions.assertEquals("jionpimexgstxgc",
            model.metricSpecifications().get(0).resourceIdDimensionNameOverride());
        Assertions.assertFalse(model.metricSpecifications().get(0).isInternal());
        Assertions.assertEquals("qciwqvhkhixuigdt", model.logSpecifications().get(0).name());
        Assertions.assertEquals("bob", model.logSpecifications().get(0).displayName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ServiceSpecification model = new ServiceSpecification()
            .withMetricSpecifications(Arrays.asList(
                new MetricSpecification().withName("zcxtbzsgfyccsn")
                    .withDisplayName("mdwzjeiachboo")
                    .withDisplayDescription("lnrosfqp")
                    .withUnit("ehzzvypyqrim")
                    .withSupportedAggregationTypes(Arrays.asList(MetricAggregationType.AVERAGE,
                        MetricAggregationType.AVERAGE, MetricAggregationType.AVERAGE))
                    .withSupportedTimeGrainTypes(Arrays.asList("dkirsoodqxhcr", "nohjt", "kwh"))
                    .withInternalMetricName("oifiyipjxsqwpgr")
                    .withEnableRegionalMdmAccount(false)
                    .withSourceMdmAccount("orcjxvsnby")
                    .withSourceMdmNamespace("abnmocpcyshu")
                    .withDimensions(Arrays.asList(new Dimension().withName("bl").withDisplayName("gpbtoqcjmklj"),
                        new Dimension().withName("bqidtqaj").withDisplayName("ulpkudjkrl"),
                        new Dimension().withName("bzhfepgzgqexz").withDisplayName("c"),
                        new Dimension().withName("c").withDisplayName("ierhhbcsglummaj")))
                    .withAggregationType("aodxo")
                    .withFillGapWithZero(true)
                    .withCategory("xkqpxo")
                    .withResourceIdDimensionNameOverride("jionpimexgstxgc")
                    .withIsInternal(false),
                new MetricSpecification().withName("maajrmvdjwzrlo")
                    .withDisplayName("clwhijcoejctbz")
                    .withDisplayDescription("s")
                    .withUnit("y")
                    .withSupportedAggregationTypes(
                        Arrays.asList(MetricAggregationType.AVERAGE, MetricAggregationType.AVERAGE))
                    .withSupportedTimeGrainTypes(Arrays.asList("ukdkexxppofmxa", "c", "jpgd"))
                    .withInternalMetricName("ocjjxhvpmouexh")
                    .withEnableRegionalMdmAccount(true)
                    .withSourceMdmAccount("bqe")
                    .withSourceMdmNamespace("nxqbzvddn")
                    .withDimensions(Arrays.asList(new Dimension().withName("eic").withDisplayName("w")))
                    .withAggregationType("zao")
                    .withFillGapWithZero(true)
                    .withCategory("rhcffcydd")
                    .withResourceIdDimensionNameOverride("mjthjqkwp")
                    .withIsInternal(false)))
            .withLogSpecifications(
                Arrays.asList(new LogSpecification().withName("qciwqvhkhixuigdt").withDisplayName("bob"),
                    new LogSpecification().withName("ghmewuam").withDisplayName("hrzayvvtpgvdf")));
        model = BinaryData.fromObject(model).toObject(ServiceSpecification.class);
        Assertions.assertEquals("zcxtbzsgfyccsn", model.metricSpecifications().get(0).name());
        Assertions.assertEquals("mdwzjeiachboo", model.metricSpecifications().get(0).displayName());
        Assertions.assertEquals("lnrosfqp", model.metricSpecifications().get(0).displayDescription());
        Assertions.assertEquals("ehzzvypyqrim", model.metricSpecifications().get(0).unit());
        Assertions.assertEquals(MetricAggregationType.AVERAGE,
            model.metricSpecifications().get(0).supportedAggregationTypes().get(0));
        Assertions.assertEquals("dkirsoodqxhcr", model.metricSpecifications().get(0).supportedTimeGrainTypes().get(0));
        Assertions.assertEquals("oifiyipjxsqwpgr", model.metricSpecifications().get(0).internalMetricName());
        Assertions.assertFalse(model.metricSpecifications().get(0).enableRegionalMdmAccount());
        Assertions.assertEquals("orcjxvsnby", model.metricSpecifications().get(0).sourceMdmAccount());
        Assertions.assertEquals("abnmocpcyshu", model.metricSpecifications().get(0).sourceMdmNamespace());
        Assertions.assertEquals("bl", model.metricSpecifications().get(0).dimensions().get(0).name());
        Assertions.assertEquals("gpbtoqcjmklj", model.metricSpecifications().get(0).dimensions().get(0).displayName());
        Assertions.assertEquals("aodxo", model.metricSpecifications().get(0).aggregationType());
        Assertions.assertTrue(model.metricSpecifications().get(0).fillGapWithZero());
        Assertions.assertEquals("xkqpxo", model.metricSpecifications().get(0).category());
        Assertions.assertEquals("jionpimexgstxgc",
            model.metricSpecifications().get(0).resourceIdDimensionNameOverride());
        Assertions.assertFalse(model.metricSpecifications().get(0).isInternal());
        Assertions.assertEquals("qciwqvhkhixuigdt", model.logSpecifications().get(0).name());
        Assertions.assertEquals("bob", model.logSpecifications().get(0).displayName());
    }
}
