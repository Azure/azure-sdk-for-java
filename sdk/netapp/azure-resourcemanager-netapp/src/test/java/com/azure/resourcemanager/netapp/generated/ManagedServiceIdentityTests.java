// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.models.ManagedServiceIdentity;
import com.azure.resourcemanager.netapp.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.netapp.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ManagedServiceIdentityTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ManagedServiceIdentity model = BinaryData.fromString(
            "{\"principalId\":\"95607857-f5c5-4a02-a01c-e426ceff225c\",\"tenantId\":\"48068c57-7ea3-4fbd-88be-eb04a5907215\",\"type\":\"None\",\"userAssignedIdentities\":{\"l\":{\"principalId\":\"2205c412-d652-4034-a06e-feec73a76aa8\",\"clientId\":\"62a61b48-29de-463e-be96-4abc9db1905f\"},\"xmyskp\":{\"principalId\":\"b2b79ed3-4cdf-423a-9bcf-8ee6d810eda6\",\"clientId\":\"2f22076b-f7cb-468e-be06-69de268d26f5\"},\"nbtkcxywnytnr\":{\"principalId\":\"920010e8-73fa-487c-8ce0-18dcae8b8955\",\"clientId\":\"70f7e210-826b-4695-b027-a97215511666\"},\"lqidyby\":{\"principalId\":\"a9b31e60-d53a-404c-be02-4435fb98e4bc\",\"clientId\":\"eb84597d-6914-40bf-83e6-f789f804339b\"}}}")
            .toObject(ManagedServiceIdentity.class);
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ManagedServiceIdentity model = new ManagedServiceIdentity().withType(ManagedServiceIdentityType.NONE)
            .withUserAssignedIdentities(mapOf("l", new UserAssignedIdentity(), "xmyskp", new UserAssignedIdentity(),
                "nbtkcxywnytnr", new UserAssignedIdentity(), "lqidyby", new UserAssignedIdentity()));
        model = BinaryData.fromObject(model).toObject(ManagedServiceIdentity.class);
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.type());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
