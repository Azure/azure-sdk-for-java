// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.models.ManagedServiceIdentity;
import com.azure.resourcemanager.netapp.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.netapp.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ManagedServiceIdentityTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ManagedServiceIdentity model = BinaryData.fromString(
            "{\"principalId\":\"ddf0678a-5f89-44a4-b2fe-a7aef93de396\",\"tenantId\":\"5d9c16c0-632b-4aa6-8591-5a7cddb35189\",\"type\":\"UserAssigned\",\"userAssignedIdentities\":{\"nlankxmyskpb\":{\"principalId\":\"7535a243-d41f-433e-8e20-7f7f261abc6c\",\"clientId\":\"d3c2a103-cd55-44c8-84af-0453c53b184b\"},\"btkcxywnytnrsyn\":{\"principalId\":\"673a8843-46b7-41dc-a386-2c7d14dc7fda\",\"clientId\":\"615284c2-ddb9-4915-be3f-f7b561649406\"},\"dybyxczfclhaa\":{\"principalId\":\"e63839dc-c174-4ca7-9811-5ca28b2fdb7a\",\"clientId\":\"f315cfc7-f75e-4403-8ce2-bc0d9fb970a3\"},\"abphlw\":{\"principalId\":\"94f291b7-f26a-44fb-a1aa-42ab85c3f729\",\"clientId\":\"89018d53-4301-40a1-a188-66d35142e0e5\"}}}")
            .toObject(ManagedServiceIdentity.class);
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, model.type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ManagedServiceIdentity model = new ManagedServiceIdentity().withType(ManagedServiceIdentityType.USER_ASSIGNED)
            .withUserAssignedIdentities(
                mapOf("nlankxmyskpb", new UserAssignedIdentity(), "btkcxywnytnrsyn", new UserAssignedIdentity(),
                    "dybyxczfclhaa", new UserAssignedIdentity(), "abphlw", new UserAssignedIdentity()));
        model = BinaryData.fromObject(model).toObject(ManagedServiceIdentity.class);
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, model.type());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
