// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.models.ManagedServiceIdentity;
import com.azure.resourcemanager.netapp.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.netapp.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ManagedServiceIdentityTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ManagedServiceIdentity model = BinaryData.fromString(
            "{\"principalId\":\"1135a290-6577-40f3-a425-f115b5b1f968\",\"tenantId\":\"a618e1f9-2d42-4fa2-9998-f6e7e532f158\",\"type\":\"UserAssigned\",\"userAssignedIdentities\":{\"nlankxmyskpb\":{\"principalId\":\"e282a234-2701-49ad-b054-537af9b18d9e\",\"clientId\":\"9190bf26-62ea-4bfb-8dec-2694a8fd87ca\"},\"btkcxywnytnrsyn\":{\"principalId\":\"e19a180d-384e-47ee-bb53-b191eb7f41ab\",\"clientId\":\"e88d17dc-3f26-473c-81d2-9eecb4afa294\"},\"dybyxczfclhaa\":{\"principalId\":\"8cb0c4e9-362c-48ca-a4cd-b8cac7c7db1c\",\"clientId\":\"aece7313-eb32-4623-bc08-191c36a53e08\"},\"abphlw\":{\"principalId\":\"9893e4c9-178d-486f-bc80-54516925279e\",\"clientId\":\"b2ce9343-e979-4cd4-b1cf-ffccb3eafae3\"}}}")
            .toObject(ManagedServiceIdentity.class);
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, model.type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ManagedServiceIdentity model = new ManagedServiceIdentity().withType(ManagedServiceIdentityType.USER_ASSIGNED)
            .withUserAssignedIdentities(
                mapOf("nlankxmyskpb", new UserAssignedIdentity(), "btkcxywnytnrsyn", new UserAssignedIdentity(),
                    "dybyxczfclhaa", new UserAssignedIdentity(), "abphlw", new UserAssignedIdentity()));
        model = BinaryData.fromObject(model).toObject(ManagedServiceIdentity.class);
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, model.type());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
