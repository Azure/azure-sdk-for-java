// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.netapp.NetAppFilesManager;
import com.azure.resourcemanager.netapp.models.SnapshotPolicy;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SnapshotPoliciesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"etag\":\"dibgqjxgpnrhgov\",\"properties\":{\"hourlySchedule\":{\"snapshotsToKeep\":517414798,\"minute\":2002912568,\"usedBytes\":1894847131734717959},\"dailySchedule\":{\"snapshotsToKeep\":1307435225,\"hour\":1733167142,\"minute\":1551621761,\"usedBytes\":453619823533094312},\"weeklySchedule\":{\"snapshotsToKeep\":1820552719,\"day\":\"dfuyd\",\"hour\":1783861602,\"minute\":506984335,\"usedBytes\":718585270565089372},\"monthlySchedule\":{\"snapshotsToKeep\":1675068224,\"daysOfMonth\":\"psw\",\"hour\":2027239261,\"minute\":1070878319,\"usedBytes\":3305243407074909374},\"enabled\":true,\"provisioningState\":\"bemzqkzszuwi\"},\"location\":\"glxxhljfpgpic\",\"tags\":{\"frmbodthsqq\":\"zhrgmqgjsxvpqc\",\"xousxauzl\":\"vriibakclacjfr\",\"wohqfzizvu\":\"vsg\",\"vmribiat\":\"mmkjsvthnwpztek\"},\"id\":\"gplucfotangcfhny\",\"name\":\"zcugswvxwlmzqw\",\"type\":\"vtxnjmxmcuqud\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NetAppFilesManager manager = NetAppFilesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        SnapshotPolicy response = manager.snapshotPolicies()
            .getWithResponse("glqivbgkcv", "hpzvuqdflvoniyp", "pubcpzgpxtivhjk", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("glxxhljfpgpic", response.location());
        Assertions.assertEquals("zhrgmqgjsxvpqc", response.tags().get("frmbodthsqq"));
        Assertions.assertEquals(517414798, response.hourlySchedule().snapshotsToKeep());
        Assertions.assertEquals(2002912568, response.hourlySchedule().minute());
        Assertions.assertEquals(1894847131734717959L, response.hourlySchedule().usedBytes());
        Assertions.assertEquals(1307435225, response.dailySchedule().snapshotsToKeep());
        Assertions.assertEquals(1733167142, response.dailySchedule().hour());
        Assertions.assertEquals(1551621761, response.dailySchedule().minute());
        Assertions.assertEquals(453619823533094312L, response.dailySchedule().usedBytes());
        Assertions.assertEquals(1820552719, response.weeklySchedule().snapshotsToKeep());
        Assertions.assertEquals("dfuyd", response.weeklySchedule().day());
        Assertions.assertEquals(1783861602, response.weeklySchedule().hour());
        Assertions.assertEquals(506984335, response.weeklySchedule().minute());
        Assertions.assertEquals(718585270565089372L, response.weeklySchedule().usedBytes());
        Assertions.assertEquals(1675068224, response.monthlySchedule().snapshotsToKeep());
        Assertions.assertEquals("psw", response.monthlySchedule().daysOfMonth());
        Assertions.assertEquals(2027239261, response.monthlySchedule().hour());
        Assertions.assertEquals(1070878319, response.monthlySchedule().minute());
        Assertions.assertEquals(3305243407074909374L, response.monthlySchedule().usedBytes());
        Assertions.assertTrue(response.enabled());
    }
}
