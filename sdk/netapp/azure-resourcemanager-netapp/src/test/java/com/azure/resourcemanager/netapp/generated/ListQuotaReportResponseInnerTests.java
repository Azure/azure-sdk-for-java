// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.fluent.models.ListQuotaReportResponseInner;
import com.azure.resourcemanager.netapp.models.QuotaReport;
import com.azure.resourcemanager.netapp.models.Type;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ListQuotaReportResponseInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ListQuotaReportResponseInner model = BinaryData.fromString(
            "{\"value\":[{\"quotaType\":\"IndividualGroupQuota\",\"quotaTarget\":\"pomgkopkwhojvp\",\"quotaLimitUsedInKiBs\":4279032137659144852,\"quotaLimitTotalInKiBs\":8997316824402958697,\"percentageUsed\":90.659065,\"isDerivedQuota\":false},{\"quotaType\":\"DefaultGroupQuota\",\"quotaTarget\":\"qvmkcxo\",\"quotaLimitUsedInKiBs\":471020820536063690,\"quotaLimitTotalInKiBs\":5939290521556195540,\"percentageUsed\":34.474384,\"isDerivedQuota\":true},{\"quotaType\":\"DefaultUserQuota\",\"quotaTarget\":\"tddckcb\",\"quotaLimitUsedInKiBs\":5774593596555668768,\"quotaLimitTotalInKiBs\":1999500267063441667,\"percentageUsed\":58.71668,\"isDerivedQuota\":true},{\"quotaType\":\"DefaultUserQuota\",\"quotaTarget\":\"hos\",\"quotaLimitUsedInKiBs\":1466489575973148390,\"quotaLimitTotalInKiBs\":2817771375039124322,\"percentageUsed\":4.6601415,\"isDerivedQuota\":false}]}")
            .toObject(ListQuotaReportResponseInner.class);
        Assertions.assertEquals(Type.INDIVIDUAL_GROUP_QUOTA, model.value().get(0).quotaType());
        Assertions.assertEquals("pomgkopkwhojvp", model.value().get(0).quotaTarget());
        Assertions.assertEquals(4279032137659144852L, model.value().get(0).quotaLimitUsedInKiBs());
        Assertions.assertEquals(8997316824402958697L, model.value().get(0).quotaLimitTotalInKiBs());
        Assertions.assertEquals(90.659065F, model.value().get(0).percentageUsed());
        Assertions.assertFalse(model.value().get(0).isDerivedQuota());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ListQuotaReportResponseInner model = new ListQuotaReportResponseInner().withValue(Arrays.asList(
            new QuotaReport().withQuotaType(Type.INDIVIDUAL_GROUP_QUOTA)
                .withQuotaTarget("pomgkopkwhojvp")
                .withQuotaLimitUsedInKiBs(4279032137659144852L)
                .withQuotaLimitTotalInKiBs(8997316824402958697L)
                .withPercentageUsed(90.659065F)
                .withIsDerivedQuota(false),
            new QuotaReport().withQuotaType(Type.DEFAULT_GROUP_QUOTA)
                .withQuotaTarget("qvmkcxo")
                .withQuotaLimitUsedInKiBs(471020820536063690L)
                .withQuotaLimitTotalInKiBs(5939290521556195540L)
                .withPercentageUsed(34.474384F)
                .withIsDerivedQuota(true),
            new QuotaReport().withQuotaType(Type.DEFAULT_USER_QUOTA)
                .withQuotaTarget("tddckcb")
                .withQuotaLimitUsedInKiBs(5774593596555668768L)
                .withQuotaLimitTotalInKiBs(1999500267063441667L)
                .withPercentageUsed(58.71668F)
                .withIsDerivedQuota(true),
            new QuotaReport().withQuotaType(Type.DEFAULT_USER_QUOTA)
                .withQuotaTarget("hos")
                .withQuotaLimitUsedInKiBs(1466489575973148390L)
                .withQuotaLimitTotalInKiBs(2817771375039124322L)
                .withPercentageUsed(4.6601415F)
                .withIsDerivedQuota(false)));
        model = BinaryData.fromObject(model).toObject(ListQuotaReportResponseInner.class);
        Assertions.assertEquals(Type.INDIVIDUAL_GROUP_QUOTA, model.value().get(0).quotaType());
        Assertions.assertEquals("pomgkopkwhojvp", model.value().get(0).quotaTarget());
        Assertions.assertEquals(4279032137659144852L, model.value().get(0).quotaLimitUsedInKiBs());
        Assertions.assertEquals(8997316824402958697L, model.value().get(0).quotaLimitTotalInKiBs());
        Assertions.assertEquals(90.659065F, model.value().get(0).percentageUsed());
        Assertions.assertFalse(model.value().get(0).isDerivedQuota());
    }
}
