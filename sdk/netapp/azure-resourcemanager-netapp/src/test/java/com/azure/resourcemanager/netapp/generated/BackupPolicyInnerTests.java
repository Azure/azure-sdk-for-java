// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.fluent.models.BackupPolicyInner;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class BackupPolicyInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BackupPolicyInner model = BinaryData.fromString(
            "{\"etag\":\"ltiugcxnavv\",\"properties\":{\"backupPolicyId\":\"qiby\",\"provisioningState\":\"nyowxwlmdjrkvfg\",\"dailyBackupsToKeep\":1410181750,\"weeklyBackupsToKeep\":190287490,\"monthlyBackupsToKeep\":411565318,\"volumesAssigned\":1309639268,\"enabled\":true,\"volumeBackups\":[{\"volumeName\":\"j\",\"volumeResourceId\":\"hkr\",\"backupsCount\":268834532,\"policyEnabled\":false},{\"volumeName\":\"b\",\"volumeResourceId\":\"p\",\"backupsCount\":1566726508,\"policyEnabled\":false}]},\"location\":\"ndzwmkrefa\",\"tags\":{\"b\":\"orwkqnyh\",\"jivfxzsjabib\":\"j\",\"jxbkzbzkdvn\":\"ystawfsdjpvkvp\",\"zhjjklffhmouwq\":\"jabudurgkakmo\"},\"id\":\"gzrf\",\"name\":\"eeyebi\",\"type\":\"ikayuhqlbjbsybb\"}")
            .toObject(BackupPolicyInner.class);
        Assertions.assertEquals("ndzwmkrefa", model.location());
        Assertions.assertEquals("orwkqnyh", model.tags().get("b"));
        Assertions.assertEquals(1410181750, model.dailyBackupsToKeep());
        Assertions.assertEquals(190287490, model.weeklyBackupsToKeep());
        Assertions.assertEquals(411565318, model.monthlyBackupsToKeep());
        Assertions.assertTrue(model.enabled());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BackupPolicyInner model = new BackupPolicyInner().withLocation("ndzwmkrefa")
            .withTags(mapOf("b", "orwkqnyh", "jivfxzsjabib", "j", "jxbkzbzkdvn", "ystawfsdjpvkvp", "zhjjklffhmouwq",
                "jabudurgkakmo"))
            .withDailyBackupsToKeep(1410181750)
            .withWeeklyBackupsToKeep(190287490)
            .withMonthlyBackupsToKeep(411565318)
            .withEnabled(true);
        model = BinaryData.fromObject(model).toObject(BackupPolicyInner.class);
        Assertions.assertEquals("ndzwmkrefa", model.location());
        Assertions.assertEquals("orwkqnyh", model.tags().get("b"));
        Assertions.assertEquals(1410181750, model.dailyBackupsToKeep());
        Assertions.assertEquals(190287490, model.weeklyBackupsToKeep());
        Assertions.assertEquals(411565318, model.monthlyBackupsToKeep());
        Assertions.assertTrue(model.enabled());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
