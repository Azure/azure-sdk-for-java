// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.fluent.models.BackupPolicyInner;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class BackupPolicyInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BackupPolicyInner model = BinaryData.fromString(
            "{\"etag\":\"tjsyin\",\"properties\":{\"backupPolicyId\":\"fq\",\"provisioningState\":\"mtdh\",\"dailyBackupsToKeep\":709166537,\"weeklyBackupsToKeep\":1330472875,\"monthlyBackupsToKeep\":1700439966,\"volumesAssigned\":811019553,\"enabled\":false,\"volumeBackups\":[{\"volumeName\":\"w\",\"volumeResourceId\":\"irryuzhlh\",\"backupsCount\":904307607,\"policyEnabled\":false},{\"volumeName\":\"qqaatjinrvgou\",\"volumeResourceId\":\"fiibfggjioolvr\",\"backupsCount\":1483667739,\"policyEnabled\":true}]},\"location\":\"k\",\"tags\":{\"vblm\":\"qwjygvja\",\"byrqufeg\":\"vkzuhbxvvyhgso\",\"mctlpdngitv\":\"uvwzfbnh\",\"grhbpn\":\"bmhrixkwmyijejv\"},\"id\":\"ixexcc\",\"name\":\"dreaxh\",\"type\":\"exdrrvqahqkg\"}")
            .toObject(BackupPolicyInner.class);
        Assertions.assertEquals("k", model.location());
        Assertions.assertEquals("qwjygvja", model.tags().get("vblm"));
        Assertions.assertEquals(709166537, model.dailyBackupsToKeep());
        Assertions.assertEquals(1330472875, model.weeklyBackupsToKeep());
        Assertions.assertEquals(1700439966, model.monthlyBackupsToKeep());
        Assertions.assertEquals(false, model.enabled());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BackupPolicyInner model = new BackupPolicyInner().withLocation("k")
            .withTags(mapOf("vblm", "qwjygvja", "byrqufeg", "vkzuhbxvvyhgso", "mctlpdngitv", "uvwzfbnh", "grhbpn",
                "bmhrixkwmyijejv"))
            .withDailyBackupsToKeep(709166537)
            .withWeeklyBackupsToKeep(1330472875)
            .withMonthlyBackupsToKeep(1700439966)
            .withEnabled(false);
        model = BinaryData.fromObject(model).toObject(BackupPolicyInner.class);
        Assertions.assertEquals("k", model.location());
        Assertions.assertEquals("qwjygvja", model.tags().get("vblm"));
        Assertions.assertEquals(709166537, model.dailyBackupsToKeep());
        Assertions.assertEquals(1330472875, model.weeklyBackupsToKeep());
        Assertions.assertEquals(1700439966, model.monthlyBackupsToKeep());
        Assertions.assertEquals(false, model.enabled());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
