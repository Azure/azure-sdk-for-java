// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.fluent.models.BackupPolicyInner;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class BackupPolicyInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BackupPolicyInner model = BinaryData.fromString(
            "{\"etag\":\"s\",\"properties\":{\"backupPolicyId\":\"byrqufeg\",\"provisioningState\":\"vwz\",\"dailyBackupsToKeep\":700198802,\"weeklyBackupsToKeep\":1709616859,\"monthlyBackupsToKeep\":882366629,\"volumesAssigned\":171252991,\"enabled\":false,\"volumeBackups\":[{\"volumeName\":\"tvgbmhrixkwmy\",\"volumeResourceId\":\"ejvegrhbpnaixex\",\"backupsCount\":69108212,\"policyEnabled\":true},{\"volumeName\":\"ax\",\"volumeResourceId\":\"exdrrvqahqkg\",\"backupsCount\":1844170731,\"policyEnabled\":true}]},\"location\":\"nhyjsv\",\"tags\":{\"voowvr\":\"xzb\",\"qp\":\"mtg\",\"s\":\"y\"},\"id\":\"ronzmyhgfip\",\"name\":\"sxkm\",\"type\":\"waekrrjreafxtsgu\"}")
            .toObject(BackupPolicyInner.class);
        Assertions.assertEquals("nhyjsv", model.location());
        Assertions.assertEquals("xzb", model.tags().get("voowvr"));
        Assertions.assertEquals(700198802, model.dailyBackupsToKeep());
        Assertions.assertEquals(1709616859, model.weeklyBackupsToKeep());
        Assertions.assertEquals(882366629, model.monthlyBackupsToKeep());
        Assertions.assertEquals(false, model.enabled());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BackupPolicyInner model = new BackupPolicyInner().withLocation("nhyjsv")
            .withTags(mapOf("voowvr", "xzb", "qp", "mtg", "s", "y"))
            .withDailyBackupsToKeep(700198802)
            .withWeeklyBackupsToKeep(1709616859)
            .withMonthlyBackupsToKeep(882366629)
            .withEnabled(false);
        model = BinaryData.fromObject(model).toObject(BackupPolicyInner.class);
        Assertions.assertEquals("nhyjsv", model.location());
        Assertions.assertEquals("xzb", model.tags().get("voowvr"));
        Assertions.assertEquals(700198802, model.dailyBackupsToKeep());
        Assertions.assertEquals(1709616859, model.weeklyBackupsToKeep());
        Assertions.assertEquals(882366629, model.monthlyBackupsToKeep());
        Assertions.assertEquals(false, model.enabled());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
