// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.fluent.models.BackupPolicyInner;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class BackupPolicyInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BackupPolicyInner model = BinaryData.fromString(
            "{\"etag\":\"dxggicccnxqhuexm\",\"properties\":{\"backupPolicyId\":\"tlstvlzywem\",\"provisioningState\":\"rncsdtclu\",\"dailyBackupsToKeep\":2121256273,\"weeklyBackupsToKeep\":1137275627,\"monthlyBackupsToKeep\":1674447280,\"volumesAssigned\":1861224364,\"enabled\":false,\"volumeBackups\":[{\"volumeName\":\"feadcygq\",\"volumeResourceId\":\"yhejhzisxgfp\",\"backupsCount\":1351567723,\"policyEnabled\":false}]},\"location\":\"vk\",\"tags\":{\"swibyr\":\"qvujzraehtwdwrf\",\"h\":\"dl\",\"khevxccedc\":\"hfwpracstwit\",\"jc\":\"nmdyodnwzxl\"},\"id\":\"nhltiugcxn\",\"name\":\"vvwxqi\",\"type\":\"y\"}")
            .toObject(BackupPolicyInner.class);
        Assertions.assertEquals("vk", model.location());
        Assertions.assertEquals("qvujzraehtwdwrf", model.tags().get("swibyr"));
        Assertions.assertEquals(2121256273, model.dailyBackupsToKeep());
        Assertions.assertEquals(1137275627, model.weeklyBackupsToKeep());
        Assertions.assertEquals(1674447280, model.monthlyBackupsToKeep());
        Assertions.assertFalse(model.enabled());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BackupPolicyInner model = new BackupPolicyInner().withLocation("vk")
            .withTags(mapOf("swibyr", "qvujzraehtwdwrf", "h", "dl", "khevxccedc", "hfwpracstwit", "jc", "nmdyodnwzxl"))
            .withDailyBackupsToKeep(2121256273)
            .withWeeklyBackupsToKeep(1137275627)
            .withMonthlyBackupsToKeep(1674447280)
            .withEnabled(false);
        model = BinaryData.fromObject(model).toObject(BackupPolicyInner.class);
        Assertions.assertEquals("vk", model.location());
        Assertions.assertEquals("qvujzraehtwdwrf", model.tags().get("swibyr"));
        Assertions.assertEquals(2121256273, model.dailyBackupsToKeep());
        Assertions.assertEquals(1137275627, model.weeklyBackupsToKeep());
        Assertions.assertEquals(1674447280, model.monthlyBackupsToKeep());
        Assertions.assertFalse(model.enabled());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
