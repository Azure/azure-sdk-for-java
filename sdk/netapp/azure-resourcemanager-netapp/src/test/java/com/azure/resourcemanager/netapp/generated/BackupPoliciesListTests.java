// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.fluent.models.BackupPolicyInner;
import com.azure.resourcemanager.netapp.models.BackupPoliciesList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class BackupPoliciesListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BackupPoliciesList model = BinaryData.fromString(
            "{\"value\":[{\"etag\":\"wuggwolu\",\"properties\":{\"backupPolicyId\":\"zbwemh\",\"provisioningState\":\"rsbrgzdwm\",\"dailyBackupsToKeep\":1592939681,\"weeklyBackupsToKeep\":827255205,\"monthlyBackupsToKeep\":101691596,\"volumesAssigned\":1924597046,\"enabled\":true,\"volumeBackups\":[{\"volumeName\":\"cnxqhuexmkttlst\",\"volumeResourceId\":\"zywemhzrncsdtclu\",\"backupsCount\":2121256273,\"policyEnabled\":true},{\"volumeName\":\"fgytguslfeadcyg\",\"volumeResourceId\":\"kyhejhzisxgf\",\"backupsCount\":843863757,\"policyEnabled\":true},{\"volumeName\":\"pv\",\"volumeResourceId\":\"r\",\"backupsCount\":500405809,\"policyEnabled\":true},{\"volumeName\":\"raehtwdwrft\",\"volumeResourceId\":\"iby\",\"backupsCount\":403427600,\"policyEnabled\":true}]},\"location\":\"shfwpracstwity\",\"tags\":{\"md\":\"vxccedcp\",\"zxltjcvn\":\"odn\",\"xqi\":\"ltiugcxnavv\"},\"id\":\"y\",\"name\":\"unyowxwl\",\"type\":\"djrkvfgbvfvpd\"},{\"etag\":\"daciz\",\"properties\":{\"backupPolicyId\":\"q\",\"provisioningState\":\"krribdeibqi\",\"dailyBackupsToKeep\":840101476,\"weeklyBackupsToKeep\":2080529192,\"monthlyBackupsToKeep\":1573874006,\"volumesAssigned\":1070567995,\"enabled\":false,\"volumeBackups\":[{\"volumeName\":\"efajpj\",\"volumeResourceId\":\"wkqnyhg\",\"backupsCount\":132694968,\"policyEnabled\":true},{\"volumeName\":\"vfxzsjab\",\"volumeResourceId\":\"systawfsdjp\",\"backupsCount\":387671304,\"policyEnabled\":true},{\"volumeName\":\"xbkzbzkdvncj\",\"volumeResourceId\":\"udurgkakmokz\",\"backupsCount\":523614486,\"policyEnabled\":true}]},\"location\":\"fhmouwq\",\"tags\":{\"bizikayuhq\":\"rfzeey\",\"wrv\":\"bjbsybb\"},\"id\":\"ldgmfpgvmpip\",\"name\":\"slthaq\",\"type\":\"x\"},{\"etag\":\"mwutwbdsre\",\"properties\":{\"backupPolicyId\":\"drhneuyow\",\"provisioningState\":\"d\",\"dailyBackupsToKeep\":110101001,\"weeklyBackupsToKeep\":174588693,\"monthlyBackupsToKeep\":431891008,\"volumesAssigned\":909535969,\"enabled\":true,\"volumeBackups\":[{\"volumeName\":\"pzimejzanlfzxi\",\"volumeResourceId\":\"rmbzo\",\"backupsCount\":1274938421,\"policyEnabled\":true},{\"volumeName\":\"jq\",\"volumeResourceId\":\"rgz\",\"backupsCount\":259037414,\"policyEnabled\":true},{\"volumeName\":\"szrnwo\",\"volumeResourceId\":\"ndfpwpj\",\"backupsCount\":1007403747,\"policyEnabled\":true}]},\"location\":\"h\",\"tags\":{\"zfjvfbgofe\":\"jcdh\"},\"id\":\"jagrqmqhldvr\",\"name\":\"iiojnal\",\"type\":\"hfkvtvsexsowuel\"}]}")
            .toObject(BackupPoliciesList.class);
        Assertions.assertEquals("shfwpracstwity", model.value().get(0).location());
        Assertions.assertEquals("vxccedcp", model.value().get(0).tags().get("md"));
        Assertions.assertEquals(1592939681, model.value().get(0).dailyBackupsToKeep());
        Assertions.assertEquals(827255205, model.value().get(0).weeklyBackupsToKeep());
        Assertions.assertEquals(101691596, model.value().get(0).monthlyBackupsToKeep());
        Assertions.assertEquals(true, model.value().get(0).enabled());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BackupPoliciesList model = new BackupPoliciesList().withValue(Arrays.asList(
            new BackupPolicyInner().withLocation("shfwpracstwity")
                .withTags(mapOf("md", "vxccedcp", "zxltjcvn", "odn", "xqi", "ltiugcxnavv"))
                .withDailyBackupsToKeep(1592939681)
                .withWeeklyBackupsToKeep(827255205)
                .withMonthlyBackupsToKeep(101691596)
                .withEnabled(true),
            new BackupPolicyInner().withLocation("fhmouwq")
                .withTags(mapOf("bizikayuhq", "rfzeey", "wrv", "bjbsybb"))
                .withDailyBackupsToKeep(840101476)
                .withWeeklyBackupsToKeep(2080529192)
                .withMonthlyBackupsToKeep(1573874006)
                .withEnabled(false),
            new BackupPolicyInner().withLocation("h")
                .withTags(mapOf("zfjvfbgofe", "jcdh"))
                .withDailyBackupsToKeep(110101001)
                .withWeeklyBackupsToKeep(174588693)
                .withMonthlyBackupsToKeep(431891008)
                .withEnabled(true)));
        model = BinaryData.fromObject(model).toObject(BackupPoliciesList.class);
        Assertions.assertEquals("shfwpracstwity", model.value().get(0).location());
        Assertions.assertEquals("vxccedcp", model.value().get(0).tags().get("md"));
        Assertions.assertEquals(1592939681, model.value().get(0).dailyBackupsToKeep());
        Assertions.assertEquals(827255205, model.value().get(0).weeklyBackupsToKeep());
        Assertions.assertEquals(101691596, model.value().get(0).monthlyBackupsToKeep());
        Assertions.assertEquals(true, model.value().get(0).enabled());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
