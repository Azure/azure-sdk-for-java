// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.fluent.models.BackupPolicyInner;
import com.azure.resourcemanager.netapp.models.BackupPoliciesList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class BackupPoliciesListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BackupPoliciesList model = BinaryData.fromString(
            "{\"value\":[{\"etag\":\"lw\",\"properties\":{\"backupPolicyId\":\"ztzp\",\"provisioningState\":\"ncckw\",\"dailyBackupsToKeep\":2069096730,\"weeklyBackupsToKeep\":407754161,\"monthlyBackupsToKeep\":1576078570,\"volumesAssigned\":722524915,\"enabled\":false,\"volumeBackups\":[{\"volumeName\":\"zfeqztppri\",\"volumeResourceId\":\"xorjaltolmncwsob\",\"backupsCount\":981854920,\"policyEnabled\":false}]},\"location\":\"nwdcfhu\",\"tags\":{\"vxb\":\"pfuvglsbjjca\",\"udutnco\":\"t\"},\"id\":\"mr\",\"name\":\"xqtvcofu\",\"type\":\"f\"},{\"etag\":\"kgjubgdknnqvsazn\",\"properties\":{\"backupPolicyId\":\"tor\",\"provisioningState\":\"sgsahmkycgr\",\"dailyBackupsToKeep\":1064161892,\"weeklyBackupsToKeep\":1286362135,\"monthlyBackupsToKeep\":515836708,\"volumesAssigned\":1169859080,\"enabled\":false,\"volumeBackups\":[{\"volumeName\":\"dmovsm\",\"volumeResourceId\":\"xwabmqoe\",\"backupsCount\":1641212216,\"policyEnabled\":false}]},\"location\":\"tpuqujmq\",\"tags\":{\"jcntuj\":\"fbtndoaong\",\"ftwwaezkojvdc\":\"tcje\",\"gszufoxciqopid\":\"zfoqouicybxar\",\"hkh\":\"amcio\"},\"id\":\"zxkhnzbonlwnto\",\"name\":\"gokdwbwhks\",\"type\":\"zcmrvexztvb\"},{\"etag\":\"gsfraoyzkoow\",\"properties\":{\"backupPolicyId\":\"mnguxawqaldsyu\",\"provisioningState\":\"imerqfobwyznk\",\"dailyBackupsToKeep\":1383706321,\"weeklyBackupsToKeep\":189482477,\"monthlyBackupsToKeep\":2069495604,\"volumesAssigned\":1229081734,\"enabled\":false,\"volumeBackups\":[{\"volumeName\":\"r\",\"volumeResourceId\":\"dsnfdsdoakgtdl\",\"backupsCount\":1535187364,\"policyEnabled\":false}]},\"location\":\"dlhewp\",\"tags\":{\"dcngqqmoakufgmj\":\"sttwvogvbbe\",\"grtwae\":\"rwr\"},\"id\":\"u\",\"name\":\"zkopb\",\"type\":\"inrfdwoyu\"}]}")
            .toObject(BackupPoliciesList.class);
        Assertions.assertEquals("nwdcfhu", model.value().get(0).location());
        Assertions.assertEquals("pfuvglsbjjca", model.value().get(0).tags().get("vxb"));
        Assertions.assertEquals(2069096730, model.value().get(0).dailyBackupsToKeep());
        Assertions.assertEquals(407754161, model.value().get(0).weeklyBackupsToKeep());
        Assertions.assertEquals(1576078570, model.value().get(0).monthlyBackupsToKeep());
        Assertions.assertEquals(false, model.value().get(0).enabled());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BackupPoliciesList model = new BackupPoliciesList().withValue(Arrays.asList(
            new BackupPolicyInner().withLocation("nwdcfhu")
                .withTags(mapOf("vxb", "pfuvglsbjjca", "udutnco", "t"))
                .withDailyBackupsToKeep(2069096730)
                .withWeeklyBackupsToKeep(407754161)
                .withMonthlyBackupsToKeep(1576078570)
                .withEnabled(false),
            new BackupPolicyInner().withLocation("tpuqujmq")
                .withTags(mapOf("jcntuj", "fbtndoaong", "ftwwaezkojvdc", "tcje", "gszufoxciqopid", "zfoqouicybxar",
                    "hkh", "amcio"))
                .withDailyBackupsToKeep(1064161892)
                .withWeeklyBackupsToKeep(1286362135)
                .withMonthlyBackupsToKeep(515836708)
                .withEnabled(false),
            new BackupPolicyInner().withLocation("dlhewp")
                .withTags(mapOf("dcngqqmoakufgmj", "sttwvogvbbe", "grtwae", "rwr"))
                .withDailyBackupsToKeep(1383706321)
                .withWeeklyBackupsToKeep(189482477)
                .withMonthlyBackupsToKeep(2069495604)
                .withEnabled(false)));
        model = BinaryData.fromObject(model).toObject(BackupPoliciesList.class);
        Assertions.assertEquals("nwdcfhu", model.value().get(0).location());
        Assertions.assertEquals("pfuvglsbjjca", model.value().get(0).tags().get("vxb"));
        Assertions.assertEquals(2069096730, model.value().get(0).dailyBackupsToKeep());
        Assertions.assertEquals(407754161, model.value().get(0).weeklyBackupsToKeep());
        Assertions.assertEquals(1576078570, model.value().get(0).monthlyBackupsToKeep());
        Assertions.assertEquals(false, model.value().get(0).enabled());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
