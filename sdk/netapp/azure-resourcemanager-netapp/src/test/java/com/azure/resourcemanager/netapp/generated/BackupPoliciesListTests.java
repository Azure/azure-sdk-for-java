// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.fluent.models.BackupPolicyInner;
import com.azure.resourcemanager.netapp.models.BackupPoliciesList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class BackupPoliciesListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BackupPoliciesList model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"etag\":\"nqicvinvkjjxdxrb\",\"properties\":{\"backupPolicyId\":\"kzclewyh\",\"provisioningState\":\"wp\",\"dailyBackupsToKeep\":1363862891,\"weeklyBackupsToKeep\":1765730251,\"monthlyBackupsToKeep\":437728645,\"volumesAssigned\":1425896475,\"enabled\":true,\"volumeBackups\":[{\"volumeName\":\"zqwhxxbuyqaxzfeq\",\"backupsCount\":1560492687,\"policyEnabled\":true},{\"volumeName\":\"o\",\"backupsCount\":411799174,\"policyEnabled\":true},{\"volumeName\":\"lt\",\"backupsCount\":1325987050,\"policyEnabled\":true}]},\"location\":\"sobqw\",\"tags\":{\"cqdpfuv\":\"bnwdcfh\"},\"id\":\"lsbjjcanvxbv\",\"name\":\"vudutncor\",\"type\":\"r\"}]}")
                .toObject(BackupPoliciesList.class);
        Assertions.assertEquals("sobqw", model.value().get(0).location());
        Assertions.assertEquals("bnwdcfh", model.value().get(0).tags().get("cqdpfuv"));
        Assertions.assertEquals(1363862891, model.value().get(0).dailyBackupsToKeep());
        Assertions.assertEquals(1765730251, model.value().get(0).weeklyBackupsToKeep());
        Assertions.assertEquals(437728645, model.value().get(0).monthlyBackupsToKeep());
        Assertions.assertEquals(true, model.value().get(0).enabled());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BackupPoliciesList model =
            new BackupPoliciesList()
                .withValue(
                    Arrays
                        .asList(
                            new BackupPolicyInner()
                                .withLocation("sobqw")
                                .withTags(mapOf("cqdpfuv", "bnwdcfh"))
                                .withDailyBackupsToKeep(1363862891)
                                .withWeeklyBackupsToKeep(1765730251)
                                .withMonthlyBackupsToKeep(437728645)
                                .withEnabled(true)));
        model = BinaryData.fromObject(model).toObject(BackupPoliciesList.class);
        Assertions.assertEquals("sobqw", model.value().get(0).location());
        Assertions.assertEquals("bnwdcfh", model.value().get(0).tags().get("cqdpfuv"));
        Assertions.assertEquals(1363862891, model.value().get(0).dailyBackupsToKeep());
        Assertions.assertEquals(1765730251, model.value().get(0).weeklyBackupsToKeep());
        Assertions.assertEquals(437728645, model.value().get(0).monthlyBackupsToKeep());
        Assertions.assertEquals(true, model.value().get(0).enabled());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
