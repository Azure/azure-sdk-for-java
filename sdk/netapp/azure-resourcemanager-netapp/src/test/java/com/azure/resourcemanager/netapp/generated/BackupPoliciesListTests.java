// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.fluent.models.BackupPolicyInner;
import com.azure.resourcemanager.netapp.models.BackupPoliciesList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class BackupPoliciesListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BackupPoliciesList model = BinaryData.fromString(
            "{\"value\":[{\"etag\":\"kzbzkdvncjabudu\",\"properties\":{\"backupPolicyId\":\"kakmokzh\",\"provisioningState\":\"klff\",\"dailyBackupsToKeep\":783879068,\"weeklyBackupsToKeep\":1693315821,\"monthlyBackupsToKeep\":727969276,\"volumesAssigned\":1175300996,\"enabled\":true,\"volumeBackups\":[{\"volumeName\":\"yebizikayuh\",\"volumeResourceId\":\"bjbsybb\",\"backupsCount\":140703725,\"policyEnabled\":false},{\"volumeName\":\"dgmfpgvmpipasl\",\"volumeResourceId\":\"aqfxss\",\"backupsCount\":236380813,\"policyEnabled\":false}]},\"location\":\"dsrezpdrhneuyow\",\"tags\":{\"sibircgpi\":\"wyt\"},\"id\":\"pzimejzanlfzxi\",\"name\":\"vrmbzono\",\"type\":\"i\"},{\"etag\":\"jq\",\"properties\":{\"backupPolicyId\":\"rgz\",\"provisioningState\":\"rlazszrnw\",\"dailyBackupsToKeep\":409653705,\"weeklyBackupsToKeep\":1988160983,\"monthlyBackupsToKeep\":618267634,\"volumesAssigned\":506888609,\"enabled\":true,\"volumeBackups\":[{\"volumeName\":\"tlhflsjcdhszf\",\"volumeResourceId\":\"fbgofeljagrqmqh\",\"backupsCount\":1366830771,\"policyEnabled\":true},{\"volumeName\":\"iojnalghfkvtv\",\"volumeResourceId\":\"xsowu\",\"backupsCount\":750613603,\"policyEnabled\":true},{\"volumeName\":\"ahhxvrh\",\"volumeResourceId\":\"kwpjgwwspughftqs\",\"backupsCount\":757221546,\"policyEnabled\":true}]},\"location\":\"xukndxdigr\",\"tags\":{\"fi\":\"ufzdmsyq\",\"phoszqz\":\"whbotzingamv\",\"kfwynw\":\"dphqamv\",\"tnvyqiatkzwp\":\"vtbvkayh\"},\"id\":\"npwzcjaes\",\"name\":\"vvsccyajguq\",\"type\":\"hwyg\"},{\"etag\":\"vdnkfxusem\",\"properties\":{\"backupPolicyId\":\"zrmuhapfcqdps\",\"provisioningState\":\"qvpsvuoymg\",\"dailyBackupsToKeep\":182894224,\"weeklyBackupsToKeep\":1049949782,\"monthlyBackupsToKeep\":1867412181,\"volumesAssigned\":808786975,\"enabled\":true,\"volumeBackups\":[{\"volumeName\":\"eokerqwkyhkobopg\",\"volumeResourceId\":\"dkow\",\"backupsCount\":818081451,\"policyEnabled\":false}]},\"location\":\"rfkbwccsnjvcdwxl\",\"tags\":{\"wfqatmtd\":\"kftnkhtjsyin\",\"ywkbirryuzhlhkjo\":\"tmdvypgikdgs\",\"nrvgoupmfiibfgg\":\"rvqqaatj\"},\"id\":\"ioolvrwxkvtkkgll\",\"name\":\"wjygvjayvblmhvk\",\"type\":\"uhbxvvy\"}]}")
            .toObject(BackupPoliciesList.class);
        Assertions.assertEquals("dsrezpdrhneuyow", model.value().get(0).location());
        Assertions.assertEquals("wyt", model.value().get(0).tags().get("sibircgpi"));
        Assertions.assertEquals(783879068, model.value().get(0).dailyBackupsToKeep());
        Assertions.assertEquals(1693315821, model.value().get(0).weeklyBackupsToKeep());
        Assertions.assertEquals(727969276, model.value().get(0).monthlyBackupsToKeep());
        Assertions.assertEquals(true, model.value().get(0).enabled());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BackupPoliciesList model = new BackupPoliciesList().withValue(Arrays.asList(
            new BackupPolicyInner().withLocation("dsrezpdrhneuyow")
                .withTags(mapOf("sibircgpi", "wyt"))
                .withDailyBackupsToKeep(783879068)
                .withWeeklyBackupsToKeep(1693315821)
                .withMonthlyBackupsToKeep(727969276)
                .withEnabled(true),
            new BackupPolicyInner().withLocation("xukndxdigr")
                .withTags(
                    mapOf("fi", "ufzdmsyq", "phoszqz", "whbotzingamv", "kfwynw", "dphqamv", "tnvyqiatkzwp", "vtbvkayh"))
                .withDailyBackupsToKeep(409653705)
                .withWeeklyBackupsToKeep(1988160983)
                .withMonthlyBackupsToKeep(618267634)
                .withEnabled(true),
            new BackupPolicyInner().withLocation("rfkbwccsnjvcdwxl")
                .withTags(mapOf("wfqatmtd", "kftnkhtjsyin", "ywkbirryuzhlhkjo", "tmdvypgikdgs", "nrvgoupmfiibfgg",
                    "rvqqaatj"))
                .withDailyBackupsToKeep(182894224)
                .withWeeklyBackupsToKeep(1049949782)
                .withMonthlyBackupsToKeep(1867412181)
                .withEnabled(true)));
        model = BinaryData.fromObject(model).toObject(BackupPoliciesList.class);
        Assertions.assertEquals("dsrezpdrhneuyow", model.value().get(0).location());
        Assertions.assertEquals("wyt", model.value().get(0).tags().get("sibircgpi"));
        Assertions.assertEquals(783879068, model.value().get(0).dailyBackupsToKeep());
        Assertions.assertEquals(1693315821, model.value().get(0).weeklyBackupsToKeep());
        Assertions.assertEquals(727969276, model.value().get(0).monthlyBackupsToKeep());
        Assertions.assertEquals(true, model.value().get(0).enabled());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
