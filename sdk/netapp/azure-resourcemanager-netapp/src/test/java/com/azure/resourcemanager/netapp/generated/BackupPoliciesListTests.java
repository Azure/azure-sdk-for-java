// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.fluent.models.BackupPolicyInner;
import com.azure.resourcemanager.netapp.models.BackupPoliciesList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class BackupPoliciesListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BackupPoliciesList model = BinaryData.fromString(
            "{\"value\":[{\"etag\":\"ikayuhqlbjbsybb\",\"properties\":{\"backupPolicyId\":\"r\",\"provisioningState\":\"ldgmfpgvmpip\",\"dailyBackupsToKeep\":1000390440,\"weeklyBackupsToKeep\":753407395,\"monthlyBackupsToKeep\":522033644,\"volumesAssigned\":178976731,\"enabled\":true,\"volumeBackups\":[{\"volumeName\":\"twbdsrezpdrhn\",\"volumeResourceId\":\"yowqkdwytisibir\",\"backupsCount\":1229797985,\"policyEnabled\":false},{\"volumeName\":\"zimejzanlfzx\",\"volumeResourceId\":\"vrmbzono\",\"backupsCount\":1961298292,\"policyEnabled\":false},{\"volumeName\":\"cirgzp\",\"volumeResourceId\":\"lazszrn\",\"backupsCount\":755855856,\"policyEnabled\":false}]},\"location\":\"fpwpjylwbt\",\"tags\":{\"dhszfjv\":\"lsj\",\"qmqhldvriii\":\"bgofeljag\"},\"id\":\"jnalghf\",\"name\":\"vtvsexsowueluq\",\"type\":\"hahhxvrhmzkwpj\"},{\"etag\":\"wspughftqsxhqx\",\"properties\":{\"backupPolicyId\":\"xukndxdigr\",\"provisioningState\":\"uufzdmsyqtfihw\",\"dailyBackupsToKeep\":970693674,\"weeklyBackupsToKeep\":110136090,\"monthlyBackupsToKeep\":562718876,\"volumesAssigned\":1709728841,\"enabled\":false,\"volumeBackups\":[{\"volumeName\":\"o\",\"volumeResourceId\":\"qzudphq\",\"backupsCount\":1375292829,\"policyEnabled\":false},{\"volumeName\":\"wynwcvtbvkayhm\",\"volumeResourceId\":\"vyqia\",\"backupsCount\":1548045664,\"policyEnabled\":false}]},\"location\":\"npwzcjaes\",\"tags\":{\"wygzlvdnkfxusem\":\"sccyajguqf\"},\"id\":\"wzrmuh\",\"name\":\"pfcqdp\",\"type\":\"qxqvpsvuoymgc\"},{\"etag\":\"lvez\",\"properties\":{\"backupPolicyId\":\"pqlmfe\",\"provisioningState\":\"erqwkyhkobopg\",\"dailyBackupsToKeep\":899879665,\"weeklyBackupsToKeep\":1041237961,\"monthlyBackupsToKeep\":615107136,\"volumesAssigned\":818081451,\"enabled\":false,\"volumeBackups\":[{\"volumeName\":\"kbwcc\",\"volumeResourceId\":\"jvcdwxlpqekf\",\"backupsCount\":839437170,\"policyEnabled\":false},{\"volumeName\":\"syingwfqatmtdht\",\"volumeResourceId\":\"vypgikdg\",\"backupsCount\":2142197435,\"policyEnabled\":false},{\"volumeName\":\"irryuzhlh\",\"volumeResourceId\":\"oqrvqqaatjin\",\"backupsCount\":634846959,\"policyEnabled\":true},{\"volumeName\":\"mfiibfggj\",\"volumeResourceId\":\"olvrw\",\"backupsCount\":148831092,\"policyEnabled\":false}]},\"location\":\"gllqwjy\",\"tags\":{\"vyhgs\":\"ayvblmhvkzuhbx\",\"wz\":\"pbyrqufegxu\",\"l\":\"bnhlmc\"},\"id\":\"dn\",\"name\":\"itvgbmhrixkwm\",\"type\":\"ijejvegrhbpn\"}]}")
            .toObject(BackupPoliciesList.class);
        Assertions.assertEquals("fpwpjylwbt", model.value().get(0).location());
        Assertions.assertEquals("lsj", model.value().get(0).tags().get("dhszfjv"));
        Assertions.assertEquals(1000390440, model.value().get(0).dailyBackupsToKeep());
        Assertions.assertEquals(753407395, model.value().get(0).weeklyBackupsToKeep());
        Assertions.assertEquals(522033644, model.value().get(0).monthlyBackupsToKeep());
        Assertions.assertTrue(model.value().get(0).enabled());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BackupPoliciesList model = new BackupPoliciesList().withValue(Arrays.asList(
            new BackupPolicyInner().withLocation("fpwpjylwbt")
                .withTags(mapOf("dhszfjv", "lsj", "qmqhldvriii", "bgofeljag"))
                .withDailyBackupsToKeep(1000390440)
                .withWeeklyBackupsToKeep(753407395)
                .withMonthlyBackupsToKeep(522033644)
                .withEnabled(true),
            new BackupPolicyInner().withLocation("npwzcjaes")
                .withTags(mapOf("wygzlvdnkfxusem", "sccyajguqf"))
                .withDailyBackupsToKeep(970693674)
                .withWeeklyBackupsToKeep(110136090)
                .withMonthlyBackupsToKeep(562718876)
                .withEnabled(false),
            new BackupPolicyInner().withLocation("gllqwjy")
                .withTags(mapOf("vyhgs", "ayvblmhvkzuhbx", "wz", "pbyrqufegxu", "l", "bnhlmc"))
                .withDailyBackupsToKeep(899879665)
                .withWeeklyBackupsToKeep(1041237961)
                .withMonthlyBackupsToKeep(615107136)
                .withEnabled(false)));
        model = BinaryData.fromObject(model).toObject(BackupPoliciesList.class);
        Assertions.assertEquals("fpwpjylwbt", model.value().get(0).location());
        Assertions.assertEquals("lsj", model.value().get(0).tags().get("dhszfjv"));
        Assertions.assertEquals(1000390440, model.value().get(0).dailyBackupsToKeep());
        Assertions.assertEquals(753407395, model.value().get(0).weeklyBackupsToKeep());
        Assertions.assertEquals(522033644, model.value().get(0).monthlyBackupsToKeep());
        Assertions.assertTrue(model.value().get(0).enabled());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
