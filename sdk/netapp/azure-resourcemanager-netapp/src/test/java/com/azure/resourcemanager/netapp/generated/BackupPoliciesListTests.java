// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.fluent.models.BackupPolicyInner;
import com.azure.resourcemanager.netapp.models.BackupPoliciesList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class BackupPoliciesListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BackupPoliciesList model = BinaryData.fromString(
            "{\"value\":[{\"etag\":\"ab\",\"properties\":{\"backupPolicyId\":\"oefki\",\"provisioningState\":\"vtpuqujmqlgk\",\"dailyBackupsToKeep\":604272323,\"weeklyBackupsToKeep\":1252448159,\"monthlyBackupsToKeep\":1601819937,\"volumesAssigned\":146248988,\"enabled\":true,\"volumeBackups\":[{\"volumeName\":\"tujitcjedft\",\"volumeResourceId\":\"ae\",\"backupsCount\":565058049,\"policyEnabled\":false}]},\"location\":\"c\",\"tags\":{\"oxciqopidoamcio\":\"oqouicybxarzgszu\",\"zxkhnzbonlwnto\":\"hkh\",\"zcmrvexztvb\":\"gokdwbwhks\"},\"id\":\"qgsfraoyzkoow\",\"name\":\"lmnguxaw\",\"type\":\"aldsy\"},{\"etag\":\"ximerqfobwyznk\",\"properties\":{\"backupPolicyId\":\"kutwpf\",\"provisioningState\":\"a\",\"dailyBackupsToKeep\":71172193,\"weeklyBackupsToKeep\":1165571898,\"monthlyBackupsToKeep\":1595958724,\"volumesAssigned\":803916344,\"enabled\":true,\"volumeBackups\":[{\"volumeName\":\"akgtdlmkkzevdlh\",\"volumeResourceId\":\"pusdstt\",\"backupsCount\":1072941550,\"policyEnabled\":true},{\"volumeName\":\"bejdcn\",\"volumeResourceId\":\"qmoa\",\"backupsCount\":840228808,\"policyEnabled\":false},{\"volumeName\":\"zr\",\"volumeResourceId\":\"dgrtwaenuuzkopbm\",\"backupsCount\":1777677122,\"policyEnabled\":true},{\"volumeName\":\"oyuhhziui\",\"volumeResourceId\":\"ozbhdmsmlmzq\",\"backupsCount\":280296096,\"policyEnabled\":false}]},\"location\":\"ae\",\"tags\":{\"icslfaoq\":\"ah\",\"kaivwit\":\"piyylhalnswhccsp\"},\"id\":\"scywuggwoluhc\",\"name\":\"bwemhairs\",\"type\":\"rgzdwmsweyp\"}]}")
            .toObject(BackupPoliciesList.class);
        Assertions.assertEquals("c", model.value().get(0).location());
        Assertions.assertEquals("oqouicybxarzgszu", model.value().get(0).tags().get("oxciqopidoamcio"));
        Assertions.assertEquals(604272323, model.value().get(0).dailyBackupsToKeep());
        Assertions.assertEquals(1252448159, model.value().get(0).weeklyBackupsToKeep());
        Assertions.assertEquals(1601819937, model.value().get(0).monthlyBackupsToKeep());
        Assertions.assertTrue(model.value().get(0).enabled());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BackupPoliciesList model
            = new BackupPoliciesList().withValue(Arrays.asList(
                new BackupPolicyInner().withLocation("c")
                    .withTags(mapOf("oxciqopidoamcio", "oqouicybxarzgszu", "zxkhnzbonlwnto", "hkh", "zcmrvexztvb",
                        "gokdwbwhks"))
                    .withDailyBackupsToKeep(604272323)
                    .withWeeklyBackupsToKeep(1252448159)
                    .withMonthlyBackupsToKeep(1601819937)
                    .withEnabled(true),
                new BackupPolicyInner().withLocation("ae")
                    .withTags(mapOf("icslfaoq", "ah", "kaivwit", "piyylhalnswhccsp"))
                    .withDailyBackupsToKeep(71172193)
                    .withWeeklyBackupsToKeep(1165571898)
                    .withMonthlyBackupsToKeep(1595958724)
                    .withEnabled(true)));
        model = BinaryData.fromObject(model).toObject(BackupPoliciesList.class);
        Assertions.assertEquals("c", model.value().get(0).location());
        Assertions.assertEquals("oqouicybxarzgszu", model.value().get(0).tags().get("oxciqopidoamcio"));
        Assertions.assertEquals(604272323, model.value().get(0).dailyBackupsToKeep());
        Assertions.assertEquals(1252448159, model.value().get(0).weeklyBackupsToKeep());
        Assertions.assertEquals(1601819937, model.value().get(0).monthlyBackupsToKeep());
        Assertions.assertTrue(model.value().get(0).enabled());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
