// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.models.QuotaReport;
import com.azure.resourcemanager.netapp.models.Type;
import org.junit.jupiter.api.Assertions;

public final class QuotaReportTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        QuotaReport model = BinaryData.fromString(
            "{\"quotaType\":\"DefaultUserQuota\",\"quotaTarget\":\"qyib\",\"quotaLimitUsedInKiBs\":8539790193753290872,\"quotaLimitTotalInKiBs\":3859662575119335920,\"percentageUsed\":88.90607,\"isDerivedQuota\":true}")
            .toObject(QuotaReport.class);
        Assertions.assertEquals(Type.DEFAULT_USER_QUOTA, model.quotaType());
        Assertions.assertEquals("qyib", model.quotaTarget());
        Assertions.assertEquals(8539790193753290872L, model.quotaLimitUsedInKiBs());
        Assertions.assertEquals(3859662575119335920L, model.quotaLimitTotalInKiBs());
        Assertions.assertEquals(88.90607F, model.percentageUsed());
        Assertions.assertTrue(model.isDerivedQuota());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        QuotaReport model = new QuotaReport().withQuotaType(Type.DEFAULT_USER_QUOTA)
            .withQuotaTarget("qyib")
            .withQuotaLimitUsedInKiBs(8539790193753290872L)
            .withQuotaLimitTotalInKiBs(3859662575119335920L)
            .withPercentageUsed(88.90607F)
            .withIsDerivedQuota(true);
        model = BinaryData.fromObject(model).toObject(QuotaReport.class);
        Assertions.assertEquals(Type.DEFAULT_USER_QUOTA, model.quotaType());
        Assertions.assertEquals("qyib", model.quotaTarget());
        Assertions.assertEquals(8539790193753290872L, model.quotaLimitUsedInKiBs());
        Assertions.assertEquals(3859662575119335920L, model.quotaLimitTotalInKiBs());
        Assertions.assertEquals(88.90607F, model.percentageUsed());
        Assertions.assertTrue(model.isDerivedQuota());
    }
}
