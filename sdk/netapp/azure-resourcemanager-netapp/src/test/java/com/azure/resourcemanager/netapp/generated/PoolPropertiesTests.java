// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.fluent.models.PoolProperties;
import com.azure.resourcemanager.netapp.models.EncryptionType;
import com.azure.resourcemanager.netapp.models.QosType;
import com.azure.resourcemanager.netapp.models.ServiceLevel;
import org.junit.jupiter.api.Assertions;

public final class PoolPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PoolProperties model = BinaryData.fromString(
            "{\"poolId\":\"wzbtdhxu\",\"size\":5441871026164197951,\"serviceLevel\":\"Standard\",\"provisioningState\":\"pow\",\"totalThroughputMibps\":48.1994,\"utilizedThroughputMibps\":92.36481,\"qosType\":\"Auto\",\"coolAccess\":true,\"encryptionType\":\"Single\"}")
            .toObject(PoolProperties.class);
        Assertions.assertEquals(5441871026164197951L, model.size());
        Assertions.assertEquals(ServiceLevel.STANDARD, model.serviceLevel());
        Assertions.assertEquals(QosType.AUTO, model.qosType());
        Assertions.assertEquals(true, model.coolAccess());
        Assertions.assertEquals(EncryptionType.SINGLE, model.encryptionType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PoolProperties model = new PoolProperties().withSize(5441871026164197951L)
            .withServiceLevel(ServiceLevel.STANDARD)
            .withQosType(QosType.AUTO)
            .withCoolAccess(true)
            .withEncryptionType(EncryptionType.SINGLE);
        model = BinaryData.fromObject(model).toObject(PoolProperties.class);
        Assertions.assertEquals(5441871026164197951L, model.size());
        Assertions.assertEquals(ServiceLevel.STANDARD, model.serviceLevel());
        Assertions.assertEquals(QosType.AUTO, model.qosType());
        Assertions.assertEquals(true, model.coolAccess());
        Assertions.assertEquals(EncryptionType.SINGLE, model.encryptionType());
    }
}
