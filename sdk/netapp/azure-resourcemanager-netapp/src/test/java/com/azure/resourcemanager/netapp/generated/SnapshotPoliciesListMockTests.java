// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.netapp.NetAppFilesManager;
import com.azure.resourcemanager.netapp.models.SnapshotPolicy;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SnapshotPoliciesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"etag\":\"gxffmshkwf\",\"properties\":{\"hourlySchedule\":{\"snapshotsToKeep\":1874784092,\"minute\":1139944911,\"usedBytes\":3706323507119701161},\"dailySchedule\":{\"snapshotsToKeep\":530743618,\"hour\":29760646,\"minute\":1805819824,\"usedBytes\":7577684278453969496},\"weeklySchedule\":{\"snapshotsToKeep\":1182183471,\"day\":\"xbiygnugjknfsmf\",\"hour\":801406490,\"minute\":1703966020,\"usedBytes\":8661454181197474572},\"monthlySchedule\":{\"snapshotsToKeep\":1037919815,\"daysOfMonth\":\"qoiquvrehmrnjhv\",\"hour\":14202620,\"minute\":455910755,\"usedBytes\":7457236027788701363},\"enabled\":false,\"provisioningState\":\"t\"},\"location\":\"auunfprnjletlx\",\"tags\":{\"nlqwzdvpiwhx\":\"pddouifamowaziyn\",\"xylrjvmtygjbmz\":\"szdtmaajquh\",\"yjpmspbpssdfppyo\":\"ospspshckf\"},\"id\":\"tieyujtvczkcny\",\"name\":\"rxmunjdxvgln\",\"type\":\"vxlx\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NetAppFilesManager manager = NetAppFilesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<SnapshotPolicy> response
            = manager.snapshotPolicies().list("bglbyvict", "tbrxkjz", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("auunfprnjletlx", response.iterator().next().location());
        Assertions.assertEquals("pddouifamowaziyn", response.iterator().next().tags().get("nlqwzdvpiwhx"));
        Assertions.assertEquals(1874784092, response.iterator().next().hourlySchedule().snapshotsToKeep());
        Assertions.assertEquals(1139944911, response.iterator().next().hourlySchedule().minute());
        Assertions.assertEquals(3706323507119701161L, response.iterator().next().hourlySchedule().usedBytes());
        Assertions.assertEquals(530743618, response.iterator().next().dailySchedule().snapshotsToKeep());
        Assertions.assertEquals(29760646, response.iterator().next().dailySchedule().hour());
        Assertions.assertEquals(1805819824, response.iterator().next().dailySchedule().minute());
        Assertions.assertEquals(7577684278453969496L, response.iterator().next().dailySchedule().usedBytes());
        Assertions.assertEquals(1182183471, response.iterator().next().weeklySchedule().snapshotsToKeep());
        Assertions.assertEquals("xbiygnugjknfsmf", response.iterator().next().weeklySchedule().day());
        Assertions.assertEquals(801406490, response.iterator().next().weeklySchedule().hour());
        Assertions.assertEquals(1703966020, response.iterator().next().weeklySchedule().minute());
        Assertions.assertEquals(8661454181197474572L, response.iterator().next().weeklySchedule().usedBytes());
        Assertions.assertEquals(1037919815, response.iterator().next().monthlySchedule().snapshotsToKeep());
        Assertions.assertEquals("qoiquvrehmrnjhv", response.iterator().next().monthlySchedule().daysOfMonth());
        Assertions.assertEquals(14202620, response.iterator().next().monthlySchedule().hour());
        Assertions.assertEquals(455910755, response.iterator().next().monthlySchedule().minute());
        Assertions.assertEquals(7457236027788701363L, response.iterator().next().monthlySchedule().usedBytes());
        Assertions.assertFalse(response.iterator().next().enabled());
    }
}
