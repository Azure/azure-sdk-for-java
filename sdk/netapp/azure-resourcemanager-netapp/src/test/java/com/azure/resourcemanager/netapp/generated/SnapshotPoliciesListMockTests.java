// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.netapp.NetAppFilesManager;
import com.azure.resourcemanager.netapp.models.SnapshotPolicy;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SnapshotPoliciesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"etag\":\"yd\",\"properties\":{\"hourlySchedule\":{\"snapshotsToKeep\":555019895,\"minute\":1968153176,\"usedBytes\":3112577656885260335},\"dailySchedule\":{\"snapshotsToKeep\":1933777271,\"hour\":357864069,\"minute\":923780636,\"usedBytes\":4149170168681918332},\"weeklySchedule\":{\"snapshotsToKeep\":1222669398,\"day\":\"mfcttux\",\"hour\":2090396428,\"minute\":2127078060,\"usedBytes\":1380728334935480994},\"monthlySchedule\":{\"snapshotsToKeep\":1113337384,\"daysOfMonth\":\"vrehmrnjhvsujzt\",\"hour\":982986419,\"minute\":1964628055,\"usedBytes\":766561893445657103},\"enabled\":true,\"provisioningState\":\"unfprnjletlxs\"},\"location\":\"pddouifamowaziyn\",\"tags\":{\"zdtmaajquhuxylrj\":\"qwzdvpiwhxq\",\"ygjbmzyospspsh\":\"m\",\"sp\":\"kfkyjp\",\"ujtv\":\"pssdfppyogtie\"},\"id\":\"zkc\",\"name\":\"yxrxmunj\",\"type\":\"xvglnkvxlxp\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NetAppFilesManager manager = NetAppFilesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<SnapshotPolicy> response
            = manager.snapshotPolicies().list("tctbrxkjzwrgxffm", "hkwfbkgozxwop", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("pddouifamowaziyn", response.iterator().next().location());
        Assertions.assertEquals("qwzdvpiwhxq", response.iterator().next().tags().get("zdtmaajquhuxylrj"));
        Assertions.assertEquals(555019895, response.iterator().next().hourlySchedule().snapshotsToKeep());
        Assertions.assertEquals(1968153176, response.iterator().next().hourlySchedule().minute());
        Assertions.assertEquals(3112577656885260335L, response.iterator().next().hourlySchedule().usedBytes());
        Assertions.assertEquals(1933777271, response.iterator().next().dailySchedule().snapshotsToKeep());
        Assertions.assertEquals(357864069, response.iterator().next().dailySchedule().hour());
        Assertions.assertEquals(923780636, response.iterator().next().dailySchedule().minute());
        Assertions.assertEquals(4149170168681918332L, response.iterator().next().dailySchedule().usedBytes());
        Assertions.assertEquals(1222669398, response.iterator().next().weeklySchedule().snapshotsToKeep());
        Assertions.assertEquals("mfcttux", response.iterator().next().weeklySchedule().day());
        Assertions.assertEquals(2090396428, response.iterator().next().weeklySchedule().hour());
        Assertions.assertEquals(2127078060, response.iterator().next().weeklySchedule().minute());
        Assertions.assertEquals(1380728334935480994L, response.iterator().next().weeklySchedule().usedBytes());
        Assertions.assertEquals(1113337384, response.iterator().next().monthlySchedule().snapshotsToKeep());
        Assertions.assertEquals("vrehmrnjhvsujzt", response.iterator().next().monthlySchedule().daysOfMonth());
        Assertions.assertEquals(982986419, response.iterator().next().monthlySchedule().hour());
        Assertions.assertEquals(1964628055, response.iterator().next().monthlySchedule().minute());
        Assertions.assertEquals(766561893445657103L, response.iterator().next().monthlySchedule().usedBytes());
        Assertions.assertTrue(response.iterator().next().enabled());
    }
}
