// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.netapp.NetAppFilesManager;
import com.azure.resourcemanager.netapp.models.SnapshotPolicy;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SnapshotPoliciesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"etag\":\"atzv\",\"properties\":{\"hourlySchedule\":{\"snapshotsToKeep\":1946908693,\"minute\":39003903,\"usedBytes\":4361094771098981141},\"dailySchedule\":{\"snapshotsToKeep\":1666158836,\"hour\":1709678755,\"minute\":2132495866,\"usedBytes\":7284906915051050454},\"weeklySchedule\":{\"snapshotsToKeep\":802199540,\"day\":\"fmsh\",\"hour\":1340920016,\"minute\":1977846106,\"usedBytes\":8052136361174930320},\"monthlySchedule\":{\"snapshotsToKeep\":862945688,\"daysOfMonth\":\"dby\",\"hour\":1387875327,\"minute\":555019895,\"usedBytes\":8453153522791825173},\"enabled\":false,\"provisioningState\":\"xbiygnugjknfsmf\"},\"location\":\"tuxuuyilflq\",\"tags\":{\"hmrnjhvsuj\":\"uvr\",\"uunfprnjletlxsm\":\"tczytqjtwh\"},\"id\":\"pddouifamowaziyn\",\"name\":\"nlqwzdvpiwhx\",\"type\":\"szdtmaajquh\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NetAppFilesManager manager = NetAppFilesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<SnapshotPolicy> response
            = manager.snapshotPolicies().list("xtmkzjvkviir", "gfgrwsdp", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("tuxuuyilflq", response.iterator().next().location());
        Assertions.assertEquals("uvr", response.iterator().next().tags().get("hmrnjhvsuj"));
        Assertions.assertEquals(1946908693, response.iterator().next().hourlySchedule().snapshotsToKeep());
        Assertions.assertEquals(39003903, response.iterator().next().hourlySchedule().minute());
        Assertions.assertEquals(4361094771098981141L, response.iterator().next().hourlySchedule().usedBytes());
        Assertions.assertEquals(1666158836, response.iterator().next().dailySchedule().snapshotsToKeep());
        Assertions.assertEquals(1709678755, response.iterator().next().dailySchedule().hour());
        Assertions.assertEquals(2132495866, response.iterator().next().dailySchedule().minute());
        Assertions.assertEquals(7284906915051050454L, response.iterator().next().dailySchedule().usedBytes());
        Assertions.assertEquals(802199540, response.iterator().next().weeklySchedule().snapshotsToKeep());
        Assertions.assertEquals("fmsh", response.iterator().next().weeklySchedule().day());
        Assertions.assertEquals(1340920016, response.iterator().next().weeklySchedule().hour());
        Assertions.assertEquals(1977846106, response.iterator().next().weeklySchedule().minute());
        Assertions.assertEquals(8052136361174930320L, response.iterator().next().weeklySchedule().usedBytes());
        Assertions.assertEquals(862945688, response.iterator().next().monthlySchedule().snapshotsToKeep());
        Assertions.assertEquals("dby", response.iterator().next().monthlySchedule().daysOfMonth());
        Assertions.assertEquals(1387875327, response.iterator().next().monthlySchedule().hour());
        Assertions.assertEquals(555019895, response.iterator().next().monthlySchedule().minute());
        Assertions.assertEquals(8453153522791825173L, response.iterator().next().monthlySchedule().usedBytes());
        Assertions.assertFalse(response.iterator().next().enabled());
    }
}
