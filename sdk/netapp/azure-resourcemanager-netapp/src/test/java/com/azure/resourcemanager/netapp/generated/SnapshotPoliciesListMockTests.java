// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.netapp.NetAppFilesManager;
import com.azure.resourcemanager.netapp.models.SnapshotPolicy;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SnapshotPoliciesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"etag\":\"twk\",\"properties\":{\"hourlySchedule\":{\"snapshotsToKeep\":157680124,\"minute\":1026942134,\"usedBytes\":8332552010185615159},\"dailySchedule\":{\"snapshotsToKeep\":1244267052,\"hour\":2141444105,\"minute\":192597448,\"usedBytes\":1748807744238233865},\"weeklySchedule\":{\"snapshotsToKeep\":1889812665,\"day\":\"ahgx\",\"hour\":945214435,\"minute\":1464165713,\"usedBytes\":7584905951521070399},\"monthlySchedule\":{\"snapshotsToKeep\":1207398584,\"daysOfMonth\":\"ltzkatbhjmznnb\",\"hour\":1452545825,\"minute\":1574788888,\"usedBytes\":4404103409694460959},\"enabled\":false,\"provisioningState\":\"agunbtgfebw\"},\"location\":\"bmhyreeudz\",\"tags\":{\"glgou\":\"bpdqmjxlyy\",\"yuojqtobaxk\":\"tlmj\",\"lbfjkwr\":\"eytu\",\"hsyrqunj\":\"snkq\"},\"id\":\"hdenxaulk\",\"name\":\"akdkifmjnnawtqab\",\"type\":\"xuckpggqoweyir\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NetAppFilesManager manager = NetAppFilesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<SnapshotPolicy> response
            = manager.snapshotPolicies().list("oxuztrksx", "pndfcpfnznt", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("bmhyreeudz", response.iterator().next().location());
        Assertions.assertEquals("bpdqmjxlyy", response.iterator().next().tags().get("glgou"));
        Assertions.assertEquals(157680124, response.iterator().next().hourlySchedule().snapshotsToKeep());
        Assertions.assertEquals(1026942134, response.iterator().next().hourlySchedule().minute());
        Assertions.assertEquals(8332552010185615159L, response.iterator().next().hourlySchedule().usedBytes());
        Assertions.assertEquals(1244267052, response.iterator().next().dailySchedule().snapshotsToKeep());
        Assertions.assertEquals(2141444105, response.iterator().next().dailySchedule().hour());
        Assertions.assertEquals(192597448, response.iterator().next().dailySchedule().minute());
        Assertions.assertEquals(1748807744238233865L, response.iterator().next().dailySchedule().usedBytes());
        Assertions.assertEquals(1889812665, response.iterator().next().weeklySchedule().snapshotsToKeep());
        Assertions.assertEquals("ahgx", response.iterator().next().weeklySchedule().day());
        Assertions.assertEquals(945214435, response.iterator().next().weeklySchedule().hour());
        Assertions.assertEquals(1464165713, response.iterator().next().weeklySchedule().minute());
        Assertions.assertEquals(7584905951521070399L, response.iterator().next().weeklySchedule().usedBytes());
        Assertions.assertEquals(1207398584, response.iterator().next().monthlySchedule().snapshotsToKeep());
        Assertions.assertEquals("ltzkatbhjmznnb", response.iterator().next().monthlySchedule().daysOfMonth());
        Assertions.assertEquals(1452545825, response.iterator().next().monthlySchedule().hour());
        Assertions.assertEquals(1574788888, response.iterator().next().monthlySchedule().minute());
        Assertions.assertEquals(4404103409694460959L, response.iterator().next().monthlySchedule().usedBytes());
        Assertions.assertEquals(false, response.iterator().next().enabled());
    }
}
