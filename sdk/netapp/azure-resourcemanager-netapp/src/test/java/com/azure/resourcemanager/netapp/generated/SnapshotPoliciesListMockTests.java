// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.netapp.NetAppFilesManager;
import com.azure.resourcemanager.netapp.models.SnapshotPolicy;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SnapshotPoliciesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"etag\":\"ltyjedexxmlfmk\",\"properties\":{\"hourlySchedule\":{\"snapshotsToKeep\":1445110632,\"minute\":1734867159,\"usedBytes\":3494695317807035352},\"dailySchedule\":{\"snapshotsToKeep\":16143450,\"hour\":810465454,\"minute\":400870213,\"usedBytes\":5532317119730945052},\"weeklySchedule\":{\"snapshotsToKeep\":1757124194,\"day\":\"xcushs\",\"hour\":1333151238,\"minute\":107973649,\"usedBytes\":4154943067306073010},\"monthlySchedule\":{\"snapshotsToKeep\":666736445,\"daysOfMonth\":\"vgsgzwywakoihkn\",\"hour\":874789657,\"minute\":1233115603,\"usedBytes\":2710381116141094215},\"enabled\":true,\"provisioningState\":\"ymzotqyryuzcbmq\"},\"location\":\"xmvwfg\",\"tags\":{\"supe\":\"xo\",\"sqltnzo\":\"jlzqnhc\"},\"id\":\"bgsxgnxfyqonmpq\",\"name\":\"xwdofdb\",\"type\":\"iqxeiiqbimht\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NetAppFilesManager manager = NetAppFilesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<SnapshotPolicy> response
            = manager.snapshotPolicies().list("lkafhonqjuje", "ckpzvcpopmxeln", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("xmvwfg", response.iterator().next().location());
        Assertions.assertEquals("xo", response.iterator().next().tags().get("supe"));
        Assertions.assertEquals(1445110632, response.iterator().next().hourlySchedule().snapshotsToKeep());
        Assertions.assertEquals(1734867159, response.iterator().next().hourlySchedule().minute());
        Assertions.assertEquals(3494695317807035352L, response.iterator().next().hourlySchedule().usedBytes());
        Assertions.assertEquals(16143450, response.iterator().next().dailySchedule().snapshotsToKeep());
        Assertions.assertEquals(810465454, response.iterator().next().dailySchedule().hour());
        Assertions.assertEquals(400870213, response.iterator().next().dailySchedule().minute());
        Assertions.assertEquals(5532317119730945052L, response.iterator().next().dailySchedule().usedBytes());
        Assertions.assertEquals(1757124194, response.iterator().next().weeklySchedule().snapshotsToKeep());
        Assertions.assertEquals("xcushs", response.iterator().next().weeklySchedule().day());
        Assertions.assertEquals(1333151238, response.iterator().next().weeklySchedule().hour());
        Assertions.assertEquals(107973649, response.iterator().next().weeklySchedule().minute());
        Assertions.assertEquals(4154943067306073010L, response.iterator().next().weeklySchedule().usedBytes());
        Assertions.assertEquals(666736445, response.iterator().next().monthlySchedule().snapshotsToKeep());
        Assertions.assertEquals("vgsgzwywakoihkn", response.iterator().next().monthlySchedule().daysOfMonth());
        Assertions.assertEquals(874789657, response.iterator().next().monthlySchedule().hour());
        Assertions.assertEquals(1233115603, response.iterator().next().monthlySchedule().minute());
        Assertions.assertEquals(2710381116141094215L, response.iterator().next().monthlySchedule().usedBytes());
        Assertions.assertEquals(true, response.iterator().next().enabled());
    }
}
