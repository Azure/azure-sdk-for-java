// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.netapp.NetAppFilesManager;
import com.azure.resourcemanager.netapp.models.SnapshotPolicy;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SnapshotPoliciesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"etag\":\"gicgaaoepttaq\",\"properties\":{\"hourlySchedule\":{\"snapshotsToKeep\":1354970767,\"minute\":153395237,\"usedBytes\":6222106413777972482},\"dailySchedule\":{\"snapshotsToKeep\":827241082,\"hour\":140983404,\"minute\":466668490,\"usedBytes\":6482628412909459959},\"weeklySchedule\":{\"snapshotsToKeep\":744984595,\"day\":\"kimrt\",\"hour\":2101404470,\"minute\":2017974836,\"usedBytes\":5182793984668664248},\"monthlySchedule\":{\"snapshotsToKeep\":1426347910,\"daysOfMonth\":\"qepqwhixmon\",\"hour\":927727255,\"minute\":171287650,\"usedBytes\":9072157943517962123},\"enabled\":true,\"provisioningState\":\"fclduccbirdsv\"},\"location\":\"cobiegstmninwjiz\",\"tags\":{\"tbxqmuluxlxq\":\"nghgshej\",\"amikzebrqbsm\":\"vnersbycucrw\",\"swhvhczznvfbycj\":\"wziqgfuhokzr\",\"xzv\":\"xjww\"},\"id\":\"mwmxqhndvnoamld\",\"name\":\"ehaohdjhh\",\"type\":\"lzok\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NetAppFilesManager manager = NetAppFilesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<SnapshotPolicy> response
            = manager.snapshotPolicies().list("jrgywwpgjxsn", "tf", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("cobiegstmninwjiz", response.iterator().next().location());
        Assertions.assertEquals("nghgshej", response.iterator().next().tags().get("tbxqmuluxlxq"));
        Assertions.assertEquals(1354970767, response.iterator().next().hourlySchedule().snapshotsToKeep());
        Assertions.assertEquals(153395237, response.iterator().next().hourlySchedule().minute());
        Assertions.assertEquals(6222106413777972482L, response.iterator().next().hourlySchedule().usedBytes());
        Assertions.assertEquals(827241082, response.iterator().next().dailySchedule().snapshotsToKeep());
        Assertions.assertEquals(140983404, response.iterator().next().dailySchedule().hour());
        Assertions.assertEquals(466668490, response.iterator().next().dailySchedule().minute());
        Assertions.assertEquals(6482628412909459959L, response.iterator().next().dailySchedule().usedBytes());
        Assertions.assertEquals(744984595, response.iterator().next().weeklySchedule().snapshotsToKeep());
        Assertions.assertEquals("kimrt", response.iterator().next().weeklySchedule().day());
        Assertions.assertEquals(2101404470, response.iterator().next().weeklySchedule().hour());
        Assertions.assertEquals(2017974836, response.iterator().next().weeklySchedule().minute());
        Assertions.assertEquals(5182793984668664248L, response.iterator().next().weeklySchedule().usedBytes());
        Assertions.assertEquals(1426347910, response.iterator().next().monthlySchedule().snapshotsToKeep());
        Assertions.assertEquals("qepqwhixmon", response.iterator().next().monthlySchedule().daysOfMonth());
        Assertions.assertEquals(927727255, response.iterator().next().monthlySchedule().hour());
        Assertions.assertEquals(171287650, response.iterator().next().monthlySchedule().minute());
        Assertions.assertEquals(9072157943517962123L, response.iterator().next().monthlySchedule().usedBytes());
        Assertions.assertEquals(true, response.iterator().next().enabled());
    }
}
