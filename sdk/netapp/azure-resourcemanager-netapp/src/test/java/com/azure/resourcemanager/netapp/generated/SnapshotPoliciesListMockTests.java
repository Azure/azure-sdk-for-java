// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.netapp.NetAppFilesManager;
import com.azure.resourcemanager.netapp.models.SnapshotPolicy;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SnapshotPoliciesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"etag\":\"hm\",\"properties\":{\"hourlySchedule\":{\"snapshotsToKeep\":324385472,\"minute\":1378115956,\"usedBytes\":6906794067250766095},\"dailySchedule\":{\"snapshotsToKeep\":356071455,\"hour\":69570650,\"minute\":752629993,\"usedBytes\":1492840844437190897},\"weeklySchedule\":{\"snapshotsToKeep\":848041898,\"day\":\"goeiybbabpfhvfsl\",\"hour\":1073753139,\"minute\":1907668063,\"usedBytes\":5669757184395450111},\"monthlySchedule\":{\"snapshotsToKeep\":943098254,\"daysOfMonth\":\"kyrioovzid\",\"hour\":1304895406,\"minute\":2100581785,\"usedBytes\":1707867540175583375},\"enabled\":true,\"provisioningState\":\"ygznmmaxrizk\"},\"location\":\"bgopxlhslnel\",\"tags\":{\"slhcawjutifd\":\"ixynllxecwcrojp\",\"aglkafhon\":\"fmvigorqjbttzh\",\"ickpz\":\"juj\",\"wcltyjede\":\"cpopmxel\"},\"id\":\"xm\",\"name\":\"f\",\"type\":\"kqscazuawxtzx\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NetAppFilesManager manager = NetAppFilesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<SnapshotPolicy> response
            = manager.snapshotPolicies().list("bjwgnyfus", "zsvtuikzhajqgl", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("bgopxlhslnel", response.iterator().next().location());
        Assertions.assertEquals("ixynllxecwcrojp", response.iterator().next().tags().get("slhcawjutifd"));
        Assertions.assertEquals(324385472, response.iterator().next().hourlySchedule().snapshotsToKeep());
        Assertions.assertEquals(1378115956, response.iterator().next().hourlySchedule().minute());
        Assertions.assertEquals(6906794067250766095L, response.iterator().next().hourlySchedule().usedBytes());
        Assertions.assertEquals(356071455, response.iterator().next().dailySchedule().snapshotsToKeep());
        Assertions.assertEquals(69570650, response.iterator().next().dailySchedule().hour());
        Assertions.assertEquals(752629993, response.iterator().next().dailySchedule().minute());
        Assertions.assertEquals(1492840844437190897L, response.iterator().next().dailySchedule().usedBytes());
        Assertions.assertEquals(848041898, response.iterator().next().weeklySchedule().snapshotsToKeep());
        Assertions.assertEquals("goeiybbabpfhvfsl", response.iterator().next().weeklySchedule().day());
        Assertions.assertEquals(1073753139, response.iterator().next().weeklySchedule().hour());
        Assertions.assertEquals(1907668063, response.iterator().next().weeklySchedule().minute());
        Assertions.assertEquals(5669757184395450111L, response.iterator().next().weeklySchedule().usedBytes());
        Assertions.assertEquals(943098254, response.iterator().next().monthlySchedule().snapshotsToKeep());
        Assertions.assertEquals("kyrioovzid", response.iterator().next().monthlySchedule().daysOfMonth());
        Assertions.assertEquals(1304895406, response.iterator().next().monthlySchedule().hour());
        Assertions.assertEquals(2100581785, response.iterator().next().monthlySchedule().minute());
        Assertions.assertEquals(1707867540175583375L, response.iterator().next().monthlySchedule().usedBytes());
        Assertions.assertEquals(true, response.iterator().next().enabled());
    }
}
