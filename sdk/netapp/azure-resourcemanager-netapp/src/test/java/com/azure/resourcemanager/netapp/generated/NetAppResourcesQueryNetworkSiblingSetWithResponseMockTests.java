// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.netapp.NetAppFilesManager;
import com.azure.resourcemanager.netapp.models.NetworkFeatures;
import com.azure.resourcemanager.netapp.models.NetworkSiblingSet;
import com.azure.resourcemanager.netapp.models.QueryNetworkSiblingSetRequest;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class NetAppResourcesQueryNetworkSiblingSetWithResponseMockTests {
    @Test
    public void testQueryNetworkSiblingSetWithResponse() throws Exception {
        String responseStr
            = "{\"networkSiblingSetId\":\"lttymsjn\",\"subnetId\":\"qdnfwqzdz\",\"networkSiblingSetStateId\":\"ilaxhn\",\"networkFeatures\":\"Standard\",\"provisioningState\":\"Succeeded\",\"nicInfoList\":[{\"ipAddress\":\"ouwivkxoyzunbixx\",\"volumeResourceIds\":[\"kvcpwpgclr\",\"ivtsoxfrkenxpm\"]},{\"ipAddress\":\"efrp\",\"volumeResourceIds\":[\"nqqs\",\"awaoqvmmbnpqfrt\",\"lkzmegnitgvkxl\",\"yqdrf\"]},{\"ipAddress\":\"cealzxwh\",\"volumeResourceIds\":[\"symoyq\",\"lwigdivbkbx\",\"omfaj\",\"wasqvdaeyyg\"]},{\"ipAddress\":\"akjsqz\",\"volumeResourceIds\":[\"ezkgi\",\"sidxasicdd\",\"vvjskgfmocwahp\",\"gat\"]}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NetAppFilesManager manager = NetAppFilesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        NetworkSiblingSet response = manager.netAppResources()
            .queryNetworkSiblingSetWithResponse("jyihsasbhudypo",
                new QueryNetworkSiblingSetRequest().withNetworkSiblingSetId("yue").withSubnetId("slynsqyrpfoo"),
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("lttymsjn", response.networkSiblingSetId());
        Assertions.assertEquals("qdnfwqzdz", response.subnetId());
        Assertions.assertEquals("ilaxhn", response.networkSiblingSetStateId());
        Assertions.assertEquals(NetworkFeatures.STANDARD, response.networkFeatures());
        Assertions.assertEquals("kvcpwpgclr", response.nicInfoList().get(0).volumeResourceIds().get(0));
    }
}
