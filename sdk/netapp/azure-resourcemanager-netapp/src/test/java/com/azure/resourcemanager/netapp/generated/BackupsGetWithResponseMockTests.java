// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.netapp.NetAppFilesManager;
import com.azure.resourcemanager.netapp.models.Backup;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class BackupsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"backupId\":\"totiowlxteqdptjg\",\"creationDate\":\"2020-12-31T23:47:03Z\",\"provisioningState\":\"ukranblw\",\"size\":7361331029395556069,\"label\":\"ccuzgygq\",\"backupType\":\"Manual\",\"failureReason\":\"iul\",\"volumeResourceId\":\"gniiprglvaw\",\"useExistingSnapshot\":false,\"snapshotName\":\"ufypiv\",\"backupPolicyResourceId\":\"bbjpmcubkmif\"},\"id\":\"xkubvphavpmhbrbq\",\"name\":\"vgovpbbttefjokn\",\"type\":\"sqyzqedikdfr\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NetAppFilesManager manager = NetAppFilesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Backup response = manager.backups()
            .getWithResponse("kkflrmymyincqlhr", "s", "sl", "iiiovgqcgxuugq", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("ccuzgygq", response.label());
        Assertions.assertEquals("gniiprglvaw", response.volumeResourceId());
        Assertions.assertEquals(false, response.useExistingSnapshot());
        Assertions.assertEquals("ufypiv", response.snapshotName());
    }
}
