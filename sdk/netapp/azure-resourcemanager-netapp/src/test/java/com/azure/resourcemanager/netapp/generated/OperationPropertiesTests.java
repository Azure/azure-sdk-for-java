// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.fluent.models.OperationProperties;
import com.azure.resourcemanager.netapp.models.Dimension;
import com.azure.resourcemanager.netapp.models.LogSpecification;
import com.azure.resourcemanager.netapp.models.MetricAggregationType;
import com.azure.resourcemanager.netapp.models.MetricSpecification;
import com.azure.resourcemanager.netapp.models.ServiceSpecification;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class OperationPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationProperties model = BinaryData.fromString(
            "{\"serviceSpecification\":{\"metricSpecifications\":[{\"name\":\"ailzydehojwyahu\",\"displayName\":\"npmqnjaqwixjspro\",\"displayDescription\":\"cputegjvwmfdats\",\"unit\":\"dvpjhulsuuvmk\",\"supportedAggregationTypes\":[\"Average\",\"Average\"],\"supportedTimeGrainTypes\":[\"ndiodjpslwejdpv\"],\"internalMetricName\":\"yoqpsoaccta\",\"enableRegionalMdmAccount\":false,\"sourceMdmAccount\":\"j\",\"sourceMdmNamespace\":\"hbcryffdfdosyge\",\"dimensions\":[{\"name\":\"jakhmsbzjh\",\"displayName\":\"zevdphlx\"},{\"name\":\"lthqtrgqjbp\",\"displayName\":\"fsinzgvfcjrwzoxx\"},{\"name\":\"felluwfzitonpe\",\"displayName\":\"pjkjlxofpdv\"},{\"name\":\"fxxypininmayhuy\",\"displayName\":\"kpode\"}],\"aggregationType\":\"oginuvamiheognar\",\"fillGapWithZero\":false,\"category\":\"heotusiv\",\"resourceIdDimensionNameOverride\":\"v\",\"isInternal\":false},{\"name\":\"ihnhun\",\"displayName\":\"wjzrnfygxgisp\",\"displayDescription\":\"vtz\",\"unit\":\"ufubl\",\"supportedAggregationTypes\":[\"Average\",\"Average\"],\"supportedTimeGrainTypes\":[\"fjaeq\",\"hqjbasvmsmj\",\"ulngsntn\"],\"internalMetricName\":\"bkzgcwrwclx\",\"enableRegionalMdmAccount\":true,\"sourceMdmAccount\":\"jdous\",\"sourceMdmNamespace\":\"qvkoc\",\"dimensions\":[{\"name\":\"kwt\",\"displayName\":\"xbnjbiksq\"},{\"name\":\"lssai\",\"displayName\":\"p\"},{\"name\":\"nzl\",\"displayName\":\"fmppe\"}],\"aggregationType\":\"vmgxsab\",\"fillGapWithZero\":true,\"category\":\"uujitcjc\",\"resourceIdDimensionNameOverride\":\"zevndhkrwpdappds\",\"isInternal\":true},{\"name\":\"wrwjfeu\",\"displayName\":\"hutje\",\"displayDescription\":\"mrldhu\",\"unit\":\"zzd\",\"supportedAggregationTypes\":[\"Average\",\"Average\",\"Average\",\"Average\"],\"supportedTimeGrainTypes\":[\"eablg\",\"huticndvkao\",\"wyiftyhxhur\",\"k\"],\"internalMetricName\":\"yxolniwp\",\"enableRegionalMdmAccount\":true,\"sourceMdmAccount\":\"jfkgiawxk\",\"sourceMdmNamespace\":\"ypl\",\"dimensions\":[{\"name\":\"asy\",\"displayName\":\"nddhsgcbacph\"},{\"name\":\"koty\",\"displayName\":\"gou\"}],\"aggregationType\":\"ndlik\",\"fillGapWithZero\":true,\"category\":\"gfgibm\",\"resourceIdDimensionNameOverride\":\"gakeqsr\",\"isInternal\":true},{\"name\":\"qqedqytbciqfou\",\"displayName\":\"mmnkzsmodmgl\",\"displayDescription\":\"gpbkwtmut\",\"unit\":\"qktapspwgcuert\",\"supportedAggregationTypes\":[\"Average\",\"Average\"],\"supportedTimeGrainTypes\":[\"qw\",\"bmdg\",\"bjf\",\"dgmb\"],\"internalMetricName\":\"ex\",\"enableRegionalMdmAccount\":true,\"sourceMdmAccount\":\"tq\",\"sourceMdmNamespace\":\"ol\",\"dimensions\":[{\"name\":\"s\",\"displayName\":\"gbquxigj\"},{\"name\":\"gzjaoyfhrtxilne\",\"displayName\":\"ujysvle\"},{\"name\":\"vfqawrlyxwjkcpr\",\"displayName\":\"wbxgjvt\"}],\"aggregationType\":\"p\",\"fillGapWithZero\":false,\"category\":\"dnrujqguhmuouqfp\",\"resourceIdDimensionNameOverride\":\"zw\",\"isInternal\":false}],\"logSpecifications\":[{\"name\":\"nwui\",\"displayName\":\"a\"},{\"name\":\"ufizuckyf\",\"displayName\":\"rfidfvzwdz\"},{\"name\":\"tymw\",\"displayName\":\"dkfthwxmnt\"},{\"name\":\"waopvkmijcmmxd\",\"displayName\":\"fufsrpymzi\"}]}}")
            .toObject(OperationProperties.class);
        Assertions.assertEquals("ailzydehojwyahu", model.serviceSpecification().metricSpecifications().get(0).name());
        Assertions.assertEquals("npmqnjaqwixjspro",
            model.serviceSpecification().metricSpecifications().get(0).displayName());
        Assertions.assertEquals("cputegjvwmfdats",
            model.serviceSpecification().metricSpecifications().get(0).displayDescription());
        Assertions.assertEquals("dvpjhulsuuvmk", model.serviceSpecification().metricSpecifications().get(0).unit());
        Assertions.assertEquals(MetricAggregationType.AVERAGE,
            model.serviceSpecification().metricSpecifications().get(0).supportedAggregationTypes().get(0));
        Assertions.assertEquals("ndiodjpslwejdpv",
            model.serviceSpecification().metricSpecifications().get(0).supportedTimeGrainTypes().get(0));
        Assertions.assertEquals("yoqpsoaccta",
            model.serviceSpecification().metricSpecifications().get(0).internalMetricName());
        Assertions.assertFalse(model.serviceSpecification().metricSpecifications().get(0).enableRegionalMdmAccount());
        Assertions.assertEquals("j", model.serviceSpecification().metricSpecifications().get(0).sourceMdmAccount());
        Assertions.assertEquals("hbcryffdfdosyge",
            model.serviceSpecification().metricSpecifications().get(0).sourceMdmNamespace());
        Assertions.assertEquals("jakhmsbzjh",
            model.serviceSpecification().metricSpecifications().get(0).dimensions().get(0).name());
        Assertions.assertEquals("zevdphlx",
            model.serviceSpecification().metricSpecifications().get(0).dimensions().get(0).displayName());
        Assertions.assertEquals("oginuvamiheognar",
            model.serviceSpecification().metricSpecifications().get(0).aggregationType());
        Assertions.assertFalse(model.serviceSpecification().metricSpecifications().get(0).fillGapWithZero());
        Assertions.assertEquals("heotusiv", model.serviceSpecification().metricSpecifications().get(0).category());
        Assertions.assertEquals("v",
            model.serviceSpecification().metricSpecifications().get(0).resourceIdDimensionNameOverride());
        Assertions.assertFalse(model.serviceSpecification().metricSpecifications().get(0).isInternal());
        Assertions.assertEquals("nwui", model.serviceSpecification().logSpecifications().get(0).name());
        Assertions.assertEquals("a", model.serviceSpecification().logSpecifications().get(0).displayName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationProperties model = new OperationProperties().withServiceSpecification(new ServiceSpecification()
            .withMetricSpecifications(Arrays.asList(
                new MetricSpecification().withName("ailzydehojwyahu")
                    .withDisplayName("npmqnjaqwixjspro")
                    .withDisplayDescription("cputegjvwmfdats")
                    .withUnit("dvpjhulsuuvmk")
                    .withSupportedAggregationTypes(
                        Arrays.asList(MetricAggregationType.AVERAGE, MetricAggregationType.AVERAGE))
                    .withSupportedTimeGrainTypes(Arrays.asList("ndiodjpslwejdpv"))
                    .withInternalMetricName("yoqpsoaccta")
                    .withEnableRegionalMdmAccount(false)
                    .withSourceMdmAccount("j")
                    .withSourceMdmNamespace("hbcryffdfdosyge")
                    .withDimensions(Arrays.asList(new Dimension().withName("jakhmsbzjh").withDisplayName("zevdphlx"),
                        new Dimension().withName("lthqtrgqjbp").withDisplayName("fsinzgvfcjrwzoxx"),
                        new Dimension().withName("felluwfzitonpe").withDisplayName("pjkjlxofpdv"),
                        new Dimension().withName("fxxypininmayhuy").withDisplayName("kpode")))
                    .withAggregationType("oginuvamiheognar")
                    .withFillGapWithZero(false)
                    .withCategory("heotusiv")
                    .withResourceIdDimensionNameOverride("v")
                    .withIsInternal(false),
                new MetricSpecification().withName("ihnhun")
                    .withDisplayName("wjzrnfygxgisp")
                    .withDisplayDescription("vtz")
                    .withUnit("ufubl")
                    .withSupportedAggregationTypes(
                        Arrays.asList(MetricAggregationType.AVERAGE, MetricAggregationType.AVERAGE))
                    .withSupportedTimeGrainTypes(Arrays.asList("fjaeq", "hqjbasvmsmj", "ulngsntn"))
                    .withInternalMetricName("bkzgcwrwclx")
                    .withEnableRegionalMdmAccount(true)
                    .withSourceMdmAccount("jdous")
                    .withSourceMdmNamespace("qvkoc")
                    .withDimensions(Arrays.asList(new Dimension().withName("kwt").withDisplayName("xbnjbiksq"),
                        new Dimension().withName("lssai").withDisplayName("p"),
                        new Dimension().withName("nzl").withDisplayName("fmppe")))
                    .withAggregationType("vmgxsab")
                    .withFillGapWithZero(true)
                    .withCategory("uujitcjc")
                    .withResourceIdDimensionNameOverride("zevndhkrwpdappds")
                    .withIsInternal(true),
                new MetricSpecification().withName("wrwjfeu")
                    .withDisplayName("hutje")
                    .withDisplayDescription("mrldhu")
                    .withUnit("zzd")
                    .withSupportedAggregationTypes(Arrays.asList(MetricAggregationType.AVERAGE,
                        MetricAggregationType.AVERAGE, MetricAggregationType.AVERAGE, MetricAggregationType.AVERAGE))
                    .withSupportedTimeGrainTypes(Arrays.asList("eablg", "huticndvkao", "wyiftyhxhur", "k"))
                    .withInternalMetricName("yxolniwp")
                    .withEnableRegionalMdmAccount(true)
                    .withSourceMdmAccount("jfkgiawxk")
                    .withSourceMdmNamespace("ypl")
                    .withDimensions(Arrays.asList(new Dimension().withName("asy").withDisplayName("nddhsgcbacph"),
                        new Dimension().withName("koty").withDisplayName("gou")))
                    .withAggregationType("ndlik")
                    .withFillGapWithZero(true)
                    .withCategory("gfgibm")
                    .withResourceIdDimensionNameOverride("gakeqsr")
                    .withIsInternal(true),
                new MetricSpecification().withName("qqedqytbciqfou")
                    .withDisplayName("mmnkzsmodmgl")
                    .withDisplayDescription("gpbkwtmut")
                    .withUnit("qktapspwgcuert")
                    .withSupportedAggregationTypes(
                        Arrays.asList(MetricAggregationType.AVERAGE, MetricAggregationType.AVERAGE))
                    .withSupportedTimeGrainTypes(Arrays.asList("qw", "bmdg", "bjf", "dgmb"))
                    .withInternalMetricName("ex")
                    .withEnableRegionalMdmAccount(true)
                    .withSourceMdmAccount("tq")
                    .withSourceMdmNamespace("ol")
                    .withDimensions(Arrays.asList(new Dimension().withName("s").withDisplayName("gbquxigj"),
                        new Dimension().withName("gzjaoyfhrtxilne").withDisplayName("ujysvle"),
                        new Dimension().withName("vfqawrlyxwjkcpr").withDisplayName("wbxgjvt")))
                    .withAggregationType("p")
                    .withFillGapWithZero(false)
                    .withCategory("dnrujqguhmuouqfp")
                    .withResourceIdDimensionNameOverride("zw")
                    .withIsInternal(false)))
            .withLogSpecifications(Arrays.asList(new LogSpecification().withName("nwui").withDisplayName("a"),
                new LogSpecification().withName("ufizuckyf").withDisplayName("rfidfvzwdz"),
                new LogSpecification().withName("tymw").withDisplayName("dkfthwxmnt"),
                new LogSpecification().withName("waopvkmijcmmxd").withDisplayName("fufsrpymzi"))));
        model = BinaryData.fromObject(model).toObject(OperationProperties.class);
        Assertions.assertEquals("ailzydehojwyahu", model.serviceSpecification().metricSpecifications().get(0).name());
        Assertions.assertEquals("npmqnjaqwixjspro",
            model.serviceSpecification().metricSpecifications().get(0).displayName());
        Assertions.assertEquals("cputegjvwmfdats",
            model.serviceSpecification().metricSpecifications().get(0).displayDescription());
        Assertions.assertEquals("dvpjhulsuuvmk", model.serviceSpecification().metricSpecifications().get(0).unit());
        Assertions.assertEquals(MetricAggregationType.AVERAGE,
            model.serviceSpecification().metricSpecifications().get(0).supportedAggregationTypes().get(0));
        Assertions.assertEquals("ndiodjpslwejdpv",
            model.serviceSpecification().metricSpecifications().get(0).supportedTimeGrainTypes().get(0));
        Assertions.assertEquals("yoqpsoaccta",
            model.serviceSpecification().metricSpecifications().get(0).internalMetricName());
        Assertions.assertFalse(model.serviceSpecification().metricSpecifications().get(0).enableRegionalMdmAccount());
        Assertions.assertEquals("j", model.serviceSpecification().metricSpecifications().get(0).sourceMdmAccount());
        Assertions.assertEquals("hbcryffdfdosyge",
            model.serviceSpecification().metricSpecifications().get(0).sourceMdmNamespace());
        Assertions.assertEquals("jakhmsbzjh",
            model.serviceSpecification().metricSpecifications().get(0).dimensions().get(0).name());
        Assertions.assertEquals("zevdphlx",
            model.serviceSpecification().metricSpecifications().get(0).dimensions().get(0).displayName());
        Assertions.assertEquals("oginuvamiheognar",
            model.serviceSpecification().metricSpecifications().get(0).aggregationType());
        Assertions.assertFalse(model.serviceSpecification().metricSpecifications().get(0).fillGapWithZero());
        Assertions.assertEquals("heotusiv", model.serviceSpecification().metricSpecifications().get(0).category());
        Assertions.assertEquals("v",
            model.serviceSpecification().metricSpecifications().get(0).resourceIdDimensionNameOverride());
        Assertions.assertFalse(model.serviceSpecification().metricSpecifications().get(0).isInternal());
        Assertions.assertEquals("nwui", model.serviceSpecification().logSpecifications().get(0).name());
        Assertions.assertEquals("a", model.serviceSpecification().logSpecifications().get(0).displayName());
    }
}
