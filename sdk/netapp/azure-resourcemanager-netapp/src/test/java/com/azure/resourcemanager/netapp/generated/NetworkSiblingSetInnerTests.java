// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.fluent.models.NetworkSiblingSetInner;
import com.azure.resourcemanager.netapp.models.NetworkFeatures;
import com.azure.resourcemanager.netapp.models.NicInfo;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NetworkSiblingSetInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkSiblingSetInner model = BinaryData.fromString(
            "{\"networkSiblingSetId\":\"gsncghkjeszz\",\"subnetId\":\"ijhtxf\",\"networkSiblingSetStateId\":\"xbf\",\"networkFeatures\":\"Basic_Standard\",\"provisioningState\":\"Succeeded\",\"nicInfoList\":[{\"ipAddress\":\"vecxgodebfqkk\",\"volumeResourceIds\":[\"pukgriwflzlfb\",\"zpuzycisp\"]},{\"ipAddress\":\"zahmgkbrpyydhibn\",\"volumeResourceIds\":[\"kpikadrgvt\",\"agnb\",\"ynhijggme\",\"fsiarbutr\"]},{\"ipAddress\":\"pnazzm\",\"volumeResourceIds\":[\"unmpxttd\",\"hrbnlankxmyskpbh\"]},{\"ipAddress\":\"btkcxywnytnrsyn\",\"volumeResourceIds\":[\"dybyxczfclhaa\",\"dbabp\",\"lwrq\"]}]}")
            .toObject(NetworkSiblingSetInner.class);
        Assertions.assertEquals("gsncghkjeszz", model.networkSiblingSetId());
        Assertions.assertEquals("ijhtxf", model.subnetId());
        Assertions.assertEquals("xbf", model.networkSiblingSetStateId());
        Assertions.assertEquals(NetworkFeatures.BASIC_STANDARD, model.networkFeatures());
        Assertions.assertEquals("pukgriwflzlfb", model.nicInfoList().get(0).volumeResourceIds().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkSiblingSetInner model = new NetworkSiblingSetInner().withNetworkSiblingSetId("gsncghkjeszz")
            .withSubnetId("ijhtxf")
            .withNetworkSiblingSetStateId("xbf")
            .withNetworkFeatures(NetworkFeatures.BASIC_STANDARD)
            .withNicInfoList(
                Arrays.asList(new NicInfo().withVolumeResourceIds(Arrays.asList("pukgriwflzlfb", "zpuzycisp")),
                    new NicInfo().withVolumeResourceIds(Arrays.asList("kpikadrgvt", "agnb", "ynhijggme", "fsiarbutr")),
                    new NicInfo().withVolumeResourceIds(Arrays.asList("unmpxttd", "hrbnlankxmyskpbh")),
                    new NicInfo().withVolumeResourceIds(Arrays.asList("dybyxczfclhaa", "dbabp", "lwrq"))));
        model = BinaryData.fromObject(model).toObject(NetworkSiblingSetInner.class);
        Assertions.assertEquals("gsncghkjeszz", model.networkSiblingSetId());
        Assertions.assertEquals("ijhtxf", model.subnetId());
        Assertions.assertEquals("xbf", model.networkSiblingSetStateId());
        Assertions.assertEquals(NetworkFeatures.BASIC_STANDARD, model.networkFeatures());
        Assertions.assertEquals("pukgriwflzlfb", model.nicInfoList().get(0).volumeResourceIds().get(0));
    }
}
