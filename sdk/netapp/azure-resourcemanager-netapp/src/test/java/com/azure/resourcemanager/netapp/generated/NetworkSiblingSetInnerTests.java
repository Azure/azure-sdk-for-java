// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.fluent.models.NetworkSiblingSetInner;
import com.azure.resourcemanager.netapp.models.NetworkFeatures;
import com.azure.resourcemanager.netapp.models.NicInfo;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NetworkSiblingSetInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkSiblingSetInner model = BinaryData.fromString(
            "{\"networkSiblingSetId\":\"ukgjnpiucgygevq\",\"subnetId\":\"typmrbpizcdrqjsd\",\"networkSiblingSetStateId\":\"dnfyhxdeoejzicwi\",\"networkFeatures\":\"Standard\",\"provisioningState\":\"Canceled\",\"nicInfoList\":[{\"ipAddress\":\"bishcbkhajdeyea\",\"volumeResourceIds\":[\"hagalpbuxwgipwh\"]},{\"ipAddress\":\"ow\",\"volumeResourceIds\":[\"hwankixzbinjepu\",\"tmryw\",\"uzoqft\",\"yqzrnkcqvyxlw\"]},{\"ipAddress\":\"lsicohoqqnwv\",\"volumeResourceIds\":[\"avwhheunm\"]}]}")
            .toObject(NetworkSiblingSetInner.class);
        Assertions.assertEquals("ukgjnpiucgygevq", model.networkSiblingSetId());
        Assertions.assertEquals("typmrbpizcdrqjsd", model.subnetId());
        Assertions.assertEquals("dnfyhxdeoejzicwi", model.networkSiblingSetStateId());
        Assertions.assertEquals(NetworkFeatures.STANDARD, model.networkFeatures());
        Assertions.assertEquals("hagalpbuxwgipwh", model.nicInfoList().get(0).volumeResourceIds().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkSiblingSetInner model = new NetworkSiblingSetInner().withNetworkSiblingSetId("ukgjnpiucgygevq")
            .withSubnetId("typmrbpizcdrqjsd")
            .withNetworkSiblingSetStateId("dnfyhxdeoejzicwi")
            .withNetworkFeatures(NetworkFeatures.STANDARD)
            .withNicInfoList(Arrays.asList(new NicInfo().withVolumeResourceIds(Arrays.asList("hagalpbuxwgipwh")),
                new NicInfo()
                    .withVolumeResourceIds(Arrays.asList("hwankixzbinjepu", "tmryw", "uzoqft", "yqzrnkcqvyxlw")),
                new NicInfo().withVolumeResourceIds(Arrays.asList("avwhheunm"))));
        model = BinaryData.fromObject(model).toObject(NetworkSiblingSetInner.class);
        Assertions.assertEquals("ukgjnpiucgygevq", model.networkSiblingSetId());
        Assertions.assertEquals("typmrbpizcdrqjsd", model.subnetId());
        Assertions.assertEquals("dnfyhxdeoejzicwi", model.networkSiblingSetStateId());
        Assertions.assertEquals(NetworkFeatures.STANDARD, model.networkFeatures());
        Assertions.assertEquals("hagalpbuxwgipwh", model.nicInfoList().get(0).volumeResourceIds().get(0));
    }
}
