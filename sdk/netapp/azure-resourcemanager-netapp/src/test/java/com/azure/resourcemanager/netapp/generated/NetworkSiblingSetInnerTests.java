// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.fluent.models.NetworkSiblingSetInner;
import com.azure.resourcemanager.netapp.models.NetworkFeatures;
import com.azure.resourcemanager.netapp.models.NicInfo;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NetworkSiblingSetInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkSiblingSetInner model = BinaryData.fromString(
            "{\"networkSiblingSetId\":\"yeamdphagalpb\",\"subnetId\":\"wgipwhono\",\"networkSiblingSetStateId\":\"gshwankixz\",\"networkFeatures\":\"Basic_Standard\",\"provisioningState\":\"Updating\",\"nicInfoList\":[{\"ipAddress\":\"tmryw\",\"volumeResourceIds\":[\"oqftiyqzrnkcq\",\"yx\",\"whzlsicohoq\",\"nwvlryavwhheunmm\"]},{\"ipAddress\":\"gyxzk\",\"volumeResourceIds\":[\"cukoklyaxuconu\",\"szfkbe\",\"pewr\"]},{\"ipAddress\":\"mwvvjektcxsenhw\",\"volumeResourceIds\":[\"ffrzpwvlqdqgbiqy\"]},{\"ipAddress\":\"hkaetcktvfc\",\"volumeResourceIds\":[\"snkymuctq\",\"jf\",\"ebrjcxe\"]}]}")
            .toObject(NetworkSiblingSetInner.class);
        Assertions.assertEquals("yeamdphagalpb", model.networkSiblingSetId());
        Assertions.assertEquals("wgipwhono", model.subnetId());
        Assertions.assertEquals("gshwankixz", model.networkSiblingSetStateId());
        Assertions.assertEquals(NetworkFeatures.BASIC_STANDARD, model.networkFeatures());
        Assertions.assertEquals("oqftiyqzrnkcq", model.nicInfoList().get(0).volumeResourceIds().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkSiblingSetInner model = new NetworkSiblingSetInner().withNetworkSiblingSetId("yeamdphagalpb")
            .withSubnetId("wgipwhono")
            .withNetworkSiblingSetStateId("gshwankixz")
            .withNetworkFeatures(NetworkFeatures.BASIC_STANDARD)
            .withNicInfoList(Arrays.asList(
                new NicInfo()
                    .withVolumeResourceIds(Arrays.asList("oqftiyqzrnkcq", "yx", "whzlsicohoq", "nwvlryavwhheunmm")),
                new NicInfo().withVolumeResourceIds(Arrays.asList("cukoklyaxuconu", "szfkbe", "pewr")),
                new NicInfo().withVolumeResourceIds(Arrays.asList("ffrzpwvlqdqgbiqy")),
                new NicInfo().withVolumeResourceIds(Arrays.asList("snkymuctq", "jf", "ebrjcxe"))));
        model = BinaryData.fromObject(model).toObject(NetworkSiblingSetInner.class);
        Assertions.assertEquals("yeamdphagalpb", model.networkSiblingSetId());
        Assertions.assertEquals("wgipwhono", model.subnetId());
        Assertions.assertEquals("gshwankixz", model.networkSiblingSetStateId());
        Assertions.assertEquals(NetworkFeatures.BASIC_STANDARD, model.networkFeatures());
        Assertions.assertEquals("oqftiyqzrnkcq", model.nicInfoList().get(0).volumeResourceIds().get(0));
    }
}
