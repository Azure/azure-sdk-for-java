// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.netapp.fluent.models.NetworkSiblingSetInner;
import com.azure.resourcemanager.netapp.models.NetworkFeatures;
import com.azure.resourcemanager.netapp.models.NicInfo;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NetworkSiblingSetInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkSiblingSetInner model = BinaryData.fromString(
            "{\"networkSiblingSetId\":\"hxdeoejz\",\"subnetId\":\"w\",\"networkSiblingSetStateId\":\"sjttgzfbish\",\"networkFeatures\":\"Basic\",\"provisioningState\":\"Updating\",\"nicInfoList\":[{\"ipAddress\":\"yeamdphagalpb\",\"volumeResourceIds\":[\"gipwhonowkg\",\"hwankixzbinjepu\",\"tmryw\"]},{\"ipAddress\":\"zoqftiyqzrnkcqvy\",\"volumeResourceIds\":[\"hzls\",\"cohoq\",\"nwvlryavwhheunmm\"]},{\"ipAddress\":\"gyxzk\",\"volumeResourceIds\":[\"cukoklyaxuconu\",\"szfkbe\",\"pewr\"]},{\"ipAddress\":\"mwvvjektcxsenhw\",\"volumeResourceIds\":[\"ffrzpwvlqdqgbiqy\"]}]}")
            .toObject(NetworkSiblingSetInner.class);
        Assertions.assertEquals("hxdeoejz", model.networkSiblingSetId());
        Assertions.assertEquals("w", model.subnetId());
        Assertions.assertEquals("sjttgzfbish", model.networkSiblingSetStateId());
        Assertions.assertEquals(NetworkFeatures.BASIC, model.networkFeatures());
        Assertions.assertEquals("gipwhonowkg", model.nicInfoList().get(0).volumeResourceIds().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkSiblingSetInner model = new NetworkSiblingSetInner().withNetworkSiblingSetId("hxdeoejz")
            .withSubnetId("w")
            .withNetworkSiblingSetStateId("sjttgzfbish")
            .withNetworkFeatures(NetworkFeatures.BASIC)
            .withNicInfoList(Arrays.asList(
                new NicInfo().withVolumeResourceIds(Arrays.asList("gipwhonowkg", "hwankixzbinjepu", "tmryw")),
                new NicInfo().withVolumeResourceIds(Arrays.asList("hzls", "cohoq", "nwvlryavwhheunmm")),
                new NicInfo().withVolumeResourceIds(Arrays.asList("cukoklyaxuconu", "szfkbe", "pewr")),
                new NicInfo().withVolumeResourceIds(Arrays.asList("ffrzpwvlqdqgbiqy"))));
        model = BinaryData.fromObject(model).toObject(NetworkSiblingSetInner.class);
        Assertions.assertEquals("hxdeoejz", model.networkSiblingSetId());
        Assertions.assertEquals("w", model.subnetId());
        Assertions.assertEquals("sjttgzfbish", model.networkSiblingSetStateId());
        Assertions.assertEquals(NetworkFeatures.BASIC, model.networkFeatures());
        Assertions.assertEquals("gipwhonowkg", model.nicInfoList().get(0).volumeResourceIds().get(0));
    }
}
