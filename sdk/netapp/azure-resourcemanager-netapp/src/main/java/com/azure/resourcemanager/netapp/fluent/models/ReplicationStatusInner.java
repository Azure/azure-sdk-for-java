// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.netapp.models.MirrorState;
import com.azure.resourcemanager.netapp.models.RelationshipStatus;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Replication status. */
@Fluent
public final class ReplicationStatusInner {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ReplicationStatusInner.class);

    /*
     * Replication health check
     */
    @JsonProperty(value = "healthy")
    private Boolean healthy;

    /*
     * Status of the mirror relationship
     */
    @JsonProperty(value = "relationshipStatus")
    private RelationshipStatus relationshipStatus;

    /*
     * The status of the replication
     */
    @JsonProperty(value = "mirrorState")
    private MirrorState mirrorState;

    /*
     * The progress of the replication
     */
    @JsonProperty(value = "totalProgress")
    private String totalProgress;

    /*
     * Displays error message if the replication is in an error state
     */
    @JsonProperty(value = "errorMessage")
    private String errorMessage;

    /**
     * Get the healthy property: Replication health check.
     *
     * @return the healthy value.
     */
    public Boolean healthy() {
        return this.healthy;
    }

    /**
     * Set the healthy property: Replication health check.
     *
     * @param healthy the healthy value to set.
     * @return the ReplicationStatusInner object itself.
     */
    public ReplicationStatusInner withHealthy(Boolean healthy) {
        this.healthy = healthy;
        return this;
    }

    /**
     * Get the relationshipStatus property: Status of the mirror relationship.
     *
     * @return the relationshipStatus value.
     */
    public RelationshipStatus relationshipStatus() {
        return this.relationshipStatus;
    }

    /**
     * Set the relationshipStatus property: Status of the mirror relationship.
     *
     * @param relationshipStatus the relationshipStatus value to set.
     * @return the ReplicationStatusInner object itself.
     */
    public ReplicationStatusInner withRelationshipStatus(RelationshipStatus relationshipStatus) {
        this.relationshipStatus = relationshipStatus;
        return this;
    }

    /**
     * Get the mirrorState property: The status of the replication.
     *
     * @return the mirrorState value.
     */
    public MirrorState mirrorState() {
        return this.mirrorState;
    }

    /**
     * Set the mirrorState property: The status of the replication.
     *
     * @param mirrorState the mirrorState value to set.
     * @return the ReplicationStatusInner object itself.
     */
    public ReplicationStatusInner withMirrorState(MirrorState mirrorState) {
        this.mirrorState = mirrorState;
        return this;
    }

    /**
     * Get the totalProgress property: The progress of the replication.
     *
     * @return the totalProgress value.
     */
    public String totalProgress() {
        return this.totalProgress;
    }

    /**
     * Set the totalProgress property: The progress of the replication.
     *
     * @param totalProgress the totalProgress value to set.
     * @return the ReplicationStatusInner object itself.
     */
    public ReplicationStatusInner withTotalProgress(String totalProgress) {
        this.totalProgress = totalProgress;
        return this;
    }

    /**
     * Get the errorMessage property: Displays error message if the replication is in an error state.
     *
     * @return the errorMessage value.
     */
    public String errorMessage() {
        return this.errorMessage;
    }

    /**
     * Set the errorMessage property: Displays error message if the replication is in an error state.
     *
     * @param errorMessage the errorMessage value to set.
     * @return the ReplicationStatusInner object itself.
     */
    public ReplicationStatusInner withErrorMessage(String errorMessage) {
        this.errorMessage = errorMessage;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
