// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of VolumeGroups. */
public interface VolumeGroups {
    /**
     * Describe all volume groups
     *
     * <p>List all volume groups for given account.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the NetApp account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of volume group resources as paginated response with {@link PagedIterable}.
     */
    PagedIterable<VolumeGroup> listByNetAppAccount(String resourceGroupName, String accountName);

    /**
     * Describe all volume groups
     *
     * <p>List all volume groups for given account.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the NetApp account.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of volume group resources as paginated response with {@link PagedIterable}.
     */
    PagedIterable<VolumeGroup> listByNetAppAccount(String resourceGroupName, String accountName, Context context);

    /**
     * Describe a Volume Group
     *
     * <p>Get details of the specified volume group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the NetApp account.
     * @param volumeGroupName The name of the volumeGroup.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return details of the specified volume group along with {@link Response}.
     */
    Response<VolumeGroupDetails> getWithResponse(
        String resourceGroupName, String accountName, String volumeGroupName, Context context);

    /**
     * Describe a Volume Group
     *
     * <p>Get details of the specified volume group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the NetApp account.
     * @param volumeGroupName The name of the volumeGroup.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return details of the specified volume group.
     */
    VolumeGroupDetails get(String resourceGroupName, String accountName, String volumeGroupName);

    /**
     * Delete a volume group
     *
     * <p>Delete the specified volume group only if there are no volumes under volume group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the NetApp account.
     * @param volumeGroupName The name of the volumeGroup.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String accountName, String volumeGroupName);

    /**
     * Delete a volume group
     *
     * <p>Delete the specified volume group only if there are no volumes under volume group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the NetApp account.
     * @param volumeGroupName The name of the volumeGroup.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String accountName, String volumeGroupName, Context context);

    /**
     * Describe a Volume Group
     *
     * <p>Get details of the specified volume group.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return details of the specified volume group along with {@link Response}.
     */
    VolumeGroupDetails getById(String id);

    /**
     * Describe a Volume Group
     *
     * <p>Get details of the specified volume group.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return details of the specified volume group along with {@link Response}.
     */
    Response<VolumeGroupDetails> getByIdWithResponse(String id, Context context);

    /**
     * Delete a volume group
     *
     * <p>Delete the specified volume group only if there are no volumes under volume group.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete a volume group
     *
     * <p>Delete the specified volume group only if there are no volumes under volume group.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new VolumeGroupDetails resource.
     *
     * @param name resource name.
     * @return the first stage of the new VolumeGroupDetails definition.
     */
    VolumeGroupDetails.DefinitionStages.Blank define(String name);
}
