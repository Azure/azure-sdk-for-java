// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.netapp.models.RegionInfoAvailabilityZoneMappingsItem;
import com.azure.resourcemanager.netapp.models.RegionStorageToNetworkProximity;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Information regarding regionInfo Item.
 */
@Fluent
public final class RegionInfoResourceInner extends ProxyResource {
    /*
     * regionInfo properties
     */
    @JsonProperty(value = "properties")
    private RegionInfoInner innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Creates an instance of RegionInfoResourceInner class.
     */
    public RegionInfoResourceInner() {
    }

    /**
     * Get the innerProperties property: regionInfo properties.
     * 
     * @return the innerProperties value.
     */
    private RegionInfoInner innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the storageToNetworkProximity property: Storage to Network Proximity
     * 
     * Provides storage to network proximity information in the region.
     * 
     * @return the storageToNetworkProximity value.
     */
    public RegionStorageToNetworkProximity storageToNetworkProximity() {
        return this.innerProperties() == null ? null : this.innerProperties().storageToNetworkProximity();
    }

    /**
     * Set the storageToNetworkProximity property: Storage to Network Proximity
     * 
     * Provides storage to network proximity information in the region.
     * 
     * @param storageToNetworkProximity the storageToNetworkProximity value to set.
     * @return the RegionInfoResourceInner object itself.
     */
    public RegionInfoResourceInner
        withStorageToNetworkProximity(RegionStorageToNetworkProximity storageToNetworkProximity) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RegionInfoInner();
        }
        this.innerProperties().withStorageToNetworkProximity(storageToNetworkProximity);
        return this;
    }

    /**
     * Get the availabilityZoneMappings property: Logical availability zone mappings.
     * 
     * Provides logical availability zone mappings for the subscription for a region.
     * 
     * @return the availabilityZoneMappings value.
     */
    public List<RegionInfoAvailabilityZoneMappingsItem> availabilityZoneMappings() {
        return this.innerProperties() == null ? null : this.innerProperties().availabilityZoneMappings();
    }

    /**
     * Set the availabilityZoneMappings property: Logical availability zone mappings.
     * 
     * Provides logical availability zone mappings for the subscription for a region.
     * 
     * @param availabilityZoneMappings the availabilityZoneMappings value to set.
     * @return the RegionInfoResourceInner object itself.
     */
    public RegionInfoResourceInner
        withAvailabilityZoneMappings(List<RegionInfoAvailabilityZoneMappingsItem> availabilityZoneMappings) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RegionInfoInner();
        }
        this.innerProperties().withAvailabilityZoneMappings(availabilityZoneMappings);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
