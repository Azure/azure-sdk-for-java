// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.netapp.fluent.models.UsageResultInner;

/**
 * An instance of this class provides access to all the operations defined in NetAppResourceUsagesClient.
 */
public interface NetAppResourceUsagesClient {
    /**
     * Get usages
     * 
     * Get current subscription usages.
     * 
     * @param location The name of the Azure region.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return current subscription usages as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<UsageResultInner> list(String location);

    /**
     * Get usages
     * 
     * Get current subscription usages.
     * 
     * @param location The name of the Azure region.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return current subscription usages as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<UsageResultInner> list(String location, Context context);

    /**
     * Get specific type of usage
     * 
     * Get current subscription usage of the specific type.
     * 
     * @param location The name of the Azure region.
     * @param usageType The type of usage.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return current subscription usage of the specific type along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<UsageResultInner> getWithResponse(String location, String usageType, Context context);

    /**
     * Get specific type of usage
     * 
     * Get current subscription usage of the specific type.
     * 
     * @param location The name of the Azure region.
     * @param usageType The type of usage.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return current subscription usage of the specific type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    UsageResultInner get(String location, String usageType);
}
