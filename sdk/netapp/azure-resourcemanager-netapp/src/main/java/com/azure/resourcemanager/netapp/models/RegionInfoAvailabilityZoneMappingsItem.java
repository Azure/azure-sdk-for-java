// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The RegionInfoAvailabilityZoneMappingsItem model.
 */
@Fluent
public final class RegionInfoAvailabilityZoneMappingsItem
    implements JsonSerializable<RegionInfoAvailabilityZoneMappingsItem> {
    /*
     * Logical availability zone.
     */
    private String availabilityZone;

    /*
     * Available availability zone
     */
    private Boolean isAvailable;

    /**
     * Creates an instance of RegionInfoAvailabilityZoneMappingsItem class.
     */
    public RegionInfoAvailabilityZoneMappingsItem() {
    }

    /**
     * Get the availabilityZone property: Logical availability zone.
     * 
     * @return the availabilityZone value.
     */
    public String availabilityZone() {
        return this.availabilityZone;
    }

    /**
     * Set the availabilityZone property: Logical availability zone.
     * 
     * @param availabilityZone the availabilityZone value to set.
     * @return the RegionInfoAvailabilityZoneMappingsItem object itself.
     */
    public RegionInfoAvailabilityZoneMappingsItem withAvailabilityZone(String availabilityZone) {
        this.availabilityZone = availabilityZone;
        return this;
    }

    /**
     * Get the isAvailable property: Available availability zone.
     * 
     * @return the isAvailable value.
     */
    public Boolean isAvailable() {
        return this.isAvailable;
    }

    /**
     * Set the isAvailable property: Available availability zone.
     * 
     * @param isAvailable the isAvailable value to set.
     * @return the RegionInfoAvailabilityZoneMappingsItem object itself.
     */
    public RegionInfoAvailabilityZoneMappingsItem withIsAvailable(Boolean isAvailable) {
        this.isAvailable = isAvailable;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("availabilityZone", this.availabilityZone);
        jsonWriter.writeBooleanField("isAvailable", this.isAvailable);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RegionInfoAvailabilityZoneMappingsItem from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RegionInfoAvailabilityZoneMappingsItem if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the RegionInfoAvailabilityZoneMappingsItem.
     */
    public static RegionInfoAvailabilityZoneMappingsItem fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RegionInfoAvailabilityZoneMappingsItem deserializedRegionInfoAvailabilityZoneMappingsItem
                = new RegionInfoAvailabilityZoneMappingsItem();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("availabilityZone".equals(fieldName)) {
                    deserializedRegionInfoAvailabilityZoneMappingsItem.availabilityZone = reader.getString();
                } else if ("isAvailable".equals(fieldName)) {
                    deserializedRegionInfoAvailabilityZoneMappingsItem.isAvailable
                        = reader.getNullable(JsonReader::getBoolean);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRegionInfoAvailabilityZoneMappingsItem;
        });
    }
}
