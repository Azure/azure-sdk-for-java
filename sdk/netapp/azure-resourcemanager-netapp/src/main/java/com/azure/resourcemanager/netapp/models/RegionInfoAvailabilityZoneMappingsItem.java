// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The RegionInfoAvailabilityZoneMappingsItem model. */
@Fluent
public final class RegionInfoAvailabilityZoneMappingsItem {
    /*
     * Logical availability zone.
     */
    @JsonProperty(value = "availabilityZone")
    private String availabilityZone;

    /*
     * Available availability zone
     */
    @JsonProperty(value = "isAvailable")
    private Boolean isAvailable;

    /** Creates an instance of RegionInfoAvailabilityZoneMappingsItem class. */
    public RegionInfoAvailabilityZoneMappingsItem() {
    }

    /**
     * Get the availabilityZone property: Logical availability zone.
     *
     * @return the availabilityZone value.
     */
    public String availabilityZone() {
        return this.availabilityZone;
    }

    /**
     * Set the availabilityZone property: Logical availability zone.
     *
     * @param availabilityZone the availabilityZone value to set.
     * @return the RegionInfoAvailabilityZoneMappingsItem object itself.
     */
    public RegionInfoAvailabilityZoneMappingsItem withAvailabilityZone(String availabilityZone) {
        this.availabilityZone = availabilityZone;
        return this;
    }

    /**
     * Get the isAvailable property: Available availability zone.
     *
     * @return the isAvailable value.
     */
    public Boolean isAvailable() {
        return this.isAvailable;
    }

    /**
     * Set the isAvailable property: Available availability zone.
     *
     * @param isAvailable the isAvailable value to set.
     * @return the RegionInfoAvailabilityZoneMappingsItem object itself.
     */
    public RegionInfoAvailabilityZoneMappingsItem withIsAvailable(Boolean isAvailable) {
        this.isAvailable = isAvailable;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
