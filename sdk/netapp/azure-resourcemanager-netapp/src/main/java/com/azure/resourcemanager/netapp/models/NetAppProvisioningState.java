// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.models;

import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * Provisioning state of the resource.
 */
public final class NetAppProvisioningState extends ExpandableStringEnum<NetAppProvisioningState> {
    /**
     * Static value Succeeded for NetAppProvisioningState.
     */
    public static final NetAppProvisioningState SUCCEEDED = fromString("Succeeded");

    /**
     * Static value Failed for NetAppProvisioningState.
     */
    public static final NetAppProvisioningState FAILED = fromString("Failed");

    /**
     * Static value Canceled for NetAppProvisioningState.
     */
    public static final NetAppProvisioningState CANCELED = fromString("Canceled");

    /**
     * Static value Provisioning for NetAppProvisioningState.
     */
    public static final NetAppProvisioningState PROVISIONING = fromString("Provisioning");

    /**
     * Static value Moving for NetAppProvisioningState.
     */
    public static final NetAppProvisioningState MOVING = fromString("Moving");

    /**
     * Static value Updating for NetAppProvisioningState.
     */
    public static final NetAppProvisioningState UPDATING = fromString("Updating");

    /**
     * Static value Deleting for NetAppProvisioningState.
     */
    public static final NetAppProvisioningState DELETING = fromString("Deleting");

    /**
     * Static value Accepted for NetAppProvisioningState.
     */
    public static final NetAppProvisioningState ACCEPTED = fromString("Accepted");

    /**
     * Creates a new instance of NetAppProvisioningState value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public NetAppProvisioningState() {
    }

    /**
     * Creates or finds a NetAppProvisioningState from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding NetAppProvisioningState.
     */
    public static NetAppProvisioningState fromString(String name) {
        return fromString(name, NetAppProvisioningState.class);
    }

    /**
     * Gets known NetAppProvisioningState values.
     * 
     * @return known NetAppProvisioningState values.
     */
    public static Collection<NetAppProvisioningState> values() {
        return values(NetAppProvisioningState.class);
    }
}
