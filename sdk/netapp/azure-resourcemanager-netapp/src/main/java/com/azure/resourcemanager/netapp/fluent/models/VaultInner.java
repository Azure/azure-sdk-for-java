// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.ProxyResource;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Vault information. */
@JsonFlatten
@Fluent
public class VaultInner extends ProxyResource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(VaultInner.class);

    /*
     * Resource location
     */
    @JsonProperty(value = "location", required = true)
    private String location;

    /*
     * Vault Name
     */
    @JsonProperty(value = "properties.vaultName")
    private String vaultName;

    /**
     * Get the location property: Resource location.
     *
     * @return the location value.
     */
    public String location() {
        return this.location;
    }

    /**
     * Set the location property: Resource location.
     *
     * @param location the location value to set.
     * @return the VaultInner object itself.
     */
    public VaultInner withLocation(String location) {
        this.location = location;
        return this;
    }

    /**
     * Get the vaultName property: Vault Name.
     *
     * @return the vaultName value.
     */
    public String vaultName() {
        return this.vaultName;
    }

    /**
     * Set the vaultName property: Vault Name.
     *
     * @param vaultName the vaultName value to set.
     * @return the VaultInner object itself.
     */
    public VaultInner withVaultName(String vaultName) {
        this.vaultName = vaultName;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (location() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property location in model VaultInner"));
        }
    }
}
