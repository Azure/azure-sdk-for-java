// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.models;

import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * Gets the status of the NetworkSiblingSet at the time the operation was called.
 */
public final class NetworkSiblingSetProvisioningState extends ExpandableStringEnum<NetworkSiblingSetProvisioningState> {
    /**
     * Static value Succeeded for NetworkSiblingSetProvisioningState.
     */
    public static final NetworkSiblingSetProvisioningState SUCCEEDED = fromString("Succeeded");

    /**
     * Static value Failed for NetworkSiblingSetProvisioningState.
     */
    public static final NetworkSiblingSetProvisioningState FAILED = fromString("Failed");

    /**
     * Static value Canceled for NetworkSiblingSetProvisioningState.
     */
    public static final NetworkSiblingSetProvisioningState CANCELED = fromString("Canceled");

    /**
     * Static value Updating for NetworkSiblingSetProvisioningState.
     */
    public static final NetworkSiblingSetProvisioningState UPDATING = fromString("Updating");

    /**
     * Creates a new instance of NetworkSiblingSetProvisioningState value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public NetworkSiblingSetProvisioningState() {
    }

    /**
     * Creates or finds a NetworkSiblingSetProvisioningState from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding NetworkSiblingSetProvisioningState.
     */
    public static NetworkSiblingSetProvisioningState fromString(String name) {
        return fromString(name, NetworkSiblingSetProvisioningState.class);
    }

    /**
     * Gets known NetworkSiblingSetProvisioningState values.
     * 
     * @return known NetworkSiblingSetProvisioningState values.
     */
    public static Collection<NetworkSiblingSetProvisioningState> values() {
        return values(NetworkSiblingSetProvisioningState.class);
    }
}
