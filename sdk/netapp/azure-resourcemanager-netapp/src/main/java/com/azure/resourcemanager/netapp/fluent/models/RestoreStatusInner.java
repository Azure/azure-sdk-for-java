// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.netapp.models.MirrorState;
import com.azure.resourcemanager.netapp.models.RelationshipStatus;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Restore status. */
@Immutable
public final class RestoreStatusInner {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(RestoreStatusInner.class);

    /*
     * Restore health status
     */
    @JsonProperty(value = "healthy", access = JsonProperty.Access.WRITE_ONLY)
    private Boolean healthy;

    /*
     * Status of the restore SnapMirror relationship
     */
    @JsonProperty(value = "relationshipStatus", access = JsonProperty.Access.WRITE_ONLY)
    private RelationshipStatus relationshipStatus;

    /*
     * The status of the restore
     */
    @JsonProperty(value = "mirrorState", access = JsonProperty.Access.WRITE_ONLY)
    private MirrorState mirrorState;

    /*
     * Reason for the unhealthy restore relationship
     */
    @JsonProperty(value = "unhealthyReason", access = JsonProperty.Access.WRITE_ONLY)
    private String unhealthyReason;

    /*
     * Displays error message if the restore is in an error state
     */
    @JsonProperty(value = "errorMessage", access = JsonProperty.Access.WRITE_ONLY)
    private String errorMessage;

    /*
     * Displays the total bytes transferred
     */
    @JsonProperty(value = "totalTransferBytes", access = JsonProperty.Access.WRITE_ONLY)
    private Long totalTransferBytes;

    /**
     * Get the healthy property: Restore health status.
     *
     * @return the healthy value.
     */
    public Boolean healthy() {
        return this.healthy;
    }

    /**
     * Get the relationshipStatus property: Status of the restore SnapMirror relationship.
     *
     * @return the relationshipStatus value.
     */
    public RelationshipStatus relationshipStatus() {
        return this.relationshipStatus;
    }

    /**
     * Get the mirrorState property: The status of the restore.
     *
     * @return the mirrorState value.
     */
    public MirrorState mirrorState() {
        return this.mirrorState;
    }

    /**
     * Get the unhealthyReason property: Reason for the unhealthy restore relationship.
     *
     * @return the unhealthyReason value.
     */
    public String unhealthyReason() {
        return this.unhealthyReason;
    }

    /**
     * Get the errorMessage property: Displays error message if the restore is in an error state.
     *
     * @return the errorMessage value.
     */
    public String errorMessage() {
        return this.errorMessage;
    }

    /**
     * Get the totalTransferBytes property: Displays the total bytes transferred.
     *
     * @return the totalTransferBytes value.
     */
    public Long totalTransferBytes() {
        return this.totalTransferBytes;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
