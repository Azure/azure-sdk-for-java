// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The bucket's Access and Secret key pair Expiry Time expressed as the number of days from now.
 */
@Fluent
public final class BucketCredentialsExpiry implements JsonSerializable<BucketCredentialsExpiry> {
    /*
     * The number of days from now until the newly generated Access and Secret key pair will expire.
     */
    private Integer keyPairExpiryDays;

    /**
     * Creates an instance of BucketCredentialsExpiry class.
     */
    public BucketCredentialsExpiry() {
    }

    /**
     * Get the keyPairExpiryDays property: The number of days from now until the newly generated Access and Secret key
     * pair will expire.
     * 
     * @return the keyPairExpiryDays value.
     */
    public Integer keyPairExpiryDays() {
        return this.keyPairExpiryDays;
    }

    /**
     * Set the keyPairExpiryDays property: The number of days from now until the newly generated Access and Secret key
     * pair will expire.
     * 
     * @param keyPairExpiryDays the keyPairExpiryDays value to set.
     * @return the BucketCredentialsExpiry object itself.
     */
    public BucketCredentialsExpiry withKeyPairExpiryDays(Integer keyPairExpiryDays) {
        this.keyPairExpiryDays = keyPairExpiryDays;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("keyPairExpiryDays", this.keyPairExpiryDays);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of BucketCredentialsExpiry from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of BucketCredentialsExpiry if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the BucketCredentialsExpiry.
     */
    public static BucketCredentialsExpiry fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            BucketCredentialsExpiry deserializedBucketCredentialsExpiry = new BucketCredentialsExpiry();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("keyPairExpiryDays".equals(fieldName)) {
                    deserializedBucketCredentialsExpiry.keyPairExpiryDays = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedBucketCredentialsExpiry;
        });
    }
}
