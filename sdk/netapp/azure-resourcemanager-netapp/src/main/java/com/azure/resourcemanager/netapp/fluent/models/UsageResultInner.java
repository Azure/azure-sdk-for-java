// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.netapp.models.UsageName;
import java.io.IOException;

/**
 * Usages entity model.
 */
@Immutable
public final class UsageResultInner implements JsonSerializable<UsageResultInner> {
    /*
     * The id of the usage.
     */
    private String id;

    /*
     * The name of the usage.
     */
    private UsageName name;

    /*
     * Usage properties
     */
    private UsageProperties innerProperties;

    /**
     * Creates an instance of UsageResultInner class.
     */
    public UsageResultInner() {
    }

    /**
     * Get the id property: The id of the usage.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Get the name property: The name of the usage.
     * 
     * @return the name value.
     */
    public UsageName name() {
        return this.name;
    }

    /**
     * Get the innerProperties property: Usage properties.
     * 
     * @return the innerProperties value.
     */
    private UsageProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the currentValue property: The current usage value for the subscription.
     * 
     * @return the currentValue value.
     */
    public Integer currentValue() {
        return this.innerProperties() == null ? null : this.innerProperties().currentValue();
    }

    /**
     * Get the limit property: The limit of the usage.
     * 
     * @return the limit value.
     */
    public Integer limit() {
        return this.innerProperties() == null ? null : this.innerProperties().limit();
    }

    /**
     * Get the unit property: The unit of the usage.
     * 
     * @return the unit value.
     */
    public String unit() {
        return this.innerProperties() == null ? null : this.innerProperties().unit();
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (name() != null) {
            name().validate();
        }
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("properties", this.innerProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of UsageResultInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of UsageResultInner if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the UsageResultInner.
     */
    public static UsageResultInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            UsageResultInner deserializedUsageResultInner = new UsageResultInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedUsageResultInner.id = reader.getString();
                } else if ("name".equals(fieldName)) {
                    deserializedUsageResultInner.name = UsageName.fromJson(reader);
                } else if ("properties".equals(fieldName)) {
                    deserializedUsageResultInner.innerProperties = UsageProperties.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedUsageResultInner;
        });
    }
}
