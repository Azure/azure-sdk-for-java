// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.netapp.models;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.netapp.fluent.models.SnapshotPolicyInner;
import java.util.Map;

/** An immutable client-side representation of SnapshotPolicy. */
public interface SnapshotPolicy {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the hourlySchedule property: Schedule for hourly snapshots.
     *
     * @return the hourlySchedule value.
     */
    HourlySchedule hourlySchedule();

    /**
     * Gets the dailySchedule property: Schedule for daily snapshots.
     *
     * @return the dailySchedule value.
     */
    DailySchedule dailySchedule();

    /**
     * Gets the weeklySchedule property: Schedule for weekly snapshots.
     *
     * @return the weeklySchedule value.
     */
    WeeklySchedule weeklySchedule();

    /**
     * Gets the monthlySchedule property: Schedule for monthly snapshots.
     *
     * @return the monthlySchedule value.
     */
    MonthlySchedule monthlySchedule();

    /**
     * Gets the enabled property: The property to decide policy is enabled or not.
     *
     * @return the enabled value.
     */
    Boolean enabled();

    /**
     * Gets the provisioningState property: Azure lifecycle management.
     *
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.netapp.fluent.models.SnapshotPolicyInner object.
     *
     * @return the inner object.
     */
    SnapshotPolicyInner innerModel();

    /** The entirety of the SnapshotPolicy definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithParentResource,
            DefinitionStages.WithCreate {
    }
    /** The SnapshotPolicy definition stages. */
    interface DefinitionStages {
        /** The first stage of the SnapshotPolicy definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the SnapshotPolicy definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(String location);
        }
        /** The stage of the SnapshotPolicy definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, accountName.
             *
             * @param resourceGroupName The name of the resource group.
             * @param accountName The name of the NetApp account.
             * @return the next definition stage.
             */
            WithCreate withExistingNetAppAccount(String resourceGroupName, String accountName);
        }
        /**
         * The stage of the SnapshotPolicy definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithHourlySchedule,
                DefinitionStages.WithDailySchedule,
                DefinitionStages.WithWeeklySchedule,
                DefinitionStages.WithMonthlySchedule,
                DefinitionStages.WithEnabled {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            SnapshotPolicy create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            SnapshotPolicy create(Context context);
        }
        /** The stage of the SnapshotPolicy definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the SnapshotPolicy definition allowing to specify hourlySchedule. */
        interface WithHourlySchedule {
            /**
             * Specifies the hourlySchedule property: Schedule for hourly snapshots.
             *
             * @param hourlySchedule Schedule for hourly snapshots.
             * @return the next definition stage.
             */
            WithCreate withHourlySchedule(HourlySchedule hourlySchedule);
        }
        /** The stage of the SnapshotPolicy definition allowing to specify dailySchedule. */
        interface WithDailySchedule {
            /**
             * Specifies the dailySchedule property: Schedule for daily snapshots.
             *
             * @param dailySchedule Schedule for daily snapshots.
             * @return the next definition stage.
             */
            WithCreate withDailySchedule(DailySchedule dailySchedule);
        }
        /** The stage of the SnapshotPolicy definition allowing to specify weeklySchedule. */
        interface WithWeeklySchedule {
            /**
             * Specifies the weeklySchedule property: Schedule for weekly snapshots.
             *
             * @param weeklySchedule Schedule for weekly snapshots.
             * @return the next definition stage.
             */
            WithCreate withWeeklySchedule(WeeklySchedule weeklySchedule);
        }
        /** The stage of the SnapshotPolicy definition allowing to specify monthlySchedule. */
        interface WithMonthlySchedule {
            /**
             * Specifies the monthlySchedule property: Schedule for monthly snapshots.
             *
             * @param monthlySchedule Schedule for monthly snapshots.
             * @return the next definition stage.
             */
            WithCreate withMonthlySchedule(MonthlySchedule monthlySchedule);
        }
        /** The stage of the SnapshotPolicy definition allowing to specify enabled. */
        interface WithEnabled {
            /**
             * Specifies the enabled property: The property to decide policy is enabled or not.
             *
             * @param enabled The property to decide policy is enabled or not.
             * @return the next definition stage.
             */
            WithCreate withEnabled(Boolean enabled);
        }
    }
    /**
     * Begins update for the SnapshotPolicy resource.
     *
     * @return the stage of resource update.
     */
    SnapshotPolicy.Update update();

    /** The template for SnapshotPolicy update. */
    interface Update
        extends UpdateStages.WithTags,
            UpdateStages.WithHourlySchedule,
            UpdateStages.WithDailySchedule,
            UpdateStages.WithWeeklySchedule,
            UpdateStages.WithMonthlySchedule,
            UpdateStages.WithEnabled {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        SnapshotPolicy apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        SnapshotPolicy apply(Context context);
    }
    /** The SnapshotPolicy update stages. */
    interface UpdateStages {
        /** The stage of the SnapshotPolicy update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags.
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
        /** The stage of the SnapshotPolicy update allowing to specify hourlySchedule. */
        interface WithHourlySchedule {
            /**
             * Specifies the hourlySchedule property: Schedule for hourly snapshots.
             *
             * @param hourlySchedule Schedule for hourly snapshots.
             * @return the next definition stage.
             */
            Update withHourlySchedule(HourlySchedule hourlySchedule);
        }
        /** The stage of the SnapshotPolicy update allowing to specify dailySchedule. */
        interface WithDailySchedule {
            /**
             * Specifies the dailySchedule property: Schedule for daily snapshots.
             *
             * @param dailySchedule Schedule for daily snapshots.
             * @return the next definition stage.
             */
            Update withDailySchedule(DailySchedule dailySchedule);
        }
        /** The stage of the SnapshotPolicy update allowing to specify weeklySchedule. */
        interface WithWeeklySchedule {
            /**
             * Specifies the weeklySchedule property: Schedule for weekly snapshots.
             *
             * @param weeklySchedule Schedule for weekly snapshots.
             * @return the next definition stage.
             */
            Update withWeeklySchedule(WeeklySchedule weeklySchedule);
        }
        /** The stage of the SnapshotPolicy update allowing to specify monthlySchedule. */
        interface WithMonthlySchedule {
            /**
             * Specifies the monthlySchedule property: Schedule for monthly snapshots.
             *
             * @param monthlySchedule Schedule for monthly snapshots.
             * @return the next definition stage.
             */
            Update withMonthlySchedule(MonthlySchedule monthlySchedule);
        }
        /** The stage of the SnapshotPolicy update allowing to specify enabled. */
        interface WithEnabled {
            /**
             * Specifies the enabled property: The property to decide policy is enabled or not.
             *
             * @param enabled The property to decide policy is enabled or not.
             * @return the next definition stage.
             */
            Update withEnabled(Boolean enabled);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    SnapshotPolicy refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    SnapshotPolicy refresh(Context context);
}
