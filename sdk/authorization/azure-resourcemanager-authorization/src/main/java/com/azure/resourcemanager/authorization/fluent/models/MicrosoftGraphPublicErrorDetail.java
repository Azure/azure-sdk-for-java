// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.authorization.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.LinkedHashMap;
import java.util.Map;

/**
 * publicErrorDetail.
 */
@Fluent
public final class MicrosoftGraphPublicErrorDetail implements JsonSerializable<MicrosoftGraphPublicErrorDetail> {
    /*
     * The code property.
     */
    private String code;

    /*
     * The message property.
     */
    private String message;

    /*
     * The target property.
     */
    private String target;

    /*
     * publicErrorDetail
     */
    private Map<String, Object> additionalProperties;

    /**
     * Creates an instance of MicrosoftGraphPublicErrorDetail class.
     */
    public MicrosoftGraphPublicErrorDetail() {
    }

    /**
     * Get the code property: The code property.
     * 
     * @return the code value.
     */
    public String code() {
        return this.code;
    }

    /**
     * Set the code property: The code property.
     * 
     * @param code the code value to set.
     * @return the MicrosoftGraphPublicErrorDetail object itself.
     */
    public MicrosoftGraphPublicErrorDetail withCode(String code) {
        this.code = code;
        return this;
    }

    /**
     * Get the message property: The message property.
     * 
     * @return the message value.
     */
    public String message() {
        return this.message;
    }

    /**
     * Set the message property: The message property.
     * 
     * @param message the message value to set.
     * @return the MicrosoftGraphPublicErrorDetail object itself.
     */
    public MicrosoftGraphPublicErrorDetail withMessage(String message) {
        this.message = message;
        return this;
    }

    /**
     * Get the target property: The target property.
     * 
     * @return the target value.
     */
    public String target() {
        return this.target;
    }

    /**
     * Set the target property: The target property.
     * 
     * @param target the target value to set.
     * @return the MicrosoftGraphPublicErrorDetail object itself.
     */
    public MicrosoftGraphPublicErrorDetail withTarget(String target) {
        this.target = target;
        return this;
    }

    /**
     * Get the additionalProperties property: publicErrorDetail.
     * 
     * @return the additionalProperties value.
     */
    public Map<String, Object> additionalProperties() {
        return this.additionalProperties;
    }

    /**
     * Set the additionalProperties property: publicErrorDetail.
     * 
     * @param additionalProperties the additionalProperties value to set.
     * @return the MicrosoftGraphPublicErrorDetail object itself.
     */
    public MicrosoftGraphPublicErrorDetail withAdditionalProperties(Map<String, Object> additionalProperties) {
        this.additionalProperties = additionalProperties;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("code", this.code);
        jsonWriter.writeStringField("message", this.message);
        jsonWriter.writeStringField("target", this.target);
        if (additionalProperties != null) {
            for (Map.Entry<String, Object> additionalProperty : additionalProperties.entrySet()) {
                jsonWriter.writeUntypedField(additionalProperty.getKey(), additionalProperty.getValue());
            }
        }
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MicrosoftGraphPublicErrorDetail from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MicrosoftGraphPublicErrorDetail if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the MicrosoftGraphPublicErrorDetail.
     */
    public static MicrosoftGraphPublicErrorDetail fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            MicrosoftGraphPublicErrorDetail deserializedMicrosoftGraphPublicErrorDetail
                = new MicrosoftGraphPublicErrorDetail();
            Map<String, Object> additionalProperties = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("code".equals(fieldName)) {
                    deserializedMicrosoftGraphPublicErrorDetail.code = reader.getString();
                } else if ("message".equals(fieldName)) {
                    deserializedMicrosoftGraphPublicErrorDetail.message = reader.getString();
                } else if ("target".equals(fieldName)) {
                    deserializedMicrosoftGraphPublicErrorDetail.target = reader.getString();
                } else {
                    if (additionalProperties == null) {
                        additionalProperties = new LinkedHashMap<>();
                    }

                    additionalProperties.put(fieldName, reader.readUntyped());
                }
            }
            deserializedMicrosoftGraphPublicErrorDetail.additionalProperties = additionalProperties;

            return deserializedMicrosoftGraphPublicErrorDetail;
        });
    }
}
