/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.authorization.v2018_09_01_preview;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.authorization.v2018_09_01_preview.implementation.RoleDefinitionInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.authorization.v2018_09_01_preview.implementation.AuthorizationManager;
import java.util.List;
import com.microsoft.azure.management.authorization.v2018_09_01_preview.implementation.PermissionInner;

/**
 * Type representing RoleDefinition.
 */
public interface RoleDefinition extends HasInner<RoleDefinitionInner>, Indexable, Updatable<RoleDefinition.Update>, Refreshable<RoleDefinition>, HasManager<AuthorizationManager> {
    /**
     * @return the assignableScopes value.
     */
    List<String> assignableScopes();

    /**
     * @return the description value.
     */
    String description();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the permissions value.
     */
    List<Permission> permissions();

    /**
     * @return the roleName value.
     */
    String roleName();

    /**
     * @return the roleType value.
     */
    String roleType();

    /**
     * @return the type value.
     */
    String type();

    /**
     * The entirety of the RoleDefinition definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithScope, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of RoleDefinition definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a RoleDefinition definition.
         */
        interface Blank extends WithScope {
        }

        /**
         * The stage of the roledefinition definition allowing to specify Scope.
         */
        interface WithScope {
           /**
            * Specifies scope.
            * @param scope The scope of the role definition
            * @return the next definition stage
            */
            WithCreate withScope(String scope);
        }

        /**
         * The stage of the roledefinition definition allowing to specify AssignableScopes.
         */
        interface WithAssignableScopes {
            /**
             * Specifies assignableScopes.
             * @param assignableScopes Role definition assignable scopes
             * @return the next definition stage
             */
            WithCreate withAssignableScopes(List<String> assignableScopes);
        }

        /**
         * The stage of the roledefinition definition allowing to specify Description.
         */
        interface WithDescription {
            /**
             * Specifies description.
             * @param description The role definition description
             * @return the next definition stage
             */
            WithCreate withDescription(String description);
        }

        /**
         * The stage of the roledefinition definition allowing to specify Permissions.
         */
        interface WithPermissions {
            /**
             * Specifies permissions.
             * @param permissions Role definition permissions
             * @return the next definition stage
             */
            WithCreate withPermissions(List<PermissionInner> permissions);
        }

        /**
         * The stage of the roledefinition definition allowing to specify RoleName.
         */
        interface WithRoleName {
            /**
             * Specifies roleName.
             * @param roleName The role name
             * @return the next definition stage
             */
            WithCreate withRoleName(String roleName);
        }

        /**
         * The stage of the roledefinition definition allowing to specify RoleType.
         */
        interface WithRoleType {
            /**
             * Specifies roleType.
             * @param roleType The role type
             * @return the next definition stage
             */
            WithCreate withRoleType(String roleType);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<RoleDefinition>, DefinitionStages.WithAssignableScopes, DefinitionStages.WithDescription, DefinitionStages.WithPermissions, DefinitionStages.WithRoleName, DefinitionStages.WithRoleType {
        }
    }
    /**
     * The template for a RoleDefinition update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<RoleDefinition>, UpdateStages.WithAssignableScopes, UpdateStages.WithDescription, UpdateStages.WithPermissions, UpdateStages.WithRoleName, UpdateStages.WithRoleType {
    }

    /**
     * Grouping of RoleDefinition update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the roledefinition update allowing to specify AssignableScopes.
         */
        interface WithAssignableScopes {
            /**
             * Specifies assignableScopes.
             * @param assignableScopes Role definition assignable scopes
             * @return the next update stage
             */
            Update withAssignableScopes(List<String> assignableScopes);
        }

        /**
         * The stage of the roledefinition update allowing to specify Description.
         */
        interface WithDescription {
            /**
             * Specifies description.
             * @param description The role definition description
             * @return the next update stage
             */
            Update withDescription(String description);
        }

        /**
         * The stage of the roledefinition update allowing to specify Permissions.
         */
        interface WithPermissions {
            /**
             * Specifies permissions.
             * @param permissions Role definition permissions
             * @return the next update stage
             */
            Update withPermissions(List<PermissionInner> permissions);
        }

        /**
         * The stage of the roledefinition update allowing to specify RoleName.
         */
        interface WithRoleName {
            /**
             * Specifies roleName.
             * @param roleName The role name
             * @return the next update stage
             */
            Update withRoleName(String roleName);
        }

        /**
         * The stage of the roledefinition update allowing to specify RoleType.
         */
        interface WithRoleType {
            /**
             * Specifies roleType.
             * @param roleType The role type
             * @return the next update stage
             */
            Update withRoleType(String roleType);
        }

    }
}
