// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.authorization.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** Access Review Contacted Reviewer. */
@Fluent
public final class AccessReviewContactedReviewerInner extends ProxyResource {
    /*
     * Access Review Contacted Reviewer properties.
     */
    @JsonProperty(value = "properties")
    private AccessReviewContactedReviewerProperties innerProperties;

    /**
     * Get the innerProperties property: Access Review Contacted Reviewer properties.
     *
     * @return the innerProperties value.
     */
    private AccessReviewContactedReviewerProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the userDisplayName property: The display name of the reviewer.
     *
     * @return the userDisplayName value.
     */
    public String userDisplayName() {
        return this.innerProperties() == null ? null : this.innerProperties().userDisplayName();
    }

    /**
     * Get the userPrincipalName property: The user principal name of the reviewer.
     *
     * @return the userPrincipalName value.
     */
    public String userPrincipalName() {
        return this.innerProperties() == null ? null : this.innerProperties().userPrincipalName();
    }

    /**
     * Get the createdDateTime property: Date Time when the reviewer was contacted.
     *
     * @return the createdDateTime value.
     */
    public OffsetDateTime createdDateTime() {
        return this.innerProperties() == null ? null : this.innerProperties().createdDateTime();
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
