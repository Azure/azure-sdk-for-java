// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.authorization.generated.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.authorization.generated.fluent.models.AccessReviewInstanceInner;
import java.time.OffsetDateTime;
import java.util.List;

/** An immutable client-side representation of AccessReviewInstance. */
public interface AccessReviewInstance {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the status property: This read-only field specifies the status of an access review instance.
     *
     * @return the status value.
     */
    AccessReviewInstanceStatus status();

    /**
     * Gets the startDateTime property: The DateTime when the review instance is scheduled to be start.
     *
     * @return the startDateTime value.
     */
    OffsetDateTime startDateTime();

    /**
     * Gets the endDateTime property: The DateTime when the review instance is scheduled to end.
     *
     * @return the endDateTime value.
     */
    OffsetDateTime endDateTime();

    /**
     * Gets the reviewers property: This is the collection of reviewers.
     *
     * @return the reviewers value.
     */
    List<AccessReviewReviewer> reviewers();

    /**
     * Gets the backupReviewers property: This is the collection of backup reviewers.
     *
     * @return the backupReviewers value.
     */
    List<AccessReviewReviewer> backupReviewers();

    /**
     * Gets the reviewersType property: This field specifies the type of reviewers for a review. Usually for a review,
     * reviewers are explicitly assigned. However, in some cases, the reviewers may not be assigned and instead be
     * chosen dynamically. For example managers review or self review.
     *
     * @return the reviewersType value.
     */
    AccessReviewInstanceReviewersType reviewersType();

    /**
     * Gets the inner com.azure.resourcemanager.authorization.generated.fluent.models.AccessReviewInstanceInner object.
     *
     * @return the inner object.
     */
    AccessReviewInstanceInner innerModel();

    /** The entirety of the AccessReviewInstance definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The AccessReviewInstance definition stages. */
    interface DefinitionStages {
        /** The first stage of the AccessReviewInstance definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the AccessReviewInstance definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies scheduleDefinitionId.
             *
             * @param scheduleDefinitionId The id of the access review schedule definition.
             * @return the next definition stage.
             */
            WithCreate withExistingAccessReviewScheduleDefinition(String scheduleDefinitionId);
        }
        /**
         * The stage of the AccessReviewInstance definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithStartDateTime,
                DefinitionStages.WithEndDateTime,
                DefinitionStages.WithReviewers,
                DefinitionStages.WithBackupReviewers {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            AccessReviewInstance create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            AccessReviewInstance create(Context context);
        }
        /** The stage of the AccessReviewInstance definition allowing to specify startDateTime. */
        interface WithStartDateTime {
            /**
             * Specifies the startDateTime property: The DateTime when the review instance is scheduled to be start..
             *
             * @param startDateTime The DateTime when the review instance is scheduled to be start.
             * @return the next definition stage.
             */
            WithCreate withStartDateTime(OffsetDateTime startDateTime);
        }
        /** The stage of the AccessReviewInstance definition allowing to specify endDateTime. */
        interface WithEndDateTime {
            /**
             * Specifies the endDateTime property: The DateTime when the review instance is scheduled to end..
             *
             * @param endDateTime The DateTime when the review instance is scheduled to end.
             * @return the next definition stage.
             */
            WithCreate withEndDateTime(OffsetDateTime endDateTime);
        }
        /** The stage of the AccessReviewInstance definition allowing to specify reviewers. */
        interface WithReviewers {
            /**
             * Specifies the reviewers property: This is the collection of reviewers..
             *
             * @param reviewers This is the collection of reviewers.
             * @return the next definition stage.
             */
            WithCreate withReviewers(List<AccessReviewReviewer> reviewers);
        }
        /** The stage of the AccessReviewInstance definition allowing to specify backupReviewers. */
        interface WithBackupReviewers {
            /**
             * Specifies the backupReviewers property: This is the collection of backup reviewers..
             *
             * @param backupReviewers This is the collection of backup reviewers.
             * @return the next definition stage.
             */
            WithCreate withBackupReviewers(List<AccessReviewReviewer> backupReviewers);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    AccessReviewInstance refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    AccessReviewInstance refresh(Context context);
}
