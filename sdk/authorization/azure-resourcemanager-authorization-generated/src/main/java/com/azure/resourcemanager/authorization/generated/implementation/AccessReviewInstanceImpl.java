// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.authorization.generated.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.authorization.generated.fluent.models.AccessReviewInstanceInner;
import com.azure.resourcemanager.authorization.generated.fluent.models.AccessReviewInstanceProperties;
import com.azure.resourcemanager.authorization.generated.models.AccessReviewInstance;
import com.azure.resourcemanager.authorization.generated.models.AccessReviewInstanceReviewersType;
import com.azure.resourcemanager.authorization.generated.models.AccessReviewInstanceStatus;
import com.azure.resourcemanager.authorization.generated.models.AccessReviewReviewer;
import java.time.OffsetDateTime;
import java.util.Collections;
import java.util.List;

public final class AccessReviewInstanceImpl implements AccessReviewInstance, AccessReviewInstance.Definition {
    private AccessReviewInstanceInner innerObject;

    private final com.azure.resourcemanager.authorization.generated.AuthorizationManager serviceManager;

    AccessReviewInstanceImpl(
        AccessReviewInstanceInner innerObject,
        com.azure.resourcemanager.authorization.generated.AuthorizationManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public AccessReviewInstanceStatus status() {
        return this.innerModel().status();
    }

    public OffsetDateTime startDateTime() {
        return this.innerModel().startDateTime();
    }

    public OffsetDateTime endDateTime() {
        return this.innerModel().endDateTime();
    }

    public List<AccessReviewReviewer> reviewers() {
        List<AccessReviewReviewer> inner = this.innerModel().reviewers();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<AccessReviewReviewer> backupReviewers() {
        List<AccessReviewReviewer> inner = this.innerModel().backupReviewers();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public AccessReviewInstanceReviewersType reviewersType() {
        return this.innerModel().reviewersType();
    }

    public AccessReviewInstanceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.authorization.generated.AuthorizationManager manager() {
        return this.serviceManager;
    }

    private String scheduleDefinitionId;

    private String id;

    private AccessReviewInstanceProperties createProperties;

    public AccessReviewInstanceImpl withExistingAccessReviewScheduleDefinition(String scheduleDefinitionId) {
        this.scheduleDefinitionId = scheduleDefinitionId;
        return this;
    }

    public AccessReviewInstance create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAccessReviewInstances()
                .createWithResponse(scheduleDefinitionId, id, createProperties, Context.NONE)
                .getValue();
        return this;
    }

    public AccessReviewInstance create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAccessReviewInstances()
                .createWithResponse(scheduleDefinitionId, id, createProperties, context)
                .getValue();
        return this;
    }

    AccessReviewInstanceImpl(
        String name, com.azure.resourcemanager.authorization.generated.AuthorizationManager serviceManager) {
        this.innerObject = new AccessReviewInstanceInner();
        this.serviceManager = serviceManager;
        this.id = name;
        this.createProperties = new AccessReviewInstanceProperties();
    }

    public AccessReviewInstance refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAccessReviewInstances()
                .getByIdWithResponse(scheduleDefinitionId, id, Context.NONE)
                .getValue();
        return this;
    }

    public AccessReviewInstance refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAccessReviewInstances()
                .getByIdWithResponse(scheduleDefinitionId, id, context)
                .getValue();
        return this;
    }

    public AccessReviewInstanceImpl withStartDateTime(OffsetDateTime startDateTime) {
        this.createProperties.withStartDateTime(startDateTime);
        return this;
    }

    public AccessReviewInstanceImpl withEndDateTime(OffsetDateTime endDateTime) {
        this.createProperties.withEndDateTime(endDateTime);
        return this;
    }

    public AccessReviewInstanceImpl withReviewers(List<AccessReviewReviewer> reviewers) {
        this.createProperties.withReviewers(reviewers);
        return this;
    }

    public AccessReviewInstanceImpl withBackupReviewers(List<AccessReviewReviewer> backupReviewers) {
        this.createProperties.withBackupReviewers(backupReviewers);
        return this;
    }
}
