// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.authorization.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.authorization.generated.fluent.TenantLevelAccessReviewInstanceContactedReviewersClient;
import com.azure.resourcemanager.authorization.generated.fluent.models.AccessReviewContactedReviewerInner;
import com.azure.resourcemanager.authorization.generated.models.AccessReviewContactedReviewer;
import com.azure.resourcemanager.authorization.generated.models.TenantLevelAccessReviewInstanceContactedReviewers;

public final class TenantLevelAccessReviewInstanceContactedReviewersImpl
    implements TenantLevelAccessReviewInstanceContactedReviewers {
    private static final ClientLogger LOGGER =
        new ClientLogger(TenantLevelAccessReviewInstanceContactedReviewersImpl.class);

    private final TenantLevelAccessReviewInstanceContactedReviewersClient innerClient;

    private final com.azure.resourcemanager.authorization.generated.AuthorizationManager serviceManager;

    public TenantLevelAccessReviewInstanceContactedReviewersImpl(
        TenantLevelAccessReviewInstanceContactedReviewersClient innerClient,
        com.azure.resourcemanager.authorization.generated.AuthorizationManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<AccessReviewContactedReviewer> list(String scheduleDefinitionId, String id) {
        PagedIterable<AccessReviewContactedReviewerInner> inner = this.serviceClient().list(scheduleDefinitionId, id);
        return Utils.mapPage(inner, inner1 -> new AccessReviewContactedReviewerImpl(inner1, this.manager()));
    }

    public PagedIterable<AccessReviewContactedReviewer> list(String scheduleDefinitionId, String id, Context context) {
        PagedIterable<AccessReviewContactedReviewerInner> inner =
            this.serviceClient().list(scheduleDefinitionId, id, context);
        return Utils.mapPage(inner, inner1 -> new AccessReviewContactedReviewerImpl(inner1, this.manager()));
    }

    private TenantLevelAccessReviewInstanceContactedReviewersClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.authorization.generated.AuthorizationManager manager() {
        return this.serviceManager;
    }
}
