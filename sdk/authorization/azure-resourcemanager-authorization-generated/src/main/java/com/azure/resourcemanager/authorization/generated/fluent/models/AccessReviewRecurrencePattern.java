// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.authorization.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.authorization.generated.models.AccessReviewRecurrencePatternType;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Recurrence Pattern of an Access Review Schedule Definition. */
@Fluent
public final class AccessReviewRecurrencePattern {
    /*
     * The recurrence type : weekly, monthly, etc.
     */
    @JsonProperty(value = "type")
    private AccessReviewRecurrencePatternType type;

    /*
     * The interval for recurrence. For a quarterly review, the interval is 3
     * for type : absoluteMonthly.
     */
    @JsonProperty(value = "interval")
    private Integer interval;

    /**
     * Get the type property: The recurrence type : weekly, monthly, etc.
     *
     * @return the type value.
     */
    public AccessReviewRecurrencePatternType type() {
        return this.type;
    }

    /**
     * Set the type property: The recurrence type : weekly, monthly, etc.
     *
     * @param type the type value to set.
     * @return the AccessReviewRecurrencePattern object itself.
     */
    public AccessReviewRecurrencePattern withType(AccessReviewRecurrencePatternType type) {
        this.type = type;
        return this;
    }

    /**
     * Get the interval property: The interval for recurrence. For a quarterly review, the interval is 3 for type :
     * absoluteMonthly.
     *
     * @return the interval value.
     */
    public Integer interval() {
        return this.interval;
    }

    /**
     * Set the interval property: The interval for recurrence. For a quarterly review, the interval is 3 for type :
     * absoluteMonthly.
     *
     * @param interval the interval value to set.
     * @return the AccessReviewRecurrencePattern object itself.
     */
    public AccessReviewRecurrencePattern withInterval(Integer interval) {
        this.interval = interval;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
