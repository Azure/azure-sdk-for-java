// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.authorization.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.authorization.generated.models.AccessReviewInstanceReviewersType;
import com.azure.resourcemanager.authorization.generated.models.AccessReviewInstanceStatus;
import com.azure.resourcemanager.authorization.generated.models.AccessReviewReviewer;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;

/** Access Review Instance properties. */
@Fluent
public final class AccessReviewInstanceProperties {
    /*
     * This read-only field specifies the status of an access review instance.
     */
    @JsonProperty(value = "status", access = JsonProperty.Access.WRITE_ONLY)
    private AccessReviewInstanceStatus status;

    /*
     * The DateTime when the review instance is scheduled to be start.
     */
    @JsonProperty(value = "startDateTime")
    private OffsetDateTime startDateTime;

    /*
     * The DateTime when the review instance is scheduled to end.
     */
    @JsonProperty(value = "endDateTime")
    private OffsetDateTime endDateTime;

    /*
     * This is the collection of reviewers.
     */
    @JsonProperty(value = "reviewers")
    private List<AccessReviewReviewer> reviewers;

    /*
     * This is the collection of backup reviewers.
     */
    @JsonProperty(value = "backupReviewers")
    private List<AccessReviewReviewer> backupReviewers;

    /*
     * This field specifies the type of reviewers for a review. Usually for a
     * review, reviewers are explicitly assigned. However, in some cases, the
     * reviewers may not be assigned and instead be chosen dynamically. For
     * example managers review or self review.
     */
    @JsonProperty(value = "reviewersType", access = JsonProperty.Access.WRITE_ONLY)
    private AccessReviewInstanceReviewersType reviewersType;

    /**
     * Get the status property: This read-only field specifies the status of an access review instance.
     *
     * @return the status value.
     */
    public AccessReviewInstanceStatus status() {
        return this.status;
    }

    /**
     * Get the startDateTime property: The DateTime when the review instance is scheduled to be start.
     *
     * @return the startDateTime value.
     */
    public OffsetDateTime startDateTime() {
        return this.startDateTime;
    }

    /**
     * Set the startDateTime property: The DateTime when the review instance is scheduled to be start.
     *
     * @param startDateTime the startDateTime value to set.
     * @return the AccessReviewInstanceProperties object itself.
     */
    public AccessReviewInstanceProperties withStartDateTime(OffsetDateTime startDateTime) {
        this.startDateTime = startDateTime;
        return this;
    }

    /**
     * Get the endDateTime property: The DateTime when the review instance is scheduled to end.
     *
     * @return the endDateTime value.
     */
    public OffsetDateTime endDateTime() {
        return this.endDateTime;
    }

    /**
     * Set the endDateTime property: The DateTime when the review instance is scheduled to end.
     *
     * @param endDateTime the endDateTime value to set.
     * @return the AccessReviewInstanceProperties object itself.
     */
    public AccessReviewInstanceProperties withEndDateTime(OffsetDateTime endDateTime) {
        this.endDateTime = endDateTime;
        return this;
    }

    /**
     * Get the reviewers property: This is the collection of reviewers.
     *
     * @return the reviewers value.
     */
    public List<AccessReviewReviewer> reviewers() {
        return this.reviewers;
    }

    /**
     * Set the reviewers property: This is the collection of reviewers.
     *
     * @param reviewers the reviewers value to set.
     * @return the AccessReviewInstanceProperties object itself.
     */
    public AccessReviewInstanceProperties withReviewers(List<AccessReviewReviewer> reviewers) {
        this.reviewers = reviewers;
        return this;
    }

    /**
     * Get the backupReviewers property: This is the collection of backup reviewers.
     *
     * @return the backupReviewers value.
     */
    public List<AccessReviewReviewer> backupReviewers() {
        return this.backupReviewers;
    }

    /**
     * Set the backupReviewers property: This is the collection of backup reviewers.
     *
     * @param backupReviewers the backupReviewers value to set.
     * @return the AccessReviewInstanceProperties object itself.
     */
    public AccessReviewInstanceProperties withBackupReviewers(List<AccessReviewReviewer> backupReviewers) {
        this.backupReviewers = backupReviewers;
        return this;
    }

    /**
     * Get the reviewersType property: This field specifies the type of reviewers for a review. Usually for a review,
     * reviewers are explicitly assigned. However, in some cases, the reviewers may not be assigned and instead be
     * chosen dynamically. For example managers review or self review.
     *
     * @return the reviewersType value.
     */
    public AccessReviewInstanceReviewersType reviewersType() {
        return this.reviewersType;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (reviewers() != null) {
            reviewers().forEach(e -> e.validate());
        }
        if (backupReviewers() != null) {
            backupReviewers().forEach(e -> e.validate());
        }
    }
}
