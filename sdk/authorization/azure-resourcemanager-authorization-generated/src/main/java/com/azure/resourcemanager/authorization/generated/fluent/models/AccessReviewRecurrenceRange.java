// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.authorization.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.authorization.generated.models.AccessReviewRecurrenceRangeType;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** Recurrence Range of an Access Review Schedule Definition. */
@Fluent
public final class AccessReviewRecurrenceRange {
    /*
     * The recurrence range type. The possible values are: endDate, noEnd,
     * numbered.
     */
    @JsonProperty(value = "type")
    private AccessReviewRecurrenceRangeType type;

    /*
     * The number of times to repeat the access review. Required and must be
     * positive if type is numbered.
     */
    @JsonProperty(value = "numberOfOccurrences")
    private Integer numberOfOccurrences;

    /*
     * The DateTime when the review is scheduled to be start. This could be a
     * date in the future. Required on create.
     */
    @JsonProperty(value = "startDate")
    private OffsetDateTime startDate;

    /*
     * The DateTime when the review is scheduled to end. Required if type is
     * endDate
     */
    @JsonProperty(value = "endDate")
    private OffsetDateTime endDate;

    /**
     * Get the type property: The recurrence range type. The possible values are: endDate, noEnd, numbered.
     *
     * @return the type value.
     */
    public AccessReviewRecurrenceRangeType type() {
        return this.type;
    }

    /**
     * Set the type property: The recurrence range type. The possible values are: endDate, noEnd, numbered.
     *
     * @param type the type value to set.
     * @return the AccessReviewRecurrenceRange object itself.
     */
    public AccessReviewRecurrenceRange withType(AccessReviewRecurrenceRangeType type) {
        this.type = type;
        return this;
    }

    /**
     * Get the numberOfOccurrences property: The number of times to repeat the access review. Required and must be
     * positive if type is numbered.
     *
     * @return the numberOfOccurrences value.
     */
    public Integer numberOfOccurrences() {
        return this.numberOfOccurrences;
    }

    /**
     * Set the numberOfOccurrences property: The number of times to repeat the access review. Required and must be
     * positive if type is numbered.
     *
     * @param numberOfOccurrences the numberOfOccurrences value to set.
     * @return the AccessReviewRecurrenceRange object itself.
     */
    public AccessReviewRecurrenceRange withNumberOfOccurrences(Integer numberOfOccurrences) {
        this.numberOfOccurrences = numberOfOccurrences;
        return this;
    }

    /**
     * Get the startDate property: The DateTime when the review is scheduled to be start. This could be a date in the
     * future. Required on create.
     *
     * @return the startDate value.
     */
    public OffsetDateTime startDate() {
        return this.startDate;
    }

    /**
     * Set the startDate property: The DateTime when the review is scheduled to be start. This could be a date in the
     * future. Required on create.
     *
     * @param startDate the startDate value to set.
     * @return the AccessReviewRecurrenceRange object itself.
     */
    public AccessReviewRecurrenceRange withStartDate(OffsetDateTime startDate) {
        this.startDate = startDate;
        return this;
    }

    /**
     * Get the endDate property: The DateTime when the review is scheduled to end. Required if type is endDate.
     *
     * @return the endDate value.
     */
    public OffsetDateTime endDate() {
        return this.endDate;
    }

    /**
     * Set the endDate property: The DateTime when the review is scheduled to end. Required if type is endDate.
     *
     * @param endDate the endDate value to set.
     * @return the AccessReviewRecurrenceRange object itself.
     */
    public AccessReviewRecurrenceRange withEndDate(OffsetDateTime endDate) {
        this.endDate = endDate;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
