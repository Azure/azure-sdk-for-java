// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.authorization.generated.models;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.authorization.generated.fluent.models.AccessReviewScheduleSettings;

/** Resource collection API of AccessReviewDefaultSettingsOperations. */
public interface AccessReviewDefaultSettingsOperations {
    /**
     * Get access review default settings for the subscription.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return access review default settings for the subscription.
     */
    AccessReviewDefaultSettings get();

    /**
     * Get access review default settings for the subscription.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return access review default settings for the subscription along with {@link Response}.
     */
    Response<AccessReviewDefaultSettings> getWithResponse(Context context);

    /**
     * Get access review default settings for the subscription.
     *
     * @param properties Access review schedule settings.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return access review default settings for the subscription.
     */
    AccessReviewDefaultSettings put(AccessReviewScheduleSettings properties);

    /**
     * Get access review default settings for the subscription.
     *
     * @param properties Access review schedule settings.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return access review default settings for the subscription along with {@link Response}.
     */
    Response<AccessReviewDefaultSettings> putWithResponse(AccessReviewScheduleSettings properties, Context context);
}
