// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.ai.metricsadvisor.implementation.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The AzureDataLakeStorageGen2Parameter model.
 */
@Fluent
public final class AzureDataLakeStorageGen2Parameter implements JsonSerializable<AzureDataLakeStorageGen2Parameter> {
    /*
     * The account name of this Azure Data Lake
     */
    private String accountName;

    /*
     * The account key that can access this Azure Data Lake
     */
    private String accountKey;

    /*
     * The file system (container) name in this Azure Data Lake
     */
    private String fileSystemName;

    /*
     * The directory template under this file system
     */
    private String directoryTemplate;

    /*
     * The file template
     */
    private String fileTemplate;

    /**
     * Creates an instance of AzureDataLakeStorageGen2Parameter class.
     */
    public AzureDataLakeStorageGen2Parameter() {
    }

    /**
     * Get the accountName property: The account name of this Azure Data Lake.
     * 
     * @return the accountName value.
     */
    public String getAccountName() {
        return this.accountName;
    }

    /**
     * Set the accountName property: The account name of this Azure Data Lake.
     * 
     * @param accountName the accountName value to set.
     * @return the AzureDataLakeStorageGen2Parameter object itself.
     */
    public AzureDataLakeStorageGen2Parameter setAccountName(String accountName) {
        this.accountName = accountName;
        return this;
    }

    /**
     * Get the accountKey property: The account key that can access this Azure Data Lake.
     * 
     * @return the accountKey value.
     */
    public String getAccountKey() {
        return this.accountKey;
    }

    /**
     * Set the accountKey property: The account key that can access this Azure Data Lake.
     * 
     * @param accountKey the accountKey value to set.
     * @return the AzureDataLakeStorageGen2Parameter object itself.
     */
    public AzureDataLakeStorageGen2Parameter setAccountKey(String accountKey) {
        this.accountKey = accountKey;
        return this;
    }

    /**
     * Get the fileSystemName property: The file system (container) name in this Azure Data Lake.
     * 
     * @return the fileSystemName value.
     */
    public String getFileSystemName() {
        return this.fileSystemName;
    }

    /**
     * Set the fileSystemName property: The file system (container) name in this Azure Data Lake.
     * 
     * @param fileSystemName the fileSystemName value to set.
     * @return the AzureDataLakeStorageGen2Parameter object itself.
     */
    public AzureDataLakeStorageGen2Parameter setFileSystemName(String fileSystemName) {
        this.fileSystemName = fileSystemName;
        return this;
    }

    /**
     * Get the directoryTemplate property: The directory template under this file system.
     * 
     * @return the directoryTemplate value.
     */
    public String getDirectoryTemplate() {
        return this.directoryTemplate;
    }

    /**
     * Set the directoryTemplate property: The directory template under this file system.
     * 
     * @param directoryTemplate the directoryTemplate value to set.
     * @return the AzureDataLakeStorageGen2Parameter object itself.
     */
    public AzureDataLakeStorageGen2Parameter setDirectoryTemplate(String directoryTemplate) {
        this.directoryTemplate = directoryTemplate;
        return this;
    }

    /**
     * Get the fileTemplate property: The file template.
     * 
     * @return the fileTemplate value.
     */
    public String getFileTemplate() {
        return this.fileTemplate;
    }

    /**
     * Set the fileTemplate property: The file template.
     * 
     * @param fileTemplate the fileTemplate value to set.
     * @return the AzureDataLakeStorageGen2Parameter object itself.
     */
    public AzureDataLakeStorageGen2Parameter setFileTemplate(String fileTemplate) {
        this.fileTemplate = fileTemplate;
        return this;
    }

    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("fileSystemName", this.fileSystemName);
        jsonWriter.writeStringField("directoryTemplate", this.directoryTemplate);
        jsonWriter.writeStringField("fileTemplate", this.fileTemplate);
        jsonWriter.writeStringField("accountName", this.accountName);
        jsonWriter.writeStringField("accountKey", this.accountKey);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureDataLakeStorageGen2Parameter from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureDataLakeStorageGen2Parameter if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AzureDataLakeStorageGen2Parameter.
     */
    public static AzureDataLakeStorageGen2Parameter fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AzureDataLakeStorageGen2Parameter deserializedAzureDataLakeStorageGen2Parameter
                = new AzureDataLakeStorageGen2Parameter();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("fileSystemName".equals(fieldName)) {
                    deserializedAzureDataLakeStorageGen2Parameter.fileSystemName = reader.getString();
                } else if ("directoryTemplate".equals(fieldName)) {
                    deserializedAzureDataLakeStorageGen2Parameter.directoryTemplate = reader.getString();
                } else if ("fileTemplate".equals(fieldName)) {
                    deserializedAzureDataLakeStorageGen2Parameter.fileTemplate = reader.getString();
                } else if ("accountName".equals(fieldName)) {
                    deserializedAzureDataLakeStorageGen2Parameter.accountName = reader.getString();
                } else if ("accountKey".equals(fieldName)) {
                    deserializedAzureDataLakeStorageGen2Parameter.accountKey = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAzureDataLakeStorageGen2Parameter;
        });
    }
}
