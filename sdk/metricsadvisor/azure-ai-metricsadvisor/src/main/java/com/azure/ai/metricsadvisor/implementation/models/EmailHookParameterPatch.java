// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.ai.metricsadvisor.implementation.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The EmailHookParameterPatch model.
 */
@Fluent
public final class EmailHookParameterPatch implements JsonSerializable<EmailHookParameterPatch> {
    /*
     * Email TO: list.
     */
    private List<String> toList;

    /**
     * Creates an instance of EmailHookParameterPatch class.
     */
    public EmailHookParameterPatch() {
    }

    /**
     * Get the toList property: Email TO: list.
     * 
     * @return the toList value.
     */
    public List<String> getToList() {
        return this.toList;
    }

    /**
     * Set the toList property: Email TO: list.
     * 
     * @param toList the toList value to set.
     * @return the EmailHookParameterPatch object itself.
     */
    public EmailHookParameterPatch setToList(List<String> toList) {
        this.toList = toList;
        return this;
    }

    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("toList", this.toList, (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of EmailHookParameterPatch from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of EmailHookParameterPatch if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the EmailHookParameterPatch.
     */
    public static EmailHookParameterPatch fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            EmailHookParameterPatch deserializedEmailHookParameterPatch = new EmailHookParameterPatch();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("toList".equals(fieldName)) {
                    List<String> toList = reader.readArray(reader1 -> reader1.getString());
                    deserializedEmailHookParameterPatch.toList = toList;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedEmailHookParameterPatch;
        });
    }
}
