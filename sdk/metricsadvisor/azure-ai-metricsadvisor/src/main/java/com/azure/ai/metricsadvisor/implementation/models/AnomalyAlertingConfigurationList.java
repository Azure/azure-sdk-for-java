// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.ai.metricsadvisor.implementation.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The AnomalyAlertingConfigurationList model.
 */
@Immutable
public final class AnomalyAlertingConfigurationList implements JsonSerializable<AnomalyAlertingConfigurationList> {
    /*
     * The value property.
     */
    @Generated
    private List<AnomalyAlertingConfiguration> value;

    /*
     * The @nextLink property.
     */
    @Generated
    private String nextLink;

    /**
     * Creates an instance of AnomalyAlertingConfigurationList class.
     */
    @Generated
    public AnomalyAlertingConfigurationList() {
    }

    /**
     * Get the value property: The value property.
     * 
     * @return the value value.
     */
    @Generated
    public List<AnomalyAlertingConfiguration> getValue() {
        return this.value;
    }

    /**
     * Get the nextLink property: The &#064;nextLink property.
     * 
     * @return the nextLink value.
     */
    @Generated
    public String getNextLink() {
        return this.nextLink;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AnomalyAlertingConfigurationList from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AnomalyAlertingConfigurationList if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AnomalyAlertingConfigurationList.
     */
    @Generated
    public static AnomalyAlertingConfigurationList fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AnomalyAlertingConfigurationList deserializedAnomalyAlertingConfigurationList
                = new AnomalyAlertingConfigurationList();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("value".equals(fieldName)) {
                    List<AnomalyAlertingConfiguration> value
                        = reader.readArray(reader1 -> AnomalyAlertingConfiguration.fromJson(reader1));
                    deserializedAnomalyAlertingConfigurationList.value = value;
                } else if ("@nextLink".equals(fieldName)) {
                    deserializedAnomalyAlertingConfigurationList.nextLink = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAnomalyAlertingConfigurationList;
        });
    }
}
