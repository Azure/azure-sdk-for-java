// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.extendedlocation.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.extendedlocation.CustomLocationsManager;
import com.azure.resourcemanager.extendedlocation.models.CustomLocation;
import com.azure.resourcemanager.extendedlocation.models.HostType;
import com.azure.resourcemanager.extendedlocation.models.ResourceIdentityType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CustomLocationsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"identity\":{\"principalId\":\"zvyifqrvkdvj\",\"tenantId\":\"lrmv\",\"type\":\"SystemAssigned\"},\"properties\":{\"authentication\":{\"type\":\"kpnpulexxbczwtr\",\"value\":\"iqzbq\"},\"clusterExtensionIds\":[\"ovm\",\"okacspk\",\"lhzdobp\",\"jmflbvvnch\"],\"displayName\":\"cciw\",\"hostResourceId\":\"juqk\",\"hostType\":\"Kubernetes\",\"namespace\":\"jiwkuofoskghsau\",\"provisioningState\":\"mjmvxieduugidyjr\"},\"location\":\"byao\",\"tags\":{\"onpc\":\"xc\"},\"id\":\"hocohslkev\",\"name\":\"eggzfb\",\"type\":\"hfmvfaxkffe\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        CustomLocationsManager manager = CustomLocationsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<CustomLocation> response = manager.customLocations().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("byao", response.iterator().next().location());
        Assertions.assertEquals("xc", response.iterator().next().tags().get("onpc"));
        Assertions.assertEquals(ResourceIdentityType.SYSTEM_ASSIGNED, response.iterator().next().identity().type());
        Assertions.assertEquals("kpnpulexxbczwtr", response.iterator().next().authentication().type());
        Assertions.assertEquals("iqzbq", response.iterator().next().authentication().value());
        Assertions.assertEquals("ovm", response.iterator().next().clusterExtensionIds().get(0));
        Assertions.assertEquals("cciw", response.iterator().next().displayName());
        Assertions.assertEquals("juqk", response.iterator().next().hostResourceId());
        Assertions.assertEquals(HostType.KUBERNETES, response.iterator().next().hostType());
        Assertions.assertEquals("jiwkuofoskghsau", response.iterator().next().namespace());
        Assertions.assertEquals("mjmvxieduugidyjr", response.iterator().next().provisioningState());
    }
}
