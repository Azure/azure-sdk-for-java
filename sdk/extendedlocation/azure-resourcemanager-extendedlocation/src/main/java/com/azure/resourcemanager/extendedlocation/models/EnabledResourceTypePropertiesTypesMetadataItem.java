// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.extendedlocation.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Metadata of the Resource Type.
 */
@Fluent
public final class EnabledResourceTypePropertiesTypesMetadataItem
    implements JsonSerializable<EnabledResourceTypePropertiesTypesMetadataItem> {
    /*
     * Api Version of Resource Type
     */
    private String apiVersion;

    /*
     * Resource Provider Namespace of Resource Type
     */
    private String resourceProviderNamespace;

    /*
     * Resource Type
     */
    private String resourceType;

    /**
     * Creates an instance of EnabledResourceTypePropertiesTypesMetadataItem class.
     */
    public EnabledResourceTypePropertiesTypesMetadataItem() {
    }

    /**
     * Get the apiVersion property: Api Version of Resource Type.
     * 
     * @return the apiVersion value.
     */
    public String apiVersion() {
        return this.apiVersion;
    }

    /**
     * Set the apiVersion property: Api Version of Resource Type.
     * 
     * @param apiVersion the apiVersion value to set.
     * @return the EnabledResourceTypePropertiesTypesMetadataItem object itself.
     */
    public EnabledResourceTypePropertiesTypesMetadataItem withApiVersion(String apiVersion) {
        this.apiVersion = apiVersion;
        return this;
    }

    /**
     * Get the resourceProviderNamespace property: Resource Provider Namespace of Resource Type.
     * 
     * @return the resourceProviderNamespace value.
     */
    public String resourceProviderNamespace() {
        return this.resourceProviderNamespace;
    }

    /**
     * Set the resourceProviderNamespace property: Resource Provider Namespace of Resource Type.
     * 
     * @param resourceProviderNamespace the resourceProviderNamespace value to set.
     * @return the EnabledResourceTypePropertiesTypesMetadataItem object itself.
     */
    public EnabledResourceTypePropertiesTypesMetadataItem
        withResourceProviderNamespace(String resourceProviderNamespace) {
        this.resourceProviderNamespace = resourceProviderNamespace;
        return this;
    }

    /**
     * Get the resourceType property: Resource Type.
     * 
     * @return the resourceType value.
     */
    public String resourceType() {
        return this.resourceType;
    }

    /**
     * Set the resourceType property: Resource Type.
     * 
     * @param resourceType the resourceType value to set.
     * @return the EnabledResourceTypePropertiesTypesMetadataItem object itself.
     */
    public EnabledResourceTypePropertiesTypesMetadataItem withResourceType(String resourceType) {
        this.resourceType = resourceType;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("apiVersion", this.apiVersion);
        jsonWriter.writeStringField("resourceProviderNamespace", this.resourceProviderNamespace);
        jsonWriter.writeStringField("resourceType", this.resourceType);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of EnabledResourceTypePropertiesTypesMetadataItem from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of EnabledResourceTypePropertiesTypesMetadataItem if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the EnabledResourceTypePropertiesTypesMetadataItem.
     */
    public static EnabledResourceTypePropertiesTypesMetadataItem fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            EnabledResourceTypePropertiesTypesMetadataItem deserializedEnabledResourceTypePropertiesTypesMetadataItem
                = new EnabledResourceTypePropertiesTypesMetadataItem();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("apiVersion".equals(fieldName)) {
                    deserializedEnabledResourceTypePropertiesTypesMetadataItem.apiVersion = reader.getString();
                } else if ("resourceProviderNamespace".equals(fieldName)) {
                    deserializedEnabledResourceTypePropertiesTypesMetadataItem.resourceProviderNamespace
                        = reader.getString();
                } else if ("resourceType".equals(fieldName)) {
                    deserializedEnabledResourceTypePropertiesTypesMetadataItem.resourceType = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedEnabledResourceTypePropertiesTypesMetadataItem;
        });
    }
}
