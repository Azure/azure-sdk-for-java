// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.extendedlocation.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Custom Locations operation. */
@JsonFlatten
@Immutable
public class CustomLocationOperationInner {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(CustomLocationOperationInner.class);

    /*
     * Is this Operation a data plane operation
     */
    @JsonProperty(value = "isDataAction", access = JsonProperty.Access.WRITE_ONLY)
    private Boolean isDataAction;

    /*
     * The name of the compute operation.
     */
    @JsonProperty(value = "name", access = JsonProperty.Access.WRITE_ONLY)
    private String name;

    /*
     * The origin of the compute operation.
     */
    @JsonProperty(value = "origin", access = JsonProperty.Access.WRITE_ONLY)
    private String origin;

    /*
     * The description of the operation.
     */
    @JsonProperty(value = "display.description", access = JsonProperty.Access.WRITE_ONLY)
    private String description;

    /*
     * The display name of the compute operation.
     */
    @JsonProperty(value = "display.operation", access = JsonProperty.Access.WRITE_ONLY)
    private String operation;

    /*
     * The resource provider for the operation.
     */
    @JsonProperty(value = "display.provider", access = JsonProperty.Access.WRITE_ONLY)
    private String provider;

    /*
     * The display name of the resource the operation applies to.
     */
    @JsonProperty(value = "display.resource", access = JsonProperty.Access.WRITE_ONLY)
    private String resource;

    /**
     * Get the isDataAction property: Is this Operation a data plane operation.
     *
     * @return the isDataAction value.
     */
    public Boolean isDataAction() {
        return this.isDataAction;
    }

    /**
     * Get the name property: The name of the compute operation.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the origin property: The origin of the compute operation.
     *
     * @return the origin value.
     */
    public String origin() {
        return this.origin;
    }

    /**
     * Get the description property: The description of the operation.
     *
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Get the operation property: The display name of the compute operation.
     *
     * @return the operation value.
     */
    public String operation() {
        return this.operation;
    }

    /**
     * Get the provider property: The resource provider for the operation.
     *
     * @return the provider value.
     */
    public String provider() {
        return this.provider;
    }

    /**
     * Get the resource property: The display name of the resource the operation applies to.
     *
     * @return the resource value.
     */
    public String resource() {
        return this.resource;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
