// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.secretsstoreextension.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.secretsstoreextension.fluent.models.SecretSyncInner;
import com.azure.resourcemanager.secretsstoreextension.models.SecretSyncUpdate;

/**
 * An instance of this class provides access to all the operations defined in SecretSyncsClient.
 */
public interface SecretSyncsClient {
    /**
     * Gets the properties of a SecretSync instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param secretSyncName The name of the SecretSync.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the properties of a SecretSync instance along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<SecretSyncInner> getByResourceGroupWithResponse(String resourceGroupName, String secretSyncName,
        Context context);

    /**
     * Gets the properties of a SecretSync instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param secretSyncName The name of the SecretSync.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the properties of a SecretSync instance.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SecretSyncInner getByResourceGroup(String resourceGroupName, String secretSyncName);

    /**
     * Creates new or updates a SecretSync instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param secretSyncName The name of the SecretSync.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the SecretSync resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<SecretSyncInner>, SecretSyncInner> beginCreateOrUpdate(String resourceGroupName,
        String secretSyncName, SecretSyncInner resource);

    /**
     * Creates new or updates a SecretSync instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param secretSyncName The name of the SecretSync.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the SecretSync resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<SecretSyncInner>, SecretSyncInner> beginCreateOrUpdate(String resourceGroupName,
        String secretSyncName, SecretSyncInner resource, Context context);

    /**
     * Creates new or updates a SecretSync instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param secretSyncName The name of the SecretSync.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the SecretSync resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SecretSyncInner createOrUpdate(String resourceGroupName, String secretSyncName, SecretSyncInner resource);

    /**
     * Creates new or updates a SecretSync instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param secretSyncName The name of the SecretSync.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the SecretSync resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SecretSyncInner createOrUpdate(String resourceGroupName, String secretSyncName, SecretSyncInner resource,
        Context context);

    /**
     * Updates a SecretSync instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param secretSyncName The name of the SecretSync.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the SecretSync resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<SecretSyncInner>, SecretSyncInner> beginUpdate(String resourceGroupName,
        String secretSyncName, SecretSyncUpdate properties);

    /**
     * Updates a SecretSync instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param secretSyncName The name of the SecretSync.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the SecretSync resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<SecretSyncInner>, SecretSyncInner> beginUpdate(String resourceGroupName,
        String secretSyncName, SecretSyncUpdate properties, Context context);

    /**
     * Updates a SecretSync instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param secretSyncName The name of the SecretSync.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the SecretSync resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SecretSyncInner update(String resourceGroupName, String secretSyncName, SecretSyncUpdate properties);

    /**
     * Updates a SecretSync instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param secretSyncName The name of the SecretSync.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the SecretSync resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SecretSyncInner update(String resourceGroupName, String secretSyncName, SecretSyncUpdate properties,
        Context context);

    /**
     * Deletes a SecretSync instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param secretSyncName The name of the SecretSync.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String secretSyncName);

    /**
     * Deletes a SecretSync instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param secretSyncName The name of the SecretSync.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String secretSyncName, Context context);

    /**
     * Deletes a SecretSync instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param secretSyncName The name of the SecretSync.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String secretSyncName);

    /**
     * Deletes a SecretSync instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param secretSyncName The name of the SecretSync.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String secretSyncName, Context context);

    /**
     * Lists the SecretSync instances within a resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a SecretSync list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SecretSyncInner> listByResourceGroup(String resourceGroupName);

    /**
     * Lists the SecretSync instances within a resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a SecretSync list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SecretSyncInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Lists the SecretSync instances within an Azure subscription.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a SecretSync list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SecretSyncInner> list();

    /**
     * Lists the SecretSync instances within an Azure subscription.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a SecretSync list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SecretSyncInner> list(Context context);
}
