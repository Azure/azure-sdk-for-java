// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.resourcemover.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.resourcemover.models.NsgSecurityRule;
import org.junit.jupiter.api.Assertions;

public final class NsgSecurityRuleTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NsgSecurityRule model =
            BinaryData
                .fromString(
                    "{\"name\":\"vfadmws\",\"access\":\"r\",\"description\":\"xpvgo\",\"destinationAddressPrefix\":\"lf\",\"destinationPortRange\":\"sgwbnbbeld\",\"direction\":\"k\",\"priority\":585337534,\"protocol\":\"io\",\"sourceAddressPrefix\":\"qhakauhashsf\",\"sourcePortRange\":\"osow\"}")
                .toObject(NsgSecurityRule.class);
        Assertions.assertEquals("vfadmws", model.name());
        Assertions.assertEquals("r", model.access());
        Assertions.assertEquals("xpvgo", model.description());
        Assertions.assertEquals("lf", model.destinationAddressPrefix());
        Assertions.assertEquals("sgwbnbbeld", model.destinationPortRange());
        Assertions.assertEquals("k", model.direction());
        Assertions.assertEquals(585337534, model.priority());
        Assertions.assertEquals("io", model.protocol());
        Assertions.assertEquals("qhakauhashsf", model.sourceAddressPrefix());
        Assertions.assertEquals("osow", model.sourcePortRange());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NsgSecurityRule model =
            new NsgSecurityRule()
                .withName("vfadmws")
                .withAccess("r")
                .withDescription("xpvgo")
                .withDestinationAddressPrefix("lf")
                .withDestinationPortRange("sgwbnbbeld")
                .withDirection("k")
                .withPriority(585337534)
                .withProtocol("io")
                .withSourceAddressPrefix("qhakauhashsf")
                .withSourcePortRange("osow");
        model = BinaryData.fromObject(model).toObject(NsgSecurityRule.class);
        Assertions.assertEquals("vfadmws", model.name());
        Assertions.assertEquals("r", model.access());
        Assertions.assertEquals("xpvgo", model.description());
        Assertions.assertEquals("lf", model.destinationAddressPrefix());
        Assertions.assertEquals("sgwbnbbeld", model.destinationPortRange());
        Assertions.assertEquals("k", model.direction());
        Assertions.assertEquals(585337534, model.priority());
        Assertions.assertEquals("io", model.protocol());
        Assertions.assertEquals("qhakauhashsf", model.sourceAddressPrefix());
        Assertions.assertEquals("osow", model.sourcePortRange());
    }
}
