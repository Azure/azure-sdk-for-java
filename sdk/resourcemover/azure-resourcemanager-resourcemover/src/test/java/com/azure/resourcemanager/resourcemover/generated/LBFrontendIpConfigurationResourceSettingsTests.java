// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.resourcemover.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.resourcemover.models.LBFrontendIpConfigurationResourceSettings;
import com.azure.resourcemanager.resourcemover.models.SubnetReference;
import org.junit.jupiter.api.Assertions;

public final class LBFrontendIpConfigurationResourceSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LBFrontendIpConfigurationResourceSettings model =
            BinaryData
                .fromString(
                    "{\"name\":\"loayqcgw\",\"privateIpAddress\":\"zjuzgwyz\",\"privateIpAllocationMethod\":\"txon\",\"subnet\":{\"name\":\"savjcbpwxqps\",\"sourceArmResourceId\":\"knftguvriuh\"},\"zones\":\"wmdyvxqtay\"}")
                .toObject(LBFrontendIpConfigurationResourceSettings.class);
        Assertions.assertEquals("loayqcgw", model.name());
        Assertions.assertEquals("zjuzgwyz", model.privateIpAddress());
        Assertions.assertEquals("txon", model.privateIpAllocationMethod());
        Assertions.assertEquals("knftguvriuh", model.subnet().sourceArmResourceId());
        Assertions.assertEquals("savjcbpwxqps", model.subnet().name());
        Assertions.assertEquals("wmdyvxqtay", model.zones());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LBFrontendIpConfigurationResourceSettings model =
            new LBFrontendIpConfigurationResourceSettings()
                .withName("loayqcgw")
                .withPrivateIpAddress("zjuzgwyz")
                .withPrivateIpAllocationMethod("txon")
                .withSubnet(new SubnetReference().withSourceArmResourceId("knftguvriuh").withName("savjcbpwxqps"))
                .withZones("wmdyvxqtay");
        model = BinaryData.fromObject(model).toObject(LBFrontendIpConfigurationResourceSettings.class);
        Assertions.assertEquals("loayqcgw", model.name());
        Assertions.assertEquals("zjuzgwyz", model.privateIpAddress());
        Assertions.assertEquals("txon", model.privateIpAllocationMethod());
        Assertions.assertEquals("knftguvriuh", model.subnet().sourceArmResourceId());
        Assertions.assertEquals("savjcbpwxqps", model.subnet().name());
        Assertions.assertEquals("wmdyvxqtay", model.zones());
    }
}
