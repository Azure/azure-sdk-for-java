// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.resourcemover.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Defines the move resource status.
 */
@Fluent
public class MoveResourceStatus implements JsonSerializable<MoveResourceStatus> {
    /*
     * Defines the MoveResource states.
     */
    private MoveState moveState;

    /*
     * Defines the job status.
     */
    private JobStatus jobStatus;

    /*
     * An error response from the azure resource mover service.
     */
    private MoveResourceError errors;

    /**
     * Creates an instance of MoveResourceStatus class.
     */
    public MoveResourceStatus() {
    }

    /**
     * Get the moveState property: Defines the MoveResource states.
     * 
     * @return the moveState value.
     */
    public MoveState moveState() {
        return this.moveState;
    }

    /**
     * Set the moveState property: Defines the MoveResource states.
     * 
     * @param moveState the moveState value to set.
     * @return the MoveResourceStatus object itself.
     */
    MoveResourceStatus withMoveState(MoveState moveState) {
        this.moveState = moveState;
        return this;
    }

    /**
     * Get the jobStatus property: Defines the job status.
     * 
     * @return the jobStatus value.
     */
    public JobStatus jobStatus() {
        return this.jobStatus;
    }

    /**
     * Set the jobStatus property: Defines the job status.
     * 
     * @param jobStatus the jobStatus value to set.
     * @return the MoveResourceStatus object itself.
     */
    public MoveResourceStatus withJobStatus(JobStatus jobStatus) {
        this.jobStatus = jobStatus;
        return this;
    }

    /**
     * Get the errors property: An error response from the azure resource mover service.
     * 
     * @return the errors value.
     */
    public MoveResourceError errors() {
        return this.errors;
    }

    /**
     * Set the errors property: An error response from the azure resource mover service.
     * 
     * @param errors the errors value to set.
     * @return the MoveResourceStatus object itself.
     */
    public MoveResourceStatus withErrors(MoveResourceError errors) {
        this.errors = errors;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (jobStatus() != null) {
            jobStatus().validate();
        }
        if (errors() != null) {
            errors().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("jobStatus", this.jobStatus);
        jsonWriter.writeJsonField("errors", this.errors);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MoveResourceStatus from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MoveResourceStatus if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the MoveResourceStatus.
     */
    public static MoveResourceStatus fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            MoveResourceStatus deserializedMoveResourceStatus = new MoveResourceStatus();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("moveState".equals(fieldName)) {
                    deserializedMoveResourceStatus.moveState = MoveState.fromString(reader.getString());
                } else if ("jobStatus".equals(fieldName)) {
                    deserializedMoveResourceStatus.jobStatus = JobStatus.fromJson(reader);
                } else if ("errors".equals(fieldName)) {
                    deserializedMoveResourceStatus.errors = MoveResourceError.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedMoveResourceStatus;
        });
    }
}
