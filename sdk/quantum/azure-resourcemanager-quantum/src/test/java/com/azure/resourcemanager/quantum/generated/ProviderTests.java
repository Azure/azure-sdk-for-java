// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.quantum.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.quantum.models.Provider;
import com.azure.resourcemanager.quantum.models.Status;
import org.junit.jupiter.api.Assertions;

public final class ProviderTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        Provider model =
            BinaryData
                .fromString(
                    "{\"providerId\":\"lhmwhfpmrqobm\",\"providerSku\":\"kknryrtihf\",\"instanceUri\":\"ijbpzvgnwzsymgl\",\"applicationName\":\"fcyzkohdbihanufh\",\"provisioningState\":\"Updating\",\"resourceUsageId\":\"y\"}")
                .toObject(Provider.class);
        Assertions.assertEquals("lhmwhfpmrqobm", model.providerId());
        Assertions.assertEquals("kknryrtihf", model.providerSku());
        Assertions.assertEquals("ijbpzvgnwzsymgl", model.instanceUri());
        Assertions.assertEquals("fcyzkohdbihanufh", model.applicationName());
        Assertions.assertEquals(Status.UPDATING, model.provisioningState());
        Assertions.assertEquals("y", model.resourceUsageId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        Provider model =
            new Provider()
                .withProviderId("lhmwhfpmrqobm")
                .withProviderSku("kknryrtihf")
                .withInstanceUri("ijbpzvgnwzsymgl")
                .withApplicationName("fcyzkohdbihanufh")
                .withProvisioningState(Status.UPDATING)
                .withResourceUsageId("y");
        model = BinaryData.fromObject(model).toObject(Provider.class);
        Assertions.assertEquals("lhmwhfpmrqobm", model.providerId());
        Assertions.assertEquals("kknryrtihf", model.providerSku());
        Assertions.assertEquals("ijbpzvgnwzsymgl", model.instanceUri());
        Assertions.assertEquals("fcyzkohdbihanufh", model.applicationName());
        Assertions.assertEquals(Status.UPDATING, model.provisioningState());
        Assertions.assertEquals("y", model.resourceUsageId());
    }
}
