// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.quantum.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.quantum.fluent.models.OperationInner;
import com.azure.resourcemanager.quantum.models.OperationDisplay;
import org.junit.jupiter.api.Assertions;

public final class OperationInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationInner model = BinaryData.fromString(
            "{\"name\":\"bqdxbx\",\"isDataAction\":true,\"display\":{\"provider\":\"gqxndlkzgxhuripl\",\"resource\":\"odxun\",\"operation\":\"ebxmubyynt\",\"description\":\"rbqtkoie\"}}")
            .toObject(OperationInner.class);
        Assertions.assertEquals("bqdxbx", model.name());
        Assertions.assertEquals(true, model.isDataAction());
        Assertions.assertEquals("gqxndlkzgxhuripl", model.display().provider());
        Assertions.assertEquals("odxun", model.display().resource());
        Assertions.assertEquals("ebxmubyynt", model.display().operation());
        Assertions.assertEquals("rbqtkoie", model.display().description());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationInner model = new OperationInner().withName("bqdxbx").withIsDataAction(true)
            .withDisplay(new OperationDisplay().withProvider("gqxndlkzgxhuripl").withResource("odxun")
                .withOperation("ebxmubyynt").withDescription("rbqtkoie"));
        model = BinaryData.fromObject(model).toObject(OperationInner.class);
        Assertions.assertEquals("bqdxbx", model.name());
        Assertions.assertEquals(true, model.isDataAction());
        Assertions.assertEquals("gqxndlkzgxhuripl", model.display().provider());
        Assertions.assertEquals("odxun", model.display().resource());
        Assertions.assertEquals("ebxmubyynt", model.display().operation());
        Assertions.assertEquals("rbqtkoie", model.display().description());
    }
}
