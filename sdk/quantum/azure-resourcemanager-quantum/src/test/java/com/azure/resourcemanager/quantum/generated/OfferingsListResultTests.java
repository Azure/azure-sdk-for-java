// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.quantum.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.quantum.fluent.models.ProviderDescriptionInner;
import com.azure.resourcemanager.quantum.models.OfferingsListResult;
import com.azure.resourcemanager.quantum.models.ProviderProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class OfferingsListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OfferingsListResult model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"id\":\"rl\",\"name\":\"ugjzzdatqxhocdge\",\"properties\":{\"description\":\"gphuticndvka\",\"providerType\":\"wyiftyhxhur\",\"company\":\"ftyxolniw\",\"defaultEndpoint\":\"cukjf\",\"targets\":[],\"skus\":[],\"quotaDimensions\":[],\"pricingDimensions\":[]}},{\"id\":\"ryplwckbasyypn\",\"name\":\"hsgcbacphejkot\",\"properties\":{\"description\":\"gou\",\"providerType\":\"ndlik\",\"company\":\"qkgfgibma\",\"defaultEndpoint\":\"akeqs\",\"targets\":[],\"skus\":[],\"quotaDimensions\":[],\"pricingDimensions\":[]}},{\"id\":\"dqytbciqfouflmm\",\"name\":\"zsm\",\"properties\":{\"description\":\"glougpbk\",\"providerType\":\"mutduqktaps\",\"company\":\"gcue\",\"defaultEndpoint\":\"umkdosvqwhbmd\",\"targets\":[],\"skus\":[],\"quotaDimensions\":[],\"pricingDimensions\":[]}},{\"id\":\"mbmbexppbh\",\"name\":\"qrolfpf\",\"properties\":{\"description\":\"lgbquxig\",\"providerType\":\"jgzjaoyfhrtx\",\"company\":\"n\",\"defaultEndpoint\":\"kujysvlejuvfq\",\"targets\":[],\"skus\":[],\"quotaDimensions\":[],\"pricingDimensions\":[]}}],\"nextLink\":\"kcprbnw\"}")
                .toObject(OfferingsListResult.class);
        Assertions.assertEquals("rl", model.value().get(0).id());
        Assertions.assertEquals("kcprbnw", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OfferingsListResult model =
            new OfferingsListResult()
                .withValue(
                    Arrays
                        .asList(
                            new ProviderDescriptionInner()
                                .withId("rl")
                                .withProperties(
                                    new ProviderProperties()
                                        .withTargets(Arrays.asList())
                                        .withSkus(Arrays.asList())
                                        .withQuotaDimensions(Arrays.asList())
                                        .withPricingDimensions(Arrays.asList())),
                            new ProviderDescriptionInner()
                                .withId("ryplwckbasyypn")
                                .withProperties(
                                    new ProviderProperties()
                                        .withTargets(Arrays.asList())
                                        .withSkus(Arrays.asList())
                                        .withQuotaDimensions(Arrays.asList())
                                        .withPricingDimensions(Arrays.asList())),
                            new ProviderDescriptionInner()
                                .withId("dqytbciqfouflmm")
                                .withProperties(
                                    new ProviderProperties()
                                        .withTargets(Arrays.asList())
                                        .withSkus(Arrays.asList())
                                        .withQuotaDimensions(Arrays.asList())
                                        .withPricingDimensions(Arrays.asList())),
                            new ProviderDescriptionInner()
                                .withId("mbmbexppbh")
                                .withProperties(
                                    new ProviderProperties()
                                        .withTargets(Arrays.asList())
                                        .withSkus(Arrays.asList())
                                        .withQuotaDimensions(Arrays.asList())
                                        .withPricingDimensions(Arrays.asList()))))
                .withNextLink("kcprbnw");
        model = BinaryData.fromObject(model).toObject(OfferingsListResult.class);
        Assertions.assertEquals("rl", model.value().get(0).id());
        Assertions.assertEquals("kcprbnw", model.nextLink());
    }
}
