// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.quantum.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.quantum.models.PricingDetail;
import com.azure.resourcemanager.quantum.models.QuotaDimension;
import com.azure.resourcemanager.quantum.models.SkuDescription;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SkuDescriptionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SkuDescription model =
            BinaryData
                .fromString(
                    "{\"id\":\"ets\",\"name\":\"szhedplvw\",\"version\":\"ubmwmbesld\",\"description\":\"wwtppj\",\"restrictedAccessUri\":\"cxogaokonzm\",\"autoAdd\":true,\"targets\":[\"mkqzeqqkdltfzxmh\",\"v\"],\"quotaDimensions\":[{\"id\":\"eodkwobda\",\"scope\":\"tibqdxbxwakb\",\"period\":\"qxn\",\"quota\":52.112804,\"name\":\"gxhuriplbp\",\"description\":\"xunkbebxmubyynt\",\"unit\":\"rbqtkoie\",\"unitPlural\":\"eotg\"}],\"pricingDetails\":[{\"id\":\"tmuwlauwzi\",\"value\":\"bm\"}]}")
                .toObject(SkuDescription.class);
        Assertions.assertEquals("ets", model.id());
        Assertions.assertEquals("szhedplvw", model.name());
        Assertions.assertEquals("ubmwmbesld", model.version());
        Assertions.assertEquals("wwtppj", model.description());
        Assertions.assertEquals("cxogaokonzm", model.restrictedAccessUri());
        Assertions.assertEquals(true, model.autoAdd());
        Assertions.assertEquals("mkqzeqqkdltfzxmh", model.targets().get(0));
        Assertions.assertEquals("eodkwobda", model.quotaDimensions().get(0).id());
        Assertions.assertEquals("tibqdxbxwakb", model.quotaDimensions().get(0).scope());
        Assertions.assertEquals("qxn", model.quotaDimensions().get(0).period());
        Assertions.assertEquals(52.112804F, model.quotaDimensions().get(0).quota());
        Assertions.assertEquals("gxhuriplbp", model.quotaDimensions().get(0).name());
        Assertions.assertEquals("xunkbebxmubyynt", model.quotaDimensions().get(0).description());
        Assertions.assertEquals("rbqtkoie", model.quotaDimensions().get(0).unit());
        Assertions.assertEquals("eotg", model.quotaDimensions().get(0).unitPlural());
        Assertions.assertEquals("tmuwlauwzi", model.pricingDetails().get(0).id());
        Assertions.assertEquals("bm", model.pricingDetails().get(0).value());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SkuDescription model =
            new SkuDescription()
                .withId("ets")
                .withName("szhedplvw")
                .withVersion("ubmwmbesld")
                .withDescription("wwtppj")
                .withRestrictedAccessUri("cxogaokonzm")
                .withAutoAdd(true)
                .withTargets(Arrays.asList("mkqzeqqkdltfzxmh", "v"))
                .withQuotaDimensions(
                    Arrays
                        .asList(
                            new QuotaDimension()
                                .withId("eodkwobda")
                                .withScope("tibqdxbxwakb")
                                .withPeriod("qxn")
                                .withQuota(52.112804F)
                                .withName("gxhuriplbp")
                                .withDescription("xunkbebxmubyynt")
                                .withUnit("rbqtkoie")
                                .withUnitPlural("eotg")))
                .withPricingDetails(Arrays.asList(new PricingDetail().withId("tmuwlauwzi").withValue("bm")));
        model = BinaryData.fromObject(model).toObject(SkuDescription.class);
        Assertions.assertEquals("ets", model.id());
        Assertions.assertEquals("szhedplvw", model.name());
        Assertions.assertEquals("ubmwmbesld", model.version());
        Assertions.assertEquals("wwtppj", model.description());
        Assertions.assertEquals("cxogaokonzm", model.restrictedAccessUri());
        Assertions.assertEquals(true, model.autoAdd());
        Assertions.assertEquals("mkqzeqqkdltfzxmh", model.targets().get(0));
        Assertions.assertEquals("eodkwobda", model.quotaDimensions().get(0).id());
        Assertions.assertEquals("tibqdxbxwakb", model.quotaDimensions().get(0).scope());
        Assertions.assertEquals("qxn", model.quotaDimensions().get(0).period());
        Assertions.assertEquals(52.112804F, model.quotaDimensions().get(0).quota());
        Assertions.assertEquals("gxhuriplbp", model.quotaDimensions().get(0).name());
        Assertions.assertEquals("xunkbebxmubyynt", model.quotaDimensions().get(0).description());
        Assertions.assertEquals("rbqtkoie", model.quotaDimensions().get(0).unit());
        Assertions.assertEquals("eotg", model.quotaDimensions().get(0).unitPlural());
        Assertions.assertEquals("tmuwlauwzi", model.pricingDetails().get(0).id());
        Assertions.assertEquals("bm", model.pricingDetails().get(0).value());
    }
}
