// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.quantum.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.quantum.models.QuotaDimension;
import org.junit.jupiter.api.Assertions;

public final class QuotaDimensionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        QuotaDimension model =
            BinaryData
                .fromString(
                    "{\"id\":\"axibxujw\",\"scope\":\"qwalmuzyoxaepd\",\"period\":\"jancu\",\"quota\":84.637024,\"name\":\"wbavxbniwdj\",\"description\":\"zt\",\"unit\":\"bpg\",\"unitPlural\":\"ytxhp\"}")
                .toObject(QuotaDimension.class);
        Assertions.assertEquals("axibxujw", model.id());
        Assertions.assertEquals("qwalmuzyoxaepd", model.scope());
        Assertions.assertEquals("jancu", model.period());
        Assertions.assertEquals(84.637024F, model.quota());
        Assertions.assertEquals("wbavxbniwdj", model.name());
        Assertions.assertEquals("zt", model.description());
        Assertions.assertEquals("bpg", model.unit());
        Assertions.assertEquals("ytxhp", model.unitPlural());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        QuotaDimension model =
            new QuotaDimension()
                .withId("axibxujw")
                .withScope("qwalmuzyoxaepd")
                .withPeriod("jancu")
                .withQuota(84.637024F)
                .withName("wbavxbniwdj")
                .withDescription("zt")
                .withUnit("bpg")
                .withUnitPlural("ytxhp");
        model = BinaryData.fromObject(model).toObject(QuotaDimension.class);
        Assertions.assertEquals("axibxujw", model.id());
        Assertions.assertEquals("qwalmuzyoxaepd", model.scope());
        Assertions.assertEquals("jancu", model.period());
        Assertions.assertEquals(84.637024F, model.quota());
        Assertions.assertEquals("wbavxbniwdj", model.name());
        Assertions.assertEquals("zt", model.description());
        Assertions.assertEquals("bpg", model.unit());
        Assertions.assertEquals("ytxhp", model.unitPlural());
    }
}
