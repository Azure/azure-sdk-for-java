// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.quantum.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.quantum.models.QuotaDimension;
import org.junit.jupiter.api.Assertions;

public final class QuotaDimensionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        QuotaDimension model = BinaryData.fromString(
            "{\"id\":\"hzdxssadbzm\",\"scope\":\"dfznudaodv\",\"period\":\"bncblylpstdbhhx\",\"quota\":95.43601,\"name\":\"zucerscdntnev\",\"description\":\"wjmy\",\"unit\":\"dsslswt\",\"unitPlural\":\"eriofzpyqs\"}")
            .toObject(QuotaDimension.class);
        Assertions.assertEquals("hzdxssadbzm", model.id());
        Assertions.assertEquals("dfznudaodv", model.scope());
        Assertions.assertEquals("bncblylpstdbhhx", model.period());
        Assertions.assertEquals(95.43601F, model.quota());
        Assertions.assertEquals("zucerscdntnev", model.name());
        Assertions.assertEquals("wjmy", model.description());
        Assertions.assertEquals("dsslswt", model.unit());
        Assertions.assertEquals("eriofzpyqs", model.unitPlural());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        QuotaDimension model = new QuotaDimension().withId("hzdxssadbzm").withScope("dfznudaodv")
            .withPeriod("bncblylpstdbhhx").withQuota(95.43601F).withName("zucerscdntnev").withDescription("wjmy")
            .withUnit("dsslswt").withUnitPlural("eriofzpyqs");
        model = BinaryData.fromObject(model).toObject(QuotaDimension.class);
        Assertions.assertEquals("hzdxssadbzm", model.id());
        Assertions.assertEquals("dfznudaodv", model.scope());
        Assertions.assertEquals("bncblylpstdbhhx", model.period());
        Assertions.assertEquals(95.43601F, model.quota());
        Assertions.assertEquals("zucerscdntnev", model.name());
        Assertions.assertEquals("wjmy", model.description());
        Assertions.assertEquals("dsslswt", model.unit());
        Assertions.assertEquals("eriofzpyqs", model.unitPlural());
    }
}
