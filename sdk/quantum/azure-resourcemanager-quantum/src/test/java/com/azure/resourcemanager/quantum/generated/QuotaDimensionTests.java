// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.quantum.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.quantum.models.QuotaDimension;
import org.junit.jupiter.api.Assertions;

public final class QuotaDimensionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        QuotaDimension model =
            BinaryData
                .fromString(
                    "{\"id\":\"cjefuzmu\",\"scope\":\"bttdumorppxe\",\"period\":\"nzbtbhj\",\"quota\":21.287733,\"name\":\"fgohdneuelfphs\",\"description\":\"htozfikdow\",\"unit\":\"uuvxz\",\"unitPlural\":\"lvithhqzonosgg\"}")
                .toObject(QuotaDimension.class);
        Assertions.assertEquals("cjefuzmu", model.id());
        Assertions.assertEquals("bttdumorppxe", model.scope());
        Assertions.assertEquals("nzbtbhj", model.period());
        Assertions.assertEquals(21.287733F, model.quota());
        Assertions.assertEquals("fgohdneuelfphs", model.name());
        Assertions.assertEquals("htozfikdow", model.description());
        Assertions.assertEquals("uuvxz", model.unit());
        Assertions.assertEquals("lvithhqzonosgg", model.unitPlural());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        QuotaDimension model =
            new QuotaDimension()
                .withId("cjefuzmu")
                .withScope("bttdumorppxe")
                .withPeriod("nzbtbhj")
                .withQuota(21.287733F)
                .withName("fgohdneuelfphs")
                .withDescription("htozfikdow")
                .withUnit("uuvxz")
                .withUnitPlural("lvithhqzonosgg");
        model = BinaryData.fromObject(model).toObject(QuotaDimension.class);
        Assertions.assertEquals("cjefuzmu", model.id());
        Assertions.assertEquals("bttdumorppxe", model.scope());
        Assertions.assertEquals("nzbtbhj", model.period());
        Assertions.assertEquals(21.287733F, model.quota());
        Assertions.assertEquals("fgohdneuelfphs", model.name());
        Assertions.assertEquals("htozfikdow", model.description());
        Assertions.assertEquals("uuvxz", model.unit());
        Assertions.assertEquals("lvithhqzonosgg", model.unitPlural());
    }
}
