// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.quantum.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.quantum.models.PricingDimension;
import com.azure.resourcemanager.quantum.models.ProviderProperties;
import com.azure.resourcemanager.quantum.models.ProviderPropertiesAad;
import com.azure.resourcemanager.quantum.models.ProviderPropertiesManagedApplication;
import com.azure.resourcemanager.quantum.models.QuotaDimension;
import com.azure.resourcemanager.quantum.models.SkuDescription;
import com.azure.resourcemanager.quantum.models.TargetDescription;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ProviderPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ProviderProperties model =
            BinaryData
                .fromString(
                    "{\"description\":\"zevgb\",\"providerType\":\"jqabcypmivkwlzuv\",\"company\":\"fwnfnb\",\"defaultEndpoint\":\"fionl\",\"aad\":{\"applicationId\":\"etqgtzxdpnq\",\"tenantId\":\"qwxrjfeallnw\"},\"managedApplication\":{\"publisherId\":\"isnjampmngnz\",\"offerId\":\"xaqwoochcbonqv\"},\"targets\":[{\"id\":\"rxnjeaseipheofl\",\"name\":\"eyy\",\"description\":\"nj\",\"acceptedDataFormats\":[\"wtgrhpdjpj\",\"masxazjpqyegu\",\"lhbxxhejjzzvdud\"],\"acceptedContentEncodings\":[\"slfhotwm\",\"ynpwlbj\",\"pgacftadehxnlty\"]},{\"id\":\"oppusuesnzw\",\"name\":\"jbavorxzdm\",\"description\":\"ctbqvudwx\",\"acceptedDataFormats\":[\"nvowgujju\",\"wdkcglhsl\"],\"acceptedContentEncodings\":[\"dyggdtjixhbku\",\"fqweykhmene\",\"fyexfwhy\"]},{\"id\":\"i\",\"name\":\"yvdcsitynnaa\",\"description\":\"ectehf\",\"acceptedDataFormats\":[\"cj\",\"ypvhezrkg\"],\"acceptedContentEncodings\":[\"jrefovgmkqsle\"]},{\"id\":\"vxyqjpkcattpngjc\",\"name\":\"czsqpjhvm\",\"description\":\"jvnysounqe\",\"acceptedDataFormats\":[\"oaeupfhyhltrpmo\"],\"acceptedContentEncodings\":[\"cma\",\"u\",\"kthfui\",\"aodsfcpkv\"]}],\"skus\":[{\"id\":\"uozmyzydagfua\",\"name\":\"ezyiuokktwhrdxw\",\"version\":\"wqsmbsur\",\"description\":\"imoryocfsfksym\",\"restrictedAccessUri\":\"ys\",\"autoAdd\":false,\"targets\":[\"xhqyudxorrqnb\"],\"quotaDimensions\":[],\"pricingDetails\":[]},{\"id\":\"i\",\"name\":\"rvkdvjsllrm\",\"version\":\"d\",\"description\":\"atkpnp\",\"restrictedAccessUri\":\"exxbczwtr\",\"autoAdd\":false,\"targets\":[\"bq\"],\"quotaDimensions\":[],\"pricingDetails\":[]}],\"quotaDimensions\":[{\"id\":\"kacspkw\",\"scope\":\"zdobpxjmflbvvnch\",\"period\":\"cciw\",\"quota\":22.377777,\"name\":\"qkhr\",\"description\":\"jiwkuofoskghsau\",\"unit\":\"mjmvxieduugidyjr\",\"unitPlural\":\"byao\"},{\"id\":\"e\",\"scope\":\"sonpclhocohs\",\"period\":\"ev\",\"quota\":33.826637,\"name\":\"zfbuhf\",\"description\":\"faxkffeii\",\"unit\":\"lvmezyvshxmzsbbz\",\"unitPlural\":\"gigr\"},{\"id\":\"burvjxxjnspy\",\"scope\":\"tko\",\"period\":\"kouknvudwtiu\",\"quota\":51.070255,\"name\":\"ngkpocipazy\",\"description\":\"egukgjnpiucg\",\"unit\":\"evqzntypmrbp\",\"unitPlural\":\"c\"}],\"pricingDimensions\":[{\"id\":\"sdpydnfyhxdeoejz\",\"name\":\"w\"},{\"id\":\"sjttgzfbish\",\"name\":\"khaj\"},{\"id\":\"yeamdphagalpb\",\"name\":\"wgipwhono\"},{\"id\":\"gshwankixz\",\"name\":\"njeputtmrywn\"}]}")
                .toObject(ProviderProperties.class);
        Assertions.assertEquals("rxnjeaseipheofl", model.targets().get(0).id());
        Assertions.assertEquals("eyy", model.targets().get(0).name());
        Assertions.assertEquals("nj", model.targets().get(0).description());
        Assertions.assertEquals("wtgrhpdjpj", model.targets().get(0).acceptedDataFormats().get(0));
        Assertions.assertEquals("slfhotwm", model.targets().get(0).acceptedContentEncodings().get(0));
        Assertions.assertEquals("uozmyzydagfua", model.skus().get(0).id());
        Assertions.assertEquals("ezyiuokktwhrdxw", model.skus().get(0).name());
        Assertions.assertEquals("wqsmbsur", model.skus().get(0).version());
        Assertions.assertEquals("imoryocfsfksym", model.skus().get(0).description());
        Assertions.assertEquals("ys", model.skus().get(0).restrictedAccessUri());
        Assertions.assertEquals(false, model.skus().get(0).autoAdd());
        Assertions.assertEquals("xhqyudxorrqnb", model.skus().get(0).targets().get(0));
        Assertions.assertEquals("kacspkw", model.quotaDimensions().get(0).id());
        Assertions.assertEquals("zdobpxjmflbvvnch", model.quotaDimensions().get(0).scope());
        Assertions.assertEquals("cciw", model.quotaDimensions().get(0).period());
        Assertions.assertEquals(22.377777F, model.quotaDimensions().get(0).quota());
        Assertions.assertEquals("qkhr", model.quotaDimensions().get(0).name());
        Assertions.assertEquals("jiwkuofoskghsau", model.quotaDimensions().get(0).description());
        Assertions.assertEquals("mjmvxieduugidyjr", model.quotaDimensions().get(0).unit());
        Assertions.assertEquals("byao", model.quotaDimensions().get(0).unitPlural());
        Assertions.assertEquals("sdpydnfyhxdeoejz", model.pricingDimensions().get(0).id());
        Assertions.assertEquals("w", model.pricingDimensions().get(0).name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ProviderProperties model =
            new ProviderProperties()
                .withAad(new ProviderPropertiesAad())
                .withManagedApplication(new ProviderPropertiesManagedApplication())
                .withTargets(
                    Arrays
                        .asList(
                            new TargetDescription()
                                .withId("rxnjeaseipheofl")
                                .withName("eyy")
                                .withDescription("nj")
                                .withAcceptedDataFormats(
                                    Arrays.asList("wtgrhpdjpj", "masxazjpqyegu", "lhbxxhejjzzvdud"))
                                .withAcceptedContentEncodings(Arrays.asList("slfhotwm", "ynpwlbj", "pgacftadehxnlty")),
                            new TargetDescription()
                                .withId("oppusuesnzw")
                                .withName("jbavorxzdm")
                                .withDescription("ctbqvudwx")
                                .withAcceptedDataFormats(Arrays.asList("nvowgujju", "wdkcglhsl"))
                                .withAcceptedContentEncodings(
                                    Arrays.asList("dyggdtjixhbku", "fqweykhmene", "fyexfwhy")),
                            new TargetDescription()
                                .withId("i")
                                .withName("yvdcsitynnaa")
                                .withDescription("ectehf")
                                .withAcceptedDataFormats(Arrays.asList("cj", "ypvhezrkg"))
                                .withAcceptedContentEncodings(Arrays.asList("jrefovgmkqsle")),
                            new TargetDescription()
                                .withId("vxyqjpkcattpngjc")
                                .withName("czsqpjhvm")
                                .withDescription("jvnysounqe")
                                .withAcceptedDataFormats(Arrays.asList("oaeupfhyhltrpmo"))
                                .withAcceptedContentEncodings(Arrays.asList("cma", "u", "kthfui", "aodsfcpkv"))))
                .withSkus(
                    Arrays
                        .asList(
                            new SkuDescription()
                                .withId("uozmyzydagfua")
                                .withName("ezyiuokktwhrdxw")
                                .withVersion("wqsmbsur")
                                .withDescription("imoryocfsfksym")
                                .withRestrictedAccessUri("ys")
                                .withAutoAdd(false)
                                .withTargets(Arrays.asList("xhqyudxorrqnb"))
                                .withQuotaDimensions(Arrays.asList())
                                .withPricingDetails(Arrays.asList()),
                            new SkuDescription()
                                .withId("i")
                                .withName("rvkdvjsllrm")
                                .withVersion("d")
                                .withDescription("atkpnp")
                                .withRestrictedAccessUri("exxbczwtr")
                                .withAutoAdd(false)
                                .withTargets(Arrays.asList("bq"))
                                .withQuotaDimensions(Arrays.asList())
                                .withPricingDetails(Arrays.asList())))
                .withQuotaDimensions(
                    Arrays
                        .asList(
                            new QuotaDimension()
                                .withId("kacspkw")
                                .withScope("zdobpxjmflbvvnch")
                                .withPeriod("cciw")
                                .withQuota(22.377777F)
                                .withName("qkhr")
                                .withDescription("jiwkuofoskghsau")
                                .withUnit("mjmvxieduugidyjr")
                                .withUnitPlural("byao"),
                            new QuotaDimension()
                                .withId("e")
                                .withScope("sonpclhocohs")
                                .withPeriod("ev")
                                .withQuota(33.826637F)
                                .withName("zfbuhf")
                                .withDescription("faxkffeii")
                                .withUnit("lvmezyvshxmzsbbz")
                                .withUnitPlural("gigr"),
                            new QuotaDimension()
                                .withId("burvjxxjnspy")
                                .withScope("tko")
                                .withPeriod("kouknvudwtiu")
                                .withQuota(51.070255F)
                                .withName("ngkpocipazy")
                                .withDescription("egukgjnpiucg")
                                .withUnit("evqzntypmrbp")
                                .withUnitPlural("c")))
                .withPricingDimensions(
                    Arrays
                        .asList(
                            new PricingDimension().withId("sdpydnfyhxdeoejz").withName("w"),
                            new PricingDimension().withId("sjttgzfbish").withName("khaj"),
                            new PricingDimension().withId("yeamdphagalpb").withName("wgipwhono"),
                            new PricingDimension().withId("gshwankixz").withName("njeputtmrywn")));
        model = BinaryData.fromObject(model).toObject(ProviderProperties.class);
        Assertions.assertEquals("rxnjeaseipheofl", model.targets().get(0).id());
        Assertions.assertEquals("eyy", model.targets().get(0).name());
        Assertions.assertEquals("nj", model.targets().get(0).description());
        Assertions.assertEquals("wtgrhpdjpj", model.targets().get(0).acceptedDataFormats().get(0));
        Assertions.assertEquals("slfhotwm", model.targets().get(0).acceptedContentEncodings().get(0));
        Assertions.assertEquals("uozmyzydagfua", model.skus().get(0).id());
        Assertions.assertEquals("ezyiuokktwhrdxw", model.skus().get(0).name());
        Assertions.assertEquals("wqsmbsur", model.skus().get(0).version());
        Assertions.assertEquals("imoryocfsfksym", model.skus().get(0).description());
        Assertions.assertEquals("ys", model.skus().get(0).restrictedAccessUri());
        Assertions.assertEquals(false, model.skus().get(0).autoAdd());
        Assertions.assertEquals("xhqyudxorrqnb", model.skus().get(0).targets().get(0));
        Assertions.assertEquals("kacspkw", model.quotaDimensions().get(0).id());
        Assertions.assertEquals("zdobpxjmflbvvnch", model.quotaDimensions().get(0).scope());
        Assertions.assertEquals("cciw", model.quotaDimensions().get(0).period());
        Assertions.assertEquals(22.377777F, model.quotaDimensions().get(0).quota());
        Assertions.assertEquals("qkhr", model.quotaDimensions().get(0).name());
        Assertions.assertEquals("jiwkuofoskghsau", model.quotaDimensions().get(0).description());
        Assertions.assertEquals("mjmvxieduugidyjr", model.quotaDimensions().get(0).unit());
        Assertions.assertEquals("byao", model.quotaDimensions().get(0).unitPlural());
        Assertions.assertEquals("sdpydnfyhxdeoejz", model.pricingDimensions().get(0).id());
        Assertions.assertEquals("w", model.pricingDimensions().get(0).name());
    }
}
