// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.quantum.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of Workspaces. */
public interface Workspaces {
    /**
     * Returns the Workspace resource associated with the given name.
     *
     * @param resourceGroupName The name of the resource group.
     * @param workspaceName The name of the quantum workspace resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the resource proxy definition object for quantum workspace along with {@link Response}.
     */
    Response<QuantumWorkspace> getByResourceGroupWithResponse(
        String resourceGroupName, String workspaceName, Context context);

    /**
     * Returns the Workspace resource associated with the given name.
     *
     * @param resourceGroupName The name of the resource group.
     * @param workspaceName The name of the quantum workspace resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the resource proxy definition object for quantum workspace.
     */
    QuantumWorkspace getByResourceGroup(String resourceGroupName, String workspaceName);

    /**
     * Deletes a Workspace resource.
     *
     * @param resourceGroupName The name of the resource group.
     * @param workspaceName The name of the quantum workspace resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String workspaceName);

    /**
     * Deletes a Workspace resource.
     *
     * @param resourceGroupName The name of the resource group.
     * @param workspaceName The name of the quantum workspace resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String workspaceName, Context context);

    /**
     * Gets the list of Workspaces within a Subscription.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of Workspaces within a Subscription as paginated response with {@link PagedIterable}.
     */
    PagedIterable<QuantumWorkspace> list();

    /**
     * Gets the list of Workspaces within a Subscription.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of Workspaces within a Subscription as paginated response with {@link PagedIterable}.
     */
    PagedIterable<QuantumWorkspace> list(Context context);

    /**
     * Gets the list of Workspaces within a resource group.
     *
     * @param resourceGroupName The name of the resource group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of Workspaces within a resource group as paginated response with {@link PagedIterable}.
     */
    PagedIterable<QuantumWorkspace> listByResourceGroup(String resourceGroupName);

    /**
     * Gets the list of Workspaces within a resource group.
     *
     * @param resourceGroupName The name of the resource group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of Workspaces within a resource group as paginated response with {@link PagedIterable}.
     */
    PagedIterable<QuantumWorkspace> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Returns the Workspace resource associated with the given name.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the resource proxy definition object for quantum workspace along with {@link Response}.
     */
    QuantumWorkspace getById(String id);

    /**
     * Returns the Workspace resource associated with the given name.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the resource proxy definition object for quantum workspace along with {@link Response}.
     */
    Response<QuantumWorkspace> getByIdWithResponse(String id, Context context);

    /**
     * Deletes a Workspace resource.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes a Workspace resource.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new QuantumWorkspace resource.
     *
     * @param name resource name.
     * @return the first stage of the new QuantumWorkspace definition.
     */
    QuantumWorkspace.DefinitionStages.Blank define(String name);
}
