// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.quantum.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Information about a specific sku. */
@Fluent
public final class SkuDescription {
    /*
     * Unique sku id.
     */
    @JsonProperty(value = "id")
    private String id;

    /*
     * Display name of this sku.
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * Display name of this sku.
     */
    @JsonProperty(value = "version")
    private String version;

    /*
     * Description about this sku.
     */
    @JsonProperty(value = "description")
    private String description;

    /*
     * Uri to subscribe to the restricted access sku.
     */
    @JsonProperty(value = "restrictedAccessUri")
    private String restrictedAccessUri;

    /*
     * Flag to indicate whether the sku should be automatically added during workspace creation.
     */
    @JsonProperty(value = "autoAdd")
    private Boolean autoAdd;

    /*
     * The list of targets available for this sku.
     */
    @JsonProperty(value = "targets")
    private List<String> targets;

    /*
     * The list of quota dimensions for this sku.
     */
    @JsonProperty(value = "quotaDimensions")
    private List<QuotaDimension> quotaDimensions;

    /*
     * The list of pricing details for the sku.
     */
    @JsonProperty(value = "pricingDetails")
    private List<PricingDetail> pricingDetails;

    /** Creates an instance of SkuDescription class. */
    public SkuDescription() {
    }

    /**
     * Get the id property: Unique sku id.
     *
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: Unique sku id.
     *
     * @param id the id value to set.
     * @return the SkuDescription object itself.
     */
    public SkuDescription withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the name property: Display name of this sku.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Display name of this sku.
     *
     * @param name the name value to set.
     * @return the SkuDescription object itself.
     */
    public SkuDescription withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the version property: Display name of this sku.
     *
     * @return the version value.
     */
    public String version() {
        return this.version;
    }

    /**
     * Set the version property: Display name of this sku.
     *
     * @param version the version value to set.
     * @return the SkuDescription object itself.
     */
    public SkuDescription withVersion(String version) {
        this.version = version;
        return this;
    }

    /**
     * Get the description property: Description about this sku.
     *
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: Description about this sku.
     *
     * @param description the description value to set.
     * @return the SkuDescription object itself.
     */
    public SkuDescription withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the restrictedAccessUri property: Uri to subscribe to the restricted access sku.
     *
     * @return the restrictedAccessUri value.
     */
    public String restrictedAccessUri() {
        return this.restrictedAccessUri;
    }

    /**
     * Set the restrictedAccessUri property: Uri to subscribe to the restricted access sku.
     *
     * @param restrictedAccessUri the restrictedAccessUri value to set.
     * @return the SkuDescription object itself.
     */
    public SkuDescription withRestrictedAccessUri(String restrictedAccessUri) {
        this.restrictedAccessUri = restrictedAccessUri;
        return this;
    }

    /**
     * Get the autoAdd property: Flag to indicate whether the sku should be automatically added during workspace
     * creation.
     *
     * @return the autoAdd value.
     */
    public Boolean autoAdd() {
        return this.autoAdd;
    }

    /**
     * Set the autoAdd property: Flag to indicate whether the sku should be automatically added during workspace
     * creation.
     *
     * @param autoAdd the autoAdd value to set.
     * @return the SkuDescription object itself.
     */
    public SkuDescription withAutoAdd(Boolean autoAdd) {
        this.autoAdd = autoAdd;
        return this;
    }

    /**
     * Get the targets property: The list of targets available for this sku.
     *
     * @return the targets value.
     */
    public List<String> targets() {
        return this.targets;
    }

    /**
     * Set the targets property: The list of targets available for this sku.
     *
     * @param targets the targets value to set.
     * @return the SkuDescription object itself.
     */
    public SkuDescription withTargets(List<String> targets) {
        this.targets = targets;
        return this;
    }

    /**
     * Get the quotaDimensions property: The list of quota dimensions for this sku.
     *
     * @return the quotaDimensions value.
     */
    public List<QuotaDimension> quotaDimensions() {
        return this.quotaDimensions;
    }

    /**
     * Set the quotaDimensions property: The list of quota dimensions for this sku.
     *
     * @param quotaDimensions the quotaDimensions value to set.
     * @return the SkuDescription object itself.
     */
    public SkuDescription withQuotaDimensions(List<QuotaDimension> quotaDimensions) {
        this.quotaDimensions = quotaDimensions;
        return this;
    }

    /**
     * Get the pricingDetails property: The list of pricing details for the sku.
     *
     * @return the pricingDetails value.
     */
    public List<PricingDetail> pricingDetails() {
        return this.pricingDetails;
    }

    /**
     * Set the pricingDetails property: The list of pricing details for the sku.
     *
     * @param pricingDetails the pricingDetails value to set.
     * @return the SkuDescription object itself.
     */
    public SkuDescription withPricingDetails(List<PricingDetail> pricingDetails) {
        this.pricingDetails = pricingDetails;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (quotaDimensions() != null) {
            quotaDimensions().forEach(e -> e.validate());
        }
        if (pricingDetails() != null) {
            pricingDetails().forEach(e -> e.validate());
        }
    }
}
