// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.quantum.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.quantum.fluent.WorkspaceOperationsClient;
import com.azure.resourcemanager.quantum.fluent.models.CheckNameAvailabilityResultInner;
import com.azure.resourcemanager.quantum.models.CheckNameAvailabilityParameters;
import com.azure.resourcemanager.quantum.models.CheckNameAvailabilityResult;
import com.azure.resourcemanager.quantum.models.WorkspaceOperations;

public final class WorkspaceOperationsImpl implements WorkspaceOperations {
    private static final ClientLogger LOGGER = new ClientLogger(WorkspaceOperationsImpl.class);

    private final WorkspaceOperationsClient innerClient;

    private final com.azure.resourcemanager.quantum.AzureQuantumManager serviceManager;

    public WorkspaceOperationsImpl(
        WorkspaceOperationsClient innerClient, com.azure.resourcemanager.quantum.AzureQuantumManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<CheckNameAvailabilityResult> checkNameAvailabilityWithResponse(
        String locationName, CheckNameAvailabilityParameters checkNameAvailabilityParameters, Context context) {
        Response<CheckNameAvailabilityResultInner> inner =
            this
                .serviceClient()
                .checkNameAvailabilityWithResponse(locationName, checkNameAvailabilityParameters, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new CheckNameAvailabilityResultImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public CheckNameAvailabilityResult checkNameAvailability(
        String locationName, CheckNameAvailabilityParameters checkNameAvailabilityParameters) {
        CheckNameAvailabilityResultInner inner =
            this.serviceClient().checkNameAvailability(locationName, checkNameAvailabilityParameters);
        if (inner != null) {
            return new CheckNameAvailabilityResultImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private WorkspaceOperationsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.quantum.AzureQuantumManager manager() {
        return this.serviceManager;
    }
}
