// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.quantum.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.quantum.models.ApiKey;
import java.io.IOException;

/**
 * Result of list Api keys and connection strings.
 */
@Fluent
public final class ListKeysResultInner implements JsonSerializable<ListKeysResultInner> {
    /*
     * Indicator of enablement of the Quantum workspace Api keys.
     */
    private Boolean apiKeyEnabled;

    /*
     * The quantum workspace primary api key.
     */
    private ApiKey primaryKey;

    /*
     * The quantum workspace secondary api key.
     */
    private ApiKey secondaryKey;

    /*
     * The connection string of the primary api key.
     */
    private String primaryConnectionString;

    /*
     * The connection string of the secondary api key.
     */
    private String secondaryConnectionString;

    /**
     * Creates an instance of ListKeysResultInner class.
     */
    public ListKeysResultInner() {
    }

    /**
     * Get the apiKeyEnabled property: Indicator of enablement of the Quantum workspace Api keys.
     * 
     * @return the apiKeyEnabled value.
     */
    public Boolean apiKeyEnabled() {
        return this.apiKeyEnabled;
    }

    /**
     * Set the apiKeyEnabled property: Indicator of enablement of the Quantum workspace Api keys.
     * 
     * @param apiKeyEnabled the apiKeyEnabled value to set.
     * @return the ListKeysResultInner object itself.
     */
    public ListKeysResultInner withApiKeyEnabled(Boolean apiKeyEnabled) {
        this.apiKeyEnabled = apiKeyEnabled;
        return this;
    }

    /**
     * Get the primaryKey property: The quantum workspace primary api key.
     * 
     * @return the primaryKey value.
     */
    public ApiKey primaryKey() {
        return this.primaryKey;
    }

    /**
     * Set the primaryKey property: The quantum workspace primary api key.
     * 
     * @param primaryKey the primaryKey value to set.
     * @return the ListKeysResultInner object itself.
     */
    public ListKeysResultInner withPrimaryKey(ApiKey primaryKey) {
        this.primaryKey = primaryKey;
        return this;
    }

    /**
     * Get the secondaryKey property: The quantum workspace secondary api key.
     * 
     * @return the secondaryKey value.
     */
    public ApiKey secondaryKey() {
        return this.secondaryKey;
    }

    /**
     * Set the secondaryKey property: The quantum workspace secondary api key.
     * 
     * @param secondaryKey the secondaryKey value to set.
     * @return the ListKeysResultInner object itself.
     */
    public ListKeysResultInner withSecondaryKey(ApiKey secondaryKey) {
        this.secondaryKey = secondaryKey;
        return this;
    }

    /**
     * Get the primaryConnectionString property: The connection string of the primary api key.
     * 
     * @return the primaryConnectionString value.
     */
    public String primaryConnectionString() {
        return this.primaryConnectionString;
    }

    /**
     * Get the secondaryConnectionString property: The connection string of the secondary api key.
     * 
     * @return the secondaryConnectionString value.
     */
    public String secondaryConnectionString() {
        return this.secondaryConnectionString;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (primaryKey() != null) {
            primaryKey().validate();
        }
        if (secondaryKey() != null) {
            secondaryKey().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("apiKeyEnabled", this.apiKeyEnabled);
        jsonWriter.writeJsonField("primaryKey", this.primaryKey);
        jsonWriter.writeJsonField("secondaryKey", this.secondaryKey);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ListKeysResultInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ListKeysResultInner if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the ListKeysResultInner.
     */
    public static ListKeysResultInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ListKeysResultInner deserializedListKeysResultInner = new ListKeysResultInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("apiKeyEnabled".equals(fieldName)) {
                    deserializedListKeysResultInner.apiKeyEnabled = reader.getNullable(JsonReader::getBoolean);
                } else if ("primaryKey".equals(fieldName)) {
                    deserializedListKeysResultInner.primaryKey = ApiKey.fromJson(reader);
                } else if ("secondaryKey".equals(fieldName)) {
                    deserializedListKeysResultInner.secondaryKey = ApiKey.fromJson(reader);
                } else if ("primaryConnectionString".equals(fieldName)) {
                    deserializedListKeysResultInner.primaryConnectionString = reader.getString();
                } else if ("secondaryConnectionString".equals(fieldName)) {
                    deserializedListKeysResultInner.secondaryConnectionString = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedListKeysResultInner;
        });
    }
}
