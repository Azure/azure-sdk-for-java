// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.microsoft.azure.quantum;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.microsoft.azure.quantum.models.BlobDetails;
import com.microsoft.azure.quantum.models.SasUriResponse;
import reactor.core.publisher.Mono;

/** An instance of this class provides access to all the operations defined in StoragesClient. */
public interface StoragesClient {
    /**
     * Gets a URL with SAS token for a container/blob in the storage account associated with the workspace. The SAS URL
     * can be used to upload job input and/or download job output.
     *
     * @param blobDetails The details (name and container) of the blob to store or download data.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.microsoft.azure.quantum.models.RestErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a URL with SAS token for a container/blob in the storage account associated with the workspace.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<Response<SasUriResponse>> sasUriWithResponseAsync(BlobDetails blobDetails);

    /**
     * Gets a URL with SAS token for a container/blob in the storage account associated with the workspace. The SAS URL
     * can be used to upload job input and/or download job output.
     *
     * @param blobDetails The details (name and container) of the blob to store or download data.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.microsoft.azure.quantum.models.RestErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a URL with SAS token for a container/blob in the storage account associated with the workspace.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<Response<SasUriResponse>> sasUriWithResponseAsync(BlobDetails blobDetails, Context context);

    /**
     * Gets a URL with SAS token for a container/blob in the storage account associated with the workspace. The SAS URL
     * can be used to upload job input and/or download job output.
     *
     * @param blobDetails The details (name and container) of the blob to store or download data.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.microsoft.azure.quantum.models.RestErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a URL with SAS token for a container/blob in the storage account associated with the workspace.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<SasUriResponse> sasUriAsync(BlobDetails blobDetails);

    /**
     * Gets a URL with SAS token for a container/blob in the storage account associated with the workspace. The SAS URL
     * can be used to upload job input and/or download job output.
     *
     * @param blobDetails The details (name and container) of the blob to store or download data.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.microsoft.azure.quantum.models.RestErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a URL with SAS token for a container/blob in the storage account associated with the workspace.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<SasUriResponse> sasUriAsync(BlobDetails blobDetails, Context context);

    /**
     * Gets a URL with SAS token for a container/blob in the storage account associated with the workspace. The SAS URL
     * can be used to upload job input and/or download job output.
     *
     * @param blobDetails The details (name and container) of the blob to store or download data.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.microsoft.azure.quantum.models.RestErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a URL with SAS token for a container/blob in the storage account associated with the workspace.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SasUriResponse sasUri(BlobDetails blobDetails);

    /**
     * Gets a URL with SAS token for a container/blob in the storage account associated with the workspace. The SAS URL
     * can be used to upload job input and/or download job output.
     *
     * @param blobDetails The details (name and container) of the blob to store or download data.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.microsoft.azure.quantum.models.RestErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a URL with SAS token for a container/blob in the storage account associated with the workspace.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<SasUriResponse> sasUriWithResponse(BlobDetails blobDetails, Context context);
}
