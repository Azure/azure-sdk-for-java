// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.microsoft.azure.quantum.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Providers status. */
@Immutable
public final class ProviderStatus {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ProviderStatus.class);

    /*
     * Provider id.
     */
    @JsonProperty(value = "id", access = JsonProperty.Access.WRITE_ONLY)
    private String id;

    /*
     * Provider availability.
     */
    @JsonProperty(value = "currentAvailability", access = JsonProperty.Access.WRITE_ONLY)
    private ProviderAvailability currentAvailability;

    /*
     * The targets property.
     */
    @JsonProperty(value = "targets", access = JsonProperty.Access.WRITE_ONLY)
    private List<TargetStatus> targets;

    /**
     * Get the id property: Provider id.
     *
     * @return the id value.
     */
    public String getId() {
        return this.id;
    }

    /**
     * Get the currentAvailability property: Provider availability.
     *
     * @return the currentAvailability value.
     */
    public ProviderAvailability getCurrentAvailability() {
        return this.currentAvailability;
    }

    /**
     * Get the targets property: The targets property.
     *
     * @return the targets value.
     */
    public List<TargetStatus> getTargets() {
        return this.targets;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (getTargets() != null) {
            getTargets().forEach(e -> e.validate());
        }
    }
}
