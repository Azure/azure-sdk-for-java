// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.microsoft.azure.quantum.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Blob details. */
@Fluent
public final class BlobDetails {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(BlobDetails.class);

    /*
     * The container name.
     */
    @JsonProperty(value = "containerName", required = true)
    private String containerName;

    /*
     * The blob name.
     */
    @JsonProperty(value = "blobName")
    private String blobName;

    /**
     * Get the containerName property: The container name.
     *
     * @return the containerName value.
     */
    public String getContainerName() {
        return this.containerName;
    }

    /**
     * Set the containerName property: The container name.
     *
     * @param containerName the containerName value to set.
     * @return the BlobDetails object itself.
     */
    public BlobDetails setContainerName(String containerName) {
        this.containerName = containerName;
        return this;
    }

    /**
     * Get the blobName property: The blob name.
     *
     * @return the blobName value.
     */
    public String getBlobName() {
        return this.blobName;
    }

    /**
     * Set the blobName property: The blob name.
     *
     * @param blobName the blobName value to set.
     * @return the BlobDetails object itself.
     */
    public BlobDetails setBlobName(String blobName) {
        this.blobName = blobName;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (getContainerName() == null) {
            throw logger.logExceptionAsError(
                    new IllegalArgumentException("Missing required property containerName in model BlobDetails"));
        }
    }
}
