// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.servicenetworking.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The updatable properties of the Frontend.
 */
@Fluent
public final class FrontendUpdateProperties implements JsonSerializable<FrontendUpdateProperties> {
    /*
     * Frontend Security Policy Configuration
     */
    private SecurityPolicyConfigurations securityPolicyConfigurations;

    /**
     * Creates an instance of FrontendUpdateProperties class.
     */
    public FrontendUpdateProperties() {
    }

    /**
     * Get the securityPolicyConfigurations property: Frontend Security Policy Configuration.
     * 
     * @return the securityPolicyConfigurations value.
     */
    public SecurityPolicyConfigurations securityPolicyConfigurations() {
        return this.securityPolicyConfigurations;
    }

    /**
     * Set the securityPolicyConfigurations property: Frontend Security Policy Configuration.
     * 
     * @param securityPolicyConfigurations the securityPolicyConfigurations value to set.
     * @return the FrontendUpdateProperties object itself.
     */
    public FrontendUpdateProperties
        withSecurityPolicyConfigurations(SecurityPolicyConfigurations securityPolicyConfigurations) {
        this.securityPolicyConfigurations = securityPolicyConfigurations;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (securityPolicyConfigurations() != null) {
            securityPolicyConfigurations().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("securityPolicyConfigurations", this.securityPolicyConfigurations);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of FrontendUpdateProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of FrontendUpdateProperties if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the FrontendUpdateProperties.
     */
    public static FrontendUpdateProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            FrontendUpdateProperties deserializedFrontendUpdateProperties = new FrontendUpdateProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("securityPolicyConfigurations".equals(fieldName)) {
                    deserializedFrontendUpdateProperties.securityPolicyConfigurations
                        = SecurityPolicyConfigurations.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedFrontendUpdateProperties;
        });
    }
}
