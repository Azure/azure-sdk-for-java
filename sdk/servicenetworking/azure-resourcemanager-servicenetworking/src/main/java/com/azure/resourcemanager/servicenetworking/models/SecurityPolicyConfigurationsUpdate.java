// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicenetworking.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * SecurityPolicyConfigurations Subresource of Traffic Controller.
 */
@Fluent
public final class SecurityPolicyConfigurationsUpdate implements JsonSerializable<SecurityPolicyConfigurationsUpdate> {
    /*
     * Contains reference to a WAF-type security policy that is applied at the Traffic Controller level.
     */
    private WafSecurityPolicyUpdate wafSecurityPolicy;

    /**
     * Creates an instance of SecurityPolicyConfigurationsUpdate class.
     */
    public SecurityPolicyConfigurationsUpdate() {
    }

    /**
     * Get the wafSecurityPolicy property: Contains reference to a WAF-type security policy that is applied at the
     * Traffic Controller level.
     * 
     * @return the wafSecurityPolicy value.
     */
    public WafSecurityPolicyUpdate wafSecurityPolicy() {
        return this.wafSecurityPolicy;
    }

    /**
     * Set the wafSecurityPolicy property: Contains reference to a WAF-type security policy that is applied at the
     * Traffic Controller level.
     * 
     * @param wafSecurityPolicy the wafSecurityPolicy value to set.
     * @return the SecurityPolicyConfigurationsUpdate object itself.
     */
    public SecurityPolicyConfigurationsUpdate withWafSecurityPolicy(WafSecurityPolicyUpdate wafSecurityPolicy) {
        this.wafSecurityPolicy = wafSecurityPolicy;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (wafSecurityPolicy() != null) {
            wafSecurityPolicy().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("wafSecurityPolicy", this.wafSecurityPolicy);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SecurityPolicyConfigurationsUpdate from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SecurityPolicyConfigurationsUpdate if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SecurityPolicyConfigurationsUpdate.
     */
    public static SecurityPolicyConfigurationsUpdate fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SecurityPolicyConfigurationsUpdate deserializedSecurityPolicyConfigurationsUpdate
                = new SecurityPolicyConfigurationsUpdate();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("wafSecurityPolicy".equals(fieldName)) {
                    deserializedSecurityPolicyConfigurationsUpdate.wafSecurityPolicy
                        = WafSecurityPolicyUpdate.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSecurityPolicyConfigurationsUpdate;
        });
    }
}
