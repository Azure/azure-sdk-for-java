// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicenetworking.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.servicenetworking.models.FrontendIpAddressVersion;
import com.azure.resourcemanager.servicenetworking.models.FrontendMode;
import com.azure.resourcemanager.servicenetworking.models.FrontendPropertiesIpAddress;
import com.azure.resourcemanager.servicenetworking.models.ProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Frontend Properties. */
@Fluent
public final class FrontendProperties {
    /*
     * Frontend Mode (Optional).
     */
    @JsonProperty(value = "mode")
    private FrontendMode mode;

    /*
     * Frontend IP Address Version (Optional).
     */
    @JsonProperty(value = "ipAddressVersion")
    private FrontendIpAddressVersion ipAddressVersion;

    /*
     * Frontend Public IP Address (Optional).
     */
    @JsonProperty(value = "publicIPAddress")
    private FrontendPropertiesIpAddress publicIpAddress;

    /*
     * test doc
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /** Creates an instance of FrontendProperties class. */
    public FrontendProperties() {
    }

    /**
     * Get the mode property: Frontend Mode (Optional).
     *
     * @return the mode value.
     */
    public FrontendMode mode() {
        return this.mode;
    }

    /**
     * Set the mode property: Frontend Mode (Optional).
     *
     * @param mode the mode value to set.
     * @return the FrontendProperties object itself.
     */
    public FrontendProperties withMode(FrontendMode mode) {
        this.mode = mode;
        return this;
    }

    /**
     * Get the ipAddressVersion property: Frontend IP Address Version (Optional).
     *
     * @return the ipAddressVersion value.
     */
    public FrontendIpAddressVersion ipAddressVersion() {
        return this.ipAddressVersion;
    }

    /**
     * Set the ipAddressVersion property: Frontend IP Address Version (Optional).
     *
     * @param ipAddressVersion the ipAddressVersion value to set.
     * @return the FrontendProperties object itself.
     */
    public FrontendProperties withIpAddressVersion(FrontendIpAddressVersion ipAddressVersion) {
        this.ipAddressVersion = ipAddressVersion;
        return this;
    }

    /**
     * Get the publicIpAddress property: Frontend Public IP Address (Optional).
     *
     * @return the publicIpAddress value.
     */
    public FrontendPropertiesIpAddress publicIpAddress() {
        return this.publicIpAddress;
    }

    /**
     * Set the publicIpAddress property: Frontend Public IP Address (Optional).
     *
     * @param publicIpAddress the publicIpAddress value to set.
     * @return the FrontendProperties object itself.
     */
    public FrontendProperties withPublicIpAddress(FrontendPropertiesIpAddress publicIpAddress) {
        this.publicIpAddress = publicIpAddress;
        return this;
    }

    /**
     * Get the provisioningState property: test doc.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (publicIpAddress() != null) {
            publicIpAddress().validate();
        }
    }
}
