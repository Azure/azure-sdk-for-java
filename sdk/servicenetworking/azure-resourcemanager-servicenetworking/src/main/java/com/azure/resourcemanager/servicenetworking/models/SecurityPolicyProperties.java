// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicenetworking.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * SecurityPolicy Properties.
 */
@Fluent
public final class SecurityPolicyProperties implements JsonSerializable<SecurityPolicyProperties> {
    /*
     * Type of the Traffic Controller Security Policy
     */
    private PolicyType policyType;

    /*
     * Web Application Firewall Policy of the Traffic Controller Security Policy
     */
    private WafPolicy wafPolicy;

    /*
     * Provisioning State of Traffic Controller SecurityPolicy Resource
     */
    private ProvisioningState provisioningState;

    /**
     * Creates an instance of SecurityPolicyProperties class.
     */
    public SecurityPolicyProperties() {
    }

    /**
     * Get the policyType property: Type of the Traffic Controller Security Policy.
     * 
     * @return the policyType value.
     */
    public PolicyType policyType() {
        return this.policyType;
    }

    /**
     * Get the wafPolicy property: Web Application Firewall Policy of the Traffic Controller Security Policy.
     * 
     * @return the wafPolicy value.
     */
    public WafPolicy wafPolicy() {
        return this.wafPolicy;
    }

    /**
     * Set the wafPolicy property: Web Application Firewall Policy of the Traffic Controller Security Policy.
     * 
     * @param wafPolicy the wafPolicy value to set.
     * @return the SecurityPolicyProperties object itself.
     */
    public SecurityPolicyProperties withWafPolicy(WafPolicy wafPolicy) {
        this.wafPolicy = wafPolicy;
        return this;
    }

    /**
     * Get the provisioningState property: Provisioning State of Traffic Controller SecurityPolicy Resource.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (wafPolicy() != null) {
            wafPolicy().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("wafPolicy", this.wafPolicy);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SecurityPolicyProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SecurityPolicyProperties if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SecurityPolicyProperties.
     */
    public static SecurityPolicyProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SecurityPolicyProperties deserializedSecurityPolicyProperties = new SecurityPolicyProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("policyType".equals(fieldName)) {
                    deserializedSecurityPolicyProperties.policyType = PolicyType.fromString(reader.getString());
                } else if ("wafPolicy".equals(fieldName)) {
                    deserializedSecurityPolicyProperties.wafPolicy = WafPolicy.fromJson(reader);
                } else if ("provisioningState".equals(fieldName)) {
                    deserializedSecurityPolicyProperties.provisioningState
                        = ProvisioningState.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSecurityPolicyProperties;
        });
    }
}
