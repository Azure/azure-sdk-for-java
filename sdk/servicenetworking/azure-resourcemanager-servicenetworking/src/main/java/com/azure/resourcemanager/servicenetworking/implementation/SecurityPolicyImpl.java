// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicenetworking.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.servicenetworking.fluent.models.SecurityPolicyInner;
import com.azure.resourcemanager.servicenetworking.models.SecurityPolicy;
import com.azure.resourcemanager.servicenetworking.models.SecurityPolicyProperties;
import com.azure.resourcemanager.servicenetworking.models.SecurityPolicyUpdate;
import com.azure.resourcemanager.servicenetworking.models.SecurityPolicyUpdateProperties;
import java.util.Collections;
import java.util.Map;

public final class SecurityPolicyImpl implements SecurityPolicy, SecurityPolicy.Definition, SecurityPolicy.Update {
    private SecurityPolicyInner innerObject;

    private final com.azure.resourcemanager.servicenetworking.TrafficControllerManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public SecurityPolicyProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public SecurityPolicyInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.servicenetworking.TrafficControllerManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String trafficControllerName;

    private String securityPolicyName;

    private SecurityPolicyUpdate updateProperties;

    public SecurityPolicyImpl withExistingTrafficController(String resourceGroupName, String trafficControllerName) {
        this.resourceGroupName = resourceGroupName;
        this.trafficControllerName = trafficControllerName;
        return this;
    }

    public SecurityPolicy create() {
        this.innerObject = serviceManager.serviceClient()
            .getSecurityPoliciesInterfaces()
            .createOrUpdate(resourceGroupName, trafficControllerName, securityPolicyName, this.innerModel(),
                Context.NONE);
        return this;
    }

    public SecurityPolicy create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getSecurityPoliciesInterfaces()
            .createOrUpdate(resourceGroupName, trafficControllerName, securityPolicyName, this.innerModel(), context);
        return this;
    }

    SecurityPolicyImpl(String name,
        com.azure.resourcemanager.servicenetworking.TrafficControllerManager serviceManager) {
        this.innerObject = new SecurityPolicyInner();
        this.serviceManager = serviceManager;
        this.securityPolicyName = name;
    }

    public SecurityPolicyImpl update() {
        this.updateProperties = new SecurityPolicyUpdate();
        return this;
    }

    public SecurityPolicy apply() {
        this.innerObject = serviceManager.serviceClient()
            .getSecurityPoliciesInterfaces()
            .updateWithResponse(resourceGroupName, trafficControllerName, securityPolicyName, updateProperties,
                Context.NONE)
            .getValue();
        return this;
    }

    public SecurityPolicy apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getSecurityPoliciesInterfaces()
            .updateWithResponse(resourceGroupName, trafficControllerName, securityPolicyName, updateProperties, context)
            .getValue();
        return this;
    }

    SecurityPolicyImpl(SecurityPolicyInner innerObject,
        com.azure.resourcemanager.servicenetworking.TrafficControllerManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.trafficControllerName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "trafficControllers");
        this.securityPolicyName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "securityPolicies");
    }

    public SecurityPolicy refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getSecurityPoliciesInterfaces()
            .getWithResponse(resourceGroupName, trafficControllerName, securityPolicyName, Context.NONE)
            .getValue();
        return this;
    }

    public SecurityPolicy refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getSecurityPoliciesInterfaces()
            .getWithResponse(resourceGroupName, trafficControllerName, securityPolicyName, context)
            .getValue();
        return this;
    }

    public SecurityPolicyImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public SecurityPolicyImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public SecurityPolicyImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateProperties.withTags(tags);
            return this;
        }
    }

    public SecurityPolicyImpl withProperties(SecurityPolicyProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }

    public SecurityPolicyImpl withProperties(SecurityPolicyUpdateProperties properties) {
        this.updateProperties.withProperties(properties);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
