// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.servicenetworking.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * SecurityPolicyConfigurations Subresource of Traffic Controller.
 */
@Fluent
public final class SecurityPolicyConfigurations implements JsonSerializable<SecurityPolicyConfigurations> {
    /*
     * Contains reference to a WAF-type security policy.
     */
    private WafSecurityPolicy wafSecurityPolicy;

    /*
     * Contains reference to a IpAccessRules-type security policy.
     */
    private IpAccessRulesSecurityPolicy ipAccessRulesSecurityPolicy;

    /**
     * Creates an instance of SecurityPolicyConfigurations class.
     */
    public SecurityPolicyConfigurations() {
    }

    /**
     * Get the wafSecurityPolicy property: Contains reference to a WAF-type security policy.
     * 
     * @return the wafSecurityPolicy value.
     */
    public WafSecurityPolicy wafSecurityPolicy() {
        return this.wafSecurityPolicy;
    }

    /**
     * Set the wafSecurityPolicy property: Contains reference to a WAF-type security policy.
     * 
     * @param wafSecurityPolicy the wafSecurityPolicy value to set.
     * @return the SecurityPolicyConfigurations object itself.
     */
    public SecurityPolicyConfigurations withWafSecurityPolicy(WafSecurityPolicy wafSecurityPolicy) {
        this.wafSecurityPolicy = wafSecurityPolicy;
        return this;
    }

    /**
     * Get the ipAccessRulesSecurityPolicy property: Contains reference to a IpAccessRules-type security policy.
     * 
     * @return the ipAccessRulesSecurityPolicy value.
     */
    public IpAccessRulesSecurityPolicy ipAccessRulesSecurityPolicy() {
        return this.ipAccessRulesSecurityPolicy;
    }

    /**
     * Set the ipAccessRulesSecurityPolicy property: Contains reference to a IpAccessRules-type security policy.
     * 
     * @param ipAccessRulesSecurityPolicy the ipAccessRulesSecurityPolicy value to set.
     * @return the SecurityPolicyConfigurations object itself.
     */
    public SecurityPolicyConfigurations
        withIpAccessRulesSecurityPolicy(IpAccessRulesSecurityPolicy ipAccessRulesSecurityPolicy) {
        this.ipAccessRulesSecurityPolicy = ipAccessRulesSecurityPolicy;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (wafSecurityPolicy() != null) {
            wafSecurityPolicy().validate();
        }
        if (ipAccessRulesSecurityPolicy() != null) {
            ipAccessRulesSecurityPolicy().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("wafSecurityPolicy", this.wafSecurityPolicy);
        jsonWriter.writeJsonField("ipAccessRulesSecurityPolicy", this.ipAccessRulesSecurityPolicy);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SecurityPolicyConfigurations from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SecurityPolicyConfigurations if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SecurityPolicyConfigurations.
     */
    public static SecurityPolicyConfigurations fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SecurityPolicyConfigurations deserializedSecurityPolicyConfigurations = new SecurityPolicyConfigurations();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("wafSecurityPolicy".equals(fieldName)) {
                    deserializedSecurityPolicyConfigurations.wafSecurityPolicy = WafSecurityPolicy.fromJson(reader);
                } else if ("ipAccessRulesSecurityPolicy".equals(fieldName)) {
                    deserializedSecurityPolicyConfigurations.ipAccessRulesSecurityPolicy
                        = IpAccessRulesSecurityPolicy.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSecurityPolicyConfigurations;
        });
    }
}
