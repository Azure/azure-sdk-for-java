// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicenetworking.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The updatable properties of the SecurityPolicy.
 */
@Fluent
public final class SecurityPolicyUpdateProperties implements JsonSerializable<SecurityPolicyUpdateProperties> {
    /*
     * Web Application Firewall Policy of the Traffic Controller Security Policy
     */
    private WafPolicyUpdate wafPolicy;

    /**
     * Creates an instance of SecurityPolicyUpdateProperties class.
     */
    public SecurityPolicyUpdateProperties() {
    }

    /**
     * Get the wafPolicy property: Web Application Firewall Policy of the Traffic Controller Security Policy.
     * 
     * @return the wafPolicy value.
     */
    public WafPolicyUpdate wafPolicy() {
        return this.wafPolicy;
    }

    /**
     * Set the wafPolicy property: Web Application Firewall Policy of the Traffic Controller Security Policy.
     * 
     * @param wafPolicy the wafPolicy value to set.
     * @return the SecurityPolicyUpdateProperties object itself.
     */
    public SecurityPolicyUpdateProperties withWafPolicy(WafPolicyUpdate wafPolicy) {
        this.wafPolicy = wafPolicy;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (wafPolicy() != null) {
            wafPolicy().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("wafPolicy", this.wafPolicy);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SecurityPolicyUpdateProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SecurityPolicyUpdateProperties if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SecurityPolicyUpdateProperties.
     */
    public static SecurityPolicyUpdateProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SecurityPolicyUpdateProperties deserializedSecurityPolicyUpdateProperties
                = new SecurityPolicyUpdateProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("wafPolicy".equals(fieldName)) {
                    deserializedSecurityPolicyUpdateProperties.wafPolicy = WafPolicyUpdate.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSecurityPolicyUpdateProperties;
        });
    }
}
