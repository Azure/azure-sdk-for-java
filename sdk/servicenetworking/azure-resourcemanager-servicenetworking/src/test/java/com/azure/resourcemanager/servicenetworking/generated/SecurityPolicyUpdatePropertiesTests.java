// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.servicenetworking.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.servicenetworking.models.IpAccessRule;
import com.azure.resourcemanager.servicenetworking.models.IpAccessRuleAction;
import com.azure.resourcemanager.servicenetworking.models.IpAccessRulesPolicy;
import com.azure.resourcemanager.servicenetworking.models.SecurityPolicyUpdateProperties;
import com.azure.resourcemanager.servicenetworking.models.WafPolicy;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SecurityPolicyUpdatePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SecurityPolicyUpdateProperties model = BinaryData.fromString(
            "{\"wafPolicy\":{\"id\":\"bdxkqpxokaj\"},\"ipAccessRulesPolicy\":{\"rules\":[{\"name\":\"imexgstxgcpodgma\",\"priority\":600216788,\"sourceAddressPrefixes\":[\"mvdjwzrlovmc\"],\"action\":\"deny\"},{\"name\":\"hijco\",\"priority\":1526151596,\"sourceAddressPrefixes\":[\"tbzaqsqsycbkbfk\",\"ukdkexxppofmxa\"],\"action\":\"allow\"},{\"name\":\"fjpgddtocjjxhvp\",\"priority\":70113912,\"sourceAddressPrefixes\":[\"exhd\",\"xibqeojnx\"],\"action\":\"allow\"},{\"name\":\"zvddntwndeicbtwn\",\"priority\":537336258,\"sourceAddressPrefixes\":[\"oqvuhr\",\"cffcyddglmj\"],\"action\":\"allow\"}]}}")
            .toObject(SecurityPolicyUpdateProperties.class);
        Assertions.assertEquals("bdxkqpxokaj", model.wafPolicy().id());
        Assertions.assertEquals("imexgstxgcpodgma", model.ipAccessRulesPolicy().rules().get(0).name());
        Assertions.assertEquals(600216788, model.ipAccessRulesPolicy().rules().get(0).priority());
        Assertions.assertEquals("mvdjwzrlovmc",
            model.ipAccessRulesPolicy().rules().get(0).sourceAddressPrefixes().get(0));
        Assertions.assertEquals(IpAccessRuleAction.DENY, model.ipAccessRulesPolicy().rules().get(0).action());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SecurityPolicyUpdateProperties model
            = new SecurityPolicyUpdateProperties().withWafPolicy(new WafPolicy().withId("bdxkqpxokaj"))
                .withIpAccessRulesPolicy(new IpAccessRulesPolicy().withRules(Arrays.asList(
                    new IpAccessRule().withName("imexgstxgcpodgma")
                        .withPriority(600216788)
                        .withSourceAddressPrefixes(Arrays.asList("mvdjwzrlovmc"))
                        .withAction(IpAccessRuleAction.DENY),
                    new IpAccessRule().withName("hijco")
                        .withPriority(1526151596)
                        .withSourceAddressPrefixes(Arrays.asList("tbzaqsqsycbkbfk", "ukdkexxppofmxa"))
                        .withAction(IpAccessRuleAction.ALLOW),
                    new IpAccessRule().withName("fjpgddtocjjxhvp")
                        .withPriority(70113912)
                        .withSourceAddressPrefixes(Arrays.asList("exhd", "xibqeojnx"))
                        .withAction(IpAccessRuleAction.ALLOW),
                    new IpAccessRule().withName("zvddntwndeicbtwn")
                        .withPriority(537336258)
                        .withSourceAddressPrefixes(Arrays.asList("oqvuhr", "cffcyddglmj"))
                        .withAction(IpAccessRuleAction.ALLOW))));
        model = BinaryData.fromObject(model).toObject(SecurityPolicyUpdateProperties.class);
        Assertions.assertEquals("bdxkqpxokaj", model.wafPolicy().id());
        Assertions.assertEquals("imexgstxgcpodgma", model.ipAccessRulesPolicy().rules().get(0).name());
        Assertions.assertEquals(600216788, model.ipAccessRulesPolicy().rules().get(0).priority());
        Assertions.assertEquals("mvdjwzrlovmc",
            model.ipAccessRulesPolicy().rules().get(0).sourceAddressPrefixes().get(0));
        Assertions.assertEquals(IpAccessRuleAction.DENY, model.ipAccessRulesPolicy().rules().get(0).action());
    }
}
