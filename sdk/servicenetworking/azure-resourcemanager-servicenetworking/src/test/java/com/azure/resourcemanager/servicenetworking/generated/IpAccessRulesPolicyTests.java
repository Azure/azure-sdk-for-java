// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.servicenetworking.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.servicenetworking.models.IpAccessRule;
import com.azure.resourcemanager.servicenetworking.models.IpAccessRuleAction;
import com.azure.resourcemanager.servicenetworking.models.IpAccessRulesPolicy;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class IpAccessRulesPolicyTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IpAccessRulesPolicy model = BinaryData.fromString(
            "{\"rules\":[{\"name\":\"uizga\",\"priority\":101465987,\"sourceAddressPrefixes\":[\"fizuckyf\",\"hr\",\"idf\"],\"action\":\"allow\"}]}")
            .toObject(IpAccessRulesPolicy.class);
        Assertions.assertEquals("uizga", model.rules().get(0).name());
        Assertions.assertEquals(101465987, model.rules().get(0).priority());
        Assertions.assertEquals("fizuckyf", model.rules().get(0).sourceAddressPrefixes().get(0));
        Assertions.assertEquals(IpAccessRuleAction.ALLOW, model.rules().get(0).action());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IpAccessRulesPolicy model
            = new IpAccessRulesPolicy().withRules(Arrays.asList(new IpAccessRule().withName("uizga")
                .withPriority(101465987)
                .withSourceAddressPrefixes(Arrays.asList("fizuckyf", "hr", "idf"))
                .withAction(IpAccessRuleAction.ALLOW)));
        model = BinaryData.fromObject(model).toObject(IpAccessRulesPolicy.class);
        Assertions.assertEquals("uizga", model.rules().get(0).name());
        Assertions.assertEquals(101465987, model.rules().get(0).priority());
        Assertions.assertEquals("fizuckyf", model.rules().get(0).sourceAddressPrefixes().get(0));
        Assertions.assertEquals(IpAccessRuleAction.ALLOW, model.rules().get(0).action());
    }
}
