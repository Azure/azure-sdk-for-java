// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.servicenetworking.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.servicenetworking.TrafficControllerManager;
import com.azure.resourcemanager.servicenetworking.models.IpAccessRuleAction;
import com.azure.resourcemanager.servicenetworking.models.SecurityPolicy;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SecurityPoliciesInterfacesListByTrafficControllerMockTests {
    @Test
    public void testListByTrafficController() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"policyType\":\"waf\",\"wafPolicy\":{\"id\":\"ttouwaboekqvkel\"},\"ipAccessRulesPolicy\":{\"rules\":[{\"name\":\"bxwyjsflhhcaa\",\"priority\":131354519,\"sourceAddressPrefixes\":[\"ixisxyawjoy\",\"qcslyjpkiid\",\"yexz\",\"eli\"],\"action\":\"allow\"},{\"name\":\"nr\",\"priority\":2120108327,\"sourceAddressPrefixes\":[\"o\",\"hb\",\"xknalaulppg\"],\"action\":\"deny\"},{\"name\":\"tpnapnyiropuhpig\",\"priority\":1156367150,\"sourceAddressPrefixes\":[\"ylgqgitxmedjvcsl\",\"n\",\"wwncwzzhxgk\",\"rmgucnap\"],\"action\":\"allow\"}]},\"provisioningState\":\"Updating\"},\"location\":\"llwptfdy\",\"tags\":{\"huaoppp\":\"qbuaceopzfqr\",\"z\":\"qeqxo\",\"moizpos\":\"ahzxctobgbk\"},\"id\":\"mgrcfbu\",\"name\":\"rmfqjhhkxbpvj\",\"type\":\"mjh\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        TrafficControllerManager manager = TrafficControllerManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<SecurityPolicy> response = manager.securityPoliciesInterfaces()
            .listByTrafficController("wozuhkf", "bsjyofdx", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("llwptfdy", response.iterator().next().location());
        Assertions.assertEquals("qbuaceopzfqr", response.iterator().next().tags().get("huaoppp"));
        Assertions.assertEquals("ttouwaboekqvkel", response.iterator().next().properties().wafPolicy().id());
        Assertions.assertEquals("bxwyjsflhhcaa",
            response.iterator().next().properties().ipAccessRulesPolicy().rules().get(0).name());
        Assertions.assertEquals(131354519,
            response.iterator().next().properties().ipAccessRulesPolicy().rules().get(0).priority());
        Assertions.assertEquals("ixisxyawjoy",
            response.iterator()
                .next()
                .properties()
                .ipAccessRulesPolicy()
                .rules()
                .get(0)
                .sourceAddressPrefixes()
                .get(0));
        Assertions.assertEquals(IpAccessRuleAction.ALLOW,
            response.iterator().next().properties().ipAccessRulesPolicy().rules().get(0).action());
    }
}
