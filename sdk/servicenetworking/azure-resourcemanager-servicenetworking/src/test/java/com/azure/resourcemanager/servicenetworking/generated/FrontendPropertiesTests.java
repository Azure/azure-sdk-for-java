// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.servicenetworking.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.servicenetworking.models.FrontendProperties;
import com.azure.resourcemanager.servicenetworking.models.IpAccessRulesSecurityPolicy;
import com.azure.resourcemanager.servicenetworking.models.SecurityPolicyConfigurations;
import com.azure.resourcemanager.servicenetworking.models.WafSecurityPolicy;
import org.junit.jupiter.api.Assertions;

public final class FrontendPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FrontendProperties model = BinaryData.fromString(
            "{\"fqdn\":\"tfwvukxgaudc\",\"securityPolicyConfigurations\":{\"wafSecurityPolicy\":{\"id\":\"h\"},\"ipAccessRulesSecurityPolicy\":{\"id\":\"cnyejhkryhtnapcz\"}},\"provisioningState\":\"Updating\"}")
            .toObject(FrontendProperties.class);
        Assertions.assertEquals("h", model.securityPolicyConfigurations().wafSecurityPolicy().id());
        Assertions.assertEquals("cnyejhkryhtnapcz",
            model.securityPolicyConfigurations().ipAccessRulesSecurityPolicy().id());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FrontendProperties model = new FrontendProperties().withSecurityPolicyConfigurations(
            new SecurityPolicyConfigurations().withWafSecurityPolicy(new WafSecurityPolicy().withId("h"))
                .withIpAccessRulesSecurityPolicy(new IpAccessRulesSecurityPolicy().withId("cnyejhkryhtnapcz")));
        model = BinaryData.fromObject(model).toObject(FrontendProperties.class);
        Assertions.assertEquals("h", model.securityPolicyConfigurations().wafSecurityPolicy().id());
        Assertions.assertEquals("cnyejhkryhtnapcz",
            model.securityPolicyConfigurations().ipAccessRulesSecurityPolicy().id());
    }
}
