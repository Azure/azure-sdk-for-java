// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicenetworking.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.servicenetworking.fluent.models.TrafficControllerInner;
import com.azure.resourcemanager.servicenetworking.models.TrafficControllerListResult;
import com.azure.resourcemanager.servicenetworking.models.TrafficControllerProperties;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class TrafficControllerListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TrafficControllerListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"configurationEndpoints\":[\"th\",\"qhabifpikxwcz\",\"yscnpqxu\"],\"frontends\":[{\"id\":\"y\"}],\"associations\":[{\"id\":\"wby\"},{\"id\":\"rkxvdum\"},{\"id\":\"grtfwvu\"},{\"id\":\"xgaudccs\"}],\"provisioningState\":\"Updating\"},\"location\":\"cnyejhkryhtnapcz\",\"tags\":{\"ni\":\"kjyemkk\",\"ilzyd\":\"joxzjnchgejspodm\"},\"id\":\"h\",\"name\":\"jwyahuxinpmqnja\",\"type\":\"wixjsprozvcp\"}],\"nextLink\":\"eg\"}")
            .toObject(TrafficControllerListResult.class);
        Assertions.assertEquals("cnyejhkryhtnapcz", model.value().get(0).location());
        Assertions.assertEquals("kjyemkk", model.value().get(0).tags().get("ni"));
        Assertions.assertEquals("eg", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TrafficControllerListResult model
            = new TrafficControllerListResult().withValue(Arrays.asList(new TrafficControllerInner()
                .withLocation("cnyejhkryhtnapcz").withTags(mapOf("ni", "kjyemkk", "ilzyd", "joxzjnchgejspodm"))
                .withProperties(new TrafficControllerProperties()))).withNextLink("eg");
        model = BinaryData.fromObject(model).toObject(TrafficControllerListResult.class);
        Assertions.assertEquals("cnyejhkryhtnapcz", model.value().get(0).location());
        Assertions.assertEquals("kjyemkk", model.value().get(0).tags().get("ni"));
        Assertions.assertEquals("eg", model.nextLink());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
