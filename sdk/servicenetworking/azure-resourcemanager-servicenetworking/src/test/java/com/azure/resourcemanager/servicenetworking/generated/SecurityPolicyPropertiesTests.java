// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.servicenetworking.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.servicenetworking.models.IpAccessRule;
import com.azure.resourcemanager.servicenetworking.models.IpAccessRuleAction;
import com.azure.resourcemanager.servicenetworking.models.IpAccessRulesPolicy;
import com.azure.resourcemanager.servicenetworking.models.SecurityPolicyProperties;
import com.azure.resourcemanager.servicenetworking.models.WafPolicy;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SecurityPolicyPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SecurityPolicyProperties model = BinaryData.fromString(
            "{\"policyType\":\"waf\",\"wafPolicy\":{\"id\":\"mglougpbkw\"},\"ipAccessRulesPolicy\":{\"rules\":[{\"name\":\"duqkt\",\"priority\":675008389,\"sourceAddressPrefixes\":[\"pwgcuertu\",\"kdosvqw\",\"bmdg\",\"bjf\"],\"action\":\"allow\"},{\"name\":\"gmbmbexppbh\",\"priority\":211326115,\"sourceAddressPrefixes\":[\"rolfpfp\",\"algbquxigjyjg\"],\"action\":\"deny\"},{\"name\":\"aoyfhrtxilnerkuj\",\"priority\":43446932,\"sourceAddressPrefixes\":[\"l\",\"juvf\",\"awrlyx\"],\"action\":\"allow\"},{\"name\":\"kcprbnw\",\"priority\":1695010462,\"sourceAddressPrefixes\":[\"jvtbvpyss\",\"dnrujqguhmuouqfp\"],\"action\":\"deny\"}]},\"provisioningState\":\"Canceled\"}")
            .toObject(SecurityPolicyProperties.class);
        Assertions.assertEquals("mglougpbkw", model.wafPolicy().id());
        Assertions.assertEquals("duqkt", model.ipAccessRulesPolicy().rules().get(0).name());
        Assertions.assertEquals(675008389, model.ipAccessRulesPolicy().rules().get(0).priority());
        Assertions.assertEquals("pwgcuertu", model.ipAccessRulesPolicy().rules().get(0).sourceAddressPrefixes().get(0));
        Assertions.assertEquals(IpAccessRuleAction.ALLOW, model.ipAccessRulesPolicy().rules().get(0).action());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SecurityPolicyProperties model
            = new SecurityPolicyProperties().withWafPolicy(new WafPolicy().withId("mglougpbkw"))
                .withIpAccessRulesPolicy(new IpAccessRulesPolicy().withRules(Arrays.asList(
                    new IpAccessRule().withName("duqkt")
                        .withPriority(675008389)
                        .withSourceAddressPrefixes(Arrays.asList("pwgcuertu", "kdosvqw", "bmdg", "bjf"))
                        .withAction(IpAccessRuleAction.ALLOW),
                    new IpAccessRule().withName("gmbmbexppbh")
                        .withPriority(211326115)
                        .withSourceAddressPrefixes(Arrays.asList("rolfpfp", "algbquxigjyjg"))
                        .withAction(IpAccessRuleAction.DENY),
                    new IpAccessRule().withName("aoyfhrtxilnerkuj")
                        .withPriority(43446932)
                        .withSourceAddressPrefixes(Arrays.asList("l", "juvf", "awrlyx"))
                        .withAction(IpAccessRuleAction.ALLOW),
                    new IpAccessRule().withName("kcprbnw")
                        .withPriority(1695010462)
                        .withSourceAddressPrefixes(Arrays.asList("jvtbvpyss", "dnrujqguhmuouqfp"))
                        .withAction(IpAccessRuleAction.DENY))));
        model = BinaryData.fromObject(model).toObject(SecurityPolicyProperties.class);
        Assertions.assertEquals("mglougpbkw", model.wafPolicy().id());
        Assertions.assertEquals("duqkt", model.ipAccessRulesPolicy().rules().get(0).name());
        Assertions.assertEquals(675008389, model.ipAccessRulesPolicy().rules().get(0).priority());
        Assertions.assertEquals("pwgcuertu", model.ipAccessRulesPolicy().rules().get(0).sourceAddressPrefixes().get(0));
        Assertions.assertEquals(IpAccessRuleAction.ALLOW, model.ipAccessRulesPolicy().rules().get(0).action());
    }
}
