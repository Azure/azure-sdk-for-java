// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datalakestore.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.datalakestore.fluent.models.CreateOrUpdateTrustedIdProviderProperties;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The parameters used to create a new trusted identity provider while creating a new Data Lake Store account. */
@Fluent
public final class CreateTrustedIdProviderWithAccountParameters {
    /*
     * The unique name of the trusted identity provider to create.
     */
    @JsonProperty(value = "name", required = true)
    private String name;

    /*
     * The trusted identity provider properties to use when creating a new trusted identity provider.
     */
    @JsonProperty(value = "properties", required = true)
    private CreateOrUpdateTrustedIdProviderProperties innerProperties = new CreateOrUpdateTrustedIdProviderProperties();

    /** Creates an instance of CreateTrustedIdProviderWithAccountParameters class. */
    public CreateTrustedIdProviderWithAccountParameters() {
    }

    /**
     * Get the name property: The unique name of the trusted identity provider to create.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: The unique name of the trusted identity provider to create.
     *
     * @param name the name value to set.
     * @return the CreateTrustedIdProviderWithAccountParameters object itself.
     */
    public CreateTrustedIdProviderWithAccountParameters withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the innerProperties property: The trusted identity provider properties to use when creating a new trusted
     * identity provider.
     *
     * @return the innerProperties value.
     */
    private CreateOrUpdateTrustedIdProviderProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the idProvider property: The URL of this trusted identity provider.
     *
     * @return the idProvider value.
     */
    public String idProvider() {
        return this.innerProperties() == null ? null : this.innerProperties().idProvider();
    }

    /**
     * Set the idProvider property: The URL of this trusted identity provider.
     *
     * @param idProvider the idProvider value to set.
     * @return the CreateTrustedIdProviderWithAccountParameters object itself.
     */
    public CreateTrustedIdProviderWithAccountParameters withIdProvider(String idProvider) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CreateOrUpdateTrustedIdProviderProperties();
        }
        this.innerProperties().withIdProvider(idProvider);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (name() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property name in model CreateTrustedIdProviderWithAccountParameters"));
        }
        if (innerProperties() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property innerProperties in model"
                            + " CreateTrustedIdProviderWithAccountParameters"));
        } else {
            innerProperties().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(CreateTrustedIdProviderWithAccountParameters.class);
}
