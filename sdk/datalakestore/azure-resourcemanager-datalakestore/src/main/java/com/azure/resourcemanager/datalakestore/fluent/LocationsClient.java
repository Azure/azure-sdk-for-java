// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datalakestore.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.datalakestore.fluent.models.CapabilityInformationInner;
import com.azure.resourcemanager.datalakestore.fluent.models.UsageInner;

/** An instance of this class provides access to all the operations defined in LocationsClient. */
public interface LocationsClient {
    /**
     * Gets subscription-level properties and limits for Data Lake Store specified by resource location.
     *
     * @param location The resource location without whitespace.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return subscription-level properties and limits for Data Lake Store specified by resource location.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    CapabilityInformationInner getCapability(String location);

    /**
     * Gets subscription-level properties and limits for Data Lake Store specified by resource location.
     *
     * @param location The resource location without whitespace.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return subscription-level properties and limits for Data Lake Store specified by resource location.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<CapabilityInformationInner> getCapabilityWithResponse(String location, Context context);

    /**
     * Gets the current usage count and the limit for the resources of the location under the subscription.
     *
     * @param location The resource location without whitespace.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current usage count and the limit for the resources of the location under the subscription.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<UsageInner> getUsage(String location);

    /**
     * Gets the current usage count and the limit for the resources of the location under the subscription.
     *
     * @param location The resource location without whitespace.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current usage count and the limit for the resources of the location under the subscription.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<UsageInner> getUsage(String location, Context context);
}
