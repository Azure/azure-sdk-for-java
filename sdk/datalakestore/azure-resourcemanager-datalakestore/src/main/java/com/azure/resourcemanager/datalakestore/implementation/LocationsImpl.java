// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datalakestore.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.datalakestore.fluent.LocationsClient;
import com.azure.resourcemanager.datalakestore.fluent.models.CapabilityInformationInner;
import com.azure.resourcemanager.datalakestore.fluent.models.UsageInner;
import com.azure.resourcemanager.datalakestore.models.CapabilityInformation;
import com.azure.resourcemanager.datalakestore.models.Locations;
import com.azure.resourcemanager.datalakestore.models.Usage;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class LocationsImpl implements Locations {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(LocationsImpl.class);

    private final LocationsClient innerClient;

    private final com.azure.resourcemanager.datalakestore.DataLakeStoreManager serviceManager;

    public LocationsImpl(
        LocationsClient innerClient, com.azure.resourcemanager.datalakestore.DataLakeStoreManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public CapabilityInformation getCapability(String location) {
        CapabilityInformationInner inner = this.serviceClient().getCapability(location);
        if (inner != null) {
            return new CapabilityInformationImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<CapabilityInformation> getCapabilityWithResponse(String location, Context context) {
        Response<CapabilityInformationInner> inner = this.serviceClient().getCapabilityWithResponse(location, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new CapabilityInformationImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public PagedIterable<Usage> getUsage(String location) {
        PagedIterable<UsageInner> inner = this.serviceClient().getUsage(location);
        return Utils.mapPage(inner, inner1 -> new UsageImpl(inner1, this.manager()));
    }

    public PagedIterable<Usage> getUsage(String location, Context context) {
        PagedIterable<UsageInner> inner = this.serviceClient().getUsage(location, context);
        return Utils.mapPage(inner, inner1 -> new UsageImpl(inner1, this.manager()));
    }

    private LocationsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.datalakestore.DataLakeStoreManager manager() {
        return this.serviceManager;
    }
}
