// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datalakestore.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.datalakestore.fluent.models.VirtualNetworkRuleInner;
import com.azure.resourcemanager.datalakestore.models.CreateOrUpdateVirtualNetworkRuleParameters;
import com.azure.resourcemanager.datalakestore.models.UpdateVirtualNetworkRuleParameters;

/** An instance of this class provides access to all the operations defined in VirtualNetworkRulesClient. */
public interface VirtualNetworkRulesClient {
    /**
     * Lists the Data Lake Store virtual network rules within the specified Data Lake Store account.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Store account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return data Lake Store virtual network rule list information.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<VirtualNetworkRuleInner> listByAccount(String resourceGroupName, String accountName);

    /**
     * Lists the Data Lake Store virtual network rules within the specified Data Lake Store account.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Store account.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return data Lake Store virtual network rule list information.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<VirtualNetworkRuleInner> listByAccount(String resourceGroupName, String accountName, Context context);

    /**
     * Creates or updates the specified virtual network rule. During update, the virtual network rule with the specified
     * name will be replaced with this new virtual network rule.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Store account.
     * @param virtualNetworkRuleName The name of the virtual network rule to create or update.
     * @param parameters Parameters supplied to create or update the virtual network rule.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return data Lake Store virtual network rule information.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    VirtualNetworkRuleInner createOrUpdate(
        String resourceGroupName,
        String accountName,
        String virtualNetworkRuleName,
        CreateOrUpdateVirtualNetworkRuleParameters parameters);

    /**
     * Creates or updates the specified virtual network rule. During update, the virtual network rule with the specified
     * name will be replaced with this new virtual network rule.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Store account.
     * @param virtualNetworkRuleName The name of the virtual network rule to create or update.
     * @param parameters Parameters supplied to create or update the virtual network rule.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return data Lake Store virtual network rule information.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<VirtualNetworkRuleInner> createOrUpdateWithResponse(
        String resourceGroupName,
        String accountName,
        String virtualNetworkRuleName,
        CreateOrUpdateVirtualNetworkRuleParameters parameters,
        Context context);

    /**
     * Gets the specified Data Lake Store virtual network rule.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Store account.
     * @param virtualNetworkRuleName The name of the virtual network rule to retrieve.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified Data Lake Store virtual network rule.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    VirtualNetworkRuleInner get(String resourceGroupName, String accountName, String virtualNetworkRuleName);

    /**
     * Gets the specified Data Lake Store virtual network rule.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Store account.
     * @param virtualNetworkRuleName The name of the virtual network rule to retrieve.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified Data Lake Store virtual network rule.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<VirtualNetworkRuleInner> getWithResponse(
        String resourceGroupName, String accountName, String virtualNetworkRuleName, Context context);

    /**
     * Updates the specified virtual network rule.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Store account.
     * @param virtualNetworkRuleName The name of the virtual network rule to update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return data Lake Store virtual network rule information.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    VirtualNetworkRuleInner update(String resourceGroupName, String accountName, String virtualNetworkRuleName);

    /**
     * Updates the specified virtual network rule.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Store account.
     * @param virtualNetworkRuleName The name of the virtual network rule to update.
     * @param parameters Parameters supplied to update the virtual network rule.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return data Lake Store virtual network rule information.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<VirtualNetworkRuleInner> updateWithResponse(
        String resourceGroupName,
        String accountName,
        String virtualNetworkRuleName,
        UpdateVirtualNetworkRuleParameters parameters,
        Context context);

    /**
     * Deletes the specified virtual network rule from the specified Data Lake Store account.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Store account.
     * @param virtualNetworkRuleName The name of the virtual network rule to delete.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String accountName, String virtualNetworkRuleName);

    /**
     * Deletes the specified virtual network rule from the specified Data Lake Store account.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Store account.
     * @param virtualNetworkRuleName The name of the virtual network rule to delete.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(
        String resourceGroupName, String accountName, String virtualNetworkRuleName, Context context);
}
