/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.datalakestore.v2016_11_01.implementation;

import com.microsoft.azure.management.datalakestore.v2016_11_01.FirewallRule;
import com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl;
import rx.Observable;
import com.microsoft.azure.management.datalakestore.v2016_11_01.UpdateFirewallRuleParameters;
import com.microsoft.azure.management.datalakestore.v2016_11_01.CreateOrUpdateFirewallRuleParameters;
import rx.functions.Func1;

class FirewallRuleImpl extends CreatableUpdatableImpl<FirewallRule, FirewallRuleInner, FirewallRuleImpl> implements FirewallRule, FirewallRule.Definition, FirewallRule.Update {
    private final DataLakeStoreManager manager;
    private String resourceGroupName;
    private String accountName;
    private String firewallRuleName;
    private CreateOrUpdateFirewallRuleParameters createParameter;
    private UpdateFirewallRuleParameters updateParameter;

    FirewallRuleImpl(String name, DataLakeStoreManager manager) {
        super(name, new FirewallRuleInner());
        this.manager = manager;
        // Set resource name
        this.firewallRuleName = name;
        //
        this.createParameter = new CreateOrUpdateFirewallRuleParameters();
        this.updateParameter = new UpdateFirewallRuleParameters();
    }

    FirewallRuleImpl(FirewallRuleInner inner, DataLakeStoreManager manager) {
        super(inner.name(), inner);
        this.manager = manager;
        // Set resource name
        this.firewallRuleName = inner.name();
        // resource ancestor names
        this.resourceGroupName = IdParsingUtils.getValueFromIdByName(inner.id(), "resourceGroups");
        this.accountName = IdParsingUtils.getValueFromIdByName(inner.id(), "accounts");
        this.firewallRuleName = IdParsingUtils.getValueFromIdByName(inner.id(), "firewallRules");
        //
        this.createParameter = new CreateOrUpdateFirewallRuleParameters();
        this.updateParameter = new UpdateFirewallRuleParameters();
    }

    @Override
    public DataLakeStoreManager manager() {
        return this.manager;
    }

    @Override
    public Observable<FirewallRule> createResourceAsync() {
        FirewallRulesInner client = this.manager().inner().firewallRules();
        return client.createOrUpdateAsync(this.resourceGroupName, this.accountName, this.firewallRuleName, this.createParameter)
            .map(new Func1<FirewallRuleInner, FirewallRuleInner>() {
               @Override
               public FirewallRuleInner call(FirewallRuleInner resource) {
                   resetCreateUpdateParameters();
                   return resource;
               }
            })
            .map(innerToFluentMap(this));
    }

    @Override
    public Observable<FirewallRule> updateResourceAsync() {
        FirewallRulesInner client = this.manager().inner().firewallRules();
        return client.updateAsync(this.resourceGroupName, this.accountName, this.firewallRuleName, this.updateParameter)
            .map(new Func1<FirewallRuleInner, FirewallRuleInner>() {
               @Override
               public FirewallRuleInner call(FirewallRuleInner resource) {
                   resetCreateUpdateParameters();
                   return resource;
               }
            })
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<FirewallRuleInner> getInnerAsync() {
        FirewallRulesInner client = this.manager().inner().firewallRules();
        return client.getAsync(this.resourceGroupName, this.accountName, this.firewallRuleName);
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }

    private void resetCreateUpdateParameters() {
        this.createParameter = new CreateOrUpdateFirewallRuleParameters();
        this.updateParameter = new UpdateFirewallRuleParameters();
    }

    @Override
    public String endIpAddress() {
        return this.inner().endIpAddress();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public String startIpAddress() {
        return this.inner().startIpAddress();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

    @Override
    public FirewallRuleImpl withExistingAccount(String resourceGroupName, String accountName) {
        this.resourceGroupName = resourceGroupName;
        this.accountName = accountName;
        return this;
    }

    @Override
    public FirewallRuleImpl withEndIpAddress(String endIpAddress) {
        if (isInCreateMode()) {
            this.createParameter.withEndIpAddress(endIpAddress);
        } else {
            this.updateParameter.withEndIpAddress(endIpAddress);
        }
        return this;
    }

    @Override
    public FirewallRuleImpl withStartIpAddress(String startIpAddress) {
        if (isInCreateMode()) {
            this.createParameter.withStartIpAddress(startIpAddress);
        } else {
            this.updateParameter.withStartIpAddress(startIpAddress);
        }
        return this;
    }

}
