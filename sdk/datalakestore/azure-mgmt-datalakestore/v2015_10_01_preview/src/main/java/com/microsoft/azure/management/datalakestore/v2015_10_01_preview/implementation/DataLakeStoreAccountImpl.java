/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.datalakestore.v2015_10_01_preview.implementation;

import com.microsoft.azure.arm.resources.models.implementation.GroupableResourceCoreImpl;
import com.microsoft.azure.management.datalakestore.v2015_10_01_preview.DataLakeStoreAccount;
import rx.Observable;
import com.microsoft.azure.management.datalakestore.v2015_10_01_preview.EncryptionIdentity;
import com.microsoft.azure.management.datalakestore.v2015_10_01_preview.DataLakeStoreAccountProperties;

class DataLakeStoreAccountImpl extends GroupableResourceCoreImpl<DataLakeStoreAccount, DataLakeStoreAccountInner, DataLakeStoreAccountImpl, DataLakeStoreManager> implements DataLakeStoreAccount, DataLakeStoreAccount.Definition, DataLakeStoreAccount.Update {
    DataLakeStoreAccountImpl(String name, DataLakeStoreAccountInner inner, DataLakeStoreManager manager) {
        super(name, inner, manager);
    }

    @Override
    public Observable<DataLakeStoreAccount> createResourceAsync() {
        AccountsInner client = this.manager().inner().accounts();
        return client.createAsync(this.resourceGroupName(), this.name(), this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    public Observable<DataLakeStoreAccount> updateResourceAsync() {
        AccountsInner client = this.manager().inner().accounts();
        return client.updateAsync(this.resourceGroupName(), this.name(), this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<DataLakeStoreAccountInner> getInnerAsync() {
        AccountsInner client = this.manager().inner().accounts();
        return client.getByResourceGroupAsync(this.resourceGroupName(), this.name());
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }


    @Override
    public EncryptionIdentity identity() {
        return this.inner().identity();
    }

    @Override
    public DataLakeStoreAccountProperties properties() {
        return this.inner().properties();
    }

    @Override
    public DataLakeStoreAccountImpl withIdentity(EncryptionIdentity identity) {
        this.inner().withIdentity(identity);
        return this;
    }

    @Override
    public DataLakeStoreAccountImpl withProperties(DataLakeStoreAccountProperties properties) {
        this.inner().withProperties(properties);
        return this;
    }

}
