// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.graphservices.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Property bag from billing account.
 */
@Fluent
public final class AccountResourceProperties implements JsonSerializable<AccountResourceProperties> {
    /*
     * Provisioning state.
     */
    private ProvisioningState provisioningState;

    /*
     * Customer owned application ID
     */
    private String appId;

    /*
     * Billing Plan Id
     */
    private String billingPlanId;

    /**
     * Creates an instance of AccountResourceProperties class.
     */
    public AccountResourceProperties() {
    }

    /**
     * Get the provisioningState property: Provisioning state.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the appId property: Customer owned application ID.
     * 
     * @return the appId value.
     */
    public String appId() {
        return this.appId;
    }

    /**
     * Set the appId property: Customer owned application ID.
     * 
     * @param appId the appId value to set.
     * @return the AccountResourceProperties object itself.
     */
    public AccountResourceProperties withAppId(String appId) {
        this.appId = appId;
        return this;
    }

    /**
     * Get the billingPlanId property: Billing Plan Id.
     * 
     * @return the billingPlanId value.
     */
    public String billingPlanId() {
        return this.billingPlanId;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (appId() == null) {
            throw LOGGER.atError()
                .log(
                    new IllegalArgumentException("Missing required property appId in model AccountResourceProperties"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(AccountResourceProperties.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("appId", this.appId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AccountResourceProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AccountResourceProperties if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AccountResourceProperties.
     */
    public static AccountResourceProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AccountResourceProperties deserializedAccountResourceProperties = new AccountResourceProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("appId".equals(fieldName)) {
                    deserializedAccountResourceProperties.appId = reader.getString();
                } else if ("provisioningState".equals(fieldName)) {
                    deserializedAccountResourceProperties.provisioningState
                        = ProvisioningState.fromString(reader.getString());
                } else if ("billingPlanId".equals(fieldName)) {
                    deserializedAccountResourceProperties.billingPlanId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAccountResourceProperties;
        });
    }
}
