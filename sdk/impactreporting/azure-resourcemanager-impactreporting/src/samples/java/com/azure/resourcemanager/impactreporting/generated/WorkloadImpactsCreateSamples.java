// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.impactreporting.generated;

import com.azure.resourcemanager.impactreporting.models.ClientIncidentDetails;
import com.azure.resourcemanager.impactreporting.models.Connectivity;
import com.azure.resourcemanager.impactreporting.models.IncidentSource;
import com.azure.resourcemanager.impactreporting.models.MetricUnit;
import com.azure.resourcemanager.impactreporting.models.Performance;
import com.azure.resourcemanager.impactreporting.models.Protocol;
import com.azure.resourcemanager.impactreporting.models.SourceOrTarget;
import com.azure.resourcemanager.impactreporting.models.Toolset;
import com.azure.resourcemanager.impactreporting.models.Workload;
import com.azure.resourcemanager.impactreporting.models.WorkloadImpactProperties;
import java.time.OffsetDateTime;
import java.util.Arrays;

/**
 * Samples for WorkloadImpacts Create.
 */
public final class WorkloadImpactsCreateSamples {
    /*
     * x-ms-original-file: 2024-05-01-preview/WorkloadAvailability_Create.json
     */
    /**
     * Sample code: Reporting availability related impact.
     * 
     * @param manager Entry point to ImpactReportingManager.
     */
    public static void
        reportingAvailabilityRelatedImpact(com.azure.resourcemanager.impactreporting.ImpactReportingManager manager) {
        manager.workloadImpacts()
            .define("impact-002")
            .withProperties(new WorkloadImpactProperties()
                .withStartDateTime(OffsetDateTime.parse("2022-06-15T05:59:46.6517821Z"))
                .withImpactedResourceId(
                    "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resource-rg/providers/Microsoft.Sql/sqlserver/dbservercontext")
                .withImpactCategory("Availability")
                .withImpactDescription("read calls failed")
                .withWorkload(new Workload().withContext("webapp/scenario1").withToolset(Toolset.OTHER))
                .withClientIncidentDetails(new ClientIncidentDetails().withClientIncidentId("AA123")
                    .withClientIncidentSource(IncidentSource.JIRA)))
            .create();
    }

    /*
     * x-ms-original-file: 2024-05-01-preview/WorkloadConnectivityImpact_Create.json
     */
    /**
     * Sample code: Reporting a connectivity impact.
     * 
     * @param manager Entry point to ImpactReportingManager.
     */
    public static void
        reportingAConnectivityImpact(com.azure.resourcemanager.impactreporting.ImpactReportingManager manager) {
        manager.workloadImpacts()
            .define("impact-001")
            .withProperties(new WorkloadImpactProperties()
                .withStartDateTime(OffsetDateTime.parse("2022-06-15T05:59:46.6517821Z"))
                .withImpactedResourceId(
                    "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resource-rg/providers/Microsoft.Sql/sqlserver/dbservercontext")
                .withImpactCategory("Resource.Connectivity")
                .withImpactDescription("conection failure")
                .withConnectivity(new Connectivity().withProtocol(Protocol.TCP)
                    .withPort(1443)
                    .withSource(new SourceOrTarget().withAzureResourceId(
                        "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceSub/providers/Microsoft.compute/virtualmachines/vm1"))
                    .withTarget(new SourceOrTarget().withAzureResourceId(
                        "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceSub/providers/Microsoft.compute/virtualmachines/vm2")))
                .withWorkload(new Workload().withContext("webapp/scenario1").withToolset(Toolset.OTHER))
                .withClientIncidentDetails(new ClientIncidentDetails().withClientIncidentId("AA123")
                    .withClientIncidentSource(IncidentSource.JIRA)))
            .create();
    }

    /*
     * x-ms-original-file: 2024-05-01-preview/WorkloadArmOperation_create.json
     */
    /**
     * Sample code: Reporting Arm operation failure.
     * 
     * @param manager Entry point to ImpactReportingManager.
     */
    public static void
        reportingArmOperationFailure(com.azure.resourcemanager.impactreporting.ImpactReportingManager manager) {
        manager.workloadImpacts()
            .define("impact-002")
            .withProperties(new WorkloadImpactProperties()
                .withStartDateTime(OffsetDateTime.parse("2022-06-15T05:59:46.6517821Z"))
                .withImpactedResourceId(
                    "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resource-rg/providers/Microsoft.Sql/sqlserver/dbservercontext")
                .withImpactCategory("ArmOperation")
                .withImpactDescription("deletion of resource failed")
                .withArmCorrelationIds(Arrays.asList("00000000-0000-0000-0000-000000000000"))
                .withWorkload(new Workload().withContext("webapp/scenario1").withToolset(Toolset.OTHER))
                .withClientIncidentDetails(new ClientIncidentDetails().withClientIncidentId("AA123")
                    .withClientIncidentSource(IncidentSource.JIRA)))
            .create();
    }

    /*
     * x-ms-original-file: 2024-05-01-preview/WorkloadPerformance_Create.json
     */
    /**
     * Sample code: Reporting performance related impact.
     * 
     * @param manager Entry point to ImpactReportingManager.
     */
    public static void
        reportingPerformanceRelatedImpact(com.azure.resourcemanager.impactreporting.ImpactReportingManager manager) {
        manager.workloadImpacts()
            .define("impact-002")
            .withProperties(new WorkloadImpactProperties()
                .withStartDateTime(OffsetDateTime.parse("2022-06-15T05:59:46.6517821Z"))
                .withImpactedResourceId(
                    "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resource-rg/providers/Microsoft.Sql/sqlserver/dbservercontext")
                .withImpactCategory("Resource.Performance")
                .withImpactDescription("high cpu utilization")
                .withPerformance(Arrays.asList(new Performance().withMetricName("CPU")
                    .withExpected(60.0D)
                    .withActual(90.0D)
                    .withUnit(MetricUnit.fromString("garbage"))))
                .withWorkload(new Workload().withContext("webapp/scenario1").withToolset(Toolset.OTHER))
                .withClientIncidentDetails(new ClientIncidentDetails().withClientIncidentId("AA123")
                    .withClientIncidentSource(IncidentSource.JIRA)))
            .create();
    }
}
