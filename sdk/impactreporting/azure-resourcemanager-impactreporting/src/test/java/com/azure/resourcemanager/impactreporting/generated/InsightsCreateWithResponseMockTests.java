// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.impactreporting.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.impactreporting.ImpactReportingManager;
import com.azure.resourcemanager.impactreporting.models.Content;
import com.azure.resourcemanager.impactreporting.models.ImpactDetails;
import com.azure.resourcemanager.impactreporting.models.Insight;
import com.azure.resourcemanager.impactreporting.models.InsightProperties;
import com.azure.resourcemanager.impactreporting.models.InsightPropertiesAdditionalDetails;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class InsightsCreateWithResponseMockTests {
    @Test
    public void testCreateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Failed\",\"category\":\"kqujidsuyono\",\"status\":\"laocqxtccmg\",\"eventId\":\"dxyt\",\"groupId\":\"oyrxvwfudwpzntxh\",\"content\":{\"title\":\"zhlrqjb\",\"description\":\"ck\"},\"eventTime\":\"2021-01-01T22:28:55Z\",\"insightUniqueId\":\"hrxsbk\",\"impact\":{\"impactedResourceId\":\"vpycanuzbp\",\"startTime\":\"2021-03-18T06:16:35Z\",\"endTime\":\"2021-09-24T05:43:50Z\",\"impactId\":\"kuwbcrnwb\"},\"additionalDetails\":{}},\"id\":\"hseyvju\",\"name\":\"rts\",\"type\":\"hspkdeemao\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ImpactReportingManager manager = ImpactReportingManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Insight response = manager.insights()
            .define("ckhsmtxpsieb")
            .withExistingWorkloadImpact("a")
            .withProperties(new InsightProperties().withCategory("pesapskrdqmhjj")
                .withStatus("tldwkyzxuutk")
                .withEventId("ws")
                .withGroupId("svlxotogtwrup")
                .withContent(new Content().withTitle("sx").withDescription("nmic"))
                .withEventTime(OffsetDateTime.parse("2021-01-26T07:44:08Z"))
                .withInsightUniqueId("ceoveilovno")
                .withImpact(new ImpactDetails().withImpactedResourceId("yfjfcnjbkcn")
                    .withStartTime(OffsetDateTime.parse("2021-05-23T15:27:27Z"))
                    .withEndTime(OffsetDateTime.parse("2021-07-21T19:51:01Z"))
                    .withImpactId("ttkphywpnvjtoqne"))
                .withAdditionalDetails(new InsightPropertiesAdditionalDetails()))
            .create();

        Assertions.assertEquals("kqujidsuyono", response.properties().category());
        Assertions.assertEquals("laocqxtccmg", response.properties().status());
        Assertions.assertEquals("dxyt", response.properties().eventId());
        Assertions.assertEquals("oyrxvwfudwpzntxh", response.properties().groupId());
        Assertions.assertEquals("zhlrqjb", response.properties().content().title());
        Assertions.assertEquals("ck", response.properties().content().description());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-01T22:28:55Z"), response.properties().eventTime());
        Assertions.assertEquals("hrxsbk", response.properties().insightUniqueId());
        Assertions.assertEquals("vpycanuzbp", response.properties().impact().impactedResourceId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-18T06:16:35Z"),
            response.properties().impact().startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-24T05:43:50Z"), response.properties().impact().endTime());
        Assertions.assertEquals("kuwbcrnwb", response.properties().impact().impactId());
    }
}
