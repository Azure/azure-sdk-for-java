// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.impactreporting.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.impactreporting.ImpactReportingManager;
import com.azure.resourcemanager.impactreporting.models.Content;
import com.azure.resourcemanager.impactreporting.models.ImpactDetails;
import com.azure.resourcemanager.impactreporting.models.Insight;
import com.azure.resourcemanager.impactreporting.models.InsightProperties;
import com.azure.resourcemanager.impactreporting.models.InsightPropertiesAdditionalDetails;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class InsightsCreateWithResponseMockTests {
    @Test
    public void testCreateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Canceled\",\"category\":\"pow\",\"status\":\"przqlveu\",\"eventId\":\"upjm\",\"groupId\":\"fxobbcsws\",\"content\":{\"title\":\"tjrip\",\"description\":\"rbpbewtghfgblcg\"},\"eventTime\":\"2021-05-16T18:46:25Z\",\"insightUniqueId\":\"vlvqhjkbegi\",\"impact\":{\"impactedResourceId\":\"t\",\"startTime\":\"2021-07-17T08:56:43Z\",\"endTime\":\"2021-10-10T05:49:23Z\",\"impactId\":\"ebwwaloayqc\"},\"additionalDetails\":{}},\"id\":\"tzjuzgwyzmhtxo\",\"name\":\"gmtsavjcbpwxqpsr\",\"type\":\"nftguvriuhpr\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ImpactReportingManager manager = ImpactReportingManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Insight response = manager.insights()
            .define("bnbbeldawkz")
            .withExistingWorkloadImpact("fmisg")
            .withProperties(new InsightProperties().withCategory("ourqhakau")
                .withStatus("shsfwxosowzxcu")
                .withEventId("cjooxdjebwpucwwf")
                .withGroupId("vbvmeu")
                .withContent(new Content().withTitle("civyhzceuo").withDescription("gjrwjueiotwmcdyt"))
                .withEventTime(OffsetDateTime.parse("2021-09-27T21:02:03Z"))
                .withInsightUniqueId("it")
                .withImpact(new ImpactDetails().withImpactedResourceId("nrjawgqwg")
                    .withStartTime(OffsetDateTime.parse("2021-10-10T15:46:25Z"))
                    .withEndTime(OffsetDateTime.parse("2021-12-08T22:59:31Z"))
                    .withImpactId("skxfbk"))
                .withAdditionalDetails(new InsightPropertiesAdditionalDetails()))
            .create();

        Assertions.assertEquals("pow", response.properties().category());
        Assertions.assertEquals("przqlveu", response.properties().status());
        Assertions.assertEquals("upjm", response.properties().eventId());
        Assertions.assertEquals("fxobbcsws", response.properties().groupId());
        Assertions.assertEquals("tjrip", response.properties().content().title());
        Assertions.assertEquals("rbpbewtghfgblcg", response.properties().content().description());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-16T18:46:25Z"), response.properties().eventTime());
        Assertions.assertEquals("vlvqhjkbegi", response.properties().insightUniqueId());
        Assertions.assertEquals("t", response.properties().impact().impactedResourceId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-17T08:56:43Z"),
            response.properties().impact().startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-10T05:49:23Z"), response.properties().impact().endTime());
        Assertions.assertEquals("ebwwaloayqc", response.properties().impact().impactId());
    }
}
