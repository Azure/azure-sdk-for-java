// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.impactreporting.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.impactreporting.ImpactReportingManager;
import com.azure.resourcemanager.impactreporting.models.Insight;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class InsightsListBySubscriptionMockTests {
    @Test
    public void testListBySubscription() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Failed\",\"category\":\"avxbniwdjswztsdb\",\"status\":\"nxytxh\",\"eventId\":\"xbzpfzab\",\"groupId\":\"cuh\",\"content\":{\"title\":\"wtctyqi\",\"description\":\"lbbovplw\"},\"eventTime\":\"2021-01-04T19:51:15Z\",\"insightUniqueId\":\"vgyuguos\",\"impact\":{\"impactedResourceId\":\"mkfssxqukkfplgm\",\"startTime\":\"2021-02-10T04:43:50Z\",\"endTime\":\"2021-08-18T07:20:43Z\",\"impactId\":\"kjz\"},\"additionalDetails\":{}},\"id\":\"slpvlop\",\"name\":\"i\",\"type\":\"ighxpk\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ImpactReportingManager manager = ImpactReportingManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<Insight> response
            = manager.insights().listBySubscription("zjancuxr", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("avxbniwdjswztsdb", response.iterator().next().properties().category());
        Assertions.assertEquals("nxytxh", response.iterator().next().properties().status());
        Assertions.assertEquals("xbzpfzab", response.iterator().next().properties().eventId());
        Assertions.assertEquals("cuh", response.iterator().next().properties().groupId());
        Assertions.assertEquals("wtctyqi", response.iterator().next().properties().content().title());
        Assertions.assertEquals("lbbovplw", response.iterator().next().properties().content().description());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-04T19:51:15Z"),
            response.iterator().next().properties().eventTime());
        Assertions.assertEquals("vgyuguos", response.iterator().next().properties().insightUniqueId());
        Assertions.assertEquals("mkfssxqukkfplgm",
            response.iterator().next().properties().impact().impactedResourceId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-10T04:43:50Z"),
            response.iterator().next().properties().impact().startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-18T07:20:43Z"),
            response.iterator().next().properties().impact().endTime());
        Assertions.assertEquals("kjz", response.iterator().next().properties().impact().impactId());
    }
}
