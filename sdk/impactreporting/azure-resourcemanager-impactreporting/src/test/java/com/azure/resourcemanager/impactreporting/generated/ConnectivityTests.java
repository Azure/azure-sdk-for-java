// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.impactreporting.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.impactreporting.models.Connectivity;
import com.azure.resourcemanager.impactreporting.models.Protocol;
import com.azure.resourcemanager.impactreporting.models.SourceOrTarget;
import org.junit.jupiter.api.Assertions;

public final class ConnectivityTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        Connectivity model = BinaryData.fromString(
            "{\"protocol\":\"HTTP\",\"port\":751944111,\"source\":{\"azureResourceId\":\"xxjtfe\"},\"target\":{\"azureResourceId\":\"wfzitonpeqfpjk\"}}")
            .toObject(Connectivity.class);
        Assertions.assertEquals(Protocol.HTTP, model.protocol());
        Assertions.assertEquals(751944111, model.port());
        Assertions.assertEquals("xxjtfe", model.source().azureResourceId());
        Assertions.assertEquals("wfzitonpeqfpjk", model.target().azureResourceId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        Connectivity model = new Connectivity().withProtocol(Protocol.HTTP)
            .withPort(751944111)
            .withSource(new SourceOrTarget().withAzureResourceId("xxjtfe"))
            .withTarget(new SourceOrTarget().withAzureResourceId("wfzitonpeqfpjk"));
        model = BinaryData.fromObject(model).toObject(Connectivity.class);
        Assertions.assertEquals(Protocol.HTTP, model.protocol());
        Assertions.assertEquals(751944111, model.port());
        Assertions.assertEquals("xxjtfe", model.source().azureResourceId());
        Assertions.assertEquals("wfzitonpeqfpjk", model.target().azureResourceId());
    }
}
