// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.impactreporting.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.impactreporting.fluent.models.InsightInner;
import com.azure.resourcemanager.impactreporting.models.Content;
import com.azure.resourcemanager.impactreporting.models.ImpactDetails;
import com.azure.resourcemanager.impactreporting.models.InsightProperties;
import com.azure.resourcemanager.impactreporting.models.InsightPropertiesAdditionalDetails;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class InsightInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        InsightInner model = BinaryData.fromString(
            "{\"properties\":{\"provisioningState\":\"Canceled\",\"category\":\"dxob\",\"status\":\"dxkqpx\",\"eventId\":\"ajionpimexgstxg\",\"groupId\":\"odgmaajrmvdjwz\",\"content\":{\"title\":\"lovmclwhijcoe\",\"description\":\"ctbzaq\"},\"eventTime\":\"2021-02-04T17:33:10Z\",\"insightUniqueId\":\"y\",\"impact\":{\"impactedResourceId\":\"bkbfkgukdkex\",\"startTime\":\"2021-01-19T06:43:15Z\",\"endTime\":\"2020-12-21T14:35:19Z\",\"impactId\":\"fmxa\"},\"additionalDetails\":{}},\"id\":\"jpgd\",\"name\":\"toc\",\"type\":\"j\"}")
            .toObject(InsightInner.class);
        Assertions.assertEquals("dxob", model.properties().category());
        Assertions.assertEquals("dxkqpx", model.properties().status());
        Assertions.assertEquals("ajionpimexgstxg", model.properties().eventId());
        Assertions.assertEquals("odgmaajrmvdjwz", model.properties().groupId());
        Assertions.assertEquals("lovmclwhijcoe", model.properties().content().title());
        Assertions.assertEquals("ctbzaq", model.properties().content().description());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-04T17:33:10Z"), model.properties().eventTime());
        Assertions.assertEquals("y", model.properties().insightUniqueId());
        Assertions.assertEquals("bkbfkgukdkex", model.properties().impact().impactedResourceId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-19T06:43:15Z"), model.properties().impact().startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-21T14:35:19Z"), model.properties().impact().endTime());
        Assertions.assertEquals("fmxa", model.properties().impact().impactId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        InsightInner model = new InsightInner().withProperties(new InsightProperties().withCategory("dxob")
            .withStatus("dxkqpx")
            .withEventId("ajionpimexgstxg")
            .withGroupId("odgmaajrmvdjwz")
            .withContent(new Content().withTitle("lovmclwhijcoe").withDescription("ctbzaq"))
            .withEventTime(OffsetDateTime.parse("2021-02-04T17:33:10Z"))
            .withInsightUniqueId("y")
            .withImpact(new ImpactDetails().withImpactedResourceId("bkbfkgukdkex")
                .withStartTime(OffsetDateTime.parse("2021-01-19T06:43:15Z"))
                .withEndTime(OffsetDateTime.parse("2020-12-21T14:35:19Z"))
                .withImpactId("fmxa"))
            .withAdditionalDetails(new InsightPropertiesAdditionalDetails()));
        model = BinaryData.fromObject(model).toObject(InsightInner.class);
        Assertions.assertEquals("dxob", model.properties().category());
        Assertions.assertEquals("dxkqpx", model.properties().status());
        Assertions.assertEquals("ajionpimexgstxg", model.properties().eventId());
        Assertions.assertEquals("odgmaajrmvdjwz", model.properties().groupId());
        Assertions.assertEquals("lovmclwhijcoe", model.properties().content().title());
        Assertions.assertEquals("ctbzaq", model.properties().content().description());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-04T17:33:10Z"), model.properties().eventTime());
        Assertions.assertEquals("y", model.properties().insightUniqueId());
        Assertions.assertEquals("bkbfkgukdkex", model.properties().impact().impactedResourceId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-19T06:43:15Z"), model.properties().impact().startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-21T14:35:19Z"), model.properties().impact().endTime());
        Assertions.assertEquals("fmxa", model.properties().impact().impactId());
    }
}
