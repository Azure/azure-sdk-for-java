// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.impactreporting.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.impactreporting.fluent.models.InsightInner;
import com.azure.resourcemanager.impactreporting.models.Content;
import com.azure.resourcemanager.impactreporting.models.ImpactDetails;
import com.azure.resourcemanager.impactreporting.models.InsightProperties;
import com.azure.resourcemanager.impactreporting.models.InsightPropertiesAdditionalDetails;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class InsightInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        InsightInner model = BinaryData.fromString(
            "{\"properties\":{\"provisioningState\":\"Succeeded\",\"category\":\"ac\",\"status\":\"oosflnr\",\"eventId\":\"fqpte\",\"groupId\":\"zzvypyqrimzinp\",\"content\":{\"title\":\"swjdkirso\",\"description\":\"dqxhcrmnohjtckwh\"},\"eventTime\":\"2021-05-11T08:11:32Z\",\"insightUniqueId\":\"ifiyipjxsqwpgrj\",\"impact\":{\"impactedResourceId\":\"znorcj\",\"startTime\":\"2021-06-22T20:26:35Z\",\"endTime\":\"2021-01-21T21:41:42Z\",\"impactId\":\"byxqabn\"},\"additionalDetails\":{}},\"id\":\"pcyshu\",\"name\":\"zafb\",\"type\":\"jjgpb\"}")
            .toObject(InsightInner.class);
        Assertions.assertEquals("ac", model.properties().category());
        Assertions.assertEquals("oosflnr", model.properties().status());
        Assertions.assertEquals("fqpte", model.properties().eventId());
        Assertions.assertEquals("zzvypyqrimzinp", model.properties().groupId());
        Assertions.assertEquals("swjdkirso", model.properties().content().title());
        Assertions.assertEquals("dqxhcrmnohjtckwh", model.properties().content().description());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-11T08:11:32Z"), model.properties().eventTime());
        Assertions.assertEquals("ifiyipjxsqwpgrj", model.properties().insightUniqueId());
        Assertions.assertEquals("znorcj", model.properties().impact().impactedResourceId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-22T20:26:35Z"), model.properties().impact().startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-21T21:41:42Z"), model.properties().impact().endTime());
        Assertions.assertEquals("byxqabn", model.properties().impact().impactId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        InsightInner model = new InsightInner().withProperties(new InsightProperties().withCategory("ac")
            .withStatus("oosflnr")
            .withEventId("fqpte")
            .withGroupId("zzvypyqrimzinp")
            .withContent(new Content().withTitle("swjdkirso").withDescription("dqxhcrmnohjtckwh"))
            .withEventTime(OffsetDateTime.parse("2021-05-11T08:11:32Z"))
            .withInsightUniqueId("ifiyipjxsqwpgrj")
            .withImpact(new ImpactDetails().withImpactedResourceId("znorcj")
                .withStartTime(OffsetDateTime.parse("2021-06-22T20:26:35Z"))
                .withEndTime(OffsetDateTime.parse("2021-01-21T21:41:42Z"))
                .withImpactId("byxqabn"))
            .withAdditionalDetails(new InsightPropertiesAdditionalDetails()));
        model = BinaryData.fromObject(model).toObject(InsightInner.class);
        Assertions.assertEquals("ac", model.properties().category());
        Assertions.assertEquals("oosflnr", model.properties().status());
        Assertions.assertEquals("fqpte", model.properties().eventId());
        Assertions.assertEquals("zzvypyqrimzinp", model.properties().groupId());
        Assertions.assertEquals("swjdkirso", model.properties().content().title());
        Assertions.assertEquals("dqxhcrmnohjtckwh", model.properties().content().description());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-11T08:11:32Z"), model.properties().eventTime());
        Assertions.assertEquals("ifiyipjxsqwpgrj", model.properties().insightUniqueId());
        Assertions.assertEquals("znorcj", model.properties().impact().impactedResourceId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-22T20:26:35Z"), model.properties().impact().startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-21T21:41:42Z"), model.properties().impact().endTime());
        Assertions.assertEquals("byxqabn", model.properties().impact().impactId());
    }
}
