// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kubernetesruntime.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.kubernetesruntime.fluent.models.ServiceResourceInner;
import com.azure.resourcemanager.kubernetesruntime.models.ProvisioningState;
import com.azure.resourcemanager.kubernetesruntime.models.ServiceResource;

public final class ServiceResourceImpl implements ServiceResource, ServiceResource.Definition, ServiceResource.Update {
    private ServiceResourceInner innerObject;

    private final com.azure.resourcemanager.kubernetesruntime.KubernetesruntimeManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String rpObjectId() {
        return this.innerModel().rpObjectId();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public ServiceResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.kubernetesruntime.KubernetesruntimeManager manager() {
        return this.serviceManager;
    }

    private String resourceUri;

    private String serviceName;

    public ServiceResourceImpl withExistingResourceUri(String resourceUri) {
        this.resourceUri = resourceUri;
        return this;
    }

    public ServiceResource create() {
        this.innerObject = serviceManager.serviceClient()
            .getServices()
            .createOrUpdateWithResponse(resourceUri, serviceName, this.innerModel(), Context.NONE)
            .getValue();
        return this;
    }

    public ServiceResource create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getServices()
            .createOrUpdateWithResponse(resourceUri, serviceName, this.innerModel(), context)
            .getValue();
        return this;
    }

    ServiceResourceImpl(String name,
        com.azure.resourcemanager.kubernetesruntime.KubernetesruntimeManager serviceManager) {
        this.innerObject = new ServiceResourceInner();
        this.serviceManager = serviceManager;
        this.serviceName = name;
    }

    public ServiceResourceImpl update() {
        return this;
    }

    public ServiceResource apply() {
        this.innerObject = serviceManager.serviceClient()
            .getServices()
            .createOrUpdateWithResponse(resourceUri, serviceName, this.innerModel(), Context.NONE)
            .getValue();
        return this;
    }

    public ServiceResource apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getServices()
            .createOrUpdateWithResponse(resourceUri, serviceName, this.innerModel(), context)
            .getValue();
        return this;
    }

    ServiceResourceImpl(ServiceResourceInner innerObject,
        com.azure.resourcemanager.kubernetesruntime.KubernetesruntimeManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceUri = ResourceManagerUtils.getValueFromIdByParameterName(innerObject.id(),
            "/{resourceUri}/providers/Microsoft.KubernetesRuntime/services/{serviceName}", "resourceUri");
        this.serviceName = ResourceManagerUtils.getValueFromIdByParameterName(innerObject.id(),
            "/{resourceUri}/providers/Microsoft.KubernetesRuntime/services/{serviceName}", "serviceName");
    }

    public ServiceResource refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getServices()
            .getWithResponse(resourceUri, serviceName, Context.NONE)
            .getValue();
        return this;
    }

    public ServiceResource refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getServices()
            .getWithResponse(resourceUri, serviceName, context)
            .getValue();
        return this;
    }
}
