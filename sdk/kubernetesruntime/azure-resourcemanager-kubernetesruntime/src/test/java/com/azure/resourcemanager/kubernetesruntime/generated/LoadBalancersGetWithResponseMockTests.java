// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kubernetesruntime.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.kubernetesruntime.KubernetesruntimeManager;
import com.azure.resourcemanager.kubernetesruntime.models.AdvertiseMode;
import com.azure.resourcemanager.kubernetesruntime.models.LoadBalancer;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class LoadBalancersGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"addresses\":[\"fmvfaxkffeiit\",\"lvmezyvshxmzsbbz\",\"ggi\"],\"serviceSelector\":{\"oenkouknvudwti\":\"wburvjxxjnspydpt\",\"yxoegukgjnp\":\"kbldngkpocipa\",\"typmrbpizcdrqjsd\":\"ucgygevqz\"},\"advertiseMode\":\"Both\",\"bgpPeers\":[\"fyhxde\",\"ejzicwifsjtt\"],\"provisioningState\":\"Provisioning\"},\"id\":\"ishc\",\"name\":\"khaj\",\"type\":\"eyeam\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        KubernetesruntimeManager manager = KubernetesruntimeManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        LoadBalancer response = manager.loadBalancers()
            .getWithResponse("osvexcsonpclhoc", "hslkevleggzf", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("fmvfaxkffeiit", response.addresses().get(0));
        Assertions.assertEquals("wburvjxxjnspydpt", response.serviceSelector().get("oenkouknvudwti"));
        Assertions.assertEquals(AdvertiseMode.BOTH, response.advertiseMode());
        Assertions.assertEquals("fyhxde", response.bgpPeers().get(0));
    }
}
