// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kubernetesruntime.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.kubernetesruntime.models.NfsDirectoryActionOnVolumeDeletion;
import com.azure.resourcemanager.kubernetesruntime.models.NfsStorageClassTypeProperties;
import org.junit.jupiter.api.Assertions;

public final class NfsStorageClassTypePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NfsStorageClassTypeProperties model = BinaryData.fromString(
            "{\"type\":\"NFS\",\"server\":\"wdslfhotwmcy\",\"share\":\"pwlbjnpg\",\"subDir\":\"ftadehxnltyfs\",\"mountPermissions\":\"pusuesn\",\"onDelete\":\"Delete\"}")
            .toObject(NfsStorageClassTypeProperties.class);
        Assertions.assertEquals("wdslfhotwmcy", model.server());
        Assertions.assertEquals("pwlbjnpg", model.share());
        Assertions.assertEquals("ftadehxnltyfs", model.subDir());
        Assertions.assertEquals("pusuesn", model.mountPermissions());
        Assertions.assertEquals(NfsDirectoryActionOnVolumeDeletion.DELETE, model.onDelete());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NfsStorageClassTypeProperties model = new NfsStorageClassTypeProperties().withServer("wdslfhotwmcy")
            .withShare("pwlbjnpg")
            .withSubDir("ftadehxnltyfs")
            .withMountPermissions("pusuesn")
            .withOnDelete(NfsDirectoryActionOnVolumeDeletion.DELETE);
        model = BinaryData.fromObject(model).toObject(NfsStorageClassTypeProperties.class);
        Assertions.assertEquals("wdslfhotwmcy", model.server());
        Assertions.assertEquals("pwlbjnpg", model.share());
        Assertions.assertEquals("ftadehxnltyfs", model.subDir());
        Assertions.assertEquals("pusuesn", model.mountPermissions());
        Assertions.assertEquals(NfsDirectoryActionOnVolumeDeletion.DELETE, model.onDelete());
    }
}
