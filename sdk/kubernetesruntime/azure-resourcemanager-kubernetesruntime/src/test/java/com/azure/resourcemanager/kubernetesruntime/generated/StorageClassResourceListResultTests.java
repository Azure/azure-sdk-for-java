// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kubernetesruntime.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.kubernetesruntime.fluent.models.StorageClassResourceInner;
import com.azure.resourcemanager.kubernetesruntime.models.AccessMode;
import com.azure.resourcemanager.kubernetesruntime.models.DataResilienceTier;
import com.azure.resourcemanager.kubernetesruntime.models.FailoverTier;
import com.azure.resourcemanager.kubernetesruntime.models.PerformanceTier;
import com.azure.resourcemanager.kubernetesruntime.models.StorageClassResourceListResult;
import com.azure.resourcemanager.kubernetesruntime.models.StorageClassTypeProperties;
import com.azure.resourcemanager.kubernetesruntime.models.VolumeBindingMode;
import com.azure.resourcemanager.kubernetesruntime.models.VolumeExpansion;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class StorageClassResourceListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        StorageClassResourceListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"allowVolumeExpansion\":\"Allow\",\"mountOptions\":[\"lougpbkw\",\"mutduqktaps\"],\"provisioner\":\"gcue\",\"volumeBindingMode\":\"WaitForFirstConsumer\",\"accessModes\":[\"ReadWriteMany\",\"ReadWriteOnce\"],\"dataResilience\":\"DataResilient\",\"failoverSpeed\":\"Slow\",\"limitations\":[\"mdgbbjfdd\"],\"performance\":\"Standard\",\"priority\":6485857331329667518,\"typeProperties\":{\"type\":\"StorageClassTypeProperties\"},\"provisioningState\":\"Updating\"},\"id\":\"bhtqqrolfpfpsa\",\"name\":\"gbquxigj\",\"type\":\"jgzjaoyfhrtx\"},{\"properties\":{\"allowVolumeExpansion\":\"Allow\",\"mountOptions\":[\"ujysvle\",\"uvfqawrlyxwj\",\"cpr\",\"nwbxgjvtbvpyssz\"],\"provisioner\":\"rujqg\",\"volumeBindingMode\":\"Immediate\",\"accessModes\":[\"ReadWriteOnce\",\"ReadWriteMany\"],\"dataResilience\":\"DataResilient\",\"failoverSpeed\":\"Fast\",\"limitations\":[\"bngui\",\"nwui\",\"gazxuf\"],\"performance\":\"Basic\",\"priority\":4016956640106038361,\"typeProperties\":{\"type\":\"StorageClassTypeProperties\"},\"provisioningState\":\"Deleting\"},\"id\":\"rfidfvzwdz\",\"name\":\"htymw\",\"type\":\"sdkf\"},{\"properties\":{\"allowVolumeExpansion\":\"Disallow\",\"mountOptions\":[\"t\",\"i\",\"aop\"],\"provisioner\":\"mijcmmxdcufufs\",\"volumeBindingMode\":\"Immediate\",\"accessModes\":[\"ReadWriteMany\",\"ReadWriteMany\",\"ReadWriteOnce\",\"ReadWriteOnce\"],\"dataResilience\":\"DataResilient\",\"failoverSpeed\":\"Super\",\"limitations\":[\"zsgfyccsnewmd\",\"z\",\"eiachboosflnr\"],\"performance\":\"Basic\",\"priority\":8236287813880835178,\"typeProperties\":{\"type\":\"StorageClassTypeProperties\"},\"provisioningState\":\"Succeeded\"},\"id\":\"zzvypyqrimzinp\",\"name\":\"swjdkirso\",\"type\":\"dqxhcrmnohjtckwh\"}],\"nextLink\":\"oifiyipjxsqwpgr\"}")
            .toObject(StorageClassResourceListResult.class);
        Assertions.assertEquals(VolumeExpansion.ALLOW, model.value().get(0).allowVolumeExpansion());
        Assertions.assertEquals("lougpbkw", model.value().get(0).mountOptions().get(0));
        Assertions.assertEquals("gcue", model.value().get(0).provisioner());
        Assertions.assertEquals(VolumeBindingMode.WAIT_FOR_FIRST_CONSUMER, model.value().get(0).volumeBindingMode());
        Assertions.assertEquals(AccessMode.READ_WRITE_MANY, model.value().get(0).accessModes().get(0));
        Assertions.assertEquals(DataResilienceTier.DATA_RESILIENT, model.value().get(0).dataResilience());
        Assertions.assertEquals(FailoverTier.SLOW, model.value().get(0).failoverSpeed());
        Assertions.assertEquals("mdgbbjfdd", model.value().get(0).limitations().get(0));
        Assertions.assertEquals(PerformanceTier.STANDARD, model.value().get(0).performance());
        Assertions.assertEquals(6485857331329667518L, model.value().get(0).priority());
        Assertions.assertEquals("oifiyipjxsqwpgr", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        StorageClassResourceListResult model = new StorageClassResourceListResult().withValue(Arrays.asList(
            new StorageClassResourceInner().withAllowVolumeExpansion(VolumeExpansion.ALLOW)
                .withMountOptions(Arrays.asList("lougpbkw", "mutduqktaps"))
                .withProvisioner("gcue")
                .withVolumeBindingMode(VolumeBindingMode.WAIT_FOR_FIRST_CONSUMER)
                .withAccessModes(Arrays.asList(AccessMode.READ_WRITE_MANY, AccessMode.READ_WRITE_ONCE))
                .withDataResilience(DataResilienceTier.DATA_RESILIENT)
                .withFailoverSpeed(FailoverTier.SLOW)
                .withLimitations(Arrays.asList("mdgbbjfdd"))
                .withPerformance(PerformanceTier.STANDARD)
                .withPriority(6485857331329667518L)
                .withTypeProperties(new StorageClassTypeProperties()),
            new StorageClassResourceInner().withAllowVolumeExpansion(VolumeExpansion.ALLOW)
                .withMountOptions(Arrays.asList("ujysvle", "uvfqawrlyxwj", "cpr", "nwbxgjvtbvpyssz"))
                .withProvisioner("rujqg")
                .withVolumeBindingMode(VolumeBindingMode.IMMEDIATE)
                .withAccessModes(Arrays.asList(AccessMode.READ_WRITE_ONCE, AccessMode.READ_WRITE_MANY))
                .withDataResilience(DataResilienceTier.DATA_RESILIENT)
                .withFailoverSpeed(FailoverTier.FAST)
                .withLimitations(Arrays.asList("bngui", "nwui", "gazxuf"))
                .withPerformance(PerformanceTier.BASIC)
                .withPriority(4016956640106038361L)
                .withTypeProperties(new StorageClassTypeProperties()),
            new StorageClassResourceInner().withAllowVolumeExpansion(VolumeExpansion.DISALLOW)
                .withMountOptions(Arrays.asList("t", "i", "aop"))
                .withProvisioner("mijcmmxdcufufs")
                .withVolumeBindingMode(VolumeBindingMode.IMMEDIATE)
                .withAccessModes(Arrays.asList(AccessMode.READ_WRITE_MANY, AccessMode.READ_WRITE_MANY,
                    AccessMode.READ_WRITE_ONCE, AccessMode.READ_WRITE_ONCE))
                .withDataResilience(DataResilienceTier.DATA_RESILIENT)
                .withFailoverSpeed(FailoverTier.SUPER)
                .withLimitations(Arrays.asList("zsgfyccsnewmd", "z", "eiachboosflnr"))
                .withPerformance(PerformanceTier.BASIC)
                .withPriority(8236287813880835178L)
                .withTypeProperties(new StorageClassTypeProperties())))
            .withNextLink("oifiyipjxsqwpgr");
        model = BinaryData.fromObject(model).toObject(StorageClassResourceListResult.class);
        Assertions.assertEquals(VolumeExpansion.ALLOW, model.value().get(0).allowVolumeExpansion());
        Assertions.assertEquals("lougpbkw", model.value().get(0).mountOptions().get(0));
        Assertions.assertEquals("gcue", model.value().get(0).provisioner());
        Assertions.assertEquals(VolumeBindingMode.WAIT_FOR_FIRST_CONSUMER, model.value().get(0).volumeBindingMode());
        Assertions.assertEquals(AccessMode.READ_WRITE_MANY, model.value().get(0).accessModes().get(0));
        Assertions.assertEquals(DataResilienceTier.DATA_RESILIENT, model.value().get(0).dataResilience());
        Assertions.assertEquals(FailoverTier.SLOW, model.value().get(0).failoverSpeed());
        Assertions.assertEquals("mdgbbjfdd", model.value().get(0).limitations().get(0));
        Assertions.assertEquals(PerformanceTier.STANDARD, model.value().get(0).performance());
        Assertions.assertEquals(6485857331329667518L, model.value().get(0).priority());
        Assertions.assertEquals("oifiyipjxsqwpgr", model.nextLink());
    }
}
