// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.migration.assessment.MigrationAssessmentManager;
import com.azure.resourcemanager.migration.assessment.models.PrivateEndpointConnection;
import com.azure.resourcemanager.migration.assessment.models.PrivateEndpointServiceConnectionStatus;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PrivateEndpointConnectionOperationsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"groupIds\":[\"m\",\"yakmlwktf\"],\"privateEndpoint\":{\"id\":\"kroyrdurxflzqji\"},\"privateLinkServiceConnectionState\":{\"status\":\"Rejected\",\"description\":\"gzjxxlf\",\"actionsRequired\":\"lzuqloiwyayyzivr\"},\"provisioningState\":\"Creating\"},\"id\":\"dql\",\"name\":\"chwhrktj\",\"type\":\"eifibfiplhx\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MigrationAssessmentManager manager = MigrationAssessmentManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PrivateEndpointConnection response = manager.privateEndpointConnectionOperations()
            .getWithResponse("xjgvh", "ccbmkakm", "ookbpu", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.REJECTED,
            response.properties().privateLinkServiceConnectionState().status());
        Assertions.assertEquals("gzjxxlf", response.properties().privateLinkServiceConnectionState().description());
        Assertions.assertEquals("lzuqloiwyayyzivr",
            response.properties().privateLinkServiceConnectionState().actionsRequired());
    }
}
