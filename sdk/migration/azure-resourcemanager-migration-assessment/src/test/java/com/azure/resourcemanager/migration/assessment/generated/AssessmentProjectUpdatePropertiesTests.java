// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.migration.assessment.models.AssessmentProjectUpdateProperties;
import com.azure.resourcemanager.migration.assessment.models.ProjectStatus;
import com.azure.resourcemanager.migration.assessment.models.ProvisioningState;
import org.junit.jupiter.api.Assertions;

public final class AssessmentProjectUpdatePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AssessmentProjectUpdateProperties model = BinaryData.fromString(
            "{\"assessmentSolutionId\":\"hc\",\"projectStatus\":\"Active\",\"customerWorkspaceId\":\"hjtckwhd\",\"customerWorkspaceLocation\":\"ifiyipjxsqwpgrj\",\"publicNetworkAccess\":\"norcjxvsnbyxqab\",\"customerStorageAccountArmId\":\"ocpcy\",\"provisioningState\":\"Accepted\"}")
            .toObject(AssessmentProjectUpdateProperties.class);
        Assertions.assertEquals("hc", model.assessmentSolutionId());
        Assertions.assertEquals(ProjectStatus.ACTIVE, model.projectStatus());
        Assertions.assertEquals("hjtckwhd", model.customerWorkspaceId());
        Assertions.assertEquals("ifiyipjxsqwpgrj", model.customerWorkspaceLocation());
        Assertions.assertEquals("norcjxvsnbyxqab", model.publicNetworkAccess());
        Assertions.assertEquals("ocpcy", model.customerStorageAccountArmId());
        Assertions.assertEquals(ProvisioningState.ACCEPTED, model.provisioningState());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AssessmentProjectUpdateProperties model = new AssessmentProjectUpdateProperties().withAssessmentSolutionId("hc")
            .withProjectStatus(ProjectStatus.ACTIVE)
            .withCustomerWorkspaceId("hjtckwhd")
            .withCustomerWorkspaceLocation("ifiyipjxsqwpgrj")
            .withPublicNetworkAccess("norcjxvsnbyxqab")
            .withCustomerStorageAccountArmId("ocpcy")
            .withProvisioningState(ProvisioningState.ACCEPTED);
        model = BinaryData.fromObject(model).toObject(AssessmentProjectUpdateProperties.class);
        Assertions.assertEquals("hc", model.assessmentSolutionId());
        Assertions.assertEquals(ProjectStatus.ACTIVE, model.projectStatus());
        Assertions.assertEquals("hjtckwhd", model.customerWorkspaceId());
        Assertions.assertEquals("ifiyipjxsqwpgrj", model.customerWorkspaceLocation());
        Assertions.assertEquals("norcjxvsnbyxqab", model.publicNetworkAccess());
        Assertions.assertEquals("ocpcy", model.customerStorageAccountArmId());
        Assertions.assertEquals(ProvisioningState.ACCEPTED, model.provisioningState());
    }
}
