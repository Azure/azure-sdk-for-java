// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.migration.assessment.fluent.models.ServerCollectorInner;
import com.azure.resourcemanager.migration.assessment.models.CollectorAgentPropertiesBase;
import com.azure.resourcemanager.migration.assessment.models.CollectorAgentSpnPropertiesBase;
import com.azure.resourcemanager.migration.assessment.models.CollectorPropertiesBaseWithAgent;
import com.azure.resourcemanager.migration.assessment.models.ProvisioningState;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class ServerCollectorInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ServerCollectorInner model = BinaryData.fromString(
            "{\"properties\":{\"agentProperties\":{\"id\":\"ozfnkfexlvx\",\"version\":\"akizvoaikna\",\"lastHeartbeatUtc\":\"2021-04-06T13:12:15Z\",\"spnDetails\":{\"authority\":\"iguyxlykwphv\",\"applicationId\":\"cwxhmpej\",\"audience\":\"ke\",\"objectId\":\"onwivkcqhrxhxkn\",\"tenantId\":\"crmmkyupijuby\"}},\"discoverySiteId\":\"fkak\",\"createdTimestamp\":\"2021-11-11T13:29:18Z\",\"updatedTimestamp\":\"2021-07-21T09:43:27Z\",\"provisioningState\":\"Canceled\"},\"id\":\"il\",\"name\":\"udxjascowv\",\"type\":\"djkpdxph\"}")
            .toObject(ServerCollectorInner.class);
        Assertions.assertEquals(ProvisioningState.CANCELED, model.properties().provisioningState());
        Assertions.assertEquals("ozfnkfexlvx", model.properties().agentProperties().id());
        Assertions.assertEquals("akizvoaikna", model.properties().agentProperties().version());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-06T13:12:15Z"),
            model.properties().agentProperties().lastHeartbeatUtc());
        Assertions.assertEquals("iguyxlykwphv", model.properties().agentProperties().spnDetails().authority());
        Assertions.assertEquals("cwxhmpej", model.properties().agentProperties().spnDetails().applicationId());
        Assertions.assertEquals("ke", model.properties().agentProperties().spnDetails().audience());
        Assertions.assertEquals("onwivkcqhrxhxkn", model.properties().agentProperties().spnDetails().objectId());
        Assertions.assertEquals("crmmkyupijuby", model.properties().agentProperties().spnDetails().tenantId());
        Assertions.assertEquals("fkak", model.properties().discoverySiteId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ServerCollectorInner model = new ServerCollectorInner()
            .withProperties(new CollectorPropertiesBaseWithAgent().withProvisioningState(ProvisioningState.CANCELED)
                .withAgentProperties(new CollectorAgentPropertiesBase().withId("ozfnkfexlvx")
                    .withVersion("akizvoaikna")
                    .withLastHeartbeatUtc(OffsetDateTime.parse("2021-04-06T13:12:15Z"))
                    .withSpnDetails(new CollectorAgentSpnPropertiesBase().withAuthority("iguyxlykwphv")
                        .withApplicationId("cwxhmpej")
                        .withAudience("ke")
                        .withObjectId("onwivkcqhrxhxkn")
                        .withTenantId("crmmkyupijuby")))
                .withDiscoverySiteId("fkak"));
        model = BinaryData.fromObject(model).toObject(ServerCollectorInner.class);
        Assertions.assertEquals(ProvisioningState.CANCELED, model.properties().provisioningState());
        Assertions.assertEquals("ozfnkfexlvx", model.properties().agentProperties().id());
        Assertions.assertEquals("akizvoaikna", model.properties().agentProperties().version());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-06T13:12:15Z"),
            model.properties().agentProperties().lastHeartbeatUtc());
        Assertions.assertEquals("iguyxlykwphv", model.properties().agentProperties().spnDetails().authority());
        Assertions.assertEquals("cwxhmpej", model.properties().agentProperties().spnDetails().applicationId());
        Assertions.assertEquals("ke", model.properties().agentProperties().spnDetails().audience());
        Assertions.assertEquals("onwivkcqhrxhxkn", model.properties().agentProperties().spnDetails().objectId());
        Assertions.assertEquals("crmmkyupijuby", model.properties().agentProperties().spnDetails().tenantId());
        Assertions.assertEquals("fkak", model.properties().discoverySiteId());
    }
}
