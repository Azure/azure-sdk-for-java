// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.migration.assessment.fluent.models.HypervCollectorInner;
import com.azure.resourcemanager.migration.assessment.models.CollectorAgentPropertiesBase;
import com.azure.resourcemanager.migration.assessment.models.CollectorAgentSpnPropertiesBase;
import com.azure.resourcemanager.migration.assessment.models.CollectorPropertiesBaseWithAgent;
import com.azure.resourcemanager.migration.assessment.models.ProvisioningState;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class HypervCollectorInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HypervCollectorInner model = BinaryData.fromString(
            "{\"properties\":{\"agentProperties\":{\"id\":\"qwodiffjx\",\"version\":\"rmmuabwibvjo\",\"lastHeartbeatUtc\":\"2021-01-05T12:54:17Z\",\"spnDetails\":{\"authority\":\"cyefoyzbamwine\",\"applicationId\":\"vfkakpold\",\"audience\":\"evboclzhzjknyuxg\",\"objectId\":\"txpnrupza\",\"tenantId\":\"rdixt\"}},\"discoverySiteId\":\"kidswys\",\"createdTimestamp\":\"2021-08-12T20:46:57Z\",\"updatedTimestamp\":\"2021-04-18T19:34:30Z\",\"provisioningState\":\"Accepted\"},\"id\":\"lukkutvlxhrpqhvm\",\"name\":\"lcouqehbhbcdszir\",\"type\":\"randoypmb\"}")
            .toObject(HypervCollectorInner.class);
        Assertions.assertEquals(ProvisioningState.ACCEPTED, model.properties().provisioningState());
        Assertions.assertEquals("qwodiffjx", model.properties().agentProperties().id());
        Assertions.assertEquals("rmmuabwibvjo", model.properties().agentProperties().version());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-05T12:54:17Z"),
            model.properties().agentProperties().lastHeartbeatUtc());
        Assertions.assertEquals("cyefoyzbamwine", model.properties().agentProperties().spnDetails().authority());
        Assertions.assertEquals("vfkakpold", model.properties().agentProperties().spnDetails().applicationId());
        Assertions.assertEquals("evboclzhzjknyuxg", model.properties().agentProperties().spnDetails().audience());
        Assertions.assertEquals("txpnrupza", model.properties().agentProperties().spnDetails().objectId());
        Assertions.assertEquals("rdixt", model.properties().agentProperties().spnDetails().tenantId());
        Assertions.assertEquals("kidswys", model.properties().discoverySiteId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HypervCollectorInner model = new HypervCollectorInner()
            .withProperties(new CollectorPropertiesBaseWithAgent().withProvisioningState(ProvisioningState.ACCEPTED)
                .withAgentProperties(new CollectorAgentPropertiesBase().withId("qwodiffjx")
                    .withVersion("rmmuabwibvjo")
                    .withLastHeartbeatUtc(OffsetDateTime.parse("2021-01-05T12:54:17Z"))
                    .withSpnDetails(new CollectorAgentSpnPropertiesBase().withAuthority("cyefoyzbamwine")
                        .withApplicationId("vfkakpold")
                        .withAudience("evboclzhzjknyuxg")
                        .withObjectId("txpnrupza")
                        .withTenantId("rdixt")))
                .withDiscoverySiteId("kidswys"));
        model = BinaryData.fromObject(model).toObject(HypervCollectorInner.class);
        Assertions.assertEquals(ProvisioningState.ACCEPTED, model.properties().provisioningState());
        Assertions.assertEquals("qwodiffjx", model.properties().agentProperties().id());
        Assertions.assertEquals("rmmuabwibvjo", model.properties().agentProperties().version());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-05T12:54:17Z"),
            model.properties().agentProperties().lastHeartbeatUtc());
        Assertions.assertEquals("cyefoyzbamwine", model.properties().agentProperties().spnDetails().authority());
        Assertions.assertEquals("vfkakpold", model.properties().agentProperties().spnDetails().applicationId());
        Assertions.assertEquals("evboclzhzjknyuxg", model.properties().agentProperties().spnDetails().audience());
        Assertions.assertEquals("txpnrupza", model.properties().agentProperties().spnDetails().objectId());
        Assertions.assertEquals("rdixt", model.properties().agentProperties().spnDetails().tenantId());
        Assertions.assertEquals("kidswys", model.properties().discoverySiteId());
    }
}
