// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.migration.assessment.models.CollectorAgentPropertiesBase;
import com.azure.resourcemanager.migration.assessment.models.CollectorAgentSpnPropertiesBase;
import com.azure.resourcemanager.migration.assessment.models.CollectorPropertiesBaseWithAgent;
import com.azure.resourcemanager.migration.assessment.models.ProvisioningState;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class CollectorPropertiesBaseWithAgentTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CollectorPropertiesBaseWithAgent model = BinaryData.fromString(
            "{\"agentProperties\":{\"id\":\"ormkfqlwxldyk\",\"version\":\"sy\",\"lastHeartbeatUtc\":\"2021-08-24T12:28:36Z\",\"spnDetails\":{\"authority\":\"jpnnbmjksibjgsj\",\"applicationId\":\"xahmrnadzyqegxy\",\"audience\":\"pinbmhwbjijkgqxn\",\"objectId\":\"bkezn\",\"tenantId\":\"ujvaannggi\"}},\"discoverySiteId\":\"wkdtaawxwf\",\"createdTimestamp\":\"2021-05-27T21:19:02Z\",\"updatedTimestamp\":\"2021-08-31T11:37:22Z\",\"provisioningState\":\"Succeeded\"}")
            .toObject(CollectorPropertiesBaseWithAgent.class);
        Assertions.assertEquals(ProvisioningState.SUCCEEDED, model.provisioningState());
        Assertions.assertEquals("ormkfqlwxldyk", model.agentProperties().id());
        Assertions.assertEquals("sy", model.agentProperties().version());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-24T12:28:36Z"),
            model.agentProperties().lastHeartbeatUtc());
        Assertions.assertEquals("jpnnbmjksibjgsj", model.agentProperties().spnDetails().authority());
        Assertions.assertEquals("xahmrnadzyqegxy", model.agentProperties().spnDetails().applicationId());
        Assertions.assertEquals("pinbmhwbjijkgqxn", model.agentProperties().spnDetails().audience());
        Assertions.assertEquals("bkezn", model.agentProperties().spnDetails().objectId());
        Assertions.assertEquals("ujvaannggi", model.agentProperties().spnDetails().tenantId());
        Assertions.assertEquals("wkdtaawxwf", model.discoverySiteId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CollectorPropertiesBaseWithAgent model
            = new CollectorPropertiesBaseWithAgent().withProvisioningState(ProvisioningState.SUCCEEDED)
                .withAgentProperties(new CollectorAgentPropertiesBase().withId("ormkfqlwxldyk")
                    .withVersion("sy")
                    .withLastHeartbeatUtc(OffsetDateTime.parse("2021-08-24T12:28:36Z"))
                    .withSpnDetails(new CollectorAgentSpnPropertiesBase().withAuthority("jpnnbmjksibjgsj")
                        .withApplicationId("xahmrnadzyqegxy")
                        .withAudience("pinbmhwbjijkgqxn")
                        .withObjectId("bkezn")
                        .withTenantId("ujvaannggi")))
                .withDiscoverySiteId("wkdtaawxwf");
        model = BinaryData.fromObject(model).toObject(CollectorPropertiesBaseWithAgent.class);
        Assertions.assertEquals(ProvisioningState.SUCCEEDED, model.provisioningState());
        Assertions.assertEquals("ormkfqlwxldyk", model.agentProperties().id());
        Assertions.assertEquals("sy", model.agentProperties().version());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-24T12:28:36Z"),
            model.agentProperties().lastHeartbeatUtc());
        Assertions.assertEquals("jpnnbmjksibjgsj", model.agentProperties().spnDetails().authority());
        Assertions.assertEquals("xahmrnadzyqegxy", model.agentProperties().spnDetails().applicationId());
        Assertions.assertEquals("pinbmhwbjijkgqxn", model.agentProperties().spnDetails().audience());
        Assertions.assertEquals("bkezn", model.agentProperties().spnDetails().objectId());
        Assertions.assertEquals("ujvaannggi", model.agentProperties().spnDetails().tenantId());
        Assertions.assertEquals("wkdtaawxwf", model.discoverySiteId());
    }
}
