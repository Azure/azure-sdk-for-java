// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.migration.assessment.fluent.models.SqlCollectorInner;
import com.azure.resourcemanager.migration.assessment.models.CollectorAgentPropertiesBase;
import com.azure.resourcemanager.migration.assessment.models.CollectorAgentSpnPropertiesBase;
import com.azure.resourcemanager.migration.assessment.models.CollectorPropertiesBaseWithAgent;
import com.azure.resourcemanager.migration.assessment.models.ProvisioningState;
import com.azure.resourcemanager.migration.assessment.models.SqlCollectorListResult;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SqlCollectorListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SqlCollectorListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"agentProperties\":{\"id\":\"zlfytoit\",\"version\":\"ygvfltgvdihoyn\",\"lastHeartbeatUtc\":\"2021-07-12T20:14:31Z\",\"spnDetails\":{\"authority\":\"twk\",\"applicationId\":\"cy\",\"audience\":\"cpcunnuzdqum\",\"objectId\":\"nod\",\"tenantId\":\"ienhqhskndnelq\"}},\"discoverySiteId\":\"adlknwfoanni\",\"createdTimestamp\":\"2021-11-08T07:08:24Z\",\"updatedTimestamp\":\"2020-12-23T05:37:02Z\",\"provisioningState\":\"Provisioning\"},\"id\":\"cnrly\",\"name\":\"nucaephblkwqpat\",\"type\":\"bqsdtcjbctvi\"},{\"properties\":{\"agentProperties\":{\"id\":\"y\",\"version\":\"uo\",\"lastHeartbeatUtc\":\"2021-06-01T02:15:38Z\",\"spnDetails\":{\"authority\":\"it\",\"applicationId\":\"hzvb\",\"audience\":\"cdb\",\"objectId\":\"fzndscxmxeatkd\",\"tenantId\":\"wnrdjyibqbnaom\"}},\"discoverySiteId\":\"rmkuh\",\"createdTimestamp\":\"2021-02-02T00:53:22Z\",\"updatedTimestamp\":\"2021-01-24T19:55:15Z\",\"provisioningState\":\"Failed\"},\"id\":\"i\",\"name\":\"cjmobcanc\",\"type\":\"exxqcwg\"},{\"properties\":{\"agentProperties\":{\"id\":\"vaknokzwjj\",\"version\":\"ltixldzyyfytpq\",\"lastHeartbeatUtc\":\"2021-04-28T14:44Z\",\"spnDetails\":{\"authority\":\"m\",\"applicationId\":\"jivyqlkjuv\",\"audience\":\"bmslzoyov\",\"objectId\":\"dbpqvybefgvm\",\"tenantId\":\"okcvtlubses\"}},\"discoverySiteId\":\"cua\",\"createdTimestamp\":\"2021-11-09T04:41:13Z\",\"updatedTimestamp\":\"2021-06-28T06:17:55Z\",\"provisioningState\":\"Succeeded\"},\"id\":\"iryky\",\"name\":\"ndzfqivjreuyk\",\"type\":\"bmnwa\"}],\"nextLink\":\"tbxoee\"}")
            .toObject(SqlCollectorListResult.class);
        Assertions.assertEquals(ProvisioningState.PROVISIONING, model.value().get(0).properties().provisioningState());
        Assertions.assertEquals("zlfytoit", model.value().get(0).properties().agentProperties().id());
        Assertions.assertEquals("ygvfltgvdihoyn", model.value().get(0).properties().agentProperties().version());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-12T20:14:31Z"),
            model.value().get(0).properties().agentProperties().lastHeartbeatUtc());
        Assertions.assertEquals("twk", model.value().get(0).properties().agentProperties().spnDetails().authority());
        Assertions.assertEquals("cy", model.value().get(0).properties().agentProperties().spnDetails().applicationId());
        Assertions.assertEquals("cpcunnuzdqum",
            model.value().get(0).properties().agentProperties().spnDetails().audience());
        Assertions.assertEquals("nod", model.value().get(0).properties().agentProperties().spnDetails().objectId());
        Assertions.assertEquals("ienhqhskndnelq",
            model.value().get(0).properties().agentProperties().spnDetails().tenantId());
        Assertions.assertEquals("adlknwfoanni", model.value().get(0).properties().discoverySiteId());
        Assertions.assertEquals("tbxoee", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SqlCollectorListResult model = new SqlCollectorListResult().withValue(Arrays.asList(
            new SqlCollectorInner().withProperties(
                new CollectorPropertiesBaseWithAgent().withProvisioningState(ProvisioningState.PROVISIONING)
                    .withAgentProperties(new CollectorAgentPropertiesBase().withId("zlfytoit")
                        .withVersion("ygvfltgvdihoyn")
                        .withLastHeartbeatUtc(OffsetDateTime.parse("2021-07-12T20:14:31Z"))
                        .withSpnDetails(new CollectorAgentSpnPropertiesBase().withAuthority("twk")
                            .withApplicationId("cy")
                            .withAudience("cpcunnuzdqum")
                            .withObjectId("nod")
                            .withTenantId("ienhqhskndnelq")))
                    .withDiscoverySiteId("adlknwfoanni")),
            new SqlCollectorInner()
                .withProperties(new CollectorPropertiesBaseWithAgent().withProvisioningState(ProvisioningState.FAILED)
                    .withAgentProperties(new CollectorAgentPropertiesBase().withId("y")
                        .withVersion("uo")
                        .withLastHeartbeatUtc(OffsetDateTime.parse("2021-06-01T02:15:38Z"))
                        .withSpnDetails(new CollectorAgentSpnPropertiesBase().withAuthority("it")
                            .withApplicationId("hzvb")
                            .withAudience("cdb")
                            .withObjectId("fzndscxmxeatkd")
                            .withTenantId("wnrdjyibqbnaom")))
                    .withDiscoverySiteId("rmkuh")),
            new SqlCollectorInner().withProperties(
                new CollectorPropertiesBaseWithAgent().withProvisioningState(ProvisioningState.SUCCEEDED)
                    .withAgentProperties(new CollectorAgentPropertiesBase().withId("vaknokzwjj")
                        .withVersion("ltixldzyyfytpq")
                        .withLastHeartbeatUtc(OffsetDateTime.parse("2021-04-28T14:44Z"))
                        .withSpnDetails(new CollectorAgentSpnPropertiesBase().withAuthority("m")
                            .withApplicationId("jivyqlkjuv")
                            .withAudience("bmslzoyov")
                            .withObjectId("dbpqvybefgvm")
                            .withTenantId("okcvtlubses")))
                    .withDiscoverySiteId("cua"))))
            .withNextLink("tbxoee");
        model = BinaryData.fromObject(model).toObject(SqlCollectorListResult.class);
        Assertions.assertEquals(ProvisioningState.PROVISIONING, model.value().get(0).properties().provisioningState());
        Assertions.assertEquals("zlfytoit", model.value().get(0).properties().agentProperties().id());
        Assertions.assertEquals("ygvfltgvdihoyn", model.value().get(0).properties().agentProperties().version());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-12T20:14:31Z"),
            model.value().get(0).properties().agentProperties().lastHeartbeatUtc());
        Assertions.assertEquals("twk", model.value().get(0).properties().agentProperties().spnDetails().authority());
        Assertions.assertEquals("cy", model.value().get(0).properties().agentProperties().spnDetails().applicationId());
        Assertions.assertEquals("cpcunnuzdqum",
            model.value().get(0).properties().agentProperties().spnDetails().audience());
        Assertions.assertEquals("nod", model.value().get(0).properties().agentProperties().spnDetails().objectId());
        Assertions.assertEquals("ienhqhskndnelq",
            model.value().get(0).properties().agentProperties().spnDetails().tenantId());
        Assertions.assertEquals("adlknwfoanni", model.value().get(0).properties().discoverySiteId());
        Assertions.assertEquals("tbxoee", model.nextLink());
    }
}
