// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.migration.assessment.fluent.models.ImportCollectorInner;
import com.azure.resourcemanager.migration.assessment.models.CollectorPropertiesBase;
import com.azure.resourcemanager.migration.assessment.models.ImportCollectorListResult;
import com.azure.resourcemanager.migration.assessment.models.ProvisioningState;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ImportCollectorListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ImportCollectorListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"discoverySiteId\":\"qinfszpyglqd\",\"createdTimestamp\":\"2021-05-07T12:56:20Z\",\"updatedTimestamp\":\"2021-02-04T21:16:01Z\",\"provisioningState\":\"Canceled\"},\"id\":\"cxpjbyypsj\",\"name\":\"qcjenkyhf\",\"type\":\"zv\"}],\"nextLink\":\"xfxjelgcmpzqj\"}")
            .toObject(ImportCollectorListResult.class);
        Assertions.assertEquals(ProvisioningState.CANCELED, model.value().get(0).properties().provisioningState());
        Assertions.assertEquals("qinfszpyglqd", model.value().get(0).properties().discoverySiteId());
        Assertions.assertEquals("xfxjelgcmpzqj", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ImportCollectorListResult model
            = new ImportCollectorListResult().withValue(Arrays.asList(new ImportCollectorInner()
                .withProperties(new CollectorPropertiesBase().withProvisioningState(ProvisioningState.CANCELED)
                    .withDiscoverySiteId("qinfszpyglqd"))))
                .withNextLink("xfxjelgcmpzqj");
        model = BinaryData.fromObject(model).toObject(ImportCollectorListResult.class);
        Assertions.assertEquals(ProvisioningState.CANCELED, model.value().get(0).properties().provisioningState());
        Assertions.assertEquals("qinfszpyglqd", model.value().get(0).properties().discoverySiteId());
        Assertions.assertEquals("xfxjelgcmpzqj", model.nextLink());
    }
}
