// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.migration.assessment.fluent.models.SqlAssessmentOptionsInner;
import com.azure.resourcemanager.migration.assessment.models.AzureCurrency;
import com.azure.resourcemanager.migration.assessment.models.AzureLocation;
import com.azure.resourcemanager.migration.assessment.models.AzureOfferCode;
import com.azure.resourcemanager.migration.assessment.models.AzureSqlServiceTier;
import com.azure.resourcemanager.migration.assessment.models.AzureVmFamily;
import com.azure.resourcemanager.migration.assessment.models.ComputeTier;
import com.azure.resourcemanager.migration.assessment.models.HardwareGeneration;
import com.azure.resourcemanager.migration.assessment.models.SqlAssessmentOptionsProperties;
import com.azure.resourcemanager.migration.assessment.models.SqlPaaSTargetOptions;
import com.azure.resourcemanager.migration.assessment.models.TargetType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SqlAssessmentOptionsInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SqlAssessmentOptionsInner model = BinaryData.fromString(
            "{\"properties\":{\"vmFamilies\":[{\"familyName\":\"nuhzafccnuh\",\"targetLocations\":[\"byl\",\"ui\"],\"category\":[\"vatvcrkd\",\"b\"]},{\"familyName\":\"qxvhcsyhzlwxa\",\"targetLocations\":[\"vurex\"],\"category\":[\"sbdweaderzmwnt\"]},{\"familyName\":\"agttm\",\"targetLocations\":[\"agoaqylkjztji\",\"azjcgmxitpfin\",\"cpdltkrlg\"],\"category\":[\"bd\",\"vcqguefzh\",\"mpheqdur\"]},{\"familyName\":\"yujlfyoumpckyecl\",\"targetLocations\":[\"gptaj\",\"rzmq\",\"ucycijo\",\"lxiutgjcyzyzjdnr\"],\"category\":[\"txjeaoqaqbzgy\",\"fwwvuatbwbqam\",\"e\",\"liys\"]}],\"reservedInstanceVmFamilies\":[\"Msv2_series\",\"Dsv4_series\",\"Edsv5_series\",\"GS_series\"],\"premiumDiskVmFamilies\":[\"Edsv4_series\",\"Edv5_series\",\"Eadsv5_series\"],\"savingsPlanVmFamilies\":[\"Dsv3_series\",\"GS_series\",\"Esv4_series\"],\"savingsPlanSupportedLocations\":[\"AustraliaSoutheast\",\"USDoDCentral\"],\"savingsPlanSupportedLocationsForPaas\":[\"SouthAfricaWest\",\"GermanyNortheast\",\"UsSecCentral\"],\"reservedInstanceSupportedLocationsForIaas\":[\"WestEurope\",\"GermanyNorth\",\"USGovVirginia\",\"USGovIowa\"],\"savingsPlanSupportedOffers\":[\"MSAZRUSGOV0003P\",\"MSAZR0036P\",\"MSAZR0121P\",\"MSAZR0063P\"],\"sqlSkus\":[{\"computeTier\":\"Serverless\",\"hardwareGeneration\":\"Unknown\",\"targetType\":\"AzureSqlVirtualMachine\",\"serviceTier\":\"GeneralPurpose\",\"targetLocations\":[\"SwitzerlandWest\"]},{\"computeTier\":\"Provisioned\",\"hardwareGeneration\":\"Gen5\",\"targetType\":\"AzureSqlDatabase\",\"serviceTier\":\"Unknown\",\"targetLocations\":[\"SwitzerlandNorth\",\"WestCentralUs\",\"JapanEast\",\"JapanWest\"]},{\"computeTier\":\"Automatic\",\"hardwareGeneration\":\"Unknown\",\"targetType\":\"AzureSqlVirtualMachine\",\"serviceTier\":\"BusinessCritical\",\"targetLocations\":[\"USGovArizona\"]}],\"reservedInstanceSqlTargets\":[\"AzureSqlVirtualMachine\",\"Unknown\",\"AzureSqlManagedInstance\",\"Recommended\"],\"reservedInstanceSupportedLocations\":[\"WestUs\",\"SoutheastAsia\",\"CanadaCentral\",\"AustraliaCentral2\"],\"reservedInstanceSupportedCurrencies\":[\"USD\",\"DKK\",\"JPY\"],\"reservedInstanceSupportedOffers\":[\"Unknown\",\"SavingsPlan3Year\",\"MSMCAZR0063P\",\"MSMCAZR0060P\"],\"supportedOffers\":[\"MSAZR0243P\",\"MSAZR0127P\"]},\"id\":\"imwrzregzgyufu\",\"name\":\"rw\",\"type\":\"weryekzk\"}")
            .toObject(SqlAssessmentOptionsInner.class);
        Assertions.assertEquals(AzureVmFamily.DSV3_SERIES, model.properties().savingsPlanVmFamilies().get(0));
        Assertions.assertEquals(AzureLocation.AUSTRALIA_SOUTHEAST,
            model.properties().savingsPlanSupportedLocations().get(0));
        Assertions.assertEquals(AzureLocation.SOUTH_AFRICA_WEST,
            model.properties().savingsPlanSupportedLocationsForPaas().get(0));
        Assertions.assertEquals(AzureLocation.WEST_EUROPE,
            model.properties().reservedInstanceSupportedLocationsForIaas().get(0));
        Assertions.assertEquals(AzureOfferCode.MSAZRUSGOV0003P, model.properties().savingsPlanSupportedOffers().get(0));
        Assertions.assertEquals(ComputeTier.SERVERLESS, model.properties().sqlSkus().get(0).computeTier());
        Assertions.assertEquals(HardwareGeneration.UNKNOWN, model.properties().sqlSkus().get(0).hardwareGeneration());
        Assertions.assertEquals(TargetType.AZURE_SQL_VIRTUAL_MACHINE, model.properties().sqlSkus().get(0).targetType());
        Assertions.assertEquals(AzureSqlServiceTier.GENERAL_PURPOSE, model.properties().sqlSkus().get(0).serviceTier());
        Assertions.assertEquals(AzureLocation.SWITZERLAND_WEST,
            model.properties().sqlSkus().get(0).targetLocations().get(0));
        Assertions.assertEquals(TargetType.AZURE_SQL_VIRTUAL_MACHINE,
            model.properties().reservedInstanceSqlTargets().get(0));
        Assertions.assertEquals(AzureLocation.WEST_US, model.properties().reservedInstanceSupportedLocations().get(0));
        Assertions.assertEquals(AzureCurrency.USD, model.properties().reservedInstanceSupportedCurrencies().get(0));
        Assertions.assertEquals(AzureOfferCode.UNKNOWN, model.properties().reservedInstanceSupportedOffers().get(0));
        Assertions.assertEquals(AzureOfferCode.MSAZR0243P, model.properties().supportedOffers().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SqlAssessmentOptionsInner model
            = new SqlAssessmentOptionsInner().withProperties(new SqlAssessmentOptionsProperties()
                .withSavingsPlanVmFamilies(
                    Arrays.asList(AzureVmFamily.DSV3_SERIES, AzureVmFamily.GS_SERIES, AzureVmFamily.ESV4_SERIES))
                .withSavingsPlanSupportedLocations(
                    Arrays.asList(AzureLocation.AUSTRALIA_SOUTHEAST, AzureLocation.USDO_DCENTRAL))
                .withSavingsPlanSupportedLocationsForPaas(Arrays.asList(AzureLocation.SOUTH_AFRICA_WEST,
                    AzureLocation.GERMANY_NORTHEAST, AzureLocation.US_SEC_CENTRAL))
                .withReservedInstanceSupportedLocationsForIaas(Arrays.asList(AzureLocation.WEST_EUROPE,
                    AzureLocation.GERMANY_NORTH, AzureLocation.USGOV_VIRGINIA, AzureLocation.USGOV_IOWA))
                .withSavingsPlanSupportedOffers(Arrays.asList(AzureOfferCode.MSAZRUSGOV0003P, AzureOfferCode.MSAZR0036P,
                    AzureOfferCode.MSAZR0121P, AzureOfferCode.MSAZR0063P))
                .withSqlSkus(Arrays.asList(
                    new SqlPaaSTargetOptions().withComputeTier(ComputeTier.SERVERLESS)
                        .withHardwareGeneration(HardwareGeneration.UNKNOWN)
                        .withTargetType(TargetType.AZURE_SQL_VIRTUAL_MACHINE)
                        .withServiceTier(AzureSqlServiceTier.GENERAL_PURPOSE)
                        .withTargetLocations(Arrays.asList(AzureLocation.SWITZERLAND_WEST)),
                    new SqlPaaSTargetOptions().withComputeTier(ComputeTier.PROVISIONED)
                        .withHardwareGeneration(HardwareGeneration.GEN5)
                        .withTargetType(TargetType.AZURE_SQL_DATABASE)
                        .withServiceTier(AzureSqlServiceTier.UNKNOWN)
                        .withTargetLocations(Arrays.asList(AzureLocation.SWITZERLAND_NORTH,
                            AzureLocation.WEST_CENTRAL_US, AzureLocation.JAPAN_EAST, AzureLocation.JAPAN_WEST)),
                    new SqlPaaSTargetOptions().withComputeTier(ComputeTier.AUTOMATIC)
                        .withHardwareGeneration(HardwareGeneration.UNKNOWN)
                        .withTargetType(TargetType.AZURE_SQL_VIRTUAL_MACHINE)
                        .withServiceTier(AzureSqlServiceTier.BUSINESS_CRITICAL)
                        .withTargetLocations(Arrays.asList(AzureLocation.USGOV_ARIZONA))))
                .withReservedInstanceSqlTargets(Arrays.asList(TargetType.AZURE_SQL_VIRTUAL_MACHINE, TargetType.UNKNOWN,
                    TargetType.AZURE_SQL_MANAGED_INSTANCE, TargetType.RECOMMENDED))
                .withReservedInstanceSupportedLocations(Arrays.asList(AzureLocation.WEST_US,
                    AzureLocation.SOUTHEAST_ASIA, AzureLocation.CANADA_CENTRAL, AzureLocation.AUSTRALIA_CENTRAL2))
                .withReservedInstanceSupportedCurrencies(
                    Arrays.asList(AzureCurrency.USD, AzureCurrency.DKK, AzureCurrency.JPY))
                .withReservedInstanceSupportedOffers(Arrays.asList(AzureOfferCode.UNKNOWN,
                    AzureOfferCode.SAVINGS_PLAN3YEAR, AzureOfferCode.MSMCAZR0063P, AzureOfferCode.MSMCAZR0060P))
                .withSupportedOffers(Arrays.asList(AzureOfferCode.MSAZR0243P, AzureOfferCode.MSAZR0127P)));
        model = BinaryData.fromObject(model).toObject(SqlAssessmentOptionsInner.class);
        Assertions.assertEquals(AzureVmFamily.DSV3_SERIES, model.properties().savingsPlanVmFamilies().get(0));
        Assertions.assertEquals(AzureLocation.AUSTRALIA_SOUTHEAST,
            model.properties().savingsPlanSupportedLocations().get(0));
        Assertions.assertEquals(AzureLocation.SOUTH_AFRICA_WEST,
            model.properties().savingsPlanSupportedLocationsForPaas().get(0));
        Assertions.assertEquals(AzureLocation.WEST_EUROPE,
            model.properties().reservedInstanceSupportedLocationsForIaas().get(0));
        Assertions.assertEquals(AzureOfferCode.MSAZRUSGOV0003P, model.properties().savingsPlanSupportedOffers().get(0));
        Assertions.assertEquals(ComputeTier.SERVERLESS, model.properties().sqlSkus().get(0).computeTier());
        Assertions.assertEquals(HardwareGeneration.UNKNOWN, model.properties().sqlSkus().get(0).hardwareGeneration());
        Assertions.assertEquals(TargetType.AZURE_SQL_VIRTUAL_MACHINE, model.properties().sqlSkus().get(0).targetType());
        Assertions.assertEquals(AzureSqlServiceTier.GENERAL_PURPOSE, model.properties().sqlSkus().get(0).serviceTier());
        Assertions.assertEquals(AzureLocation.SWITZERLAND_WEST,
            model.properties().sqlSkus().get(0).targetLocations().get(0));
        Assertions.assertEquals(TargetType.AZURE_SQL_VIRTUAL_MACHINE,
            model.properties().reservedInstanceSqlTargets().get(0));
        Assertions.assertEquals(AzureLocation.WEST_US, model.properties().reservedInstanceSupportedLocations().get(0));
        Assertions.assertEquals(AzureCurrency.USD, model.properties().reservedInstanceSupportedCurrencies().get(0));
        Assertions.assertEquals(AzureOfferCode.UNKNOWN, model.properties().reservedInstanceSupportedOffers().get(0));
        Assertions.assertEquals(AzureOfferCode.MSAZR0243P, model.properties().supportedOffers().get(0));
    }
}
