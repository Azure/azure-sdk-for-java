// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.migration.assessment.MigrationAssessmentManager;
import com.azure.resourcemanager.migration.assessment.models.AzureCurrency;
import com.azure.resourcemanager.migration.assessment.models.AzureLocation;
import com.azure.resourcemanager.migration.assessment.models.AzureOfferCode;
import com.azure.resourcemanager.migration.assessment.models.AzureSqlServiceTier;
import com.azure.resourcemanager.migration.assessment.models.AzureVmFamily;
import com.azure.resourcemanager.migration.assessment.models.ComputeTier;
import com.azure.resourcemanager.migration.assessment.models.HardwareGeneration;
import com.azure.resourcemanager.migration.assessment.models.SqlAssessmentOptions;
import com.azure.resourcemanager.migration.assessment.models.TargetType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SqlAssessmentOptionsOperationsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"vmFamilies\":[{\"familyName\":\"fooy\",\"targetLocations\":[\"xdtzcqipsdudgco\",\"zomehxlantolam\"],\"category\":[\"juxkqll\"]},{\"familyName\":\"i\",\"targetLocations\":[\"dtgckzdqiqdlra\",\"rkwxo\",\"uwxsuykznhrfgsl\",\"lhpryjfzihuio\"],\"category\":[\"cpajtfe\",\"vkbdgddkrhdccxbe\"]}],\"reservedInstanceVmFamilies\":[\"Dasv5_series\",\"M_series\",\"Esv3_series\",\"Fs_series\"],\"premiumDiskVmFamilies\":[\"Esv5_series\",\"F_series\"],\"savingsPlanVmFamilies\":[\"Dasv4_series\",\"M_series\"],\"savingsPlanSupportedLocations\":[\"SouthIndia\",\"AustraliaCentral\",\"WestUs\",\"UsNatWest\"],\"savingsPlanSupportedLocationsForPaas\":[\"ChinaEast2\",\"UAECentral\",\"AustraliaEast\"],\"reservedInstanceSupportedLocationsForIaas\":[\"SwitzerlandWest\",\"UsSecWest\",\"KoreaCentral\"],\"savingsPlanSupportedOffers\":[\"MSMCAZR0060P\",\"MSAZR0060P\",\"MSAZR0025P\"],\"sqlSkus\":[{\"computeTier\":\"Serverless\",\"hardwareGeneration\":\"Unknown\",\"targetType\":\"AzureSqlVirtualMachine\",\"serviceTier\":\"Unknown\",\"targetLocations\":[\"QatarCentral\",\"AustraliaCentral2\",\"UkWest\",\"FranceSouth\"]},{\"computeTier\":\"Unknown\",\"hardwareGeneration\":\"Fsv2_series\",\"targetType\":\"Recommended\",\"serviceTier\":\"GeneralPurpose\",\"targetLocations\":[\"WestCentralUs\",\"USGovVirginia\",\"CentralIndia\"]}],\"reservedInstanceSqlTargets\":[\"AzureSqlDatabase\"],\"reservedInstanceSupportedLocations\":[\"KoreaSouth\",\"JapanEast\",\"USGovArizona\"],\"reservedInstanceSupportedCurrencies\":[\"BRL\",\"KRW\"],\"reservedInstanceSupportedOffers\":[\"MSMCAZR0060P\",\"MSAZR0111P\",\"MSAZRUSGOV0003P\",\"MSAZR0243P\"],\"supportedOffers\":[\"MSAZR0243P\"]},\"id\":\"rptvcshtkutzcttb\",\"name\":\"gdirda\",\"type\":\"m\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MigrationAssessmentManager manager = MigrationAssessmentManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        SqlAssessmentOptions response = manager.sqlAssessmentOptionsOperations()
            .getWithResponse("eiwtczkdd", "vovbooqbmdqrx", "glaetscflwtjd", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(AzureVmFamily.DASV4_SERIES, response.properties().savingsPlanVmFamilies().get(0));
        Assertions.assertEquals(AzureLocation.SOUTH_INDIA,
            response.properties().savingsPlanSupportedLocations().get(0));
        Assertions.assertEquals(AzureLocation.CHINA_EAST2,
            response.properties().savingsPlanSupportedLocationsForPaas().get(0));
        Assertions.assertEquals(AzureLocation.SWITZERLAND_WEST,
            response.properties().reservedInstanceSupportedLocationsForIaas().get(0));
        Assertions.assertEquals(AzureOfferCode.MSMCAZR0060P, response.properties().savingsPlanSupportedOffers().get(0));
        Assertions.assertEquals(ComputeTier.SERVERLESS, response.properties().sqlSkus().get(0).computeTier());
        Assertions.assertEquals(HardwareGeneration.UNKNOWN,
            response.properties().sqlSkus().get(0).hardwareGeneration());
        Assertions.assertEquals(TargetType.AZURE_SQL_VIRTUAL_MACHINE,
            response.properties().sqlSkus().get(0).targetType());
        Assertions.assertEquals(AzureSqlServiceTier.UNKNOWN, response.properties().sqlSkus().get(0).serviceTier());
        Assertions.assertEquals(AzureLocation.QATAR_CENTRAL,
            response.properties().sqlSkus().get(0).targetLocations().get(0));
        Assertions.assertEquals(TargetType.AZURE_SQL_DATABASE,
            response.properties().reservedInstanceSqlTargets().get(0));
        Assertions.assertEquals(AzureLocation.KOREA_SOUTH,
            response.properties().reservedInstanceSupportedLocations().get(0));
        Assertions.assertEquals(AzureCurrency.BRL, response.properties().reservedInstanceSupportedCurrencies().get(0));
        Assertions.assertEquals(AzureOfferCode.MSMCAZR0060P,
            response.properties().reservedInstanceSupportedOffers().get(0));
        Assertions.assertEquals(AzureOfferCode.MSAZR0243P, response.properties().supportedOffers().get(0));
    }
}
