// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.migration.assessment.MigrationAssessmentManager;
import com.azure.resourcemanager.migration.assessment.models.AvsAssessmentOptions;
import com.azure.resourcemanager.migration.assessment.models.AzureAvsNodeType;
import com.azure.resourcemanager.migration.assessment.models.AzureCurrency;
import com.azure.resourcemanager.migration.assessment.models.AzureLocation;
import com.azure.resourcemanager.migration.assessment.models.AzureOfferCode;
import com.azure.resourcemanager.migration.assessment.models.FttAndRaidLevel;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AvsAssessmentOptionsOperationsListByAssessmentProjectMockTests {
    @Test
    public void testListByAssessmentProject() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"avsNodes\":[{\"nodeType\":\"AV36\",\"targetLocations\":[\"SouthAfricaNorth\",\"ChinaNorth\",\"Unknown\"]},{\"nodeType\":\"Unknown\",\"targetLocations\":[\"UsSecWest\",\"JapanWest\",\"USGovTexas\",\"UAECentral\"]},{\"nodeType\":\"AV36\",\"targetLocations\":[\"CanadaEast\",\"ChinaNorth2\",\"JapanEast\",\"EastUs2\"]},{\"nodeType\":\"AV36\",\"targetLocations\":[\"SwitzerlandNorth\",\"NorthEurope\",\"NorwayEast\",\"CanadaEast\"]}],\"failuresToTolerateAndRaidLevelValues\":[\"Ftt2Raid1\",\"Ftt2Raid1\",\"Unknown\"],\"reservedInstanceAvsNodes\":[\"AV36\"],\"reservedInstanceSupportedLocations\":[\"NorwayEast\",\"SwitzerlandWest\",\"USGovVirginia\"],\"reservedInstanceSupportedCurrencies\":[\"TWD\"],\"reservedInstanceSupportedOffers\":[\"MSMCAZR0060P\",\"MSAZR0025P\",\"MSAZR0129P\",\"MSAZR0127P\"]},\"id\":\"mfcoibic\",\"name\":\"iuswswj\",\"type\":\"kbqsjhbtqqvyfscy\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MigrationAssessmentManager manager = MigrationAssessmentManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<AvsAssessmentOptions> response = manager.avsAssessmentOptionsOperations()
            .listByAssessmentProject("kbudbtwaokb", "vlyttaaknwfrke", com.azure.core.util.Context.NONE);

        Assertions.assertEquals(AzureAvsNodeType.AV36,
            response.iterator().next().properties().avsNodes().get(0).nodeType());
        Assertions.assertEquals(AzureLocation.SOUTH_AFRICA_NORTH,
            response.iterator().next().properties().avsNodes().get(0).targetLocations().get(0));
        Assertions.assertEquals(FttAndRaidLevel.FTT2RAID1,
            response.iterator().next().properties().failuresToTolerateAndRaidLevelValues().get(0));
        Assertions.assertEquals(AzureAvsNodeType.AV36,
            response.iterator().next().properties().reservedInstanceAvsNodes().get(0));
        Assertions.assertEquals(AzureLocation.NORWAY_EAST,
            response.iterator().next().properties().reservedInstanceSupportedLocations().get(0));
        Assertions.assertEquals(AzureCurrency.TWD,
            response.iterator().next().properties().reservedInstanceSupportedCurrencies().get(0));
        Assertions.assertEquals(AzureOfferCode.MSMCAZR0060P,
            response.iterator().next().properties().reservedInstanceSupportedOffers().get(0));
    }
}
