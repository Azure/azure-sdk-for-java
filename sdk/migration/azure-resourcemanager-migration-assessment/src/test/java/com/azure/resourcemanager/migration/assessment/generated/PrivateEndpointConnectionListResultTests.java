// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.migration.assessment.fluent.models.PrivateEndpointConnectionInner;
import com.azure.resourcemanager.migration.assessment.models.PrivateEndpoint;
import com.azure.resourcemanager.migration.assessment.models.PrivateEndpointConnectionListResult;
import com.azure.resourcemanager.migration.assessment.models.PrivateEndpointConnectionProperties;
import com.azure.resourcemanager.migration.assessment.models.PrivateEndpointServiceConnectionStatus;
import com.azure.resourcemanager.migration.assessment.models.PrivateLinkServiceConnectionState;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PrivateEndpointConnectionListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateEndpointConnectionListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"groupIds\":[\"emchgavsczuej\"],\"privateEndpoint\":{\"id\":\"ptlghwzhomewjjst\"},\"privateLinkServiceConnectionState\":{\"status\":\"Pending\",\"description\":\"qawmoaianc\",\"actionsRequired\":\"vodrrslblxydkxr\"},\"provisioningState\":\"Deleting\"},\"id\":\"xiwkgfbql\",\"name\":\"nqkhych\",\"type\":\"c\"},{\"properties\":{\"groupIds\":[\"ehurqlr\"],\"privateEndpoint\":{\"id\":\"aweyur\"},\"privateLinkServiceConnectionState\":{\"status\":\"Rejected\",\"description\":\"jdxravjuqdbrx\",\"actionsRequired\":\"gchbapxkiy\"},\"provisioningState\":\"Succeeded\"},\"id\":\"bajbuscgduusi\",\"name\":\"ycblevpmcl\",\"type\":\"jy\"}],\"nextLink\":\"yxlzgs\"}")
            .toObject(PrivateEndpointConnectionListResult.class);
        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.PENDING,
            model.value().get(0).properties().privateLinkServiceConnectionState().status());
        Assertions.assertEquals("qawmoaianc",
            model.value().get(0).properties().privateLinkServiceConnectionState().description());
        Assertions.assertEquals("vodrrslblxydkxr",
            model.value().get(0).properties().privateLinkServiceConnectionState().actionsRequired());
        Assertions.assertEquals("yxlzgs", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateEndpointConnectionListResult model = new PrivateEndpointConnectionListResult().withValue(Arrays.asList(
            new PrivateEndpointConnectionInner()
                .withProperties(new PrivateEndpointConnectionProperties().withPrivateEndpoint(new PrivateEndpoint())
                    .withPrivateLinkServiceConnectionState(new PrivateLinkServiceConnectionState()
                        .withStatus(PrivateEndpointServiceConnectionStatus.PENDING)
                        .withDescription("qawmoaianc")
                        .withActionsRequired("vodrrslblxydkxr"))),
            new PrivateEndpointConnectionInner()
                .withProperties(new PrivateEndpointConnectionProperties().withPrivateEndpoint(new PrivateEndpoint())
                    .withPrivateLinkServiceConnectionState(new PrivateLinkServiceConnectionState()
                        .withStatus(PrivateEndpointServiceConnectionStatus.REJECTED)
                        .withDescription("jdxravjuqdbrx")
                        .withActionsRequired("gchbapxkiy")))))
            .withNextLink("yxlzgs");
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnectionListResult.class);
        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.PENDING,
            model.value().get(0).properties().privateLinkServiceConnectionState().status());
        Assertions.assertEquals("qawmoaianc",
            model.value().get(0).properties().privateLinkServiceConnectionState().description());
        Assertions.assertEquals("vodrrslblxydkxr",
            model.value().get(0).properties().privateLinkServiceConnectionState().actionsRequired());
        Assertions.assertEquals("yxlzgs", model.nextLink());
    }
}
