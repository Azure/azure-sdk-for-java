// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.migration.assessment.fluent.models.GroupInner;
import com.azure.resourcemanager.migration.assessment.models.AssessmentType;
import com.azure.resourcemanager.migration.assessment.models.GroupProperties;
import com.azure.resourcemanager.migration.assessment.models.GroupType;
import com.azure.resourcemanager.migration.assessment.models.ProvisioningState;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class GroupInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GroupInner model = BinaryData.fromString(
            "{\"properties\":{\"groupStatus\":\"Updated\",\"machineCount\":655886827,\"assessments\":[\"cgjbirxbp\",\"bsrfbj\",\"dtws\"],\"supportedAssessmentTypes\":[\"Unknown\"],\"areAssessmentsRunning\":false,\"createdTimestamp\":\"2021-01-31T07:10:37Z\",\"updatedTimestamp\":\"2021-12-05T15:12:17Z\",\"groupType\":\"Default\",\"provisioningState\":\"Failed\"},\"id\":\"znfqqnvwpmqtar\",\"name\":\"oujmkcjhwqytj\",\"type\":\"ybn\"}")
            .toObject(GroupInner.class);
        Assertions.assertEquals(ProvisioningState.FAILED, model.properties().provisioningState());
        Assertions.assertEquals(AssessmentType.UNKNOWN, model.properties().supportedAssessmentTypes().get(0));
        Assertions.assertEquals(GroupType.DEFAULT, model.properties().groupType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GroupInner model
            = new GroupInner().withProperties(new GroupProperties().withProvisioningState(ProvisioningState.FAILED)
                .withSupportedAssessmentTypes(Arrays.asList(AssessmentType.UNKNOWN))
                .withGroupType(GroupType.DEFAULT));
        model = BinaryData.fromObject(model).toObject(GroupInner.class);
        Assertions.assertEquals(ProvisioningState.FAILED, model.properties().provisioningState());
        Assertions.assertEquals(AssessmentType.UNKNOWN, model.properties().supportedAssessmentTypes().get(0));
        Assertions.assertEquals(GroupType.DEFAULT, model.properties().groupType());
    }
}
