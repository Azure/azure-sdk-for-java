// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.migration.assessment.fluent.models.SqlCollectorInner;
import com.azure.resourcemanager.migration.assessment.models.CollectorAgentPropertiesBase;
import com.azure.resourcemanager.migration.assessment.models.CollectorAgentSpnPropertiesBase;
import com.azure.resourcemanager.migration.assessment.models.CollectorPropertiesBaseWithAgent;
import com.azure.resourcemanager.migration.assessment.models.ProvisioningState;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class SqlCollectorInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SqlCollectorInner model = BinaryData.fromString(
            "{\"properties\":{\"agentProperties\":{\"id\":\"nfwmyymvqdbpb\",\"version\":\"ckdvez\",\"lastHeartbeatUtc\":\"2021-09-07T23:55:15Z\",\"spnDetails\":{\"authority\":\"bzhdd\",\"applicationId\":\"bnqfblhk\",\"audience\":\"ehpavawugiqjtiog\",\"objectId\":\"dminic\",\"tenantId\":\"eajohiyg\"}},\"discoverySiteId\":\"n\",\"createdTimestamp\":\"2021-01-10T08:24:54Z\",\"updatedTimestamp\":\"2021-06-30T15:37:59Z\",\"provisioningState\":\"Accepted\"},\"id\":\"kmktpvwxqcseh\",\"name\":\"hkhufm\",\"type\":\"qumq\"}")
            .toObject(SqlCollectorInner.class);
        Assertions.assertEquals(ProvisioningState.ACCEPTED, model.properties().provisioningState());
        Assertions.assertEquals("nfwmyymvqdbpb", model.properties().agentProperties().id());
        Assertions.assertEquals("ckdvez", model.properties().agentProperties().version());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-07T23:55:15Z"),
            model.properties().agentProperties().lastHeartbeatUtc());
        Assertions.assertEquals("bzhdd", model.properties().agentProperties().spnDetails().authority());
        Assertions.assertEquals("bnqfblhk", model.properties().agentProperties().spnDetails().applicationId());
        Assertions.assertEquals("ehpavawugiqjtiog", model.properties().agentProperties().spnDetails().audience());
        Assertions.assertEquals("dminic", model.properties().agentProperties().spnDetails().objectId());
        Assertions.assertEquals("eajohiyg", model.properties().agentProperties().spnDetails().tenantId());
        Assertions.assertEquals("n", model.properties().discoverySiteId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SqlCollectorInner model = new SqlCollectorInner()
            .withProperties(new CollectorPropertiesBaseWithAgent().withProvisioningState(ProvisioningState.ACCEPTED)
                .withAgentProperties(new CollectorAgentPropertiesBase().withId("nfwmyymvqdbpb")
                    .withVersion("ckdvez")
                    .withLastHeartbeatUtc(OffsetDateTime.parse("2021-09-07T23:55:15Z"))
                    .withSpnDetails(new CollectorAgentSpnPropertiesBase().withAuthority("bzhdd")
                        .withApplicationId("bnqfblhk")
                        .withAudience("ehpavawugiqjtiog")
                        .withObjectId("dminic")
                        .withTenantId("eajohiyg")))
                .withDiscoverySiteId("n"));
        model = BinaryData.fromObject(model).toObject(SqlCollectorInner.class);
        Assertions.assertEquals(ProvisioningState.ACCEPTED, model.properties().provisioningState());
        Assertions.assertEquals("nfwmyymvqdbpb", model.properties().agentProperties().id());
        Assertions.assertEquals("ckdvez", model.properties().agentProperties().version());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-07T23:55:15Z"),
            model.properties().agentProperties().lastHeartbeatUtc());
        Assertions.assertEquals("bzhdd", model.properties().agentProperties().spnDetails().authority());
        Assertions.assertEquals("bnqfblhk", model.properties().agentProperties().spnDetails().applicationId());
        Assertions.assertEquals("ehpavawugiqjtiog", model.properties().agentProperties().spnDetails().audience());
        Assertions.assertEquals("dminic", model.properties().agentProperties().spnDetails().objectId());
        Assertions.assertEquals("eajohiyg", model.properties().agentProperties().spnDetails().tenantId());
        Assertions.assertEquals("n", model.properties().discoverySiteId());
    }
}
