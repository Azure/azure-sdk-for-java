// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.migration.assessment.models.AssessmentProjectUpdate;
import com.azure.resourcemanager.migration.assessment.models.AssessmentProjectUpdateProperties;
import com.azure.resourcemanager.migration.assessment.models.ProjectStatus;
import com.azure.resourcemanager.migration.assessment.models.ProvisioningState;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class AssessmentProjectUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AssessmentProjectUpdate model = BinaryData.fromString(
            "{\"tags\":{\"ymwisdkft\":\"zwdzuh\",\"vkmijcmmxdcuf\":\"wxmnteiwao\",\"cxtbzsg\":\"fsrpymzidnse\",\"sne\":\"yc\"},\"properties\":{\"assessmentSolutionId\":\"wzjeiach\",\"projectStatus\":\"Active\",\"customerWorkspaceId\":\"flnrosfqpteehzz\",\"customerWorkspaceLocation\":\"pyqr\",\"publicNetworkAccess\":\"z\",\"customerStorageAccountArmId\":\"pvswjdkirso\",\"provisioningState\":\"Canceled\"}}")
            .toObject(AssessmentProjectUpdate.class);
        Assertions.assertEquals("zwdzuh", model.tags().get("ymwisdkft"));
        Assertions.assertEquals("wzjeiach", model.properties().assessmentSolutionId());
        Assertions.assertEquals(ProjectStatus.ACTIVE, model.properties().projectStatus());
        Assertions.assertEquals("flnrosfqpteehzz", model.properties().customerWorkspaceId());
        Assertions.assertEquals("pyqr", model.properties().customerWorkspaceLocation());
        Assertions.assertEquals("z", model.properties().publicNetworkAccess());
        Assertions.assertEquals("pvswjdkirso", model.properties().customerStorageAccountArmId());
        Assertions.assertEquals(ProvisioningState.CANCELED, model.properties().provisioningState());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AssessmentProjectUpdate model = new AssessmentProjectUpdate()
            .withTags(
                mapOf("ymwisdkft", "zwdzuh", "vkmijcmmxdcuf", "wxmnteiwao", "cxtbzsg", "fsrpymzidnse", "sne", "yc"))
            .withProperties(new AssessmentProjectUpdateProperties().withAssessmentSolutionId("wzjeiach")
                .withProjectStatus(ProjectStatus.ACTIVE)
                .withCustomerWorkspaceId("flnrosfqpteehzz")
                .withCustomerWorkspaceLocation("pyqr")
                .withPublicNetworkAccess("z")
                .withCustomerStorageAccountArmId("pvswjdkirso")
                .withProvisioningState(ProvisioningState.CANCELED));
        model = BinaryData.fromObject(model).toObject(AssessmentProjectUpdate.class);
        Assertions.assertEquals("zwdzuh", model.tags().get("ymwisdkft"));
        Assertions.assertEquals("wzjeiach", model.properties().assessmentSolutionId());
        Assertions.assertEquals(ProjectStatus.ACTIVE, model.properties().projectStatus());
        Assertions.assertEquals("flnrosfqpteehzz", model.properties().customerWorkspaceId());
        Assertions.assertEquals("pyqr", model.properties().customerWorkspaceLocation());
        Assertions.assertEquals("z", model.properties().publicNetworkAccess());
        Assertions.assertEquals("pvswjdkirso", model.properties().customerStorageAccountArmId());
        Assertions.assertEquals(ProvisioningState.CANCELED, model.properties().provisioningState());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
