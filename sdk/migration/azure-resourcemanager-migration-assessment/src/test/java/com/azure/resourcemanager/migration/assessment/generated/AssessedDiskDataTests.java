// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.migration.assessment.models.AssessedDiskData;
import com.azure.resourcemanager.migration.assessment.models.AzureDiskSize;
import com.azure.resourcemanager.migration.assessment.models.AzureDiskSuitabilityDetail;
import com.azure.resourcemanager.migration.assessment.models.AzureDiskSuitabilityExplanation;
import com.azure.resourcemanager.migration.assessment.models.AzureDiskType;
import com.azure.resourcemanager.migration.assessment.models.CloudSuitability;
import org.junit.jupiter.api.Assertions;

public final class AssessedDiskDataTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AssessedDiskData model = BinaryData.fromString(
            "{\"suitability\":\"NotSuitable\",\"suitabilityExplanation\":\"NoEaPriceFoundForDiskSize\",\"suitabilityDetail\":\"MegabytesPerSecondOfWriteOutOfRange\",\"recommendedDiskSize\":\"StandardSSD_E1\",\"recommendedDiskType\":\"PremiumV2\",\"recommendedDiskSizeGigabytes\":1924185709,\"recommendDiskThroughputInMbps\":77.596115,\"recommendedDiskIops\":28.821247,\"monthlyStorageCost\":46.197742,\"name\":\"cgx\",\"displayName\":\"csserxht\",\"gigabytesProvisioned\":27.112644,\"megabytesPerSecondOfRead\":51.11168,\"megabytesPerSecondOfWrite\":64.434204,\"numberOfReadOperationsPerSecond\":45.264824,\"numberOfWriteOperationsPerSecond\":3.874898}")
            .toObject(AssessedDiskData.class);
        Assertions.assertEquals(CloudSuitability.NOT_SUITABLE, model.suitability());
        Assertions.assertEquals(AzureDiskSuitabilityExplanation.NO_EA_PRICE_FOUND_FOR_DISK_SIZE,
            model.suitabilityExplanation());
        Assertions.assertEquals(AzureDiskSuitabilityDetail.MEGABYTES_PER_SECOND_OF_WRITE_OUT_OF_RANGE,
            model.suitabilityDetail());
        Assertions.assertEquals(AzureDiskSize.STANDARD_SSD_E1, model.recommendedDiskSize());
        Assertions.assertEquals(AzureDiskType.PREMIUM_V2, model.recommendedDiskType());
        Assertions.assertEquals(1924185709, model.recommendedDiskSizeGigabytes());
        Assertions.assertEquals(77.596115F, model.recommendDiskThroughputInMbps());
        Assertions.assertEquals(28.821247F, model.recommendedDiskIops());
        Assertions.assertEquals(46.197742F, model.monthlyStorageCost());
        Assertions.assertEquals("cgx", model.name());
        Assertions.assertEquals("csserxht", model.displayName());
        Assertions.assertEquals(27.112644F, model.gigabytesProvisioned());
        Assertions.assertEquals(51.11168F, model.megabytesPerSecondOfRead());
        Assertions.assertEquals(64.434204F, model.megabytesPerSecondOfWrite());
        Assertions.assertEquals(45.264824F, model.numberOfReadOperationsPerSecond());
        Assertions.assertEquals(3.874898F, model.numberOfWriteOperationsPerSecond());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AssessedDiskData model = new AssessedDiskData().withSuitability(CloudSuitability.NOT_SUITABLE)
            .withSuitabilityExplanation(AzureDiskSuitabilityExplanation.NO_EA_PRICE_FOUND_FOR_DISK_SIZE)
            .withSuitabilityDetail(AzureDiskSuitabilityDetail.MEGABYTES_PER_SECOND_OF_WRITE_OUT_OF_RANGE)
            .withRecommendedDiskSize(AzureDiskSize.STANDARD_SSD_E1)
            .withRecommendedDiskType(AzureDiskType.PREMIUM_V2)
            .withRecommendedDiskSizeGigabytes(1924185709)
            .withRecommendDiskThroughputInMbps(77.596115F)
            .withRecommendedDiskIops(28.821247F)
            .withMonthlyStorageCost(46.197742F)
            .withName("cgx")
            .withDisplayName("csserxht")
            .withGigabytesProvisioned(27.112644F)
            .withMegabytesPerSecondOfRead(51.11168F)
            .withMegabytesPerSecondOfWrite(64.434204F)
            .withNumberOfReadOperationsPerSecond(45.264824F)
            .withNumberOfWriteOperationsPerSecond(3.874898F);
        model = BinaryData.fromObject(model).toObject(AssessedDiskData.class);
        Assertions.assertEquals(CloudSuitability.NOT_SUITABLE, model.suitability());
        Assertions.assertEquals(AzureDiskSuitabilityExplanation.NO_EA_PRICE_FOUND_FOR_DISK_SIZE,
            model.suitabilityExplanation());
        Assertions.assertEquals(AzureDiskSuitabilityDetail.MEGABYTES_PER_SECOND_OF_WRITE_OUT_OF_RANGE,
            model.suitabilityDetail());
        Assertions.assertEquals(AzureDiskSize.STANDARD_SSD_E1, model.recommendedDiskSize());
        Assertions.assertEquals(AzureDiskType.PREMIUM_V2, model.recommendedDiskType());
        Assertions.assertEquals(1924185709, model.recommendedDiskSizeGigabytes());
        Assertions.assertEquals(77.596115F, model.recommendDiskThroughputInMbps());
        Assertions.assertEquals(28.821247F, model.recommendedDiskIops());
        Assertions.assertEquals(46.197742F, model.monthlyStorageCost());
        Assertions.assertEquals("cgx", model.name());
        Assertions.assertEquals("csserxht", model.displayName());
        Assertions.assertEquals(27.112644F, model.gigabytesProvisioned());
        Assertions.assertEquals(51.11168F, model.megabytesPerSecondOfRead());
        Assertions.assertEquals(64.434204F, model.megabytesPerSecondOfWrite());
        Assertions.assertEquals(45.264824F, model.numberOfReadOperationsPerSecond());
        Assertions.assertEquals(3.874898F, model.numberOfWriteOperationsPerSecond());
    }
}
