// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.migration.assessment.models.AvsAssessmentOptionsProperties;
import com.azure.resourcemanager.migration.assessment.models.AvsSkuOptions;
import com.azure.resourcemanager.migration.assessment.models.AzureAvsNodeType;
import com.azure.resourcemanager.migration.assessment.models.AzureCurrency;
import com.azure.resourcemanager.migration.assessment.models.AzureLocation;
import com.azure.resourcemanager.migration.assessment.models.AzureOfferCode;
import com.azure.resourcemanager.migration.assessment.models.FttAndRaidLevel;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AvsAssessmentOptionsPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AvsAssessmentOptionsProperties model = BinaryData.fromString(
            "{\"avsNodes\":[{\"nodeType\":\"AV36\",\"targetLocations\":[\"SwitzerlandNorth\",\"CanadaCentral\",\"AustraliaCentral2\"]}],\"failuresToTolerateAndRaidLevelValues\":[\"Ftt2Raid6\",\"Ftt1Raid5\",\"Unknown\",\"Ftt1Raid1\"],\"reservedInstanceAvsNodes\":[\"AV36\",\"Unknown\"],\"reservedInstanceSupportedLocations\":[\"FranceSouth\",\"UsNatWest\",\"USGovVirginia\"],\"reservedInstanceSupportedCurrencies\":[\"MXN\",\"DKK\"],\"reservedInstanceSupportedOffers\":[\"Unknown\",\"MSMCAZR0059P\",\"MSAZR0125P\"]}")
            .toObject(AvsAssessmentOptionsProperties.class);
        Assertions.assertEquals(AzureAvsNodeType.AV36, model.avsNodes().get(0).nodeType());
        Assertions.assertEquals(AzureLocation.SWITZERLAND_NORTH, model.avsNodes().get(0).targetLocations().get(0));
        Assertions.assertEquals(FttAndRaidLevel.FTT2RAID6, model.failuresToTolerateAndRaidLevelValues().get(0));
        Assertions.assertEquals(AzureAvsNodeType.AV36, model.reservedInstanceAvsNodes().get(0));
        Assertions.assertEquals(AzureLocation.FRANCE_SOUTH, model.reservedInstanceSupportedLocations().get(0));
        Assertions.assertEquals(AzureCurrency.MXN, model.reservedInstanceSupportedCurrencies().get(0));
        Assertions.assertEquals(AzureOfferCode.UNKNOWN, model.reservedInstanceSupportedOffers().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AvsAssessmentOptionsProperties model = new AvsAssessmentOptionsProperties()
            .withAvsNodes(Arrays.asList(new AvsSkuOptions().withNodeType(AzureAvsNodeType.AV36)
                .withTargetLocations(Arrays.asList(AzureLocation.SWITZERLAND_NORTH, AzureLocation.CANADA_CENTRAL,
                    AzureLocation.AUSTRALIA_CENTRAL2))))
            .withFailuresToTolerateAndRaidLevelValues(Arrays.asList(FttAndRaidLevel.FTT2RAID6,
                FttAndRaidLevel.FTT1RAID5, FttAndRaidLevel.UNKNOWN, FttAndRaidLevel.FTT1RAID1))
            .withReservedInstanceAvsNodes(Arrays.asList(AzureAvsNodeType.AV36, AzureAvsNodeType.UNKNOWN))
            .withReservedInstanceSupportedLocations(
                Arrays.asList(AzureLocation.FRANCE_SOUTH, AzureLocation.US_NAT_WEST, AzureLocation.USGOV_VIRGINIA))
            .withReservedInstanceSupportedCurrencies(Arrays.asList(AzureCurrency.MXN, AzureCurrency.DKK))
            .withReservedInstanceSupportedOffers(
                Arrays.asList(AzureOfferCode.UNKNOWN, AzureOfferCode.MSMCAZR0059P, AzureOfferCode.MSAZR0125P));
        model = BinaryData.fromObject(model).toObject(AvsAssessmentOptionsProperties.class);
        Assertions.assertEquals(AzureAvsNodeType.AV36, model.avsNodes().get(0).nodeType());
        Assertions.assertEquals(AzureLocation.SWITZERLAND_NORTH, model.avsNodes().get(0).targetLocations().get(0));
        Assertions.assertEquals(FttAndRaidLevel.FTT2RAID6, model.failuresToTolerateAndRaidLevelValues().get(0));
        Assertions.assertEquals(AzureAvsNodeType.AV36, model.reservedInstanceAvsNodes().get(0));
        Assertions.assertEquals(AzureLocation.FRANCE_SOUTH, model.reservedInstanceSupportedLocations().get(0));
        Assertions.assertEquals(AzureCurrency.MXN, model.reservedInstanceSupportedCurrencies().get(0));
        Assertions.assertEquals(AzureOfferCode.UNKNOWN, model.reservedInstanceSupportedOffers().get(0));
    }
}
