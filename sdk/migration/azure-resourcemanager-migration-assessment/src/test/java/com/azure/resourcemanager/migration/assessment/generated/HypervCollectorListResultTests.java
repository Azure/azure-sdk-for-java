// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.migration.assessment.fluent.models.HypervCollectorInner;
import com.azure.resourcemanager.migration.assessment.models.CollectorAgentPropertiesBase;
import com.azure.resourcemanager.migration.assessment.models.CollectorAgentSpnPropertiesBase;
import com.azure.resourcemanager.migration.assessment.models.CollectorPropertiesBaseWithAgent;
import com.azure.resourcemanager.migration.assessment.models.HypervCollectorListResult;
import com.azure.resourcemanager.migration.assessment.models.ProvisioningState;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class HypervCollectorListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HypervCollectorListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"agentProperties\":{\"id\":\"tczhupeuknijd\",\"version\":\"yespydjfbocyv\",\"lastHeartbeatUtc\":\"2021-02-09T06:15:43Z\",\"spnDetails\":{\"authority\":\"tywikd\",\"applicationId\":\"lakuflgbhgauacd\",\"audience\":\"mxu\",\"objectId\":\"sryjqgdkfno\",\"tenantId\":\"eoqbvjhvefgwbmqj\"}},\"discoverySiteId\":\"ntasfaymxbu\",\"createdTimestamp\":\"2021-06-23T05:18:51Z\",\"updatedTimestamp\":\"2021-04-19T02:13:28Z\",\"provisioningState\":\"Accepted\"},\"id\":\"qkyojwyvf\",\"name\":\"mbtsuahxsg\",\"type\":\"jcmmzrrscub\"}],\"nextLink\":\"sd\"}")
            .toObject(HypervCollectorListResult.class);
        Assertions.assertEquals(ProvisioningState.ACCEPTED, model.value().get(0).properties().provisioningState());
        Assertions.assertEquals("tczhupeuknijd", model.value().get(0).properties().agentProperties().id());
        Assertions.assertEquals("yespydjfbocyv", model.value().get(0).properties().agentProperties().version());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-09T06:15:43Z"),
            model.value().get(0).properties().agentProperties().lastHeartbeatUtc());
        Assertions.assertEquals("tywikd", model.value().get(0).properties().agentProperties().spnDetails().authority());
        Assertions.assertEquals("lakuflgbhgauacd",
            model.value().get(0).properties().agentProperties().spnDetails().applicationId());
        Assertions.assertEquals("mxu", model.value().get(0).properties().agentProperties().spnDetails().audience());
        Assertions.assertEquals("sryjqgdkfno",
            model.value().get(0).properties().agentProperties().spnDetails().objectId());
        Assertions.assertEquals("eoqbvjhvefgwbmqj",
            model.value().get(0).properties().agentProperties().spnDetails().tenantId());
        Assertions.assertEquals("ntasfaymxbu", model.value().get(0).properties().discoverySiteId());
        Assertions.assertEquals("sd", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HypervCollectorListResult model
            = new HypervCollectorListResult().withValue(Arrays.asList(new HypervCollectorInner()
                .withProperties(new CollectorPropertiesBaseWithAgent().withProvisioningState(ProvisioningState.ACCEPTED)
                    .withAgentProperties(new CollectorAgentPropertiesBase().withId("tczhupeuknijd")
                        .withVersion("yespydjfbocyv")
                        .withLastHeartbeatUtc(OffsetDateTime.parse("2021-02-09T06:15:43Z"))
                        .withSpnDetails(new CollectorAgentSpnPropertiesBase().withAuthority("tywikd")
                            .withApplicationId("lakuflgbhgauacd")
                            .withAudience("mxu")
                            .withObjectId("sryjqgdkfno")
                            .withTenantId("eoqbvjhvefgwbmqj")))
                    .withDiscoverySiteId("ntasfaymxbu"))))
                .withNextLink("sd");
        model = BinaryData.fromObject(model).toObject(HypervCollectorListResult.class);
        Assertions.assertEquals(ProvisioningState.ACCEPTED, model.value().get(0).properties().provisioningState());
        Assertions.assertEquals("tczhupeuknijd", model.value().get(0).properties().agentProperties().id());
        Assertions.assertEquals("yespydjfbocyv", model.value().get(0).properties().agentProperties().version());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-09T06:15:43Z"),
            model.value().get(0).properties().agentProperties().lastHeartbeatUtc());
        Assertions.assertEquals("tywikd", model.value().get(0).properties().agentProperties().spnDetails().authority());
        Assertions.assertEquals("lakuflgbhgauacd",
            model.value().get(0).properties().agentProperties().spnDetails().applicationId());
        Assertions.assertEquals("mxu", model.value().get(0).properties().agentProperties().spnDetails().audience());
        Assertions.assertEquals("sryjqgdkfno",
            model.value().get(0).properties().agentProperties().spnDetails().objectId());
        Assertions.assertEquals("eoqbvjhvefgwbmqj",
            model.value().get(0).properties().agentProperties().spnDetails().tenantId());
        Assertions.assertEquals("ntasfaymxbu", model.value().get(0).properties().discoverySiteId());
        Assertions.assertEquals("sd", model.nextLink());
    }
}
