// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.migration.assessment.fluent.models.AvsAssessmentOptionsInner;
import com.azure.resourcemanager.migration.assessment.models.AvsAssessmentOptionsProperties;
import com.azure.resourcemanager.migration.assessment.models.AvsSkuOptions;
import com.azure.resourcemanager.migration.assessment.models.AzureAvsNodeType;
import com.azure.resourcemanager.migration.assessment.models.AzureCurrency;
import com.azure.resourcemanager.migration.assessment.models.AzureLocation;
import com.azure.resourcemanager.migration.assessment.models.AzureOfferCode;
import com.azure.resourcemanager.migration.assessment.models.FttAndRaidLevel;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AvsAssessmentOptionsInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AvsAssessmentOptionsInner model = BinaryData.fromString(
            "{\"properties\":{\"avsNodes\":[{\"nodeType\":\"AV36\",\"targetLocations\":[\"USGovIowa\",\"SouthAfricaWest\"]},{\"nodeType\":\"Unknown\",\"targetLocations\":[\"CanadaCentral\",\"EastUs2\",\"NorthEurope\",\"KoreaCentral\"]},{\"nodeType\":\"AV36\",\"targetLocations\":[\"USDoDCentral\",\"USGovVirginia\",\"GermanyNortheast\"]}],\"failuresToTolerateAndRaidLevelValues\":[\"Ftt3Raid1\"],\"reservedInstanceAvsNodes\":[\"Unknown\",\"Unknown\",\"AV36\",\"Unknown\"],\"reservedInstanceSupportedLocations\":[\"JapanWest\",\"ChinaNorth\",\"EastUs2\",\"UAECentral\"],\"reservedInstanceSupportedCurrencies\":[\"BRL\",\"ARS\"],\"reservedInstanceSupportedOffers\":[\"MSAZR0149P\",\"Unknown\"]},\"id\":\"slynqwwnc\",\"name\":\"zzhxgktrm\",\"type\":\"ucnapkteoellwp\"}")
            .toObject(AvsAssessmentOptionsInner.class);
        Assertions.assertEquals(AzureAvsNodeType.AV36, model.properties().avsNodes().get(0).nodeType());
        Assertions.assertEquals(AzureLocation.USGOV_IOWA,
            model.properties().avsNodes().get(0).targetLocations().get(0));
        Assertions.assertEquals(FttAndRaidLevel.FTT3RAID1,
            model.properties().failuresToTolerateAndRaidLevelValues().get(0));
        Assertions.assertEquals(AzureAvsNodeType.UNKNOWN, model.properties().reservedInstanceAvsNodes().get(0));
        Assertions.assertEquals(AzureLocation.JAPAN_WEST,
            model.properties().reservedInstanceSupportedLocations().get(0));
        Assertions.assertEquals(AzureCurrency.BRL, model.properties().reservedInstanceSupportedCurrencies().get(0));
        Assertions.assertEquals(AzureOfferCode.MSAZR0149P, model.properties().reservedInstanceSupportedOffers().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AvsAssessmentOptionsInner model
            = new AvsAssessmentOptionsInner().withProperties(new AvsAssessmentOptionsProperties()
                .withAvsNodes(Arrays.asList(
                    new AvsSkuOptions().withNodeType(AzureAvsNodeType.AV36)
                        .withTargetLocations(Arrays.asList(AzureLocation.USGOV_IOWA, AzureLocation.SOUTH_AFRICA_WEST)),
                    new AvsSkuOptions().withNodeType(AzureAvsNodeType.UNKNOWN)
                        .withTargetLocations(Arrays.asList(AzureLocation.CANADA_CENTRAL, AzureLocation.EAST_US2,
                            AzureLocation.NORTH_EUROPE, AzureLocation.KOREA_CENTRAL)),
                    new AvsSkuOptions().withNodeType(AzureAvsNodeType.AV36)
                        .withTargetLocations(Arrays.asList(AzureLocation.USDO_DCENTRAL, AzureLocation.USGOV_VIRGINIA,
                            AzureLocation.GERMANY_NORTHEAST))))
                .withFailuresToTolerateAndRaidLevelValues(Arrays.asList(FttAndRaidLevel.FTT3RAID1))
                .withReservedInstanceAvsNodes(Arrays.asList(AzureAvsNodeType.UNKNOWN, AzureAvsNodeType.UNKNOWN,
                    AzureAvsNodeType.AV36, AzureAvsNodeType.UNKNOWN))
                .withReservedInstanceSupportedLocations(Arrays.asList(AzureLocation.JAPAN_WEST,
                    AzureLocation.CHINA_NORTH, AzureLocation.EAST_US2, AzureLocation.UAECENTRAL))
                .withReservedInstanceSupportedCurrencies(Arrays.asList(AzureCurrency.BRL, AzureCurrency.ARS))
                .withReservedInstanceSupportedOffers(Arrays.asList(AzureOfferCode.MSAZR0149P, AzureOfferCode.UNKNOWN)));
        model = BinaryData.fromObject(model).toObject(AvsAssessmentOptionsInner.class);
        Assertions.assertEquals(AzureAvsNodeType.AV36, model.properties().avsNodes().get(0).nodeType());
        Assertions.assertEquals(AzureLocation.USGOV_IOWA,
            model.properties().avsNodes().get(0).targetLocations().get(0));
        Assertions.assertEquals(FttAndRaidLevel.FTT3RAID1,
            model.properties().failuresToTolerateAndRaidLevelValues().get(0));
        Assertions.assertEquals(AzureAvsNodeType.UNKNOWN, model.properties().reservedInstanceAvsNodes().get(0));
        Assertions.assertEquals(AzureLocation.JAPAN_WEST,
            model.properties().reservedInstanceSupportedLocations().get(0));
        Assertions.assertEquals(AzureCurrency.BRL, model.properties().reservedInstanceSupportedCurrencies().get(0));
        Assertions.assertEquals(AzureOfferCode.MSAZR0149P, model.properties().reservedInstanceSupportedOffers().get(0));
    }
}
