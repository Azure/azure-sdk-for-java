// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.migration.assessment.MigrationAssessmentManager;
import com.azure.resourcemanager.migration.assessment.models.ProvisioningState;
import com.azure.resourcemanager.migration.assessment.models.ServerCollector;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ServerCollectorsOperationsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"agentProperties\":{\"id\":\"rfijhggabq\",\"version\":\"amklilirwdv\",\"lastHeartbeatUtc\":\"2021-02-25T01:02:51Z\",\"spnDetails\":{\"authority\":\"pzou\",\"applicationId\":\"tqrxqwqnjxrdf\",\"audience\":\"t\",\"objectId\":\"lygtavczcxdfweap\",\"tenantId\":\"mlx\"}},\"discoverySiteId\":\"jphrasp\",\"createdTimestamp\":\"2021-10-13T05:12:25Z\",\"updatedTimestamp\":\"2021-04-07T06:21:32Z\",\"provisioningState\":\"Provisioning\"},\"id\":\"mdbgi\",\"name\":\"ehfgsm\",\"type\":\"rjuqbpxtokl\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MigrationAssessmentManager manager = MigrationAssessmentManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        ServerCollector response = manager.serverCollectorsOperations()
            .getWithResponse("rmimrljdpoqfxyem", "kftbaewhte", "loamfmxtllfltym", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(ProvisioningState.PROVISIONING, response.properties().provisioningState());
        Assertions.assertEquals("rfijhggabq", response.properties().agentProperties().id());
        Assertions.assertEquals("amklilirwdv", response.properties().agentProperties().version());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-25T01:02:51Z"),
            response.properties().agentProperties().lastHeartbeatUtc());
        Assertions.assertEquals("pzou", response.properties().agentProperties().spnDetails().authority());
        Assertions.assertEquals("tqrxqwqnjxrdf", response.properties().agentProperties().spnDetails().applicationId());
        Assertions.assertEquals("t", response.properties().agentProperties().spnDetails().audience());
        Assertions.assertEquals("lygtavczcxdfweap", response.properties().agentProperties().spnDetails().objectId());
        Assertions.assertEquals("mlx", response.properties().agentProperties().spnDetails().tenantId());
        Assertions.assertEquals("jphrasp", response.properties().discoverySiteId());
    }
}
