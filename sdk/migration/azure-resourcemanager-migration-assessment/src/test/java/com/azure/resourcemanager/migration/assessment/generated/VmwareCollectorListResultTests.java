// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.migration.assessment.fluent.models.VmwareCollectorInner;
import com.azure.resourcemanager.migration.assessment.models.CollectorAgentPropertiesBase;
import com.azure.resourcemanager.migration.assessment.models.CollectorAgentSpnPropertiesBase;
import com.azure.resourcemanager.migration.assessment.models.CollectorPropertiesBaseWithAgent;
import com.azure.resourcemanager.migration.assessment.models.ProvisioningState;
import com.azure.resourcemanager.migration.assessment.models.VmwareCollectorListResult;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class VmwareCollectorListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VmwareCollectorListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"agentProperties\":{\"id\":\"zulo\",\"version\":\"aeuzanh\",\"lastHeartbeatUtc\":\"2021-11-19T22:08:29Z\",\"spnDetails\":{\"authority\":\"enwphpzfngq\",\"applicationId\":\"lidftujwjj\",\"audience\":\"wbeqrkuor\",\"objectId\":\"ssruqnmdvhazcvj\",\"tenantId\":\"iqswbqer\"}},\"discoverySiteId\":\"xiytxtdgukvl\",\"createdTimestamp\":\"2021-11-18T11:20:29Z\",\"updatedTimestamp\":\"2021-02-21T00:04:27Z\",\"provisioningState\":\"Deleting\"},\"id\":\"youambewr\",\"name\":\"swmowegmmuteyxe\",\"type\":\"guqigijiitns\"},{\"properties\":{\"agentProperties\":{\"id\":\"desygrijwa\",\"version\":\"fanraybfu\",\"lastHeartbeatUtc\":\"2021-02-09T08:33:36Z\",\"spnDetails\":{\"authority\":\"jsydgrhydkygywez\",\"applicationId\":\"iecafygzmxi\",\"audience\":\"vdsmaklixq\",\"objectId\":\"hyhxa\",\"tenantId\":\"bx\"}},\"discoverySiteId\":\"oij\",\"createdTimestamp\":\"2021-04-20T04:08:14Z\",\"updatedTimestamp\":\"2021-07-15T09:06:11Z\",\"provisioningState\":\"Updating\"},\"id\":\"kkwjdjodq\",\"name\":\"ykincnremehl\",\"type\":\"izhceumoqodkadp\"}],\"nextLink\":\"ibngqladyw\"}")
            .toObject(VmwareCollectorListResult.class);
        Assertions.assertEquals(ProvisioningState.DELETING, model.value().get(0).properties().provisioningState());
        Assertions.assertEquals("zulo", model.value().get(0).properties().agentProperties().id());
        Assertions.assertEquals("aeuzanh", model.value().get(0).properties().agentProperties().version());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-19T22:08:29Z"),
            model.value().get(0).properties().agentProperties().lastHeartbeatUtc());
        Assertions.assertEquals("enwphpzfngq",
            model.value().get(0).properties().agentProperties().spnDetails().authority());
        Assertions.assertEquals("lidftujwjj",
            model.value().get(0).properties().agentProperties().spnDetails().applicationId());
        Assertions.assertEquals("wbeqrkuor",
            model.value().get(0).properties().agentProperties().spnDetails().audience());
        Assertions.assertEquals("ssruqnmdvhazcvj",
            model.value().get(0).properties().agentProperties().spnDetails().objectId());
        Assertions.assertEquals("iqswbqer",
            model.value().get(0).properties().agentProperties().spnDetails().tenantId());
        Assertions.assertEquals("xiytxtdgukvl", model.value().get(0).properties().discoverySiteId());
        Assertions.assertEquals("ibngqladyw", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VmwareCollectorListResult model = new VmwareCollectorListResult().withValue(Arrays.asList(
            new VmwareCollectorInner()
                .withProperties(new CollectorPropertiesBaseWithAgent().withProvisioningState(ProvisioningState.DELETING)
                    .withAgentProperties(new CollectorAgentPropertiesBase().withId("zulo")
                        .withVersion("aeuzanh")
                        .withLastHeartbeatUtc(OffsetDateTime.parse("2021-11-19T22:08:29Z"))
                        .withSpnDetails(new CollectorAgentSpnPropertiesBase().withAuthority("enwphpzfngq")
                            .withApplicationId("lidftujwjj")
                            .withAudience("wbeqrkuor")
                            .withObjectId("ssruqnmdvhazcvj")
                            .withTenantId("iqswbqer")))
                    .withDiscoverySiteId("xiytxtdgukvl")),
            new VmwareCollectorInner()
                .withProperties(new CollectorPropertiesBaseWithAgent().withProvisioningState(ProvisioningState.UPDATING)
                    .withAgentProperties(new CollectorAgentPropertiesBase().withId("desygrijwa")
                        .withVersion("fanraybfu")
                        .withLastHeartbeatUtc(OffsetDateTime.parse("2021-02-09T08:33:36Z"))
                        .withSpnDetails(new CollectorAgentSpnPropertiesBase().withAuthority("jsydgrhydkygywez")
                            .withApplicationId("iecafygzmxi")
                            .withAudience("vdsmaklixq")
                            .withObjectId("hyhxa")
                            .withTenantId("bx")))
                    .withDiscoverySiteId("oij"))))
            .withNextLink("ibngqladyw");
        model = BinaryData.fromObject(model).toObject(VmwareCollectorListResult.class);
        Assertions.assertEquals(ProvisioningState.DELETING, model.value().get(0).properties().provisioningState());
        Assertions.assertEquals("zulo", model.value().get(0).properties().agentProperties().id());
        Assertions.assertEquals("aeuzanh", model.value().get(0).properties().agentProperties().version());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-19T22:08:29Z"),
            model.value().get(0).properties().agentProperties().lastHeartbeatUtc());
        Assertions.assertEquals("enwphpzfngq",
            model.value().get(0).properties().agentProperties().spnDetails().authority());
        Assertions.assertEquals("lidftujwjj",
            model.value().get(0).properties().agentProperties().spnDetails().applicationId());
        Assertions.assertEquals("wbeqrkuor",
            model.value().get(0).properties().agentProperties().spnDetails().audience());
        Assertions.assertEquals("ssruqnmdvhazcvj",
            model.value().get(0).properties().agentProperties().spnDetails().objectId());
        Assertions.assertEquals("iqswbqer",
            model.value().get(0).properties().agentProperties().spnDetails().tenantId());
        Assertions.assertEquals("xiytxtdgukvl", model.value().get(0).properties().discoverySiteId());
        Assertions.assertEquals("ibngqladyw", model.nextLink());
    }
}
