// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.migration.assessment.models.CollectorAgentPropertiesBase;
import com.azure.resourcemanager.migration.assessment.models.CollectorAgentSpnPropertiesBase;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class CollectorAgentPropertiesBaseTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CollectorAgentPropertiesBase model = BinaryData.fromString(
            "{\"id\":\"mbzmqk\",\"version\":\"tbnxwbjsid\",\"lastHeartbeatUtc\":\"2021-01-03T19:24:54Z\",\"spnDetails\":{\"authority\":\"pksokdgogew\",\"applicationId\":\"ym\",\"audience\":\"bguzozky\",\"objectId\":\"nfnzhhh\",\"tenantId\":\"smffjkutycyarnr\"}}")
            .toObject(CollectorAgentPropertiesBase.class);
        Assertions.assertEquals("mbzmqk", model.id());
        Assertions.assertEquals("tbnxwbjsid", model.version());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-03T19:24:54Z"), model.lastHeartbeatUtc());
        Assertions.assertEquals("pksokdgogew", model.spnDetails().authority());
        Assertions.assertEquals("ym", model.spnDetails().applicationId());
        Assertions.assertEquals("bguzozky", model.spnDetails().audience());
        Assertions.assertEquals("nfnzhhh", model.spnDetails().objectId());
        Assertions.assertEquals("smffjkutycyarnr", model.spnDetails().tenantId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CollectorAgentPropertiesBase model = new CollectorAgentPropertiesBase().withId("mbzmqk")
            .withVersion("tbnxwbjsid")
            .withLastHeartbeatUtc(OffsetDateTime.parse("2021-01-03T19:24:54Z"))
            .withSpnDetails(new CollectorAgentSpnPropertiesBase().withAuthority("pksokdgogew")
                .withApplicationId("ym")
                .withAudience("bguzozky")
                .withObjectId("nfnzhhh")
                .withTenantId("smffjkutycyarnr"));
        model = BinaryData.fromObject(model).toObject(CollectorAgentPropertiesBase.class);
        Assertions.assertEquals("mbzmqk", model.id());
        Assertions.assertEquals("tbnxwbjsid", model.version());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-03T19:24:54Z"), model.lastHeartbeatUtc());
        Assertions.assertEquals("pksokdgogew", model.spnDetails().authority());
        Assertions.assertEquals("ym", model.spnDetails().applicationId());
        Assertions.assertEquals("bguzozky", model.spnDetails().audience());
        Assertions.assertEquals("nfnzhhh", model.spnDetails().objectId());
        Assertions.assertEquals("smffjkutycyarnr", model.spnDetails().tenantId());
    }
}
