// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.migration.assessment.models.AzureNetworkAdapterSuitabilityDetail;
import com.azure.resourcemanager.migration.assessment.models.AzureNetworkAdapterSuitabilityExplanation;
import com.azure.resourcemanager.migration.assessment.models.CloudSuitability;
import com.azure.resourcemanager.migration.assessment.models.SqlAssessedNetworkAdapter;
import org.junit.jupiter.api.Assertions;

public final class SqlAssessedNetworkAdapterTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SqlAssessedNetworkAdapter model = BinaryData.fromString(
            "{\"suitability\":\"ConditionallySuitable\",\"suitabilityDetail\":\"MegabytesOfDataTransmittedOutOfRange\",\"suitabilityExplanation\":\"InternalErrorOccurred\",\"monthlyBandwidthCosts\":55.11159,\"netGigabytesTransmittedPerMonth\":58.90187,\"name\":\"y\",\"displayName\":\"chrszi\",\"macAddress\":\"yuel\",\"ipAddresses\":[\"ndnbfqy\"],\"megabytesPerSecondReceived\":24.793839,\"megabytesPerSecondTransmitted\":46.289616}")
            .toObject(SqlAssessedNetworkAdapter.class);
        Assertions.assertEquals(CloudSuitability.CONDITIONALLY_SUITABLE, model.suitability());
        Assertions.assertEquals(AzureNetworkAdapterSuitabilityDetail.MEGABYTES_OF_DATA_TRANSMITTED_OUT_OF_RANGE,
            model.suitabilityDetail());
        Assertions.assertEquals(AzureNetworkAdapterSuitabilityExplanation.INTERNAL_ERROR_OCCURRED,
            model.suitabilityExplanation());
        Assertions.assertEquals(55.11159F, model.monthlyBandwidthCosts());
        Assertions.assertEquals(58.90187F, model.netGigabytesTransmittedPerMonth());
        Assertions.assertEquals("y", model.name());
        Assertions.assertEquals("chrszi", model.displayName());
        Assertions.assertEquals("yuel", model.macAddress());
        Assertions.assertEquals(24.793839F, model.megabytesPerSecondReceived());
        Assertions.assertEquals(46.289616F, model.megabytesPerSecondTransmitted());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SqlAssessedNetworkAdapter model
            = new SqlAssessedNetworkAdapter().withSuitability(CloudSuitability.CONDITIONALLY_SUITABLE)
                .withSuitabilityDetail(AzureNetworkAdapterSuitabilityDetail.MEGABYTES_OF_DATA_TRANSMITTED_OUT_OF_RANGE)
                .withSuitabilityExplanation(AzureNetworkAdapterSuitabilityExplanation.INTERNAL_ERROR_OCCURRED)
                .withMonthlyBandwidthCosts(55.11159F)
                .withNetGigabytesTransmittedPerMonth(58.90187F)
                .withName("y")
                .withDisplayName("chrszi")
                .withMacAddress("yuel")
                .withMegabytesPerSecondReceived(24.793839F)
                .withMegabytesPerSecondTransmitted(46.289616F);
        model = BinaryData.fromObject(model).toObject(SqlAssessedNetworkAdapter.class);
        Assertions.assertEquals(CloudSuitability.CONDITIONALLY_SUITABLE, model.suitability());
        Assertions.assertEquals(AzureNetworkAdapterSuitabilityDetail.MEGABYTES_OF_DATA_TRANSMITTED_OUT_OF_RANGE,
            model.suitabilityDetail());
        Assertions.assertEquals(AzureNetworkAdapterSuitabilityExplanation.INTERNAL_ERROR_OCCURRED,
            model.suitabilityExplanation());
        Assertions.assertEquals(55.11159F, model.monthlyBandwidthCosts());
        Assertions.assertEquals(58.90187F, model.netGigabytesTransmittedPerMonth());
        Assertions.assertEquals("y", model.name());
        Assertions.assertEquals("chrszi", model.displayName());
        Assertions.assertEquals("yuel", model.macAddress());
        Assertions.assertEquals(24.793839F, model.megabytesPerSecondReceived());
        Assertions.assertEquals(46.289616F, model.megabytesPerSecondTransmitted());
    }
}
