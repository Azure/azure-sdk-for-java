// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.migration.assessment.fluent.models.SqlAssessmentOptionsInner;
import com.azure.resourcemanager.migration.assessment.models.AzureCurrency;
import com.azure.resourcemanager.migration.assessment.models.AzureLocation;
import com.azure.resourcemanager.migration.assessment.models.AzureOfferCode;
import com.azure.resourcemanager.migration.assessment.models.AzureSqlServiceTier;
import com.azure.resourcemanager.migration.assessment.models.AzureVmFamily;
import com.azure.resourcemanager.migration.assessment.models.ComputeTier;
import com.azure.resourcemanager.migration.assessment.models.HardwareGeneration;
import com.azure.resourcemanager.migration.assessment.models.SqlAssessmentOptionsListResult;
import com.azure.resourcemanager.migration.assessment.models.SqlAssessmentOptionsProperties;
import com.azure.resourcemanager.migration.assessment.models.SqlPaaSTargetOptions;
import com.azure.resourcemanager.migration.assessment.models.TargetType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SqlAssessmentOptionsListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SqlAssessmentOptionsListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"vmFamilies\":[{\"familyName\":\"gzv\",\"targetLocations\":[\"jd\"],\"category\":[\"qnwsithuqolyah\",\"uqwqulsutrjbhxyk\",\"hyqezvqq\"]},{\"familyName\":\"drftbcvexreuquo\",\"targetLocations\":[\"jv\",\"whreagkhyxvrq\",\"vbczsulmdg\"],\"category\":[\"epjpfs\",\"ykgsangpszng\"]},{\"familyName\":\"p\",\"targetLocations\":[\"kvec\",\"ujcngo\"],\"category\":[\"edmzrgjfoknub\",\"oitpkpztrgdgx\"]},{\"familyName\":\"oqraswugyxpqi\",\"targetLocations\":[\"ialwv\",\"kbuhzaca\",\"ty\"],\"category\":[\"oqc\"]}],\"reservedInstanceVmFamilies\":[\"Dsv3_series\",\"Standard_A8_A11\",\"Ev5_series\"],\"premiumDiskVmFamilies\":[\"Unknown\",\"Fs_series\"],\"savingsPlanVmFamilies\":[\"Dav4_series\",\"Fs_series\"],\"savingsPlanSupportedLocations\":[\"GermanyNorth\"],\"savingsPlanSupportedLocationsForPaas\":[\"JapanEast\"],\"reservedInstanceSupportedLocationsForIaas\":[\"AustraliaCentral2\",\"CentralIndia\"],\"savingsPlanSupportedOffers\":[\"MSMCAZR0059P\",\"MSMCAZR0063P\",\"MSAZR0121P\",\"MSAZR0149P\"],\"sqlSkus\":[{\"computeTier\":\"Serverless\",\"hardwareGeneration\":\"Unknown\",\"targetType\":\"Recommended\",\"serviceTier\":\"Automatic\",\"targetLocations\":[\"UsSecWest\",\"GermanyNortheast\"]},{\"computeTier\":\"Serverless\",\"hardwareGeneration\":\"Automatic\",\"targetType\":\"AzureSqlVirtualMachine\",\"serviceTier\":\"GeneralPurpose\",\"targetLocations\":[\"WestUs\",\"ChinaNorth2\"]}],\"reservedInstanceSqlTargets\":[\"Unknown\",\"Recommended\",\"AzureSqlManagedInstance\",\"AzureVirtualMachine\"],\"reservedInstanceSupportedLocations\":[\"NorthEurope\",\"KoreaSouth\",\"WestIndia\",\"AustraliaCentral2\"],\"reservedInstanceSupportedCurrencies\":[\"BRL\",\"DKK\"],\"reservedInstanceSupportedOffers\":[\"MSAZRDE0044P\",\"MSMCAZR0044P\",\"MSMCAZR0128P\"],\"supportedOffers\":[\"MSMCAZR0044P\"]},\"id\":\"lialwcjgckbbcccg\",\"name\":\"praoxn\",\"type\":\"uffatsgftipwc\"}],\"nextLink\":\"yubhiqdx\"}")
            .toObject(SqlAssessmentOptionsListResult.class);
        Assertions.assertEquals(AzureVmFamily.DAV4_SERIES,
            model.value().get(0).properties().savingsPlanVmFamilies().get(0));
        Assertions.assertEquals(AzureLocation.GERMANY_NORTH,
            model.value().get(0).properties().savingsPlanSupportedLocations().get(0));
        Assertions.assertEquals(AzureLocation.JAPAN_EAST,
            model.value().get(0).properties().savingsPlanSupportedLocationsForPaas().get(0));
        Assertions.assertEquals(AzureLocation.AUSTRALIA_CENTRAL2,
            model.value().get(0).properties().reservedInstanceSupportedLocationsForIaas().get(0));
        Assertions.assertEquals(AzureOfferCode.MSMCAZR0059P,
            model.value().get(0).properties().savingsPlanSupportedOffers().get(0));
        Assertions.assertEquals(ComputeTier.SERVERLESS,
            model.value().get(0).properties().sqlSkus().get(0).computeTier());
        Assertions.assertEquals(HardwareGeneration.UNKNOWN,
            model.value().get(0).properties().sqlSkus().get(0).hardwareGeneration());
        Assertions.assertEquals(TargetType.RECOMMENDED,
            model.value().get(0).properties().sqlSkus().get(0).targetType());
        Assertions.assertEquals(AzureSqlServiceTier.AUTOMATIC,
            model.value().get(0).properties().sqlSkus().get(0).serviceTier());
        Assertions.assertEquals(AzureLocation.US_SEC_WEST,
            model.value().get(0).properties().sqlSkus().get(0).targetLocations().get(0));
        Assertions.assertEquals(TargetType.UNKNOWN,
            model.value().get(0).properties().reservedInstanceSqlTargets().get(0));
        Assertions.assertEquals(AzureLocation.NORTH_EUROPE,
            model.value().get(0).properties().reservedInstanceSupportedLocations().get(0));
        Assertions.assertEquals(AzureCurrency.BRL,
            model.value().get(0).properties().reservedInstanceSupportedCurrencies().get(0));
        Assertions.assertEquals(AzureOfferCode.MSAZRDE0044P,
            model.value().get(0).properties().reservedInstanceSupportedOffers().get(0));
        Assertions.assertEquals(AzureOfferCode.MSMCAZR0044P,
            model.value().get(0).properties().supportedOffers().get(0));
        Assertions.assertEquals("yubhiqdx", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SqlAssessmentOptionsListResult model = new SqlAssessmentOptionsListResult()
            .withValue(Arrays.asList(new SqlAssessmentOptionsInner().withProperties(new SqlAssessmentOptionsProperties()
                .withSavingsPlanVmFamilies(Arrays.asList(AzureVmFamily.DAV4_SERIES, AzureVmFamily.FS_SERIES))
                .withSavingsPlanSupportedLocations(Arrays.asList(AzureLocation.GERMANY_NORTH))
                .withSavingsPlanSupportedLocationsForPaas(Arrays.asList(AzureLocation.JAPAN_EAST))
                .withReservedInstanceSupportedLocationsForIaas(
                    Arrays.asList(AzureLocation.AUSTRALIA_CENTRAL2, AzureLocation.CENTRAL_INDIA))
                .withSavingsPlanSupportedOffers(Arrays.asList(AzureOfferCode.MSMCAZR0059P, AzureOfferCode.MSMCAZR0063P,
                    AzureOfferCode.MSAZR0121P, AzureOfferCode.MSAZR0149P))
                .withSqlSkus(Arrays.asList(
                    new SqlPaaSTargetOptions().withComputeTier(ComputeTier.SERVERLESS)
                        .withHardwareGeneration(HardwareGeneration.UNKNOWN)
                        .withTargetType(TargetType.RECOMMENDED)
                        .withServiceTier(AzureSqlServiceTier.AUTOMATIC)
                        .withTargetLocations(Arrays.asList(AzureLocation.US_SEC_WEST, AzureLocation.GERMANY_NORTHEAST)),
                    new SqlPaaSTargetOptions().withComputeTier(ComputeTier.SERVERLESS)
                        .withHardwareGeneration(HardwareGeneration.AUTOMATIC)
                        .withTargetType(TargetType.AZURE_SQL_VIRTUAL_MACHINE)
                        .withServiceTier(AzureSqlServiceTier.GENERAL_PURPOSE)
                        .withTargetLocations(Arrays.asList(AzureLocation.WEST_US, AzureLocation.CHINA_NORTH2))))
                .withReservedInstanceSqlTargets(Arrays.asList(TargetType.UNKNOWN, TargetType.RECOMMENDED,
                    TargetType.AZURE_SQL_MANAGED_INSTANCE, TargetType.AZURE_VIRTUAL_MACHINE))
                .withReservedInstanceSupportedLocations(Arrays.asList(AzureLocation.NORTH_EUROPE,
                    AzureLocation.KOREA_SOUTH, AzureLocation.WEST_INDIA, AzureLocation.AUSTRALIA_CENTRAL2))
                .withReservedInstanceSupportedCurrencies(Arrays.asList(AzureCurrency.BRL, AzureCurrency.DKK))
                .withReservedInstanceSupportedOffers(Arrays.asList(AzureOfferCode.MSAZRDE0044P,
                    AzureOfferCode.MSMCAZR0044P, AzureOfferCode.MSMCAZR0128P))
                .withSupportedOffers(Arrays.asList(AzureOfferCode.MSMCAZR0044P)))))
            .withNextLink("yubhiqdx");
        model = BinaryData.fromObject(model).toObject(SqlAssessmentOptionsListResult.class);
        Assertions.assertEquals(AzureVmFamily.DAV4_SERIES,
            model.value().get(0).properties().savingsPlanVmFamilies().get(0));
        Assertions.assertEquals(AzureLocation.GERMANY_NORTH,
            model.value().get(0).properties().savingsPlanSupportedLocations().get(0));
        Assertions.assertEquals(AzureLocation.JAPAN_EAST,
            model.value().get(0).properties().savingsPlanSupportedLocationsForPaas().get(0));
        Assertions.assertEquals(AzureLocation.AUSTRALIA_CENTRAL2,
            model.value().get(0).properties().reservedInstanceSupportedLocationsForIaas().get(0));
        Assertions.assertEquals(AzureOfferCode.MSMCAZR0059P,
            model.value().get(0).properties().savingsPlanSupportedOffers().get(0));
        Assertions.assertEquals(ComputeTier.SERVERLESS,
            model.value().get(0).properties().sqlSkus().get(0).computeTier());
        Assertions.assertEquals(HardwareGeneration.UNKNOWN,
            model.value().get(0).properties().sqlSkus().get(0).hardwareGeneration());
        Assertions.assertEquals(TargetType.RECOMMENDED,
            model.value().get(0).properties().sqlSkus().get(0).targetType());
        Assertions.assertEquals(AzureSqlServiceTier.AUTOMATIC,
            model.value().get(0).properties().sqlSkus().get(0).serviceTier());
        Assertions.assertEquals(AzureLocation.US_SEC_WEST,
            model.value().get(0).properties().sqlSkus().get(0).targetLocations().get(0));
        Assertions.assertEquals(TargetType.UNKNOWN,
            model.value().get(0).properties().reservedInstanceSqlTargets().get(0));
        Assertions.assertEquals(AzureLocation.NORTH_EUROPE,
            model.value().get(0).properties().reservedInstanceSupportedLocations().get(0));
        Assertions.assertEquals(AzureCurrency.BRL,
            model.value().get(0).properties().reservedInstanceSupportedCurrencies().get(0));
        Assertions.assertEquals(AzureOfferCode.MSAZRDE0044P,
            model.value().get(0).properties().reservedInstanceSupportedOffers().get(0));
        Assertions.assertEquals(AzureOfferCode.MSMCAZR0044P,
            model.value().get(0).properties().supportedOffers().get(0));
        Assertions.assertEquals("yubhiqdx", model.nextLink());
    }
}
