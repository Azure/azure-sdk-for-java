// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.migration.assessment.MigrationAssessmentManager;
import com.azure.resourcemanager.migration.assessment.models.CollectorPropertiesBase;
import com.azure.resourcemanager.migration.assessment.models.ImportCollector;
import com.azure.resourcemanager.migration.assessment.models.ProvisioningState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ImportCollectorsOperationsCreateMockTests {
    @Test
    public void testCreate() throws Exception {
        String responseStr
            = "{\"properties\":{\"discoverySiteId\":\"nhrkmjqncfvdsc\",\"createdTimestamp\":\"2021-05-03T16:49:37Z\",\"updatedTimestamp\":\"2021-03-27T04:54:32Z\",\"provisioningState\":\"Succeeded\"},\"id\":\"qqwypvn\",\"name\":\"r\",\"type\":\"b\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MigrationAssessmentManager manager = MigrationAssessmentManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        ImportCollector response = manager.importCollectorsOperations()
            .define("fvezefk")
            .withExistingAssessmentProject("aqjmkgxqwque", "uylztpziizevjyk")
            .withProperties(new CollectorPropertiesBase().withProvisioningState(ProvisioningState.UPDATING)
                .withDiscoverySiteId("twql"))
            .create();

        Assertions.assertEquals(ProvisioningState.SUCCEEDED, response.properties().provisioningState());
        Assertions.assertEquals("nhrkmjqncfvdsc", response.properties().discoverySiteId());
    }
}
