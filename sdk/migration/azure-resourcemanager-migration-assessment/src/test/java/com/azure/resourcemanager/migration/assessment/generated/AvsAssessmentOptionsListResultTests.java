// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.migration.assessment.fluent.models.AvsAssessmentOptionsInner;
import com.azure.resourcemanager.migration.assessment.models.AvsAssessmentOptionsListResult;
import com.azure.resourcemanager.migration.assessment.models.AvsAssessmentOptionsProperties;
import com.azure.resourcemanager.migration.assessment.models.AvsSkuOptions;
import com.azure.resourcemanager.migration.assessment.models.AzureAvsNodeType;
import com.azure.resourcemanager.migration.assessment.models.AzureCurrency;
import com.azure.resourcemanager.migration.assessment.models.AzureLocation;
import com.azure.resourcemanager.migration.assessment.models.AzureOfferCode;
import com.azure.resourcemanager.migration.assessment.models.FttAndRaidLevel;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AvsAssessmentOptionsListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AvsAssessmentOptionsListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"avsNodes\":[{\"nodeType\":\"AV36\",\"targetLocations\":[\"CanadaEast\",\"USGovTexas\",\"USGovArizona\"]},{\"nodeType\":\"AV36\",\"targetLocations\":[\"ChinaEast\"]}],\"failuresToTolerateAndRaidLevelValues\":[\"Ftt1Raid5\",\"Unknown\",\"Ftt1Raid1\",\"Ftt2Raid1\"],\"reservedInstanceAvsNodes\":[\"Unknown\"],\"reservedInstanceSupportedLocations\":[\"NorwayWest\"],\"reservedInstanceSupportedCurrencies\":[\"MXN\",\"EUR\",\"KRW\",\"MYR\"],\"reservedInstanceSupportedOffers\":[\"Unknown\"]},\"id\":\"xdjzlmwlxk\",\"name\":\"ug\",\"type\":\"hzovawjvzunlut\"},{\"properties\":{\"avsNodes\":[{\"nodeType\":\"Unknown\",\"targetLocations\":[\"USGovVirginia\"]},{\"nodeType\":\"AV36\",\"targetLocations\":[\"AustraliaEast\"]},{\"nodeType\":\"AV36\",\"targetLocations\":[\"USGovTexas\"]}],\"failuresToTolerateAndRaidLevelValues\":[\"Ftt1Raid1\",\"Ftt2Raid6\"],\"reservedInstanceAvsNodes\":[\"Unknown\",\"AV36\"],\"reservedInstanceSupportedLocations\":[\"JapanEast\",\"AustraliaEast\",\"NorthCentralUs\"],\"reservedInstanceSupportedCurrencies\":[\"SEK\"],\"reservedInstanceSupportedOffers\":[\"MSMCAZR0060P\"]},\"id\":\"pwo\",\"name\":\"uh\",\"type\":\"fpbsjyofdxl\"},{\"properties\":{\"avsNodes\":[{\"nodeType\":\"AV36\",\"targetLocations\":[\"USDoDEast\",\"SwitzerlandWest\",\"SwedenCentral\"]},{\"nodeType\":\"Unknown\",\"targetLocations\":[\"USDoDEast\",\"KoreaCentral\"]},{\"nodeType\":\"Unknown\",\"targetLocations\":[\"EastUs2\"]},{\"nodeType\":\"AV36\",\"targetLocations\":[\"JapanWest\",\"SouthAfricaWest\",\"NorthCentralUs\",\"Unknown\"]}],\"failuresToTolerateAndRaidLevelValues\":[\"Ftt3Raid1\",\"Ftt2Raid1\"],\"reservedInstanceAvsNodes\":[\"AV36\"],\"reservedInstanceSupportedLocations\":[\"USGovArizona\",\"UsSecCentral\",\"NorthEurope\",\"NorwayWest\"],\"reservedInstanceSupportedCurrencies\":[\"AUD\"],\"reservedInstanceSupportedOffers\":[\"MSAZR0022P\"]},\"id\":\"aq\",\"name\":\"slyjpkiid\",\"type\":\"yexz\"}],\"nextLink\":\"lixhnrztfol\"}")
            .toObject(AvsAssessmentOptionsListResult.class);
        Assertions.assertEquals(AzureAvsNodeType.AV36, model.value().get(0).properties().avsNodes().get(0).nodeType());
        Assertions.assertEquals(AzureLocation.CANADA_EAST,
            model.value().get(0).properties().avsNodes().get(0).targetLocations().get(0));
        Assertions.assertEquals(FttAndRaidLevel.FTT1RAID5,
            model.value().get(0).properties().failuresToTolerateAndRaidLevelValues().get(0));
        Assertions.assertEquals(AzureAvsNodeType.UNKNOWN,
            model.value().get(0).properties().reservedInstanceAvsNodes().get(0));
        Assertions.assertEquals(AzureLocation.NORWAY_WEST,
            model.value().get(0).properties().reservedInstanceSupportedLocations().get(0));
        Assertions.assertEquals(AzureCurrency.MXN,
            model.value().get(0).properties().reservedInstanceSupportedCurrencies().get(0));
        Assertions.assertEquals(AzureOfferCode.UNKNOWN,
            model.value().get(0).properties().reservedInstanceSupportedOffers().get(0));
        Assertions.assertEquals("lixhnrztfol", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AvsAssessmentOptionsListResult model = new AvsAssessmentOptionsListResult()
            .withValue(Arrays.asList(
                new AvsAssessmentOptionsInner().withProperties(new AvsAssessmentOptionsProperties()
                    .withAvsNodes(Arrays.asList(
                        new AvsSkuOptions().withNodeType(AzureAvsNodeType.AV36)
                            .withTargetLocations(Arrays.asList(AzureLocation.CANADA_EAST, AzureLocation.USGOV_TEXAS,
                                AzureLocation.USGOV_ARIZONA)),
                        new AvsSkuOptions().withNodeType(AzureAvsNodeType.AV36)
                            .withTargetLocations(Arrays.asList(AzureLocation.CHINA_EAST))))
                    .withFailuresToTolerateAndRaidLevelValues(Arrays.asList(FttAndRaidLevel.FTT1RAID5,
                        FttAndRaidLevel.UNKNOWN, FttAndRaidLevel.FTT1RAID1, FttAndRaidLevel.FTT2RAID1))
                    .withReservedInstanceAvsNodes(Arrays.asList(AzureAvsNodeType.UNKNOWN))
                    .withReservedInstanceSupportedLocations(Arrays.asList(AzureLocation.NORWAY_WEST))
                    .withReservedInstanceSupportedCurrencies(
                        Arrays.asList(AzureCurrency.MXN, AzureCurrency.EUR, AzureCurrency.KRW, AzureCurrency.MYR))
                    .withReservedInstanceSupportedOffers(Arrays.asList(AzureOfferCode.UNKNOWN))),
                new AvsAssessmentOptionsInner().withProperties(new AvsAssessmentOptionsProperties()
                    .withAvsNodes(Arrays.asList(
                        new AvsSkuOptions().withNodeType(AzureAvsNodeType.UNKNOWN)
                            .withTargetLocations(Arrays.asList(AzureLocation.USGOV_VIRGINIA)),
                        new AvsSkuOptions().withNodeType(AzureAvsNodeType.AV36)
                            .withTargetLocations(Arrays.asList(AzureLocation.AUSTRALIA_EAST)),
                        new AvsSkuOptions().withNodeType(AzureAvsNodeType.AV36)
                            .withTargetLocations(Arrays.asList(AzureLocation.USGOV_TEXAS))))
                    .withFailuresToTolerateAndRaidLevelValues(
                        Arrays.asList(FttAndRaidLevel.FTT1RAID1, FttAndRaidLevel.FTT2RAID6))
                    .withReservedInstanceAvsNodes(Arrays.asList(AzureAvsNodeType.UNKNOWN, AzureAvsNodeType.AV36))
                    .withReservedInstanceSupportedLocations(Arrays
                        .asList(AzureLocation.JAPAN_EAST, AzureLocation.AUSTRALIA_EAST, AzureLocation.NORTH_CENTRAL_US))
                    .withReservedInstanceSupportedCurrencies(Arrays.asList(AzureCurrency.SEK))
                    .withReservedInstanceSupportedOffers(Arrays.asList(AzureOfferCode.MSMCAZR0060P))),
                new AvsAssessmentOptionsInner().withProperties(new AvsAssessmentOptionsProperties()
                    .withAvsNodes(Arrays.asList(
                        new AvsSkuOptions().withNodeType(AzureAvsNodeType.AV36)
                            .withTargetLocations(Arrays.asList(AzureLocation.USDO_DEAST, AzureLocation.SWITZERLAND_WEST,
                                AzureLocation.SWEDEN_CENTRAL)),
                        new AvsSkuOptions()
                            .withNodeType(AzureAvsNodeType.UNKNOWN)
                            .withTargetLocations(Arrays.asList(AzureLocation.USDO_DEAST, AzureLocation.KOREA_CENTRAL)),
                        new AvsSkuOptions().withNodeType(AzureAvsNodeType.UNKNOWN)
                            .withTargetLocations(Arrays.asList(AzureLocation.EAST_US2)),
                        new AvsSkuOptions().withNodeType(AzureAvsNodeType.AV36)
                            .withTargetLocations(
                                Arrays.asList(AzureLocation.JAPAN_WEST, AzureLocation.SOUTH_AFRICA_WEST,
                                    AzureLocation.NORTH_CENTRAL_US, AzureLocation.UNKNOWN))))
                    .withFailuresToTolerateAndRaidLevelValues(
                        Arrays.asList(FttAndRaidLevel.FTT3RAID1, FttAndRaidLevel.FTT2RAID1))
                    .withReservedInstanceAvsNodes(Arrays.asList(AzureAvsNodeType.AV36))
                    .withReservedInstanceSupportedLocations(Arrays.asList(AzureLocation.USGOV_ARIZONA,
                        AzureLocation.US_SEC_CENTRAL, AzureLocation.NORTH_EUROPE, AzureLocation.NORWAY_WEST))
                    .withReservedInstanceSupportedCurrencies(Arrays.asList(AzureCurrency.AUD))
                    .withReservedInstanceSupportedOffers(Arrays.asList(AzureOfferCode.MSAZR0022P)))))
            .withNextLink("lixhnrztfol");
        model = BinaryData.fromObject(model).toObject(AvsAssessmentOptionsListResult.class);
        Assertions.assertEquals(AzureAvsNodeType.AV36, model.value().get(0).properties().avsNodes().get(0).nodeType());
        Assertions.assertEquals(AzureLocation.CANADA_EAST,
            model.value().get(0).properties().avsNodes().get(0).targetLocations().get(0));
        Assertions.assertEquals(FttAndRaidLevel.FTT1RAID5,
            model.value().get(0).properties().failuresToTolerateAndRaidLevelValues().get(0));
        Assertions.assertEquals(AzureAvsNodeType.UNKNOWN,
            model.value().get(0).properties().reservedInstanceAvsNodes().get(0));
        Assertions.assertEquals(AzureLocation.NORWAY_WEST,
            model.value().get(0).properties().reservedInstanceSupportedLocations().get(0));
        Assertions.assertEquals(AzureCurrency.MXN,
            model.value().get(0).properties().reservedInstanceSupportedCurrencies().get(0));
        Assertions.assertEquals(AzureOfferCode.UNKNOWN,
            model.value().get(0).properties().reservedInstanceSupportedOffers().get(0));
        Assertions.assertEquals("lixhnrztfol", model.nextLink());
    }
}
