// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.migration.assessment.models.AssessedNetworkAdapter;
import com.azure.resourcemanager.migration.assessment.models.AzureNetworkAdapterSuitabilityDetail;
import com.azure.resourcemanager.migration.assessment.models.AzureNetworkAdapterSuitabilityExplanation;
import com.azure.resourcemanager.migration.assessment.models.CloudSuitability;
import org.junit.jupiter.api.Assertions;

public final class AssessedNetworkAdapterTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AssessedNetworkAdapter model = BinaryData.fromString(
            "{\"suitability\":\"Unknown\",\"suitabilityDetail\":\"MegabytesOfDataRecievedOutOfRange\",\"suitabilityExplanation\":\"Unknown\",\"monthlyBandwidthCosts\":82.95103,\"netGigabytesTransmittedPerMonth\":64.28258,\"displayName\":\"mibzyhwitsmypyyn\",\"macAddress\":\"dpumnzgmw\",\"ipAddresses\":[\"abikns\",\"rgjhxb\",\"dtlwwrlkd\",\"tncvokot\"],\"megabytesPerSecondReceived\":14.993447,\"megabytesPerSecondTransmitted\":25.275595}")
            .toObject(AssessedNetworkAdapter.class);
        Assertions.assertEquals(CloudSuitability.UNKNOWN, model.suitability());
        Assertions.assertEquals(AzureNetworkAdapterSuitabilityDetail.MEGABYTES_OF_DATA_RECIEVED_OUT_OF_RANGE,
            model.suitabilityDetail());
        Assertions.assertEquals(AzureNetworkAdapterSuitabilityExplanation.UNKNOWN, model.suitabilityExplanation());
        Assertions.assertEquals(82.95103F, model.monthlyBandwidthCosts());
        Assertions.assertEquals(64.28258F, model.netGigabytesTransmittedPerMonth());
        Assertions.assertEquals("mibzyhwitsmypyyn", model.displayName());
        Assertions.assertEquals("dpumnzgmw", model.macAddress());
        Assertions.assertEquals(14.993447F, model.megabytesPerSecondReceived());
        Assertions.assertEquals(25.275595F, model.megabytesPerSecondTransmitted());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AssessedNetworkAdapter model = new AssessedNetworkAdapter().withSuitability(CloudSuitability.UNKNOWN)
            .withSuitabilityDetail(AzureNetworkAdapterSuitabilityDetail.MEGABYTES_OF_DATA_RECIEVED_OUT_OF_RANGE)
            .withSuitabilityExplanation(AzureNetworkAdapterSuitabilityExplanation.UNKNOWN)
            .withMonthlyBandwidthCosts(82.95103F)
            .withNetGigabytesTransmittedPerMonth(64.28258F)
            .withDisplayName("mibzyhwitsmypyyn")
            .withMacAddress("dpumnzgmw")
            .withMegabytesPerSecondReceived(14.993447F)
            .withMegabytesPerSecondTransmitted(25.275595F);
        model = BinaryData.fromObject(model).toObject(AssessedNetworkAdapter.class);
        Assertions.assertEquals(CloudSuitability.UNKNOWN, model.suitability());
        Assertions.assertEquals(AzureNetworkAdapterSuitabilityDetail.MEGABYTES_OF_DATA_RECIEVED_OUT_OF_RANGE,
            model.suitabilityDetail());
        Assertions.assertEquals(AzureNetworkAdapterSuitabilityExplanation.UNKNOWN, model.suitabilityExplanation());
        Assertions.assertEquals(82.95103F, model.monthlyBandwidthCosts());
        Assertions.assertEquals(64.28258F, model.netGigabytesTransmittedPerMonth());
        Assertions.assertEquals("mibzyhwitsmypyyn", model.displayName());
        Assertions.assertEquals("dpumnzgmw", model.macAddress());
        Assertions.assertEquals(14.993447F, model.megabytesPerSecondReceived());
        Assertions.assertEquals(25.275595F, model.megabytesPerSecondTransmitted());
    }
}
