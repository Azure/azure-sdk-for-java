// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.migration.assessment.models.AssessedDisk;
import com.azure.resourcemanager.migration.assessment.models.AzureDiskSize;
import com.azure.resourcemanager.migration.assessment.models.AzureDiskSuitabilityDetail;
import com.azure.resourcemanager.migration.assessment.models.AzureDiskSuitabilityExplanation;
import com.azure.resourcemanager.migration.assessment.models.AzureDiskType;
import com.azure.resourcemanager.migration.assessment.models.CloudSuitability;
import org.junit.jupiter.api.Assertions;

public final class AssessedDiskTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AssessedDisk model = BinaryData.fromString(
            "{\"suitability\":\"Unknown\",\"suitabilityExplanation\":\"NoDiskSizeFoundForSelectedRedundancy\",\"suitabilityDetail\":\"MegabytesPerSecondOfWriteMissing\",\"recommendedDiskSize\":\"Premium_P1\",\"recommendedDiskType\":\"StandardOrPremium\",\"gigabytesForRecommendedDiskSize\":1182920658,\"recommendDiskThroughputInMbps\":6.1038675,\"recommendedDiskIops\":32.54612,\"monthlyStorageCost\":30.48998,\"name\":\"qkacewii\",\"displayName\":\"pubjibw\",\"gigabytesProvisioned\":5.9326353,\"megabytesPerSecondOfRead\":86.60929,\"megabytesPerSecondOfWrite\":90.61733,\"numberOfReadOperationsPerSecond\":31.865799,\"numberOfWriteOperationsPerSecond\":99.55644}")
            .toObject(AssessedDisk.class);
        Assertions.assertEquals(CloudSuitability.UNKNOWN, model.suitability());
        Assertions.assertEquals(AzureDiskSuitabilityExplanation.NO_DISK_SIZE_FOUND_FOR_SELECTED_REDUNDANCY,
            model.suitabilityExplanation());
        Assertions.assertEquals(AzureDiskSuitabilityDetail.MEGABYTES_PER_SECOND_OF_WRITE_MISSING,
            model.suitabilityDetail());
        Assertions.assertEquals(AzureDiskSize.PREMIUM_P1, model.recommendedDiskSize());
        Assertions.assertEquals(AzureDiskType.STANDARD_OR_PREMIUM, model.recommendedDiskType());
        Assertions.assertEquals(1182920658, model.gigabytesForRecommendedDiskSize());
        Assertions.assertEquals(6.1038675F, model.recommendDiskThroughputInMbps());
        Assertions.assertEquals(32.54612F, model.recommendedDiskIops());
        Assertions.assertEquals(30.48998F, model.monthlyStorageCost());
        Assertions.assertEquals("qkacewii", model.name());
        Assertions.assertEquals("pubjibw", model.displayName());
        Assertions.assertEquals(5.9326353F, model.gigabytesProvisioned());
        Assertions.assertEquals(86.60929F, model.megabytesPerSecondOfRead());
        Assertions.assertEquals(90.61733F, model.megabytesPerSecondOfWrite());
        Assertions.assertEquals(31.865799F, model.numberOfReadOperationsPerSecond());
        Assertions.assertEquals(99.55644F, model.numberOfWriteOperationsPerSecond());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AssessedDisk model = new AssessedDisk().withSuitability(CloudSuitability.UNKNOWN)
            .withSuitabilityExplanation(AzureDiskSuitabilityExplanation.NO_DISK_SIZE_FOUND_FOR_SELECTED_REDUNDANCY)
            .withSuitabilityDetail(AzureDiskSuitabilityDetail.MEGABYTES_PER_SECOND_OF_WRITE_MISSING)
            .withRecommendedDiskSize(AzureDiskSize.PREMIUM_P1)
            .withRecommendedDiskType(AzureDiskType.STANDARD_OR_PREMIUM)
            .withGigabytesForRecommendedDiskSize(1182920658)
            .withRecommendDiskThroughputInMbps(6.1038675F)
            .withRecommendedDiskIops(32.54612F)
            .withMonthlyStorageCost(30.48998F)
            .withName("qkacewii")
            .withDisplayName("pubjibw")
            .withGigabytesProvisioned(5.9326353F)
            .withMegabytesPerSecondOfRead(86.60929F)
            .withMegabytesPerSecondOfWrite(90.61733F)
            .withNumberOfReadOperationsPerSecond(31.865799F)
            .withNumberOfWriteOperationsPerSecond(99.55644F);
        model = BinaryData.fromObject(model).toObject(AssessedDisk.class);
        Assertions.assertEquals(CloudSuitability.UNKNOWN, model.suitability());
        Assertions.assertEquals(AzureDiskSuitabilityExplanation.NO_DISK_SIZE_FOUND_FOR_SELECTED_REDUNDANCY,
            model.suitabilityExplanation());
        Assertions.assertEquals(AzureDiskSuitabilityDetail.MEGABYTES_PER_SECOND_OF_WRITE_MISSING,
            model.suitabilityDetail());
        Assertions.assertEquals(AzureDiskSize.PREMIUM_P1, model.recommendedDiskSize());
        Assertions.assertEquals(AzureDiskType.STANDARD_OR_PREMIUM, model.recommendedDiskType());
        Assertions.assertEquals(1182920658, model.gigabytesForRecommendedDiskSize());
        Assertions.assertEquals(6.1038675F, model.recommendDiskThroughputInMbps());
        Assertions.assertEquals(32.54612F, model.recommendedDiskIops());
        Assertions.assertEquals(30.48998F, model.monthlyStorageCost());
        Assertions.assertEquals("qkacewii", model.name());
        Assertions.assertEquals("pubjibw", model.displayName());
        Assertions.assertEquals(5.9326353F, model.gigabytesProvisioned());
        Assertions.assertEquals(86.60929F, model.megabytesPerSecondOfRead());
        Assertions.assertEquals(90.61733F, model.megabytesPerSecondOfWrite());
        Assertions.assertEquals(31.865799F, model.numberOfReadOperationsPerSecond());
        Assertions.assertEquals(99.55644F, model.numberOfWriteOperationsPerSecond());
    }
}
