// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.migration.assessment.fluent.PrivateLinkResourceOperationsClient;
import com.azure.resourcemanager.migration.assessment.fluent.models.PrivateLinkResourceInner;
import com.azure.resourcemanager.migration.assessment.models.PrivateLinkResource;
import com.azure.resourcemanager.migration.assessment.models.PrivateLinkResourceOperations;

public final class PrivateLinkResourceOperationsImpl implements PrivateLinkResourceOperations {
    private static final ClientLogger LOGGER = new ClientLogger(PrivateLinkResourceOperationsImpl.class);

    private final PrivateLinkResourceOperationsClient innerClient;

    private final com.azure.resourcemanager.migration.assessment.MigrationAssessmentManager serviceManager;

    public PrivateLinkResourceOperationsImpl(PrivateLinkResourceOperationsClient innerClient,
        com.azure.resourcemanager.migration.assessment.MigrationAssessmentManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<PrivateLinkResource> listByAssessmentProject(String resourceGroupName, String projectName) {
        PagedIterable<PrivateLinkResourceInner> inner
            = this.serviceClient().listByAssessmentProject(resourceGroupName, projectName);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new PrivateLinkResourceImpl(inner1, this.manager()));
    }

    public PagedIterable<PrivateLinkResource> listByAssessmentProject(String resourceGroupName, String projectName,
        Context context) {
        PagedIterable<PrivateLinkResourceInner> inner
            = this.serviceClient().listByAssessmentProject(resourceGroupName, projectName, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new PrivateLinkResourceImpl(inner1, this.manager()));
    }

    public Response<PrivateLinkResource> getWithResponse(String resourceGroupName, String projectName,
        String privateLinkResourceName, Context context) {
        Response<PrivateLinkResourceInner> inner
            = this.serviceClient().getWithResponse(resourceGroupName, projectName, privateLinkResourceName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new PrivateLinkResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public PrivateLinkResource get(String resourceGroupName, String projectName, String privateLinkResourceName) {
        PrivateLinkResourceInner inner
            = this.serviceClient().get(resourceGroupName, projectName, privateLinkResourceName);
        if (inner != null) {
            return new PrivateLinkResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private PrivateLinkResourceOperationsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.migration.assessment.MigrationAssessmentManager manager() {
        return this.serviceManager;
    }
}
