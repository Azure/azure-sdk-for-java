// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.migration.assessment.fluent.models.SqlCollectorInner;
import com.azure.resourcemanager.migration.assessment.models.CollectorPropertiesBaseWithAgent;
import com.azure.resourcemanager.migration.assessment.models.SqlCollector;

public final class SqlCollectorImpl implements SqlCollector, SqlCollector.Definition {
    private SqlCollectorInner innerObject;

    private final com.azure.resourcemanager.migration.assessment.MigrationAssessmentManager serviceManager;

    SqlCollectorImpl(SqlCollectorInner innerObject,
        com.azure.resourcemanager.migration.assessment.MigrationAssessmentManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public CollectorPropertiesBaseWithAgent properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public SqlCollectorInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.migration.assessment.MigrationAssessmentManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String projectName;

    private String collectorName;

    public SqlCollectorImpl withExistingAssessmentProject(String resourceGroupName, String projectName) {
        this.resourceGroupName = resourceGroupName;
        this.projectName = projectName;
        return this;
    }

    public SqlCollector create() {
        this.innerObject = serviceManager.serviceClient()
            .getSqlCollectorOperations()
            .create(resourceGroupName, projectName, collectorName, this.innerModel(), Context.NONE);
        return this;
    }

    public SqlCollector create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getSqlCollectorOperations()
            .create(resourceGroupName, projectName, collectorName, this.innerModel(), context);
        return this;
    }

    SqlCollectorImpl(String name,
        com.azure.resourcemanager.migration.assessment.MigrationAssessmentManager serviceManager) {
        this.innerObject = new SqlCollectorInner();
        this.serviceManager = serviceManager;
        this.collectorName = name;
    }

    public SqlCollector refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getSqlCollectorOperations()
            .getWithResponse(resourceGroupName, projectName, collectorName, Context.NONE)
            .getValue();
        return this;
    }

    public SqlCollector refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getSqlCollectorOperations()
            .getWithResponse(resourceGroupName, projectName, collectorName, context)
            .getValue();
        return this;
    }

    public SqlCollectorImpl withProperties(CollectorPropertiesBaseWithAgent properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}
