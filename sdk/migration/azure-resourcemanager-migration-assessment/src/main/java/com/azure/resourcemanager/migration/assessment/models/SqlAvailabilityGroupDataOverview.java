// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Assessed Sql Availability Group Data Overview.
 */
@Fluent
public final class SqlAvailabilityGroupDataOverview implements JsonSerializable<SqlAvailabilityGroupDataOverview> {
    /*
     * Gets the availability group id.
     */
    private String availabilityGroupId;

    /*
     * Gets the availability group name.
     */
    private String availabilityGroupName;

    /*
     * Gets the availability group arm id.
     */
    private String sqlAvailabilityGroupSdsArmId;

    /*
     * Gets the availability group entity id.
     */
    private String sqlAvailabilityGroupEntityId;

    /*
     * Gets the availability replica id.
     */
    private String sqlAvailabilityReplicaId;

    /**
     * Creates an instance of SqlAvailabilityGroupDataOverview class.
     */
    public SqlAvailabilityGroupDataOverview() {
    }

    /**
     * Get the availabilityGroupId property: Gets the availability group id.
     * 
     * @return the availabilityGroupId value.
     */
    public String availabilityGroupId() {
        return this.availabilityGroupId;
    }

    /**
     * Set the availabilityGroupId property: Gets the availability group id.
     * 
     * @param availabilityGroupId the availabilityGroupId value to set.
     * @return the SqlAvailabilityGroupDataOverview object itself.
     */
    public SqlAvailabilityGroupDataOverview withAvailabilityGroupId(String availabilityGroupId) {
        this.availabilityGroupId = availabilityGroupId;
        return this;
    }

    /**
     * Get the availabilityGroupName property: Gets the availability group name.
     * 
     * @return the availabilityGroupName value.
     */
    public String availabilityGroupName() {
        return this.availabilityGroupName;
    }

    /**
     * Set the availabilityGroupName property: Gets the availability group name.
     * 
     * @param availabilityGroupName the availabilityGroupName value to set.
     * @return the SqlAvailabilityGroupDataOverview object itself.
     */
    public SqlAvailabilityGroupDataOverview withAvailabilityGroupName(String availabilityGroupName) {
        this.availabilityGroupName = availabilityGroupName;
        return this;
    }

    /**
     * Get the sqlAvailabilityGroupSdsArmId property: Gets the availability group arm id.
     * 
     * @return the sqlAvailabilityGroupSdsArmId value.
     */
    public String sqlAvailabilityGroupSdsArmId() {
        return this.sqlAvailabilityGroupSdsArmId;
    }

    /**
     * Set the sqlAvailabilityGroupSdsArmId property: Gets the availability group arm id.
     * 
     * @param sqlAvailabilityGroupSdsArmId the sqlAvailabilityGroupSdsArmId value to set.
     * @return the SqlAvailabilityGroupDataOverview object itself.
     */
    public SqlAvailabilityGroupDataOverview withSqlAvailabilityGroupSdsArmId(String sqlAvailabilityGroupSdsArmId) {
        this.sqlAvailabilityGroupSdsArmId = sqlAvailabilityGroupSdsArmId;
        return this;
    }

    /**
     * Get the sqlAvailabilityGroupEntityId property: Gets the availability group entity id.
     * 
     * @return the sqlAvailabilityGroupEntityId value.
     */
    public String sqlAvailabilityGroupEntityId() {
        return this.sqlAvailabilityGroupEntityId;
    }

    /**
     * Set the sqlAvailabilityGroupEntityId property: Gets the availability group entity id.
     * 
     * @param sqlAvailabilityGroupEntityId the sqlAvailabilityGroupEntityId value to set.
     * @return the SqlAvailabilityGroupDataOverview object itself.
     */
    public SqlAvailabilityGroupDataOverview withSqlAvailabilityGroupEntityId(String sqlAvailabilityGroupEntityId) {
        this.sqlAvailabilityGroupEntityId = sqlAvailabilityGroupEntityId;
        return this;
    }

    /**
     * Get the sqlAvailabilityReplicaId property: Gets the availability replica id.
     * 
     * @return the sqlAvailabilityReplicaId value.
     */
    public String sqlAvailabilityReplicaId() {
        return this.sqlAvailabilityReplicaId;
    }

    /**
     * Set the sqlAvailabilityReplicaId property: Gets the availability replica id.
     * 
     * @param sqlAvailabilityReplicaId the sqlAvailabilityReplicaId value to set.
     * @return the SqlAvailabilityGroupDataOverview object itself.
     */
    public SqlAvailabilityGroupDataOverview withSqlAvailabilityReplicaId(String sqlAvailabilityReplicaId) {
        this.sqlAvailabilityReplicaId = sqlAvailabilityReplicaId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("availabilityGroupId", this.availabilityGroupId);
        jsonWriter.writeStringField("availabilityGroupName", this.availabilityGroupName);
        jsonWriter.writeStringField("sqlAvailabilityGroupSdsArmId", this.sqlAvailabilityGroupSdsArmId);
        jsonWriter.writeStringField("sqlAvailabilityGroupEntityId", this.sqlAvailabilityGroupEntityId);
        jsonWriter.writeStringField("sqlAvailabilityReplicaId", this.sqlAvailabilityReplicaId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SqlAvailabilityGroupDataOverview from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SqlAvailabilityGroupDataOverview if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SqlAvailabilityGroupDataOverview.
     */
    public static SqlAvailabilityGroupDataOverview fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SqlAvailabilityGroupDataOverview deserializedSqlAvailabilityGroupDataOverview
                = new SqlAvailabilityGroupDataOverview();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("availabilityGroupId".equals(fieldName)) {
                    deserializedSqlAvailabilityGroupDataOverview.availabilityGroupId = reader.getString();
                } else if ("availabilityGroupName".equals(fieldName)) {
                    deserializedSqlAvailabilityGroupDataOverview.availabilityGroupName = reader.getString();
                } else if ("sqlAvailabilityGroupSdsArmId".equals(fieldName)) {
                    deserializedSqlAvailabilityGroupDataOverview.sqlAvailabilityGroupSdsArmId = reader.getString();
                } else if ("sqlAvailabilityGroupEntityId".equals(fieldName)) {
                    deserializedSqlAvailabilityGroupDataOverview.sqlAvailabilityGroupEntityId = reader.getString();
                } else if ("sqlAvailabilityReplicaId".equals(fieldName)) {
                    deserializedSqlAvailabilityGroupDataOverview.sqlAvailabilityReplicaId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSqlAvailabilityGroupDataOverview;
        });
    }
}
