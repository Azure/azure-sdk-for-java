// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * AVS Assessment options properties.
 */
@Fluent
public final class AvsAssessmentOptionsProperties implements JsonSerializable<AvsAssessmentOptionsProperties> {
    /*
     * AVS SKU Nodes.
     */
    private List<AvsSkuOptions> avsNodes;

    /*
     * FTT and Raid level values.
     */
    private List<FttAndRaidLevel> failuresToTolerateAndRaidLevelValues;

    /*
     * List of AVS nodes for RI.
     */
    private List<AzureAvsNodeType> reservedInstanceAvsNodes;

    /*
     * List of supported Azure regions for reserved instances.
     */
    private List<AzureLocation> reservedInstanceSupportedLocations;

    /*
     * List of supported currencies for reserved instances.
     */
    private List<AzureCurrency> reservedInstanceSupportedCurrencies;

    /*
     * List of supported Azure offer codes for reserved instances.
     */
    private List<AzureOfferCode> reservedInstanceSupportedOffers;

    /**
     * Creates an instance of AvsAssessmentOptionsProperties class.
     */
    public AvsAssessmentOptionsProperties() {
    }

    /**
     * Get the avsNodes property: AVS SKU Nodes.
     * 
     * @return the avsNodes value.
     */
    public List<AvsSkuOptions> avsNodes() {
        return this.avsNodes;
    }

    /**
     * Set the avsNodes property: AVS SKU Nodes.
     * 
     * @param avsNodes the avsNodes value to set.
     * @return the AvsAssessmentOptionsProperties object itself.
     */
    public AvsAssessmentOptionsProperties withAvsNodes(List<AvsSkuOptions> avsNodes) {
        this.avsNodes = avsNodes;
        return this;
    }

    /**
     * Get the failuresToTolerateAndRaidLevelValues property: FTT and Raid level values.
     * 
     * @return the failuresToTolerateAndRaidLevelValues value.
     */
    public List<FttAndRaidLevel> failuresToTolerateAndRaidLevelValues() {
        return this.failuresToTolerateAndRaidLevelValues;
    }

    /**
     * Set the failuresToTolerateAndRaidLevelValues property: FTT and Raid level values.
     * 
     * @param failuresToTolerateAndRaidLevelValues the failuresToTolerateAndRaidLevelValues value to set.
     * @return the AvsAssessmentOptionsProperties object itself.
     */
    public AvsAssessmentOptionsProperties
        withFailuresToTolerateAndRaidLevelValues(List<FttAndRaidLevel> failuresToTolerateAndRaidLevelValues) {
        this.failuresToTolerateAndRaidLevelValues = failuresToTolerateAndRaidLevelValues;
        return this;
    }

    /**
     * Get the reservedInstanceAvsNodes property: List of AVS nodes for RI.
     * 
     * @return the reservedInstanceAvsNodes value.
     */
    public List<AzureAvsNodeType> reservedInstanceAvsNodes() {
        return this.reservedInstanceAvsNodes;
    }

    /**
     * Set the reservedInstanceAvsNodes property: List of AVS nodes for RI.
     * 
     * @param reservedInstanceAvsNodes the reservedInstanceAvsNodes value to set.
     * @return the AvsAssessmentOptionsProperties object itself.
     */
    public AvsAssessmentOptionsProperties
        withReservedInstanceAvsNodes(List<AzureAvsNodeType> reservedInstanceAvsNodes) {
        this.reservedInstanceAvsNodes = reservedInstanceAvsNodes;
        return this;
    }

    /**
     * Get the reservedInstanceSupportedLocations property: List of supported Azure regions for reserved instances.
     * 
     * @return the reservedInstanceSupportedLocations value.
     */
    public List<AzureLocation> reservedInstanceSupportedLocations() {
        return this.reservedInstanceSupportedLocations;
    }

    /**
     * Set the reservedInstanceSupportedLocations property: List of supported Azure regions for reserved instances.
     * 
     * @param reservedInstanceSupportedLocations the reservedInstanceSupportedLocations value to set.
     * @return the AvsAssessmentOptionsProperties object itself.
     */
    public AvsAssessmentOptionsProperties
        withReservedInstanceSupportedLocations(List<AzureLocation> reservedInstanceSupportedLocations) {
        this.reservedInstanceSupportedLocations = reservedInstanceSupportedLocations;
        return this;
    }

    /**
     * Get the reservedInstanceSupportedCurrencies property: List of supported currencies for reserved instances.
     * 
     * @return the reservedInstanceSupportedCurrencies value.
     */
    public List<AzureCurrency> reservedInstanceSupportedCurrencies() {
        return this.reservedInstanceSupportedCurrencies;
    }

    /**
     * Set the reservedInstanceSupportedCurrencies property: List of supported currencies for reserved instances.
     * 
     * @param reservedInstanceSupportedCurrencies the reservedInstanceSupportedCurrencies value to set.
     * @return the AvsAssessmentOptionsProperties object itself.
     */
    public AvsAssessmentOptionsProperties
        withReservedInstanceSupportedCurrencies(List<AzureCurrency> reservedInstanceSupportedCurrencies) {
        this.reservedInstanceSupportedCurrencies = reservedInstanceSupportedCurrencies;
        return this;
    }

    /**
     * Get the reservedInstanceSupportedOffers property: List of supported Azure offer codes for reserved instances.
     * 
     * @return the reservedInstanceSupportedOffers value.
     */
    public List<AzureOfferCode> reservedInstanceSupportedOffers() {
        return this.reservedInstanceSupportedOffers;
    }

    /**
     * Set the reservedInstanceSupportedOffers property: List of supported Azure offer codes for reserved instances.
     * 
     * @param reservedInstanceSupportedOffers the reservedInstanceSupportedOffers value to set.
     * @return the AvsAssessmentOptionsProperties object itself.
     */
    public AvsAssessmentOptionsProperties
        withReservedInstanceSupportedOffers(List<AzureOfferCode> reservedInstanceSupportedOffers) {
        this.reservedInstanceSupportedOffers = reservedInstanceSupportedOffers;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (avsNodes() != null) {
            avsNodes().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("avsNodes", this.avsNodes, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeArrayField("failuresToTolerateAndRaidLevelValues", this.failuresToTolerateAndRaidLevelValues,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeArrayField("reservedInstanceAvsNodes", this.reservedInstanceAvsNodes,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeArrayField("reservedInstanceSupportedLocations", this.reservedInstanceSupportedLocations,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeArrayField("reservedInstanceSupportedCurrencies", this.reservedInstanceSupportedCurrencies,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeArrayField("reservedInstanceSupportedOffers", this.reservedInstanceSupportedOffers,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AvsAssessmentOptionsProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AvsAssessmentOptionsProperties if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AvsAssessmentOptionsProperties.
     */
    public static AvsAssessmentOptionsProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AvsAssessmentOptionsProperties deserializedAvsAssessmentOptionsProperties
                = new AvsAssessmentOptionsProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("avsNodes".equals(fieldName)) {
                    List<AvsSkuOptions> avsNodes = reader.readArray(reader1 -> AvsSkuOptions.fromJson(reader1));
                    deserializedAvsAssessmentOptionsProperties.avsNodes = avsNodes;
                } else if ("failuresToTolerateAndRaidLevelValues".equals(fieldName)) {
                    List<FttAndRaidLevel> failuresToTolerateAndRaidLevelValues
                        = reader.readArray(reader1 -> FttAndRaidLevel.fromString(reader1.getString()));
                    deserializedAvsAssessmentOptionsProperties.failuresToTolerateAndRaidLevelValues
                        = failuresToTolerateAndRaidLevelValues;
                } else if ("reservedInstanceAvsNodes".equals(fieldName)) {
                    List<AzureAvsNodeType> reservedInstanceAvsNodes
                        = reader.readArray(reader1 -> AzureAvsNodeType.fromString(reader1.getString()));
                    deserializedAvsAssessmentOptionsProperties.reservedInstanceAvsNodes = reservedInstanceAvsNodes;
                } else if ("reservedInstanceSupportedLocations".equals(fieldName)) {
                    List<AzureLocation> reservedInstanceSupportedLocations
                        = reader.readArray(reader1 -> AzureLocation.fromString(reader1.getString()));
                    deserializedAvsAssessmentOptionsProperties.reservedInstanceSupportedLocations
                        = reservedInstanceSupportedLocations;
                } else if ("reservedInstanceSupportedCurrencies".equals(fieldName)) {
                    List<AzureCurrency> reservedInstanceSupportedCurrencies
                        = reader.readArray(reader1 -> AzureCurrency.fromString(reader1.getString()));
                    deserializedAvsAssessmentOptionsProperties.reservedInstanceSupportedCurrencies
                        = reservedInstanceSupportedCurrencies;
                } else if ("reservedInstanceSupportedOffers".equals(fieldName)) {
                    List<AzureOfferCode> reservedInstanceSupportedOffers
                        = reader.readArray(reader1 -> AzureOfferCode.fromString(reader1.getString()));
                    deserializedAvsAssessmentOptionsProperties.reservedInstanceSupportedOffers
                        = reservedInstanceSupportedOffers;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAvsAssessmentOptionsProperties;
        });
    }
}
