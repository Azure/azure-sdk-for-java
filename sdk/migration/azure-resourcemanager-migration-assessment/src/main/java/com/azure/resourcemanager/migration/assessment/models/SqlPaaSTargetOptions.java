// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * SQL target options.
 */
@Fluent
public final class SqlPaaSTargetOptions implements JsonSerializable<SqlPaaSTargetOptions> {
    /*
     * Gets or sets the Azure SQL compute tier.
     */
    private ComputeTier computeTier;

    /*
     * Gets or sets the Azure SQL hardware generation.
     */
    private HardwareGeneration hardwareGeneration;

    /*
     * Gets or sets the Azure SQL target type.
     */
    private TargetType targetType;

    /*
     * Gets or sets the Azure SQL service tier.
     */
    private AzureSqlServiceTier serviceTier;

    /*
     * Gets or sets the target location.
     */
    private List<AzureLocation> targetLocations;

    /**
     * Creates an instance of SqlPaaSTargetOptions class.
     */
    public SqlPaaSTargetOptions() {
    }

    /**
     * Get the computeTier property: Gets or sets the Azure SQL compute tier.
     * 
     * @return the computeTier value.
     */
    public ComputeTier computeTier() {
        return this.computeTier;
    }

    /**
     * Set the computeTier property: Gets or sets the Azure SQL compute tier.
     * 
     * @param computeTier the computeTier value to set.
     * @return the SqlPaaSTargetOptions object itself.
     */
    public SqlPaaSTargetOptions withComputeTier(ComputeTier computeTier) {
        this.computeTier = computeTier;
        return this;
    }

    /**
     * Get the hardwareGeneration property: Gets or sets the Azure SQL hardware generation.
     * 
     * @return the hardwareGeneration value.
     */
    public HardwareGeneration hardwareGeneration() {
        return this.hardwareGeneration;
    }

    /**
     * Set the hardwareGeneration property: Gets or sets the Azure SQL hardware generation.
     * 
     * @param hardwareGeneration the hardwareGeneration value to set.
     * @return the SqlPaaSTargetOptions object itself.
     */
    public SqlPaaSTargetOptions withHardwareGeneration(HardwareGeneration hardwareGeneration) {
        this.hardwareGeneration = hardwareGeneration;
        return this;
    }

    /**
     * Get the targetType property: Gets or sets the Azure SQL target type.
     * 
     * @return the targetType value.
     */
    public TargetType targetType() {
        return this.targetType;
    }

    /**
     * Set the targetType property: Gets or sets the Azure SQL target type.
     * 
     * @param targetType the targetType value to set.
     * @return the SqlPaaSTargetOptions object itself.
     */
    public SqlPaaSTargetOptions withTargetType(TargetType targetType) {
        this.targetType = targetType;
        return this;
    }

    /**
     * Get the serviceTier property: Gets or sets the Azure SQL service tier.
     * 
     * @return the serviceTier value.
     */
    public AzureSqlServiceTier serviceTier() {
        return this.serviceTier;
    }

    /**
     * Set the serviceTier property: Gets or sets the Azure SQL service tier.
     * 
     * @param serviceTier the serviceTier value to set.
     * @return the SqlPaaSTargetOptions object itself.
     */
    public SqlPaaSTargetOptions withServiceTier(AzureSqlServiceTier serviceTier) {
        this.serviceTier = serviceTier;
        return this;
    }

    /**
     * Get the targetLocations property: Gets or sets the target location.
     * 
     * @return the targetLocations value.
     */
    public List<AzureLocation> targetLocations() {
        return this.targetLocations;
    }

    /**
     * Set the targetLocations property: Gets or sets the target location.
     * 
     * @param targetLocations the targetLocations value to set.
     * @return the SqlPaaSTargetOptions object itself.
     */
    public SqlPaaSTargetOptions withTargetLocations(List<AzureLocation> targetLocations) {
        this.targetLocations = targetLocations;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("computeTier", this.computeTier == null ? null : this.computeTier.toString());
        jsonWriter.writeStringField("hardwareGeneration",
            this.hardwareGeneration == null ? null : this.hardwareGeneration.toString());
        jsonWriter.writeStringField("targetType", this.targetType == null ? null : this.targetType.toString());
        jsonWriter.writeStringField("serviceTier", this.serviceTier == null ? null : this.serviceTier.toString());
        jsonWriter.writeArrayField("targetLocations", this.targetLocations,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SqlPaaSTargetOptions from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SqlPaaSTargetOptions if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SqlPaaSTargetOptions.
     */
    public static SqlPaaSTargetOptions fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SqlPaaSTargetOptions deserializedSqlPaaSTargetOptions = new SqlPaaSTargetOptions();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("computeTier".equals(fieldName)) {
                    deserializedSqlPaaSTargetOptions.computeTier = ComputeTier.fromString(reader.getString());
                } else if ("hardwareGeneration".equals(fieldName)) {
                    deserializedSqlPaaSTargetOptions.hardwareGeneration
                        = HardwareGeneration.fromString(reader.getString());
                } else if ("targetType".equals(fieldName)) {
                    deserializedSqlPaaSTargetOptions.targetType = TargetType.fromString(reader.getString());
                } else if ("serviceTier".equals(fieldName)) {
                    deserializedSqlPaaSTargetOptions.serviceTier = AzureSqlServiceTier.fromString(reader.getString());
                } else if ("targetLocations".equals(fieldName)) {
                    List<AzureLocation> targetLocations
                        = reader.readArray(reader1 -> AzureLocation.fromString(reader1.getString()));
                    deserializedSqlPaaSTargetOptions.targetLocations = targetLocations;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSqlPaaSTargetOptions;
        });
    }
}
