// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.migration.assessment.fluent.AssessedSqlMachinesOperationsClient;
import com.azure.resourcemanager.migration.assessment.fluent.models.AssessedSqlMachineInner;
import com.azure.resourcemanager.migration.assessment.models.AssessedSqlMachine;
import com.azure.resourcemanager.migration.assessment.models.AssessedSqlMachinesOperations;

public final class AssessedSqlMachinesOperationsImpl implements AssessedSqlMachinesOperations {
    private static final ClientLogger LOGGER = new ClientLogger(AssessedSqlMachinesOperationsImpl.class);

    private final AssessedSqlMachinesOperationsClient innerClient;

    private final com.azure.resourcemanager.migration.assessment.MigrationAssessmentManager serviceManager;

    public AssessedSqlMachinesOperationsImpl(AssessedSqlMachinesOperationsClient innerClient,
        com.azure.resourcemanager.migration.assessment.MigrationAssessmentManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<AssessedSqlMachine> listBySqlAssessmentV2(String resourceGroupName, String projectName,
        String groupName, String assessmentName) {
        PagedIterable<AssessedSqlMachineInner> inner
            = this.serviceClient().listBySqlAssessmentV2(resourceGroupName, projectName, groupName, assessmentName);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new AssessedSqlMachineImpl(inner1, this.manager()));
    }

    public PagedIterable<AssessedSqlMachine> listBySqlAssessmentV2(String resourceGroupName, String projectName,
        String groupName, String assessmentName, String filter, Integer pageSize, String continuationToken,
        Integer totalRecordCount, Context context) {
        PagedIterable<AssessedSqlMachineInner> inner = this.serviceClient()
            .listBySqlAssessmentV2(resourceGroupName, projectName, groupName, assessmentName, filter, pageSize,
                continuationToken, totalRecordCount, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new AssessedSqlMachineImpl(inner1, this.manager()));
    }

    public Response<AssessedSqlMachine> getWithResponse(String resourceGroupName, String projectName, String groupName,
        String assessmentName, String assessedSqlMachineName, Context context) {
        Response<AssessedSqlMachineInner> inner = this.serviceClient()
            .getWithResponse(resourceGroupName, projectName, groupName, assessmentName, assessedSqlMachineName,
                context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new AssessedSqlMachineImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public AssessedSqlMachine get(String resourceGroupName, String projectName, String groupName, String assessmentName,
        String assessedSqlMachineName) {
        AssessedSqlMachineInner inner = this.serviceClient()
            .get(resourceGroupName, projectName, groupName, assessmentName, assessedSqlMachineName);
        if (inner != null) {
            return new AssessedSqlMachineImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private AssessedSqlMachinesOperationsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.migration.assessment.MigrationAssessmentManager manager() {
        return this.serviceManager;
    }
}
