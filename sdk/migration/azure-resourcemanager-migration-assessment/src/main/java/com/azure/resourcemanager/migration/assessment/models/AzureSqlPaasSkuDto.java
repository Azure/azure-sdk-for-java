// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Class representing Azure SQL PAAS SKU.
 */
@Immutable
public final class AzureSqlPaasSkuDto implements JsonSerializable<AzureSqlPaasSkuDto> {
    /*
     * Gets the service tier.
     */
    private AzureSqlServiceTier azureSqlServiceTier;

    /*
     * Gets the compute tier.
     */
    private ComputeTier azureSqlComputeTier;

    /*
     * Gets the hardware generation.
     */
    private HardwareGeneration azureSqlHardwareGeneration;

    /*
     * Gets the storage maximum size in megabytes.
     */
    private Float storageMaxSizeInMB;

    /*
     * Gets the predicted data size in megabytes in the Azure SQL, will impact the
     * billing cost.
     */
    private Float predictedDataSizeInMB;

    /*
     * Gets the predicted log size in megabytes in the Azure SQL, will impact the
     * billing cost.
     */
    private Float predictedLogSizeInMB;

    /*
     * Gets the number of cores.
     */
    private Integer cores;

    /*
     * Gets the target type.
     */
    private TargetType azureSqlTargetType;

    /**
     * Creates an instance of AzureSqlPaasSkuDto class.
     */
    public AzureSqlPaasSkuDto() {
    }

    /**
     * Get the azureSqlServiceTier property: Gets the service tier.
     * 
     * @return the azureSqlServiceTier value.
     */
    public AzureSqlServiceTier azureSqlServiceTier() {
        return this.azureSqlServiceTier;
    }

    /**
     * Get the azureSqlComputeTier property: Gets the compute tier.
     * 
     * @return the azureSqlComputeTier value.
     */
    public ComputeTier azureSqlComputeTier() {
        return this.azureSqlComputeTier;
    }

    /**
     * Get the azureSqlHardwareGeneration property: Gets the hardware generation.
     * 
     * @return the azureSqlHardwareGeneration value.
     */
    public HardwareGeneration azureSqlHardwareGeneration() {
        return this.azureSqlHardwareGeneration;
    }

    /**
     * Get the storageMaxSizeInMB property: Gets the storage maximum size in megabytes.
     * 
     * @return the storageMaxSizeInMB value.
     */
    public Float storageMaxSizeInMB() {
        return this.storageMaxSizeInMB;
    }

    /**
     * Get the predictedDataSizeInMB property: Gets the predicted data size in megabytes in the Azure SQL, will impact
     * the
     * billing cost.
     * 
     * @return the predictedDataSizeInMB value.
     */
    public Float predictedDataSizeInMB() {
        return this.predictedDataSizeInMB;
    }

    /**
     * Get the predictedLogSizeInMB property: Gets the predicted log size in megabytes in the Azure SQL, will impact the
     * billing cost.
     * 
     * @return the predictedLogSizeInMB value.
     */
    public Float predictedLogSizeInMB() {
        return this.predictedLogSizeInMB;
    }

    /**
     * Get the cores property: Gets the number of cores.
     * 
     * @return the cores value.
     */
    public Integer cores() {
        return this.cores;
    }

    /**
     * Get the azureSqlTargetType property: Gets the target type.
     * 
     * @return the azureSqlTargetType value.
     */
    public TargetType azureSqlTargetType() {
        return this.azureSqlTargetType;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureSqlPaasSkuDto from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureSqlPaasSkuDto if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the AzureSqlPaasSkuDto.
     */
    public static AzureSqlPaasSkuDto fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AzureSqlPaasSkuDto deserializedAzureSqlPaasSkuDto = new AzureSqlPaasSkuDto();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("azureSqlServiceTier".equals(fieldName)) {
                    deserializedAzureSqlPaasSkuDto.azureSqlServiceTier
                        = AzureSqlServiceTier.fromString(reader.getString());
                } else if ("azureSqlComputeTier".equals(fieldName)) {
                    deserializedAzureSqlPaasSkuDto.azureSqlComputeTier = ComputeTier.fromString(reader.getString());
                } else if ("azureSqlHardwareGeneration".equals(fieldName)) {
                    deserializedAzureSqlPaasSkuDto.azureSqlHardwareGeneration
                        = HardwareGeneration.fromString(reader.getString());
                } else if ("storageMaxSizeInMB".equals(fieldName)) {
                    deserializedAzureSqlPaasSkuDto.storageMaxSizeInMB = reader.getNullable(JsonReader::getFloat);
                } else if ("predictedDataSizeInMB".equals(fieldName)) {
                    deserializedAzureSqlPaasSkuDto.predictedDataSizeInMB = reader.getNullable(JsonReader::getFloat);
                } else if ("predictedLogSizeInMB".equals(fieldName)) {
                    deserializedAzureSqlPaasSkuDto.predictedLogSizeInMB = reader.getNullable(JsonReader::getFloat);
                } else if ("cores".equals(fieldName)) {
                    deserializedAzureSqlPaasSkuDto.cores = reader.getNullable(JsonReader::getInt);
                } else if ("azureSqlTargetType".equals(fieldName)) {
                    deserializedAzureSqlPaasSkuDto.azureSqlTargetType = TargetType.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAzureSqlPaasSkuDto;
        });
    }
}
