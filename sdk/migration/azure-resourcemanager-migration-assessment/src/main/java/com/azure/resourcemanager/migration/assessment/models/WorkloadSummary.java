// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Workload summary.
 */
@Fluent
public final class WorkloadSummary implements JsonSerializable<WorkloadSummary> {
    /*
     * Gets or sets oracle databases.
     */
    private Integer oracleInstances;

    /*
     * Gets or sets oracle databases.
     */
    private Integer springApps;

    /**
     * Creates an instance of WorkloadSummary class.
     */
    public WorkloadSummary() {
    }

    /**
     * Get the oracleInstances property: Gets or sets oracle databases.
     * 
     * @return the oracleInstances value.
     */
    public Integer oracleInstances() {
        return this.oracleInstances;
    }

    /**
     * Set the oracleInstances property: Gets or sets oracle databases.
     * 
     * @param oracleInstances the oracleInstances value to set.
     * @return the WorkloadSummary object itself.
     */
    public WorkloadSummary withOracleInstances(Integer oracleInstances) {
        this.oracleInstances = oracleInstances;
        return this;
    }

    /**
     * Get the springApps property: Gets or sets oracle databases.
     * 
     * @return the springApps value.
     */
    public Integer springApps() {
        return this.springApps;
    }

    /**
     * Set the springApps property: Gets or sets oracle databases.
     * 
     * @param springApps the springApps value to set.
     * @return the WorkloadSummary object itself.
     */
    public WorkloadSummary withSpringApps(Integer springApps) {
        this.springApps = springApps;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("oracleInstances", this.oracleInstances);
        jsonWriter.writeNumberField("springApps", this.springApps);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of WorkloadSummary from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of WorkloadSummary if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the WorkloadSummary.
     */
    public static WorkloadSummary fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            WorkloadSummary deserializedWorkloadSummary = new WorkloadSummary();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("oracleInstances".equals(fieldName)) {
                    deserializedWorkloadSummary.oracleInstances = reader.getNullable(JsonReader::getInt);
                } else if ("springApps".equals(fieldName)) {
                    deserializedWorkloadSummary.springApps = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedWorkloadSummary;
        });
    }
}
