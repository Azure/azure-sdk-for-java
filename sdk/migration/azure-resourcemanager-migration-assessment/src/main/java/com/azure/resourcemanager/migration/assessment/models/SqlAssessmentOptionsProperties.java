// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * SQL Assessment options properties Web model object.
 */
@Fluent
public final class SqlAssessmentOptionsProperties implements JsonSerializable<SqlAssessmentOptionsProperties> {
    /*
     * Gets the list of VM families.
     */
    private List<VmFamilyOptions> vmFamilies;

    /*
     * Gets the Reserved Instance VM Families list.
     */
    private List<AzureVmFamily> reservedInstanceVmFamilies;

    /*
     * Gets the Premium disk VM Families list.
     */
    private List<AzureVmFamily> premiumDiskVmFamilies;

    /*
     * Gets or sets the Premium disk VM Families list.
     */
    private List<AzureVmFamily> savingsPlanVmFamilies;

    /*
     * Gets or sets the list of Azure locations supporting Saving Plans for IAAS.
     */
    private List<AzureLocation> savingsPlanSupportedLocations;

    /*
     * Gets or sets the list of Azure locations supporting Saving Plans for PAAS.
     */
    private List<AzureLocation> savingsPlanSupportedLocationsForPaas;

    /*
     * Gets or sets the list of Azure locations supporting Reserved Instances for IAAS.
     */
    private List<AzureLocation> reservedInstanceSupportedLocationsForIaas;

    /*
     * Gets or sets the list of Azure Offers supporting Saving Plans.
     */
    private List<AzureOfferCode> savingsPlanSupportedOffers;

    /*
     * Gets or sets the list of SQL target SKU properties for dropdowns.
     */
    private List<SqlPaaSTargetOptions> sqlSkus;

    /*
     * Gets or sets the Reserved Instance SQL target types.
     */
    private List<TargetType> reservedInstanceSqlTargets;

    /*
     * Gets or sets the list of Azure locations supporting Reserved Instances.
     */
    private List<AzureLocation> reservedInstanceSupportedLocations;

    /*
     * Gets or sets the list of currencies supported for Reserved Instances.
     */
    private List<AzureCurrency> reservedInstanceSupportedCurrencies;

    /*
     * Gets or sets the list of offers supported for Reserved Instances.
     */
    private List<AzureOfferCode> reservedInstanceSupportedOffers;

    /*
     * Gets or sets the list of offers supported for SQL assessments.
     */
    private List<AzureOfferCode> supportedOffers;

    /**
     * Creates an instance of SqlAssessmentOptionsProperties class.
     */
    public SqlAssessmentOptionsProperties() {
    }

    /**
     * Get the vmFamilies property: Gets the list of VM families.
     * 
     * @return the vmFamilies value.
     */
    public List<VmFamilyOptions> vmFamilies() {
        return this.vmFamilies;
    }

    /**
     * Get the reservedInstanceVmFamilies property: Gets the Reserved Instance VM Families list.
     * 
     * @return the reservedInstanceVmFamilies value.
     */
    public List<AzureVmFamily> reservedInstanceVmFamilies() {
        return this.reservedInstanceVmFamilies;
    }

    /**
     * Get the premiumDiskVmFamilies property: Gets the Premium disk VM Families list.
     * 
     * @return the premiumDiskVmFamilies value.
     */
    public List<AzureVmFamily> premiumDiskVmFamilies() {
        return this.premiumDiskVmFamilies;
    }

    /**
     * Get the savingsPlanVmFamilies property: Gets or sets the Premium disk VM Families list.
     * 
     * @return the savingsPlanVmFamilies value.
     */
    public List<AzureVmFamily> savingsPlanVmFamilies() {
        return this.savingsPlanVmFamilies;
    }

    /**
     * Set the savingsPlanVmFamilies property: Gets or sets the Premium disk VM Families list.
     * 
     * @param savingsPlanVmFamilies the savingsPlanVmFamilies value to set.
     * @return the SqlAssessmentOptionsProperties object itself.
     */
    public SqlAssessmentOptionsProperties withSavingsPlanVmFamilies(List<AzureVmFamily> savingsPlanVmFamilies) {
        this.savingsPlanVmFamilies = savingsPlanVmFamilies;
        return this;
    }

    /**
     * Get the savingsPlanSupportedLocations property: Gets or sets the list of Azure locations supporting Saving Plans
     * for IAAS.
     * 
     * @return the savingsPlanSupportedLocations value.
     */
    public List<AzureLocation> savingsPlanSupportedLocations() {
        return this.savingsPlanSupportedLocations;
    }

    /**
     * Set the savingsPlanSupportedLocations property: Gets or sets the list of Azure locations supporting Saving Plans
     * for IAAS.
     * 
     * @param savingsPlanSupportedLocations the savingsPlanSupportedLocations value to set.
     * @return the SqlAssessmentOptionsProperties object itself.
     */
    public SqlAssessmentOptionsProperties
        withSavingsPlanSupportedLocations(List<AzureLocation> savingsPlanSupportedLocations) {
        this.savingsPlanSupportedLocations = savingsPlanSupportedLocations;
        return this;
    }

    /**
     * Get the savingsPlanSupportedLocationsForPaas property: Gets or sets the list of Azure locations supporting Saving
     * Plans for PAAS.
     * 
     * @return the savingsPlanSupportedLocationsForPaas value.
     */
    public List<AzureLocation> savingsPlanSupportedLocationsForPaas() {
        return this.savingsPlanSupportedLocationsForPaas;
    }

    /**
     * Set the savingsPlanSupportedLocationsForPaas property: Gets or sets the list of Azure locations supporting Saving
     * Plans for PAAS.
     * 
     * @param savingsPlanSupportedLocationsForPaas the savingsPlanSupportedLocationsForPaas value to set.
     * @return the SqlAssessmentOptionsProperties object itself.
     */
    public SqlAssessmentOptionsProperties
        withSavingsPlanSupportedLocationsForPaas(List<AzureLocation> savingsPlanSupportedLocationsForPaas) {
        this.savingsPlanSupportedLocationsForPaas = savingsPlanSupportedLocationsForPaas;
        return this;
    }

    /**
     * Get the reservedInstanceSupportedLocationsForIaas property: Gets or sets the list of Azure locations supporting
     * Reserved Instances for IAAS.
     * 
     * @return the reservedInstanceSupportedLocationsForIaas value.
     */
    public List<AzureLocation> reservedInstanceSupportedLocationsForIaas() {
        return this.reservedInstanceSupportedLocationsForIaas;
    }

    /**
     * Set the reservedInstanceSupportedLocationsForIaas property: Gets or sets the list of Azure locations supporting
     * Reserved Instances for IAAS.
     * 
     * @param reservedInstanceSupportedLocationsForIaas the reservedInstanceSupportedLocationsForIaas value to set.
     * @return the SqlAssessmentOptionsProperties object itself.
     */
    public SqlAssessmentOptionsProperties
        withReservedInstanceSupportedLocationsForIaas(List<AzureLocation> reservedInstanceSupportedLocationsForIaas) {
        this.reservedInstanceSupportedLocationsForIaas = reservedInstanceSupportedLocationsForIaas;
        return this;
    }

    /**
     * Get the savingsPlanSupportedOffers property: Gets or sets the list of Azure Offers supporting Saving Plans.
     * 
     * @return the savingsPlanSupportedOffers value.
     */
    public List<AzureOfferCode> savingsPlanSupportedOffers() {
        return this.savingsPlanSupportedOffers;
    }

    /**
     * Set the savingsPlanSupportedOffers property: Gets or sets the list of Azure Offers supporting Saving Plans.
     * 
     * @param savingsPlanSupportedOffers the savingsPlanSupportedOffers value to set.
     * @return the SqlAssessmentOptionsProperties object itself.
     */
    public SqlAssessmentOptionsProperties
        withSavingsPlanSupportedOffers(List<AzureOfferCode> savingsPlanSupportedOffers) {
        this.savingsPlanSupportedOffers = savingsPlanSupportedOffers;
        return this;
    }

    /**
     * Get the sqlSkus property: Gets or sets the list of SQL target SKU properties for dropdowns.
     * 
     * @return the sqlSkus value.
     */
    public List<SqlPaaSTargetOptions> sqlSkus() {
        return this.sqlSkus;
    }

    /**
     * Set the sqlSkus property: Gets or sets the list of SQL target SKU properties for dropdowns.
     * 
     * @param sqlSkus the sqlSkus value to set.
     * @return the SqlAssessmentOptionsProperties object itself.
     */
    public SqlAssessmentOptionsProperties withSqlSkus(List<SqlPaaSTargetOptions> sqlSkus) {
        this.sqlSkus = sqlSkus;
        return this;
    }

    /**
     * Get the reservedInstanceSqlTargets property: Gets or sets the Reserved Instance SQL target types.
     * 
     * @return the reservedInstanceSqlTargets value.
     */
    public List<TargetType> reservedInstanceSqlTargets() {
        return this.reservedInstanceSqlTargets;
    }

    /**
     * Set the reservedInstanceSqlTargets property: Gets or sets the Reserved Instance SQL target types.
     * 
     * @param reservedInstanceSqlTargets the reservedInstanceSqlTargets value to set.
     * @return the SqlAssessmentOptionsProperties object itself.
     */
    public SqlAssessmentOptionsProperties withReservedInstanceSqlTargets(List<TargetType> reservedInstanceSqlTargets) {
        this.reservedInstanceSqlTargets = reservedInstanceSqlTargets;
        return this;
    }

    /**
     * Get the reservedInstanceSupportedLocations property: Gets or sets the list of Azure locations supporting Reserved
     * Instances.
     * 
     * @return the reservedInstanceSupportedLocations value.
     */
    public List<AzureLocation> reservedInstanceSupportedLocations() {
        return this.reservedInstanceSupportedLocations;
    }

    /**
     * Set the reservedInstanceSupportedLocations property: Gets or sets the list of Azure locations supporting Reserved
     * Instances.
     * 
     * @param reservedInstanceSupportedLocations the reservedInstanceSupportedLocations value to set.
     * @return the SqlAssessmentOptionsProperties object itself.
     */
    public SqlAssessmentOptionsProperties
        withReservedInstanceSupportedLocations(List<AzureLocation> reservedInstanceSupportedLocations) {
        this.reservedInstanceSupportedLocations = reservedInstanceSupportedLocations;
        return this;
    }

    /**
     * Get the reservedInstanceSupportedCurrencies property: Gets or sets the list of currencies supported for Reserved
     * Instances.
     * 
     * @return the reservedInstanceSupportedCurrencies value.
     */
    public List<AzureCurrency> reservedInstanceSupportedCurrencies() {
        return this.reservedInstanceSupportedCurrencies;
    }

    /**
     * Set the reservedInstanceSupportedCurrencies property: Gets or sets the list of currencies supported for Reserved
     * Instances.
     * 
     * @param reservedInstanceSupportedCurrencies the reservedInstanceSupportedCurrencies value to set.
     * @return the SqlAssessmentOptionsProperties object itself.
     */
    public SqlAssessmentOptionsProperties
        withReservedInstanceSupportedCurrencies(List<AzureCurrency> reservedInstanceSupportedCurrencies) {
        this.reservedInstanceSupportedCurrencies = reservedInstanceSupportedCurrencies;
        return this;
    }

    /**
     * Get the reservedInstanceSupportedOffers property: Gets or sets the list of offers supported for Reserved
     * Instances.
     * 
     * @return the reservedInstanceSupportedOffers value.
     */
    public List<AzureOfferCode> reservedInstanceSupportedOffers() {
        return this.reservedInstanceSupportedOffers;
    }

    /**
     * Set the reservedInstanceSupportedOffers property: Gets or sets the list of offers supported for Reserved
     * Instances.
     * 
     * @param reservedInstanceSupportedOffers the reservedInstanceSupportedOffers value to set.
     * @return the SqlAssessmentOptionsProperties object itself.
     */
    public SqlAssessmentOptionsProperties
        withReservedInstanceSupportedOffers(List<AzureOfferCode> reservedInstanceSupportedOffers) {
        this.reservedInstanceSupportedOffers = reservedInstanceSupportedOffers;
        return this;
    }

    /**
     * Get the supportedOffers property: Gets or sets the list of offers supported for SQL assessments.
     * 
     * @return the supportedOffers value.
     */
    public List<AzureOfferCode> supportedOffers() {
        return this.supportedOffers;
    }

    /**
     * Set the supportedOffers property: Gets or sets the list of offers supported for SQL assessments.
     * 
     * @param supportedOffers the supportedOffers value to set.
     * @return the SqlAssessmentOptionsProperties object itself.
     */
    public SqlAssessmentOptionsProperties withSupportedOffers(List<AzureOfferCode> supportedOffers) {
        this.supportedOffers = supportedOffers;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (vmFamilies() != null) {
            vmFamilies().forEach(e -> e.validate());
        }
        if (sqlSkus() != null) {
            sqlSkus().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("savingsPlanVmFamilies", this.savingsPlanVmFamilies,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeArrayField("savingsPlanSupportedLocations", this.savingsPlanSupportedLocations,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeArrayField("savingsPlanSupportedLocationsForPaas", this.savingsPlanSupportedLocationsForPaas,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeArrayField("reservedInstanceSupportedLocationsForIaas",
            this.reservedInstanceSupportedLocationsForIaas,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeArrayField("savingsPlanSupportedOffers", this.savingsPlanSupportedOffers,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeArrayField("sqlSkus", this.sqlSkus, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeArrayField("reservedInstanceSqlTargets", this.reservedInstanceSqlTargets,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeArrayField("reservedInstanceSupportedLocations", this.reservedInstanceSupportedLocations,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeArrayField("reservedInstanceSupportedCurrencies", this.reservedInstanceSupportedCurrencies,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeArrayField("reservedInstanceSupportedOffers", this.reservedInstanceSupportedOffers,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeArrayField("supportedOffers", this.supportedOffers,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SqlAssessmentOptionsProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SqlAssessmentOptionsProperties if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SqlAssessmentOptionsProperties.
     */
    public static SqlAssessmentOptionsProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SqlAssessmentOptionsProperties deserializedSqlAssessmentOptionsProperties
                = new SqlAssessmentOptionsProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("vmFamilies".equals(fieldName)) {
                    List<VmFamilyOptions> vmFamilies = reader.readArray(reader1 -> VmFamilyOptions.fromJson(reader1));
                    deserializedSqlAssessmentOptionsProperties.vmFamilies = vmFamilies;
                } else if ("reservedInstanceVmFamilies".equals(fieldName)) {
                    List<AzureVmFamily> reservedInstanceVmFamilies
                        = reader.readArray(reader1 -> AzureVmFamily.fromString(reader1.getString()));
                    deserializedSqlAssessmentOptionsProperties.reservedInstanceVmFamilies = reservedInstanceVmFamilies;
                } else if ("premiumDiskVmFamilies".equals(fieldName)) {
                    List<AzureVmFamily> premiumDiskVmFamilies
                        = reader.readArray(reader1 -> AzureVmFamily.fromString(reader1.getString()));
                    deserializedSqlAssessmentOptionsProperties.premiumDiskVmFamilies = premiumDiskVmFamilies;
                } else if ("savingsPlanVmFamilies".equals(fieldName)) {
                    List<AzureVmFamily> savingsPlanVmFamilies
                        = reader.readArray(reader1 -> AzureVmFamily.fromString(reader1.getString()));
                    deserializedSqlAssessmentOptionsProperties.savingsPlanVmFamilies = savingsPlanVmFamilies;
                } else if ("savingsPlanSupportedLocations".equals(fieldName)) {
                    List<AzureLocation> savingsPlanSupportedLocations
                        = reader.readArray(reader1 -> AzureLocation.fromString(reader1.getString()));
                    deserializedSqlAssessmentOptionsProperties.savingsPlanSupportedLocations
                        = savingsPlanSupportedLocations;
                } else if ("savingsPlanSupportedLocationsForPaas".equals(fieldName)) {
                    List<AzureLocation> savingsPlanSupportedLocationsForPaas
                        = reader.readArray(reader1 -> AzureLocation.fromString(reader1.getString()));
                    deserializedSqlAssessmentOptionsProperties.savingsPlanSupportedLocationsForPaas
                        = savingsPlanSupportedLocationsForPaas;
                } else if ("reservedInstanceSupportedLocationsForIaas".equals(fieldName)) {
                    List<AzureLocation> reservedInstanceSupportedLocationsForIaas
                        = reader.readArray(reader1 -> AzureLocation.fromString(reader1.getString()));
                    deserializedSqlAssessmentOptionsProperties.reservedInstanceSupportedLocationsForIaas
                        = reservedInstanceSupportedLocationsForIaas;
                } else if ("savingsPlanSupportedOffers".equals(fieldName)) {
                    List<AzureOfferCode> savingsPlanSupportedOffers
                        = reader.readArray(reader1 -> AzureOfferCode.fromString(reader1.getString()));
                    deserializedSqlAssessmentOptionsProperties.savingsPlanSupportedOffers = savingsPlanSupportedOffers;
                } else if ("sqlSkus".equals(fieldName)) {
                    List<SqlPaaSTargetOptions> sqlSkus
                        = reader.readArray(reader1 -> SqlPaaSTargetOptions.fromJson(reader1));
                    deserializedSqlAssessmentOptionsProperties.sqlSkus = sqlSkus;
                } else if ("reservedInstanceSqlTargets".equals(fieldName)) {
                    List<TargetType> reservedInstanceSqlTargets
                        = reader.readArray(reader1 -> TargetType.fromString(reader1.getString()));
                    deserializedSqlAssessmentOptionsProperties.reservedInstanceSqlTargets = reservedInstanceSqlTargets;
                } else if ("reservedInstanceSupportedLocations".equals(fieldName)) {
                    List<AzureLocation> reservedInstanceSupportedLocations
                        = reader.readArray(reader1 -> AzureLocation.fromString(reader1.getString()));
                    deserializedSqlAssessmentOptionsProperties.reservedInstanceSupportedLocations
                        = reservedInstanceSupportedLocations;
                } else if ("reservedInstanceSupportedCurrencies".equals(fieldName)) {
                    List<AzureCurrency> reservedInstanceSupportedCurrencies
                        = reader.readArray(reader1 -> AzureCurrency.fromString(reader1.getString()));
                    deserializedSqlAssessmentOptionsProperties.reservedInstanceSupportedCurrencies
                        = reservedInstanceSupportedCurrencies;
                } else if ("reservedInstanceSupportedOffers".equals(fieldName)) {
                    List<AzureOfferCode> reservedInstanceSupportedOffers
                        = reader.readArray(reader1 -> AzureOfferCode.fromString(reader1.getString()));
                    deserializedSqlAssessmentOptionsProperties.reservedInstanceSupportedOffers
                        = reservedInstanceSupportedOffers;
                } else if ("supportedOffers".equals(fieldName)) {
                    List<AzureOfferCode> supportedOffers
                        = reader.readArray(reader1 -> AzureOfferCode.fromString(reader1.getString()));
                    deserializedSqlAssessmentOptionsProperties.supportedOffers = supportedOffers;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSqlAssessmentOptionsProperties;
        });
    }
}
