// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of AssessedSqlMachinesOperations.
 */
public interface AssessedSqlMachinesOperations {
    /**
     * List AssessedSqlMachine resources by SqlAssessmentV2.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param projectName Assessment Project Name.
     * @param groupName Group ARM name.
     * @param assessmentName SQL Assessment arm name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a AssessedSqlMachine list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<AssessedSqlMachine> listBySqlAssessmentV2(String resourceGroupName, String projectName,
        String groupName, String assessmentName);

    /**
     * List AssessedSqlMachine resources by SqlAssessmentV2.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param projectName Assessment Project Name.
     * @param groupName Group ARM name.
     * @param assessmentName SQL Assessment arm name.
     * @param filter Filter query.
     * @param pageSize Optional parameter for page size.
     * @param continuationToken Optional parameter for continuation token.
     * @param totalRecordCount Total record count.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a AssessedSqlMachine list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<AssessedSqlMachine> listBySqlAssessmentV2(String resourceGroupName, String projectName,
        String groupName, String assessmentName, String filter, Integer pageSize, String continuationToken,
        Integer totalRecordCount, Context context);

    /**
     * Get a AssessedSqlMachine.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param projectName Assessment Project Name.
     * @param groupName Group ARM name.
     * @param assessmentName SQL Assessment arm name.
     * @param assessedSqlMachineName Sql assessment Assessed Machine ARM name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a AssessedSqlMachine along with {@link Response}.
     */
    Response<AssessedSqlMachine> getWithResponse(String resourceGroupName, String projectName, String groupName,
        String assessmentName, String assessedSqlMachineName, Context context);

    /**
     * Get a AssessedSqlMachine.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param projectName Assessment Project Name.
     * @param groupName Group ARM name.
     * @param assessmentName SQL Assessment arm name.
     * @param assessedSqlMachineName Sql assessment Assessed Machine ARM name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a AssessedSqlMachine.
     */
    AssessedSqlMachine get(String resourceGroupName, String projectName, String groupName, String assessmentName,
        String assessedSqlMachineName);
}
