// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Assessment options for Ultra disk type.
 */
@Fluent
public final class UltraDiskAssessmentOptions implements JsonSerializable<UltraDiskAssessmentOptions> {
    /*
     * Family name.
     */
    private String familyName;

    /*
     * List of locations where ultra disk is supported for this VMfamily.
     */
    private List<String> targetLocations;

    /**
     * Creates an instance of UltraDiskAssessmentOptions class.
     */
    public UltraDiskAssessmentOptions() {
    }

    /**
     * Get the familyName property: Family name.
     * 
     * @return the familyName value.
     */
    public String familyName() {
        return this.familyName;
    }

    /**
     * Set the familyName property: Family name.
     * 
     * @param familyName the familyName value to set.
     * @return the UltraDiskAssessmentOptions object itself.
     */
    public UltraDiskAssessmentOptions withFamilyName(String familyName) {
        this.familyName = familyName;
        return this;
    }

    /**
     * Get the targetLocations property: List of locations where ultra disk is supported for this VMfamily.
     * 
     * @return the targetLocations value.
     */
    public List<String> targetLocations() {
        return this.targetLocations;
    }

    /**
     * Set the targetLocations property: List of locations where ultra disk is supported for this VMfamily.
     * 
     * @param targetLocations the targetLocations value to set.
     * @return the UltraDiskAssessmentOptions object itself.
     */
    public UltraDiskAssessmentOptions withTargetLocations(List<String> targetLocations) {
        this.targetLocations = targetLocations;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("familyName", this.familyName);
        jsonWriter.writeArrayField("targetLocations", this.targetLocations,
            (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of UltraDiskAssessmentOptions from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of UltraDiskAssessmentOptions if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the UltraDiskAssessmentOptions.
     */
    public static UltraDiskAssessmentOptions fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            UltraDiskAssessmentOptions deserializedUltraDiskAssessmentOptions = new UltraDiskAssessmentOptions();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("familyName".equals(fieldName)) {
                    deserializedUltraDiskAssessmentOptions.familyName = reader.getString();
                } else if ("targetLocations".equals(fieldName)) {
                    List<String> targetLocations = reader.readArray(reader1 -> reader1.getString());
                    deserializedUltraDiskAssessmentOptions.targetLocations = targetLocations;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedUltraDiskAssessmentOptions;
        });
    }
}
