// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * SQL managed instance assessment settings.
 */
@Fluent
public final class SqlMiSettings implements JsonSerializable<SqlMiSettings> {
    /*
     * Gets or sets the azure SQL service tier.
     */
    private AzureSqlServiceTier azureSqlServiceTier;

    /*
     * Gets or sets the azure PAAS SQL instance type.
     */
    private AzureSqlInstanceType azureSqlInstanceType;

    /**
     * Creates an instance of SqlMiSettings class.
     */
    public SqlMiSettings() {
    }

    /**
     * Get the azureSqlServiceTier property: Gets or sets the azure SQL service tier.
     * 
     * @return the azureSqlServiceTier value.
     */
    public AzureSqlServiceTier azureSqlServiceTier() {
        return this.azureSqlServiceTier;
    }

    /**
     * Set the azureSqlServiceTier property: Gets or sets the azure SQL service tier.
     * 
     * @param azureSqlServiceTier the azureSqlServiceTier value to set.
     * @return the SqlMiSettings object itself.
     */
    public SqlMiSettings withAzureSqlServiceTier(AzureSqlServiceTier azureSqlServiceTier) {
        this.azureSqlServiceTier = azureSqlServiceTier;
        return this;
    }

    /**
     * Get the azureSqlInstanceType property: Gets or sets the azure PAAS SQL instance type.
     * 
     * @return the azureSqlInstanceType value.
     */
    public AzureSqlInstanceType azureSqlInstanceType() {
        return this.azureSqlInstanceType;
    }

    /**
     * Set the azureSqlInstanceType property: Gets or sets the azure PAAS SQL instance type.
     * 
     * @param azureSqlInstanceType the azureSqlInstanceType value to set.
     * @return the SqlMiSettings object itself.
     */
    public SqlMiSettings withAzureSqlInstanceType(AzureSqlInstanceType azureSqlInstanceType) {
        this.azureSqlInstanceType = azureSqlInstanceType;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("azureSqlServiceTier",
            this.azureSqlServiceTier == null ? null : this.azureSqlServiceTier.toString());
        jsonWriter.writeStringField("azureSqlInstanceType",
            this.azureSqlInstanceType == null ? null : this.azureSqlInstanceType.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SqlMiSettings from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SqlMiSettings if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the SqlMiSettings.
     */
    public static SqlMiSettings fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SqlMiSettings deserializedSqlMiSettings = new SqlMiSettings();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("azureSqlServiceTier".equals(fieldName)) {
                    deserializedSqlMiSettings.azureSqlServiceTier = AzureSqlServiceTier.fromString(reader.getString());
                } else if ("azureSqlInstanceType".equals(fieldName)) {
                    deserializedSqlMiSettings.azureSqlInstanceType
                        = AzureSqlInstanceType.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSqlMiSettings;
        });
    }
}
