// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.nginx.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.nginx.NginxManager;
import com.azure.resourcemanager.nginx.models.ActivationState;
import com.azure.resourcemanager.nginx.models.IdentityType;
import com.azure.resourcemanager.nginx.models.NginxDeployment;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DeploymentsGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Creating\",\"nginxVersion\":\"nsj\",\"networkProfile\":{\"frontEndIPConfiguration\":{\"publicIPAddresses\":[{},{},{},{}],\"privateIPAddresses\":[{},{}]},\"networkInterfaceConfiguration\":{\"subnetId\":\"dszue\"}},\"ipAddress\":\"sbzkf\",\"enableDiagnosticsSupport\":true,\"logging\":{\"storageAccount\":{\"accountName\":\"nqicvinvkjjxdxrb\",\"containerName\":\"kzclewyh\"}},\"scalingProperties\":{\"capacity\":969914681,\"autoScaleSettings\":{\"profiles\":[{\"name\":\"tzpofncckwyfzq\",\"capacity\":{\"min\":708392093,\"max\":1576078570}}]}},\"autoUpgradeProfile\":{\"upgradeChannel\":\"buy\"},\"userProfile\":{\"preferredEmail\":\"zfeqztppri\"},\"nginxAppProtect\":{\"webApplicationFirewallSettings\":{\"activationState\":\"Enabled\"},\"webApplicationFirewallStatus\":{\"wafRelease\":\"altol\",\"attackSignaturesPackage\":{\"version\":\"cwsobqwcs\",\"revisionDatetime\":\"2021-04-29T03:25:13Z\"},\"botSignaturesPackage\":{\"version\":\"wdcfhucqdpfuv\",\"revisionDatetime\":\"2021-07-29T06:16:34Z\"},\"threatCampaignsPackage\":{\"version\":\"bjj\",\"revisionDatetime\":\"2021-01-27T19:23:30Z\"},\"componentVersions\":{\"wafEngineVersion\":\"vxb\",\"wafNginxVersion\":\"t\"}}},\"dataplaneApiEndpoint\":\"dut\"},\"identity\":{\"principalId\":\"rmrlxqtvcof\",\"tenantId\":\"f\",\"type\":\"None\",\"userAssignedIdentities\":{\"sgsahmkycgr\":{\"principalId\":\"bgdknnqv\",\"clientId\":\"znqntoru\"}}},\"sku\":{\"name\":\"wjue\"},\"location\":\"eburu\",\"tags\":{\"l\":\"ovsm\",\"oefki\":\"wabm\",\"qujmqlgkf\":\"rvtp\",\"tujitcjedft\":\"tndoaongbjc\"},\"id\":\"waezkojvd\",\"name\":\"pzfoqoui\",\"type\":\"ybxarzgszu\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NginxManager manager = NginxManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        NginxDeployment response = manager.deployments()
            .getByResourceGroupWithResponse("owpulpq", "lyls", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("eburu", response.location());
        Assertions.assertEquals("ovsm", response.tags().get("l"));
        Assertions.assertEquals("dszue",
            response.properties().networkProfile().networkInterfaceConfiguration().subnetId());
        Assertions.assertTrue(response.properties().enableDiagnosticsSupport());
        Assertions.assertEquals("nqicvinvkjjxdxrb", response.properties().logging().storageAccount().accountName());
        Assertions.assertEquals("kzclewyh", response.properties().logging().storageAccount().containerName());
        Assertions.assertEquals(969914681, response.properties().scalingProperties().capacity());
        Assertions.assertEquals("tzpofncckwyfzq", response.properties().scalingProperties().profiles().get(0).name());
        Assertions.assertEquals(708392093,
            response.properties().scalingProperties().profiles().get(0).capacity().min());
        Assertions.assertEquals(1576078570,
            response.properties().scalingProperties().profiles().get(0).capacity().max());
        Assertions.assertEquals("buy", response.properties().autoUpgradeProfile().upgradeChannel());
        Assertions.assertEquals("zfeqztppri", response.properties().userProfile().preferredEmail());
        Assertions.assertEquals(ActivationState.ENABLED,
            response.properties().nginxAppProtect().webApplicationFirewallSettings().activationState());
        Assertions.assertEquals(IdentityType.NONE, response.identity().type());
        Assertions.assertEquals("wjue", response.sku().name());
    }
}
