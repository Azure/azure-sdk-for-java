// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.nginx.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.nginx.NginxManager;
import com.azure.resourcemanager.nginx.models.ActivationState;
import com.azure.resourcemanager.nginx.models.IdentityType;
import com.azure.resourcemanager.nginx.models.NginxDeployment;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DeploymentsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Updating\",\"nginxVersion\":\"byrcdlbhshfwp\",\"networkProfile\":{\"frontEndIPConfiguration\":{\"publicIPAddresses\":[{},{},{}],\"privateIPAddresses\":[{},{}]},\"networkInterfaceConfiguration\":{\"subnetId\":\"khevxccedc\"}},\"ipAddress\":\"md\",\"enableDiagnosticsSupport\":true,\"logging\":{\"storageAccount\":{\"accountName\":\"xltjcvnhltiu\",\"containerName\":\"xnavvwxq\"}},\"scalingProperties\":{\"capacity\":1077177476,\"autoScaleSettings\":{\"profiles\":[{\"name\":\"y\",\"capacity\":{\"min\":1222380956,\"max\":1874068657}},{\"name\":\"wlmdjrkv\",\"capacity\":{\"min\":197369131,\"max\":185014481}},{\"name\":\"vfvpdbodaciz\",\"capacity\":{\"min\":218756340,\"max\":242566551}},{\"name\":\"lhkrribdeibqipqk\",\"capacity\":{\"min\":2080529192,\"max\":1234217414}}]}},\"autoUpgradeProfile\":{\"upgradeChannel\":\"ndzwmkrefa\"},\"userProfile\":{\"preferredEmail\":\"orwkqnyh\"},\"nginxAppProtect\":{\"webApplicationFirewallSettings\":{\"activationState\":\"Enabled\"},\"webApplicationFirewallStatus\":{\"wafRelease\":\"ivfxzsjabibsyst\",\"attackSignaturesPackage\":{\"version\":\"fsdjpvkvp\",\"revisionDatetime\":\"2021-04-17T09:45:49Z\"},\"botSignaturesPackage\":{\"version\":\"bkzbzkd\",\"revisionDatetime\":\"2021-03-09T04:47:51Z\"},\"threatCampaignsPackage\":{\"version\":\"jabudurgkakmo\",\"revisionDatetime\":\"2021-02-03T01:10:02Z\"},\"componentVersions\":{\"wafEngineVersion\":\"jjklff\",\"wafNginxVersion\":\"mouwqlgzrfzeey\"}}},\"dataplaneApiEndpoint\":\"izikayuhq\"},\"identity\":{\"principalId\":\"bs\",\"tenantId\":\"bqwrvtldgm\",\"type\":\"None\",\"userAssignedIdentities\":{\"drhneuyow\":{\"principalId\":\"ipaslthaqfxssmwu\",\"clientId\":\"bdsrez\"},\"sibircgpi\":{\"principalId\":\"d\",\"clientId\":\"t\"},\"i\":{\"principalId\":\"zimejzanlfzx\",\"clientId\":\"vrmbzono\"},\"frl\":{\"principalId\":\"jq\",\"clientId\":\"rgz\"}}},\"sku\":{\"name\":\"szrnwo\"},\"location\":\"ndfpwpj\",\"tags\":{\"h\":\"bt\",\"dhszfjv\":\"lsj\",\"qmqhldvriii\":\"bgofeljag\"},\"id\":\"jnalghf\",\"name\":\"vtvsexsowueluq\",\"type\":\"hahhxvrhmzkwpj\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NginxManager manager = NginxManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<NginxDeployment> response = manager.deployments().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("ndfpwpj", response.iterator().next().location());
        Assertions.assertEquals("bt", response.iterator().next().tags().get("h"));
        Assertions.assertEquals("khevxccedc",
            response.iterator().next().properties().networkProfile().networkInterfaceConfiguration().subnetId());
        Assertions.assertTrue(response.iterator().next().properties().enableDiagnosticsSupport());
        Assertions.assertEquals("xltjcvnhltiu",
            response.iterator().next().properties().logging().storageAccount().accountName());
        Assertions.assertEquals("xnavvwxq",
            response.iterator().next().properties().logging().storageAccount().containerName());
        Assertions.assertEquals(1077177476, response.iterator().next().properties().scalingProperties().capacity());
        Assertions.assertEquals("y",
            response.iterator().next().properties().scalingProperties().profiles().get(0).name());
        Assertions.assertEquals(1222380956,
            response.iterator().next().properties().scalingProperties().profiles().get(0).capacity().min());
        Assertions.assertEquals(1874068657,
            response.iterator().next().properties().scalingProperties().profiles().get(0).capacity().max());
        Assertions.assertEquals("ndzwmkrefa",
            response.iterator().next().properties().autoUpgradeProfile().upgradeChannel());
        Assertions.assertEquals("orwkqnyh", response.iterator().next().properties().userProfile().preferredEmail());
        Assertions.assertEquals(ActivationState.ENABLED,
            response.iterator()
                .next()
                .properties()
                .nginxAppProtect()
                .webApplicationFirewallSettings()
                .activationState());
        Assertions.assertEquals(IdentityType.NONE, response.iterator().next().identity().type());
        Assertions.assertEquals("szrnwo", response.iterator().next().sku().name());
    }
}
