// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.nginx.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.nginx.NginxManager;
import com.azure.resourcemanager.nginx.models.NginxConfigurationFile;
import com.azure.resourcemanager.nginx.models.NginxConfigurationPackage;
import com.azure.resourcemanager.nginx.models.NginxConfigurationProtectedFileRequest;
import com.azure.resourcemanager.nginx.models.NginxConfigurationRequestProperties;
import com.azure.resourcemanager.nginx.models.NginxConfigurationResponse;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ConfigurationsCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Succeeded\",\"files\":[{\"content\":\"dg\",\"virtualPath\":\"gsj\"},{\"content\":\"nwqjnoba\",\"virtualPath\":\"hdd\"}],\"protectedFiles\":[{\"virtualPath\":\"egfnmntfpmvmemfn\",\"contentHash\":\"dwvvba\"},{\"virtualPath\":\"lllchpodb\",\"contentHash\":\"vwrdnhfukuvsj\"},{\"virtualPath\":\"wsmystuluqypf\",\"contentHash\":\"lerchpq\"}],\"package\":{\"data\":\"pjbabwidfc\",\"protectedFiles\":[\"puunnoxyhkxgqd\",\"rihpfhoq\",\"aaewdaomdjv\",\"pjxxkzb\"]},\"rootFile\":\"sgeivsiy\"},\"id\":\"kdncj\",\"name\":\"xonbzoggculapz\",\"type\":\"y\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NginxManager manager = NginxManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        NginxConfigurationResponse response = manager.configurations()
            .define("xrxc")
            .withExistingNginxDeployment("ctxtgzukxi", "mmqtgqqqxhr")
            .withProperties(new NginxConfigurationRequestProperties()
                .withFiles(Arrays.asList(new NginxConfigurationFile().withContent("fku").withVirtualPath("cxkdmligovi"),
                    new NginxConfigurationFile().withContent("xk").withVirtualPath("loazuruocbgoo")))
                .withProtectedFiles(
                    Arrays.asList(new NginxConfigurationProtectedFileRequest().withContent("oybfhjxakvvj")
                        .withVirtualPath("lordilmywwtkgkxn")
                        .withContentHash("dabg")))
                .withPackageProperty(new NginxConfigurationPackage().withData("dtj")
                    .withProtectedFiles(Arrays.asList("bcihxuuwhc", "yxccyb", "payakkud")))
                .withRootFile("xgwjplmagstcyoh"))
            .create();

        Assertions.assertEquals("dg", response.properties().files().get(0).content());
        Assertions.assertEquals("gsj", response.properties().files().get(0).virtualPath());
        Assertions.assertEquals("egfnmntfpmvmemfn", response.properties().protectedFiles().get(0).virtualPath());
        Assertions.assertEquals("dwvvba", response.properties().protectedFiles().get(0).contentHash());
        Assertions.assertEquals("pjbabwidfc", response.properties().packageProperty().data());
        Assertions.assertEquals("puunnoxyhkxgqd", response.properties().packageProperty().protectedFiles().get(0));
        Assertions.assertEquals("sgeivsiy", response.properties().rootFile());
    }
}
