// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.nginx.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.nginx.models.DiagnosticItem;
import com.azure.resourcemanager.nginx.models.Level;
import org.junit.jupiter.api.Assertions;

public final class DiagnosticItemTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DiagnosticItem model = BinaryData.fromString(
            "{\"id\":\"iwwzjuqk\",\"directive\":\"rsa\",\"description\":\"iwkuofos\",\"file\":\"ghsauuimjmvxied\",\"line\":44.474648,\"message\":\"gidyjrrf\",\"rule\":\"y\",\"level\":\"Warning\",\"category\":\"v\"}")
            .toObject(DiagnosticItem.class);
        Assertions.assertEquals("iwwzjuqk", model.id());
        Assertions.assertEquals("rsa", model.directive());
        Assertions.assertEquals("iwkuofos", model.description());
        Assertions.assertEquals("ghsauuimjmvxied", model.file());
        Assertions.assertEquals(44.474648f, model.line());
        Assertions.assertEquals("gidyjrrf", model.message());
        Assertions.assertEquals("y", model.rule());
        Assertions.assertEquals(Level.WARNING, model.level());
        Assertions.assertEquals("v", model.category());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DiagnosticItem model = new DiagnosticItem().withId("iwwzjuqk")
            .withDirective("rsa")
            .withDescription("iwkuofos")
            .withFile("ghsauuimjmvxied")
            .withLine(44.474648f)
            .withMessage("gidyjrrf")
            .withRule("y")
            .withLevel(Level.WARNING)
            .withCategory("v");
        model = BinaryData.fromObject(model).toObject(DiagnosticItem.class);
        Assertions.assertEquals("iwwzjuqk", model.id());
        Assertions.assertEquals("rsa", model.directive());
        Assertions.assertEquals("iwkuofos", model.description());
        Assertions.assertEquals("ghsauuimjmvxied", model.file());
        Assertions.assertEquals(44.474648f, model.line());
        Assertions.assertEquals("gidyjrrf", model.message());
        Assertions.assertEquals("y", model.rule());
        Assertions.assertEquals(Level.WARNING, model.level());
        Assertions.assertEquals("v", model.category());
    }
}
