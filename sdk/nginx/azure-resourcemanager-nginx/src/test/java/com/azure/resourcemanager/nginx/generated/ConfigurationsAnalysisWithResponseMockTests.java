// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.nginx.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.nginx.NginxManager;
import com.azure.resourcemanager.nginx.models.AnalysisCreate;
import com.azure.resourcemanager.nginx.models.AnalysisCreateConfig;
import com.azure.resourcemanager.nginx.models.AnalysisResult;
import com.azure.resourcemanager.nginx.models.NginxConfigurationFile;
import com.azure.resourcemanager.nginx.models.NginxConfigurationPackage;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ConfigurationsAnalysisWithResponseMockTests {
    @Test
    public void testAnalysisWithResponse() throws Exception {
        String responseStr
            = "{\"status\":\"eh\",\"data\":{\"errors\":[{\"id\":\"gmifthnzd\",\"directive\":\"dslgnayqigynduh\",\"description\":\"vhqlkthumaqo\",\"file\":\"bgycduiertgccym\",\"line\":30.20277,\"message\":\"olpsslqlf\",\"rule\":\"mdnbbglzpswiy\"},{\"id\":\"cwyhzdxssa\",\"directive\":\"bzmnvdfznud\",\"description\":\"od\",\"file\":\"xzb\",\"line\":92.67567,\"message\":\"blylpstdbh\",\"rule\":\"xsrz\"}]}}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NginxManager manager = NginxManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        AnalysisResult response = manager.configurations()
            .analysisWithResponse("tkblmpewww", "bkrvrnsvshqj", "hxcr",
                new AnalysisCreate().withConfig(new AnalysisCreateConfig().withRootFile("fovasr")
                    .withFiles(Arrays
                        .asList(new NginxConfigurationFile().withContent("bhsqfsubcgjbirxb").withVirtualPath("bsrfbj")))
                    .withProtectedFiles(Arrays
                        .asList(new NginxConfigurationFile().withContent("ssotftpv").withVirtualPath("bexilzznfqqnv")))
                    .withPackageProperty(new NginxConfigurationPackage().withData("qtaruoujmkcjhwq")
                        .withProtectedFiles(Arrays.asList("r", "bnw", "ewgdrjervn", "enq")))),
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("eh", response.status());
        Assertions.assertEquals("gmifthnzd", response.data().errors().get(0).id());
        Assertions.assertEquals("dslgnayqigynduh", response.data().errors().get(0).directive());
        Assertions.assertEquals("vhqlkthumaqo", response.data().errors().get(0).description());
        Assertions.assertEquals("bgycduiertgccym", response.data().errors().get(0).file());
        Assertions.assertEquals(30.20277f, response.data().errors().get(0).line());
        Assertions.assertEquals("olpsslqlf", response.data().errors().get(0).message());
        Assertions.assertEquals("mdnbbglzpswiy", response.data().errors().get(0).rule());
    }
}
