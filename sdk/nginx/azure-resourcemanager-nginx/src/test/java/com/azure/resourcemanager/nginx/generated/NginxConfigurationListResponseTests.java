// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.nginx.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.nginx.fluent.models.NginxConfigurationResponseInner;
import com.azure.resourcemanager.nginx.models.NginxConfigurationFile;
import com.azure.resourcemanager.nginx.models.NginxConfigurationListResponse;
import com.azure.resourcemanager.nginx.models.NginxConfigurationPackage;
import com.azure.resourcemanager.nginx.models.NginxConfigurationProtectedFileResponse;
import com.azure.resourcemanager.nginx.models.NginxConfigurationResponseProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NginxConfigurationListResponseTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NginxConfigurationListResponse model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"provisioningState\":\"Deleting\",\"files\":[{\"content\":\"ddeqsrdeupewnwre\",\"virtualPath\":\"jzyflu\"},{\"content\":\"rh\",\"virtualPath\":\"fcqhsmyurkd\"}],\"protectedFiles\":[{\"virtualPath\":\"he\",\"contentHash\":\"k\"}],\"package\":{\"data\":\"xukcdmpar\",\"protectedFiles\":[\"uanzwuxzdx\"]},\"rootFile\":\"yrlhmwhfpmrqobm\"},\"id\":\"kknryrtihf\",\"name\":\"tijbpzvgnwzsymgl\",\"type\":\"uf\"}],\"nextLink\":\"zk\"}")
            .toObject(NginxConfigurationListResponse.class);
        Assertions.assertEquals("ddeqsrdeupewnwre", model.value().get(0).properties().files().get(0).content());
        Assertions.assertEquals("jzyflu", model.value().get(0).properties().files().get(0).virtualPath());
        Assertions.assertEquals("he", model.value().get(0).properties().protectedFiles().get(0).virtualPath());
        Assertions.assertEquals("k", model.value().get(0).properties().protectedFiles().get(0).contentHash());
        Assertions.assertEquals("xukcdmpar", model.value().get(0).properties().packageProperty().data());
        Assertions.assertEquals("uanzwuxzdx",
            model.value().get(0).properties().packageProperty().protectedFiles().get(0));
        Assertions.assertEquals("yrlhmwhfpmrqobm", model.value().get(0).properties().rootFile());
        Assertions.assertEquals("zk", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NginxConfigurationListResponse model
            = new NginxConfigurationListResponse()
                .withValue(
                    Arrays
                        .asList(new NginxConfigurationResponseInner()
                            .withProperties(new NginxConfigurationResponseProperties()
                                .withFiles(Arrays.asList(
                                    new NginxConfigurationFile().withContent("ddeqsrdeupewnwre")
                                        .withVirtualPath("jzyflu"),
                                    new NginxConfigurationFile().withContent("rh").withVirtualPath("fcqhsmyurkd")))
                                .withProtectedFiles(
                                    Arrays.asList(new NginxConfigurationProtectedFileResponse().withVirtualPath("he")
                                        .withContentHash("k")))
                                .withPackageProperty(new NginxConfigurationPackage().withData("xukcdmpar")
                                    .withProtectedFiles(Arrays.asList("uanzwuxzdx")))
                                .withRootFile("yrlhmwhfpmrqobm"))))
                .withNextLink("zk");
        model = BinaryData.fromObject(model).toObject(NginxConfigurationListResponse.class);
        Assertions.assertEquals("ddeqsrdeupewnwre", model.value().get(0).properties().files().get(0).content());
        Assertions.assertEquals("jzyflu", model.value().get(0).properties().files().get(0).virtualPath());
        Assertions.assertEquals("he", model.value().get(0).properties().protectedFiles().get(0).virtualPath());
        Assertions.assertEquals("k", model.value().get(0).properties().protectedFiles().get(0).contentHash());
        Assertions.assertEquals("xukcdmpar", model.value().get(0).properties().packageProperty().data());
        Assertions.assertEquals("uanzwuxzdx",
            model.value().get(0).properties().packageProperty().protectedFiles().get(0));
        Assertions.assertEquals("yrlhmwhfpmrqobm", model.value().get(0).properties().rootFile());
        Assertions.assertEquals("zk", model.nextLink());
    }
}
