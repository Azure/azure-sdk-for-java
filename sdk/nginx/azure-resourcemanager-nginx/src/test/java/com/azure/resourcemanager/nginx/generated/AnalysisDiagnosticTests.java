// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.nginx.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.nginx.models.AnalysisDiagnostic;
import org.junit.jupiter.api.Assertions;

public final class AnalysisDiagnosticTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AnalysisDiagnostic model = BinaryData.fromString(
            "{\"id\":\"wrlyxwjkcprb\",\"directive\":\"wbxgjvt\",\"description\":\"vpys\",\"file\":\"zdn\",\"line\":7.3524117,\"message\":\"jq\",\"rule\":\"uhmuouqfprwzwbn\"}")
            .toObject(AnalysisDiagnostic.class);
        Assertions.assertEquals("wrlyxwjkcprb", model.id());
        Assertions.assertEquals("wbxgjvt", model.directive());
        Assertions.assertEquals("vpys", model.description());
        Assertions.assertEquals("zdn", model.file());
        Assertions.assertEquals(7.3524117f, model.line());
        Assertions.assertEquals("jq", model.message());
        Assertions.assertEquals("uhmuouqfprwzwbn", model.rule());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AnalysisDiagnostic model = new AnalysisDiagnostic().withId("wrlyxwjkcprb")
            .withDirective("wbxgjvt")
            .withDescription("vpys")
            .withFile("zdn")
            .withLine(7.3524117f)
            .withMessage("jq")
            .withRule("uhmuouqfprwzwbn");
        model = BinaryData.fromObject(model).toObject(AnalysisDiagnostic.class);
        Assertions.assertEquals("wrlyxwjkcprb", model.id());
        Assertions.assertEquals("wbxgjvt", model.directive());
        Assertions.assertEquals("vpys", model.description());
        Assertions.assertEquals("zdn", model.file());
        Assertions.assertEquals(7.3524117f, model.line());
        Assertions.assertEquals("jq", model.message());
        Assertions.assertEquals("uhmuouqfprwzwbn", model.rule());
    }
}
