// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.nginx.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.nginx.models.NginxPrivateIpAddress;
import com.azure.resourcemanager.nginx.models.NginxPrivateIpAllocationMethod;
import org.junit.jupiter.api.Assertions;

public final class NginxPrivateIpAddressTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NginxPrivateIpAddress model = BinaryData.fromString(
            "{\"privateIPAddress\":\"noae\",\"privateIPAllocationMethod\":\"Dynamic\",\"subnetId\":\"yhltrpmopjmcm\"}")
            .toObject(NginxPrivateIpAddress.class);
        Assertions.assertEquals("noae", model.privateIpAddress());
        Assertions.assertEquals(NginxPrivateIpAllocationMethod.DYNAMIC, model.privateIpAllocationMethod());
        Assertions.assertEquals("yhltrpmopjmcm", model.subnetId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NginxPrivateIpAddress model = new NginxPrivateIpAddress().withPrivateIpAddress("noae")
            .withPrivateIpAllocationMethod(NginxPrivateIpAllocationMethod.DYNAMIC).withSubnetId("yhltrpmopjmcm");
        model = BinaryData.fromObject(model).toObject(NginxPrivateIpAddress.class);
        Assertions.assertEquals("noae", model.privateIpAddress());
        Assertions.assertEquals(NginxPrivateIpAllocationMethod.DYNAMIC, model.privateIpAllocationMethod());
        Assertions.assertEquals("yhltrpmopjmcm", model.subnetId());
    }
}
