// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.nginx.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.nginx.models.NginxPrivateIpAddress;
import com.azure.resourcemanager.nginx.models.NginxPrivateIpAllocationMethod;
import org.junit.jupiter.api.Assertions;

public final class NginxPrivateIpAddressTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NginxPrivateIpAddress model = BinaryData
            .fromString(
                "{\"privateIPAddress\":\"hoxus\",\"privateIPAllocationMethod\":\"Static\",\"subnetId\":\"bgyepsbj\"}")
            .toObject(NginxPrivateIpAddress.class);
        Assertions.assertEquals("hoxus", model.privateIpAddress());
        Assertions.assertEquals(NginxPrivateIpAllocationMethod.STATIC, model.privateIpAllocationMethod());
        Assertions.assertEquals("bgyepsbj", model.subnetId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NginxPrivateIpAddress model = new NginxPrivateIpAddress().withPrivateIpAddress("hoxus")
            .withPrivateIpAllocationMethod(NginxPrivateIpAllocationMethod.STATIC)
            .withSubnetId("bgyepsbj");
        model = BinaryData.fromObject(model).toObject(NginxPrivateIpAddress.class);
        Assertions.assertEquals("hoxus", model.privateIpAddress());
        Assertions.assertEquals(NginxPrivateIpAllocationMethod.STATIC, model.privateIpAllocationMethod());
        Assertions.assertEquals("bgyepsbj", model.subnetId());
    }
}
