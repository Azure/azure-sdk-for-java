// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.nginx.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.nginx.models.NginxConfigurationFile;
import com.azure.resourcemanager.nginx.models.NginxConfigurationPackage;
import com.azure.resourcemanager.nginx.models.NginxConfigurationProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NginxConfigurationPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NginxConfigurationProperties model = BinaryData.fromString(
            "{\"provisioningState\":\"Updating\",\"files\":[{\"content\":\"nchgej\",\"virtualPath\":\"odmailzyd\"}],\"protectedFiles\":[{\"content\":\"wyahuxinpmqnja\",\"virtualPath\":\"ixjsprozvcputeg\"}],\"package\":{\"data\":\"mfdatscmdvpj\",\"protectedFiles\":[\"suuv\",\"kjozkrwfnd\",\"odjpslwejd\",\"vwryoqpso\"]},\"rootFile\":\"ctazakljlahbcryf\"}")
            .toObject(NginxConfigurationProperties.class);
        Assertions.assertEquals("nchgej", model.files().get(0).content());
        Assertions.assertEquals("odmailzyd", model.files().get(0).virtualPath());
        Assertions.assertEquals("wyahuxinpmqnja", model.protectedFiles().get(0).content());
        Assertions.assertEquals("ixjsprozvcputeg", model.protectedFiles().get(0).virtualPath());
        Assertions.assertEquals("mfdatscmdvpj", model.packageProperty().data());
        Assertions.assertEquals("suuv", model.packageProperty().protectedFiles().get(0));
        Assertions.assertEquals("ctazakljlahbcryf", model.rootFile());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NginxConfigurationProperties model = new NginxConfigurationProperties()
            .withFiles(Arrays.asList(new NginxConfigurationFile().withContent("nchgej").withVirtualPath("odmailzyd")))
            .withProtectedFiles(Arrays
                .asList(new NginxConfigurationFile().withContent("wyahuxinpmqnja").withVirtualPath("ixjsprozvcputeg")))
            .withPackageProperty(new NginxConfigurationPackage().withData("mfdatscmdvpj")
                .withProtectedFiles(Arrays.asList("suuv", "kjozkrwfnd", "odjpslwejd", "vwryoqpso")))
            .withRootFile("ctazakljlahbcryf");
        model = BinaryData.fromObject(model).toObject(NginxConfigurationProperties.class);
        Assertions.assertEquals("nchgej", model.files().get(0).content());
        Assertions.assertEquals("odmailzyd", model.files().get(0).virtualPath());
        Assertions.assertEquals("wyahuxinpmqnja", model.protectedFiles().get(0).content());
        Assertions.assertEquals("ixjsprozvcputeg", model.protectedFiles().get(0).virtualPath());
        Assertions.assertEquals("mfdatscmdvpj", model.packageProperty().data());
        Assertions.assertEquals("suuv", model.packageProperty().protectedFiles().get(0));
        Assertions.assertEquals("ctazakljlahbcryf", model.rootFile());
    }
}
