// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.nginx.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.nginx.fluent.models.OperationResultInner;
import com.azure.resourcemanager.nginx.models.OperationDisplay;
import com.azure.resourcemanager.nginx.models.OperationListResult;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class OperationListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationListResult model = BinaryData.fromString(
            "{\"value\":[{\"name\":\"kkfoqr\",\"display\":{\"provider\":\"kzikfjawneaivxwc\",\"resource\":\"lpcirelsf\",\"operation\":\"enwabfatk\",\"description\":\"dxbjhwuaanozj\"},\"isDataAction\":false},{\"name\":\"youlp\",\"display\":{\"provider\":\"xagl\",\"resource\":\"imjwosyt\",\"operation\":\"tcs\",\"description\":\"cktqumiekkezzi\"},\"isDataAction\":false},{\"name\":\"fjhdg\",\"display\":{\"provider\":\"ebdunyg\",\"resource\":\"qidbqfatpxllrxcy\",\"operation\":\"oadsuvar\",\"description\":\"wdmjsjqbjhhyx\"},\"isDataAction\":true}],\"nextLink\":\"yc\"}")
            .toObject(OperationListResult.class);
        Assertions.assertEquals("kkfoqr", model.value().get(0).name());
        Assertions.assertEquals("kzikfjawneaivxwc", model.value().get(0).display().provider());
        Assertions.assertEquals("lpcirelsf", model.value().get(0).display().resource());
        Assertions.assertEquals("enwabfatk", model.value().get(0).display().operation());
        Assertions.assertEquals("dxbjhwuaanozj", model.value().get(0).display().description());
        Assertions.assertEquals(false, model.value().get(0).isDataAction());
        Assertions.assertEquals("yc", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationListResult model = new OperationListResult().withValue(Arrays.asList(
            new OperationResultInner().withName("kkfoqr")
                .withDisplay(new OperationDisplay().withProvider("kzikfjawneaivxwc")
                    .withResource("lpcirelsf")
                    .withOperation("enwabfatk")
                    .withDescription("dxbjhwuaanozj"))
                .withIsDataAction(false),
            new OperationResultInner().withName("youlp")
                .withDisplay(new OperationDisplay().withProvider("xagl")
                    .withResource("imjwosyt")
                    .withOperation("tcs")
                    .withDescription("cktqumiekkezzi"))
                .withIsDataAction(false),
            new OperationResultInner().withName("fjhdg")
                .withDisplay(new OperationDisplay().withProvider("ebdunyg")
                    .withResource("qidbqfatpxllrxcy")
                    .withOperation("oadsuvar")
                    .withDescription("wdmjsjqbjhhyx"))
                .withIsDataAction(true)))
            .withNextLink("yc");
        model = BinaryData.fromObject(model).toObject(OperationListResult.class);
        Assertions.assertEquals("kkfoqr", model.value().get(0).name());
        Assertions.assertEquals("kzikfjawneaivxwc", model.value().get(0).display().provider());
        Assertions.assertEquals("lpcirelsf", model.value().get(0).display().resource());
        Assertions.assertEquals("enwabfatk", model.value().get(0).display().operation());
        Assertions.assertEquals("dxbjhwuaanozj", model.value().get(0).display().description());
        Assertions.assertEquals(false, model.value().get(0).isDataAction());
        Assertions.assertEquals("yc", model.nextLink());
    }
}
