// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.nginx.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.nginx.fluent.models.OperationResultInner;
import com.azure.resourcemanager.nginx.models.OperationDisplay;
import com.azure.resourcemanager.nginx.models.OperationListResult;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class OperationListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationListResult model = BinaryData.fromString(
            "{\"value\":[{\"name\":\"zycispn\",\"display\":{\"provider\":\"hmgkbrpyy\",\"resource\":\"ibnuqqkpik\",\"operation\":\"rgvtqag\",\"description\":\"uynhijg\"},\"isDataAction\":false}],\"nextLink\":\"fsiarbutr\"}")
            .toObject(OperationListResult.class);
        Assertions.assertEquals("zycispn", model.value().get(0).name());
        Assertions.assertEquals("hmgkbrpyy", model.value().get(0).display().provider());
        Assertions.assertEquals("ibnuqqkpik", model.value().get(0).display().resource());
        Assertions.assertEquals("rgvtqag", model.value().get(0).display().operation());
        Assertions.assertEquals("uynhijg", model.value().get(0).display().description());
        Assertions.assertEquals(false, model.value().get(0).isDataAction());
        Assertions.assertEquals("fsiarbutr", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationListResult model = new OperationListResult()
            .withValue(Arrays.asList(new OperationResultInner().withName("zycispn")
                .withDisplay(new OperationDisplay().withProvider("hmgkbrpyy").withResource("ibnuqqkpik")
                    .withOperation("rgvtqag").withDescription("uynhijg"))
                .withIsDataAction(false)))
            .withNextLink("fsiarbutr");
        model = BinaryData.fromObject(model).toObject(OperationListResult.class);
        Assertions.assertEquals("zycispn", model.value().get(0).name());
        Assertions.assertEquals("hmgkbrpyy", model.value().get(0).display().provider());
        Assertions.assertEquals("ibnuqqkpik", model.value().get(0).display().resource());
        Assertions.assertEquals("rgvtqag", model.value().get(0).display().operation());
        Assertions.assertEquals("uynhijg", model.value().get(0).display().description());
        Assertions.assertEquals(false, model.value().get(0).isDataAction());
        Assertions.assertEquals("fsiarbutr", model.nextLink());
    }
}
