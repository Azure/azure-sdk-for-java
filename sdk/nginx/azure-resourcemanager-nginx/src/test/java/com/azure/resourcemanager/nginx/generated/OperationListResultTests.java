// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.nginx.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.nginx.fluent.models.OperationResultInner;
import com.azure.resourcemanager.nginx.models.OperationDisplay;
import com.azure.resourcemanager.nginx.models.OperationListResult;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class OperationListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationListResult model = BinaryData.fromString(
            "{\"value\":[{\"name\":\"hl\",\"display\":{\"provider\":\"bh\",\"resource\":\"frlh\",\"operation\":\"sbkyvpycanuzbp\",\"description\":\"afkuwb\"},\"isDataAction\":false},{\"name\":\"bmehh\",\"display\":{\"provider\":\"v\",\"resource\":\"srtslhspkdeem\",\"operation\":\"fm\",\"description\":\"gkvtmelmqkrhah\"},\"isDataAction\":true}],\"nextLink\":\"ahaquh\"}")
            .toObject(OperationListResult.class);
        Assertions.assertEquals("hl", model.value().get(0).name());
        Assertions.assertEquals("bh", model.value().get(0).display().provider());
        Assertions.assertEquals("frlh", model.value().get(0).display().resource());
        Assertions.assertEquals("sbkyvpycanuzbp", model.value().get(0).display().operation());
        Assertions.assertEquals("afkuwb", model.value().get(0).display().description());
        Assertions.assertEquals(false, model.value().get(0).isDataAction());
        Assertions.assertEquals("ahaquh", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationListResult model = new OperationListResult().withValue(Arrays.asList(
            new OperationResultInner().withName("hl")
                .withDisplay(new OperationDisplay().withProvider("bh")
                    .withResource("frlh")
                    .withOperation("sbkyvpycanuzbp")
                    .withDescription("afkuwb"))
                .withIsDataAction(false),
            new OperationResultInner().withName("bmehh")
                .withDisplay(new OperationDisplay().withProvider("v")
                    .withResource("srtslhspkdeem")
                    .withOperation("fm")
                    .withDescription("gkvtmelmqkrhah"))
                .withIsDataAction(true)))
            .withNextLink("ahaquh");
        model = BinaryData.fromObject(model).toObject(OperationListResult.class);
        Assertions.assertEquals("hl", model.value().get(0).name());
        Assertions.assertEquals("bh", model.value().get(0).display().provider());
        Assertions.assertEquals("frlh", model.value().get(0).display().resource());
        Assertions.assertEquals("sbkyvpycanuzbp", model.value().get(0).display().operation());
        Assertions.assertEquals("afkuwb", model.value().get(0).display().description());
        Assertions.assertEquals(false, model.value().get(0).isDataAction());
        Assertions.assertEquals("ahaquh", model.nextLink());
    }
}
