// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.nginx.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.nginx.models.NginxFrontendIpConfiguration;
import com.azure.resourcemanager.nginx.models.NginxNetworkInterfaceConfiguration;
import com.azure.resourcemanager.nginx.models.NginxNetworkProfile;
import com.azure.resourcemanager.nginx.models.NginxPrivateIpAddress;
import com.azure.resourcemanager.nginx.models.NginxPrivateIpAllocationMethod;
import com.azure.resourcemanager.nginx.models.NginxPublicIpAddress;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NginxNetworkProfileTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NginxNetworkProfile model = BinaryData.fromString(
            "{\"frontEndIPConfiguration\":{\"publicIPAddresses\":[{\"id\":\"xhejjzzvdud\"}],\"privateIPAddresses\":[{\"privateIPAddress\":\"lfh\",\"privateIPAllocationMethod\":\"Static\",\"subnetId\":\"cynpwlbjnp\"},{\"privateIPAddress\":\"cftadeh\",\"privateIPAllocationMethod\":\"Static\",\"subnetId\":\"yfsoppu\"},{\"privateIPAddress\":\"esnzwde\",\"privateIPAllocationMethod\":\"Static\",\"subnetId\":\"orxzdmohctbqvud\"}]},\"networkInterfaceConfiguration\":{\"subnetId\":\"ndnvo\"}}")
            .toObject(NginxNetworkProfile.class);
        Assertions.assertEquals("xhejjzzvdud", model.frontEndIpConfiguration().publicIpAddresses().get(0).id());
        Assertions.assertEquals("lfh", model.frontEndIpConfiguration().privateIpAddresses().get(0).privateIpAddress());
        Assertions.assertEquals(NginxPrivateIpAllocationMethod.STATIC,
            model.frontEndIpConfiguration().privateIpAddresses().get(0).privateIpAllocationMethod());
        Assertions.assertEquals("cynpwlbjnp", model.frontEndIpConfiguration().privateIpAddresses().get(0).subnetId());
        Assertions.assertEquals("ndnvo", model.networkInterfaceConfiguration().subnetId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NginxNetworkProfile model = new NginxNetworkProfile()
            .withFrontEndIpConfiguration(new NginxFrontendIpConfiguration()
                .withPublicIpAddresses(Arrays.asList(new NginxPublicIpAddress().withId("xhejjzzvdud")))
                .withPrivateIpAddresses(Arrays.asList(new NginxPrivateIpAddress().withPrivateIpAddress("lfh")
                    .withPrivateIpAllocationMethod(NginxPrivateIpAllocationMethod.STATIC).withSubnetId("cynpwlbjnp"),
                    new NginxPrivateIpAddress().withPrivateIpAddress("cftadeh")
                        .withPrivateIpAllocationMethod(NginxPrivateIpAllocationMethod.STATIC).withSubnetId("yfsoppu"),
                    new NginxPrivateIpAddress().withPrivateIpAddress("esnzwde")
                        .withPrivateIpAllocationMethod(NginxPrivateIpAllocationMethod.STATIC)
                        .withSubnetId("orxzdmohctbqvud"))))
            .withNetworkInterfaceConfiguration(new NginxNetworkInterfaceConfiguration().withSubnetId("ndnvo"));
        model = BinaryData.fromObject(model).toObject(NginxNetworkProfile.class);
        Assertions.assertEquals("xhejjzzvdud", model.frontEndIpConfiguration().publicIpAddresses().get(0).id());
        Assertions.assertEquals("lfh", model.frontEndIpConfiguration().privateIpAddresses().get(0).privateIpAddress());
        Assertions.assertEquals(NginxPrivateIpAllocationMethod.STATIC,
            model.frontEndIpConfiguration().privateIpAddresses().get(0).privateIpAllocationMethod());
        Assertions.assertEquals("cynpwlbjnp", model.frontEndIpConfiguration().privateIpAddresses().get(0).subnetId());
        Assertions.assertEquals("ndnvo", model.networkInterfaceConfiguration().subnetId());
    }
}
