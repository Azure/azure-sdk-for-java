// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.nginx.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.nginx.fluent.models.AnalysisResultInner;
import com.azure.resourcemanager.nginx.models.AnalysisDiagnostic;
import com.azure.resourcemanager.nginx.models.AnalysisResultData;
import com.azure.resourcemanager.nginx.models.DiagnosticItem;
import com.azure.resourcemanager.nginx.models.Level;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AnalysisResultInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AnalysisResultInner model = BinaryData.fromString(
            "{\"status\":\"eojnxqbzvddn\",\"data\":{\"errors\":[{\"id\":\"icbtwnpzao\",\"directive\":\"vuhrhcffcyddgl\",\"description\":\"jthjqkwpyei\",\"file\":\"xmqci\",\"line\":2.3759544,\"message\":\"vhkhixu\",\"rule\":\"gdtopbobjogh\"},{\"id\":\"w\",\"directive\":\"a\",\"description\":\"a\",\"file\":\"hrzayvvtpgvdf\",\"line\":66.835686,\"message\":\"otkftutqxlngx\",\"rule\":\"efgugnxk\"},{\"id\":\"dqmidtt\",\"directive\":\"zrvqdr\",\"description\":\"bhj\",\"file\":\"big\",\"line\":4.9429297,\"message\":\"oqfbowskanyk\",\"rule\":\"zlcuiywgqywgndrv\"}],\"diagnostics\":[{\"id\":\"gpphrcgyn\",\"directive\":\"ocpecfvmmco\",\"description\":\"fsxlzevgbmqjqa\",\"file\":\"c\",\"line\":53.236153,\"message\":\"mivkwlzuvcc\",\"rule\":\"wnfnbacf\",\"level\":\"Warning\",\"category\":\"l\"},{\"id\":\"x\",\"directive\":\"tqgtzxdpnqbqq\",\"description\":\"xrjfeallnwsub\",\"file\":\"snjampmng\",\"line\":44.95027,\"message\":\"scxaq\",\"rule\":\"ooch\",\"level\":\"Warning\",\"category\":\"nqvpkvlrxnje\"},{\"id\":\"eipheoflokeyy\",\"directive\":\"enjbdlwtgrhp\",\"description\":\"jp\",\"file\":\"umasxazjpq\",\"line\":4.29253,\"message\":\"gual\",\"rule\":\"b\",\"level\":\"Warning\",\"category\":\"e\"},{\"id\":\"zzvdudgwds\",\"directive\":\"fhotw\",\"description\":\"cynpwlbjnp\",\"file\":\"acfta\",\"line\":63.682568,\"message\":\"h\",\"rule\":\"nltyfsoppusuesnz\",\"level\":\"Info\",\"category\":\"jbavorxzdm\"}]}}")
            .toObject(AnalysisResultInner.class);
        Assertions.assertEquals("eojnxqbzvddn", model.status());
        Assertions.assertEquals("icbtwnpzao", model.data().errors().get(0).id());
        Assertions.assertEquals("vuhrhcffcyddgl", model.data().errors().get(0).directive());
        Assertions.assertEquals("jthjqkwpyei", model.data().errors().get(0).description());
        Assertions.assertEquals("xmqci", model.data().errors().get(0).file());
        Assertions.assertEquals(2.3759544f, model.data().errors().get(0).line());
        Assertions.assertEquals("vhkhixu", model.data().errors().get(0).message());
        Assertions.assertEquals("gdtopbobjogh", model.data().errors().get(0).rule());
        Assertions.assertEquals("gpphrcgyn", model.data().diagnostics().get(0).id());
        Assertions.assertEquals("ocpecfvmmco", model.data().diagnostics().get(0).directive());
        Assertions.assertEquals("fsxlzevgbmqjqa", model.data().diagnostics().get(0).description());
        Assertions.assertEquals("c", model.data().diagnostics().get(0).file());
        Assertions.assertEquals(53.236153f, model.data().diagnostics().get(0).line());
        Assertions.assertEquals("mivkwlzuvcc", model.data().diagnostics().get(0).message());
        Assertions.assertEquals("wnfnbacf", model.data().diagnostics().get(0).rule());
        Assertions.assertEquals(Level.WARNING, model.data().diagnostics().get(0).level());
        Assertions.assertEquals("l", model.data().diagnostics().get(0).category());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AnalysisResultInner model = new AnalysisResultInner().withStatus("eojnxqbzvddn")
            .withData(new AnalysisResultData()
                .withErrors(Arrays.asList(
                    new AnalysisDiagnostic().withId("icbtwnpzao")
                        .withDirective("vuhrhcffcyddgl")
                        .withDescription("jthjqkwpyei")
                        .withFile("xmqci")
                        .withLine(2.3759544f)
                        .withMessage("vhkhixu")
                        .withRule("gdtopbobjogh"),
                    new AnalysisDiagnostic().withId("w")
                        .withDirective("a")
                        .withDescription("a")
                        .withFile("hrzayvvtpgvdf")
                        .withLine(66.835686f)
                        .withMessage("otkftutqxlngx")
                        .withRule("efgugnxk"),
                    new AnalysisDiagnostic().withId("dqmidtt")
                        .withDirective("zrvqdr")
                        .withDescription("bhj")
                        .withFile("big")
                        .withLine(4.9429297f)
                        .withMessage("oqfbowskanyk")
                        .withRule("zlcuiywgqywgndrv")))
                .withDiagnostics(Arrays.asList(
                    new DiagnosticItem().withId("gpphrcgyn")
                        .withDirective("ocpecfvmmco")
                        .withDescription("fsxlzevgbmqjqa")
                        .withFile("c")
                        .withLine(53.236153f)
                        .withMessage("mivkwlzuvcc")
                        .withRule("wnfnbacf")
                        .withLevel(Level.WARNING)
                        .withCategory("l"),
                    new DiagnosticItem().withId("x")
                        .withDirective("tqgtzxdpnqbqq")
                        .withDescription("xrjfeallnwsub")
                        .withFile("snjampmng")
                        .withLine(44.95027f)
                        .withMessage("scxaq")
                        .withRule("ooch")
                        .withLevel(Level.WARNING)
                        .withCategory("nqvpkvlrxnje"),
                    new DiagnosticItem().withId("eipheoflokeyy")
                        .withDirective("enjbdlwtgrhp")
                        .withDescription("jp")
                        .withFile("umasxazjpq")
                        .withLine(4.29253f)
                        .withMessage("gual")
                        .withRule("b")
                        .withLevel(Level.WARNING)
                        .withCategory("e"),
                    new DiagnosticItem().withId("zzvdudgwds")
                        .withDirective("fhotw")
                        .withDescription("cynpwlbjnp")
                        .withFile("acfta")
                        .withLine(63.682568f)
                        .withMessage("h")
                        .withRule("nltyfsoppusuesnz")
                        .withLevel(Level.INFO)
                        .withCategory("jbavorxzdm"))));
        model = BinaryData.fromObject(model).toObject(AnalysisResultInner.class);
        Assertions.assertEquals("eojnxqbzvddn", model.status());
        Assertions.assertEquals("icbtwnpzao", model.data().errors().get(0).id());
        Assertions.assertEquals("vuhrhcffcyddgl", model.data().errors().get(0).directive());
        Assertions.assertEquals("jthjqkwpyei", model.data().errors().get(0).description());
        Assertions.assertEquals("xmqci", model.data().errors().get(0).file());
        Assertions.assertEquals(2.3759544f, model.data().errors().get(0).line());
        Assertions.assertEquals("vhkhixu", model.data().errors().get(0).message());
        Assertions.assertEquals("gdtopbobjogh", model.data().errors().get(0).rule());
        Assertions.assertEquals("gpphrcgyn", model.data().diagnostics().get(0).id());
        Assertions.assertEquals("ocpecfvmmco", model.data().diagnostics().get(0).directive());
        Assertions.assertEquals("fsxlzevgbmqjqa", model.data().diagnostics().get(0).description());
        Assertions.assertEquals("c", model.data().diagnostics().get(0).file());
        Assertions.assertEquals(53.236153f, model.data().diagnostics().get(0).line());
        Assertions.assertEquals("mivkwlzuvcc", model.data().diagnostics().get(0).message());
        Assertions.assertEquals("wnfnbacf", model.data().diagnostics().get(0).rule());
        Assertions.assertEquals(Level.WARNING, model.data().diagnostics().get(0).level());
        Assertions.assertEquals("l", model.data().diagnostics().get(0).category());
    }
}
