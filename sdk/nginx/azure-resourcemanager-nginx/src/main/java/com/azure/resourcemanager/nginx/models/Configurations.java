// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.nginx.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of Configurations. */
public interface Configurations {
    /**
     * List the Nginx configuration of given Nginx deployment.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param deploymentName The name of targeted Nginx deployment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response of a list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<NginxConfiguration> list(String resourceGroupName, String deploymentName);

    /**
     * List the Nginx configuration of given Nginx deployment.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param deploymentName The name of targeted Nginx deployment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response of a list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<NginxConfiguration> list(String resourceGroupName, String deploymentName, Context context);

    /**
     * Get the Nginx configuration of given Nginx deployment.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param deploymentName The name of targeted Nginx deployment.
     * @param configurationName The name of configuration, only 'default' is supported value due to the singleton of
     *     Nginx conf.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Nginx configuration of given Nginx deployment along with {@link Response}.
     */
    Response<NginxConfiguration> getWithResponse(
        String resourceGroupName, String deploymentName, String configurationName, Context context);

    /**
     * Get the Nginx configuration of given Nginx deployment.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param deploymentName The name of targeted Nginx deployment.
     * @param configurationName The name of configuration, only 'default' is supported value due to the singleton of
     *     Nginx conf.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Nginx configuration of given Nginx deployment.
     */
    NginxConfiguration get(String resourceGroupName, String deploymentName, String configurationName);

    /**
     * Reset the Nginx configuration of given Nginx deployment to default.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param deploymentName The name of targeted Nginx deployment.
     * @param configurationName The name of configuration, only 'default' is supported value due to the singleton of
     *     Nginx conf.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String deploymentName, String configurationName);

    /**
     * Reset the Nginx configuration of given Nginx deployment to default.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param deploymentName The name of targeted Nginx deployment.
     * @param configurationName The name of configuration, only 'default' is supported value due to the singleton of
     *     Nginx conf.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String deploymentName, String configurationName, Context context);

    /**
     * Get the Nginx configuration of given Nginx deployment.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Nginx configuration of given Nginx deployment along with {@link Response}.
     */
    NginxConfiguration getById(String id);

    /**
     * Get the Nginx configuration of given Nginx deployment.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Nginx configuration of given Nginx deployment along with {@link Response}.
     */
    Response<NginxConfiguration> getByIdWithResponse(String id, Context context);

    /**
     * Reset the Nginx configuration of given Nginx deployment to default.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Reset the Nginx configuration of given Nginx deployment to default.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new NginxConfiguration resource.
     *
     * @param name resource name.
     * @return the first stage of the new NginxConfiguration definition.
     */
    NginxConfiguration.DefinitionStages.Blank define(String name);
}
