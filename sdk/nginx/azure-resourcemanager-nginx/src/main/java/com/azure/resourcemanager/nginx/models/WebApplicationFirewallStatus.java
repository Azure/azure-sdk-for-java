// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.nginx.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The status of the NGINX App Protect Web Application Firewall.
 */
@Immutable
public final class WebApplicationFirewallStatus implements JsonSerializable<WebApplicationFirewallStatus> {
    /*
     * Package containing attack signatures for the NGINX App Protect Web Application Firewall (WAF).
     */
    private WebApplicationFirewallPackage attackSignaturesPackage;

    /*
     * Package containing bot signatures for the NGINX App Protect Web Application Firewall (WAF).
     */
    private WebApplicationFirewallPackage botSignaturesPackage;

    /*
     * Package containing threat campaigns for the NGINX App Protect Web Application Firewall (WAF).
     */
    private WebApplicationFirewallPackage threatCampaignsPackage;

    /*
     * Versions of the NGINX App Protect Web Application Firewall (WAF) components.
     */
    private WebApplicationFirewallComponentVersions componentVersions;

    /**
     * Creates an instance of WebApplicationFirewallStatus class.
     */
    public WebApplicationFirewallStatus() {
    }

    /**
     * Get the attackSignaturesPackage property: Package containing attack signatures for the NGINX App Protect Web
     * Application Firewall (WAF).
     * 
     * @return the attackSignaturesPackage value.
     */
    public WebApplicationFirewallPackage attackSignaturesPackage() {
        return this.attackSignaturesPackage;
    }

    /**
     * Get the botSignaturesPackage property: Package containing bot signatures for the NGINX App Protect Web
     * Application Firewall (WAF).
     * 
     * @return the botSignaturesPackage value.
     */
    public WebApplicationFirewallPackage botSignaturesPackage() {
        return this.botSignaturesPackage;
    }

    /**
     * Get the threatCampaignsPackage property: Package containing threat campaigns for the NGINX App Protect Web
     * Application Firewall (WAF).
     * 
     * @return the threatCampaignsPackage value.
     */
    public WebApplicationFirewallPackage threatCampaignsPackage() {
        return this.threatCampaignsPackage;
    }

    /**
     * Get the componentVersions property: Versions of the NGINX App Protect Web Application Firewall (WAF) components.
     * 
     * @return the componentVersions value.
     */
    public WebApplicationFirewallComponentVersions componentVersions() {
        return this.componentVersions;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (attackSignaturesPackage() != null) {
            attackSignaturesPackage().validate();
        }
        if (botSignaturesPackage() != null) {
            botSignaturesPackage().validate();
        }
        if (threatCampaignsPackage() != null) {
            threatCampaignsPackage().validate();
        }
        if (componentVersions() != null) {
            componentVersions().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of WebApplicationFirewallStatus from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of WebApplicationFirewallStatus if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the WebApplicationFirewallStatus.
     */
    public static WebApplicationFirewallStatus fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            WebApplicationFirewallStatus deserializedWebApplicationFirewallStatus = new WebApplicationFirewallStatus();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("attackSignaturesPackage".equals(fieldName)) {
                    deserializedWebApplicationFirewallStatus.attackSignaturesPackage
                        = WebApplicationFirewallPackage.fromJson(reader);
                } else if ("botSignaturesPackage".equals(fieldName)) {
                    deserializedWebApplicationFirewallStatus.botSignaturesPackage
                        = WebApplicationFirewallPackage.fromJson(reader);
                } else if ("threatCampaignsPackage".equals(fieldName)) {
                    deserializedWebApplicationFirewallStatus.threatCampaignsPackage
                        = WebApplicationFirewallPackage.fromJson(reader);
                } else if ("componentVersions".equals(fieldName)) {
                    deserializedWebApplicationFirewallStatus.componentVersions
                        = WebApplicationFirewallComponentVersions.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedWebApplicationFirewallStatus;
        });
    }
}
