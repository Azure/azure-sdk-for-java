// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.nginx.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The NginxDeploymentUserProfile model.
 */
@Fluent
public final class NginxDeploymentUserProfile implements JsonSerializable<NginxDeploymentUserProfile> {
    /*
     * The preferred support contact email address of the user used for sending alerts and notification. Can be an empty
     * string or a valid email address.
     */
    private String preferredEmail;

    /**
     * Creates an instance of NginxDeploymentUserProfile class.
     */
    public NginxDeploymentUserProfile() {
    }

    /**
     * Get the preferredEmail property: The preferred support contact email address of the user used for sending alerts
     * and notification. Can be an empty string or a valid email address.
     * 
     * @return the preferredEmail value.
     */
    public String preferredEmail() {
        return this.preferredEmail;
    }

    /**
     * Set the preferredEmail property: The preferred support contact email address of the user used for sending alerts
     * and notification. Can be an empty string or a valid email address.
     * 
     * @param preferredEmail the preferredEmail value to set.
     * @return the NginxDeploymentUserProfile object itself.
     */
    public NginxDeploymentUserProfile withPreferredEmail(String preferredEmail) {
        this.preferredEmail = preferredEmail;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("preferredEmail", this.preferredEmail);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of NginxDeploymentUserProfile from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of NginxDeploymentUserProfile if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the NginxDeploymentUserProfile.
     */
    public static NginxDeploymentUserProfile fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            NginxDeploymentUserProfile deserializedNginxDeploymentUserProfile = new NginxDeploymentUserProfile();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("preferredEmail".equals(fieldName)) {
                    deserializedNginxDeploymentUserProfile.preferredEmail = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedNginxDeploymentUserProfile;
        });
    }
}
