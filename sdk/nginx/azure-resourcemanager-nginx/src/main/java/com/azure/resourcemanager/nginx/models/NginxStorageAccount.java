// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.nginx.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The NginxStorageAccount model.
 */
@Fluent
public final class NginxStorageAccount implements JsonSerializable<NginxStorageAccount> {
    /*
     * The accountName property.
     */
    private String accountName;

    /*
     * The containerName property.
     */
    private String containerName;

    /**
     * Creates an instance of NginxStorageAccount class.
     */
    public NginxStorageAccount() {
    }

    /**
     * Get the accountName property: The accountName property.
     * 
     * @return the accountName value.
     */
    public String accountName() {
        return this.accountName;
    }

    /**
     * Set the accountName property: The accountName property.
     * 
     * @param accountName the accountName value to set.
     * @return the NginxStorageAccount object itself.
     */
    public NginxStorageAccount withAccountName(String accountName) {
        this.accountName = accountName;
        return this;
    }

    /**
     * Get the containerName property: The containerName property.
     * 
     * @return the containerName value.
     */
    public String containerName() {
        return this.containerName;
    }

    /**
     * Set the containerName property: The containerName property.
     * 
     * @param containerName the containerName value to set.
     * @return the NginxStorageAccount object itself.
     */
    public NginxStorageAccount withContainerName(String containerName) {
        this.containerName = containerName;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("accountName", this.accountName);
        jsonWriter.writeStringField("containerName", this.containerName);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of NginxStorageAccount from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of NginxStorageAccount if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the NginxStorageAccount.
     */
    public static NginxStorageAccount fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            NginxStorageAccount deserializedNginxStorageAccount = new NginxStorageAccount();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("accountName".equals(fieldName)) {
                    deserializedNginxStorageAccount.accountName = reader.getString();
                } else if ("containerName".equals(fieldName)) {
                    deserializedNginxStorageAccount.containerName = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedNginxStorageAccount;
        });
    }
}
