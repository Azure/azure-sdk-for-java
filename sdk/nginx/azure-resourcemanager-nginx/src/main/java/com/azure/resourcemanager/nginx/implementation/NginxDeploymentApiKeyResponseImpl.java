// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.nginx.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.nginx.fluent.models.NginxDeploymentApiKeyResponseInner;
import com.azure.resourcemanager.nginx.models.NginxDeploymentApiKeyRequest;
import com.azure.resourcemanager.nginx.models.NginxDeploymentApiKeyRequestProperties;
import com.azure.resourcemanager.nginx.models.NginxDeploymentApiKeyResponse;
import com.azure.resourcemanager.nginx.models.NginxDeploymentApiKeyResponseProperties;

public final class NginxDeploymentApiKeyResponseImpl implements NginxDeploymentApiKeyResponse,
    NginxDeploymentApiKeyResponse.Definition, NginxDeploymentApiKeyResponse.Update {
    private NginxDeploymentApiKeyResponseInner innerObject;

    private final com.azure.resourcemanager.nginx.NginxManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public NginxDeploymentApiKeyResponseProperties properties() {
        return this.innerModel().properties();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public NginxDeploymentApiKeyResponseInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.nginx.NginxManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String deploymentName;

    private String apiKeyName;

    private NginxDeploymentApiKeyRequest createBody;

    private NginxDeploymentApiKeyRequest updateBody;

    public NginxDeploymentApiKeyResponseImpl withExistingNginxDeployment(String resourceGroupName,
        String deploymentName) {
        this.resourceGroupName = resourceGroupName;
        this.deploymentName = deploymentName;
        return this;
    }

    public NginxDeploymentApiKeyResponse create() {
        this.innerObject = serviceManager.serviceClient()
            .getApiKeys()
            .createOrUpdateWithResponse(resourceGroupName, deploymentName, apiKeyName, createBody, Context.NONE)
            .getValue();
        return this;
    }

    public NginxDeploymentApiKeyResponse create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getApiKeys()
            .createOrUpdateWithResponse(resourceGroupName, deploymentName, apiKeyName, createBody, context)
            .getValue();
        return this;
    }

    NginxDeploymentApiKeyResponseImpl(String name, com.azure.resourcemanager.nginx.NginxManager serviceManager) {
        this.innerObject = new NginxDeploymentApiKeyResponseInner();
        this.serviceManager = serviceManager;
        this.apiKeyName = name;
        this.createBody = new NginxDeploymentApiKeyRequest();
    }

    public NginxDeploymentApiKeyResponseImpl update() {
        this.updateBody = new NginxDeploymentApiKeyRequest();
        return this;
    }

    public NginxDeploymentApiKeyResponse apply() {
        this.innerObject = serviceManager.serviceClient()
            .getApiKeys()
            .createOrUpdateWithResponse(resourceGroupName, deploymentName, apiKeyName, updateBody, Context.NONE)
            .getValue();
        return this;
    }

    public NginxDeploymentApiKeyResponse apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getApiKeys()
            .createOrUpdateWithResponse(resourceGroupName, deploymentName, apiKeyName, updateBody, context)
            .getValue();
        return this;
    }

    NginxDeploymentApiKeyResponseImpl(NginxDeploymentApiKeyResponseInner innerObject,
        com.azure.resourcemanager.nginx.NginxManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.deploymentName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "nginxDeployments");
        this.apiKeyName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "apiKeys");
    }

    public NginxDeploymentApiKeyResponse refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getApiKeys()
            .getWithResponse(resourceGroupName, deploymentName, apiKeyName, Context.NONE)
            .getValue();
        return this;
    }

    public NginxDeploymentApiKeyResponse refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getApiKeys()
            .getWithResponse(resourceGroupName, deploymentName, apiKeyName, context)
            .getValue();
        return this;
    }

    public NginxDeploymentApiKeyResponseImpl withProperties(NginxDeploymentApiKeyRequestProperties properties) {
        if (isInCreateMode()) {
            this.createBody.withProperties(properties);
            return this;
        } else {
            this.updateBody.withProperties(properties);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
