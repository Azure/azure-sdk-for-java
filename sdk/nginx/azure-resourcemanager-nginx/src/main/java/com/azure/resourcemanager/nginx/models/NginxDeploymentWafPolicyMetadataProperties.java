// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.nginx.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Nginx Deployment Waf Policy Metadata Properties.
 */
@Immutable
public final class NginxDeploymentWafPolicyMetadataProperties
    implements JsonSerializable<NginxDeploymentWafPolicyMetadataProperties> {
    /*
     * The filepath property.
     */
    private String filepath;

    /*
     * Provisioning State
     */
    private ProvisioningState provisioningState;

    /*
     * Nginx Deployment Waf Policy Compiling Status
     */
    private NginxDeploymentWafPolicyCompilingStatus compilingState;

    /*
     * Nginx Deployment Waf Policy Applying Status
     */
    private NginxDeploymentWafPolicyApplyingStatus applyingState;

    /**
     * Creates an instance of NginxDeploymentWafPolicyMetadataProperties class.
     */
    private NginxDeploymentWafPolicyMetadataProperties() {
    }

    /**
     * Get the filepath property: The filepath property.
     * 
     * @return the filepath value.
     */
    public String filepath() {
        return this.filepath;
    }

    /**
     * Get the provisioningState property: Provisioning State.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the compilingState property: Nginx Deployment Waf Policy Compiling Status.
     * 
     * @return the compilingState value.
     */
    public NginxDeploymentWafPolicyCompilingStatus compilingState() {
        return this.compilingState;
    }

    /**
     * Get the applyingState property: Nginx Deployment Waf Policy Applying Status.
     * 
     * @return the applyingState value.
     */
    public NginxDeploymentWafPolicyApplyingStatus applyingState() {
        return this.applyingState;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of NginxDeploymentWafPolicyMetadataProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of NginxDeploymentWafPolicyMetadataProperties if the JsonReader was pointing to an instance
     * of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the NginxDeploymentWafPolicyMetadataProperties.
     */
    public static NginxDeploymentWafPolicyMetadataProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            NginxDeploymentWafPolicyMetadataProperties deserializedNginxDeploymentWafPolicyMetadataProperties
                = new NginxDeploymentWafPolicyMetadataProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("filepath".equals(fieldName)) {
                    deserializedNginxDeploymentWafPolicyMetadataProperties.filepath = reader.getString();
                } else if ("provisioningState".equals(fieldName)) {
                    deserializedNginxDeploymentWafPolicyMetadataProperties.provisioningState
                        = ProvisioningState.fromString(reader.getString());
                } else if ("compilingState".equals(fieldName)) {
                    deserializedNginxDeploymentWafPolicyMetadataProperties.compilingState
                        = NginxDeploymentWafPolicyCompilingStatus.fromJson(reader);
                } else if ("applyingState".equals(fieldName)) {
                    deserializedNginxDeploymentWafPolicyMetadataProperties.applyingState
                        = NginxDeploymentWafPolicyApplyingStatus.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedNginxDeploymentWafPolicyMetadataProperties;
        });
    }
}
