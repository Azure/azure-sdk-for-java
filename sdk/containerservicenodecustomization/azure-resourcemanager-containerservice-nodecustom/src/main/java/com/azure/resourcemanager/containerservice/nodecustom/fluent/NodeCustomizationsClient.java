// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.containerservice.nodecustom.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.containerservice.nodecustom.fluent.models.NodeCustomizationInner;
import com.azure.resourcemanager.containerservice.nodecustom.fluent.models.NodeCustomizationVersionInner;
import com.azure.resourcemanager.containerservice.nodecustom.models.NodeCustomizationUpdate;

/**
 * An instance of this class provides access to all the operations defined in NodeCustomizationsClient.
 */
public interface NodeCustomizationsClient {
    /**
     * Get a node customization at the latest version.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nodeCustomizationName The name of the Node Customization resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a node customization at the latest version along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<NodeCustomizationInner> getByResourceGroupWithResponse(String resourceGroupName,
        String nodeCustomizationName, Context context);

    /**
     * Get a node customization at the latest version.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nodeCustomizationName The name of the Node Customization resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a node customization at the latest version.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    NodeCustomizationInner getByResourceGroup(String resourceGroupName, String nodeCustomizationName);

    /**
     * Create or update a node customization resource. This will create a new version.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nodeCustomizationName The name of the Node Customization resource.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the Node Customization resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<NodeCustomizationInner>, NodeCustomizationInner> beginCreateOrUpdate(String resourceGroupName,
        String nodeCustomizationName, NodeCustomizationInner resource);

    /**
     * Create or update a node customization resource. This will create a new version.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nodeCustomizationName The name of the Node Customization resource.
     * @param resource Resource create parameters.
     * @param ifMatch The request should only proceed if the targeted resource's etag matches the value provided.
     * @param ifNoneMatch The request should only proceed if the targeted resource's etag does not match the value
     * provided.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the Node Customization resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<NodeCustomizationInner>, NodeCustomizationInner> beginCreateOrUpdate(String resourceGroupName,
        String nodeCustomizationName, NodeCustomizationInner resource, String ifMatch, String ifNoneMatch,
        Context context);

    /**
     * Create or update a node customization resource. This will create a new version.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nodeCustomizationName The name of the Node Customization resource.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Node Customization resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    NodeCustomizationInner createOrUpdate(String resourceGroupName, String nodeCustomizationName,
        NodeCustomizationInner resource);

    /**
     * Create or update a node customization resource. This will create a new version.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nodeCustomizationName The name of the Node Customization resource.
     * @param resource Resource create parameters.
     * @param ifMatch The request should only proceed if the targeted resource's etag matches the value provided.
     * @param ifNoneMatch The request should only proceed if the targeted resource's etag does not match the value
     * provided.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Node Customization resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    NodeCustomizationInner createOrUpdate(String resourceGroupName, String nodeCustomizationName,
        NodeCustomizationInner resource, String ifMatch, String ifNoneMatch, Context context);

    /**
     * Update a NodeCustomization.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nodeCustomizationName The name of the Node Customization resource.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the Node Customization resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<NodeCustomizationInner>, NodeCustomizationInner> beginUpdate(String resourceGroupName,
        String nodeCustomizationName, NodeCustomizationUpdate properties);

    /**
     * Update a NodeCustomization.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nodeCustomizationName The name of the Node Customization resource.
     * @param properties The resource properties to be updated.
     * @param ifMatch The request should only proceed if the targeted resource's etag matches the value provided.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the Node Customization resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<NodeCustomizationInner>, NodeCustomizationInner> beginUpdate(String resourceGroupName,
        String nodeCustomizationName, NodeCustomizationUpdate properties, String ifMatch, Context context);

    /**
     * Update a NodeCustomization.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nodeCustomizationName The name of the Node Customization resource.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Node Customization resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    NodeCustomizationInner update(String resourceGroupName, String nodeCustomizationName,
        NodeCustomizationUpdate properties);

    /**
     * Update a NodeCustomization.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nodeCustomizationName The name of the Node Customization resource.
     * @param properties The resource properties to be updated.
     * @param ifMatch The request should only proceed if the targeted resource's etag matches the value provided.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Node Customization resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    NodeCustomizationInner update(String resourceGroupName, String nodeCustomizationName,
        NodeCustomizationUpdate properties, String ifMatch, Context context);

    /**
     * Delete a node customization. This operation will be blocked if the resource is in use.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nodeCustomizationName The name of the Node Customization resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String nodeCustomizationName);

    /**
     * Delete a node customization. This operation will be blocked if the resource is in use.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nodeCustomizationName The name of the Node Customization resource.
     * @param ifMatch The request should only proceed if the targeted resource's etag matches the value provided.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String nodeCustomizationName,
        String ifMatch, Context context);

    /**
     * Delete a node customization. This operation will be blocked if the resource is in use.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nodeCustomizationName The name of the Node Customization resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String nodeCustomizationName);

    /**
     * Delete a node customization. This operation will be blocked if the resource is in use.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nodeCustomizationName The name of the Node Customization resource.
     * @param ifMatch The request should only proceed if the targeted resource's etag matches the value provided.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String nodeCustomizationName, String ifMatch, Context context);

    /**
     * Delete a node customization version. This operation will be blocked if the node customization version is in use.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nodeCustomizationName The name of the Node Customization resource.
     * @param version The version of the Node Customization.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDeleteVersion(String resourceGroupName, String nodeCustomizationName,
        String version);

    /**
     * Delete a node customization version. This operation will be blocked if the node customization version is in use.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nodeCustomizationName The name of the Node Customization resource.
     * @param version The version of the Node Customization.
     * @param ifMatch The request should only proceed if the targeted resource's etag matches the value provided.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDeleteVersion(String resourceGroupName, String nodeCustomizationName,
        String version, String ifMatch, Context context);

    /**
     * Delete a node customization version. This operation will be blocked if the node customization version is in use.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nodeCustomizationName The name of the Node Customization resource.
     * @param version The version of the Node Customization.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void deleteVersion(String resourceGroupName, String nodeCustomizationName, String version);

    /**
     * Delete a node customization version. This operation will be blocked if the node customization version is in use.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nodeCustomizationName The name of the Node Customization resource.
     * @param version The version of the Node Customization.
     * @param ifMatch The request should only proceed if the targeted resource's etag matches the value provided.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void deleteVersion(String resourceGroupName, String nodeCustomizationName, String version, String ifMatch,
        Context context);

    /**
     * List the node customizations in a resource group at the latest version.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a NodeCustomization list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<NodeCustomizationInner> listByResourceGroup(String resourceGroupName);

    /**
     * List the node customizations in a resource group at the latest version.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a NodeCustomization list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<NodeCustomizationInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * List the node customizations in a subscription at the latest version.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a NodeCustomization list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<NodeCustomizationInner> list();

    /**
     * List the node customizations in a subscription at the latest version.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a NodeCustomization list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<NodeCustomizationInner> list(Context context);

    /**
     * Get a node customization at a particular version.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nodeCustomizationName The name of the Node Customization resource.
     * @param version The version of the Node Customization.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a node customization at a particular version along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<NodeCustomizationVersionInner> getVersionWithResponse(String resourceGroupName,
        String nodeCustomizationName, String version, Context context);

    /**
     * Get a node customization at a particular version.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nodeCustomizationName The name of the Node Customization resource.
     * @param version The version of the Node Customization.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a node customization at a particular version.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    NodeCustomizationVersionInner getVersion(String resourceGroupName, String nodeCustomizationName, String version);

    /**
     * List all versions of a node customization.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nodeCustomizationName The name of the Node Customization resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a NodeCustomizationVersion list operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<NodeCustomizationVersionInner> listVersions(String resourceGroupName, String nodeCustomizationName);

    /**
     * List all versions of a node customization.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nodeCustomizationName The name of the Node Customization resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a NodeCustomizationVersion list operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<NodeCustomizationVersionInner> listVersions(String resourceGroupName, String nodeCustomizationName,
        Context context);
}
