// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.containerservice.nodecustom.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.containerservice.nodecustom.ContainerServiceNodeCustomizationManager;
import com.azure.resourcemanager.containerservice.nodecustom.models.ExecutionPoint;
import com.azure.resourcemanager.containerservice.nodecustom.models.NodeCustomization;
import com.azure.resourcemanager.containerservice.nodecustom.models.ScriptType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class NodeCustomizationsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"containerImages\":[\"a\",\"dphagalpbuxwgip\"],\"identityProfile\":{\"principalId\":\"nowkgshw\",\"clientId\":\"kix\"},\"version\":\"injep\",\"provisioningState\":\"Canceled\",\"customizationScripts\":[{\"name\":\"ywnuzoq\",\"executionPoint\":\"NodeProvisionTime\",\"scriptType\":\"Bash\",\"script\":\"qzrnkcqvyxlwhz\",\"rebootAfter\":true}]},\"eTag\":\"ohoqqnwvlryav\",\"location\":\"heun\",\"tags\":{\"koklya\":\"hgyxzkonoc\",\"ewrmjmwvvjektc\":\"uconuqszfkbey\",\"frzpwvlqdqgb\":\"senhwlrs\",\"fcivfsnkym\":\"qylihkaetckt\"},\"id\":\"ctq\",\"name\":\"jf\",\"type\":\"ebrjcxe\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerServiceNodeCustomizationManager manager = ContainerServiceNodeCustomizationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<NodeCustomization> response = manager.nodeCustomizations().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("heun", response.iterator().next().location());
        Assertions.assertEquals("hgyxzkonoc", response.iterator().next().tags().get("koklya"));
        Assertions.assertEquals("a", response.iterator().next().properties().containerImages().get(0));
        Assertions.assertEquals("ywnuzoq",
            response.iterator().next().properties().customizationScripts().get(0).name());
        Assertions.assertEquals(ExecutionPoint.NODE_PROVISION_TIME,
            response.iterator().next().properties().customizationScripts().get(0).executionPoint());
        Assertions.assertEquals(ScriptType.BASH,
            response.iterator().next().properties().customizationScripts().get(0).scriptType());
        Assertions.assertEquals("qzrnkcqvyxlwhz",
            response.iterator().next().properties().customizationScripts().get(0).script());
        Assertions.assertTrue(response.iterator().next().properties().customizationScripts().get(0).rebootAfter());
    }
}
