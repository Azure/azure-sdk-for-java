// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.analytics.planetarycomputer.generated;

import com.azure.analytics.planetarycomputer.models.IngestionRun;
import com.azure.analytics.planetarycomputer.models.IngestionRunOperation;
import com.azure.analytics.planetarycomputer.models.OperationStatus;
import com.azure.analytics.planetarycomputer.models.OperationStatusHistoryItem;
import com.azure.core.http.rest.PagedIterable;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class IngestionRunsListTests extends PlanetaryComputerClientTestBase {
    @Test
    @Disabled
    public void testIngestionRunsListTests() {
        // method invocation
        PagedIterable<IngestionRun> response
            = ingestionManagementClient.listRuns("collectionId", "7763987f-8ccd-457e-81d1-41b430510b8a", null, null);

        // response assertion
        Assertions.assertEquals(200, response.iterableByPage().iterator().next().getStatusCode());
        IngestionRun firstItem = response.iterator().next();
        Assertions.assertNotNull(firstItem);
        // verify property "id"
        Assertions.assertEquals("5623987f-8ccd-457e-81d1-41b430510b8a", firstItem.getId());
        // verify property "operation"
        IngestionRunOperation firstItemOperation = firstItem.getOperation();
        Assertions.assertNotNull(firstItemOperation);
        Assertions.assertEquals("5623987f-8ccd-457e-81d1-41b430510b8a", firstItemOperation.getId());
        Assertions.assertEquals(OperationStatus.fromString("Success"), firstItemOperation.getStatus());
        Assertions.assertNotNull(firstItemOperation.getCreationTime());
        List<OperationStatusHistoryItem> firstItemOperationStatusHistory = firstItemOperation.getStatusHistory();
        OperationStatusHistoryItem firstItemOperationStatusHistoryFirstItem
            = firstItemOperationStatusHistory.iterator().next();
        Assertions.assertNotNull(firstItemOperationStatusHistoryFirstItem);
        Assertions.assertNotNull(firstItemOperationStatusHistoryFirstItem.getTimestamp());
        Assertions.assertEquals(OperationStatus.PENDING, firstItemOperationStatusHistoryFirstItem.getStatus());
        Assertions.assertNotNull(firstItemOperation.getStartTime());
        Assertions.assertNotNull(firstItemOperation.getFinishTime());
        Assertions.assertEquals(10, firstItemOperation.getTotalItems());
        Assertions.assertEquals(0, firstItemOperation.getTotalPendingItems());
        Assertions.assertEquals(10, firstItemOperation.getTotalSuccessfulItems());
        Assertions.assertEquals(0, firstItemOperation.getTotalFailedItems());
        // verify property "creationTime"
        Assertions.assertNotNull(firstItem.getCreationTime());
        // verify property "sourceCatalogUrl"
        Assertions.assertEquals("https://sample.blob.core.windows.net/observatory/purple-tiger_predict_clean_10.json",
            firstItem.getSourceCatalogUrl());
        // verify property "skipExistingItems"
        Assertions.assertEquals(false, firstItem.isSkipExistingItems());
        // verify property "keepOriginalAssets"
        Assertions.assertEquals(false, firstItem.isKeepOriginalAssets());
    }
}
