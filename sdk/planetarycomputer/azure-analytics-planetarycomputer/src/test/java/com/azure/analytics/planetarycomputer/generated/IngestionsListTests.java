// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.analytics.planetarycomputer.generated;

import com.azure.analytics.planetarycomputer.models.Ingestion;
import com.azure.analytics.planetarycomputer.models.IngestionStatus;
import com.azure.analytics.planetarycomputer.models.IngestionType;
import com.azure.core.http.rest.PagedIterable;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class IngestionsListTests extends PlanetaryComputerClientTestBase {
    @Test
    @Disabled
    public void testIngestionsListTests() {
        // method invocation
        PagedIterable<Ingestion> response = ingestionManagementClient.lists("collectionId", null, null);

        // response assertion
        Assertions.assertEquals(200, response.iterableByPage().iterator().next().getStatusCode());
        Ingestion firstItem = response.iterator().next();
        Assertions.assertNotNull(firstItem);
        // verify property "id"
        Assertions.assertEquals("24a8a15d-61bd-453f-ac67-b9cec532ed78", firstItem.getId());
        // verify property "importType"
        Assertions.assertEquals(IngestionType.STATIC_CATALOG, firstItem.getImportType());
        // verify property "displayName"
        Assertions.assertEquals("My Connection", firstItem.getDisplayName());
        // verify property "sourceCatalogUrl"
        Assertions.assertEquals("https://sample.blob.core.windows.net/sample1.json", firstItem.getSourceCatalogUrl());
        // verify property "skipExistingItems"
        Assertions.assertEquals(true, firstItem.isSkipExistingItems());
        // verify property "keepOriginalAssets"
        Assertions.assertEquals(true, firstItem.isKeepOriginalAssets());
        // verify property "creationTime"
        Assertions.assertNotNull(firstItem.getCreationTime());
        // verify property "status"
        Assertions.assertEquals(IngestionStatus.READY, firstItem.getStatus());
    }
}
