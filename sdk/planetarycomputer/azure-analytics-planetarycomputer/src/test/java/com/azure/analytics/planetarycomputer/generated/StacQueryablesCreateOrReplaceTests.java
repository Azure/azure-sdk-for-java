// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.analytics.planetarycomputer.generated;

import com.azure.analytics.planetarycomputer.models.StacQueryable;
import com.azure.core.util.BinaryData;
import java.nio.charset.StandardCharsets;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class StacQueryablesCreateOrReplaceTests extends PlanetaryComputerClientTestBase {
    @Test
    @Disabled
    public void testStacQueryablesCreateOrReplaceTests() {
        // method invocation
        StacQueryable response
            = stacClient.createOrReplaceQueryable("36fcb8da-9b15-49e0-b400-0d2e751e2061", "naip:state",
                new StacQueryable("naip:state",
                    mapOf("data_type", BinaryData.fromBytes("string".getBytes(StandardCharsets.UTF_8)), "description",
                        BinaryData.fromBytes("State of the NAIP image".getBytes(StandardCharsets.UTF_8)),
                        "create_index", BinaryData.fromBytes("true".getBytes(StandardCharsets.UTF_8)))));

        // response assertion
        Assertions.assertNotNull(response);
        // verify property "name"
        Assertions.assertEquals("naip:state", response.getName());
        // verify property "definition"
        Assertions.assertNotNull(response.getDefinition());
        // verify property "createIndex"
        Assertions.assertEquals(false, response.isCreateIndex());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
