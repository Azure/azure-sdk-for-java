// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.analytics.planetarycomputer.generated;

import com.azure.analytics.planetarycomputer.models.RenderOption;
import com.azure.analytics.planetarycomputer.models.RenderOptionType;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class StacCollectionRenderOptionsCreateOrReplaceTests extends PlanetaryComputerClientTestBase {
    @Test
    @Disabled
    public void testStacCollectionRenderOptionsCreateOrReplaceTests() {
        // method invocation
        RenderOption response = stacClient.createOrReplaceRenderOption("36fcb8da-9b15-49e0-b400-0d2e751e2061",
            "atmospheric-penetration",
            new RenderOption("atmospheric-penetration", "Atmospheric penetration").setDescription(
                "False color rendering with non-visible bands to reduce effects of atmospheric particles (B12, B11, B8A).")
                .setType(RenderOptionType.RASTER_TILE)
                .setOptions(
                    "nodata=0&assets=B12&assets=B11&assets=B8A&color_formula=Gamma RGB 3.7 Saturation 1.5 Sigmoidal RGB 15 0.35")
                .setMinZoom(9));

        // response assertion
        Assertions.assertNotNull(response);
        // verify property "id"
        Assertions.assertEquals("atmospheric-penetration", response.getId());
        // verify property "name"
        Assertions.assertEquals("Atmospheric penetration", response.getName());
        // verify property "description"
        Assertions.assertEquals(
            "False color rendering with non-visible bands to reduce effects of atmospheric particles (B12, B11, B8A).",
            response.getDescription());
        // verify property "type"
        Assertions.assertEquals(RenderOptionType.RASTER_TILE, response.getType());
        // verify property "options"
        Assertions.assertEquals(
            "nodata=0&assets=B12&assets=B11&assets=B8A&color_formula=Gamma RGB 3.7 Saturation 1.5 Sigmoidal RGB 15 0.35",
            response.getOptions());
        // verify property "minZoom"
        Assertions.assertEquals(9, response.getMinZoom());
    }
}
