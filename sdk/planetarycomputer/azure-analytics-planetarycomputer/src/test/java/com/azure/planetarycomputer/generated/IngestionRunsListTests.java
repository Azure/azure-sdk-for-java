// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.planetarycomputer.generated;

import com.azure.planetarycomputer.models.IngestionRun;
import com.azure.planetarycomputer.models.IngestionRunOperation;
import com.azure.planetarycomputer.models.OperationStatus;
import com.azure.planetarycomputer.models.OperationStatusHistoryItem;
import com.azure.planetarycomputer.models.PageIngestionRun;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class IngestionRunsListTests extends PlanetaryComputerClientTestBase {
    @Test
    @Disabled
    public void testIngestionRunsListTests() {
        // method invocation
        PageIngestionRun response
            = ingestionClient.listIngestionRuns("collectionId", "7763987f-8ccd-457e-81d1-41b430510b8a", null, null);

        // response assertion
        Assertions.assertNotNull(response);
        // verify property "value"
        List<IngestionRun> responseValue = response.getValue();
        IngestionRun responseValueFirstItem = responseValue.iterator().next();
        Assertions.assertNotNull(responseValueFirstItem);
        Assertions.assertEquals("5623987f-8ccd-457e-81d1-41b430510b8a", responseValueFirstItem.getId());
        IngestionRunOperation responseValueFirstItemOperation = responseValueFirstItem.getOperation();
        Assertions.assertNotNull(responseValueFirstItemOperation);
        Assertions.assertEquals("5623987f-8ccd-457e-81d1-41b430510b8a", responseValueFirstItemOperation.getId());
        Assertions.assertEquals(OperationStatus.fromString("Success"), responseValueFirstItemOperation.getStatus());
        Assertions.assertNotNull(responseValueFirstItemOperation.getCreationTime());
        List<OperationStatusHistoryItem> responseValueFirstItemOperationStatusHistory
            = responseValueFirstItemOperation.getStatusHistory();
        OperationStatusHistoryItem responseValueFirstItemOperationStatusHistoryFirstItem
            = responseValueFirstItemOperationStatusHistory.iterator().next();
        Assertions.assertNotNull(responseValueFirstItemOperationStatusHistoryFirstItem);
        Assertions.assertNotNull(responseValueFirstItemOperationStatusHistoryFirstItem.getTimestamp());
        Assertions.assertEquals(OperationStatus.PENDING,
            responseValueFirstItemOperationStatusHistoryFirstItem.getStatus());
        Assertions.assertNotNull(responseValueFirstItemOperation.getStartTime());
        Assertions.assertNotNull(responseValueFirstItemOperation.getFinishTime());
        Assertions.assertEquals(10, responseValueFirstItemOperation.getTotalItems());
        Assertions.assertEquals(0, responseValueFirstItemOperation.getTotalPendingItems());
        Assertions.assertEquals(10, responseValueFirstItemOperation.getTotalSuccessfulItems());
        Assertions.assertEquals(0, responseValueFirstItemOperation.getTotalFailedItems());
        Assertions.assertNotNull(responseValueFirstItem.getCreationTime());
        Assertions.assertEquals("https://sample.blob.core.windows.net/observatory/purple-tiger_predict_clean_10.json",
            responseValueFirstItem.getSourceCatalogUrl());
        Assertions.assertEquals(false, responseValueFirstItem.isSkipExistingItems());
        Assertions.assertEquals(false, responseValueFirstItem.isKeepOriginalAssets());
        // verify property "nextLink"
        Assertions.assertEquals("https://example.com/nextLink", response.getNextLink());
    }
}
