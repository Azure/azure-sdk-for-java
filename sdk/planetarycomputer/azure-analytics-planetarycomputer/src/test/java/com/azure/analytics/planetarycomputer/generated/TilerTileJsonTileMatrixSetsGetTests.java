// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.analytics.planetarycomputer.generated;

import com.azure.analytics.planetarycomputer.models.GetTileJsonOptions;
import com.azure.analytics.planetarycomputer.models.TileAddressingScheme;
import com.azure.analytics.planetarycomputer.models.TileJsonMetadata;
import com.azure.analytics.planetarycomputer.models.TilerImageFormat;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class TilerTileJsonTileMatrixSetsGetTests extends PlanetaryComputerProClientTestBase {
    @Test
    @Disabled
    public void testTilerTileJsonTileMatrixSetsGetTests() {
        // method invocation
        TileJsonMetadata response
            = dataClient.getTileJson("naip-atl", "ga_m_3308421_se_16_060_20211114", "WebMercatorQuad",
                new GetTileJsonOptions().setAssets(Arrays.asList("image"))
                    .setAssetBandIndices("image|1,2,3")
                    .setTileFormat(TilerImageFormat.PNG)
                    .setTileScale(1)
                    .setMinZoom(7)
                    .setMaxZoom(14));

        // response assertion
        Assertions.assertNotNull(response);
        // verify property "tileJson"
        Assertions.assertEquals("2.2.0", response.getTileJson());
        // verify property "version"
        Assertions.assertEquals("1.0.0", response.getVersion());
        // verify property "scheme"
        Assertions.assertEquals(TileAddressingScheme.XYZ, response.getScheme());
        // verify property "tiles"
        List<String> responseTiles = response.getTiles();
        Assertions.assertEquals(
            "https://Sanitized.sanitized_label.sanitized_location.geocatalog.spatio.azure.com/data/collections/naip-atl/items/ga_m_3308421_se_16_060_20211114/tiles/WebMercatorQuad/{z}/{x}/{y}@1x.png?api-version=2025-04-30-preview&assets=image&asset_bidx=image%7C1%2C2%2C3",
            responseTiles.iterator().next());
        // verify property "minZoom"
        Assertions.assertEquals(7, response.getMinZoom());
        // verify property "maxZoom"
        Assertions.assertEquals(14, response.getMaxZoom());
        // verify property "bounds"
        List<Double> responseBounds = response.getBounds();
        Assertions.assertEquals(-84.44157, responseBounds.iterator().next());
        // verify property "center"
        List<Double> responseCenter = response.getCenter();
        Assertions.assertEquals(-84.406232, responseCenter.iterator().next());
    }
}
