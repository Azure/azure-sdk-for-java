// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.analytics.planetarycomputer.generated;

import com.azure.analytics.planetarycomputer.models.IngestionDefinition;
import com.azure.analytics.planetarycomputer.models.IngestionStatus;
import com.azure.analytics.planetarycomputer.models.IngestionType;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class IngestionsCreateTests extends PlanetaryComputerProClientTestBase {
    @Test
    @Disabled
    public void testIngestionsCreateTests() {
        // method invocation
        IngestionDefinition response = ingestionClient.create("naip-atl", new IngestionDefinition()
            .setImportType(IngestionType.STATIC_CATALOG)
            .setDisplayName("Ingestion")
            .setSourceCatalogUrl(
                "https://raw.githubusercontent.com/aloverro/mpcpro-sample-datasets/main/datasets/planetary_computer/naip/catalog.json")
            .setSkipExistingItems(true)
            .setKeepOriginalAssets(true));

        // response assertion
        Assertions.assertNotNull(response);
        // verify property "id"
        Assertions.assertEquals("00000000-0000-0000-0000-000000000000", response.getId());
        // verify property "importType"
        Assertions.assertEquals(IngestionType.STATIC_CATALOG, response.getImportType());
        // verify property "displayName"
        Assertions.assertEquals("Ingestion", response.getDisplayName());
        // verify property "sourceCatalogUrl"
        Assertions.assertEquals(
            "https://raw.githubusercontent.com/aloverro/mpcpro-sample-datasets/main/datasets/planetary_computer/naip/catalog.json",
            response.getSourceCatalogUrl());
        // verify property "skipExistingItems"
        Assertions.assertEquals(true, response.isSkipExistingItems());
        // verify property "keepOriginalAssets"
        Assertions.assertEquals(true, response.isKeepOriginalAssets());
        // verify property "creationTime"
        Assertions.assertNotNull(response.getCreationTime());
        // verify property "status"
        Assertions.assertEquals(IngestionStatus.READY, response.getStatus());
    }
}
