// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.analytics.planetarycomputer.generated;

import com.azure.analytics.planetarycomputer.models.Geometry;
import com.azure.analytics.planetarycomputer.models.GeometryType;
import com.azure.analytics.planetarycomputer.models.StacItem;
import com.azure.analytics.planetarycomputer.models.StacItemCollection;
import com.azure.analytics.planetarycomputer.models.StacItemProperties;
import com.azure.analytics.planetarycomputer.models.StacModelType;
import com.azure.analytics.planetarycomputer.models.StacProvider;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class StacItemsGetFeaturesTests extends PlanetaryComputerProClientTestBase {
    @Test
    @Disabled
    public void testStacItemsGetFeaturesTests() {
        // method invocation
        StacItemCollection response = stacClient.getItemCollection("naip-atl", 10, null, null);

        // response assertion
        Assertions.assertNotNull(response);
        // verify property "type"
        Assertions.assertEquals(StacModelType.FEATURE_COLLECTION, response.getType());
        // verify property "features"
        List<StacItem> responseFeatures = response.getFeatures();
        StacItem responseFeaturesFirstItem = responseFeatures.iterator().next();
        Assertions.assertNotNull(responseFeaturesFirstItem);
        Assertions.assertEquals(StacModelType.FEATURE, responseFeaturesFirstItem.getType());
        Geometry responseFeaturesFirstItemGeometry = responseFeaturesFirstItem.getGeometry();
        Assertions.assertNotNull(responseFeaturesFirstItemGeometry);
        Assertions.assertEquals(GeometryType.POLYGON, responseFeaturesFirstItemGeometry.getType());
        Assertions.assertEquals("ga_m_3308429_nw_16_060_20231008_20240103", responseFeaturesFirstItem.getId());
        Assertions.assertEquals("naip-atl", responseFeaturesFirstItem.getCollection());
        List<Double> responseFeaturesFirstItemBoundingBox = responseFeaturesFirstItem.getBoundingBox();
        Assertions.assertEquals(-84.504026, responseFeaturesFirstItemBoundingBox.iterator().next());
        StacItemProperties responseFeaturesFirstItemProperties = responseFeaturesFirstItem.getProperties();
        Assertions.assertNotNull(responseFeaturesFirstItemProperties);
        List<StacProvider> responseFeaturesFirstItemPropertiesProviders
            = responseFeaturesFirstItemProperties.getProviders();
        StacProvider responseFeaturesFirstItemPropertiesProvidersFirstItem
            = responseFeaturesFirstItemPropertiesProviders.iterator().next();
        Assertions.assertNotNull(responseFeaturesFirstItemPropertiesProvidersFirstItem);
        Assertions.assertEquals("USDA Farm Service Agency",
            responseFeaturesFirstItemPropertiesProvidersFirstItem.getName());
        List<String> responseFeaturesFirstItemPropertiesProvidersFirstItemRoles
            = responseFeaturesFirstItemPropertiesProvidersFirstItem.getRoles();
        Assertions.assertEquals("producer",
            responseFeaturesFirstItemPropertiesProvidersFirstItemRoles.iterator().next());
        Assertions.assertEquals(
            "https://www.fsa.usda.gov/programs-and-services/aerial-photography/imagery-programs/naip-imagery/",
            responseFeaturesFirstItemPropertiesProvidersFirstItem.getUrl());
        Assertions.assertEquals(0.6D, responseFeaturesFirstItemProperties.getGsd());
        Assertions.assertEquals("2023-10-08T16:00:00Z", responseFeaturesFirstItemProperties.getDatetime());
        Assertions.assertNotNull(responseFeaturesFirstItem.getAssets());
        Assertions.assertEquals("2025-10-22T11:16:46.001506Z", responseFeaturesFirstItem.getTimestamp());
        Assertions.assertEquals("3f8c4060-fbac-4595-bb2c-bb5d51fbd193", responseFeaturesFirstItem.getETag());
    }
}
