// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.analytics.planetarycomputer.generated;

import com.azure.analytics.planetarycomputer.models.IngestionRun;
import com.azure.analytics.planetarycomputer.models.IngestionRunOperation;
import com.azure.analytics.planetarycomputer.models.OperationStatus;
import com.azure.analytics.planetarycomputer.models.OperationStatusHistoryItem;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class IngestionRunsCreateTests extends PlanetaryComputerClientTestBase {
    @Test
    @Disabled
    public void testIngestionRunsCreateTests() {
        // method invocation
        IngestionRun response
            = ingestionManagementClient.createRun("collectionId", "64224dad-2778-409e-95b1-0675522bbaa4");

        // response assertion
        Assertions.assertNotNull(response);
        // verify property "id"
        Assertions.assertEquals("728f4dad-2778-409e-95b1-0675522bbaa4", response.getId());
        // verify property "operation"
        IngestionRunOperation responseOperation = response.getOperation();
        Assertions.assertNotNull(responseOperation);
        Assertions.assertEquals("728f4dad-2778-409e-95b1-0675522bbaa4", responseOperation.getId());
        Assertions.assertEquals(OperationStatus.PENDING, responseOperation.getStatus());
        Assertions.assertNotNull(responseOperation.getCreationTime());
        List<OperationStatusHistoryItem> responseOperationStatusHistory = responseOperation.getStatusHistory();
        OperationStatusHistoryItem responseOperationStatusHistoryFirstItem
            = responseOperationStatusHistory.iterator().next();
        Assertions.assertNotNull(responseOperationStatusHistoryFirstItem);
        Assertions.assertNotNull(responseOperationStatusHistoryFirstItem.getTimestamp());
        Assertions.assertEquals(OperationStatus.PENDING, responseOperationStatusHistoryFirstItem.getStatus());
        Assertions.assertEquals(0, responseOperation.getTotalItems());
        Assertions.assertEquals(0, responseOperation.getTotalPendingItems());
        Assertions.assertEquals(0, responseOperation.getTotalSuccessfulItems());
        Assertions.assertEquals(0, responseOperation.getTotalFailedItems());
        // verify property "creationTime"
        Assertions.assertNotNull(response.getCreationTime());
        // verify property "sourceCatalogUrl"
        Assertions.assertEquals("https://sample.blob.core.windows.net/observatory/purple-tiger_predict_clean_10.json",
            response.getSourceCatalogUrl());
        // verify property "skipExistingItems"
        Assertions.assertEquals(false, response.isSkipExistingItems());
        // verify property "keepOriginalAssets"
        Assertions.assertEquals(false, response.isKeepOriginalAssets());
    }
}
