// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.analytics.planetarycomputer.generated;

import com.azure.analytics.planetarycomputer.models.Geometry;
import com.azure.analytics.planetarycomputer.models.GeometryType;
import com.azure.analytics.planetarycomputer.models.StacItem;
import com.azure.analytics.planetarycomputer.models.StacItemProperties;
import com.azure.analytics.planetarycomputer.models.StacModelType;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class StacItemsGetTests extends PlanetaryComputerClientTestBase {
    @Test
    @Disabled
    public void testStacItemsGetTests() {
        // method invocation
        StacItem response
            = stacClient.getItem("example-collection", "S2A_MSIL2A_20231017T013651_R117_T53SPA_20231017T053413");

        // response assertion
        Assertions.assertNotNull(response);
        // verify property "type"
        Assertions.assertEquals(StacModelType.FEATURE, response.getType());
        // verify property "geometry"
        Geometry responseGeometry = response.getGeometry();
        Assertions.assertNotNull(responseGeometry);
        Assertions.assertEquals(GeometryType.POLYGON, responseGeometry.getType());
        // verify property "boundingBox"
        List<Double> responseBoundingBox = response.getBoundingBox();
        Assertions.assertEquals(136.11023969131566, responseBoundingBox.iterator().next());
        // verify property "id"
        Assertions.assertEquals("S2A_MSIL2A_20231017T013651_R117_T53SPA_20231017T053413", response.getId());
        // verify property "collection"
        Assertions.assertEquals("example-collection", response.getCollection());
        // verify property "properties"
        StacItemProperties responseProperties = response.getProperties();
        Assertions.assertNotNull(responseProperties);
        Assertions.assertEquals("2023-10-17T01:36:51.024000Z", responseProperties.getDatetime());
        // verify property "assets"
        Assertions.assertNotNull(response.getAssets());
        // verify property "timestamp"
        Assertions.assertEquals("2024-09-26T17:46:10.688245Z", response.getTimestamp());
        // verify property "eTag"
        Assertions.assertEquals("e99a9415-f26f-48ad-9553-3a5dd7260cde", response.getETag());
    }
}
