// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.analytics.planetarycomputer.generated;

import com.azure.analytics.planetarycomputer.models.StacQueryable;
import com.azure.analytics.planetarycomputer.models.StacQueryableDefinitionDataType;
import com.azure.core.util.BinaryData;
import java.nio.charset.StandardCharsets;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class StacQueryablesCreateTests extends PlanetaryComputerProClientTestBase {
    @Test
    @Disabled
    public void testStacQueryablesCreateTests() {
        // method invocation
        List<StacQueryable> response = stacClient.createQueryables("naip-atl",
            Arrays.asList(new StacQueryable("test:property",
                mapOf("data_type", BinaryData.fromBytes("number".getBytes(StandardCharsets.UTF_8))))
                    .setCreateIndex(false)
                    .setDataType(StacQueryableDefinitionDataType.NUMBER)));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
