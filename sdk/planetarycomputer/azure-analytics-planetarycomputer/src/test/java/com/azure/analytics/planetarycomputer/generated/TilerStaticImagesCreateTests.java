// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.analytics.planetarycomputer.generated;

import com.azure.analytics.planetarycomputer.models.ImageRequest;
import com.azure.analytics.planetarycomputer.models.ImageResponse;
import com.azure.analytics.planetarycomputer.models.Polygon;
import com.azure.core.util.BinaryData;
import java.nio.charset.StandardCharsets;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class TilerStaticImagesCreateTests extends PlanetaryComputerClientTestBase {
    @Test
    @Disabled
    public void testTilerStaticImagesCreateTests() {
        // method invocation
        ImageResponse response = tilerClient.createStaticImage("collectionId-23",
            new ImageRequest(
                mapOf("filter-lang", BinaryData.fromBytes("cql2-json".getBytes(StandardCharsets.UTF_8)), "filter",
                    BinaryData.fromBytes("{op=and, args=[{op==, args=[{property=collection}, naip]}]}"
                        .getBytes(StandardCharsets.UTF_8))),
                "assets=image&asset_bidx=image|1,2,3&collection=naip", 242, 1080)
                    .setGeometry(new Polygon().setCoordinates(
                        Arrays.asList(Arrays.asList(Arrays.asList(-79.09062791441062, 43.08554661560049),
                            Arrays.asList(-79.0629876337021, 43.08554661560049),
                            Arrays.asList(-79.0629876337021, 43.067969831431895),
                            Arrays.asList(-79.09062791441062, 43.067969831431895),
                            Arrays.asList(-79.09062791441062, 43.08554661560049)))))
                    .setShowBranding(true));

        // response assertion
        Assertions.assertNotNull(response);
        // verify property "url"
        Assertions.assertEquals(
            "https://sample.cmbtazhseqhgeudd.uksouth.geocatalog.spatio.azure.com/data/collections/python-sdk-sentinel-2/image/static/geocatalog-python-sdk-sentinel-2-153d9a7df3794b5e9d66250edfa4711a.png?api-version=2025-04-30-preview",
            response.getUrl());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
