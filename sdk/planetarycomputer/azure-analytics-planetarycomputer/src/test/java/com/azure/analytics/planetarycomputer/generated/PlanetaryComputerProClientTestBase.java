// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.analytics.planetarycomputer.generated;

// The Java test files under 'generated' package are generated for your reference.
// If you wish to modify these files, please copy them out of the 'generated' package, and modify there.
// See https://aka.ms/azsdk/dpg/java/tests for guide on adding a test.

import com.azure.analytics.planetarycomputer.DataClient;
import com.azure.analytics.planetarycomputer.IngestionClient;
import com.azure.analytics.planetarycomputer.PlanetaryComputerProClientBuilder;
import com.azure.analytics.planetarycomputer.SharedAccessSignatureClient;
import com.azure.analytics.planetarycomputer.StacClient;
import com.azure.core.http.policy.HttpLogDetailLevel;
import com.azure.core.http.policy.HttpLogOptions;
import com.azure.core.test.TestMode;
import com.azure.core.test.TestProxyTestBase;
import com.azure.core.test.utils.MockTokenCredential;
import com.azure.core.util.Configuration;
import com.azure.identity.DefaultAzureCredentialBuilder;

class PlanetaryComputerProClientTestBase extends TestProxyTestBase {
    protected IngestionClient ingestionClient;

    protected StacClient stacClient;

    protected DataClient dataClient;

    protected SharedAccessSignatureClient sharedAccessSignatureClient;

    @Override
    protected void beforeTest() {
        PlanetaryComputerProClientBuilder ingestionClientbuilder = new PlanetaryComputerProClientBuilder()
            .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
            .httpClient(getHttpClientOrUsePlayback(getHttpClients().findFirst().orElse(null)))
            .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            ingestionClientbuilder.credential(new MockTokenCredential());
        } else if (getTestMode() == TestMode.RECORD) {
            ingestionClientbuilder.addPolicy(interceptorManager.getRecordPolicy())
                .credential(new DefaultAzureCredentialBuilder().build());
        } else if (getTestMode() == TestMode.LIVE) {
            ingestionClientbuilder.credential(new DefaultAzureCredentialBuilder().build());
        }
        ingestionClient = ingestionClientbuilder.buildIngestionClient();

        PlanetaryComputerProClientBuilder stacClientbuilder = new PlanetaryComputerProClientBuilder()
            .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
            .httpClient(getHttpClientOrUsePlayback(getHttpClients().findFirst().orElse(null)))
            .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            stacClientbuilder.credential(new MockTokenCredential());
        } else if (getTestMode() == TestMode.RECORD) {
            stacClientbuilder.addPolicy(interceptorManager.getRecordPolicy())
                .credential(new DefaultAzureCredentialBuilder().build());
        } else if (getTestMode() == TestMode.LIVE) {
            stacClientbuilder.credential(new DefaultAzureCredentialBuilder().build());
        }
        stacClient = stacClientbuilder.buildStacClient();

        PlanetaryComputerProClientBuilder dataClientbuilder = new PlanetaryComputerProClientBuilder()
            .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
            .httpClient(getHttpClientOrUsePlayback(getHttpClients().findFirst().orElse(null)))
            .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            dataClientbuilder.credential(new MockTokenCredential());
        } else if (getTestMode() == TestMode.RECORD) {
            dataClientbuilder.addPolicy(interceptorManager.getRecordPolicy())
                .credential(new DefaultAzureCredentialBuilder().build());
        } else if (getTestMode() == TestMode.LIVE) {
            dataClientbuilder.credential(new DefaultAzureCredentialBuilder().build());
        }
        dataClient = dataClientbuilder.buildDataClient();

        PlanetaryComputerProClientBuilder sharedAccessSignatureClientbuilder = new PlanetaryComputerProClientBuilder()
            .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
            .httpClient(getHttpClientOrUsePlayback(getHttpClients().findFirst().orElse(null)))
            .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            sharedAccessSignatureClientbuilder.credential(new MockTokenCredential());
        } else if (getTestMode() == TestMode.RECORD) {
            sharedAccessSignatureClientbuilder.addPolicy(interceptorManager.getRecordPolicy())
                .credential(new DefaultAzureCredentialBuilder().build());
        } else if (getTestMode() == TestMode.LIVE) {
            sharedAccessSignatureClientbuilder.credential(new DefaultAzureCredentialBuilder().build());
        }
        sharedAccessSignatureClient = sharedAccessSignatureClientbuilder.buildSharedAccessSignatureClient();

    }
}
