// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.analytics.planetarycomputer.generated;

import com.azure.analytics.planetarycomputer.models.Feature;
import com.azure.analytics.planetarycomputer.models.FeatureType;
import com.azure.analytics.planetarycomputer.models.Geometry;
import com.azure.analytics.planetarycomputer.models.GeometryType;
import com.azure.analytics.planetarycomputer.models.GetGeoJsonStatisticsOptions;
import com.azure.analytics.planetarycomputer.models.Polygon;
import com.azure.analytics.planetarycomputer.models.StacItemStatisticsGeoJson;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class TilerGeoJsonStatisticsGetTests extends PlanetaryComputerClientTestBase {
    @Test
    @Disabled
    public void testTilerGeoJsonStatisticsGetTests() {
        // method invocation
        StacItemStatisticsGeoJson response
            = tilerClient.getGeoJsonStatistics("{{collectionId}}", "{{itemId}}", new GetGeoJsonStatisticsOptions(),
                new Feature(new Polygon()
                    .setCoordinates(Arrays.asList(Arrays.asList(Arrays.asList(-65.75386020444417, 18.252659831448764),
                        Arrays.asList(-65.75385878091376, 18.252569552371305),
                        Arrays.asList(-65.75376429311993, 18.252570912467043),
                        Arrays.asList(-65.75376571660163, 18.252661191551685),
                        Arrays.asList(-65.75386020444417, 18.252659831448764)))),
                    FeatureType.FEATURE));

        // response assertion
        Assertions.assertNotNull(response);
        // verify property "geometry"
        Geometry responseGeometry = response.getGeometry();
        Assertions.assertNotNull(responseGeometry);
        Assertions.assertEquals(GeometryType.POLYGON, responseGeometry.getType());
        // verify property "type"
        Assertions.assertEquals(FeatureType.FEATURE, response.getType());
        // verify property "properties"
        Assertions.assertNotNull(response.getProperties());
        // verify property "id"
        Assertions.assertEquals("test-item-0df36a74d7ed", response.getId());
        // verify property "boundingBox"
        List<Double> responseBoundingBox = response.getBoundingBox();
        Assertions.assertEquals(-65.75386020444417, responseBoundingBox.iterator().next());
    }
}
