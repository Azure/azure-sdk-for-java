// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.analytics.planetarycomputer.generated;

import com.azure.analytics.planetarycomputer.PlanetaryComputerClientBuilder;
import com.azure.analytics.planetarycomputer.TilerClient;
import com.azure.analytics.planetarycomputer.models.ImageRequest;
import com.azure.analytics.planetarycomputer.models.ImageResponse;
import com.azure.analytics.planetarycomputer.models.Polygon;
import com.azure.core.util.BinaryData;
import com.azure.core.util.Configuration;
import com.azure.identity.DefaultAzureCredentialBuilder;
import java.nio.charset.StandardCharsets;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

public class TilerStaticImagesCreate {
    public static void main(String[] args) {
        TilerClient tilerClient
            = new PlanetaryComputerClientBuilder().credential(new DefaultAzureCredentialBuilder().build())
                .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT"))
                .buildTilerClient();
        // BEGIN:com.azure.analytics.planetarycomputer.generated.tiler-create-static-image.tiler-static-images-create
        ImageResponse response = tilerClient.createStaticImage("collectionId-23",
            new ImageRequest(
                mapOf("filter-lang", BinaryData.fromBytes("cql2-json".getBytes(StandardCharsets.UTF_8)), "filter",
                    BinaryData.fromBytes("{op=and, args=[{op==, args=[{property=collection}, naip]}]}"
                        .getBytes(StandardCharsets.UTF_8))),
                "assets=image&asset_bidx=image|1,2,3&collection=naip", 242, 1080)
                    .setGeometry(new Polygon().setCoordinates(
                        Arrays.asList(Arrays.asList(Arrays.asList(-79.09062791441062, 43.08554661560049),
                            Arrays.asList(-79.0629876337021, 43.08554661560049),
                            Arrays.asList(-79.0629876337021, 43.067969831431895),
                            Arrays.asList(-79.09062791441062, 43.067969831431895),
                            Arrays.asList(-79.09062791441062, 43.08554661560049)))))
                    .setShowBranding(true));
        // END:com.azure.analytics.planetarycomputer.generated.tiler-create-static-image.tiler-static-images-create
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
