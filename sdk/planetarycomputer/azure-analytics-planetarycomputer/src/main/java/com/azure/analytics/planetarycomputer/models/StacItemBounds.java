// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.analytics.planetarycomputer.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Geographic extent of a dataset expressed as a bounding box.
 */
@Immutable
public final class StacItemBounds implements JsonSerializable<StacItemBounds> {
    /*
     * Array of coordinates defining the bounding box [west, south, east, north]
     */
    @Generated
    private final List<Double> bounds;

    /**
     * Creates an instance of StacItemBounds class.
     * 
     * @param bounds the bounds value to set.
     */
    @Generated
    private StacItemBounds(List<Double> bounds) {
        this.bounds = bounds;
    }

    /**
     * Get the bounds property: Array of coordinates defining the bounding box [west, south, east, north].
     * 
     * @return the bounds value.
     */
    @Generated
    public List<Double> getBounds() {
        return this.bounds;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("bounds", this.bounds, (writer, element) -> writer.writeDouble(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of StacItemBounds from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of StacItemBounds if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the StacItemBounds.
     */
    @Generated
    public static StacItemBounds fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            List<Double> bounds = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("bounds".equals(fieldName)) {
                    bounds = reader.readArray(reader1 -> reader1.getDouble());
                } else {
                    reader.skipChildren();
                }
            }
            return new StacItemBounds(bounds);
        });
    }
}
