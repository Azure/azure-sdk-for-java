// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.planetarycomputer.models;

import com.azure.core.annotation.Generated;
import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * Represents the type of a GeoJSON geometry.
 */
public final class GeometryType extends ExpandableStringEnum<GeometryType> {
    /**
     * Represents a Point geometry.
     */
    @Generated
    public static final GeometryType POINT = fromString("Point");

    /**
     * Represents a LineString geometry.
     */
    @Generated
    public static final GeometryType LINE_STRING = fromString("LineString");

    /**
     * Represents a Polygon geometry.
     */
    @Generated
    public static final GeometryType POLYGON = fromString("Polygon");

    /**
     * Represents a MultiPoint geometry.
     */
    @Generated
    public static final GeometryType MULTI_POINT = fromString("MultiPoint");

    /**
     * Represents a MultiLineString geometry.
     */
    @Generated
    public static final GeometryType MULTI_LINE_STRING = fromString("MultiLineString");

    /**
     * Represents a MultiPolygon geometry.
     */
    @Generated
    public static final GeometryType MULTI_POLYGON = fromString("MultiPolygon");

    /**
     * Creates a new instance of GeometryType value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Generated
    @Deprecated
    public GeometryType() {
    }

    /**
     * Creates or finds a GeometryType from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding GeometryType.
     */
    @Generated
    public static GeometryType fromString(String name) {
        return fromString(name, GeometryType.class);
    }

    /**
     * Gets known GeometryType values.
     * 
     * @return known GeometryType values.
     */
    @Generated
    public static Collection<GeometryType> values() {
        return values(GeometryType.class);
    }
}
