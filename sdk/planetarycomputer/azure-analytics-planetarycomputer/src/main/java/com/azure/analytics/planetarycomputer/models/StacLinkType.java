// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.analytics.planetarycomputer.models;

import com.azure.core.annotation.Generated;
import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * MIME types for links.
 */
public final class StacLinkType extends ExpandableStringEnum<StacLinkType> {
    /**
     * Represents an image/tiff with application=geotiff.
     */
    @Generated
    public static final StacLinkType IMAGE_TIFF_APPLICATION_GEOTIFF = fromString("image/tiff; application=geotiff");

    /**
     * Represents an image/jp2.
     */
    @Generated
    public static final StacLinkType IMAGE_JP2 = fromString("image/jp2");

    /**
     * Represents an image/png.
     */
    @Generated
    public static final StacLinkType IMAGE_PNG = fromString("image/png");

    /**
     * Represents an image/jpeg.
     */
    @Generated
    public static final StacLinkType IMAGE_JPEG = fromString("image/jpeg");

    /**
     * Represents an image/jpg.
     */
    @Generated
    public static final StacLinkType IMAGE_JPG = fromString("image/jpg");

    /**
     * Represents an image/webp.
     */
    @Generated
    public static final StacLinkType IMAGE_WEBP = fromString("image/webp");

    /**
     * Represents an application/x-binary.
     */
    @Generated
    public static final StacLinkType APPLICATION_X_BINARY = fromString("application/x-binary");

    /**
     * Represents an application/xml.
     */
    @Generated
    public static final StacLinkType APPLICATION_XML = fromString("application/xml");

    /**
     * Represents an application/json.
     */
    @Generated
    public static final StacLinkType APPLICATION_JSON = fromString("application/json");

    /**
     * Represents an application/geo+json.
     */
    @Generated
    public static final StacLinkType APPLICATION_GEO_JSON = fromString("application/geo+json");

    /**
     * Represents a text/html.
     */
    @Generated
    public static final StacLinkType TEXT_HTML = fromString("text/html");

    /**
     * Represents a text/plain.
     */
    @Generated
    public static final StacLinkType TEXT_PLAIN = fromString("text/plain");

    /**
     * Represents an application/x-protobuf.
     */
    @Generated
    public static final StacLinkType APPLICATION_X_PROTOBUF = fromString("application/x-protobuf");

    /**
     * Creates a new instance of StacLinkType value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Generated
    @Deprecated
    public StacLinkType() {
    }

    /**
     * Creates or finds a StacLinkType from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding StacLinkType.
     */
    @Generated
    public static StacLinkType fromString(String name) {
        return fromString(name, StacLinkType.class);
    }

    /**
     * Gets known StacLinkType values.
     * 
     * @return known StacLinkType values.
     */
    @Generated
    public static Collection<StacLinkType> values() {
        return values(StacLinkType.class);
    }
}
