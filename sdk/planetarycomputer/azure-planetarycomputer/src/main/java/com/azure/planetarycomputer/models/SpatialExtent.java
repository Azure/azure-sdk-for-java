// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.planetarycomputer.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * https://github.com/radiantearth/stac-spec/blob/v1.0.0/collection-spec/collection-spec.md#spatial-extent-object
 * 
 * Represents the spatial extent of a STAC collection with bounding boxes.
 */
@Fluent
public final class SpatialExtent implements JsonSerializable<SpatialExtent> {
    /*
     * Array of bounding boxes defining the spatial extent, in format [[west, south, east, north]].
     */
    @Generated
    private List<List<Double>> bbox;

    /**
     * Creates an instance of SpatialExtent class.
     */
    @Generated
    public SpatialExtent() {
    }

    /**
     * Get the bbox property: Array of bounding boxes defining the spatial extent, in format [[west, south, east,
     * north]].
     * 
     * @return the bbox value.
     */
    @Generated
    public List<List<Double>> getBbox() {
        return this.bbox;
    }

    /**
     * Set the bbox property: Array of bounding boxes defining the spatial extent, in format [[west, south, east,
     * north]].
     * 
     * @param bbox the bbox value to set.
     * @return the SpatialExtent object itself.
     */
    @Generated
    public SpatialExtent setBbox(List<List<Double>> bbox) {
        this.bbox = bbox;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("bbox", this.bbox,
            (writer, element) -> writer.writeArray(element, (writer1, element1) -> writer1.writeDouble(element1)));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SpatialExtent from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SpatialExtent if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the SpatialExtent.
     */
    @Generated
    public static SpatialExtent fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SpatialExtent deserializedSpatialExtent = new SpatialExtent();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("bbox".equals(fieldName)) {
                    List<List<Double>> bbox
                        = reader.readArray(reader1 -> reader1.readArray(reader2 -> reader2.getDouble()));
                    deserializedSpatialExtent.bbox = bbox;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSpatialExtent;
        });
    }
}
