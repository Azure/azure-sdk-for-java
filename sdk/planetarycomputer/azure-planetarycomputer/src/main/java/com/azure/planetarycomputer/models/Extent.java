// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.planetarycomputer.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * https://github.com/radiantearth/stac-spec/blob/v1.0.0/collection-spec/collection-spec.md#extent-object
 * 
 * Represents the spatial and temporal extent of a STAC collection.
 */
@Immutable
public final class Extent implements JsonSerializable<Extent> {
    /*
     * Spatial extent defined by bounding boxes.
     * 
     * See the [STAC Collection
     * Spec](https://github.com/radiantearth/stac-spec/blob/v1.0.0/collection-spec/collection-spec.md#spatial-extent-
     * object).
     */
    @Generated
    private final SpatialExtent spatial;

    /*
     * Temporal extent defined by time intervals.
     * 
     * See the [STAC Collection
     * Spec](https://github.com/radiantearth/stac-spec/blob/v1.0.0/collection-spec/collection-spec.md#spatial-extent-
     * object).
     */
    @Generated
    private final TimeInterval temporal;

    /**
     * Creates an instance of Extent class.
     * 
     * @param spatial the spatial value to set.
     * @param temporal the temporal value to set.
     */
    @Generated
    public Extent(SpatialExtent spatial, TimeInterval temporal) {
        this.spatial = spatial;
        this.temporal = temporal;
    }

    /**
     * Get the spatial property: Spatial extent defined by bounding boxes.
     * 
     * See the [STAC Collection
     * Spec](https://github.com/radiantearth/stac-spec/blob/v1.0.0/collection-spec/collection-spec.md#spatial-extent-object).
     * 
     * @return the spatial value.
     */
    @Generated
    public SpatialExtent getSpatial() {
        return this.spatial;
    }

    /**
     * Get the temporal property: Temporal extent defined by time intervals.
     * 
     * See the [STAC Collection
     * Spec](https://github.com/radiantearth/stac-spec/blob/v1.0.0/collection-spec/collection-spec.md#spatial-extent-object).
     * 
     * @return the temporal value.
     */
    @Generated
    public TimeInterval getTemporal() {
        return this.temporal;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("spatial", this.spatial);
        jsonWriter.writeJsonField("temporal", this.temporal);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of Extent from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of Extent if the JsonReader was pointing to an instance of it, or null if it was pointing to
     * JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the Extent.
     */
    @Generated
    public static Extent fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SpatialExtent spatial = null;
            TimeInterval temporal = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("spatial".equals(fieldName)) {
                    spatial = SpatialExtent.fromJson(reader);
                } else if ("temporal".equals(fieldName)) {
                    temporal = TimeInterval.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }
            return new Extent(spatial, temporal);
        });
    }
}
