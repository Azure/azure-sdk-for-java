// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.planetarycomputer.models;

import com.azure.core.annotation.Generated;
import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * Supported algorithms for terrain and index-based analysis.
 */
public final class Algorithm extends ExpandableStringEnum<Algorithm> {
    /**
     * Creates hillshade visualization from elevation data.
     */
    @Generated
    public static final Algorithm HILLSHADE = fromString("hillshade");

    /**
     * Generates elevation contour lines.
     */
    @Generated
    public static final Algorithm CONTOURS = fromString("contours");

    /**
     * Calculates normalized difference index between bands.
     */
    @Generated
    public static final Algorithm NORMALIZED_INDEX = fromString("normalizedIndex");

    /**
     * Encodes elevation data in Mapbox Terrarium RGB format.
     */
    @Generated
    public static final Algorithm TERRARIUM = fromString("terrarium");

    /**
     * Encodes elevation data in Mapbox TerrainRGB format.
     */
    @Generated
    public static final Algorithm TERRAINRGB = fromString("terrainrgb");

    /**
     * Creates a new instance of Algorithm value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Generated
    @Deprecated
    public Algorithm() {
    }

    /**
     * Creates or finds a Algorithm from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding Algorithm.
     */
    @Generated
    public static Algorithm fromString(String name) {
        return fromString(name, Algorithm.class);
    }

    /**
     * Gets known Algorithm values.
     * 
     * @return known Algorithm values.
     */
    @Generated
    public static Collection<Algorithm> values() {
        return values(Algorithm.class);
    }
}
