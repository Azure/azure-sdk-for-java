// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.planetarycomputer.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.Map;

/**
 * Return dataset's statistics.
 */
@Immutable
public final class AssetStatisticsResponse implements JsonSerializable<AssetStatisticsResponse> {
    /*
     * Response Asset Statistics Api Collections Collection Id Items Item Id Asset Statistics Get
     */
    @Generated
    private final Map<String, BandStatistics> data;

    /**
     * Creates an instance of AssetStatisticsResponse class.
     * 
     * @param data the data value to set.
     */
    @Generated
    private AssetStatisticsResponse(Map<String, BandStatistics> data) {
        this.data = data;
    }

    /**
     * Get the data property: Response Asset Statistics Api Collections Collection Id Items Item Id Asset Statistics
     * Get.
     * 
     * @return the data value.
     */
    @Generated
    public Map<String, BandStatistics> getData() {
        return this.data;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeMapField("data", this.data, (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AssetStatisticsResponse from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AssetStatisticsResponse if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AssetStatisticsResponse.
     */
    @Generated
    public static AssetStatisticsResponse fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            Map<String, BandStatistics> data = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("data".equals(fieldName)) {
                    data = reader.readMap(reader1 -> BandStatistics.fromJson(reader1));
                } else {
                    reader.skipChildren();
                }
            }
            return new AssetStatisticsResponse(data);
        });
    }
}
