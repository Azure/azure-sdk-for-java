// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.planetarycomputer.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import java.util.List;

/**
 * Options for registerSearch API.
 */
@Fluent
public final class RegisterSearchOptions {
    /*
     * List of STAC collection IDs to include in the mosaic
     */
    @Generated
    private List<String> collections;

    /*
     * List of specific STAC item IDs to include in the mosaic
     */
    @Generated
    private List<String> ids;

    /*
     * Geographic bounding box to filter items [west, south, east, north]
     */
    @Generated
    private Double bbox;

    /*
     * GeoJSON geometry to spatially filter items by intersection
     */
    @Generated
    private Geometry intersects;

    /*
     * Query
     */
    @Generated
    private StacQuery query;

    /*
     * Filter
     */
    @Generated
    private String filter;

    /*
     * Temporal filter in RFC 3339 format or interval
     */
    @Generated
    private String datetime;

    /*
     * Criteria for ordering items in the mosaic
     */
    @Generated
    private List<SortExtension> sortBy;

    /*
     * Query language format used in the filter parameter
     */
    @Generated
    private FilterLang filterLang;

    /*
     * Additional metadata to associate with the mosaic
     */
    @Generated
    private Metadata metadata;

    /**
     * Creates an instance of RegisterSearchOptions class.
     */
    @Generated
    public RegisterSearchOptions() {
    }

    /**
     * Get the collections property: List of STAC collection IDs to include in the mosaic.
     * 
     * @return the collections value.
     */
    @Generated
    public List<String> getCollections() {
        return this.collections;
    }

    /**
     * Set the collections property: List of STAC collection IDs to include in the mosaic.
     * 
     * @param collections the collections value to set.
     * @return the RegisterSearchOptions object itself.
     */
    @Generated
    public RegisterSearchOptions setCollections(List<String> collections) {
        this.collections = collections;
        return this;
    }

    /**
     * Get the ids property: List of specific STAC item IDs to include in the mosaic.
     * 
     * @return the ids value.
     */
    @Generated
    public List<String> getIds() {
        return this.ids;
    }

    /**
     * Set the ids property: List of specific STAC item IDs to include in the mosaic.
     * 
     * @param ids the ids value to set.
     * @return the RegisterSearchOptions object itself.
     */
    @Generated
    public RegisterSearchOptions setIds(List<String> ids) {
        this.ids = ids;
        return this;
    }

    /**
     * Get the bbox property: Geographic bounding box to filter items [west, south, east, north].
     * 
     * @return the bbox value.
     */
    @Generated
    public Double getBbox() {
        return this.bbox;
    }

    /**
     * Set the bbox property: Geographic bounding box to filter items [west, south, east, north].
     * 
     * @param bbox the bbox value to set.
     * @return the RegisterSearchOptions object itself.
     */
    @Generated
    public RegisterSearchOptions setBbox(Double bbox) {
        this.bbox = bbox;
        return this;
    }

    /**
     * Get the intersects property: GeoJSON geometry to spatially filter items by intersection.
     * 
     * @return the intersects value.
     */
    @Generated
    public Geometry getIntersects() {
        return this.intersects;
    }

    /**
     * Set the intersects property: GeoJSON geometry to spatially filter items by intersection.
     * 
     * @param intersects the intersects value to set.
     * @return the RegisterSearchOptions object itself.
     */
    @Generated
    public RegisterSearchOptions setIntersects(Geometry intersects) {
        this.intersects = intersects;
        return this;
    }

    /**
     * Get the query property: Query.
     * 
     * @return the query value.
     */
    @Generated
    public StacQuery getQuery() {
        return this.query;
    }

    /**
     * Set the query property: Query.
     * 
     * @param query the query value to set.
     * @return the RegisterSearchOptions object itself.
     */
    @Generated
    public RegisterSearchOptions setQuery(StacQuery query) {
        this.query = query;
        return this;
    }

    /**
     * Get the filter property: Filter.
     * 
     * @return the filter value.
     */
    @Generated
    public String getFilter() {
        return this.filter;
    }

    /**
     * Set the filter property: Filter.
     * 
     * @param filter the filter value to set.
     * @return the RegisterSearchOptions object itself.
     */
    @Generated
    public RegisterSearchOptions setFilter(String filter) {
        this.filter = filter;
        return this;
    }

    /**
     * Get the datetime property: Temporal filter in RFC 3339 format or interval.
     * 
     * @return the datetime value.
     */
    @Generated
    public String getDatetime() {
        return this.datetime;
    }

    /**
     * Set the datetime property: Temporal filter in RFC 3339 format or interval.
     * 
     * @param datetime the datetime value to set.
     * @return the RegisterSearchOptions object itself.
     */
    @Generated
    public RegisterSearchOptions setDatetime(String datetime) {
        this.datetime = datetime;
        return this;
    }

    /**
     * Get the sortBy property: Criteria for ordering items in the mosaic.
     * 
     * @return the sortBy value.
     */
    @Generated
    public List<SortExtension> getSortBy() {
        return this.sortBy;
    }

    /**
     * Set the sortBy property: Criteria for ordering items in the mosaic.
     * 
     * @param sortBy the sortBy value to set.
     * @return the RegisterSearchOptions object itself.
     */
    @Generated
    public RegisterSearchOptions setSortBy(List<SortExtension> sortBy) {
        this.sortBy = sortBy;
        return this;
    }

    /**
     * Get the filterLang property: Query language format used in the filter parameter.
     * 
     * @return the filterLang value.
     */
    @Generated
    public FilterLang getFilterLang() {
        return this.filterLang;
    }

    /**
     * Set the filterLang property: Query language format used in the filter parameter.
     * 
     * @param filterLang the filterLang value to set.
     * @return the RegisterSearchOptions object itself.
     */
    @Generated
    public RegisterSearchOptions setFilterLang(FilterLang filterLang) {
        this.filterLang = filterLang;
        return this;
    }

    /**
     * Get the metadata property: Additional metadata to associate with the mosaic.
     * 
     * @return the metadata value.
     */
    @Generated
    public Metadata getMetadata() {
        return this.metadata;
    }

    /**
     * Set the metadata property: Additional metadata to associate with the mosaic.
     * 
     * @param metadata the metadata value to set.
     * @return the RegisterSearchOptions object itself.
     */
    @Generated
    public RegisterSearchOptions setMetadata(Metadata metadata) {
        this.metadata = metadata;
        return this;
    }
}
