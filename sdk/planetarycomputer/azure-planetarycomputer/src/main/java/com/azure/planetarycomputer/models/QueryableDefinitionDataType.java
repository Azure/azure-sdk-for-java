// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.planetarycomputer.models;

import com.azure.core.annotation.Generated;
import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * Queryable data types for the queryables extension.
 * These are the data types supported by Basic CQL2.
 */
public final class QueryableDefinitionDataType extends ExpandableStringEnum<QueryableDefinitionDataType> {
    /**
     * Character strings.
     * Example: 'This is a literal string.'.
     */
    @Generated
    public static final QueryableDefinitionDataType STRING = fromString("string");

    /**
     * Numbers including integers and floating point values.
     * Examples: -100, 3.14159.
     */
    @Generated
    public static final QueryableDefinitionDataType NUMBER = fromString("number");

    /**
     * Booleans.
     * Examples: true, false.
     */
    @Generated
    public static final QueryableDefinitionDataType BOOLEAN = fromString("boolean");

    /**
     * An instant with a granularity of a second or smaller.
     * Example (JSON): { "timestamp": "1969-07-20T20:17:40Z" }.
     */
    @Generated
    public static final QueryableDefinitionDataType TIMESTAMP = fromString("timestamp");

    /**
     * An instant with a granularity of a day.
     * Example (JSON): { "date": "1969-07-20" }.
     */
    @Generated
    public static final QueryableDefinitionDataType DATE = fromString("date");

    /**
     * Creates a new instance of QueryableDefinitionDataType value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Generated
    @Deprecated
    public QueryableDefinitionDataType() {
    }

    /**
     * Creates or finds a QueryableDefinitionDataType from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding QueryableDefinitionDataType.
     */
    @Generated
    public static QueryableDefinitionDataType fromString(String name) {
        return fromString(name, QueryableDefinitionDataType.class);
    }

    /**
     * Gets known QueryableDefinitionDataType values.
     * 
     * @return known QueryableDefinitionDataType values.
     */
    @Generated
    public static Collection<QueryableDefinitionDataType> values() {
        return values(QueryableDefinitionDataType.class);
    }
}
