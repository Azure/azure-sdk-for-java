// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The AllowedResourceName model.
 */
@Fluent
public final class AllowedResourceName implements JsonSerializable<AllowedResourceName> {
    /*
     * Resource name.
     */
    private String name;

    /*
     * Get action verb.
     */
    private String getActionVerb;

    /**
     * Creates an instance of AllowedResourceName class.
     */
    public AllowedResourceName() {
    }

    /**
     * Get the name property: Resource name.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Resource name.
     * 
     * @param name the name value to set.
     * @return the AllowedResourceName object itself.
     */
    public AllowedResourceName withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the getActionVerb property: Get action verb.
     * 
     * @return the getActionVerb value.
     */
    public String getActionVerb() {
        return this.getActionVerb;
    }

    /**
     * Set the getActionVerb property: Get action verb.
     * 
     * @param getActionVerb the getActionVerb value to set.
     * @return the AllowedResourceName object itself.
     */
    public AllowedResourceName withGetActionVerb(String getActionVerb) {
        this.getActionVerb = getActionVerb;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("name", this.name);
        jsonWriter.writeStringField("getActionVerb", this.getActionVerb);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AllowedResourceName from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AllowedResourceName if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the AllowedResourceName.
     */
    public static AllowedResourceName fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AllowedResourceName deserializedAllowedResourceName = new AllowedResourceName();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("name".equals(fieldName)) {
                    deserializedAllowedResourceName.name = reader.getString();
                } else if ("getActionVerb".equals(fieldName)) {
                    deserializedAllowedResourceName.getActionVerb = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAllowedResourceName;
        });
    }
}
