// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Marketplace options.
 */
@Fluent
public final class ResourceTypeRegistrationPropertiesMarketplaceOptions
    implements JsonSerializable<ResourceTypeRegistrationPropertiesMarketplaceOptions> {
    /*
     * Add-on plan conversion allowed.
     */
    private Boolean addOnPlanConversionAllowed;

    /**
     * Creates an instance of ResourceTypeRegistrationPropertiesMarketplaceOptions class.
     */
    public ResourceTypeRegistrationPropertiesMarketplaceOptions() {
    }

    /**
     * Get the addOnPlanConversionAllowed property: Add-on plan conversion allowed.
     * 
     * @return the addOnPlanConversionAllowed value.
     */
    public Boolean addOnPlanConversionAllowed() {
        return this.addOnPlanConversionAllowed;
    }

    /**
     * Set the addOnPlanConversionAllowed property: Add-on plan conversion allowed.
     * 
     * @param addOnPlanConversionAllowed the addOnPlanConversionAllowed value to set.
     * @return the ResourceTypeRegistrationPropertiesMarketplaceOptions object itself.
     */
    public ResourceTypeRegistrationPropertiesMarketplaceOptions
        withAddOnPlanConversionAllowed(Boolean addOnPlanConversionAllowed) {
        this.addOnPlanConversionAllowed = addOnPlanConversionAllowed;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("addOnPlanConversionAllowed", this.addOnPlanConversionAllowed);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ResourceTypeRegistrationPropertiesMarketplaceOptions from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ResourceTypeRegistrationPropertiesMarketplaceOptions if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ResourceTypeRegistrationPropertiesMarketplaceOptions.
     */
    public static ResourceTypeRegistrationPropertiesMarketplaceOptions fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            ResourceTypeRegistrationPropertiesMarketplaceOptions deserializedResourceTypeRegistrationPropertiesMarketplaceOptions
                = new ResourceTypeRegistrationPropertiesMarketplaceOptions();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("addOnPlanConversionAllowed".equals(fieldName)) {
                    deserializedResourceTypeRegistrationPropertiesMarketplaceOptions.addOnPlanConversionAllowed
                        = reader.getNullable(JsonReader::getBoolean);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedResourceTypeRegistrationPropertiesMarketplaceOptions;
        });
    }
}
