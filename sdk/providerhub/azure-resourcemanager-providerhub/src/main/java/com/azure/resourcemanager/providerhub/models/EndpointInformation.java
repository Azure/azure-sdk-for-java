// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The EndpointInformation model.
 */
@Fluent
public final class EndpointInformation implements JsonSerializable<EndpointInformation> {
    /*
     * The endpoint.
     */
    private String endpoint;

    /*
     * The endpoint type.
     */
    private NotificationEndpointType endpointType;

    /*
     * The schema version.
     */
    private String schemaVersion;

    /**
     * Creates an instance of EndpointInformation class.
     */
    public EndpointInformation() {
    }

    /**
     * Get the endpoint property: The endpoint.
     * 
     * @return the endpoint value.
     */
    public String endpoint() {
        return this.endpoint;
    }

    /**
     * Set the endpoint property: The endpoint.
     * 
     * @param endpoint the endpoint value to set.
     * @return the EndpointInformation object itself.
     */
    public EndpointInformation withEndpoint(String endpoint) {
        this.endpoint = endpoint;
        return this;
    }

    /**
     * Get the endpointType property: The endpoint type.
     * 
     * @return the endpointType value.
     */
    public NotificationEndpointType endpointType() {
        return this.endpointType;
    }

    /**
     * Set the endpointType property: The endpoint type.
     * 
     * @param endpointType the endpointType value to set.
     * @return the EndpointInformation object itself.
     */
    public EndpointInformation withEndpointType(NotificationEndpointType endpointType) {
        this.endpointType = endpointType;
        return this;
    }

    /**
     * Get the schemaVersion property: The schema version.
     * 
     * @return the schemaVersion value.
     */
    public String schemaVersion() {
        return this.schemaVersion;
    }

    /**
     * Set the schemaVersion property: The schema version.
     * 
     * @param schemaVersion the schemaVersion value to set.
     * @return the EndpointInformation object itself.
     */
    public EndpointInformation withSchemaVersion(String schemaVersion) {
        this.schemaVersion = schemaVersion;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("endpoint", this.endpoint);
        jsonWriter.writeStringField("endpointType", this.endpointType == null ? null : this.endpointType.toString());
        jsonWriter.writeStringField("schemaVersion", this.schemaVersion);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of EndpointInformation from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of EndpointInformation if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the EndpointInformation.
     */
    public static EndpointInformation fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            EndpointInformation deserializedEndpointInformation = new EndpointInformation();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("endpoint".equals(fieldName)) {
                    deserializedEndpointInformation.endpoint = reader.getString();
                } else if ("endpointType".equals(fieldName)) {
                    deserializedEndpointInformation.endpointType
                        = NotificationEndpointType.fromString(reader.getString());
                } else if ("schemaVersion".equals(fieldName)) {
                    deserializedEndpointInformation.schemaVersion = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedEndpointInformation;
        });
    }
}
