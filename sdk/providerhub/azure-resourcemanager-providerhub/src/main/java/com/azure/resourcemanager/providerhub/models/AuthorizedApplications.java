// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import java.util.UUID;

/**
 * Resource collection API of AuthorizedApplications.
 */
public interface AuthorizedApplications {
    /**
     * Gets the authorized application details.
     * 
     * @param providerNamespace The name of the resource provider hosted within ProviderHub.
     * @param applicationId The application ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the authorized application details along with {@link Response}.
     */
    Response<AuthorizedApplication> getWithResponse(String providerNamespace, UUID applicationId, Context context);

    /**
     * Gets the authorized application details.
     * 
     * @param providerNamespace The name of the resource provider hosted within ProviderHub.
     * @param applicationId The application ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the authorized application details.
     */
    AuthorizedApplication get(String providerNamespace, UUID applicationId);

    /**
     * Deletes an authorized application.
     * 
     * @param providerNamespace The name of the resource provider hosted within ProviderHub.
     * @param applicationId The application ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteWithResponse(String providerNamespace, UUID applicationId, Context context);

    /**
     * Deletes an authorized application.
     * 
     * @param providerNamespace The name of the resource provider hosted within ProviderHub.
     * @param applicationId The application ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String providerNamespace, UUID applicationId);

    /**
     * Gets the list of the authorized applications in the provider namespace.
     * 
     * @param providerNamespace The name of the resource provider hosted within ProviderHub.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of the authorized applications in the provider namespace as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<AuthorizedApplication> list(String providerNamespace);

    /**
     * Gets the list of the authorized applications in the provider namespace.
     * 
     * @param providerNamespace The name of the resource provider hosted within ProviderHub.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of the authorized applications in the provider namespace as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<AuthorizedApplication> list(String providerNamespace, Context context);

    /**
     * Gets the authorized application details.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the authorized application details along with {@link Response}.
     */
    AuthorizedApplication getById(String id);

    /**
     * Gets the authorized application details.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the authorized application details along with {@link Response}.
     */
    Response<AuthorizedApplication> getByIdWithResponse(String id, Context context);

    /**
     * Deletes an authorized application.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes an authorized application.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new AuthorizedApplication resource.
     * 
     * @param name resource name.
     * @return the first stage of the new AuthorizedApplication definition.
     */
    AuthorizedApplication.DefinitionStages.Blank define(UUID name);
}
