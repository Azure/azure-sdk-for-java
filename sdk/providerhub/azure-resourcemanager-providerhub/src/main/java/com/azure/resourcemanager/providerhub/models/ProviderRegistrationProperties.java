// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The ProviderRegistrationProperties model. */
@Fluent
public class ProviderRegistrationProperties extends ResourceProviderManifestProperties {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ProviderRegistrationProperties.class);

    /*
     * The providerHubMetadata property.
     */
    @JsonProperty(value = "providerHubMetadata")
    private ProviderHubMetadata providerHubMetadata;

    /*
     * The provisioningState property.
     */
    @JsonProperty(value = "provisioningState")
    private ProvisioningState provisioningState;

    /*
     * The subscriptionLifecycleNotificationSpecifications property.
     */
    @JsonProperty(value = "subscriptionLifecycleNotificationSpecifications")
    private SubscriptionLifecycleNotificationSpecifications subscriptionLifecycleNotificationSpecifications;

    /**
     * Get the providerHubMetadata property: The providerHubMetadata property.
     *
     * @return the providerHubMetadata value.
     */
    public ProviderHubMetadata providerHubMetadata() {
        return this.providerHubMetadata;
    }

    /**
     * Set the providerHubMetadata property: The providerHubMetadata property.
     *
     * @param providerHubMetadata the providerHubMetadata value to set.
     * @return the ProviderRegistrationProperties object itself.
     */
    public ProviderRegistrationProperties withProviderHubMetadata(ProviderHubMetadata providerHubMetadata) {
        this.providerHubMetadata = providerHubMetadata;
        return this;
    }

    /**
     * Get the provisioningState property: The provisioningState property.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Set the provisioningState property: The provisioningState property.
     *
     * @param provisioningState the provisioningState value to set.
     * @return the ProviderRegistrationProperties object itself.
     */
    public ProviderRegistrationProperties withProvisioningState(ProvisioningState provisioningState) {
        this.provisioningState = provisioningState;
        return this;
    }

    /**
     * Get the subscriptionLifecycleNotificationSpecifications property: The
     * subscriptionLifecycleNotificationSpecifications property.
     *
     * @return the subscriptionLifecycleNotificationSpecifications value.
     */
    public SubscriptionLifecycleNotificationSpecifications subscriptionLifecycleNotificationSpecifications() {
        return this.subscriptionLifecycleNotificationSpecifications;
    }

    /**
     * Set the subscriptionLifecycleNotificationSpecifications property: The
     * subscriptionLifecycleNotificationSpecifications property.
     *
     * @param subscriptionLifecycleNotificationSpecifications the subscriptionLifecycleNotificationSpecifications value
     *     to set.
     * @return the ProviderRegistrationProperties object itself.
     */
    public ProviderRegistrationProperties withSubscriptionLifecycleNotificationSpecifications(
        SubscriptionLifecycleNotificationSpecifications subscriptionLifecycleNotificationSpecifications) {
        this.subscriptionLifecycleNotificationSpecifications = subscriptionLifecycleNotificationSpecifications;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ProviderRegistrationProperties withProviderAuthentication(
        ResourceProviderAuthentication providerAuthentication) {
        super.withProviderAuthentication(providerAuthentication);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ProviderRegistrationProperties withProviderAuthorizations(
        List<ResourceProviderAuthorization> providerAuthorizations) {
        super.withProviderAuthorizations(providerAuthorizations);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ProviderRegistrationProperties withNamespace(String namespace) {
        super.withNamespace(namespace);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ProviderRegistrationProperties withProviderVersion(String providerVersion) {
        super.withProviderVersion(providerVersion);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ProviderRegistrationProperties withProviderType(ResourceProviderType providerType) {
        super.withProviderType(providerType);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ProviderRegistrationProperties withRequiredFeatures(List<String> requiredFeatures) {
        super.withRequiredFeatures(requiredFeatures);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ProviderRegistrationProperties withFeaturesRule(FeaturesRule featuresRule) {
        super.withFeaturesRule(featuresRule);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ProviderRegistrationProperties withRequestHeaderOptions(RequestHeaderOptions requestHeaderOptions) {
        super.withRequestHeaderOptions(requestHeaderOptions);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ProviderRegistrationProperties withManagement(ResourceProviderManagement management) {
        super.withManagement(management);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ProviderRegistrationProperties withCapabilities(List<ResourceProviderCapabilities> capabilities) {
        super.withCapabilities(capabilities);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ProviderRegistrationProperties withMetadata(Object metadata) {
        super.withMetadata(metadata);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ProviderRegistrationProperties withTemplateDeploymentOptions(
        TemplateDeploymentOptions templateDeploymentOptions) {
        super.withTemplateDeploymentOptions(templateDeploymentOptions);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (providerHubMetadata() != null) {
            providerHubMetadata().validate();
        }
        if (subscriptionLifecycleNotificationSpecifications() != null) {
            subscriptionLifecycleNotificationSpecifications().validate();
        }
    }
}
