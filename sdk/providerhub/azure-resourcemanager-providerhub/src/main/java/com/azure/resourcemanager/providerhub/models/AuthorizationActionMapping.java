// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The AuthorizationActionMapping model.
 */
@Fluent
public final class AuthorizationActionMapping implements JsonSerializable<AuthorizationActionMapping> {
    /*
     * The original property.
     */
    private String original;

    /*
     * The desired property.
     */
    private String desired;

    /**
     * Creates an instance of AuthorizationActionMapping class.
     */
    public AuthorizationActionMapping() {
    }

    /**
     * Get the original property: The original property.
     * 
     * @return the original value.
     */
    public String original() {
        return this.original;
    }

    /**
     * Set the original property: The original property.
     * 
     * @param original the original value to set.
     * @return the AuthorizationActionMapping object itself.
     */
    public AuthorizationActionMapping withOriginal(String original) {
        this.original = original;
        return this;
    }

    /**
     * Get the desired property: The desired property.
     * 
     * @return the desired value.
     */
    public String desired() {
        return this.desired;
    }

    /**
     * Set the desired property: The desired property.
     * 
     * @param desired the desired value to set.
     * @return the AuthorizationActionMapping object itself.
     */
    public AuthorizationActionMapping withDesired(String desired) {
        this.desired = desired;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("original", this.original);
        jsonWriter.writeStringField("desired", this.desired);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AuthorizationActionMapping from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AuthorizationActionMapping if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AuthorizationActionMapping.
     */
    public static AuthorizationActionMapping fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AuthorizationActionMapping deserializedAuthorizationActionMapping = new AuthorizationActionMapping();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("original".equals(fieldName)) {
                    deserializedAuthorizationActionMapping.original = reader.getString();
                } else if ("desired".equals(fieldName)) {
                    deserializedAuthorizationActionMapping.desired = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAuthorizationActionMapping;
        });
    }
}
