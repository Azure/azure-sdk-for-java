// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.providerhub.fluent.models.DefaultRolloutSpecificationInner;
import com.azure.resourcemanager.providerhub.fluent.models.ProviderRegistrationInner;
import com.azure.resourcemanager.providerhub.fluent.models.ResourceTypeRegistrationInner;
import com.fasterxml.jackson.annotation.JsonIgnore;
import java.util.List;

/** The DefaultRolloutPropertiesSpecification model. */
@Immutable
public final class DefaultRolloutPropertiesSpecification extends DefaultRolloutSpecificationInner {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(DefaultRolloutPropertiesSpecification.class);

    /** {@inheritDoc} */
    @Override
    public DefaultRolloutPropertiesSpecification withCanary(CanaryTrafficRegionRolloutConfiguration canary) {
        super.withCanary(canary);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public DefaultRolloutPropertiesSpecification withLowTraffic(TrafficRegionRolloutConfiguration lowTraffic) {
        super.withLowTraffic(lowTraffic);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public DefaultRolloutPropertiesSpecification withMediumTraffic(TrafficRegionRolloutConfiguration mediumTraffic) {
        super.withMediumTraffic(mediumTraffic);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public DefaultRolloutPropertiesSpecification withHighTraffic(TrafficRegionRolloutConfiguration highTraffic) {
        super.withHighTraffic(highTraffic);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public DefaultRolloutPropertiesSpecification withRestOfTheWorldGroupOne(
        TrafficRegionRolloutConfiguration restOfTheWorldGroupOne) {
        super.withRestOfTheWorldGroupOne(restOfTheWorldGroupOne);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public DefaultRolloutPropertiesSpecification withRestOfTheWorldGroupTwo(
        TrafficRegionRolloutConfiguration restOfTheWorldGroupTwo) {
        super.withRestOfTheWorldGroupTwo(restOfTheWorldGroupTwo);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public DefaultRolloutPropertiesSpecification withProviderRegistration(
        ProviderRegistrationInner providerRegistration) {
        super.withProviderRegistration(providerRegistration);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public DefaultRolloutPropertiesSpecification withResourceTypeRegistrations(
        List<ResourceTypeRegistrationInner> resourceTypeRegistrations) {
        super.withResourceTypeRegistrations(resourceTypeRegistrations);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
