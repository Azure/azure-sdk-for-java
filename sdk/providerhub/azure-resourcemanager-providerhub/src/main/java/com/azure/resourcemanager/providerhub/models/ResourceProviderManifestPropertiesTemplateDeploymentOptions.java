// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The ResourceProviderManifestPropertiesTemplateDeploymentOptions model.
 */
@Fluent
public final class ResourceProviderManifestPropertiesTemplateDeploymentOptions extends TemplateDeploymentOptions {
    /**
     * Creates an instance of ResourceProviderManifestPropertiesTemplateDeploymentOptions class.
     */
    public ResourceProviderManifestPropertiesTemplateDeploymentOptions() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResourceProviderManifestPropertiesTemplateDeploymentOptions
        withPreflightSupported(Boolean preflightSupported) {
        super.withPreflightSupported(preflightSupported);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResourceProviderManifestPropertiesTemplateDeploymentOptions
        withPreflightOptions(List<PreflightOption> preflightOptions) {
        super.withPreflightOptions(preflightOptions);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("preflightSupported", preflightSupported());
        jsonWriter.writeArrayField("preflightOptions", preflightOptions(),
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ResourceProviderManifestPropertiesTemplateDeploymentOptions from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ResourceProviderManifestPropertiesTemplateDeploymentOptions if the JsonReader was pointing
     * to an instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the
     * ResourceProviderManifestPropertiesTemplateDeploymentOptions.
     */
    public static ResourceProviderManifestPropertiesTemplateDeploymentOptions fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            ResourceProviderManifestPropertiesTemplateDeploymentOptions deserializedResourceProviderManifestPropertiesTemplateDeploymentOptions
                = new ResourceProviderManifestPropertiesTemplateDeploymentOptions();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("preflightSupported".equals(fieldName)) {
                    deserializedResourceProviderManifestPropertiesTemplateDeploymentOptions
                        .withPreflightSupported(reader.getNullable(JsonReader::getBoolean));
                } else if ("preflightOptions".equals(fieldName)) {
                    List<PreflightOption> preflightOptions
                        = reader.readArray(reader1 -> PreflightOption.fromString(reader1.getString()));
                    deserializedResourceProviderManifestPropertiesTemplateDeploymentOptions
                        .withPreflightOptions(preflightOptions);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedResourceProviderManifestPropertiesTemplateDeploymentOptions;
        });
    }
}
