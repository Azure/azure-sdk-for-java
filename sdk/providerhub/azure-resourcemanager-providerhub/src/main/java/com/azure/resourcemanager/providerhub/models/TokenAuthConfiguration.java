// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The TokenAuthConfiguration model.
 */
@Fluent
public final class TokenAuthConfiguration implements JsonSerializable<TokenAuthConfiguration> {
    /*
     * The authentication scheme.
     */
    private AuthenticationScheme authenticationScheme;

    /*
     * The signed request scope.
     */
    private SignedRequestScope signedRequestScope;

    /*
     * Whether certification authentication fallback is disabled.
     */
    private Boolean disableCertificateAuthenticationFallback;

    /**
     * Creates an instance of TokenAuthConfiguration class.
     */
    public TokenAuthConfiguration() {
    }

    /**
     * Get the authenticationScheme property: The authentication scheme.
     * 
     * @return the authenticationScheme value.
     */
    public AuthenticationScheme authenticationScheme() {
        return this.authenticationScheme;
    }

    /**
     * Set the authenticationScheme property: The authentication scheme.
     * 
     * @param authenticationScheme the authenticationScheme value to set.
     * @return the TokenAuthConfiguration object itself.
     */
    public TokenAuthConfiguration withAuthenticationScheme(AuthenticationScheme authenticationScheme) {
        this.authenticationScheme = authenticationScheme;
        return this;
    }

    /**
     * Get the signedRequestScope property: The signed request scope.
     * 
     * @return the signedRequestScope value.
     */
    public SignedRequestScope signedRequestScope() {
        return this.signedRequestScope;
    }

    /**
     * Set the signedRequestScope property: The signed request scope.
     * 
     * @param signedRequestScope the signedRequestScope value to set.
     * @return the TokenAuthConfiguration object itself.
     */
    public TokenAuthConfiguration withSignedRequestScope(SignedRequestScope signedRequestScope) {
        this.signedRequestScope = signedRequestScope;
        return this;
    }

    /**
     * Get the disableCertificateAuthenticationFallback property: Whether certification authentication fallback is
     * disabled.
     * 
     * @return the disableCertificateAuthenticationFallback value.
     */
    public Boolean disableCertificateAuthenticationFallback() {
        return this.disableCertificateAuthenticationFallback;
    }

    /**
     * Set the disableCertificateAuthenticationFallback property: Whether certification authentication fallback is
     * disabled.
     * 
     * @param disableCertificateAuthenticationFallback the disableCertificateAuthenticationFallback value to set.
     * @return the TokenAuthConfiguration object itself.
     */
    public TokenAuthConfiguration
        withDisableCertificateAuthenticationFallback(Boolean disableCertificateAuthenticationFallback) {
        this.disableCertificateAuthenticationFallback = disableCertificateAuthenticationFallback;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("authenticationScheme",
            this.authenticationScheme == null ? null : this.authenticationScheme.toString());
        jsonWriter.writeStringField("signedRequestScope",
            this.signedRequestScope == null ? null : this.signedRequestScope.toString());
        jsonWriter.writeBooleanField("disableCertificateAuthenticationFallback",
            this.disableCertificateAuthenticationFallback);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of TokenAuthConfiguration from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of TokenAuthConfiguration if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the TokenAuthConfiguration.
     */
    public static TokenAuthConfiguration fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            TokenAuthConfiguration deserializedTokenAuthConfiguration = new TokenAuthConfiguration();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("authenticationScheme".equals(fieldName)) {
                    deserializedTokenAuthConfiguration.authenticationScheme
                        = AuthenticationScheme.fromString(reader.getString());
                } else if ("signedRequestScope".equals(fieldName)) {
                    deserializedTokenAuthConfiguration.signedRequestScope
                        = SignedRequestScope.fromString(reader.getString());
                } else if ("disableCertificateAuthenticationFallback".equals(fieldName)) {
                    deserializedTokenAuthConfiguration.disableCertificateAuthenticationFallback
                        = reader.getNullable(JsonReader::getBoolean);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedTokenAuthConfiguration;
        });
    }
}
