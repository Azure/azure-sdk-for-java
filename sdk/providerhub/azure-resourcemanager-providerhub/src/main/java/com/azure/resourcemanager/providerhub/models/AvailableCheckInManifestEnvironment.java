// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.models;

import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * The environment type.
 */
public final class AvailableCheckInManifestEnvironment
    extends ExpandableStringEnum<AvailableCheckInManifestEnvironment> {
    /**
     * Static value NotSpecified for AvailableCheckInManifestEnvironment.
     */
    public static final AvailableCheckInManifestEnvironment NOT_SPECIFIED = fromString("NotSpecified");

    /**
     * Static value Canary for AvailableCheckInManifestEnvironment.
     */
    public static final AvailableCheckInManifestEnvironment CANARY = fromString("Canary");

    /**
     * Static value Prod for AvailableCheckInManifestEnvironment.
     */
    public static final AvailableCheckInManifestEnvironment PROD = fromString("Prod");

    /**
     * Static value All for AvailableCheckInManifestEnvironment.
     */
    public static final AvailableCheckInManifestEnvironment ALL = fromString("All");

    /**
     * Static value Mooncake for AvailableCheckInManifestEnvironment.
     */
    public static final AvailableCheckInManifestEnvironment MOONCAKE = fromString("Mooncake");

    /**
     * Static value Fairfax for AvailableCheckInManifestEnvironment.
     */
    public static final AvailableCheckInManifestEnvironment FAIRFAX = fromString("Fairfax");

    /**
     * Creates a new instance of AvailableCheckInManifestEnvironment value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public AvailableCheckInManifestEnvironment() {
    }

    /**
     * Creates or finds a AvailableCheckInManifestEnvironment from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding AvailableCheckInManifestEnvironment.
     */
    public static AvailableCheckInManifestEnvironment fromString(String name) {
        return fromString(name, AvailableCheckInManifestEnvironment.class);
    }

    /**
     * Gets known AvailableCheckInManifestEnvironment values.
     * 
     * @return known AvailableCheckInManifestEnvironment values.
     */
    public static Collection<AvailableCheckInManifestEnvironment> values() {
        return values(AvailableCheckInManifestEnvironment.class);
    }
}
