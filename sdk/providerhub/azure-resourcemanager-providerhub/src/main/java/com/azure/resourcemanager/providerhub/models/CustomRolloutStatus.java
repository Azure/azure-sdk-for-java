// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;
import java.util.Map;

/**
 * The CustomRolloutStatus model.
 */
@Fluent
public class CustomRolloutStatus implements JsonSerializable<CustomRolloutStatus> {
    /*
     * The completedRegions property.
     */
    private List<String> completedRegions;

    /*
     * Dictionary of <ExtendedErrorInfo>
     */
    private Map<String, ExtendedErrorInfo> failedOrSkippedRegions;

    /**
     * Creates an instance of CustomRolloutStatus class.
     */
    public CustomRolloutStatus() {
    }

    /**
     * Get the completedRegions property: The completedRegions property.
     * 
     * @return the completedRegions value.
     */
    public List<String> completedRegions() {
        return this.completedRegions;
    }

    /**
     * Set the completedRegions property: The completedRegions property.
     * 
     * @param completedRegions the completedRegions value to set.
     * @return the CustomRolloutStatus object itself.
     */
    public CustomRolloutStatus withCompletedRegions(List<String> completedRegions) {
        this.completedRegions = completedRegions;
        return this;
    }

    /**
     * Get the failedOrSkippedRegions property: Dictionary of &lt;ExtendedErrorInfo&gt;.
     * 
     * @return the failedOrSkippedRegions value.
     */
    public Map<String, ExtendedErrorInfo> failedOrSkippedRegions() {
        return this.failedOrSkippedRegions;
    }

    /**
     * Set the failedOrSkippedRegions property: Dictionary of &lt;ExtendedErrorInfo&gt;.
     * 
     * @param failedOrSkippedRegions the failedOrSkippedRegions value to set.
     * @return the CustomRolloutStatus object itself.
     */
    public CustomRolloutStatus withFailedOrSkippedRegions(Map<String, ExtendedErrorInfo> failedOrSkippedRegions) {
        this.failedOrSkippedRegions = failedOrSkippedRegions;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (failedOrSkippedRegions() != null) {
            failedOrSkippedRegions().values().forEach(e -> {
                if (e != null) {
                    e.validate();
                }
            });
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("completedRegions", this.completedRegions,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeMapField("failedOrSkippedRegions", this.failedOrSkippedRegions,
            (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CustomRolloutStatus from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CustomRolloutStatus if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the CustomRolloutStatus.
     */
    public static CustomRolloutStatus fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CustomRolloutStatus deserializedCustomRolloutStatus = new CustomRolloutStatus();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("completedRegions".equals(fieldName)) {
                    List<String> completedRegions = reader.readArray(reader1 -> reader1.getString());
                    deserializedCustomRolloutStatus.completedRegions = completedRegions;
                } else if ("failedOrSkippedRegions".equals(fieldName)) {
                    Map<String, ExtendedErrorInfo> failedOrSkippedRegions
                        = reader.readMap(reader1 -> ExtendedErrorInfo.fromJson(reader1));
                    deserializedCustomRolloutStatus.failedOrSkippedRegions = failedOrSkippedRegions;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCustomRolloutStatus;
        });
    }
}
