// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The CanaryTrafficRegionRolloutConfiguration model.
 */
@Fluent
public class CanaryTrafficRegionRolloutConfiguration
    implements JsonSerializable<CanaryTrafficRegionRolloutConfiguration> {
    /*
     * The skipRegions property.
     */
    private List<String> skipRegions;

    /*
     * The regions property.
     */
    private List<String> regions;

    /**
     * Creates an instance of CanaryTrafficRegionRolloutConfiguration class.
     */
    public CanaryTrafficRegionRolloutConfiguration() {
    }

    /**
     * Get the skipRegions property: The skipRegions property.
     * 
     * @return the skipRegions value.
     */
    public List<String> skipRegions() {
        return this.skipRegions;
    }

    /**
     * Set the skipRegions property: The skipRegions property.
     * 
     * @param skipRegions the skipRegions value to set.
     * @return the CanaryTrafficRegionRolloutConfiguration object itself.
     */
    public CanaryTrafficRegionRolloutConfiguration withSkipRegions(List<String> skipRegions) {
        this.skipRegions = skipRegions;
        return this;
    }

    /**
     * Get the regions property: The regions property.
     * 
     * @return the regions value.
     */
    public List<String> regions() {
        return this.regions;
    }

    /**
     * Set the regions property: The regions property.
     * 
     * @param regions the regions value to set.
     * @return the CanaryTrafficRegionRolloutConfiguration object itself.
     */
    public CanaryTrafficRegionRolloutConfiguration withRegions(List<String> regions) {
        this.regions = regions;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("skipRegions", this.skipRegions, (writer, element) -> writer.writeString(element));
        jsonWriter.writeArrayField("regions", this.regions, (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CanaryTrafficRegionRolloutConfiguration from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CanaryTrafficRegionRolloutConfiguration if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the CanaryTrafficRegionRolloutConfiguration.
     */
    public static CanaryTrafficRegionRolloutConfiguration fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CanaryTrafficRegionRolloutConfiguration deserializedCanaryTrafficRegionRolloutConfiguration
                = new CanaryTrafficRegionRolloutConfiguration();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("skipRegions".equals(fieldName)) {
                    List<String> skipRegions = reader.readArray(reader1 -> reader1.getString());
                    deserializedCanaryTrafficRegionRolloutConfiguration.skipRegions = skipRegions;
                } else if ("regions".equals(fieldName)) {
                    List<String> regions = reader.readArray(reader1 -> reader1.getString());
                    deserializedCanaryTrafficRegionRolloutConfiguration.regions = regions;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCanaryTrafficRegionRolloutConfiguration;
        });
    }
}
