// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The legacy policy.
 */
@Fluent
public final class ResourceTypeRegistrationPropertiesLegacyPolicy
    implements JsonSerializable<ResourceTypeRegistrationPropertiesLegacyPolicy> {
    /*
     * The disallowedLegacyOperations property.
     */
    private List<LegacyOperation> disallowedLegacyOperations;

    /*
     * The disallowedConditions property.
     */
    private List<LegacyDisallowedCondition> disallowedConditions;

    /**
     * Creates an instance of ResourceTypeRegistrationPropertiesLegacyPolicy class.
     */
    public ResourceTypeRegistrationPropertiesLegacyPolicy() {
    }

    /**
     * Get the disallowedLegacyOperations property: The disallowedLegacyOperations property.
     * 
     * @return the disallowedLegacyOperations value.
     */
    public List<LegacyOperation> disallowedLegacyOperations() {
        return this.disallowedLegacyOperations;
    }

    /**
     * Set the disallowedLegacyOperations property: The disallowedLegacyOperations property.
     * 
     * @param disallowedLegacyOperations the disallowedLegacyOperations value to set.
     * @return the ResourceTypeRegistrationPropertiesLegacyPolicy object itself.
     */
    public ResourceTypeRegistrationPropertiesLegacyPolicy
        withDisallowedLegacyOperations(List<LegacyOperation> disallowedLegacyOperations) {
        this.disallowedLegacyOperations = disallowedLegacyOperations;
        return this;
    }

    /**
     * Get the disallowedConditions property: The disallowedConditions property.
     * 
     * @return the disallowedConditions value.
     */
    public List<LegacyDisallowedCondition> disallowedConditions() {
        return this.disallowedConditions;
    }

    /**
     * Set the disallowedConditions property: The disallowedConditions property.
     * 
     * @param disallowedConditions the disallowedConditions value to set.
     * @return the ResourceTypeRegistrationPropertiesLegacyPolicy object itself.
     */
    public ResourceTypeRegistrationPropertiesLegacyPolicy
        withDisallowedConditions(List<LegacyDisallowedCondition> disallowedConditions) {
        this.disallowedConditions = disallowedConditions;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (disallowedConditions() != null) {
            disallowedConditions().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("disallowedLegacyOperations", this.disallowedLegacyOperations,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeArrayField("disallowedConditions", this.disallowedConditions,
            (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ResourceTypeRegistrationPropertiesLegacyPolicy from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ResourceTypeRegistrationPropertiesLegacyPolicy if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ResourceTypeRegistrationPropertiesLegacyPolicy.
     */
    public static ResourceTypeRegistrationPropertiesLegacyPolicy fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ResourceTypeRegistrationPropertiesLegacyPolicy deserializedResourceTypeRegistrationPropertiesLegacyPolicy
                = new ResourceTypeRegistrationPropertiesLegacyPolicy();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("disallowedLegacyOperations".equals(fieldName)) {
                    List<LegacyOperation> disallowedLegacyOperations
                        = reader.readArray(reader1 -> LegacyOperation.fromString(reader1.getString()));
                    deserializedResourceTypeRegistrationPropertiesLegacyPolicy.disallowedLegacyOperations
                        = disallowedLegacyOperations;
                } else if ("disallowedConditions".equals(fieldName)) {
                    List<LegacyDisallowedCondition> disallowedConditions
                        = reader.readArray(reader1 -> LegacyDisallowedCondition.fromJson(reader1));
                    deserializedResourceTypeRegistrationPropertiesLegacyPolicy.disallowedConditions
                        = disallowedConditions;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedResourceTypeRegistrationPropertiesLegacyPolicy;
        });
    }
}
