// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The ResourceTypeRegistrationPropertiesAutoGenerated model.
 */
@Fluent
public class ResourceTypeRegistrationPropertiesAutoGenerated
    implements JsonSerializable<ResourceTypeRegistrationPropertiesAutoGenerated> {
    /*
     * The routingType property.
     */
    private RoutingType routingType;

    /*
     * The regionality property.
     */
    private Regionality regionality;

    /*
     * The endpoints property.
     */
    private List<ResourceTypeEndpoint> endpoints;

    /*
     * The extensionOptions property.
     */
    private ResourceTypeRegistrationPropertiesExtensionOptions extensionOptions;

    /*
     * The marketplaceType property.
     */
    private MarketplaceType marketplaceType;

    /*
     * The swaggerSpecifications property.
     */
    private List<SwaggerSpecification> swaggerSpecifications;

    /*
     * The allowedUnauthorizedActions property.
     */
    private List<String> allowedUnauthorizedActions;

    /*
     * The authorizationActionMappings property.
     */
    private List<AuthorizationActionMapping> authorizationActionMappings;

    /*
     * The linkedAccessChecks property.
     */
    private List<LinkedAccessCheck> linkedAccessChecks;

    /*
     * The defaultApiVersion property.
     */
    private String defaultApiVersion;

    /*
     * The loggingRules property.
     */
    private List<LoggingRule> loggingRules;

    /*
     * The throttlingRules property.
     */
    private List<ThrottlingRule> throttlingRules;

    /*
     * The requiredFeatures property.
     */
    private List<String> requiredFeatures;

    /*
     * The featuresRule property.
     */
    private ResourceTypeRegistrationPropertiesFeaturesRule featuresRule;

    /*
     * The enableAsyncOperation property.
     */
    private Boolean enableAsyncOperation;

    /*
     * The provisioningState property.
     */
    private ProvisioningState provisioningState;

    /*
     * The enableThirdPartyS2S property.
     */
    private Boolean enableThirdPartyS2S;

    /*
     * The subscriptionLifecycleNotificationSpecifications property.
     */
    private ResourceTypeRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications subscriptionLifecycleNotificationSpecifications;

    /*
     * The isPureProxy property.
     */
    private Boolean isPureProxy;

    /*
     * The identityManagement property.
     */
    private ResourceTypeRegistrationPropertiesIdentityManagement identityManagement;

    /*
     * The checkNameAvailabilitySpecifications property.
     */
    private ResourceTypeRegistrationPropertiesCheckNameAvailabilitySpecifications checkNameAvailabilitySpecifications;

    /*
     * The disallowedActionVerbs property.
     */
    private List<String> disallowedActionVerbs;

    /*
     * The serviceTreeInfos property.
     */
    private List<ServiceTreeInfo> serviceTreeInfos;

    /*
     * The requestHeaderOptions property.
     */
    private ResourceTypeRegistrationPropertiesRequestHeaderOptions requestHeaderOptions;

    /*
     * The subscriptionStateRules property.
     */
    private List<SubscriptionStateRule> subscriptionStateRules;

    /*
     * The templateDeploymentOptions property.
     */
    private ResourceTypeRegistrationPropertiesTemplateDeploymentOptions templateDeploymentOptions;

    /*
     * The extendedLocations property.
     */
    private List<ExtendedLocationOptions> extendedLocations;

    /*
     * The resourceMovePolicy property.
     */
    private ResourceTypeRegistrationPropertiesResourceMovePolicy resourceMovePolicy;

    /*
     * The resourceDeletionPolicy property.
     */
    private ResourceDeletionPolicy resourceDeletionPolicy;

    /**
     * Creates an instance of ResourceTypeRegistrationPropertiesAutoGenerated class.
     */
    public ResourceTypeRegistrationPropertiesAutoGenerated() {
    }

    /**
     * Get the routingType property: The routingType property.
     * 
     * @return the routingType value.
     */
    public RoutingType routingType() {
        return this.routingType;
    }

    /**
     * Set the routingType property: The routingType property.
     * 
     * @param routingType the routingType value to set.
     * @return the ResourceTypeRegistrationPropertiesAutoGenerated object itself.
     */
    public ResourceTypeRegistrationPropertiesAutoGenerated withRoutingType(RoutingType routingType) {
        this.routingType = routingType;
        return this;
    }

    /**
     * Get the regionality property: The regionality property.
     * 
     * @return the regionality value.
     */
    public Regionality regionality() {
        return this.regionality;
    }

    /**
     * Set the regionality property: The regionality property.
     * 
     * @param regionality the regionality value to set.
     * @return the ResourceTypeRegistrationPropertiesAutoGenerated object itself.
     */
    public ResourceTypeRegistrationPropertiesAutoGenerated withRegionality(Regionality regionality) {
        this.regionality = regionality;
        return this;
    }

    /**
     * Get the endpoints property: The endpoints property.
     * 
     * @return the endpoints value.
     */
    public List<ResourceTypeEndpoint> endpoints() {
        return this.endpoints;
    }

    /**
     * Set the endpoints property: The endpoints property.
     * 
     * @param endpoints the endpoints value to set.
     * @return the ResourceTypeRegistrationPropertiesAutoGenerated object itself.
     */
    public ResourceTypeRegistrationPropertiesAutoGenerated withEndpoints(List<ResourceTypeEndpoint> endpoints) {
        this.endpoints = endpoints;
        return this;
    }

    /**
     * Get the extensionOptions property: The extensionOptions property.
     * 
     * @return the extensionOptions value.
     */
    public ResourceTypeRegistrationPropertiesExtensionOptions extensionOptions() {
        return this.extensionOptions;
    }

    /**
     * Set the extensionOptions property: The extensionOptions property.
     * 
     * @param extensionOptions the extensionOptions value to set.
     * @return the ResourceTypeRegistrationPropertiesAutoGenerated object itself.
     */
    public ResourceTypeRegistrationPropertiesAutoGenerated
        withExtensionOptions(ResourceTypeRegistrationPropertiesExtensionOptions extensionOptions) {
        this.extensionOptions = extensionOptions;
        return this;
    }

    /**
     * Get the marketplaceType property: The marketplaceType property.
     * 
     * @return the marketplaceType value.
     */
    public MarketplaceType marketplaceType() {
        return this.marketplaceType;
    }

    /**
     * Set the marketplaceType property: The marketplaceType property.
     * 
     * @param marketplaceType the marketplaceType value to set.
     * @return the ResourceTypeRegistrationPropertiesAutoGenerated object itself.
     */
    public ResourceTypeRegistrationPropertiesAutoGenerated withMarketplaceType(MarketplaceType marketplaceType) {
        this.marketplaceType = marketplaceType;
        return this;
    }

    /**
     * Get the swaggerSpecifications property: The swaggerSpecifications property.
     * 
     * @return the swaggerSpecifications value.
     */
    public List<SwaggerSpecification> swaggerSpecifications() {
        return this.swaggerSpecifications;
    }

    /**
     * Set the swaggerSpecifications property: The swaggerSpecifications property.
     * 
     * @param swaggerSpecifications the swaggerSpecifications value to set.
     * @return the ResourceTypeRegistrationPropertiesAutoGenerated object itself.
     */
    public ResourceTypeRegistrationPropertiesAutoGenerated
        withSwaggerSpecifications(List<SwaggerSpecification> swaggerSpecifications) {
        this.swaggerSpecifications = swaggerSpecifications;
        return this;
    }

    /**
     * Get the allowedUnauthorizedActions property: The allowedUnauthorizedActions property.
     * 
     * @return the allowedUnauthorizedActions value.
     */
    public List<String> allowedUnauthorizedActions() {
        return this.allowedUnauthorizedActions;
    }

    /**
     * Set the allowedUnauthorizedActions property: The allowedUnauthorizedActions property.
     * 
     * @param allowedUnauthorizedActions the allowedUnauthorizedActions value to set.
     * @return the ResourceTypeRegistrationPropertiesAutoGenerated object itself.
     */
    public ResourceTypeRegistrationPropertiesAutoGenerated
        withAllowedUnauthorizedActions(List<String> allowedUnauthorizedActions) {
        this.allowedUnauthorizedActions = allowedUnauthorizedActions;
        return this;
    }

    /**
     * Get the authorizationActionMappings property: The authorizationActionMappings property.
     * 
     * @return the authorizationActionMappings value.
     */
    public List<AuthorizationActionMapping> authorizationActionMappings() {
        return this.authorizationActionMappings;
    }

    /**
     * Set the authorizationActionMappings property: The authorizationActionMappings property.
     * 
     * @param authorizationActionMappings the authorizationActionMappings value to set.
     * @return the ResourceTypeRegistrationPropertiesAutoGenerated object itself.
     */
    public ResourceTypeRegistrationPropertiesAutoGenerated
        withAuthorizationActionMappings(List<AuthorizationActionMapping> authorizationActionMappings) {
        this.authorizationActionMappings = authorizationActionMappings;
        return this;
    }

    /**
     * Get the linkedAccessChecks property: The linkedAccessChecks property.
     * 
     * @return the linkedAccessChecks value.
     */
    public List<LinkedAccessCheck> linkedAccessChecks() {
        return this.linkedAccessChecks;
    }

    /**
     * Set the linkedAccessChecks property: The linkedAccessChecks property.
     * 
     * @param linkedAccessChecks the linkedAccessChecks value to set.
     * @return the ResourceTypeRegistrationPropertiesAutoGenerated object itself.
     */
    public ResourceTypeRegistrationPropertiesAutoGenerated
        withLinkedAccessChecks(List<LinkedAccessCheck> linkedAccessChecks) {
        this.linkedAccessChecks = linkedAccessChecks;
        return this;
    }

    /**
     * Get the defaultApiVersion property: The defaultApiVersion property.
     * 
     * @return the defaultApiVersion value.
     */
    public String defaultApiVersion() {
        return this.defaultApiVersion;
    }

    /**
     * Set the defaultApiVersion property: The defaultApiVersion property.
     * 
     * @param defaultApiVersion the defaultApiVersion value to set.
     * @return the ResourceTypeRegistrationPropertiesAutoGenerated object itself.
     */
    public ResourceTypeRegistrationPropertiesAutoGenerated withDefaultApiVersion(String defaultApiVersion) {
        this.defaultApiVersion = defaultApiVersion;
        return this;
    }

    /**
     * Get the loggingRules property: The loggingRules property.
     * 
     * @return the loggingRules value.
     */
    public List<LoggingRule> loggingRules() {
        return this.loggingRules;
    }

    /**
     * Set the loggingRules property: The loggingRules property.
     * 
     * @param loggingRules the loggingRules value to set.
     * @return the ResourceTypeRegistrationPropertiesAutoGenerated object itself.
     */
    public ResourceTypeRegistrationPropertiesAutoGenerated withLoggingRules(List<LoggingRule> loggingRules) {
        this.loggingRules = loggingRules;
        return this;
    }

    /**
     * Get the throttlingRules property: The throttlingRules property.
     * 
     * @return the throttlingRules value.
     */
    public List<ThrottlingRule> throttlingRules() {
        return this.throttlingRules;
    }

    /**
     * Set the throttlingRules property: The throttlingRules property.
     * 
     * @param throttlingRules the throttlingRules value to set.
     * @return the ResourceTypeRegistrationPropertiesAutoGenerated object itself.
     */
    public ResourceTypeRegistrationPropertiesAutoGenerated withThrottlingRules(List<ThrottlingRule> throttlingRules) {
        this.throttlingRules = throttlingRules;
        return this;
    }

    /**
     * Get the requiredFeatures property: The requiredFeatures property.
     * 
     * @return the requiredFeatures value.
     */
    public List<String> requiredFeatures() {
        return this.requiredFeatures;
    }

    /**
     * Set the requiredFeatures property: The requiredFeatures property.
     * 
     * @param requiredFeatures the requiredFeatures value to set.
     * @return the ResourceTypeRegistrationPropertiesAutoGenerated object itself.
     */
    public ResourceTypeRegistrationPropertiesAutoGenerated withRequiredFeatures(List<String> requiredFeatures) {
        this.requiredFeatures = requiredFeatures;
        return this;
    }

    /**
     * Get the featuresRule property: The featuresRule property.
     * 
     * @return the featuresRule value.
     */
    public ResourceTypeRegistrationPropertiesFeaturesRule featuresRule() {
        return this.featuresRule;
    }

    /**
     * Set the featuresRule property: The featuresRule property.
     * 
     * @param featuresRule the featuresRule value to set.
     * @return the ResourceTypeRegistrationPropertiesAutoGenerated object itself.
     */
    public ResourceTypeRegistrationPropertiesAutoGenerated
        withFeaturesRule(ResourceTypeRegistrationPropertiesFeaturesRule featuresRule) {
        this.featuresRule = featuresRule;
        return this;
    }

    /**
     * Get the enableAsyncOperation property: The enableAsyncOperation property.
     * 
     * @return the enableAsyncOperation value.
     */
    public Boolean enableAsyncOperation() {
        return this.enableAsyncOperation;
    }

    /**
     * Set the enableAsyncOperation property: The enableAsyncOperation property.
     * 
     * @param enableAsyncOperation the enableAsyncOperation value to set.
     * @return the ResourceTypeRegistrationPropertiesAutoGenerated object itself.
     */
    public ResourceTypeRegistrationPropertiesAutoGenerated withEnableAsyncOperation(Boolean enableAsyncOperation) {
        this.enableAsyncOperation = enableAsyncOperation;
        return this;
    }

    /**
     * Get the provisioningState property: The provisioningState property.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Set the provisioningState property: The provisioningState property.
     * 
     * @param provisioningState the provisioningState value to set.
     * @return the ResourceTypeRegistrationPropertiesAutoGenerated object itself.
     */
    public ResourceTypeRegistrationPropertiesAutoGenerated withProvisioningState(ProvisioningState provisioningState) {
        this.provisioningState = provisioningState;
        return this;
    }

    /**
     * Get the enableThirdPartyS2S property: The enableThirdPartyS2S property.
     * 
     * @return the enableThirdPartyS2S value.
     */
    public Boolean enableThirdPartyS2S() {
        return this.enableThirdPartyS2S;
    }

    /**
     * Set the enableThirdPartyS2S property: The enableThirdPartyS2S property.
     * 
     * @param enableThirdPartyS2S the enableThirdPartyS2S value to set.
     * @return the ResourceTypeRegistrationPropertiesAutoGenerated object itself.
     */
    public ResourceTypeRegistrationPropertiesAutoGenerated withEnableThirdPartyS2S(Boolean enableThirdPartyS2S) {
        this.enableThirdPartyS2S = enableThirdPartyS2S;
        return this;
    }

    /**
     * Get the subscriptionLifecycleNotificationSpecifications property: The
     * subscriptionLifecycleNotificationSpecifications property.
     * 
     * @return the subscriptionLifecycleNotificationSpecifications value.
     */
    public ResourceTypeRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications
        subscriptionLifecycleNotificationSpecifications() {
        return this.subscriptionLifecycleNotificationSpecifications;
    }

    /**
     * Set the subscriptionLifecycleNotificationSpecifications property: The
     * subscriptionLifecycleNotificationSpecifications property.
     * 
     * @param subscriptionLifecycleNotificationSpecifications the subscriptionLifecycleNotificationSpecifications value
     * to set.
     * @return the ResourceTypeRegistrationPropertiesAutoGenerated object itself.
     */
    public ResourceTypeRegistrationPropertiesAutoGenerated withSubscriptionLifecycleNotificationSpecifications(
        ResourceTypeRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications subscriptionLifecycleNotificationSpecifications) {
        this.subscriptionLifecycleNotificationSpecifications = subscriptionLifecycleNotificationSpecifications;
        return this;
    }

    /**
     * Get the isPureProxy property: The isPureProxy property.
     * 
     * @return the isPureProxy value.
     */
    public Boolean isPureProxy() {
        return this.isPureProxy;
    }

    /**
     * Set the isPureProxy property: The isPureProxy property.
     * 
     * @param isPureProxy the isPureProxy value to set.
     * @return the ResourceTypeRegistrationPropertiesAutoGenerated object itself.
     */
    public ResourceTypeRegistrationPropertiesAutoGenerated withIsPureProxy(Boolean isPureProxy) {
        this.isPureProxy = isPureProxy;
        return this;
    }

    /**
     * Get the identityManagement property: The identityManagement property.
     * 
     * @return the identityManagement value.
     */
    public ResourceTypeRegistrationPropertiesIdentityManagement identityManagement() {
        return this.identityManagement;
    }

    /**
     * Set the identityManagement property: The identityManagement property.
     * 
     * @param identityManagement the identityManagement value to set.
     * @return the ResourceTypeRegistrationPropertiesAutoGenerated object itself.
     */
    public ResourceTypeRegistrationPropertiesAutoGenerated
        withIdentityManagement(ResourceTypeRegistrationPropertiesIdentityManagement identityManagement) {
        this.identityManagement = identityManagement;
        return this;
    }

    /**
     * Get the checkNameAvailabilitySpecifications property: The checkNameAvailabilitySpecifications property.
     * 
     * @return the checkNameAvailabilitySpecifications value.
     */
    public ResourceTypeRegistrationPropertiesCheckNameAvailabilitySpecifications checkNameAvailabilitySpecifications() {
        return this.checkNameAvailabilitySpecifications;
    }

    /**
     * Set the checkNameAvailabilitySpecifications property: The checkNameAvailabilitySpecifications property.
     * 
     * @param checkNameAvailabilitySpecifications the checkNameAvailabilitySpecifications value to set.
     * @return the ResourceTypeRegistrationPropertiesAutoGenerated object itself.
     */
    public ResourceTypeRegistrationPropertiesAutoGenerated withCheckNameAvailabilitySpecifications(
        ResourceTypeRegistrationPropertiesCheckNameAvailabilitySpecifications checkNameAvailabilitySpecifications) {
        this.checkNameAvailabilitySpecifications = checkNameAvailabilitySpecifications;
        return this;
    }

    /**
     * Get the disallowedActionVerbs property: The disallowedActionVerbs property.
     * 
     * @return the disallowedActionVerbs value.
     */
    public List<String> disallowedActionVerbs() {
        return this.disallowedActionVerbs;
    }

    /**
     * Set the disallowedActionVerbs property: The disallowedActionVerbs property.
     * 
     * @param disallowedActionVerbs the disallowedActionVerbs value to set.
     * @return the ResourceTypeRegistrationPropertiesAutoGenerated object itself.
     */
    public ResourceTypeRegistrationPropertiesAutoGenerated
        withDisallowedActionVerbs(List<String> disallowedActionVerbs) {
        this.disallowedActionVerbs = disallowedActionVerbs;
        return this;
    }

    /**
     * Get the serviceTreeInfos property: The serviceTreeInfos property.
     * 
     * @return the serviceTreeInfos value.
     */
    public List<ServiceTreeInfo> serviceTreeInfos() {
        return this.serviceTreeInfos;
    }

    /**
     * Set the serviceTreeInfos property: The serviceTreeInfos property.
     * 
     * @param serviceTreeInfos the serviceTreeInfos value to set.
     * @return the ResourceTypeRegistrationPropertiesAutoGenerated object itself.
     */
    public ResourceTypeRegistrationPropertiesAutoGenerated
        withServiceTreeInfos(List<ServiceTreeInfo> serviceTreeInfos) {
        this.serviceTreeInfos = serviceTreeInfos;
        return this;
    }

    /**
     * Get the requestHeaderOptions property: The requestHeaderOptions property.
     * 
     * @return the requestHeaderOptions value.
     */
    public ResourceTypeRegistrationPropertiesRequestHeaderOptions requestHeaderOptions() {
        return this.requestHeaderOptions;
    }

    /**
     * Set the requestHeaderOptions property: The requestHeaderOptions property.
     * 
     * @param requestHeaderOptions the requestHeaderOptions value to set.
     * @return the ResourceTypeRegistrationPropertiesAutoGenerated object itself.
     */
    public ResourceTypeRegistrationPropertiesAutoGenerated
        withRequestHeaderOptions(ResourceTypeRegistrationPropertiesRequestHeaderOptions requestHeaderOptions) {
        this.requestHeaderOptions = requestHeaderOptions;
        return this;
    }

    /**
     * Get the subscriptionStateRules property: The subscriptionStateRules property.
     * 
     * @return the subscriptionStateRules value.
     */
    public List<SubscriptionStateRule> subscriptionStateRules() {
        return this.subscriptionStateRules;
    }

    /**
     * Set the subscriptionStateRules property: The subscriptionStateRules property.
     * 
     * @param subscriptionStateRules the subscriptionStateRules value to set.
     * @return the ResourceTypeRegistrationPropertiesAutoGenerated object itself.
     */
    public ResourceTypeRegistrationPropertiesAutoGenerated
        withSubscriptionStateRules(List<SubscriptionStateRule> subscriptionStateRules) {
        this.subscriptionStateRules = subscriptionStateRules;
        return this;
    }

    /**
     * Get the templateDeploymentOptions property: The templateDeploymentOptions property.
     * 
     * @return the templateDeploymentOptions value.
     */
    public ResourceTypeRegistrationPropertiesTemplateDeploymentOptions templateDeploymentOptions() {
        return this.templateDeploymentOptions;
    }

    /**
     * Set the templateDeploymentOptions property: The templateDeploymentOptions property.
     * 
     * @param templateDeploymentOptions the templateDeploymentOptions value to set.
     * @return the ResourceTypeRegistrationPropertiesAutoGenerated object itself.
     */
    public ResourceTypeRegistrationPropertiesAutoGenerated withTemplateDeploymentOptions(
        ResourceTypeRegistrationPropertiesTemplateDeploymentOptions templateDeploymentOptions) {
        this.templateDeploymentOptions = templateDeploymentOptions;
        return this;
    }

    /**
     * Get the extendedLocations property: The extendedLocations property.
     * 
     * @return the extendedLocations value.
     */
    public List<ExtendedLocationOptions> extendedLocations() {
        return this.extendedLocations;
    }

    /**
     * Set the extendedLocations property: The extendedLocations property.
     * 
     * @param extendedLocations the extendedLocations value to set.
     * @return the ResourceTypeRegistrationPropertiesAutoGenerated object itself.
     */
    public ResourceTypeRegistrationPropertiesAutoGenerated
        withExtendedLocations(List<ExtendedLocationOptions> extendedLocations) {
        this.extendedLocations = extendedLocations;
        return this;
    }

    /**
     * Get the resourceMovePolicy property: The resourceMovePolicy property.
     * 
     * @return the resourceMovePolicy value.
     */
    public ResourceTypeRegistrationPropertiesResourceMovePolicy resourceMovePolicy() {
        return this.resourceMovePolicy;
    }

    /**
     * Set the resourceMovePolicy property: The resourceMovePolicy property.
     * 
     * @param resourceMovePolicy the resourceMovePolicy value to set.
     * @return the ResourceTypeRegistrationPropertiesAutoGenerated object itself.
     */
    public ResourceTypeRegistrationPropertiesAutoGenerated
        withResourceMovePolicy(ResourceTypeRegistrationPropertiesResourceMovePolicy resourceMovePolicy) {
        this.resourceMovePolicy = resourceMovePolicy;
        return this;
    }

    /**
     * Get the resourceDeletionPolicy property: The resourceDeletionPolicy property.
     * 
     * @return the resourceDeletionPolicy value.
     */
    public ResourceDeletionPolicy resourceDeletionPolicy() {
        return this.resourceDeletionPolicy;
    }

    /**
     * Set the resourceDeletionPolicy property: The resourceDeletionPolicy property.
     * 
     * @param resourceDeletionPolicy the resourceDeletionPolicy value to set.
     * @return the ResourceTypeRegistrationPropertiesAutoGenerated object itself.
     */
    public ResourceTypeRegistrationPropertiesAutoGenerated
        withResourceDeletionPolicy(ResourceDeletionPolicy resourceDeletionPolicy) {
        this.resourceDeletionPolicy = resourceDeletionPolicy;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (endpoints() != null) {
            endpoints().forEach(e -> e.validate());
        }
        if (extensionOptions() != null) {
            extensionOptions().validate();
        }
        if (swaggerSpecifications() != null) {
            swaggerSpecifications().forEach(e -> e.validate());
        }
        if (authorizationActionMappings() != null) {
            authorizationActionMappings().forEach(e -> e.validate());
        }
        if (linkedAccessChecks() != null) {
            linkedAccessChecks().forEach(e -> e.validate());
        }
        if (loggingRules() != null) {
            loggingRules().forEach(e -> e.validate());
        }
        if (throttlingRules() != null) {
            throttlingRules().forEach(e -> e.validate());
        }
        if (featuresRule() != null) {
            featuresRule().validate();
        }
        if (subscriptionLifecycleNotificationSpecifications() != null) {
            subscriptionLifecycleNotificationSpecifications().validate();
        }
        if (identityManagement() != null) {
            identityManagement().validate();
        }
        if (checkNameAvailabilitySpecifications() != null) {
            checkNameAvailabilitySpecifications().validate();
        }
        if (serviceTreeInfos() != null) {
            serviceTreeInfos().forEach(e -> e.validate());
        }
        if (requestHeaderOptions() != null) {
            requestHeaderOptions().validate();
        }
        if (subscriptionStateRules() != null) {
            subscriptionStateRules().forEach(e -> e.validate());
        }
        if (templateDeploymentOptions() != null) {
            templateDeploymentOptions().validate();
        }
        if (extendedLocations() != null) {
            extendedLocations().forEach(e -> e.validate());
        }
        if (resourceMovePolicy() != null) {
            resourceMovePolicy().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("routingType", this.routingType == null ? null : this.routingType.toString());
        jsonWriter.writeStringField("regionality", this.regionality == null ? null : this.regionality.toString());
        jsonWriter.writeArrayField("endpoints", this.endpoints, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeJsonField("extensionOptions", this.extensionOptions);
        jsonWriter.writeStringField("marketplaceType",
            this.marketplaceType == null ? null : this.marketplaceType.toString());
        jsonWriter.writeArrayField("swaggerSpecifications", this.swaggerSpecifications,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeArrayField("allowedUnauthorizedActions", this.allowedUnauthorizedActions,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeArrayField("authorizationActionMappings", this.authorizationActionMappings,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeArrayField("linkedAccessChecks", this.linkedAccessChecks,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("defaultApiVersion", this.defaultApiVersion);
        jsonWriter.writeArrayField("loggingRules", this.loggingRules, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeArrayField("throttlingRules", this.throttlingRules,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeArrayField("requiredFeatures", this.requiredFeatures,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeJsonField("featuresRule", this.featuresRule);
        jsonWriter.writeBooleanField("enableAsyncOperation", this.enableAsyncOperation);
        jsonWriter.writeStringField("provisioningState",
            this.provisioningState == null ? null : this.provisioningState.toString());
        jsonWriter.writeBooleanField("enableThirdPartyS2S", this.enableThirdPartyS2S);
        jsonWriter.writeJsonField("subscriptionLifecycleNotificationSpecifications",
            this.subscriptionLifecycleNotificationSpecifications);
        jsonWriter.writeBooleanField("isPureProxy", this.isPureProxy);
        jsonWriter.writeJsonField("identityManagement", this.identityManagement);
        jsonWriter.writeJsonField("checkNameAvailabilitySpecifications", this.checkNameAvailabilitySpecifications);
        jsonWriter.writeArrayField("disallowedActionVerbs", this.disallowedActionVerbs,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeArrayField("serviceTreeInfos", this.serviceTreeInfos,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeJsonField("requestHeaderOptions", this.requestHeaderOptions);
        jsonWriter.writeArrayField("subscriptionStateRules", this.subscriptionStateRules,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeJsonField("templateDeploymentOptions", this.templateDeploymentOptions);
        jsonWriter.writeArrayField("extendedLocations", this.extendedLocations,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeJsonField("resourceMovePolicy", this.resourceMovePolicy);
        jsonWriter.writeStringField("resourceDeletionPolicy",
            this.resourceDeletionPolicy == null ? null : this.resourceDeletionPolicy.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ResourceTypeRegistrationPropertiesAutoGenerated from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ResourceTypeRegistrationPropertiesAutoGenerated if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ResourceTypeRegistrationPropertiesAutoGenerated.
     */
    public static ResourceTypeRegistrationPropertiesAutoGenerated fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ResourceTypeRegistrationPropertiesAutoGenerated deserializedResourceTypeRegistrationPropertiesAutoGenerated
                = new ResourceTypeRegistrationPropertiesAutoGenerated();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("routingType".equals(fieldName)) {
                    deserializedResourceTypeRegistrationPropertiesAutoGenerated.routingType
                        = RoutingType.fromString(reader.getString());
                } else if ("regionality".equals(fieldName)) {
                    deserializedResourceTypeRegistrationPropertiesAutoGenerated.regionality
                        = Regionality.fromString(reader.getString());
                } else if ("endpoints".equals(fieldName)) {
                    List<ResourceTypeEndpoint> endpoints
                        = reader.readArray(reader1 -> ResourceTypeEndpoint.fromJson(reader1));
                    deserializedResourceTypeRegistrationPropertiesAutoGenerated.endpoints = endpoints;
                } else if ("extensionOptions".equals(fieldName)) {
                    deserializedResourceTypeRegistrationPropertiesAutoGenerated.extensionOptions
                        = ResourceTypeRegistrationPropertiesExtensionOptions.fromJson(reader);
                } else if ("marketplaceType".equals(fieldName)) {
                    deserializedResourceTypeRegistrationPropertiesAutoGenerated.marketplaceType
                        = MarketplaceType.fromString(reader.getString());
                } else if ("swaggerSpecifications".equals(fieldName)) {
                    List<SwaggerSpecification> swaggerSpecifications
                        = reader.readArray(reader1 -> SwaggerSpecification.fromJson(reader1));
                    deserializedResourceTypeRegistrationPropertiesAutoGenerated.swaggerSpecifications
                        = swaggerSpecifications;
                } else if ("allowedUnauthorizedActions".equals(fieldName)) {
                    List<String> allowedUnauthorizedActions = reader.readArray(reader1 -> reader1.getString());
                    deserializedResourceTypeRegistrationPropertiesAutoGenerated.allowedUnauthorizedActions
                        = allowedUnauthorizedActions;
                } else if ("authorizationActionMappings".equals(fieldName)) {
                    List<AuthorizationActionMapping> authorizationActionMappings
                        = reader.readArray(reader1 -> AuthorizationActionMapping.fromJson(reader1));
                    deserializedResourceTypeRegistrationPropertiesAutoGenerated.authorizationActionMappings
                        = authorizationActionMappings;
                } else if ("linkedAccessChecks".equals(fieldName)) {
                    List<LinkedAccessCheck> linkedAccessChecks
                        = reader.readArray(reader1 -> LinkedAccessCheck.fromJson(reader1));
                    deserializedResourceTypeRegistrationPropertiesAutoGenerated.linkedAccessChecks = linkedAccessChecks;
                } else if ("defaultApiVersion".equals(fieldName)) {
                    deserializedResourceTypeRegistrationPropertiesAutoGenerated.defaultApiVersion = reader.getString();
                } else if ("loggingRules".equals(fieldName)) {
                    List<LoggingRule> loggingRules = reader.readArray(reader1 -> LoggingRule.fromJson(reader1));
                    deserializedResourceTypeRegistrationPropertiesAutoGenerated.loggingRules = loggingRules;
                } else if ("throttlingRules".equals(fieldName)) {
                    List<ThrottlingRule> throttlingRules
                        = reader.readArray(reader1 -> ThrottlingRule.fromJson(reader1));
                    deserializedResourceTypeRegistrationPropertiesAutoGenerated.throttlingRules = throttlingRules;
                } else if ("requiredFeatures".equals(fieldName)) {
                    List<String> requiredFeatures = reader.readArray(reader1 -> reader1.getString());
                    deserializedResourceTypeRegistrationPropertiesAutoGenerated.requiredFeatures = requiredFeatures;
                } else if ("featuresRule".equals(fieldName)) {
                    deserializedResourceTypeRegistrationPropertiesAutoGenerated.featuresRule
                        = ResourceTypeRegistrationPropertiesFeaturesRule.fromJson(reader);
                } else if ("enableAsyncOperation".equals(fieldName)) {
                    deserializedResourceTypeRegistrationPropertiesAutoGenerated.enableAsyncOperation
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("provisioningState".equals(fieldName)) {
                    deserializedResourceTypeRegistrationPropertiesAutoGenerated.provisioningState
                        = ProvisioningState.fromString(reader.getString());
                } else if ("enableThirdPartyS2S".equals(fieldName)) {
                    deserializedResourceTypeRegistrationPropertiesAutoGenerated.enableThirdPartyS2S
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("subscriptionLifecycleNotificationSpecifications".equals(fieldName)) {
                    deserializedResourceTypeRegistrationPropertiesAutoGenerated.subscriptionLifecycleNotificationSpecifications
                        = ResourceTypeRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications
                            .fromJson(reader);
                } else if ("isPureProxy".equals(fieldName)) {
                    deserializedResourceTypeRegistrationPropertiesAutoGenerated.isPureProxy
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("identityManagement".equals(fieldName)) {
                    deserializedResourceTypeRegistrationPropertiesAutoGenerated.identityManagement
                        = ResourceTypeRegistrationPropertiesIdentityManagement.fromJson(reader);
                } else if ("checkNameAvailabilitySpecifications".equals(fieldName)) {
                    deserializedResourceTypeRegistrationPropertiesAutoGenerated.checkNameAvailabilitySpecifications
                        = ResourceTypeRegistrationPropertiesCheckNameAvailabilitySpecifications.fromJson(reader);
                } else if ("disallowedActionVerbs".equals(fieldName)) {
                    List<String> disallowedActionVerbs = reader.readArray(reader1 -> reader1.getString());
                    deserializedResourceTypeRegistrationPropertiesAutoGenerated.disallowedActionVerbs
                        = disallowedActionVerbs;
                } else if ("serviceTreeInfos".equals(fieldName)) {
                    List<ServiceTreeInfo> serviceTreeInfos
                        = reader.readArray(reader1 -> ServiceTreeInfo.fromJson(reader1));
                    deserializedResourceTypeRegistrationPropertiesAutoGenerated.serviceTreeInfos = serviceTreeInfos;
                } else if ("requestHeaderOptions".equals(fieldName)) {
                    deserializedResourceTypeRegistrationPropertiesAutoGenerated.requestHeaderOptions
                        = ResourceTypeRegistrationPropertiesRequestHeaderOptions.fromJson(reader);
                } else if ("subscriptionStateRules".equals(fieldName)) {
                    List<SubscriptionStateRule> subscriptionStateRules
                        = reader.readArray(reader1 -> SubscriptionStateRule.fromJson(reader1));
                    deserializedResourceTypeRegistrationPropertiesAutoGenerated.subscriptionStateRules
                        = subscriptionStateRules;
                } else if ("templateDeploymentOptions".equals(fieldName)) {
                    deserializedResourceTypeRegistrationPropertiesAutoGenerated.templateDeploymentOptions
                        = ResourceTypeRegistrationPropertiesTemplateDeploymentOptions.fromJson(reader);
                } else if ("extendedLocations".equals(fieldName)) {
                    List<ExtendedLocationOptions> extendedLocations
                        = reader.readArray(reader1 -> ExtendedLocationOptions.fromJson(reader1));
                    deserializedResourceTypeRegistrationPropertiesAutoGenerated.extendedLocations = extendedLocations;
                } else if ("resourceMovePolicy".equals(fieldName)) {
                    deserializedResourceTypeRegistrationPropertiesAutoGenerated.resourceMovePolicy
                        = ResourceTypeRegistrationPropertiesResourceMovePolicy.fromJson(reader);
                } else if ("resourceDeletionPolicy".equals(fieldName)) {
                    deserializedResourceTypeRegistrationPropertiesAutoGenerated.resourceDeletionPolicy
                        = ResourceDeletionPolicy.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedResourceTypeRegistrationPropertiesAutoGenerated;
        });
    }
}
