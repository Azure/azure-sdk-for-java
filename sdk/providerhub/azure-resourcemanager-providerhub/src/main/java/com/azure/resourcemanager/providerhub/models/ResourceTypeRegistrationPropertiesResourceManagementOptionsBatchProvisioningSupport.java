// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Batch provisioning support.
 */
@Fluent
public final class ResourceTypeRegistrationPropertiesResourceManagementOptionsBatchProvisioningSupport
    implements JsonSerializable<ResourceTypeRegistrationPropertiesResourceManagementOptionsBatchProvisioningSupport> {
    /*
     * Supported operations.
     */
    private SupportedOperations supportedOperations;

    /**
     * Creates an instance of ResourceTypeRegistrationPropertiesResourceManagementOptionsBatchProvisioningSupport class.
     */
    public ResourceTypeRegistrationPropertiesResourceManagementOptionsBatchProvisioningSupport() {
    }

    /**
     * Get the supportedOperations property: Supported operations.
     * 
     * @return the supportedOperations value.
     */
    public SupportedOperations supportedOperations() {
        return this.supportedOperations;
    }

    /**
     * Set the supportedOperations property: Supported operations.
     * 
     * @param supportedOperations the supportedOperations value to set.
     * @return the ResourceTypeRegistrationPropertiesResourceManagementOptionsBatchProvisioningSupport object itself.
     */
    public ResourceTypeRegistrationPropertiesResourceManagementOptionsBatchProvisioningSupport
        withSupportedOperations(SupportedOperations supportedOperations) {
        this.supportedOperations = supportedOperations;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("supportedOperations",
            this.supportedOperations == null ? null : this.supportedOperations.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ResourceTypeRegistrationPropertiesResourceManagementOptionsBatchProvisioningSupport from the
     * JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ResourceTypeRegistrationPropertiesResourceManagementOptionsBatchProvisioningSupport if the
     * JsonReader was pointing to an instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the
     * ResourceTypeRegistrationPropertiesResourceManagementOptionsBatchProvisioningSupport.
     */
    public static ResourceTypeRegistrationPropertiesResourceManagementOptionsBatchProvisioningSupport
        fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ResourceTypeRegistrationPropertiesResourceManagementOptionsBatchProvisioningSupport deserializedResourceTypeRegistrationPropertiesResourceManagementOptionsBatchProvisioningSupport
                = new ResourceTypeRegistrationPropertiesResourceManagementOptionsBatchProvisioningSupport();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("supportedOperations".equals(fieldName)) {
                    deserializedResourceTypeRegistrationPropertiesResourceManagementOptionsBatchProvisioningSupport.supportedOperations
                        = SupportedOperations.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedResourceTypeRegistrationPropertiesResourceManagementOptionsBatchProvisioningSupport;
        });
    }
}
