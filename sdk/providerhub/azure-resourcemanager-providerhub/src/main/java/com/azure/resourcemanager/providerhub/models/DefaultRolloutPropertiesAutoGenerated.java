// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The DefaultRolloutPropertiesAutoGenerated model.
 */
@Fluent
public class DefaultRolloutPropertiesAutoGenerated implements JsonSerializable<DefaultRolloutPropertiesAutoGenerated> {
    /*
     * The provisioningState property.
     */
    private ProvisioningState provisioningState;

    /*
     * The specification property.
     */
    private DefaultRolloutPropertiesSpecification specification;

    /*
     * The status property.
     */
    private DefaultRolloutPropertiesStatus status;

    /**
     * Creates an instance of DefaultRolloutPropertiesAutoGenerated class.
     */
    public DefaultRolloutPropertiesAutoGenerated() {
    }

    /**
     * Get the provisioningState property: The provisioningState property.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Set the provisioningState property: The provisioningState property.
     * 
     * @param provisioningState the provisioningState value to set.
     * @return the DefaultRolloutPropertiesAutoGenerated object itself.
     */
    public DefaultRolloutPropertiesAutoGenerated withProvisioningState(ProvisioningState provisioningState) {
        this.provisioningState = provisioningState;
        return this;
    }

    /**
     * Get the specification property: The specification property.
     * 
     * @return the specification value.
     */
    public DefaultRolloutPropertiesSpecification specification() {
        return this.specification;
    }

    /**
     * Set the specification property: The specification property.
     * 
     * @param specification the specification value to set.
     * @return the DefaultRolloutPropertiesAutoGenerated object itself.
     */
    public DefaultRolloutPropertiesAutoGenerated
        withSpecification(DefaultRolloutPropertiesSpecification specification) {
        this.specification = specification;
        return this;
    }

    /**
     * Get the status property: The status property.
     * 
     * @return the status value.
     */
    public DefaultRolloutPropertiesStatus status() {
        return this.status;
    }

    /**
     * Set the status property: The status property.
     * 
     * @param status the status value to set.
     * @return the DefaultRolloutPropertiesAutoGenerated object itself.
     */
    public DefaultRolloutPropertiesAutoGenerated withStatus(DefaultRolloutPropertiesStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (specification() != null) {
            specification().validate();
        }
        if (status() != null) {
            status().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("provisioningState",
            this.provisioningState == null ? null : this.provisioningState.toString());
        jsonWriter.writeJsonField("specification", this.specification);
        jsonWriter.writeJsonField("status", this.status);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DefaultRolloutPropertiesAutoGenerated from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DefaultRolloutPropertiesAutoGenerated if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the DefaultRolloutPropertiesAutoGenerated.
     */
    public static DefaultRolloutPropertiesAutoGenerated fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            DefaultRolloutPropertiesAutoGenerated deserializedDefaultRolloutPropertiesAutoGenerated
                = new DefaultRolloutPropertiesAutoGenerated();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("provisioningState".equals(fieldName)) {
                    deserializedDefaultRolloutPropertiesAutoGenerated.provisioningState
                        = ProvisioningState.fromString(reader.getString());
                } else if ("specification".equals(fieldName)) {
                    deserializedDefaultRolloutPropertiesAutoGenerated.specification
                        = DefaultRolloutPropertiesSpecification.fromJson(reader);
                } else if ("status".equals(fieldName)) {
                    deserializedDefaultRolloutPropertiesAutoGenerated.status
                        = DefaultRolloutPropertiesStatus.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedDefaultRolloutPropertiesAutoGenerated;
        });
    }
}
