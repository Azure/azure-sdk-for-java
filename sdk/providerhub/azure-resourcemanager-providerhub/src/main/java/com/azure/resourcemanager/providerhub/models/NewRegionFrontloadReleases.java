// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.models;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of NewRegionFrontloadReleases.
 */
public interface NewRegionFrontloadReleases {
    /**
     * Generates the new region frontload manifest.
     * 
     * @param providerNamespace The name of the resource provider hosted within ProviderHub.
     * @param properties The properties parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response body along with {@link Response}.
     */
    Response<ResourceProviderManifest> generateManifestWithResponse(String providerNamespace,
        FrontloadPayload properties, Context context);

    /**
     * Generates the new region frontload manifest.
     * 
     * @param providerNamespace The name of the resource provider hosted within ProviderHub.
     * @param properties The properties parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    ResourceProviderManifest generateManifest(String providerNamespace, FrontloadPayload properties);

    /**
     * Creates or updates a new region frontload release.
     * 
     * @param providerNamespace The name of the resource provider hosted within ProviderHub.
     * @param releaseName The name of the release.
     * @param properties The properties parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response body along with {@link Response}.
     */
    Response<DefaultRollout> createOrUpdateWithResponse(String providerNamespace, String releaseName,
        FrontloadPayload properties, Context context);

    /**
     * Creates or updates a new region frontload release.
     * 
     * @param providerNamespace The name of the resource provider hosted within ProviderHub.
     * @param releaseName The name of the release.
     * @param properties The properties parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    DefaultRollout createOrUpdate(String providerNamespace, String releaseName, FrontloadPayload properties);

    /**
     * Gets a new region frontload release.
     * 
     * @param providerNamespace The name of the resource provider hosted within ProviderHub.
     * @param releaseName The name of the release.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a new region frontload release along with {@link Response}.
     */
    Response<DefaultRollout> getWithResponse(String providerNamespace, String releaseName, Context context);

    /**
     * Gets a new region frontload release.
     * 
     * @param providerNamespace The name of the resource provider hosted within ProviderHub.
     * @param releaseName The name of the release.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a new region frontload release.
     */
    DefaultRollout get(String providerNamespace, String releaseName);

    /**
     * Stops a new region frontload release.
     * 
     * @param providerNamespace The name of the resource provider hosted within ProviderHub.
     * @param releaseName The name of the release.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> stopWithResponse(String providerNamespace, String releaseName, Context context);

    /**
     * Stops a new region frontload release.
     * 
     * @param providerNamespace The name of the resource provider hosted within ProviderHub.
     * @param releaseName The name of the release.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void stop(String providerNamespace, String releaseName);
}
