// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The CheckinManifestParams model.
 */
@Fluent
public final class CheckinManifestParams implements JsonSerializable<CheckinManifestParams> {
    /*
     * The environment supplied to the checkin manifest operation.
     */
    private String environment;

    /*
     * The baseline ARM manifest location supplied to the checkin manifest operation.
     */
    private String baselineArmManifestLocation;

    /**
     * Creates an instance of CheckinManifestParams class.
     */
    public CheckinManifestParams() {
    }

    /**
     * Get the environment property: The environment supplied to the checkin manifest operation.
     * 
     * @return the environment value.
     */
    public String environment() {
        return this.environment;
    }

    /**
     * Set the environment property: The environment supplied to the checkin manifest operation.
     * 
     * @param environment the environment value to set.
     * @return the CheckinManifestParams object itself.
     */
    public CheckinManifestParams withEnvironment(String environment) {
        this.environment = environment;
        return this;
    }

    /**
     * Get the baselineArmManifestLocation property: The baseline ARM manifest location supplied to the checkin manifest
     * operation.
     * 
     * @return the baselineArmManifestLocation value.
     */
    public String baselineArmManifestLocation() {
        return this.baselineArmManifestLocation;
    }

    /**
     * Set the baselineArmManifestLocation property: The baseline ARM manifest location supplied to the checkin manifest
     * operation.
     * 
     * @param baselineArmManifestLocation the baselineArmManifestLocation value to set.
     * @return the CheckinManifestParams object itself.
     */
    public CheckinManifestParams withBaselineArmManifestLocation(String baselineArmManifestLocation) {
        this.baselineArmManifestLocation = baselineArmManifestLocation;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (environment() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property environment in model CheckinManifestParams"));
        }
        if (baselineArmManifestLocation() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property baselineArmManifestLocation in model CheckinManifestParams"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(CheckinManifestParams.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("environment", this.environment);
        jsonWriter.writeStringField("baselineArmManifestLocation", this.baselineArmManifestLocation);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CheckinManifestParams from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CheckinManifestParams if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the CheckinManifestParams.
     */
    public static CheckinManifestParams fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CheckinManifestParams deserializedCheckinManifestParams = new CheckinManifestParams();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("environment".equals(fieldName)) {
                    deserializedCheckinManifestParams.environment = reader.getString();
                } else if ("baselineArmManifestLocation".equals(fieldName)) {
                    deserializedCheckinManifestParams.baselineArmManifestLocation = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCheckinManifestParams;
        });
    }
}
