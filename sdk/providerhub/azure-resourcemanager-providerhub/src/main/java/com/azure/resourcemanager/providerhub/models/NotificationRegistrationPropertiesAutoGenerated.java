// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The NotificationRegistrationPropertiesAutoGenerated model.
 */
@Fluent
public class NotificationRegistrationPropertiesAutoGenerated
    implements JsonSerializable<NotificationRegistrationPropertiesAutoGenerated> {
    /*
     * The notificationMode property.
     */
    private NotificationMode notificationMode;

    /*
     * The messageScope property.
     */
    private MessageScope messageScope;

    /*
     * The includedEvents property.
     */
    private List<String> includedEvents;

    /*
     * The notificationEndpoints property.
     */
    private List<NotificationEndpoint> notificationEndpoints;

    /*
     * The provisioningState property.
     */
    private ProvisioningState provisioningState;

    /**
     * Creates an instance of NotificationRegistrationPropertiesAutoGenerated class.
     */
    public NotificationRegistrationPropertiesAutoGenerated() {
    }

    /**
     * Get the notificationMode property: The notificationMode property.
     * 
     * @return the notificationMode value.
     */
    public NotificationMode notificationMode() {
        return this.notificationMode;
    }

    /**
     * Set the notificationMode property: The notificationMode property.
     * 
     * @param notificationMode the notificationMode value to set.
     * @return the NotificationRegistrationPropertiesAutoGenerated object itself.
     */
    public NotificationRegistrationPropertiesAutoGenerated withNotificationMode(NotificationMode notificationMode) {
        this.notificationMode = notificationMode;
        return this;
    }

    /**
     * Get the messageScope property: The messageScope property.
     * 
     * @return the messageScope value.
     */
    public MessageScope messageScope() {
        return this.messageScope;
    }

    /**
     * Set the messageScope property: The messageScope property.
     * 
     * @param messageScope the messageScope value to set.
     * @return the NotificationRegistrationPropertiesAutoGenerated object itself.
     */
    public NotificationRegistrationPropertiesAutoGenerated withMessageScope(MessageScope messageScope) {
        this.messageScope = messageScope;
        return this;
    }

    /**
     * Get the includedEvents property: The includedEvents property.
     * 
     * @return the includedEvents value.
     */
    public List<String> includedEvents() {
        return this.includedEvents;
    }

    /**
     * Set the includedEvents property: The includedEvents property.
     * 
     * @param includedEvents the includedEvents value to set.
     * @return the NotificationRegistrationPropertiesAutoGenerated object itself.
     */
    public NotificationRegistrationPropertiesAutoGenerated withIncludedEvents(List<String> includedEvents) {
        this.includedEvents = includedEvents;
        return this;
    }

    /**
     * Get the notificationEndpoints property: The notificationEndpoints property.
     * 
     * @return the notificationEndpoints value.
     */
    public List<NotificationEndpoint> notificationEndpoints() {
        return this.notificationEndpoints;
    }

    /**
     * Set the notificationEndpoints property: The notificationEndpoints property.
     * 
     * @param notificationEndpoints the notificationEndpoints value to set.
     * @return the NotificationRegistrationPropertiesAutoGenerated object itself.
     */
    public NotificationRegistrationPropertiesAutoGenerated
        withNotificationEndpoints(List<NotificationEndpoint> notificationEndpoints) {
        this.notificationEndpoints = notificationEndpoints;
        return this;
    }

    /**
     * Get the provisioningState property: The provisioningState property.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Set the provisioningState property: The provisioningState property.
     * 
     * @param provisioningState the provisioningState value to set.
     * @return the NotificationRegistrationPropertiesAutoGenerated object itself.
     */
    public NotificationRegistrationPropertiesAutoGenerated withProvisioningState(ProvisioningState provisioningState) {
        this.provisioningState = provisioningState;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (notificationEndpoints() != null) {
            notificationEndpoints().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("notificationMode",
            this.notificationMode == null ? null : this.notificationMode.toString());
        jsonWriter.writeStringField("messageScope", this.messageScope == null ? null : this.messageScope.toString());
        jsonWriter.writeArrayField("includedEvents", this.includedEvents,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeArrayField("notificationEndpoints", this.notificationEndpoints,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("provisioningState",
            this.provisioningState == null ? null : this.provisioningState.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of NotificationRegistrationPropertiesAutoGenerated from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of NotificationRegistrationPropertiesAutoGenerated if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the NotificationRegistrationPropertiesAutoGenerated.
     */
    public static NotificationRegistrationPropertiesAutoGenerated fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            NotificationRegistrationPropertiesAutoGenerated deserializedNotificationRegistrationPropertiesAutoGenerated
                = new NotificationRegistrationPropertiesAutoGenerated();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("notificationMode".equals(fieldName)) {
                    deserializedNotificationRegistrationPropertiesAutoGenerated.notificationMode
                        = NotificationMode.fromString(reader.getString());
                } else if ("messageScope".equals(fieldName)) {
                    deserializedNotificationRegistrationPropertiesAutoGenerated.messageScope
                        = MessageScope.fromString(reader.getString());
                } else if ("includedEvents".equals(fieldName)) {
                    List<String> includedEvents = reader.readArray(reader1 -> reader1.getString());
                    deserializedNotificationRegistrationPropertiesAutoGenerated.includedEvents = includedEvents;
                } else if ("notificationEndpoints".equals(fieldName)) {
                    List<NotificationEndpoint> notificationEndpoints
                        = reader.readArray(reader1 -> NotificationEndpoint.fromJson(reader1));
                    deserializedNotificationRegistrationPropertiesAutoGenerated.notificationEndpoints
                        = notificationEndpoints;
                } else if ("provisioningState".equals(fieldName)) {
                    deserializedNotificationRegistrationPropertiesAutoGenerated.provisioningState
                        = ProvisioningState.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedNotificationRegistrationPropertiesAutoGenerated;
        });
    }
}
