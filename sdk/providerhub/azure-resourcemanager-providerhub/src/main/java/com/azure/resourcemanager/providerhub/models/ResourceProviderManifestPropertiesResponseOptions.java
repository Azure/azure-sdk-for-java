// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Response options.
 */
@Fluent
public final class ResourceProviderManifestPropertiesResponseOptions
    implements JsonSerializable<ResourceProviderManifestPropertiesResponseOptions> {
    /*
     * The serviceClientOptionsType property.
     */
    private ServiceClientOptionsType serviceClientOptionsType;

    /**
     * Creates an instance of ResourceProviderManifestPropertiesResponseOptions class.
     */
    public ResourceProviderManifestPropertiesResponseOptions() {
    }

    /**
     * Get the serviceClientOptionsType property: The serviceClientOptionsType property.
     * 
     * @return the serviceClientOptionsType value.
     */
    public ServiceClientOptionsType serviceClientOptionsType() {
        return this.serviceClientOptionsType;
    }

    /**
     * Set the serviceClientOptionsType property: The serviceClientOptionsType property.
     * 
     * @param serviceClientOptionsType the serviceClientOptionsType value to set.
     * @return the ResourceProviderManifestPropertiesResponseOptions object itself.
     */
    public ResourceProviderManifestPropertiesResponseOptions
        withServiceClientOptionsType(ServiceClientOptionsType serviceClientOptionsType) {
        this.serviceClientOptionsType = serviceClientOptionsType;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("serviceClientOptionsType",
            this.serviceClientOptionsType == null ? null : this.serviceClientOptionsType.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ResourceProviderManifestPropertiesResponseOptions from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ResourceProviderManifestPropertiesResponseOptions if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ResourceProviderManifestPropertiesResponseOptions.
     */
    public static ResourceProviderManifestPropertiesResponseOptions fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ResourceProviderManifestPropertiesResponseOptions deserializedResourceProviderManifestPropertiesResponseOptions
                = new ResourceProviderManifestPropertiesResponseOptions();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("serviceClientOptionsType".equals(fieldName)) {
                    deserializedResourceProviderManifestPropertiesResponseOptions.serviceClientOptionsType
                        = ServiceClientOptionsType.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedResourceProviderManifestPropertiesResponseOptions;
        });
    }
}
