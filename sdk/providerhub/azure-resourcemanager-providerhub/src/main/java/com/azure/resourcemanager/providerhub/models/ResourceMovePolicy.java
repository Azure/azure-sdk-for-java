// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The ResourceMovePolicy model.
 */
@Fluent
public class ResourceMovePolicy implements JsonSerializable<ResourceMovePolicy> {
    /*
     * The validationRequired property.
     */
    private Boolean validationRequired;

    /*
     * The crossResourceGroupMoveEnabled property.
     */
    private Boolean crossResourceGroupMoveEnabled;

    /*
     * The crossSubscriptionMoveEnabled property.
     */
    private Boolean crossSubscriptionMoveEnabled;

    /**
     * Creates an instance of ResourceMovePolicy class.
     */
    public ResourceMovePolicy() {
    }

    /**
     * Get the validationRequired property: The validationRequired property.
     * 
     * @return the validationRequired value.
     */
    public Boolean validationRequired() {
        return this.validationRequired;
    }

    /**
     * Set the validationRequired property: The validationRequired property.
     * 
     * @param validationRequired the validationRequired value to set.
     * @return the ResourceMovePolicy object itself.
     */
    public ResourceMovePolicy withValidationRequired(Boolean validationRequired) {
        this.validationRequired = validationRequired;
        return this;
    }

    /**
     * Get the crossResourceGroupMoveEnabled property: The crossResourceGroupMoveEnabled property.
     * 
     * @return the crossResourceGroupMoveEnabled value.
     */
    public Boolean crossResourceGroupMoveEnabled() {
        return this.crossResourceGroupMoveEnabled;
    }

    /**
     * Set the crossResourceGroupMoveEnabled property: The crossResourceGroupMoveEnabled property.
     * 
     * @param crossResourceGroupMoveEnabled the crossResourceGroupMoveEnabled value to set.
     * @return the ResourceMovePolicy object itself.
     */
    public ResourceMovePolicy withCrossResourceGroupMoveEnabled(Boolean crossResourceGroupMoveEnabled) {
        this.crossResourceGroupMoveEnabled = crossResourceGroupMoveEnabled;
        return this;
    }

    /**
     * Get the crossSubscriptionMoveEnabled property: The crossSubscriptionMoveEnabled property.
     * 
     * @return the crossSubscriptionMoveEnabled value.
     */
    public Boolean crossSubscriptionMoveEnabled() {
        return this.crossSubscriptionMoveEnabled;
    }

    /**
     * Set the crossSubscriptionMoveEnabled property: The crossSubscriptionMoveEnabled property.
     * 
     * @param crossSubscriptionMoveEnabled the crossSubscriptionMoveEnabled value to set.
     * @return the ResourceMovePolicy object itself.
     */
    public ResourceMovePolicy withCrossSubscriptionMoveEnabled(Boolean crossSubscriptionMoveEnabled) {
        this.crossSubscriptionMoveEnabled = crossSubscriptionMoveEnabled;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("validationRequired", this.validationRequired);
        jsonWriter.writeBooleanField("crossResourceGroupMoveEnabled", this.crossResourceGroupMoveEnabled);
        jsonWriter.writeBooleanField("crossSubscriptionMoveEnabled", this.crossSubscriptionMoveEnabled);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ResourceMovePolicy from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ResourceMovePolicy if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the ResourceMovePolicy.
     */
    public static ResourceMovePolicy fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ResourceMovePolicy deserializedResourceMovePolicy = new ResourceMovePolicy();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("validationRequired".equals(fieldName)) {
                    deserializedResourceMovePolicy.validationRequired = reader.getNullable(JsonReader::getBoolean);
                } else if ("crossResourceGroupMoveEnabled".equals(fieldName)) {
                    deserializedResourceMovePolicy.crossResourceGroupMoveEnabled
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("crossSubscriptionMoveEnabled".equals(fieldName)) {
                    deserializedResourceMovePolicy.crossSubscriptionMoveEnabled
                        = reader.getNullable(JsonReader::getBoolean);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedResourceMovePolicy;
        });
    }
}
