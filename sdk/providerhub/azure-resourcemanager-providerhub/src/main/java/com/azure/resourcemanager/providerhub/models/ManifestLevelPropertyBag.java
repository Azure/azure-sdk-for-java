// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The ManifestLevelPropertyBag model.
 */
@Fluent
public class ManifestLevelPropertyBag implements JsonSerializable<ManifestLevelPropertyBag> {
    /*
     * The resource hydration accounts.
     */
    private List<ResourceHydrationAccount> resourceHydrationAccounts;

    /**
     * Creates an instance of ManifestLevelPropertyBag class.
     */
    public ManifestLevelPropertyBag() {
    }

    /**
     * Get the resourceHydrationAccounts property: The resource hydration accounts.
     * 
     * @return the resourceHydrationAccounts value.
     */
    public List<ResourceHydrationAccount> resourceHydrationAccounts() {
        return this.resourceHydrationAccounts;
    }

    /**
     * Set the resourceHydrationAccounts property: The resource hydration accounts.
     * 
     * @param resourceHydrationAccounts the resourceHydrationAccounts value to set.
     * @return the ManifestLevelPropertyBag object itself.
     */
    public ManifestLevelPropertyBag
        withResourceHydrationAccounts(List<ResourceHydrationAccount> resourceHydrationAccounts) {
        this.resourceHydrationAccounts = resourceHydrationAccounts;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (resourceHydrationAccounts() != null) {
            resourceHydrationAccounts().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("resourceHydrationAccounts", this.resourceHydrationAccounts,
            (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ManifestLevelPropertyBag from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ManifestLevelPropertyBag if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ManifestLevelPropertyBag.
     */
    public static ManifestLevelPropertyBag fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ManifestLevelPropertyBag deserializedManifestLevelPropertyBag = new ManifestLevelPropertyBag();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("resourceHydrationAccounts".equals(fieldName)) {
                    List<ResourceHydrationAccount> resourceHydrationAccounts
                        = reader.readArray(reader1 -> ResourceHydrationAccount.fromJson(reader1));
                    deserializedManifestLevelPropertyBag.resourceHydrationAccounts = resourceHydrationAccounts;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedManifestLevelPropertyBag;
        });
    }
}
