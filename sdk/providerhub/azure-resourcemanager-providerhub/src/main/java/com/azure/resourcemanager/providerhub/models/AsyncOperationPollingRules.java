// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The AsyncOperationPollingRules model.
 */
@Fluent
public final class AsyncOperationPollingRules implements JsonSerializable<AsyncOperationPollingRules> {
    /*
     * The authorization actions.
     */
    private List<String> authorizationActions;

    /*
     * The additional options.
     */
    private AdditionalOptionsAsyncOperation additionalOptions;

    /**
     * Creates an instance of AsyncOperationPollingRules class.
     */
    public AsyncOperationPollingRules() {
    }

    /**
     * Get the authorizationActions property: The authorization actions.
     * 
     * @return the authorizationActions value.
     */
    public List<String> authorizationActions() {
        return this.authorizationActions;
    }

    /**
     * Set the authorizationActions property: The authorization actions.
     * 
     * @param authorizationActions the authorizationActions value to set.
     * @return the AsyncOperationPollingRules object itself.
     */
    public AsyncOperationPollingRules withAuthorizationActions(List<String> authorizationActions) {
        this.authorizationActions = authorizationActions;
        return this;
    }

    /**
     * Get the additionalOptions property: The additional options.
     * 
     * @return the additionalOptions value.
     */
    public AdditionalOptionsAsyncOperation additionalOptions() {
        return this.additionalOptions;
    }

    /**
     * Set the additionalOptions property: The additional options.
     * 
     * @param additionalOptions the additionalOptions value to set.
     * @return the AsyncOperationPollingRules object itself.
     */
    public AsyncOperationPollingRules withAdditionalOptions(AdditionalOptionsAsyncOperation additionalOptions) {
        this.additionalOptions = additionalOptions;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("authorizationActions", this.authorizationActions,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeStringField("additionalOptions",
            this.additionalOptions == null ? null : this.additionalOptions.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AsyncOperationPollingRules from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AsyncOperationPollingRules if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AsyncOperationPollingRules.
     */
    public static AsyncOperationPollingRules fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AsyncOperationPollingRules deserializedAsyncOperationPollingRules = new AsyncOperationPollingRules();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("authorizationActions".equals(fieldName)) {
                    List<String> authorizationActions = reader.readArray(reader1 -> reader1.getString());
                    deserializedAsyncOperationPollingRules.authorizationActions = authorizationActions;
                } else if ("additionalOptions".equals(fieldName)) {
                    deserializedAsyncOperationPollingRules.additionalOptions
                        = AdditionalOptionsAsyncOperation.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAsyncOperationPollingRules;
        });
    }
}
