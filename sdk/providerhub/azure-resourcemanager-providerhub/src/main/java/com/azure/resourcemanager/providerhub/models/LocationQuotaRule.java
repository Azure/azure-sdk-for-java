// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The LocationQuotaRule model.
 */
@Fluent
public final class LocationQuotaRule implements JsonSerializable<LocationQuotaRule> {
    /*
     * The policy.
     */
    private QuotaPolicy policy;

    /*
     * The quota id.
     */
    private String quotaId;

    /*
     * The location.
     */
    private String location;

    /**
     * Creates an instance of LocationQuotaRule class.
     */
    public LocationQuotaRule() {
    }

    /**
     * Get the policy property: The policy.
     * 
     * @return the policy value.
     */
    public QuotaPolicy policy() {
        return this.policy;
    }

    /**
     * Set the policy property: The policy.
     * 
     * @param policy the policy value to set.
     * @return the LocationQuotaRule object itself.
     */
    public LocationQuotaRule withPolicy(QuotaPolicy policy) {
        this.policy = policy;
        return this;
    }

    /**
     * Get the quotaId property: The quota id.
     * 
     * @return the quotaId value.
     */
    public String quotaId() {
        return this.quotaId;
    }

    /**
     * Set the quotaId property: The quota id.
     * 
     * @param quotaId the quotaId value to set.
     * @return the LocationQuotaRule object itself.
     */
    public LocationQuotaRule withQuotaId(String quotaId) {
        this.quotaId = quotaId;
        return this;
    }

    /**
     * Get the location property: The location.
     * 
     * @return the location value.
     */
    public String location() {
        return this.location;
    }

    /**
     * Set the location property: The location.
     * 
     * @param location the location value to set.
     * @return the LocationQuotaRule object itself.
     */
    public LocationQuotaRule withLocation(String location) {
        this.location = location;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("policy", this.policy == null ? null : this.policy.toString());
        jsonWriter.writeStringField("quotaId", this.quotaId);
        jsonWriter.writeStringField("location", this.location);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of LocationQuotaRule from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of LocationQuotaRule if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the LocationQuotaRule.
     */
    public static LocationQuotaRule fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            LocationQuotaRule deserializedLocationQuotaRule = new LocationQuotaRule();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("policy".equals(fieldName)) {
                    deserializedLocationQuotaRule.policy = QuotaPolicy.fromString(reader.getString());
                } else if ("quotaId".equals(fieldName)) {
                    deserializedLocationQuotaRule.quotaId = reader.getString();
                } else if ("location".equals(fieldName)) {
                    deserializedLocationQuotaRule.location = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedLocationQuotaRule;
        });
    }
}
