// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The RequestHeaderOptions model.
 */
@Fluent
public class RequestHeaderOptions implements JsonSerializable<RequestHeaderOptions> {
    /*
     * The opt in headers.
     */
    private OptInHeaderType optInHeaders;

    /*
     * The opt out headers.
     */
    private OptOutHeaderType optOutHeaders;

    /**
     * Creates an instance of RequestHeaderOptions class.
     */
    public RequestHeaderOptions() {
    }

    /**
     * Get the optInHeaders property: The opt in headers.
     * 
     * @return the optInHeaders value.
     */
    public OptInHeaderType optInHeaders() {
        return this.optInHeaders;
    }

    /**
     * Set the optInHeaders property: The opt in headers.
     * 
     * @param optInHeaders the optInHeaders value to set.
     * @return the RequestHeaderOptions object itself.
     */
    public RequestHeaderOptions withOptInHeaders(OptInHeaderType optInHeaders) {
        this.optInHeaders = optInHeaders;
        return this;
    }

    /**
     * Get the optOutHeaders property: The opt out headers.
     * 
     * @return the optOutHeaders value.
     */
    public OptOutHeaderType optOutHeaders() {
        return this.optOutHeaders;
    }

    /**
     * Set the optOutHeaders property: The opt out headers.
     * 
     * @param optOutHeaders the optOutHeaders value to set.
     * @return the RequestHeaderOptions object itself.
     */
    public RequestHeaderOptions withOptOutHeaders(OptOutHeaderType optOutHeaders) {
        this.optOutHeaders = optOutHeaders;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("optInHeaders", this.optInHeaders == null ? null : this.optInHeaders.toString());
        jsonWriter.writeStringField("optOutHeaders", this.optOutHeaders == null ? null : this.optOutHeaders.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RequestHeaderOptions from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RequestHeaderOptions if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the RequestHeaderOptions.
     */
    public static RequestHeaderOptions fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RequestHeaderOptions deserializedRequestHeaderOptions = new RequestHeaderOptions();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("optInHeaders".equals(fieldName)) {
                    deserializedRequestHeaderOptions.optInHeaders = OptInHeaderType.fromString(reader.getString());
                } else if ("optOutHeaders".equals(fieldName)) {
                    deserializedRequestHeaderOptions.optOutHeaders = OptOutHeaderType.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRequestHeaderOptions;
        });
    }
}
