// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Resource group lock option during move.
 */
@Fluent
public final class ResourceProviderManifestPropertiesResourceGroupLockOptionDuringMove
    implements JsonSerializable<ResourceProviderManifestPropertiesResourceGroupLockOptionDuringMove> {
    /*
     * The action verb that will be blocked when the resource group is locked during move.
     */
    private BlockActionVerb blockActionVerb;

    /**
     * Creates an instance of ResourceProviderManifestPropertiesResourceGroupLockOptionDuringMove class.
     */
    public ResourceProviderManifestPropertiesResourceGroupLockOptionDuringMove() {
    }

    /**
     * Get the blockActionVerb property: The action verb that will be blocked when the resource group is locked during
     * move.
     * 
     * @return the blockActionVerb value.
     */
    public BlockActionVerb blockActionVerb() {
        return this.blockActionVerb;
    }

    /**
     * Set the blockActionVerb property: The action verb that will be blocked when the resource group is locked during
     * move.
     * 
     * @param blockActionVerb the blockActionVerb value to set.
     * @return the ResourceProviderManifestPropertiesResourceGroupLockOptionDuringMove object itself.
     */
    public ResourceProviderManifestPropertiesResourceGroupLockOptionDuringMove
        withBlockActionVerb(BlockActionVerb blockActionVerb) {
        this.blockActionVerb = blockActionVerb;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("blockActionVerb",
            this.blockActionVerb == null ? null : this.blockActionVerb.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ResourceProviderManifestPropertiesResourceGroupLockOptionDuringMove from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ResourceProviderManifestPropertiesResourceGroupLockOptionDuringMove if the JsonReader was
     * pointing to an instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the
     * ResourceProviderManifestPropertiesResourceGroupLockOptionDuringMove.
     */
    public static ResourceProviderManifestPropertiesResourceGroupLockOptionDuringMove fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            ResourceProviderManifestPropertiesResourceGroupLockOptionDuringMove deserializedResourceProviderManifestPropertiesResourceGroupLockOptionDuringMove
                = new ResourceProviderManifestPropertiesResourceGroupLockOptionDuringMove();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("blockActionVerb".equals(fieldName)) {
                    deserializedResourceProviderManifestPropertiesResourceGroupLockOptionDuringMove.blockActionVerb
                        = BlockActionVerb.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedResourceProviderManifestPropertiesResourceGroupLockOptionDuringMove;
        });
    }
}
