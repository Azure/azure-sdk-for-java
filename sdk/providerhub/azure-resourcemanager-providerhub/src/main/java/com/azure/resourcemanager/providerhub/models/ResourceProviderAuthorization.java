// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The ResourceProviderAuthorization model. */
@Fluent
public final class ResourceProviderAuthorization {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ResourceProviderAuthorization.class);

    /*
     * The applicationId property.
     */
    @JsonProperty(value = "applicationId")
    private String applicationId;

    /*
     * The roleDefinitionId property.
     */
    @JsonProperty(value = "roleDefinitionId")
    private String roleDefinitionId;

    /*
     * The managedByRoleDefinitionId property.
     */
    @JsonProperty(value = "managedByRoleDefinitionId")
    private String managedByRoleDefinitionId;

    /**
     * Get the applicationId property: The applicationId property.
     *
     * @return the applicationId value.
     */
    public String applicationId() {
        return this.applicationId;
    }

    /**
     * Set the applicationId property: The applicationId property.
     *
     * @param applicationId the applicationId value to set.
     * @return the ResourceProviderAuthorization object itself.
     */
    public ResourceProviderAuthorization withApplicationId(String applicationId) {
        this.applicationId = applicationId;
        return this;
    }

    /**
     * Get the roleDefinitionId property: The roleDefinitionId property.
     *
     * @return the roleDefinitionId value.
     */
    public String roleDefinitionId() {
        return this.roleDefinitionId;
    }

    /**
     * Set the roleDefinitionId property: The roleDefinitionId property.
     *
     * @param roleDefinitionId the roleDefinitionId value to set.
     * @return the ResourceProviderAuthorization object itself.
     */
    public ResourceProviderAuthorization withRoleDefinitionId(String roleDefinitionId) {
        this.roleDefinitionId = roleDefinitionId;
        return this;
    }

    /**
     * Get the managedByRoleDefinitionId property: The managedByRoleDefinitionId property.
     *
     * @return the managedByRoleDefinitionId value.
     */
    public String managedByRoleDefinitionId() {
        return this.managedByRoleDefinitionId;
    }

    /**
     * Set the managedByRoleDefinitionId property: The managedByRoleDefinitionId property.
     *
     * @param managedByRoleDefinitionId the managedByRoleDefinitionId value to set.
     * @return the ResourceProviderAuthorization object itself.
     */
    public ResourceProviderAuthorization withManagedByRoleDefinitionId(String managedByRoleDefinitionId) {
        this.managedByRoleDefinitionId = managedByRoleDefinitionId;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
