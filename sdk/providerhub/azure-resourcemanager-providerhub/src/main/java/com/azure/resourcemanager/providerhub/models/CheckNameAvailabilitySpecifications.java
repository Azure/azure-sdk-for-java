// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The CheckNameAvailabilitySpecifications model.
 */
@Fluent
public class CheckNameAvailabilitySpecifications implements JsonSerializable<CheckNameAvailabilitySpecifications> {
    /*
     * The enableDefaultValidation property.
     */
    private Boolean enableDefaultValidation;

    /*
     * The resourceTypesWithCustomValidation property.
     */
    private List<String> resourceTypesWithCustomValidation;

    /**
     * Creates an instance of CheckNameAvailabilitySpecifications class.
     */
    public CheckNameAvailabilitySpecifications() {
    }

    /**
     * Get the enableDefaultValidation property: The enableDefaultValidation property.
     * 
     * @return the enableDefaultValidation value.
     */
    public Boolean enableDefaultValidation() {
        return this.enableDefaultValidation;
    }

    /**
     * Set the enableDefaultValidation property: The enableDefaultValidation property.
     * 
     * @param enableDefaultValidation the enableDefaultValidation value to set.
     * @return the CheckNameAvailabilitySpecifications object itself.
     */
    public CheckNameAvailabilitySpecifications withEnableDefaultValidation(Boolean enableDefaultValidation) {
        this.enableDefaultValidation = enableDefaultValidation;
        return this;
    }

    /**
     * Get the resourceTypesWithCustomValidation property: The resourceTypesWithCustomValidation property.
     * 
     * @return the resourceTypesWithCustomValidation value.
     */
    public List<String> resourceTypesWithCustomValidation() {
        return this.resourceTypesWithCustomValidation;
    }

    /**
     * Set the resourceTypesWithCustomValidation property: The resourceTypesWithCustomValidation property.
     * 
     * @param resourceTypesWithCustomValidation the resourceTypesWithCustomValidation value to set.
     * @return the CheckNameAvailabilitySpecifications object itself.
     */
    public CheckNameAvailabilitySpecifications
        withResourceTypesWithCustomValidation(List<String> resourceTypesWithCustomValidation) {
        this.resourceTypesWithCustomValidation = resourceTypesWithCustomValidation;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("enableDefaultValidation", this.enableDefaultValidation);
        jsonWriter.writeArrayField("resourceTypesWithCustomValidation", this.resourceTypesWithCustomValidation,
            (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CheckNameAvailabilitySpecifications from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CheckNameAvailabilitySpecifications if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the CheckNameAvailabilitySpecifications.
     */
    public static CheckNameAvailabilitySpecifications fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CheckNameAvailabilitySpecifications deserializedCheckNameAvailabilitySpecifications
                = new CheckNameAvailabilitySpecifications();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("enableDefaultValidation".equals(fieldName)) {
                    deserializedCheckNameAvailabilitySpecifications.enableDefaultValidation
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("resourceTypesWithCustomValidation".equals(fieldName)) {
                    List<String> resourceTypesWithCustomValidation = reader.readArray(reader1 -> reader1.getString());
                    deserializedCheckNameAvailabilitySpecifications.resourceTypesWithCustomValidation
                        = resourceTypesWithCustomValidation;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCheckNameAvailabilitySpecifications;
        });
    }
}
