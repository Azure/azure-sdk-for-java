// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.providerhub.fluent.models.NotificationRegistrationInner;
import com.azure.resourcemanager.providerhub.models.MessageScope;
import com.azure.resourcemanager.providerhub.models.NotificationEndpoint;
import com.azure.resourcemanager.providerhub.models.NotificationMode;
import com.azure.resourcemanager.providerhub.models.NotificationRegistrationArrayResponseWithContinuation;
import com.azure.resourcemanager.providerhub.models.NotificationRegistrationProperties;
import com.azure.resourcemanager.providerhub.models.ProvisioningState;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NotificationRegistrationArrayResponseWithContinuationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NotificationRegistrationArrayResponseWithContinuation model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"notificationMode\":\"EventHub\",\"messageScope\":\"RegisteredSubscriptions\",\"includedEvents\":[\"tpipiwyczuhx\",\"cpqjlihhyu\",\"pskasdvlmfwdg\"],\"notificationEndpoints\":[{\"notificationDestination\":\"ucvpamrs\",\"locations\":[\"zvxurisjnhny\"]},{\"notificationDestination\":\"ifqjz\",\"locations\":[\"rhublwpcesutrg\",\"upauut\",\"woqhihe\"]}],\"provisioningState\":\"Creating\"},\"id\":\"w\",\"name\":\"pnfqntcyp\",\"type\":\"xjvfoimwksl\"},{\"properties\":{\"notificationMode\":\"WebHook\",\"messageScope\":\"NotSpecified\",\"includedEvents\":[\"ydfce\",\"cvlhv\",\"gdyftumrtwna\",\"jslb\"],\"notificationEndpoints\":[{\"notificationDestination\":\"jgcyztsfmznba\",\"locations\":[\"hchqnrnrpx\"]},{\"notificationDestination\":\"uwrykqgaifmvikl\",\"locations\":[\"vkhbejdznx\"]},{\"notificationDestination\":\"dsrhnjiv\",\"locations\":[\"tnovqfzgemjdftul\"]}],\"provisioningState\":\"TransientFailure\"},\"id\":\"duceamtmc\",\"name\":\"u\",\"type\":\"m\"},{\"properties\":{\"notificationMode\":\"WebHook\",\"messageScope\":\"NotSpecified\",\"includedEvents\":[\"oknssxmojmsvpkjp\",\"vk\",\"cfzq\"],\"notificationEndpoints\":[{\"notificationDestination\":\"gtczheydb\",\"locations\":[\"hmkxmaehvbb\",\"uripltfnhtba\",\"kgxywr\",\"kpyklyhp\"]},{\"notificationDestination\":\"odpvruudlgzib\",\"locations\":[\"stgktst\",\"dxeclzedqbcvh\"]}],\"provisioningState\":\"TransientFailure\"},\"id\":\"plodqkdlwwqfbu\",\"name\":\"lkxt\",\"type\":\"qjfsmlmbtxhw\"}],\"nextLink\":\"wsrt\"}")
            .toObject(NotificationRegistrationArrayResponseWithContinuation.class);
        Assertions.assertEquals(NotificationMode.EVENT_HUB, model.value().get(0).properties().notificationMode());
        Assertions.assertEquals(MessageScope.REGISTERED_SUBSCRIPTIONS,
            model.value().get(0).properties().messageScope());
        Assertions.assertEquals("tpipiwyczuhx", model.value().get(0).properties().includedEvents().get(0));
        Assertions.assertEquals("ucvpamrs",
            model.value().get(0).properties().notificationEndpoints().get(0).notificationDestination());
        Assertions.assertEquals("zvxurisjnhny",
            model.value().get(0).properties().notificationEndpoints().get(0).locations().get(0));
        Assertions.assertEquals(ProvisioningState.CREATING, model.value().get(0).properties().provisioningState());
        Assertions.assertEquals("wsrt", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NotificationRegistrationArrayResponseWithContinuation model
            = new NotificationRegistrationArrayResponseWithContinuation()
                .withValue(
                    Arrays.asList(
                        new NotificationRegistrationInner().withProperties(
                            new NotificationRegistrationProperties().withNotificationMode(NotificationMode.EVENT_HUB)
                                .withMessageScope(MessageScope.REGISTERED_SUBSCRIPTIONS)
                                .withIncludedEvents(Arrays.asList("tpipiwyczuhx", "cpqjlihhyu", "pskasdvlmfwdg"))
                                .withNotificationEndpoints(Arrays.asList(
                                    new NotificationEndpoint().withNotificationDestination("ucvpamrs")
                                        .withLocations(Arrays.asList("zvxurisjnhny")),
                                    new NotificationEndpoint().withNotificationDestination("ifqjz")
                                        .withLocations(Arrays.asList("rhublwpcesutrg", "upauut", "woqhihe"))))
                                .withProvisioningState(ProvisioningState.CREATING)),
                        new NotificationRegistrationInner().withProperties(new NotificationRegistrationProperties()
                            .withNotificationMode(NotificationMode.WEB_HOOK)
                            .withMessageScope(MessageScope.NOT_SPECIFIED)
                            .withIncludedEvents(Arrays.asList("ydfce", "cvlhv", "gdyftumrtwna", "jslb"))
                            .withNotificationEndpoints(Arrays.asList(
                                new NotificationEndpoint().withNotificationDestination("jgcyztsfmznba")
                                    .withLocations(Arrays.asList("hchqnrnrpx")),
                                new NotificationEndpoint().withNotificationDestination("uwrykqgaifmvikl")
                                    .withLocations(Arrays.asList("vkhbejdznx")),
                                new NotificationEndpoint().withNotificationDestination("dsrhnjiv")
                                    .withLocations(Arrays.asList("tnovqfzgemjdftul"))))
                            .withProvisioningState(ProvisioningState.TRANSIENT_FAILURE)),
                        new NotificationRegistrationInner()
                            .withProperties(
                                new NotificationRegistrationProperties().withNotificationMode(NotificationMode.WEB_HOOK)
                                    .withMessageScope(MessageScope.NOT_SPECIFIED)
                                    .withIncludedEvents(Arrays.asList("oknssxmojmsvpkjp", "vk", "cfzq"))
                                    .withNotificationEndpoints(
                                        Arrays
                                            .asList(
                                                new NotificationEndpoint().withNotificationDestination("gtczheydb")
                                                    .withLocations(Arrays.asList("hmkxmaehvbb", "uripltfnhtba",
                                                        "kgxywr", "kpyklyhp")),
                                                new NotificationEndpoint().withNotificationDestination("odpvruudlgzib")
                                                    .withLocations(Arrays.asList("stgktst", "dxeclzedqbcvh"))))
                                    .withProvisioningState(ProvisioningState.TRANSIENT_FAILURE))))
                .withNextLink("wsrt");
        model = BinaryData.fromObject(model).toObject(NotificationRegistrationArrayResponseWithContinuation.class);
        Assertions.assertEquals(NotificationMode.EVENT_HUB, model.value().get(0).properties().notificationMode());
        Assertions.assertEquals(MessageScope.REGISTERED_SUBSCRIPTIONS,
            model.value().get(0).properties().messageScope());
        Assertions.assertEquals("tpipiwyczuhx", model.value().get(0).properties().includedEvents().get(0));
        Assertions.assertEquals("ucvpamrs",
            model.value().get(0).properties().notificationEndpoints().get(0).notificationDestination());
        Assertions.assertEquals("zvxurisjnhny",
            model.value().get(0).properties().notificationEndpoints().get(0).locations().get(0));
        Assertions.assertEquals(ProvisioningState.CREATING, model.value().get(0).properties().provisioningState());
        Assertions.assertEquals("wsrt", model.nextLink());
    }
}
