// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.providerhub.models.ResourceTypeRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications;
import com.azure.resourcemanager.providerhub.models.SubscriptionNotificationOperation;
import com.azure.resourcemanager.providerhub.models.SubscriptionStateOverrideAction;
import com.azure.resourcemanager.providerhub.models.SubscriptionTransitioningState;
import java.time.Duration;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ResourceTypeRegistrationPropertiesSubscriptionLifecycleNotificationSpecificationsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ResourceTypeRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications model = BinaryData.fromString(
            "{\"subscriptionStateOverrideActions\":[{\"state\":\"Deleted\",\"action\":\"BillingCancellation\"},{\"state\":\"Deleted\",\"action\":\"NotDefined\"}],\"softDeleteTTL\":\"PT151H58M7S\"}")
            .toObject(ResourceTypeRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications.class);
        Assertions.assertEquals(SubscriptionTransitioningState.DELETED,
            model.subscriptionStateOverrideActions().get(0).state());
        Assertions.assertEquals(SubscriptionNotificationOperation.BILLING_CANCELLATION,
            model.subscriptionStateOverrideActions().get(0).action());
        Assertions.assertEquals(Duration.parse("PT151H58M7S"), model.softDeleteTtl());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ResourceTypeRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications model
            = new ResourceTypeRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications()
                .withSubscriptionStateOverrideActions(Arrays.asList(
                    new SubscriptionStateOverrideAction().withState(SubscriptionTransitioningState.DELETED)
                        .withAction(SubscriptionNotificationOperation.BILLING_CANCELLATION),
                    new SubscriptionStateOverrideAction().withState(SubscriptionTransitioningState.DELETED)
                        .withAction(SubscriptionNotificationOperation.NOT_DEFINED)))
                .withSoftDeleteTtl(Duration.parse("PT151H58M7S"));
        model = BinaryData.fromObject(model)
            .toObject(ResourceTypeRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications.class);
        Assertions.assertEquals(SubscriptionTransitioningState.DELETED,
            model.subscriptionStateOverrideActions().get(0).state());
        Assertions.assertEquals(SubscriptionNotificationOperation.BILLING_CANCELLATION,
            model.subscriptionStateOverrideActions().get(0).action());
        Assertions.assertEquals(Duration.parse("PT151H58M7S"), model.softDeleteTtl());
    }
}
