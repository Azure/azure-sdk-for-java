// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.providerhub.ProviderHubManager;
import com.azure.resourcemanager.providerhub.models.CheckinManifestInfo;
import com.azure.resourcemanager.providerhub.models.CheckinManifestParams;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ResourceProvidersCheckinManifestWithResponseMockTests {
    @Test
    public void testCheckinManifestWithResponse() throws Exception {
        String responseStr
            = "{\"isCheckedIn\":false,\"statusMessage\":\"dusztekxby\",\"pullRequest\":\"msfe\",\"commitId\":\"yihpqadagrh\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ProviderHubManager manager = ProviderHubManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        CheckinManifestInfo response = manager.resourceProviders()
            .checkinManifestWithResponse("hamfowgwbtmk",
                new CheckinManifestParams().withEnvironment("kxpkzwaq")
                    .withBaselineArmManifestLocation("ofqovchiqbplv"),
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertFalse(response.isCheckedIn());
        Assertions.assertEquals("dusztekxby", response.statusMessage());
        Assertions.assertEquals("msfe", response.pullRequest());
        Assertions.assertEquals("yihpqadagrh", response.commitId());
    }
}
