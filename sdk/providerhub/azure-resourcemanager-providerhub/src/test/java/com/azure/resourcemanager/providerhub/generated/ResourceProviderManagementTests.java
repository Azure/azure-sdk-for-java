// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.providerhub.models.ResourceAccessPolicy;
import com.azure.resourcemanager.providerhub.models.ResourceProviderManagement;
import com.azure.resourcemanager.providerhub.models.ServiceTreeInfo;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ResourceProviderManagementTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ResourceProviderManagement model = BinaryData.fromString(
            "{\"schemaOwners\":[\"ifiyipjxsqwpgrj\",\"znorcj\",\"vsnb\",\"xqabnmocpcysh\"],\"manifestOwners\":[\"afbljjgpbtoqcjmk\"],\"incidentRoutingService\":\"a\",\"incidentRoutingTeam\":\"qidtqajzyu\",\"incidentContactEmail\":\"kudjkrlkhb\",\"serviceTreeInfos\":[{\"serviceId\":\"pgzgq\",\"componentId\":\"zloc\"},{\"serviceId\":\"c\",\"componentId\":\"ierhhbcsglummaj\"}],\"resourceAccessPolicy\":\"AcisReadAllowed\",\"resourceAccessRoles\":[\"dataxobnbdxkqpxok\"]}")
            .toObject(ResourceProviderManagement.class);
        Assertions.assertEquals("ifiyipjxsqwpgrj", model.schemaOwners().get(0));
        Assertions.assertEquals("afbljjgpbtoqcjmk", model.manifestOwners().get(0));
        Assertions.assertEquals("a", model.incidentRoutingService());
        Assertions.assertEquals("qidtqajzyu", model.incidentRoutingTeam());
        Assertions.assertEquals("kudjkrlkhb", model.incidentContactEmail());
        Assertions.assertEquals("pgzgq", model.serviceTreeInfos().get(0).serviceId());
        Assertions.assertEquals("zloc", model.serviceTreeInfos().get(0).componentId());
        Assertions.assertEquals(ResourceAccessPolicy.ACIS_READ_ALLOWED, model.resourceAccessPolicy());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ResourceProviderManagement model = new ResourceProviderManagement()
            .withSchemaOwners(Arrays.asList("ifiyipjxsqwpgrj", "znorcj", "vsnb", "xqabnmocpcysh"))
            .withManifestOwners(Arrays.asList("afbljjgpbtoqcjmk"))
            .withIncidentRoutingService("a")
            .withIncidentRoutingTeam("qidtqajzyu")
            .withIncidentContactEmail("kudjkrlkhb")
            .withServiceTreeInfos(Arrays.asList(new ServiceTreeInfo().withServiceId("pgzgq").withComponentId("zloc"),
                new ServiceTreeInfo().withServiceId("c").withComponentId("ierhhbcsglummaj")))
            .withResourceAccessPolicy(ResourceAccessPolicy.ACIS_READ_ALLOWED)
            .withResourceAccessRoles(Arrays.asList("dataxobnbdxkqpxok"));
        model = BinaryData.fromObject(model).toObject(ResourceProviderManagement.class);
        Assertions.assertEquals("ifiyipjxsqwpgrj", model.schemaOwners().get(0));
        Assertions.assertEquals("afbljjgpbtoqcjmk", model.manifestOwners().get(0));
        Assertions.assertEquals("a", model.incidentRoutingService());
        Assertions.assertEquals("qidtqajzyu", model.incidentRoutingTeam());
        Assertions.assertEquals("kudjkrlkhb", model.incidentContactEmail());
        Assertions.assertEquals("pgzgq", model.serviceTreeInfos().get(0).serviceId());
        Assertions.assertEquals("zloc", model.serviceTreeInfos().get(0).componentId());
        Assertions.assertEquals(ResourceAccessPolicy.ACIS_READ_ALLOWED, model.resourceAccessPolicy());
    }
}
