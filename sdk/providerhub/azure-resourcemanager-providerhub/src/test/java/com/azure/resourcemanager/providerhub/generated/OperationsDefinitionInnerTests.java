// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.providerhub.fluent.models.OperationsDefinitionInner;
import com.azure.resourcemanager.providerhub.models.OperationActionType;
import com.azure.resourcemanager.providerhub.models.OperationOrigins;
import com.azure.resourcemanager.providerhub.models.OperationsDefinitionDisplay;
import org.junit.jupiter.api.Assertions;

public final class OperationsDefinitionInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationsDefinitionInner model = BinaryData.fromString(
            "{\"name\":\"hminyflnorwmduv\",\"isDataAction\":false,\"origin\":\"NotSpecified\",\"display\":{\"provider\":\"xwmygdxpgpqc\",\"resource\":\"isze\",\"operation\":\"nnbj\",\"description\":\"rxgibbd\"},\"actionType\":\"Internal\",\"properties\":\"datanfo\"}")
            .toObject(OperationsDefinitionInner.class);
        Assertions.assertEquals("hminyflnorwmduv", model.name());
        Assertions.assertEquals(false, model.isDataAction());
        Assertions.assertEquals(OperationOrigins.NOT_SPECIFIED, model.origin());
        Assertions.assertEquals("xwmygdxpgpqc", model.display().provider());
        Assertions.assertEquals("isze", model.display().resource());
        Assertions.assertEquals("nnbj", model.display().operation());
        Assertions.assertEquals("rxgibbd", model.display().description());
        Assertions.assertEquals(OperationActionType.INTERNAL, model.actionType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationsDefinitionInner model = new OperationsDefinitionInner().withName("hminyflnorwmduv")
            .withIsDataAction(false)
            .withOrigin(OperationOrigins.NOT_SPECIFIED)
            .withDisplay(new OperationsDefinitionDisplay().withProvider("xwmygdxpgpqc")
                .withResource("isze")
                .withOperation("nnbj")
                .withDescription("rxgibbd"))
            .withActionType(OperationActionType.INTERNAL)
            .withProperties("datanfo");
        model = BinaryData.fromObject(model).toObject(OperationsDefinitionInner.class);
        Assertions.assertEquals("hminyflnorwmduv", model.name());
        Assertions.assertEquals(false, model.isDataAction());
        Assertions.assertEquals(OperationOrigins.NOT_SPECIFIED, model.origin());
        Assertions.assertEquals("xwmygdxpgpqc", model.display().provider());
        Assertions.assertEquals("isze", model.display().resource());
        Assertions.assertEquals("nnbj", model.display().operation());
        Assertions.assertEquals("rxgibbd", model.display().description());
        Assertions.assertEquals(OperationActionType.INTERNAL, model.actionType());
    }
}
