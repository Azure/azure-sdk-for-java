// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.providerhub.models.LinkedNotificationRule;
import java.time.Duration;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class LinkedNotificationRuleTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LinkedNotificationRule model = BinaryData.fromString(
            "{\"actions\":[\"babphlwrqlfk\",\"sthsu\"],\"actionsOnFailedOperation\":[\"mnyyazt\",\"bt\",\"wrqpue\"],\"fastPathActions\":[\"zywbiex\",\"fey\"],\"fastPathActionsOnFailedOperation\":[\"xibxujwbhqwalm\",\"zyoxaepdkzjan\"],\"linkedNotificationTimeout\":\"PT14H48M20S\"}")
            .toObject(LinkedNotificationRule.class);
        Assertions.assertEquals("babphlwrqlfk", model.actions().get(0));
        Assertions.assertEquals("mnyyazt", model.actionsOnFailedOperation().get(0));
        Assertions.assertEquals("zywbiex", model.fastPathActions().get(0));
        Assertions.assertEquals("xibxujwbhqwalm", model.fastPathActionsOnFailedOperation().get(0));
        Assertions.assertEquals(Duration.parse("PT14H48M20S"), model.linkedNotificationTimeout());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LinkedNotificationRule model = new LinkedNotificationRule().withActions(Arrays.asList("babphlwrqlfk", "sthsu"))
            .withActionsOnFailedOperation(Arrays.asList("mnyyazt", "bt", "wrqpue"))
            .withFastPathActions(Arrays.asList("zywbiex", "fey"))
            .withFastPathActionsOnFailedOperation(Arrays.asList("xibxujwbhqwalm", "zyoxaepdkzjan"))
            .withLinkedNotificationTimeout(Duration.parse("PT14H48M20S"));
        model = BinaryData.fromObject(model).toObject(LinkedNotificationRule.class);
        Assertions.assertEquals("babphlwrqlfk", model.actions().get(0));
        Assertions.assertEquals("mnyyazt", model.actionsOnFailedOperation().get(0));
        Assertions.assertEquals("zywbiex", model.fastPathActions().get(0));
        Assertions.assertEquals("xibxujwbhqwalm", model.fastPathActionsOnFailedOperation().get(0));
        Assertions.assertEquals(Duration.parse("PT14H48M20S"), model.linkedNotificationTimeout());
    }
}
