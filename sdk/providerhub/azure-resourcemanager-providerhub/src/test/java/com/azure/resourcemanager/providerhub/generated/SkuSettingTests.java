// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.providerhub.models.ExtendedLocationType;
import com.azure.resourcemanager.providerhub.models.SkuCapability;
import com.azure.resourcemanager.providerhub.models.SkuCost;
import com.azure.resourcemanager.providerhub.models.SkuLocationInfo;
import com.azure.resourcemanager.providerhub.models.SkuScaleType;
import com.azure.resourcemanager.providerhub.models.SkuSetting;
import com.azure.resourcemanager.providerhub.models.SkuSettingCapacity;
import com.azure.resourcemanager.providerhub.models.SkuZoneDetail;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SkuSettingTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SkuSetting model = BinaryData.fromString(
            "{\"name\":\"kev\",\"tier\":\"ltjcrspxk\",\"size\":\"r\",\"family\":\"lfg\",\"kind\":\"nnnoytz\",\"locations\":[\"ewxigpxvk\",\"maupxvpi\",\"dfaifyzyzeyuube\"],\"locationInfo\":[{\"location\":\"zlfytoit\",\"zones\":[\"gvfltgvdihoynkr\",\"wetwkdr\",\"yrucpcunnuzdq\",\"moenodnaien\"],\"zoneDetails\":[{\"name\":[\"ndnelqkaadlknw\"],\"capabilities\":[{\"name\":\"nniyopetxi\",\"value\":\"cnrly\"},{\"name\":\"nucaephblkwqpat\",\"value\":\"bqsdtcjbctvi\"},{\"name\":\"uzqymtuowog\",\"value\":\"gitsqh\"},{\"name\":\"vbrzcdb\",\"value\":\"nfzndscxmxeat\"}]}],\"extendedLocations\":[\"mwnrdj\",\"ibqbnaomhjrm\",\"u\"],\"type\":\"CustomLocation\"},{\"location\":\"xljalfihc\",\"zones\":[\"bc\",\"nc\",\"exxqcwg\",\"xf\"],\"zoneDetails\":[{\"name\":[\"okzwjjzrlt\",\"xldzyyfytpqsix\"],\"capabilities\":[{\"name\":\"puj\",\"value\":\"vyqlkjuvsmbmslzo\"}]},{\"name\":[\"wzdbpqvybefgv\",\"x\",\"okcvtlubses\"],\"capabilities\":[{\"name\":\"uartrhunlpiryky\",\"value\":\"ndzfqivjreuyk\"}]},{\"name\":[\"nwagl\",\"bxoeeonql\",\"fwmyymv\"],\"capabilities\":[{\"name\":\"pb\",\"value\":\"fckdvez\"},{\"name\":\"rcssbzhddubbnq\",\"value\":\"b\"},{\"name\":\"h\",\"value\":\"alehpav\"},{\"name\":\"wugiqjti\",\"value\":\"gqgdminictteajoh\"}]}],\"extendedLocations\":[\"spnbonhpcz\",\"kmktpvwxqcseh\",\"hkhufm\",\"qumq\"],\"type\":\"NotSpecified\"}],\"requiredQuotaIds\":[\"zulo\",\"saeuzanhsfnhsenw\"],\"requiredFeatures\":[\"zf\",\"gqjclidftujwj\",\"ufwbeqrku\"],\"capacity\":{\"minimum\":1778291019,\"maximum\":1870712650,\"default\":1258720981,\"scaleType\":\"None\"},\"costs\":[{\"meterId\":\"dvhazcvjy\",\"quantity\":303692628,\"extendedUnit\":\"wbqerzwxiytxtd\"},{\"meterId\":\"ukvlb\",\"quantity\":891860577,\"extendedUnit\":\"dstyouam\"},{\"meterId\":\"ewres\",\"quantity\":432107365,\"extendedUnit\":\"egmmuteyxe\"}],\"capabilities\":[{\"name\":\"qigijiitnspxlzde\",\"value\":\"ygr\"}]}")
            .toObject(SkuSetting.class);
        Assertions.assertEquals("kev", model.name());
        Assertions.assertEquals("ltjcrspxk", model.tier());
        Assertions.assertEquals("r", model.size());
        Assertions.assertEquals("lfg", model.family());
        Assertions.assertEquals("nnnoytz", model.kind());
        Assertions.assertEquals("ewxigpxvk", model.locations().get(0));
        Assertions.assertEquals("zlfytoit", model.locationInfo().get(0).location());
        Assertions.assertEquals("gvfltgvdihoynkr", model.locationInfo().get(0).zones().get(0));
        Assertions.assertEquals("ndnelqkaadlknw", model.locationInfo().get(0).zoneDetails().get(0).name().get(0));
        Assertions.assertEquals("nniyopetxi",
            model.locationInfo().get(0).zoneDetails().get(0).capabilities().get(0).name());
        Assertions.assertEquals("cnrly",
            model.locationInfo().get(0).zoneDetails().get(0).capabilities().get(0).value());
        Assertions.assertEquals("mwnrdj", model.locationInfo().get(0).extendedLocations().get(0));
        Assertions.assertEquals(ExtendedLocationType.CUSTOM_LOCATION, model.locationInfo().get(0).type());
        Assertions.assertEquals("zulo", model.requiredQuotaIds().get(0));
        Assertions.assertEquals("zf", model.requiredFeatures().get(0));
        Assertions.assertEquals(1778291019, model.capacity().minimum());
        Assertions.assertEquals(1870712650, model.capacity().maximum());
        Assertions.assertEquals(1258720981, model.capacity().defaultProperty());
        Assertions.assertEquals(SkuScaleType.NONE, model.capacity().scaleType());
        Assertions.assertEquals("dvhazcvjy", model.costs().get(0).meterId());
        Assertions.assertEquals(303692628, model.costs().get(0).quantity());
        Assertions.assertEquals("wbqerzwxiytxtd", model.costs().get(0).extendedUnit());
        Assertions.assertEquals("qigijiitnspxlzde", model.capabilities().get(0).name());
        Assertions.assertEquals("ygr", model.capabilities().get(0).value());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SkuSetting model = new SkuSetting().withName("kev")
            .withTier("ltjcrspxk")
            .withSize("r")
            .withFamily("lfg")
            .withKind("nnnoytz")
            .withLocations(Arrays.asList("ewxigpxvk", "maupxvpi", "dfaifyzyzeyuube"))
            .withLocationInfo(Arrays.asList(
                new SkuLocationInfo().withLocation("zlfytoit")
                    .withZones(Arrays.asList("gvfltgvdihoynkr", "wetwkdr", "yrucpcunnuzdq", "moenodnaien"))
                    .withZoneDetails(Arrays.asList(new SkuZoneDetail().withName(Arrays.asList("ndnelqkaadlknw"))
                        .withCapabilities(Arrays.asList(new SkuCapability().withName("nniyopetxi").withValue("cnrly"),
                            new SkuCapability().withName("nucaephblkwqpat").withValue("bqsdtcjbctvi"),
                            new SkuCapability().withName("uzqymtuowog").withValue("gitsqh"),
                            new SkuCapability().withName("vbrzcdb").withValue("nfzndscxmxeat")))))
                    .withExtendedLocations(Arrays.asList("mwnrdj", "ibqbnaomhjrm", "u"))
                    .withType(ExtendedLocationType.CUSTOM_LOCATION),
                new SkuLocationInfo().withLocation("xljalfihc")
                    .withZones(Arrays.asList("bc", "nc", "exxqcwg", "xf"))
                    .withZoneDetails(
                        Arrays
                            .asList(
                                new SkuZoneDetail().withName(Arrays.asList("okzwjjzrlt", "xldzyyfytpqsix"))
                                    .withCapabilities(Arrays
                                        .asList(new SkuCapability().withName("puj").withValue("vyqlkjuvsmbmslzo"))),
                                new SkuZoneDetail()
                                    .withName(Arrays.asList("wzdbpqvybefgv", "x", "okcvtlubses"))
                                    .withCapabilities(Arrays.asList(
                                        new SkuCapability().withName("uartrhunlpiryky").withValue("ndzfqivjreuyk"))),
                                new SkuZoneDetail().withName(Arrays.asList("nwagl", "bxoeeonql", "fwmyymv"))
                                    .withCapabilities(
                                        Arrays.asList(new SkuCapability().withName("pb").withValue("fckdvez"),
                                            new SkuCapability().withName("rcssbzhddubbnq").withValue("b"),
                                            new SkuCapability().withName("h").withValue("alehpav"),
                                            new SkuCapability().withName("wugiqjti").withValue("gqgdminictteajoh")))))
                    .withExtendedLocations(Arrays.asList("spnbonhpcz", "kmktpvwxqcseh", "hkhufm", "qumq"))
                    .withType(ExtendedLocationType.NOT_SPECIFIED)))
            .withRequiredQuotaIds(Arrays.asList("zulo", "saeuzanhsfnhsenw"))
            .withRequiredFeatures(Arrays.asList("zf", "gqjclidftujwj", "ufwbeqrku"))
            .withCapacity(new SkuSettingCapacity().withMinimum(1778291019)
                .withMaximum(1870712650)
                .withDefaultProperty(1258720981)
                .withScaleType(SkuScaleType.NONE))
            .withCosts(Arrays.asList(
                new SkuCost().withMeterId("dvhazcvjy").withQuantity(303692628).withExtendedUnit("wbqerzwxiytxtd"),
                new SkuCost().withMeterId("ukvlb").withQuantity(891860577).withExtendedUnit("dstyouam"),
                new SkuCost().withMeterId("ewres").withQuantity(432107365).withExtendedUnit("egmmuteyxe")))
            .withCapabilities(Arrays.asList(new SkuCapability().withName("qigijiitnspxlzde").withValue("ygr")));
        model = BinaryData.fromObject(model).toObject(SkuSetting.class);
        Assertions.assertEquals("kev", model.name());
        Assertions.assertEquals("ltjcrspxk", model.tier());
        Assertions.assertEquals("r", model.size());
        Assertions.assertEquals("lfg", model.family());
        Assertions.assertEquals("nnnoytz", model.kind());
        Assertions.assertEquals("ewxigpxvk", model.locations().get(0));
        Assertions.assertEquals("zlfytoit", model.locationInfo().get(0).location());
        Assertions.assertEquals("gvfltgvdihoynkr", model.locationInfo().get(0).zones().get(0));
        Assertions.assertEquals("ndnelqkaadlknw", model.locationInfo().get(0).zoneDetails().get(0).name().get(0));
        Assertions.assertEquals("nniyopetxi",
            model.locationInfo().get(0).zoneDetails().get(0).capabilities().get(0).name());
        Assertions.assertEquals("cnrly",
            model.locationInfo().get(0).zoneDetails().get(0).capabilities().get(0).value());
        Assertions.assertEquals("mwnrdj", model.locationInfo().get(0).extendedLocations().get(0));
        Assertions.assertEquals(ExtendedLocationType.CUSTOM_LOCATION, model.locationInfo().get(0).type());
        Assertions.assertEquals("zulo", model.requiredQuotaIds().get(0));
        Assertions.assertEquals("zf", model.requiredFeatures().get(0));
        Assertions.assertEquals(1778291019, model.capacity().minimum());
        Assertions.assertEquals(1870712650, model.capacity().maximum());
        Assertions.assertEquals(1258720981, model.capacity().defaultProperty());
        Assertions.assertEquals(SkuScaleType.NONE, model.capacity().scaleType());
        Assertions.assertEquals("dvhazcvjy", model.costs().get(0).meterId());
        Assertions.assertEquals(303692628, model.costs().get(0).quantity());
        Assertions.assertEquals("wbqerzwxiytxtd", model.costs().get(0).extendedUnit());
        Assertions.assertEquals("qigijiitnspxlzde", model.capabilities().get(0).name());
        Assertions.assertEquals("ygr", model.capabilities().get(0).value());
    }
}
