// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.providerhub.models.ProviderRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications;
import com.azure.resourcemanager.providerhub.models.SubscriptionNotificationOperation;
import com.azure.resourcemanager.providerhub.models.SubscriptionStateOverrideAction;
import com.azure.resourcemanager.providerhub.models.SubscriptionTransitioningState;
import java.time.Duration;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ProviderRegistrationPropertiesSubscriptionLifecycleNotificationSpecificationsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ProviderRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications model = BinaryData.fromString(
            "{\"subscriptionStateOverrideActions\":[{\"state\":\"Registered\",\"action\":\"UndoSoftDelete\"}],\"softDeleteTTL\":\"PT48H21M31S\"}")
            .toObject(ProviderRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications.class);
        Assertions.assertEquals(SubscriptionTransitioningState.REGISTERED,
            model.subscriptionStateOverrideActions().get(0).state());
        Assertions.assertEquals(SubscriptionNotificationOperation.UNDO_SOFT_DELETE,
            model.subscriptionStateOverrideActions().get(0).action());
        Assertions.assertEquals(Duration.parse("PT48H21M31S"), model.softDeleteTtl());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ProviderRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications model
            = new ProviderRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications()
                .withSubscriptionStateOverrideActions(Arrays
                    .asList(new SubscriptionStateOverrideAction().withState(SubscriptionTransitioningState.REGISTERED)
                        .withAction(SubscriptionNotificationOperation.UNDO_SOFT_DELETE)))
                .withSoftDeleteTtl(Duration.parse("PT48H21M31S"));
        model = BinaryData.fromObject(model)
            .toObject(ProviderRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications.class);
        Assertions.assertEquals(SubscriptionTransitioningState.REGISTERED,
            model.subscriptionStateOverrideActions().get(0).state());
        Assertions.assertEquals(SubscriptionNotificationOperation.UNDO_SOFT_DELETE,
            model.subscriptionStateOverrideActions().get(0).action());
        Assertions.assertEquals(Duration.parse("PT48H21M31S"), model.softDeleteTtl());
    }
}
