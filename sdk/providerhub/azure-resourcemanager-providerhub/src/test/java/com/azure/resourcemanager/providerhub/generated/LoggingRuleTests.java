// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.providerhub.models.LoggingDetails;
import com.azure.resourcemanager.providerhub.models.LoggingDirections;
import com.azure.resourcemanager.providerhub.models.LoggingRule;
import com.azure.resourcemanager.providerhub.models.LoggingRuleHiddenPropertyPaths;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class LoggingRuleTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LoggingRule model = BinaryData.fromString(
            "{\"action\":\"imjm\",\"direction\":\"Response\",\"detailLevel\":\"None\",\"hiddenPropertyPaths\":{\"hiddenPathsOnRequest\":[\"ugidyjrr\",\"byao\",\"v\"],\"hiddenPathsOnResponse\":[\"sonpclhocohs\",\"kevle\",\"gz\"]}}")
            .toObject(LoggingRule.class);
        Assertions.assertEquals("imjm", model.action());
        Assertions.assertEquals(LoggingDirections.RESPONSE, model.direction());
        Assertions.assertEquals(LoggingDetails.NONE, model.detailLevel());
        Assertions.assertEquals("ugidyjrr", model.hiddenPropertyPaths().hiddenPathsOnRequest().get(0));
        Assertions.assertEquals("sonpclhocohs", model.hiddenPropertyPaths().hiddenPathsOnResponse().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LoggingRule model
            = new LoggingRule().withAction("imjm")
                .withDirection(LoggingDirections.RESPONSE)
                .withDetailLevel(LoggingDetails.NONE)
                .withHiddenPropertyPaths(new LoggingRuleHiddenPropertyPaths()
                    .withHiddenPathsOnRequest(Arrays.asList("ugidyjrr", "byao", "v"))
                    .withHiddenPathsOnResponse(Arrays.asList("sonpclhocohs", "kevle", "gz")));
        model = BinaryData.fromObject(model).toObject(LoggingRule.class);
        Assertions.assertEquals("imjm", model.action());
        Assertions.assertEquals(LoggingDirections.RESPONSE, model.direction());
        Assertions.assertEquals(LoggingDetails.NONE, model.detailLevel());
        Assertions.assertEquals("ugidyjrr", model.hiddenPropertyPaths().hiddenPathsOnRequest().get(0));
        Assertions.assertEquals("sonpclhocohs", model.hiddenPropertyPaths().hiddenPathsOnResponse().get(0));
    }
}
