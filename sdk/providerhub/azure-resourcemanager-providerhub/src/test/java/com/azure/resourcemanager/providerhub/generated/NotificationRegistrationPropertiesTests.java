// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.providerhub.models.MessageScope;
import com.azure.resourcemanager.providerhub.models.NotificationEndpoint;
import com.azure.resourcemanager.providerhub.models.NotificationMode;
import com.azure.resourcemanager.providerhub.models.NotificationRegistrationProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NotificationRegistrationPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NotificationRegistrationProperties model = BinaryData.fromString(
            "{\"notificationMode\":\"WebHook\",\"messageScope\":\"RegisteredSubscriptions\",\"includedEvents\":[\"yhko\",\"opgxedkowepb\",\"pc\"],\"notificationEndpoints\":[{\"notificationDestination\":\"wccsnjvcdwxlpqek\",\"locations\":[\"khtj\",\"y\",\"ngwfqatm\"]},{\"notificationDestination\":\"htmdvy\",\"locations\":[\"kdgszywkbirr\",\"uzhlhkjoqrv\",\"qaatjinrv\"]}],\"provisioningState\":\"Accepted\"}")
            .toObject(NotificationRegistrationProperties.class);
        Assertions.assertEquals(NotificationMode.WEB_HOOK, model.notificationMode());
        Assertions.assertEquals(MessageScope.REGISTERED_SUBSCRIPTIONS, model.messageScope());
        Assertions.assertEquals("yhko", model.includedEvents().get(0));
        Assertions.assertEquals("wccsnjvcdwxlpqek", model.notificationEndpoints().get(0).notificationDestination());
        Assertions.assertEquals("khtj", model.notificationEndpoints().get(0).locations().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NotificationRegistrationProperties model
            = new NotificationRegistrationProperties().withNotificationMode(NotificationMode.WEB_HOOK)
                .withMessageScope(MessageScope.REGISTERED_SUBSCRIPTIONS)
                .withIncludedEvents(Arrays.asList("yhko", "opgxedkowepb", "pc"))
                .withNotificationEndpoints(Arrays.asList(
                    new NotificationEndpoint().withNotificationDestination("wccsnjvcdwxlpqek")
                        .withLocations(Arrays.asList("khtj", "y", "ngwfqatm")),
                    new NotificationEndpoint().withNotificationDestination("htmdvy")
                        .withLocations(Arrays.asList("kdgszywkbirr", "uzhlhkjoqrv", "qaatjinrv"))));
        model = BinaryData.fromObject(model).toObject(NotificationRegistrationProperties.class);
        Assertions.assertEquals(NotificationMode.WEB_HOOK, model.notificationMode());
        Assertions.assertEquals(MessageScope.REGISTERED_SUBSCRIPTIONS, model.messageScope());
        Assertions.assertEquals("yhko", model.includedEvents().get(0));
        Assertions.assertEquals("wccsnjvcdwxlpqek", model.notificationEndpoints().get(0).notificationDestination());
        Assertions.assertEquals("khtj", model.notificationEndpoints().get(0).locations().get(0));
    }
}
