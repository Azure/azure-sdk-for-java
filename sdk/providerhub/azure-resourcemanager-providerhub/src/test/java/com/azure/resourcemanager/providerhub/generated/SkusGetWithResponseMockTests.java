// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.providerhub.ProviderHubManager;
import com.azure.resourcemanager.providerhub.models.ProvisioningState;
import com.azure.resourcemanager.providerhub.models.SkuResource;
import com.azure.resourcemanager.providerhub.models.SkuScaleType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SkusGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"skuSettings\":[{\"name\":\"oycblevpmc\",\"tier\":\"jy\",\"size\":\"yxlzgs\",\"family\":\"kzzltafhbzf\",\"kind\":\"vwmbjlzqsczpg\",\"locations\":[\"napfdqwowftpt\",\"uwjtks\"],\"locationInfo\":[{\"location\":\"cgqyhleseyq\"},{\"location\":\"hvyeldotj\"},{\"location\":\"dkwisw\"},{\"location\":\"kukjtasb\"}],\"requiredQuotaIds\":[\"spkxkdt\",\"fkndl\",\"vtwknvgmmbugt\"],\"requiredFeatures\":[\"tmqa\",\"kueatgroeshoy\",\"zcbyfq\"],\"capacity\":{\"minimum\":804649244,\"maximum\":597504676,\"default\":551660276,\"scaleType\":\"Automatic\"},\"costs\":[{\"meterId\":\"uvjmv\"},{\"meterId\":\"mtdwcky\"},{\"meterId\":\"roejnndl\"}],\"capabilities\":[{\"name\":\"uskbrreq\",\"value\":\"n\"},{\"name\":\"ceysfaqeg\",\"value\":\"lwryshwddkvbxgkq\"},{\"name\":\"sybwptdaca\",\"value\":\"vvlfntymtp\"}]},{\"name\":\"iwenazero\",\"tier\":\"rs\",\"size\":\"lsxkd\",\"family\":\"qapfgsdpc\",\"kind\":\"ssmzhhkuui\",\"locations\":[\"q\"],\"locationInfo\":[{\"location\":\"ekvalblhtjq\"},{\"location\":\"qyv\"}],\"requiredQuotaIds\":[\"tae\"],\"requiredFeatures\":[\"zzy\",\"ev\",\"sxivzrrryvei\"],\"capacity\":{\"minimum\":1325191964,\"maximum\":652291548,\"default\":934031835,\"scaleType\":\"Automatic\"},\"costs\":[{\"meterId\":\"fuzkaftjvvru\"},{\"meterId\":\"wigsyeipqdsm\"}],\"capabilities\":[{\"name\":\"rqgdgkkil\",\"value\":\"plkcsm\"}]}],\"provisioningState\":\"NotSpecified\"},\"id\":\"wtbbaedorvvmqf\",\"name\":\"oygbdgwumgxd\",\"type\":\"dhp\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ProviderHubManager manager = ProviderHubManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        SkuResource response
            = manager.skus().getWithResponse("jjk", "ajb", "scgdu", com.azure.core.util.Context.NONE).getValue();

        Assertions.assertEquals("oycblevpmc", response.properties().skuSettings().get(0).name());
        Assertions.assertEquals("jy", response.properties().skuSettings().get(0).tier());
        Assertions.assertEquals("yxlzgs", response.properties().skuSettings().get(0).size());
        Assertions.assertEquals("kzzltafhbzf", response.properties().skuSettings().get(0).family());
        Assertions.assertEquals("vwmbjlzqsczpg", response.properties().skuSettings().get(0).kind());
        Assertions.assertEquals("napfdqwowftpt", response.properties().skuSettings().get(0).locations().get(0));
        Assertions.assertEquals("cgqyhleseyq",
            response.properties().skuSettings().get(0).locationInfo().get(0).location());
        Assertions.assertEquals("spkxkdt", response.properties().skuSettings().get(0).requiredQuotaIds().get(0));
        Assertions.assertEquals("tmqa", response.properties().skuSettings().get(0).requiredFeatures().get(0));
        Assertions.assertEquals(804649244, response.properties().skuSettings().get(0).capacity().minimum());
        Assertions.assertEquals(597504676, response.properties().skuSettings().get(0).capacity().maximum());
        Assertions.assertEquals(551660276, response.properties().skuSettings().get(0).capacity().defaultProperty());
        Assertions.assertEquals(SkuScaleType.AUTOMATIC,
            response.properties().skuSettings().get(0).capacity().scaleType());
        Assertions.assertEquals("uvjmv", response.properties().skuSettings().get(0).costs().get(0).meterId());
        Assertions.assertEquals("uskbrreq", response.properties().skuSettings().get(0).capabilities().get(0).name());
        Assertions.assertEquals("n", response.properties().skuSettings().get(0).capabilities().get(0).value());
        Assertions.assertEquals(ProvisioningState.NOT_SPECIFIED, response.properties().provisioningState());
    }
}
