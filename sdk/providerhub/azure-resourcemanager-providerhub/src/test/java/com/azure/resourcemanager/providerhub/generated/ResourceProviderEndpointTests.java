// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.providerhub.models.FeaturesPolicy;
import com.azure.resourcemanager.providerhub.models.ResourceProviderEndpoint;
import com.azure.resourcemanager.providerhub.models.ResourceProviderEndpointFeaturesRule;
import java.time.Duration;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ResourceProviderEndpointTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ResourceProviderEndpoint model = BinaryData.fromString(
            "{\"enabled\":false,\"apiVersions\":[\"irryuzhlh\",\"joqrvqqaatj\",\"nrvgoupmfiibfgg\"],\"endpointUri\":\"ool\",\"locations\":[\"x\",\"v\",\"kkgll\"],\"requiredFeatures\":[\"ygvjayvblmh\",\"k\",\"uhbxvvy\"],\"featuresRule\":{\"requiredFeaturesPolicy\":\"Any\"},\"timeout\":\"PT216H15M8S\"}")
            .toObject(ResourceProviderEndpoint.class);
        Assertions.assertEquals(false, model.enabled());
        Assertions.assertEquals("irryuzhlh", model.apiVersions().get(0));
        Assertions.assertEquals("ool", model.endpointUri());
        Assertions.assertEquals("x", model.locations().get(0));
        Assertions.assertEquals("ygvjayvblmh", model.requiredFeatures().get(0));
        Assertions.assertEquals(FeaturesPolicy.ANY, model.featuresRule().requiredFeaturesPolicy());
        Assertions.assertEquals(Duration.parse("PT216H15M8S"), model.timeout());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ResourceProviderEndpoint model = new ResourceProviderEndpoint().withEnabled(false)
            .withApiVersions(Arrays.asList("irryuzhlh", "joqrvqqaatj", "nrvgoupmfiibfgg"))
            .withEndpointUri("ool")
            .withLocations(Arrays.asList("x", "v", "kkgll"))
            .withRequiredFeatures(Arrays.asList("ygvjayvblmh", "k", "uhbxvvy"))
            .withFeaturesRule(new ResourceProviderEndpointFeaturesRule().withRequiredFeaturesPolicy(FeaturesPolicy.ANY))
            .withTimeout(Duration.parse("PT216H15M8S"));
        model = BinaryData.fromObject(model).toObject(ResourceProviderEndpoint.class);
        Assertions.assertEquals(false, model.enabled());
        Assertions.assertEquals("irryuzhlh", model.apiVersions().get(0));
        Assertions.assertEquals("ool", model.endpointUri());
        Assertions.assertEquals("x", model.locations().get(0));
        Assertions.assertEquals("ygvjayvblmh", model.requiredFeatures().get(0));
        Assertions.assertEquals(FeaturesPolicy.ANY, model.featuresRule().requiredFeaturesPolicy());
        Assertions.assertEquals(Duration.parse("PT216H15M8S"), model.timeout());
    }
}
