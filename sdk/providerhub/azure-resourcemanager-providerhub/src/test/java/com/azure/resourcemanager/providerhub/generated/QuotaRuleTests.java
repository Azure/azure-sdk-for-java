// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.providerhub.models.LocationQuotaRule;
import com.azure.resourcemanager.providerhub.models.QuotaPolicy;
import com.azure.resourcemanager.providerhub.models.QuotaRule;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class QuotaRuleTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        QuotaRule model = BinaryData.fromString(
            "{\"quotaPolicy\":\"None\",\"locationRules\":[{\"policy\":\"None\",\"quotaId\":\"vpnazzm\",\"location\":\"runmp\"}],\"requiredFeatures\":[\"dbhrbnlankxm\",\"skpbhenbtkcxywn\",\"tnrsyn\"]}")
            .toObject(QuotaRule.class);
        Assertions.assertEquals(QuotaPolicy.NONE, model.quotaPolicy());
        Assertions.assertEquals(QuotaPolicy.NONE, model.locationRules().get(0).policy());
        Assertions.assertEquals("vpnazzm", model.locationRules().get(0).quotaId());
        Assertions.assertEquals("runmp", model.locationRules().get(0).location());
        Assertions.assertEquals("dbhrbnlankxm", model.requiredFeatures().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        QuotaRule model = new QuotaRule().withQuotaPolicy(QuotaPolicy.NONE)
            .withLocationRules(Arrays.asList(
                new LocationQuotaRule().withPolicy(QuotaPolicy.NONE).withQuotaId("vpnazzm").withLocation("runmp")))
            .withRequiredFeatures(Arrays.asList("dbhrbnlankxm", "skpbhenbtkcxywn", "tnrsyn"));
        model = BinaryData.fromObject(model).toObject(QuotaRule.class);
        Assertions.assertEquals(QuotaPolicy.NONE, model.quotaPolicy());
        Assertions.assertEquals(QuotaPolicy.NONE, model.locationRules().get(0).policy());
        Assertions.assertEquals("vpnazzm", model.locationRules().get(0).quotaId());
        Assertions.assertEquals("runmp", model.locationRules().get(0).location());
        Assertions.assertEquals("dbhrbnlankxm", model.requiredFeatures().get(0));
    }
}
