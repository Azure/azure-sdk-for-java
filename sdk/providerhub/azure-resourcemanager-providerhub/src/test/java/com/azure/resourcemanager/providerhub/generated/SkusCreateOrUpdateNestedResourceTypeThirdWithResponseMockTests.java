// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.providerhub.ProviderHubManager;
import com.azure.resourcemanager.providerhub.fluent.models.SkuResourceInner;
import com.azure.resourcemanager.providerhub.models.SkuCapability;
import com.azure.resourcemanager.providerhub.models.SkuCost;
import com.azure.resourcemanager.providerhub.models.SkuLocationInfo;
import com.azure.resourcemanager.providerhub.models.SkuResource;
import com.azure.resourcemanager.providerhub.models.SkuResourceProperties;
import com.azure.resourcemanager.providerhub.models.SkuScaleType;
import com.azure.resourcemanager.providerhub.models.SkuSetting;
import com.azure.resourcemanager.providerhub.models.SkuSettingCapacity;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SkusCreateOrUpdateNestedResourceTypeThirdWithResponseMockTests {
    @Test
    public void testCreateOrUpdateNestedResourceTypeThirdWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"skuSettings\":[{\"name\":\"orssatfyb\",\"tier\":\"ufdmxuq\",\"size\":\"qna\",\"family\":\"tuxvzfqayopbt\",\"kind\":\"xhgvbhxmndztgsq\",\"locations\":[\"qm\",\"rxneibpgbrhbj\",\"q\"],\"locationInfo\":[{\"location\":\"qnm\"},{\"location\":\"tpuwnnohmmzngocf\"},{\"location\":\"juypwyiulaynosu\"}],\"requiredQuotaIds\":[\"haxttpf\",\"mwgsghq\"],\"requiredFeatures\":[\"mlddauqmllfe\",\"thxuarigrjdl\",\"lkqhvkrbzkua\",\"taxklpruu\"],\"capacity\":{\"minimum\":1630105143,\"maximum\":208213223,\"default\":1570353333,\"scaleType\":\"Automatic\"},\"costs\":[{\"meterId\":\"scksgfyyskye\"},{\"meterId\":\"gafxczvf\"},{\"meterId\":\"ckwrtw\"}],\"capabilities\":[{\"name\":\"yveszr\",\"value\":\"lhpdhwynctaczcnj\"},{\"name\":\"mbbfnv\",\"value\":\"x\"},{\"name\":\"tzo\",\"value\":\"nkrtikl\"}]},{\"name\":\"mn\",\"tier\":\"qlcoqksyiibhyx\",\"size\":\"gbudav\",\"family\":\"orbccqcdhth\",\"kind\":\"vlirknuc\",\"locations\":[\"wrdtnagzlgpy\",\"ixihzqj\"],\"locationInfo\":[{\"location\":\"muydqfttk\"},{\"location\":\"cybdueurgm\"},{\"location\":\"dcpks\"}],\"requiredQuotaIds\":[\"jermhzic\",\"bfdjhyaaknyukibx\",\"glhphzwx\",\"tej\"],\"requiredFeatures\":[\"lhvtozyagj\",\"nxkbylhyyxgf\",\"klvqzrwtrdgscn\"],\"capacity\":{\"minimum\":1997607593,\"maximum\":768940593,\"default\":1170825328,\"scaleType\":\"Automatic\"},\"costs\":[{\"meterId\":\"wmezyohxp\"},{\"meterId\":\"hceopvkvtwf\"},{\"meterId\":\"esobpbokhmm\"},{\"meterId\":\"cdyarnggcjfwblqh\"}],\"capabilities\":[{\"name\":\"smcolmugpy\",\"value\":\"aosd\"},{\"name\":\"l\",\"value\":\"wzxeygzvtyevjhu\"},{\"name\":\"nobguqisqsqkpdmi\",\"value\":\"y\"},{\"name\":\"pnml\",\"value\":\"iqcpszpmcvq\"}]},{\"name\":\"vrdmvxyrxdh\",\"tier\":\"qojbxao\",\"size\":\"gbzxmbtplefoioy\",\"family\":\"oxznvgvd\",\"kind\":\"uuvdawsx\",\"locations\":[\"zbknimxlpnerxrz\",\"tylcu\",\"za\"],\"locationInfo\":[{\"location\":\"b\"},{\"location\":\"qaeht\"}],\"requiredQuotaIds\":[\"mbnvynfaooeacted\",\"glskakddi\"],\"requiredFeatures\":[\"zl\",\"rqm\",\"lpbyxroiduyq\",\"pffmnoii\"],\"capacity\":{\"minimum\":1789439897,\"maximum\":1903232402,\"default\":1148960374,\"scaleType\":\"Manual\"},\"costs\":[{\"meterId\":\"a\"},{\"meterId\":\"xrdsjrholuqwg\"}],\"capabilities\":[{\"name\":\"xhdod\",\"value\":\"jwyblvtbdmvsb\"},{\"name\":\"idaelqpvekmkwjfb\",\"value\":\"tlo\"},{\"name\":\"gdusxurs\",\"value\":\"ivuxcjkcoqwczs\"}]}],\"provisioningState\":\"Failed\"},\"id\":\"izfwihvaangqt\",\"name\":\"hjrfdmfdvbbaex\",\"type\":\"jfwtgdfkkaui\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ProviderHubManager manager = ProviderHubManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        SkuResource response = manager.skus()
            .createOrUpdateNestedResourceTypeThirdWithResponse("xfkjqutibh", "enntrvrkpsabdux", "zmlghny", "v", "pye",
                "ukppdixqbo",
                new SkuResourceInner().withProperties(
                    new SkuResourceProperties().withSkuSettings(Arrays.asList(new SkuSetting().withName("hhyq")
                        .withTier("gatxgrznmginmtsd")
                        .withSize("chwkib")
                        .withFamily("jymncjcagai")
                        .withKind("cqzoofjnqjsve")
                        .withLocations(Arrays.asList("htleberpyljek", "fqnwjjqx", "wkdnjrxgkrhwiehy"))
                        .withLocationInfo(Arrays.asList(new SkuLocationInfo().withLocation("owawonoe"),
                            new SkuLocationInfo().withLocation("r"), new SkuLocationInfo().withLocation("uqlhfwaf"),
                            new SkuLocationInfo().withLocation("jzmpy")))
                        .withRequiredQuotaIds(Arrays.asList("yfazbkocb", "gvthrmxkbcjww", "xomraw"))
                        .withRequiredFeatures(Arrays.asList("eboozflyacagaed", "oiqclmgdtwgab"))
                        .withCapacity(new SkuSettingCapacity().withMinimum(3591582)
                            .withMaximum(441570136)
                            .withDefaultProperty(729324542)
                            .withScaleType(SkuScaleType.AUTOMATIC))
                        .withCosts(Arrays.asList(new SkuCost().withMeterId("ooyvhtuqbpeln"),
                            new SkuCost().withMeterId("ibncgagdvcd"), new SkuCost().withMeterId("hftzbpyfao")))
                        .withCapabilities(Arrays.asList(new SkuCapability().withName("phtnc").withValue("mhjobzr")))))),
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("orssatfyb", response.properties().skuSettings().get(0).name());
        Assertions.assertEquals("ufdmxuq", response.properties().skuSettings().get(0).tier());
        Assertions.assertEquals("qna", response.properties().skuSettings().get(0).size());
        Assertions.assertEquals("tuxvzfqayopbt", response.properties().skuSettings().get(0).family());
        Assertions.assertEquals("xhgvbhxmndztgsq", response.properties().skuSettings().get(0).kind());
        Assertions.assertEquals("qm", response.properties().skuSettings().get(0).locations().get(0));
        Assertions.assertEquals("qnm", response.properties().skuSettings().get(0).locationInfo().get(0).location());
        Assertions.assertEquals("haxttpf", response.properties().skuSettings().get(0).requiredQuotaIds().get(0));
        Assertions.assertEquals("mlddauqmllfe", response.properties().skuSettings().get(0).requiredFeatures().get(0));
        Assertions.assertEquals(1630105143, response.properties().skuSettings().get(0).capacity().minimum());
        Assertions.assertEquals(208213223, response.properties().skuSettings().get(0).capacity().maximum());
        Assertions.assertEquals(1570353333, response.properties().skuSettings().get(0).capacity().defaultProperty());
        Assertions.assertEquals(SkuScaleType.AUTOMATIC,
            response.properties().skuSettings().get(0).capacity().scaleType());
        Assertions.assertEquals("scksgfyyskye", response.properties().skuSettings().get(0).costs().get(0).meterId());
        Assertions.assertEquals("yveszr", response.properties().skuSettings().get(0).capabilities().get(0).name());
        Assertions.assertEquals("lhpdhwynctaczcnj",
            response.properties().skuSettings().get(0).capabilities().get(0).value());
    }
}
