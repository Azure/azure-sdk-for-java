// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.providerhub.fluent.models.NotificationRegistrationInner;
import com.azure.resourcemanager.providerhub.models.MessageScope;
import com.azure.resourcemanager.providerhub.models.NotificationEndpoint;
import com.azure.resourcemanager.providerhub.models.NotificationMode;
import com.azure.resourcemanager.providerhub.models.NotificationRegistrationProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NotificationRegistrationInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NotificationRegistrationInner model = BinaryData.fromString(
            "{\"properties\":{\"notificationMode\":\"WebHook\",\"messageScope\":\"RegisteredSubscriptions\",\"includedEvents\":[\"dkfw\",\"nwcvtbvkayhmtnv\",\"qiatkzwpcnp\",\"zcjaesgvvsccy\"],\"notificationEndpoints\":[{\"notificationDestination\":\"qfhwyg\",\"locations\":[\"dnkfx\",\"semdwzrmu\",\"apfcqdpsq\"]}],\"provisioningState\":\"Creating\"},\"id\":\"svuo\",\"name\":\"mgccelvezrypq\",\"type\":\"mfe\"}")
            .toObject(NotificationRegistrationInner.class);
        Assertions.assertEquals(NotificationMode.WEB_HOOK, model.properties().notificationMode());
        Assertions.assertEquals(MessageScope.REGISTERED_SUBSCRIPTIONS, model.properties().messageScope());
        Assertions.assertEquals("dkfw", model.properties().includedEvents().get(0));
        Assertions.assertEquals("qfhwyg", model.properties().notificationEndpoints().get(0).notificationDestination());
        Assertions.assertEquals("dnkfx", model.properties().notificationEndpoints().get(0).locations().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NotificationRegistrationInner model = new NotificationRegistrationInner()
            .withProperties(new NotificationRegistrationProperties().withNotificationMode(NotificationMode.WEB_HOOK)
                .withMessageScope(MessageScope.REGISTERED_SUBSCRIPTIONS)
                .withIncludedEvents(Arrays.asList("dkfw", "nwcvtbvkayhmtnv", "qiatkzwpcnp", "zcjaesgvvsccy"))
                .withNotificationEndpoints(
                    Arrays.asList(new NotificationEndpoint().withNotificationDestination("qfhwyg")
                        .withLocations(Arrays.asList("dnkfx", "semdwzrmu", "apfcqdpsq")))));
        model = BinaryData.fromObject(model).toObject(NotificationRegistrationInner.class);
        Assertions.assertEquals(NotificationMode.WEB_HOOK, model.properties().notificationMode());
        Assertions.assertEquals(MessageScope.REGISTERED_SUBSCRIPTIONS, model.properties().messageScope());
        Assertions.assertEquals("dkfw", model.properties().includedEvents().get(0));
        Assertions.assertEquals("qfhwyg", model.properties().notificationEndpoints().get(0).notificationDestination());
        Assertions.assertEquals("dnkfx", model.properties().notificationEndpoints().get(0).locations().get(0));
    }
}
