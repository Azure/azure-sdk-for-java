// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.providerhub.models.ExtensionOptionType;
import com.azure.resourcemanager.providerhub.models.ResourceTypeExtensionOptions;
import com.azure.resourcemanager.providerhub.models.ResourceTypeExtensionOptionsResourceCreationBegin;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ResourceTypeExtensionOptionsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ResourceTypeExtensionOptions model = BinaryData.fromString(
            "{\"resourceCreationBegin\":{\"request\":[\"DoNotMergeExistingReadOnlyAndSecretProperties\",\"DoNotMergeExistingReadOnlyAndSecretProperties\",\"NotSpecified\",\"IncludeInternalMetadata\"],\"response\":[\"IncludeInternalMetadata\"]}}")
            .toObject(ResourceTypeExtensionOptions.class);
        Assertions.assertEquals(ExtensionOptionType.DO_NOT_MERGE_EXISTING_READ_ONLY_AND_SECRET_PROPERTIES,
            model.resourceCreationBegin().request().get(0));
        Assertions.assertEquals(ExtensionOptionType.INCLUDE_INTERNAL_METADATA,
            model.resourceCreationBegin().response().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ResourceTypeExtensionOptions model = new ResourceTypeExtensionOptions()
            .withResourceCreationBegin(new ResourceTypeExtensionOptionsResourceCreationBegin()
                .withRequest(Arrays.asList(ExtensionOptionType.DO_NOT_MERGE_EXISTING_READ_ONLY_AND_SECRET_PROPERTIES,
                    ExtensionOptionType.DO_NOT_MERGE_EXISTING_READ_ONLY_AND_SECRET_PROPERTIES,
                    ExtensionOptionType.NOT_SPECIFIED, ExtensionOptionType.INCLUDE_INTERNAL_METADATA))
                .withResponse(Arrays.asList(ExtensionOptionType.INCLUDE_INTERNAL_METADATA)));
        model = BinaryData.fromObject(model).toObject(ResourceTypeExtensionOptions.class);
        Assertions.assertEquals(ExtensionOptionType.DO_NOT_MERGE_EXISTING_READ_ONLY_AND_SECRET_PROPERTIES,
            model.resourceCreationBegin().request().get(0));
        Assertions.assertEquals(ExtensionOptionType.INCLUDE_INTERNAL_METADATA,
            model.resourceCreationBegin().response().get(0));
    }
}
