// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.providerhub.models.EndpointInformation;
import com.azure.resourcemanager.providerhub.models.FilterRule;
import com.azure.resourcemanager.providerhub.models.NotificationEndpointType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class FilterRuleTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FilterRule model = BinaryData.fromString(
            "{\"filterQuery\":\"xaqwoochcbonqv\",\"endpointInformation\":[{\"endpoint\":\"rxnjeaseipheofl\",\"endpointType\":\"Webhook\",\"schemaVersion\":\"y\"},{\"endpoint\":\"nj\",\"endpointType\":\"Eventhub\",\"schemaVersion\":\"tgrhpdjpjumas\"},{\"endpoint\":\"zj\",\"endpointType\":\"Webhook\",\"schemaVersion\":\"gual\"},{\"endpoint\":\"xxhejjzzvd\",\"endpointType\":\"Eventhub\",\"schemaVersion\":\"dslfhotwmcy\"}]}")
            .toObject(FilterRule.class);
        Assertions.assertEquals("xaqwoochcbonqv", model.filterQuery());
        Assertions.assertEquals("rxnjeaseipheofl", model.endpointInformation().get(0).endpoint());
        Assertions.assertEquals(NotificationEndpointType.WEBHOOK, model.endpointInformation().get(0).endpointType());
        Assertions.assertEquals("y", model.endpointInformation().get(0).schemaVersion());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FilterRule model = new FilterRule().withFilterQuery("xaqwoochcbonqv")
            .withEndpointInformation(Arrays.asList(
                new EndpointInformation().withEndpoint("rxnjeaseipheofl")
                    .withEndpointType(NotificationEndpointType.WEBHOOK)
                    .withSchemaVersion("y"),
                new EndpointInformation().withEndpoint("nj")
                    .withEndpointType(NotificationEndpointType.EVENTHUB)
                    .withSchemaVersion("tgrhpdjpjumas"),
                new EndpointInformation().withEndpoint("zj")
                    .withEndpointType(NotificationEndpointType.WEBHOOK)
                    .withSchemaVersion("gual"),
                new EndpointInformation().withEndpoint("xxhejjzzvd")
                    .withEndpointType(NotificationEndpointType.EVENTHUB)
                    .withSchemaVersion("dslfhotwmcy")));
        model = BinaryData.fromObject(model).toObject(FilterRule.class);
        Assertions.assertEquals("xaqwoochcbonqv", model.filterQuery());
        Assertions.assertEquals("rxnjeaseipheofl", model.endpointInformation().get(0).endpoint());
        Assertions.assertEquals(NotificationEndpointType.WEBHOOK, model.endpointInformation().get(0).endpointType());
        Assertions.assertEquals("y", model.endpointInformation().get(0).schemaVersion());
    }
}
