// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.providerhub.models.EndpointInformation;
import com.azure.resourcemanager.providerhub.models.FilterRule;
import com.azure.resourcemanager.providerhub.models.ResourceProviderManifestPropertiesNotificationSettings;
import com.azure.resourcemanager.providerhub.models.SubscriberSetting;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ResourceProviderManifestPropertiesNotificationSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ResourceProviderManifestPropertiesNotificationSettings model = BinaryData.fromString(
            "{\"subscriberSettings\":[{\"filterRules\":[{\"filterQuery\":\"vqdra\",\"endpointInformation\":[{},{}]},{\"filterQuery\":\"big\",\"endpointInformation\":[{},{},{}]}]}]}")
            .toObject(ResourceProviderManifestPropertiesNotificationSettings.class);
        Assertions.assertEquals("vqdra", model.subscriberSettings().get(0).filterRules().get(0).filterQuery());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ResourceProviderManifestPropertiesNotificationSettings model
            = new ResourceProviderManifestPropertiesNotificationSettings()
                .withSubscriberSettings(
                    Arrays
                        .asList(
                            new SubscriberSetting()
                                .withFilterRules(
                                    Arrays
                                        .asList(
                                            new FilterRule().withFilterQuery("vqdra")
                                                .withEndpointInformation(Arrays.asList(new EndpointInformation(),
                                                    new EndpointInformation())),
                                            new FilterRule().withFilterQuery("big")
                                                .withEndpointInformation(Arrays.asList(new EndpointInformation(),
                                                    new EndpointInformation(), new EndpointInformation()))))));
        model = BinaryData.fromObject(model).toObject(ResourceProviderManifestPropertiesNotificationSettings.class);
        Assertions.assertEquals("vqdra", model.subscriberSettings().get(0).filterRules().get(0).filterQuery());
    }
}
