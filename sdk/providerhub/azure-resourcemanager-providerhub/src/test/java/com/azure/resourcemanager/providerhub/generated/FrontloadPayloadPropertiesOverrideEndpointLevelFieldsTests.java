// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.providerhub.models.EndpointType;
import com.azure.resourcemanager.providerhub.models.FeaturesPolicy;
import com.azure.resourcemanager.providerhub.models.FrontloadPayloadPropertiesOverrideEndpointLevelFields;
import com.azure.resourcemanager.providerhub.models.ResourceTypeEndpointBaseDstsConfiguration;
import com.azure.resourcemanager.providerhub.models.ResourceTypeEndpointBaseFeaturesRule;
import java.time.Duration;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class FrontloadPayloadPropertiesOverrideEndpointLevelFieldsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FrontloadPayloadPropertiesOverrideEndpointLevelFields model = BinaryData.fromString(
            "{\"enabled\":false,\"apiVersions\":[\"k\"],\"endpointUri\":\"ywsxvjabjqqaxu\",\"locations\":[\"y\"],\"requiredFeatures\":[\"nudn\",\"oabhjxwxqweuip\",\"pvksmit\"],\"featuresRule\":{\"requiredFeaturesPolicy\":\"All\"},\"timeout\":\"PT167H40M14S\",\"endpointType\":\"NotSpecified\",\"dstsConfiguration\":{\"serviceName\":\"tltcl\",\"serviceDnsName\":\"dpqgfhyrfr\"},\"skuLink\":\"kkld\",\"apiVersion\":\"rcwfcmfcnrjajq\",\"zones\":[\"txjtielnzqgx\",\"gfb\"]}")
            .toObject(FrontloadPayloadPropertiesOverrideEndpointLevelFields.class);
        Assertions.assertFalse(model.enabled());
        Assertions.assertEquals("k", model.apiVersions().get(0));
        Assertions.assertEquals("ywsxvjabjqqaxu", model.endpointUri());
        Assertions.assertEquals("y", model.locations().get(0));
        Assertions.assertEquals("nudn", model.requiredFeatures().get(0));
        Assertions.assertEquals(FeaturesPolicy.ALL, model.featuresRule().requiredFeaturesPolicy());
        Assertions.assertEquals(Duration.parse("PT167H40M14S"), model.timeout());
        Assertions.assertEquals(EndpointType.NOT_SPECIFIED, model.endpointType());
        Assertions.assertEquals("tltcl", model.dstsConfiguration().serviceName());
        Assertions.assertEquals("dpqgfhyrfr", model.dstsConfiguration().serviceDnsName());
        Assertions.assertEquals("kkld", model.skuLink());
        Assertions.assertEquals("rcwfcmfcnrjajq", model.apiVersion());
        Assertions.assertEquals("txjtielnzqgx", model.zones().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FrontloadPayloadPropertiesOverrideEndpointLevelFields model
            = new FrontloadPayloadPropertiesOverrideEndpointLevelFields().withEnabled(false)
                .withApiVersions(Arrays.asList("k"))
                .withEndpointUri("ywsxvjabjqqaxu")
                .withLocations(Arrays.asList("y"))
                .withRequiredFeatures(Arrays.asList("nudn", "oabhjxwxqweuip", "pvksmit"))
                .withFeaturesRule(
                    new ResourceTypeEndpointBaseFeaturesRule().withRequiredFeaturesPolicy(FeaturesPolicy.ALL))
                .withTimeout(Duration.parse("PT167H40M14S"))
                .withEndpointType(EndpointType.NOT_SPECIFIED)
                .withDstsConfiguration(new ResourceTypeEndpointBaseDstsConfiguration().withServiceName("tltcl")
                    .withServiceDnsName("dpqgfhyrfr"))
                .withSkuLink("kkld")
                .withApiVersion("rcwfcmfcnrjajq")
                .withZones(Arrays.asList("txjtielnzqgx", "gfb"));
        model = BinaryData.fromObject(model).toObject(FrontloadPayloadPropertiesOverrideEndpointLevelFields.class);
        Assertions.assertFalse(model.enabled());
        Assertions.assertEquals("k", model.apiVersions().get(0));
        Assertions.assertEquals("ywsxvjabjqqaxu", model.endpointUri());
        Assertions.assertEquals("y", model.locations().get(0));
        Assertions.assertEquals("nudn", model.requiredFeatures().get(0));
        Assertions.assertEquals(FeaturesPolicy.ALL, model.featuresRule().requiredFeaturesPolicy());
        Assertions.assertEquals(Duration.parse("PT167H40M14S"), model.timeout());
        Assertions.assertEquals(EndpointType.NOT_SPECIFIED, model.endpointType());
        Assertions.assertEquals("tltcl", model.dstsConfiguration().serviceName());
        Assertions.assertEquals("dpqgfhyrfr", model.dstsConfiguration().serviceDnsName());
        Assertions.assertEquals("kkld", model.skuLink());
        Assertions.assertEquals("rcwfcmfcnrjajq", model.apiVersion());
        Assertions.assertEquals("txjtielnzqgx", model.zones().get(0));
    }
}
