// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.providerhub.fluent.models.DefaultRolloutInner;
import com.azure.resourcemanager.providerhub.fluent.models.ResourceTypeRegistrationInner;
import com.azure.resourcemanager.providerhub.models.DefaultRolloutArrayResponseWithContinuation;
import com.azure.resourcemanager.providerhub.models.DefaultRolloutProperties;
import com.azure.resourcemanager.providerhub.models.DefaultRolloutPropertiesSpecification;
import com.azure.resourcemanager.providerhub.models.DefaultRolloutPropertiesStatus;
import com.azure.resourcemanager.providerhub.models.DefaultRolloutSpecificationAutoProvisionConfig;
import com.azure.resourcemanager.providerhub.models.DefaultRolloutSpecificationCanary;
import com.azure.resourcemanager.providerhub.models.DefaultRolloutSpecificationExpeditedRollout;
import com.azure.resourcemanager.providerhub.models.DefaultRolloutSpecificationHighTraffic;
import com.azure.resourcemanager.providerhub.models.DefaultRolloutSpecificationLowTraffic;
import com.azure.resourcemanager.providerhub.models.DefaultRolloutSpecificationMediumTraffic;
import com.azure.resourcemanager.providerhub.models.DefaultRolloutSpecificationProviderRegistration;
import com.azure.resourcemanager.providerhub.models.DefaultRolloutSpecificationRestOfTheWorldGroupOne;
import com.azure.resourcemanager.providerhub.models.DefaultRolloutSpecificationRestOfTheWorldGroupTwo;
import com.azure.resourcemanager.providerhub.models.DefaultRolloutStatusManifestCheckinStatus;
import com.azure.resourcemanager.providerhub.models.ExtendedErrorInfo;
import com.azure.resourcemanager.providerhub.models.ProviderRegistrationKind;
import com.azure.resourcemanager.providerhub.models.ProviderRegistrationProperties;
import com.azure.resourcemanager.providerhub.models.SubscriptionReregistrationResult;
import com.azure.resourcemanager.providerhub.models.TrafficRegionCategory;
import java.time.Duration;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class DefaultRolloutArrayResponseWithContinuationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DefaultRolloutArrayResponseWithContinuation model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"provisioningState\":\"Running\",\"specification\":{\"expeditedRollout\":{\"enabled\":true},\"canary\":{\"skipRegions\":[\"ooaojkniodkooebw\",\"ujhemmsbvdkcrodt\",\"infwjlfltkacjve\",\"kdlfoa\"],\"regions\":[\"kfpagao\",\"pulpqblylsyxk\"]},\"lowTraffic\":{\"waitDuration\":\"PT102H52M35S\",\"regions\":[\"r\",\"tiagx\",\"dszue\"]},\"mediumTraffic\":{\"waitDuration\":\"PT26H50M50S\",\"regions\":[\"f\",\"beyvpnqicvinvkjj\",\"dxrbuukzcle\",\"yhmlwpaztzp\"]},\"highTraffic\":{\"waitDuration\":\"PT222H47M41S\",\"regions\":[\"wyfzqwhxxbuyqa\",\"zfeqztppri\",\"lxorjaltolmncws\",\"bqwcsdbnwdcf\"]},\"restOfTheWorldGroupOne\":{\"waitDuration\":\"PT145H44M40S\",\"regions\":[\"fuvglsbjjca\",\"vxb\",\"t\"]},\"restOfTheWorldGroupTwo\":{\"waitDuration\":\"PT148H6M35S\",\"regions\":[\"cormr\",\"xqtvcofu\",\"f\",\"vkg\"]},\"providerRegistration\":{\"properties\":{},\"kind\":\"Direct\",\"id\":\"nnqvsa\",\"name\":\"nqntorudsgsahm\",\"type\":\"yc\"},\"resourceTypeRegistrations\":[{\"id\":\"uwjuetaeburuvdmo\",\"name\":\"s\",\"type\":\"zlxwabmqoefkifr\"},{\"id\":\"tpuqujmq\",\"name\":\"gkfbtndoaong\",\"type\":\"jcntuj\"},{\"id\":\"tcje\",\"name\":\"ftwwaezkojvdc\",\"type\":\"zfoqouicybxar\"}],\"autoProvisionConfig\":{\"storage\":false,\"resourceGraph\":false}},\"status\":{\"nextTrafficRegion\":\"HighTraffic\",\"nextTrafficRegionScheduledTime\":\"2021-07-04T02:33:20Z\",\"subscriptionReregistrationResult\":\"NotApplicable\",\"manifestCheckinStatus\":{\"isCheckedIn\":true,\"statusMessage\":\"oamciodh\",\"pullRequest\":\"azxkhnzbonlwnto\",\"commitId\":\"okdwb\"},\"completedRegions\":[\"szzcmrvexztv\",\"t\",\"gsfraoyzkoow\",\"lmnguxaw\"],\"failedOrSkippedRegions\":{\"dsyuuximerqfob\":{},\"yznkby\":{},\"utwpfhp\":{},\"gmhrskdsnfdsdoak\":{}}}},\"id\":\"dlmkkzevdl\",\"name\":\"ewpusdsttwvogvb\",\"type\":\"ejdcngqqmoakuf\"},{\"properties\":{\"provisioningState\":\"Succeeded\",\"specification\":{\"expeditedRollout\":{\"enabled\":true},\"canary\":{\"skipRegions\":[\"wae\",\"u\",\"zkopb\"],\"regions\":[\"rfdwoyu\",\"hziuiefozbhdms\"]},\"lowTraffic\":{\"waitDuration\":\"PT85H19M36S\",\"regions\":[\"oftrmaequia\",\"xicslfao\"]},\"mediumTraffic\":{\"waitDuration\":\"PT229H19M25S\",\"regions\":[\"lhalnswh\",\"csphkaiv\",\"itqscywuggwoluhc\"]},\"highTraffic\":{\"waitDuration\":\"PT226H33M2S\",\"regions\":[\"ai\",\"sbrgz\",\"wmsweypqwd\",\"ggicccnxqhue\"]},\"restOfTheWorldGroupOne\":{\"waitDuration\":\"PT83H7M16S\",\"regions\":[\"stvlzywemhzrnc\",\"dtclusiypb\",\"fgytguslfeadcyg\"]},\"restOfTheWorldGroupTwo\":{\"waitDuration\":\"PT176H30M12S\",\"regions\":[\"jhzi\",\"xgfpelolppv\"]},\"providerRegistration\":{\"properties\":{},\"kind\":\"Hybrid\",\"id\":\"ujzra\",\"name\":\"htwdwrftswibyrcd\",\"type\":\"bhshfwpracstwity\"},\"resourceTypeRegistrations\":[{\"id\":\"vxccedcp\",\"name\":\"md\",\"type\":\"odn\"},{\"id\":\"zxltjcvn\",\"name\":\"ltiugcxnavv\",\"type\":\"xqi\"},{\"id\":\"y\",\"name\":\"unyowxwl\",\"type\":\"djrkvfgbvfvpd\"}],\"autoProvisionConfig\":{\"storage\":true,\"resourceGraph\":true}},\"status\":{\"nextTrafficRegion\":\"NotSpecified\",\"nextTrafficRegionScheduledTime\":\"2021-04-19T06:09:38Z\",\"subscriptionReregistrationResult\":\"ForcedUpdate\",\"manifestCheckinStatus\":{\"isCheckedIn\":false,\"statusMessage\":\"ibdeibq\",\"pullRequest\":\"qkgh\",\"commitId\":\"ndzwmkrefa\"},\"completedRegions\":[\"orwkqnyh\",\"b\",\"j\",\"jivfxzsjabib\"],\"failedOrSkippedRegions\":{\"tawfsdjpvkvp\":{},\"jxbkzbzkdvn\":{},\"jabudurgkakmo\":{}}}},\"id\":\"hjjklff\",\"name\":\"mouwqlgzrfzeey\",\"type\":\"bizikayuhq\"}],\"nextLink\":\"jbsybbqw\"}")
            .toObject(DefaultRolloutArrayResponseWithContinuation.class);
        Assertions.assertTrue(model.value().get(0).properties().specification().expeditedRollout().enabled());
        Assertions.assertEquals("ooaojkniodkooebw",
            model.value().get(0).properties().specification().canary().skipRegions().get(0));
        Assertions.assertEquals("kfpagao", model.value().get(0).properties().specification().canary().regions().get(0));
        Assertions.assertEquals("r", model.value().get(0).properties().specification().lowTraffic().regions().get(0));
        Assertions.assertEquals(Duration.parse("PT102H52M35S"),
            model.value().get(0).properties().specification().lowTraffic().waitDuration());
        Assertions.assertEquals("f",
            model.value().get(0).properties().specification().mediumTraffic().regions().get(0));
        Assertions.assertEquals(Duration.parse("PT26H50M50S"),
            model.value().get(0).properties().specification().mediumTraffic().waitDuration());
        Assertions.assertEquals("wyfzqwhxxbuyqa",
            model.value().get(0).properties().specification().highTraffic().regions().get(0));
        Assertions.assertEquals(Duration.parse("PT222H47M41S"),
            model.value().get(0).properties().specification().highTraffic().waitDuration());
        Assertions.assertEquals("fuvglsbjjca",
            model.value().get(0).properties().specification().restOfTheWorldGroupOne().regions().get(0));
        Assertions.assertEquals(Duration.parse("PT145H44M40S"),
            model.value().get(0).properties().specification().restOfTheWorldGroupOne().waitDuration());
        Assertions.assertEquals("cormr",
            model.value().get(0).properties().specification().restOfTheWorldGroupTwo().regions().get(0));
        Assertions.assertEquals(Duration.parse("PT148H6M35S"),
            model.value().get(0).properties().specification().restOfTheWorldGroupTwo().waitDuration());
        Assertions.assertEquals(ProviderRegistrationKind.DIRECT,
            model.value().get(0).properties().specification().providerRegistration().kind());
        Assertions.assertFalse(model.value().get(0).properties().specification().autoProvisionConfig().storage());
        Assertions.assertFalse(model.value().get(0).properties().specification().autoProvisionConfig().resourceGraph());
        Assertions.assertEquals("szzcmrvexztv", model.value().get(0).properties().status().completedRegions().get(0));
        Assertions.assertEquals(TrafficRegionCategory.HIGH_TRAFFIC,
            model.value().get(0).properties().status().nextTrafficRegion());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-04T02:33:20Z"),
            model.value().get(0).properties().status().nextTrafficRegionScheduledTime());
        Assertions.assertEquals(SubscriptionReregistrationResult.NOT_APPLICABLE,
            model.value().get(0).properties().status().subscriptionReregistrationResult());
        Assertions.assertTrue(model.value().get(0).properties().status().manifestCheckinStatus().isCheckedIn());
        Assertions.assertEquals("oamciodh",
            model.value().get(0).properties().status().manifestCheckinStatus().statusMessage());
        Assertions.assertEquals("azxkhnzbonlwnto",
            model.value().get(0).properties().status().manifestCheckinStatus().pullRequest());
        Assertions.assertEquals("okdwb", model.value().get(0).properties().status().manifestCheckinStatus().commitId());
        Assertions.assertEquals("jbsybbqw", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DefaultRolloutArrayResponseWithContinuation model
            = new DefaultRolloutArrayResponseWithContinuation()
                .withValue(
                    Arrays.asList(
                        new DefaultRolloutInner().withProperties(new DefaultRolloutProperties()
                            .withSpecification(new DefaultRolloutPropertiesSpecification()
                                .withExpeditedRollout(
                                    new DefaultRolloutSpecificationExpeditedRollout().withEnabled(true))
                                .withCanary(new DefaultRolloutSpecificationCanary()
                                    .withSkipRegions(Arrays.asList("ooaojkniodkooebw", "ujhemmsbvdkcrodt",
                                        "infwjlfltkacjve", "kdlfoa"))
                                    .withRegions(Arrays.asList("kfpagao", "pulpqblylsyxk")))
                                .withLowTraffic(new DefaultRolloutSpecificationLowTraffic()
                                    .withRegions(Arrays.asList("r", "tiagx", "dszue"))
                                    .withWaitDuration(Duration.parse("PT102H52M35S")))
                                .withMediumTraffic(new DefaultRolloutSpecificationMediumTraffic()
                                    .withRegions(Arrays.asList("f", "beyvpnqicvinvkjj", "dxrbuukzcle", "yhmlwpaztzp"))
                                    .withWaitDuration(Duration.parse("PT26H50M50S")))
                                .withHighTraffic(new DefaultRolloutSpecificationHighTraffic()
                                    .withRegions(Arrays.asList("wyfzqwhxxbuyqa", "zfeqztppri", "lxorjaltolmncws",
                                        "bqwcsdbnwdcf"))
                                    .withWaitDuration(Duration.parse("PT222H47M41S")))
                                .withRestOfTheWorldGroupOne(new DefaultRolloutSpecificationRestOfTheWorldGroupOne()
                                    .withRegions(Arrays.asList("fuvglsbjjca", "vxb", "t"))
                                    .withWaitDuration(Duration.parse("PT145H44M40S")))
                                .withRestOfTheWorldGroupTwo(new DefaultRolloutSpecificationRestOfTheWorldGroupTwo()
                                    .withRegions(Arrays.asList("cormr", "xqtvcofu", "f", "vkg"))
                                    .withWaitDuration(Duration.parse("PT148H6M35S")))
                                .withProviderRegistration(new DefaultRolloutSpecificationProviderRegistration()
                                    .withProperties(new ProviderRegistrationProperties())
                                    .withKind(ProviderRegistrationKind.DIRECT))
                                .withResourceTypeRegistrations(Arrays.asList(new ResourceTypeRegistrationInner(),
                                    new ResourceTypeRegistrationInner(), new ResourceTypeRegistrationInner()))
                                .withAutoProvisionConfig(
                                    new DefaultRolloutSpecificationAutoProvisionConfig().withStorage(false)
                                        .withResourceGraph(false)))
                            .withStatus(new DefaultRolloutPropertiesStatus()
                                .withCompletedRegions(Arrays.asList("szzcmrvexztv", "t", "gsfraoyzkoow", "lmnguxaw"))
                                .withFailedOrSkippedRegions(mapOf("dsyuuximerqfob", new ExtendedErrorInfo(), "yznkby",
                                    new ExtendedErrorInfo(), "utwpfhp", new ExtendedErrorInfo(), "gmhrskdsnfdsdoak",
                                    new ExtendedErrorInfo()))
                                .withNextTrafficRegion(TrafficRegionCategory.HIGH_TRAFFIC)
                                .withNextTrafficRegionScheduledTime(OffsetDateTime.parse("2021-07-04T02:33:20Z"))
                                .withSubscriptionReregistrationResult(SubscriptionReregistrationResult.NOT_APPLICABLE)
                                .withManifestCheckinStatus(
                                    new DefaultRolloutStatusManifestCheckinStatus()
                                        .withIsCheckedIn(true)
                                        .withStatusMessage("oamciodh")
                                        .withPullRequest("azxkhnzbonlwnto")
                                        .withCommitId("okdwb")))),
                        new DefaultRolloutInner().withProperties(new DefaultRolloutProperties()
                            .withSpecification(new DefaultRolloutPropertiesSpecification()
                                .withExpeditedRollout(
                                    new DefaultRolloutSpecificationExpeditedRollout().withEnabled(true))
                                .withCanary(new DefaultRolloutSpecificationCanary()
                                    .withSkipRegions(Arrays.asList("wae", "u", "zkopb"))
                                    .withRegions(Arrays.asList("rfdwoyu", "hziuiefozbhdms")))
                                .withLowTraffic(new DefaultRolloutSpecificationLowTraffic()
                                    .withRegions(Arrays.asList("oftrmaequia", "xicslfao"))
                                    .withWaitDuration(Duration.parse("PT85H19M36S")))
                                .withMediumTraffic(new DefaultRolloutSpecificationMediumTraffic()
                                    .withRegions(Arrays.asList("lhalnswh", "csphkaiv", "itqscywuggwoluhc"))
                                    .withWaitDuration(Duration.parse("PT229H19M25S")))
                                .withHighTraffic(new DefaultRolloutSpecificationHighTraffic()
                                    .withRegions(Arrays.asList("ai", "sbrgz", "wmsweypqwd", "ggicccnxqhue"))
                                    .withWaitDuration(Duration.parse("PT226H33M2S")))
                                .withRestOfTheWorldGroupOne(new DefaultRolloutSpecificationRestOfTheWorldGroupOne()
                                    .withRegions(Arrays.asList("stvlzywemhzrnc", "dtclusiypb", "fgytguslfeadcyg"))
                                    .withWaitDuration(Duration.parse("PT83H7M16S")))
                                .withRestOfTheWorldGroupTwo(new DefaultRolloutSpecificationRestOfTheWorldGroupTwo()
                                    .withRegions(Arrays.asList("jhzi", "xgfpelolppv"))
                                    .withWaitDuration(Duration.parse("PT176H30M12S")))
                                .withProviderRegistration(new DefaultRolloutSpecificationProviderRegistration()
                                    .withProperties(new ProviderRegistrationProperties())
                                    .withKind(ProviderRegistrationKind.HYBRID))
                                .withResourceTypeRegistrations(Arrays.asList(new ResourceTypeRegistrationInner(),
                                    new ResourceTypeRegistrationInner(), new ResourceTypeRegistrationInner()))
                                .withAutoProvisionConfig(
                                    new DefaultRolloutSpecificationAutoProvisionConfig().withStorage(true)
                                        .withResourceGraph(true)))
                            .withStatus(new DefaultRolloutPropertiesStatus()
                                .withCompletedRegions(Arrays.asList("orwkqnyh", "b", "j", "jivfxzsjabib"))
                                .withFailedOrSkippedRegions(mapOf("tawfsdjpvkvp", new ExtendedErrorInfo(),
                                    "jxbkzbzkdvn", new ExtendedErrorInfo(), "jabudurgkakmo", new ExtendedErrorInfo()))
                                .withNextTrafficRegion(TrafficRegionCategory.NOT_SPECIFIED)
                                .withNextTrafficRegionScheduledTime(OffsetDateTime.parse("2021-04-19T06:09:38Z"))
                                .withSubscriptionReregistrationResult(SubscriptionReregistrationResult.FORCED_UPDATE)
                                .withManifestCheckinStatus(
                                    new DefaultRolloutStatusManifestCheckinStatus().withIsCheckedIn(false)
                                        .withStatusMessage("ibdeibq")
                                        .withPullRequest("qkgh")
                                        .withCommitId("ndzwmkrefa"))))))
                .withNextLink("jbsybbqw");
        model = BinaryData.fromObject(model).toObject(DefaultRolloutArrayResponseWithContinuation.class);
        Assertions.assertTrue(model.value().get(0).properties().specification().expeditedRollout().enabled());
        Assertions.assertEquals("ooaojkniodkooebw",
            model.value().get(0).properties().specification().canary().skipRegions().get(0));
        Assertions.assertEquals("kfpagao", model.value().get(0).properties().specification().canary().regions().get(0));
        Assertions.assertEquals("r", model.value().get(0).properties().specification().lowTraffic().regions().get(0));
        Assertions.assertEquals(Duration.parse("PT102H52M35S"),
            model.value().get(0).properties().specification().lowTraffic().waitDuration());
        Assertions.assertEquals("f",
            model.value().get(0).properties().specification().mediumTraffic().regions().get(0));
        Assertions.assertEquals(Duration.parse("PT26H50M50S"),
            model.value().get(0).properties().specification().mediumTraffic().waitDuration());
        Assertions.assertEquals("wyfzqwhxxbuyqa",
            model.value().get(0).properties().specification().highTraffic().regions().get(0));
        Assertions.assertEquals(Duration.parse("PT222H47M41S"),
            model.value().get(0).properties().specification().highTraffic().waitDuration());
        Assertions.assertEquals("fuvglsbjjca",
            model.value().get(0).properties().specification().restOfTheWorldGroupOne().regions().get(0));
        Assertions.assertEquals(Duration.parse("PT145H44M40S"),
            model.value().get(0).properties().specification().restOfTheWorldGroupOne().waitDuration());
        Assertions.assertEquals("cormr",
            model.value().get(0).properties().specification().restOfTheWorldGroupTwo().regions().get(0));
        Assertions.assertEquals(Duration.parse("PT148H6M35S"),
            model.value().get(0).properties().specification().restOfTheWorldGroupTwo().waitDuration());
        Assertions.assertEquals(ProviderRegistrationKind.DIRECT,
            model.value().get(0).properties().specification().providerRegistration().kind());
        Assertions.assertFalse(model.value().get(0).properties().specification().autoProvisionConfig().storage());
        Assertions.assertFalse(model.value().get(0).properties().specification().autoProvisionConfig().resourceGraph());
        Assertions.assertEquals("szzcmrvexztv", model.value().get(0).properties().status().completedRegions().get(0));
        Assertions.assertEquals(TrafficRegionCategory.HIGH_TRAFFIC,
            model.value().get(0).properties().status().nextTrafficRegion());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-04T02:33:20Z"),
            model.value().get(0).properties().status().nextTrafficRegionScheduledTime());
        Assertions.assertEquals(SubscriptionReregistrationResult.NOT_APPLICABLE,
            model.value().get(0).properties().status().subscriptionReregistrationResult());
        Assertions.assertTrue(model.value().get(0).properties().status().manifestCheckinStatus().isCheckedIn());
        Assertions.assertEquals("oamciodh",
            model.value().get(0).properties().status().manifestCheckinStatus().statusMessage());
        Assertions.assertEquals("azxkhnzbonlwnto",
            model.value().get(0).properties().status().manifestCheckinStatus().pullRequest());
        Assertions.assertEquals("okdwb", model.value().get(0).properties().status().manifestCheckinStatus().commitId());
        Assertions.assertEquals("jbsybbqw", model.nextLink());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
