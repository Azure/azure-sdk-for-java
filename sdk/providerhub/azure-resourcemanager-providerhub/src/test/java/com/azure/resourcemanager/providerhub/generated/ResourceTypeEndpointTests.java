// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.providerhub.models.ExtensionCategory;
import com.azure.resourcemanager.providerhub.models.FeaturesPolicy;
import com.azure.resourcemanager.providerhub.models.ResourceTypeEndpoint;
import com.azure.resourcemanager.providerhub.models.ResourceTypeEndpointFeaturesRule;
import com.azure.resourcemanager.providerhub.models.ResourceTypeExtension;
import java.time.Duration;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ResourceTypeEndpointTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ResourceTypeEndpoint model = BinaryData.fromString(
            "{\"enabled\":true,\"apiVersions\":[\"tkcxywnytnrsy\",\"lqidyby\",\"czfc\",\"haaxdbabphl\"],\"locations\":[\"lfktsths\",\"cocmnyyaztt\",\"twwrqp\"],\"requiredFeatures\":[\"ckzywbiexzfeyue\",\"xibxujwbhqwalm\",\"zyoxaepdkzjan\"],\"featuresRule\":{\"requiredFeaturesPolicy\":\"All\"},\"extensions\":[{\"endpointUri\":\"wbavxbniwdj\",\"extensionCategories\":[\"ResourcePatchValidate\"],\"timeout\":\"PT205H18M18S\"},{\"endpointUri\":\"pgn\",\"extensionCategories\":[\"NotSpecified\"],\"timeout\":\"PT9H59M7S\"},{\"endpointUri\":\"xbzpfzab\",\"extensionCategories\":[\"ResourceMoveCompleted\"],\"timeout\":\"PT199H50M23S\"},{\"endpointUri\":\"tcty\",\"extensionCategories\":[\"ResourcePatchCompleted\"],\"timeout\":\"PT117H14M9S\"}],\"timeout\":\"PT81H33M36S\"}")
            .toObject(ResourceTypeEndpoint.class);
        Assertions.assertEquals(true, model.enabled());
        Assertions.assertEquals("tkcxywnytnrsy", model.apiVersions().get(0));
        Assertions.assertEquals("lfktsths", model.locations().get(0));
        Assertions.assertEquals("ckzywbiexzfeyue", model.requiredFeatures().get(0));
        Assertions.assertEquals(FeaturesPolicy.ALL, model.featuresRule().requiredFeaturesPolicy());
        Assertions.assertEquals("wbavxbniwdj", model.extensions().get(0).endpointUri());
        Assertions.assertEquals(ExtensionCategory.RESOURCE_PATCH_VALIDATE,
            model.extensions().get(0).extensionCategories().get(0));
        Assertions.assertEquals(Duration.parse("PT205H18M18S"), model.extensions().get(0).timeout());
        Assertions.assertEquals(Duration.parse("PT81H33M36S"), model.timeout());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ResourceTypeEndpoint model = new ResourceTypeEndpoint().withEnabled(true)
            .withApiVersions(Arrays.asList("tkcxywnytnrsy", "lqidyby", "czfc", "haaxdbabphl"))
            .withLocations(Arrays.asList("lfktsths", "cocmnyyaztt", "twwrqp"))
            .withRequiredFeatures(Arrays.asList("ckzywbiexzfeyue", "xibxujwbhqwalm", "zyoxaepdkzjan"))
            .withFeaturesRule(new ResourceTypeEndpointFeaturesRule().withRequiredFeaturesPolicy(FeaturesPolicy.ALL))
            .withExtensions(Arrays.asList(
                new ResourceTypeExtension().withEndpointUri("wbavxbniwdj")
                    .withExtensionCategories(Arrays.asList(ExtensionCategory.RESOURCE_PATCH_VALIDATE))
                    .withTimeout(Duration.parse("PT205H18M18S")),
                new ResourceTypeExtension().withEndpointUri("pgn")
                    .withExtensionCategories(Arrays.asList(ExtensionCategory.NOT_SPECIFIED))
                    .withTimeout(Duration.parse("PT9H59M7S")),
                new ResourceTypeExtension().withEndpointUri("xbzpfzab")
                    .withExtensionCategories(Arrays.asList(ExtensionCategory.RESOURCE_MOVE_COMPLETED))
                    .withTimeout(Duration.parse("PT199H50M23S")),
                new ResourceTypeExtension().withEndpointUri("tcty")
                    .withExtensionCategories(Arrays.asList(ExtensionCategory.RESOURCE_PATCH_COMPLETED))
                    .withTimeout(Duration.parse("PT117H14M9S"))))
            .withTimeout(Duration.parse("PT81H33M36S"));
        model = BinaryData.fromObject(model).toObject(ResourceTypeEndpoint.class);
        Assertions.assertEquals(true, model.enabled());
        Assertions.assertEquals("tkcxywnytnrsy", model.apiVersions().get(0));
        Assertions.assertEquals("lfktsths", model.locations().get(0));
        Assertions.assertEquals("ckzywbiexzfeyue", model.requiredFeatures().get(0));
        Assertions.assertEquals(FeaturesPolicy.ALL, model.featuresRule().requiredFeaturesPolicy());
        Assertions.assertEquals("wbavxbniwdj", model.extensions().get(0).endpointUri());
        Assertions.assertEquals(ExtensionCategory.RESOURCE_PATCH_VALIDATE,
            model.extensions().get(0).extensionCategories().get(0));
        Assertions.assertEquals(Duration.parse("PT205H18M18S"), model.extensions().get(0).timeout());
        Assertions.assertEquals(Duration.parse("PT81H33M36S"), model.timeout());
    }
}
