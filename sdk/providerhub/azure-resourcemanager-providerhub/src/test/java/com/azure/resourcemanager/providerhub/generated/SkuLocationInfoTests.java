// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.providerhub.models.ExtendedLocationType;
import com.azure.resourcemanager.providerhub.models.SkuCapability;
import com.azure.resourcemanager.providerhub.models.SkuLocationInfo;
import com.azure.resourcemanager.providerhub.models.SkuZoneDetail;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SkuLocationInfoTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SkuLocationInfo model = BinaryData.fromString(
            "{\"location\":\"jwaiuf\",\"zones\":[\"aybfu\",\"qfrojsydgrhyd\",\"ygywe\"],\"zoneDetails\":[{\"name\":[\"ca\"],\"capabilities\":[{\"name\":\"zmxieqvdsmaklix\",\"value\":\"cahyhx\"},{\"name\":\"lyb\",\"value\":\"awoijp\"}]},{\"name\":[\"blxpkkwjdjodq\",\"ykincnremehl\",\"izhceumoqodkadp\",\"yibngqladywrxwh\"],\"capabilities\":[{\"name\":\"luvvad\",\"value\":\"wzsnuy\"}]},{\"name\":[\"owuowh\",\"xlnwyrmouvblgmo\",\"zkltrfowtdvrfmv\",\"ih\"],\"capabilities\":[{\"name\":\"drqc\",\"value\":\"jidhftu\"},{\"name\":\"vhdxlwyo\",\"value\":\"bfqz\"},{\"name\":\"kfnjyixhafrat\",\"value\":\"xmbjroum\"},{\"name\":\"znv\",\"value\":\"l\"}]}],\"extendedLocations\":[\"huzgfxo\",\"jtpusllywpvtiotz\",\"pdbollg\",\"yfqiuasig\"],\"type\":\"ArcZone\"}")
            .toObject(SkuLocationInfo.class);
        Assertions.assertEquals("jwaiuf", model.location());
        Assertions.assertEquals("aybfu", model.zones().get(0));
        Assertions.assertEquals("ca", model.zoneDetails().get(0).name().get(0));
        Assertions.assertEquals("zmxieqvdsmaklix", model.zoneDetails().get(0).capabilities().get(0).name());
        Assertions.assertEquals("cahyhx", model.zoneDetails().get(0).capabilities().get(0).value());
        Assertions.assertEquals("huzgfxo", model.extendedLocations().get(0));
        Assertions.assertEquals(ExtendedLocationType.ARC_ZONE, model.type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SkuLocationInfo model = new SkuLocationInfo().withLocation("jwaiuf")
            .withZones(Arrays.asList("aybfu", "qfrojsydgrhyd", "ygywe"))
            .withZoneDetails(Arrays.asList(
                new SkuZoneDetail().withName(Arrays.asList("ca"))
                    .withCapabilities(Arrays.asList(new SkuCapability().withName("zmxieqvdsmaklix").withValue("cahyhx"),
                        new SkuCapability().withName("lyb").withValue("awoijp"))),
                new SkuZoneDetail()
                    .withName(Arrays.asList("blxpkkwjdjodq", "ykincnremehl", "izhceumoqodkadp", "yibngqladywrxwh"))
                    .withCapabilities(Arrays.asList(new SkuCapability().withName("luvvad").withValue("wzsnuy"))),
                new SkuZoneDetail().withName(Arrays.asList("owuowh", "xlnwyrmouvblgmo", "zkltrfowtdvrfmv", "ih"))
                    .withCapabilities(Arrays.asList(new SkuCapability().withName("drqc").withValue("jidhftu"),
                        new SkuCapability().withName("vhdxlwyo").withValue("bfqz"),
                        new SkuCapability().withName("kfnjyixhafrat").withValue("xmbjroum"),
                        new SkuCapability().withName("znv").withValue("l")))))
            .withExtendedLocations(Arrays.asList("huzgfxo", "jtpusllywpvtiotz", "pdbollg", "yfqiuasig"))
            .withType(ExtendedLocationType.ARC_ZONE);
        model = BinaryData.fromObject(model).toObject(SkuLocationInfo.class);
        Assertions.assertEquals("jwaiuf", model.location());
        Assertions.assertEquals("aybfu", model.zones().get(0));
        Assertions.assertEquals("ca", model.zoneDetails().get(0).name().get(0));
        Assertions.assertEquals("zmxieqvdsmaklix", model.zoneDetails().get(0).capabilities().get(0).name());
        Assertions.assertEquals("cahyhx", model.zoneDetails().get(0).capabilities().get(0).value());
        Assertions.assertEquals("huzgfxo", model.extendedLocations().get(0));
        Assertions.assertEquals(ExtendedLocationType.ARC_ZONE, model.type());
    }
}
