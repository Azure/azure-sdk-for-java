// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.providerhub.models.ExtendedLocationType;
import com.azure.resourcemanager.providerhub.models.SkuCapability;
import com.azure.resourcemanager.providerhub.models.SkuLocationInfo;
import com.azure.resourcemanager.providerhub.models.SkuZoneDetail;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SkuLocationInfoTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SkuLocationInfo model = BinaryData.fromString(
            "{\"location\":\"ujlzqnhcvsqltn\",\"zones\":[\"bgsxgnxfyqonmpq\"],\"zoneDetails\":[{\"name\":[\"fdbxiqxeiiqbim\"],\"capabilities\":[{\"name\":\"wwinhehf\",\"value\":\"pofvwb\"},{\"name\":\"blembnkbwvqvxkd\",\"value\":\"vqihebwtswbzuwf\"},{\"name\":\"duragegizvc\",\"value\":\"felisdjub\"},{\"name\":\"gbqi\",\"value\":\"kxkbsazgakgacyr\"}]},{\"name\":[\"dmspof\",\"pv\",\"hryl\",\"iofrzgbzjedmstk\"],\"capabilities\":[{\"name\":\"v\",\"value\":\"bcuiiz\"}]},{\"name\":[\"wfansnvpdi\",\"mik\"],\"capabilities\":[{\"name\":\"bzbkiw\",\"value\":\"uqn\"},{\"name\":\"ophzfylsgcrp\",\"value\":\"bcunezzceze\"},{\"name\":\"fwyfwlwxjwet\",\"value\":\"psihcla\"},{\"name\":\"zvaylptrsqqw\",\"value\":\"tcmwqkchc\"}]}],\"extendedLocations\":[\"xfe\"],\"type\":\"NotSpecified\"}")
            .toObject(SkuLocationInfo.class);
        Assertions.assertEquals("ujlzqnhcvsqltn", model.location());
        Assertions.assertEquals("bgsxgnxfyqonmpq", model.zones().get(0));
        Assertions.assertEquals("fdbxiqxeiiqbim", model.zoneDetails().get(0).name().get(0));
        Assertions.assertEquals("wwinhehf", model.zoneDetails().get(0).capabilities().get(0).name());
        Assertions.assertEquals("pofvwb", model.zoneDetails().get(0).capabilities().get(0).value());
        Assertions.assertEquals("xfe", model.extendedLocations().get(0));
        Assertions.assertEquals(ExtendedLocationType.NOT_SPECIFIED, model.type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SkuLocationInfo model = new SkuLocationInfo().withLocation("ujlzqnhcvsqltn")
            .withZones(Arrays.asList("bgsxgnxfyqonmpq"))
            .withZoneDetails(Arrays.asList(
                new SkuZoneDetail().withName(Arrays.asList("fdbxiqxeiiqbim"))
                    .withCapabilities(Arrays.asList(new SkuCapability().withName("wwinhehf").withValue("pofvwb"),
                        new SkuCapability().withName("blembnkbwvqvxkd").withValue("vqihebwtswbzuwf"),
                        new SkuCapability().withName("duragegizvc").withValue("felisdjub"),
                        new SkuCapability().withName("gbqi").withValue("kxkbsazgakgacyr"))),
                new SkuZoneDetail().withName(Arrays.asList("dmspof", "pv", "hryl", "iofrzgbzjedmstk"))
                    .withCapabilities(Arrays.asList(new SkuCapability().withName("v").withValue("bcuiiz"))),
                new SkuZoneDetail().withName(Arrays.asList("wfansnvpdi", "mik"))
                    .withCapabilities(Arrays.asList(new SkuCapability().withName("bzbkiw").withValue("uqn"),
                        new SkuCapability().withName("ophzfylsgcrp").withValue("bcunezzceze"),
                        new SkuCapability().withName("fwyfwlwxjwet").withValue("psihcla"),
                        new SkuCapability().withName("zvaylptrsqqw").withValue("tcmwqkchc")))))
            .withExtendedLocations(Arrays.asList("xfe"))
            .withType(ExtendedLocationType.NOT_SPECIFIED);
        model = BinaryData.fromObject(model).toObject(SkuLocationInfo.class);
        Assertions.assertEquals("ujlzqnhcvsqltn", model.location());
        Assertions.assertEquals("bgsxgnxfyqonmpq", model.zones().get(0));
        Assertions.assertEquals("fdbxiqxeiiqbim", model.zoneDetails().get(0).name().get(0));
        Assertions.assertEquals("wwinhehf", model.zoneDetails().get(0).capabilities().get(0).name());
        Assertions.assertEquals("pofvwb", model.zoneDetails().get(0).capabilities().get(0).value());
        Assertions.assertEquals("xfe", model.extendedLocations().get(0));
        Assertions.assertEquals(ExtendedLocationType.NOT_SPECIFIED, model.type());
    }
}
