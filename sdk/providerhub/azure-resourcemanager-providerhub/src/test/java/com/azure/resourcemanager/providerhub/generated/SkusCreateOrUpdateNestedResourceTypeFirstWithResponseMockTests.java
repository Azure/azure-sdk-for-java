// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.providerhub.ProviderHubManager;
import com.azure.resourcemanager.providerhub.fluent.models.SkuResourceInner;
import com.azure.resourcemanager.providerhub.models.SkuCapability;
import com.azure.resourcemanager.providerhub.models.SkuCost;
import com.azure.resourcemanager.providerhub.models.SkuLocationInfo;
import com.azure.resourcemanager.providerhub.models.SkuResource;
import com.azure.resourcemanager.providerhub.models.SkuResourceProperties;
import com.azure.resourcemanager.providerhub.models.SkuScaleType;
import com.azure.resourcemanager.providerhub.models.SkuSetting;
import com.azure.resourcemanager.providerhub.models.SkuSettingCapacity;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SkusCreateOrUpdateNestedResourceTypeFirstWithResponseMockTests {
    @Test
    public void testCreateOrUpdateNestedResourceTypeFirstWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"skuSettings\":[{\"name\":\"lwzgh\",\"tier\":\"jvmabzzbway\",\"size\":\"mdafbgymqt\",\"family\":\"preojxrjnbsconxa\",\"kind\":\"pney\",\"locations\":[\"jizqfsg\",\"w\",\"xz\"],\"locationInfo\":[{\"location\":\"q\"}],\"requiredQuotaIds\":[\"borx\"],\"requiredFeatures\":[\"lnfyzav\",\"rbypi\"],\"capacity\":{\"minimum\":930012078,\"maximum\":1619565604,\"default\":1302449703,\"scaleType\":\"Manual\"},\"costs\":[{\"meterId\":\"smqaz\"},{\"meterId\":\"dgonjhxshthmgp\"},{\"meterId\":\"zqulptkbv\"}],\"capabilities\":[{\"name\":\"tzhigqqbtim\",\"value\":\"kjblornsihqh\"}]},{\"name\":\"dsmusuaawjakxwj\",\"tier\":\"czmnniixy\",\"size\":\"qban\",\"family\":\"jtgirnb\",\"kind\":\"gm\",\"locations\":[\"rgmyn\",\"twmp\",\"tmfoeajogsyxwet\",\"mfd\"],\"locationInfo\":[{\"location\":\"lkpzwbhnrecchd\"},{\"location\":\"drmuhka\"}],\"requiredQuotaIds\":[\"edbiucvkhhwmjpjb\"],\"requiredFeatures\":[\"nx\",\"qrrihufoihp\",\"iybxvgnzuzpb\",\"kzcscpiuzvkun\"],\"capacity\":{\"minimum\":172609846,\"maximum\":1733132960,\"default\":1774849793,\"scaleType\":\"None\"},\"costs\":[{\"meterId\":\"kaugpucdocfqplwg\"},{\"meterId\":\"f\"},{\"meterId\":\"hxw\"},{\"meterId\":\"jlvzklk\"}],\"capabilities\":[{\"name\":\"ikyjtkakvlb\",\"value\":\"shjvpzaptuoskaoi\"},{\"name\":\"jixwfgc\",\"value\":\"i\"},{\"name\":\"kkcxwnujvqynvav\",\"value\":\"tmdmuqohhihr\"}]}],\"provisioningState\":\"MovingResources\"},\"id\":\"ddrwjcljbrhlhpvz\",\"name\":\"dbwen\",\"type\":\"inafhxrzfrm\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ProviderHubManager manager = ProviderHubManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        SkuResource response = manager.skus()
            .createOrUpdateNestedResourceTypeFirstWithResponse("kydpmypgfqvmtywh", "a", "xpejpewpy", "lfxampqc",
                new SkuResourceInner().withProperties(
                    new SkuResourceProperties().withSkuSettings(Arrays.asList(new SkuSetting().withName("euqxbpiatwfa")
                        .withTier("egqdtadrakgd")
                        .withSize("jkrukizyhgsqtnqs")
                        .withFamily("xqfpj")
                        .withKind("ggweeiwdhdmncgb")
                        .withLocations(Arrays.asList("scstunmlhxd", "bkl", "iichgjsysmvxodgw"))
                        .withLocationInfo(Arrays.asList(new SkuLocationInfo().withLocation("zsifcuvbdujgcwx"),
                            new SkuLocationInfo().withLocation("ec"), new SkuLocationInfo().withLocation("bwjtrdx")))
                        .withRequiredQuotaIds(
                            Arrays.asList("agbbgia", "ksykpgdqxwabzrw", "qrxhaclcdos", "kptjqgkifmmai"))
                        .withRequiredFeatures(Arrays.asList("edxkpbqwuntob", "izazz", "lw", "vydjufbnk"))
                        .withCapacity(new SkuSettingCapacity().withMinimum(825154722)
                            .withMaximum(1213585309)
                            .withDefaultProperty(1932807454)
                            .withScaleType(SkuScaleType.NONE))
                        .withCosts(Arrays.asList(new SkuCost().withMeterId("abalfdxaglz"),
                            new SkuCost().withMeterId("ytlbtlqhopxouvm"), new SkuCost().withMeterId("siflikyypzkgxf"),
                            new SkuCost().withMeterId("fmy")))
                        .withCapabilities(Arrays.asList(new SkuCapability().withName("db").withValue("oksz"),
                            new SkuCapability().withName("nm").withValue("wgpterdiuw"),
                            new SkuCapability().withName("i").withValue("kskw")))))),
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("lwzgh", response.properties().skuSettings().get(0).name());
        Assertions.assertEquals("jvmabzzbway", response.properties().skuSettings().get(0).tier());
        Assertions.assertEquals("mdafbgymqt", response.properties().skuSettings().get(0).size());
        Assertions.assertEquals("preojxrjnbsconxa", response.properties().skuSettings().get(0).family());
        Assertions.assertEquals("pney", response.properties().skuSettings().get(0).kind());
        Assertions.assertEquals("jizqfsg", response.properties().skuSettings().get(0).locations().get(0));
        Assertions.assertEquals("q", response.properties().skuSettings().get(0).locationInfo().get(0).location());
        Assertions.assertEquals("borx", response.properties().skuSettings().get(0).requiredQuotaIds().get(0));
        Assertions.assertEquals("lnfyzav", response.properties().skuSettings().get(0).requiredFeatures().get(0));
        Assertions.assertEquals(930012078, response.properties().skuSettings().get(0).capacity().minimum());
        Assertions.assertEquals(1619565604, response.properties().skuSettings().get(0).capacity().maximum());
        Assertions.assertEquals(1302449703, response.properties().skuSettings().get(0).capacity().defaultProperty());
        Assertions.assertEquals(SkuScaleType.MANUAL, response.properties().skuSettings().get(0).capacity().scaleType());
        Assertions.assertEquals("smqaz", response.properties().skuSettings().get(0).costs().get(0).meterId());
        Assertions.assertEquals("tzhigqqbtim", response.properties().skuSettings().get(0).capabilities().get(0).name());
        Assertions.assertEquals("kjblornsihqh",
            response.properties().skuSettings().get(0).capabilities().get(0).value());
    }
}
