// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.providerhub.ProviderHubManager;
import com.azure.resourcemanager.providerhub.models.MessageScope;
import com.azure.resourcemanager.providerhub.models.NotificationEndpoint;
import com.azure.resourcemanager.providerhub.models.NotificationMode;
import com.azure.resourcemanager.providerhub.models.NotificationRegistration;
import com.azure.resourcemanager.providerhub.models.NotificationRegistrationProperties;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class NotificationRegistrationsCreateOrUpdateWithResponseMockTests {
    @Test
    public void testCreateOrUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"notificationMode\":\"WebHook\",\"messageScope\":\"RegisteredSubscriptions\",\"includedEvents\":[\"ypzqzufgsyfej\",\"vdwtfxptpqayamk\",\"cf\"],\"notificationEndpoints\":[{\"notificationDestination\":\"xsnxocuullojk\",\"locations\":[\"hg\",\"wdjuxdbdljzgdy\"]},{\"notificationDestination\":\"vuqbsgzlrqhbjnqo\",\"locations\":[\"wbsfpyxxtjlfl\",\"cominxojjluxx\",\"hilzzdzzq\",\"mueza\"]}],\"provisioningState\":\"Accepted\"},\"id\":\"ibqlotokhtvwtaz\",\"name\":\"kcqwwxwjyofgwh\",\"type\":\"kbtlwljssm\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ProviderHubManager manager = ProviderHubManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        NotificationRegistration response = manager.notificationRegistrations()
            .define("rvqchoadhrsxqvzv")
            .withExistingProviderRegistration("uvwsxbgnvk")
            .withProperties(new NotificationRegistrationProperties().withNotificationMode(NotificationMode.WEB_HOOK)
                .withMessageScope(MessageScope.NOT_SPECIFIED)
                .withIncludedEvents(Arrays.asList("fajglzrsubklrxhj", "ltcetjdvqyd", "eqq", "wa"))
                .withNotificationEndpoints(Arrays.asList(
                    new NotificationEndpoint().withNotificationDestination("xv")
                        .withLocations(Arrays.asList("oebw", "jxbibanb")),
                    new NotificationEndpoint().withNotificationDestination("pwtzvpakloz")
                        .withLocations(Arrays.asList("zrpejpl", "s")),
                    new NotificationEndpoint().withNotificationDestination("bttt")
                        .withLocations(Arrays.asList("uxunrswg")))))
            .create();

        Assertions.assertEquals(NotificationMode.WEB_HOOK, response.properties().notificationMode());
        Assertions.assertEquals(MessageScope.REGISTERED_SUBSCRIPTIONS, response.properties().messageScope());
        Assertions.assertEquals("ypzqzufgsyfej", response.properties().includedEvents().get(0));
        Assertions.assertEquals("xsnxocuullojk",
            response.properties().notificationEndpoints().get(0).notificationDestination());
        Assertions.assertEquals("hg", response.properties().notificationEndpoints().get(0).locations().get(0));
    }
}
