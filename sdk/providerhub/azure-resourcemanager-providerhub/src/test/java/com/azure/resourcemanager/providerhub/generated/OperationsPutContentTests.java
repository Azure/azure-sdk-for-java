// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.providerhub.fluent.models.OperationsDefinitionInner;
import com.azure.resourcemanager.providerhub.models.OperationActionType;
import com.azure.resourcemanager.providerhub.models.OperationOrigins;
import com.azure.resourcemanager.providerhub.models.OperationsDefinitionDisplay;
import com.azure.resourcemanager.providerhub.models.OperationsPutContent;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class OperationsPutContentTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationsPutContent model = BinaryData.fromString(
            "{\"contents\":[{\"name\":\"ao\",\"isDataAction\":true,\"origin\":\"System\",\"display\":{\"provider\":\"cyyysfgdot\",\"resource\":\"ubiipuipwoqonma\",\"operation\":\"jeknizshq\",\"description\":\"cimpevfg\"},\"actionType\":\"NotSpecified\",\"properties\":\"datarilbywdx\"},{\"name\":\"miccwrwfscjfnyn\",\"isDataAction\":false,\"origin\":\"NotSpecified\",\"display\":{\"provider\":\"i\",\"resource\":\"dvoqyt\",\"operation\":\"byowbblgyavutp\",\"description\":\"hjoxo\"},\"actionType\":\"NotSpecified\",\"properties\":\"dataksbpimlqoljx\"},{\"name\":\"cgxxlxs\",\"isDataAction\":true,\"origin\":\"NotSpecified\",\"display\":{\"provider\":\"izqzdwlvwlyou\",\"resource\":\"fgfb\",\"operation\":\"jub\",\"description\":\"yhgk\"},\"actionType\":\"NotSpecified\",\"properties\":\"datasgow\"}]}")
            .toObject(OperationsPutContent.class);
        Assertions.assertEquals("ao", model.contents().get(0).name());
        Assertions.assertEquals(true, model.contents().get(0).isDataAction());
        Assertions.assertEquals(OperationOrigins.SYSTEM, model.contents().get(0).origin());
        Assertions.assertEquals("cyyysfgdot", model.contents().get(0).display().provider());
        Assertions.assertEquals("ubiipuipwoqonma", model.contents().get(0).display().resource());
        Assertions.assertEquals("jeknizshq", model.contents().get(0).display().operation());
        Assertions.assertEquals("cimpevfg", model.contents().get(0).display().description());
        Assertions.assertEquals(OperationActionType.NOT_SPECIFIED, model.contents().get(0).actionType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationsPutContent model = new OperationsPutContent().withContents(Arrays.asList(
            new OperationsDefinitionInner().withName("ao")
                .withIsDataAction(true)
                .withOrigin(OperationOrigins.SYSTEM)
                .withDisplay(new OperationsDefinitionDisplay().withProvider("cyyysfgdot")
                    .withResource("ubiipuipwoqonma")
                    .withOperation("jeknizshq")
                    .withDescription("cimpevfg"))
                .withActionType(OperationActionType.NOT_SPECIFIED)
                .withProperties("datarilbywdx"),
            new OperationsDefinitionInner().withName("miccwrwfscjfnyn")
                .withIsDataAction(false)
                .withOrigin(OperationOrigins.NOT_SPECIFIED)
                .withDisplay(new OperationsDefinitionDisplay().withProvider("i")
                    .withResource("dvoqyt")
                    .withOperation("byowbblgyavutp")
                    .withDescription("hjoxo"))
                .withActionType(OperationActionType.NOT_SPECIFIED)
                .withProperties("dataksbpimlqoljx"),
            new OperationsDefinitionInner().withName("cgxxlxs")
                .withIsDataAction(true)
                .withOrigin(OperationOrigins.NOT_SPECIFIED)
                .withDisplay(new OperationsDefinitionDisplay().withProvider("izqzdwlvwlyou")
                    .withResource("fgfb")
                    .withOperation("jub")
                    .withDescription("yhgk"))
                .withActionType(OperationActionType.NOT_SPECIFIED)
                .withProperties("datasgow")));
        model = BinaryData.fromObject(model).toObject(OperationsPutContent.class);
        Assertions.assertEquals("ao", model.contents().get(0).name());
        Assertions.assertEquals(true, model.contents().get(0).isDataAction());
        Assertions.assertEquals(OperationOrigins.SYSTEM, model.contents().get(0).origin());
        Assertions.assertEquals("cyyysfgdot", model.contents().get(0).display().provider());
        Assertions.assertEquals("ubiipuipwoqonma", model.contents().get(0).display().resource());
        Assertions.assertEquals("jeknizshq", model.contents().get(0).display().operation());
        Assertions.assertEquals("cimpevfg", model.contents().get(0).display().description());
        Assertions.assertEquals(OperationActionType.NOT_SPECIFIED, model.contents().get(0).actionType());
    }
}
