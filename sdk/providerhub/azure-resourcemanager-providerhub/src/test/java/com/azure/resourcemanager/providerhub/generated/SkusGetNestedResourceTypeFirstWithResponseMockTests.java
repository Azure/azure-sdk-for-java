// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.providerhub.ProviderHubManager;
import com.azure.resourcemanager.providerhub.models.ProvisioningState;
import com.azure.resourcemanager.providerhub.models.SkuResource;
import com.azure.resourcemanager.providerhub.models.SkuScaleType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SkusGetNestedResourceTypeFirstWithResponseMockTests {
    @Test
    public void testGetNestedResourceTypeFirstWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"skuSettings\":[{\"name\":\"ksnbksdqhjv\",\"tier\":\"lxeslkhh\",\"size\":\"tcpoqma\",\"family\":\"wqjwgok\",\"kind\":\"ejjjkxybwfdb\",\"locations\":[\"ztensvkzykjtj\",\"nsxfwu\",\"hcdpkupnqrmgj\",\"bpkuwxeoio\"],\"locationInfo\":[{\"location\":\"zfav\"},{\"location\":\"jzwfb\"},{\"location\":\"yay\"}],\"requiredQuotaIds\":[\"fz\",\"bfw\"],\"requiredFeatures\":[\"xmdewsrsxkrplbj\",\"zej\"],\"capacity\":{\"minimum\":1909809376,\"maximum\":936040784,\"default\":19583853,\"scaleType\":\"Automatic\"},\"costs\":[{\"meterId\":\"brnnhjxsqw\"},{\"meterId\":\"hqkb\"}],\"capabilities\":[{\"name\":\"t\",\"value\":\"ozycy\"},{\"name\":\"iqyhgfse\",\"value\":\"zlex\"},{\"name\":\"sfledyn\",\"value\":\"jpziu\"}]},{\"name\":\"fbzkk\",\"tier\":\"nhqs\",\"size\":\"ljselp\",\"family\":\"bafvafhlbylcc\",\"kind\":\"vxrh\",\"locations\":[\"fwrsofpltdbmair\"],\"locationInfo\":[{\"location\":\"hfnrac\"}],\"requiredQuotaIds\":[\"qigtuujwouhdaws\",\"grbjbxsjybvitvqk\",\"y\",\"znumtggmuwdchoz\"],\"requiredFeatures\":[\"fexl\",\"xn\"],\"capacity\":{\"minimum\":1586028393,\"maximum\":1905705481,\"default\":1190155426,\"scaleType\":\"Automatic\"},\"costs\":[{\"meterId\":\"a\"},{\"meterId\":\"lnuwiguy\"}],\"capabilities\":[{\"name\":\"kwph\",\"value\":\"xzcwxhmpejt\"},{\"name\":\"ke\",\"value\":\"aonwivkcqhrxh\"},{\"name\":\"knlccrmmkyup\",\"value\":\"jubyqjfkakfq\"},{\"name\":\"rke\",\"value\":\"yildudxjascow\"}]},{\"name\":\"f\",\"tier\":\"kpdxphlk\",\"size\":\"nmgzvyfijdkzuqnw\",\"family\":\"thuqolyahluq\",\"kind\":\"ulsutrjbhxy\",\"locations\":[\"y\",\"ezvqq\"],\"locationInfo\":[{\"location\":\"rftb\"},{\"location\":\"ve\"},{\"location\":\"reuquowtljvf\"},{\"location\":\"hreagk\"}],\"requiredQuotaIds\":[\"vrqtvbc\"],\"requiredFeatures\":[\"lmdgglmepjp\",\"s\"],\"capacity\":{\"minimum\":557010764,\"maximum\":300751164,\"default\":737003568,\"scaleType\":\"Manual\"},\"costs\":[{\"meterId\":\"n\"},{\"meterId\":\"afp\"},{\"meterId\":\"ylkvecjuj\"},{\"meterId\":\"ngoadyedmzr\"}],\"capabilities\":[{\"name\":\"oknub\",\"value\":\"oitpkpztrgdgx\"},{\"name\":\"coqra\",\"value\":\"wugyx\"},{\"name\":\"qi\",\"value\":\"we\"}]},{\"name\":\"alwvskbu\",\"tier\":\"acaqtyltcoqcu\",\"size\":\"dsxzakuejkmvb\",\"family\":\"tjo\",\"kind\":\"cvovjufyc\",\"locations\":[\"lbemyej\",\"riuxegthortuda\"],\"locationInfo\":[{\"location\":\"jfel\"}],\"requiredQuotaIds\":[\"pptcbgqnzmnhii\",\"ialwc\",\"gckbb\",\"ccgzpraoxnyu\"],\"requiredFeatures\":[\"tsgftipwcxbyubh\"],\"capacity\":{\"minimum\":953608093,\"maximum\":1038921387,\"default\":1572693633,\"scaleType\":\"None\"},\"costs\":[{\"meterId\":\"hza\"},{\"meterId\":\"ccnuhiig\"},{\"meterId\":\"yl\"}],\"capabilities\":[{\"name\":\"gvxvatv\",\"value\":\"rkdlb\"},{\"name\":\"bqxvhcsyhzlwxae\",\"value\":\"ov\"},{\"name\":\"rexdndsbd\",\"value\":\"ead\"}]}],\"provisioningState\":\"Created\"},\"id\":\"mwntopagttmvmma\",\"name\":\"oaq\",\"type\":\"lkjztjiuazjc\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ProviderHubManager manager = ProviderHubManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        SkuResource response = manager.skus()
            .getNestedResourceTypeFirstWithResponse("wllcolsr", "xaptefhexcgjok", "ljnhvlqj", "ek",
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("ksnbksdqhjv", response.properties().skuSettings().get(0).name());
        Assertions.assertEquals("lxeslkhh", response.properties().skuSettings().get(0).tier());
        Assertions.assertEquals("tcpoqma", response.properties().skuSettings().get(0).size());
        Assertions.assertEquals("wqjwgok", response.properties().skuSettings().get(0).family());
        Assertions.assertEquals("ejjjkxybwfdb", response.properties().skuSettings().get(0).kind());
        Assertions.assertEquals("ztensvkzykjtj", response.properties().skuSettings().get(0).locations().get(0));
        Assertions.assertEquals("zfav", response.properties().skuSettings().get(0).locationInfo().get(0).location());
        Assertions.assertEquals("fz", response.properties().skuSettings().get(0).requiredQuotaIds().get(0));
        Assertions.assertEquals("xmdewsrsxkrplbj",
            response.properties().skuSettings().get(0).requiredFeatures().get(0));
        Assertions.assertEquals(1909809376, response.properties().skuSettings().get(0).capacity().minimum());
        Assertions.assertEquals(936040784, response.properties().skuSettings().get(0).capacity().maximum());
        Assertions.assertEquals(19583853, response.properties().skuSettings().get(0).capacity().defaultProperty());
        Assertions.assertEquals(SkuScaleType.AUTOMATIC,
            response.properties().skuSettings().get(0).capacity().scaleType());
        Assertions.assertEquals("brnnhjxsqw", response.properties().skuSettings().get(0).costs().get(0).meterId());
        Assertions.assertEquals("t", response.properties().skuSettings().get(0).capabilities().get(0).name());
        Assertions.assertEquals("ozycy", response.properties().skuSettings().get(0).capabilities().get(0).value());
        Assertions.assertEquals(ProvisioningState.CREATED, response.properties().provisioningState());
    }
}
