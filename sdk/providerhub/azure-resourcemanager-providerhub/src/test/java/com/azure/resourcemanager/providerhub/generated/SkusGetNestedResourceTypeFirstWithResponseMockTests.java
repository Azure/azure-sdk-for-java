// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.providerhub.ProviderHubManager;
import com.azure.resourcemanager.providerhub.models.SkuResource;
import com.azure.resourcemanager.providerhub.models.SkuScaleType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SkusGetNestedResourceTypeFirstWithResponseMockTests {
    @Test
    public void testGetNestedResourceTypeFirstWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"skuSettings\":[{\"name\":\"jxildfkcef\",\"tier\":\"gzqpjoi\",\"size\":\"mnaybdjnxumentq\",\"family\":\"tw\",\"kind\":\"mxymulwivqtowlhl\",\"locations\":[\"oybaja\",\"qubfajcyw\"],\"locationInfo\":[{\"location\":\"wmchqo\"},{\"location\":\"tfxcpupuk\"},{\"location\":\"ymjzpwdlvwtiws\"}],\"requiredQuotaIds\":[\"aonhqnamppul\"],\"requiredFeatures\":[\"saekewnazeajbka\",\"lcyizyddcvxo\",\"krvfsxxbydes\"],\"capacity\":{\"minimum\":1161425926,\"maximum\":1484033472,\"default\":1650603661,\"scaleType\":\"Manual\"},\"costs\":[{\"meterId\":\"jtzxnmxsdobygoo\"},{\"meterId\":\"xqapjxvazyjfucsa\"}],\"capabilities\":[{\"name\":\"nosdkvi\",\"value\":\"fasgm\"},{\"name\":\"trnzpducdaaktu\",\"value\":\"ktz\"}]},{\"name\":\"oimyfpqd\",\"tier\":\"kpp\",\"size\":\"yytfvpct\",\"family\":\"ikff\",\"kind\":\"g\",\"locations\":[\"znwhvu\",\"dbkkejjkjigawgaz\",\"xjqifhujjsbc\"],\"locationInfo\":[{\"location\":\"aahzbhuroolkol\"},{\"location\":\"rhhmojusu\"},{\"location\":\"gfjzcvaax\"},{\"location\":\"ia\"}],\"requiredQuotaIds\":[\"fxwcco\",\"dxku\",\"mkczynuhhoqe\"],\"requiredFeatures\":[\"avljq\"],\"capacity\":{\"minimum\":1538169382,\"maximum\":186111806,\"default\":2100649101,\"scaleType\":\"Manual\"},\"costs\":[{\"meterId\":\"bnkgzukwdr\"},{\"meterId\":\"zkjthfceyjn\"},{\"meterId\":\"jmlfuyfjbp\"},{\"meterId\":\"iddhlrufzc\"}],\"capabilities\":[{\"name\":\"mq\",\"value\":\"fuiocuselq\"},{\"name\":\"rsazrhxud\",\"value\":\"qmdtffi\"},{\"name\":\"jmr\",\"value\":\"khmwdmd\"},{\"name\":\"gyqi\",\"value\":\"okwtjawhvagnqfqq\"}]},{\"name\":\"lcvmyolcaymjch\",\"tier\":\"snvlaqd\",\"size\":\"yzawatu\",\"family\":\"kokb\",\"kind\":\"othymgobl\",\"locations\":[\"nwgwimaanea\",\"htmhobcyanrf\",\"qtvkh\"],\"locationInfo\":[{\"location\":\"ogxkfnaoa\"}],\"requiredQuotaIds\":[\"hccto\",\"uowyrnskbyhqu\",\"czygxv\"],\"requiredFeatures\":[\"pxecxqnwhscozaw\",\"vgxsm\",\"knpwirfljf\",\"wxqouoxudnmc\"],\"capacity\":{\"minimum\":338982204,\"maximum\":178516323,\"default\":695465128,\"scaleType\":\"Automatic\"},\"costs\":[{\"meterId\":\"gencdgmoq\"},{\"meterId\":\"eqi\"},{\"meterId\":\"kkyo\"}],\"capabilities\":[{\"name\":\"jouw\",\"value\":\"ldxwhieproqksm\"},{\"name\":\"xmcvprstvkitbfjt\",\"value\":\"yotnplfacqo\"},{\"name\":\"cqrq\",\"value\":\"wetjtdrhutf\"}]},{\"name\":\"oadtxopgehpadkmd\",\"tier\":\"sszxvctkbbxuh\",\"size\":\"lsi\",\"family\":\"ccla\",\"kind\":\"oyn\",\"locations\":[\"xxc\"],\"locationInfo\":[{\"location\":\"yqjoghdsa\"},{\"location\":\"djanormo\"}],\"requiredQuotaIds\":[\"xurntujm\",\"il\",\"nwemhdeeljslkyo\",\"d\"],\"requiredFeatures\":[\"jue\",\"rhrhtsl\"],\"capacity\":{\"minimum\":423378143,\"maximum\":644167930,\"default\":1581599883,\"scaleType\":\"Automatic\"},\"costs\":[{\"meterId\":\"bfiobpnjodfc\"},{\"meterId\":\"jqqwmtqsmoxsazu\"},{\"meterId\":\"ejgwe\"}],\"capabilities\":[{\"name\":\"nfyszzacz\",\"value\":\"inqbdnddbbozs\"}]}],\"provisioningState\":\"Failed\"},\"id\":\"kjmyitrchwudlx\",\"name\":\"eihtpmnoejh\",\"type\":\"lfmsibzoyrfg\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ProviderHubManager manager = ProviderHubManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        SkuResource response = manager.skus()
            .getNestedResourceTypeFirstWithResponse("ywjzebecuvlbefvw", "ljkxpylrwoxz", "wpsyxjij", "ypdvrbkerdkdkga",
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("jxildfkcef", response.properties().skuSettings().get(0).name());
        Assertions.assertEquals("gzqpjoi", response.properties().skuSettings().get(0).tier());
        Assertions.assertEquals("mnaybdjnxumentq", response.properties().skuSettings().get(0).size());
        Assertions.assertEquals("tw", response.properties().skuSettings().get(0).family());
        Assertions.assertEquals("mxymulwivqtowlhl", response.properties().skuSettings().get(0).kind());
        Assertions.assertEquals("oybaja", response.properties().skuSettings().get(0).locations().get(0));
        Assertions.assertEquals("wmchqo", response.properties().skuSettings().get(0).locationInfo().get(0).location());
        Assertions.assertEquals("aonhqnamppul", response.properties().skuSettings().get(0).requiredQuotaIds().get(0));
        Assertions.assertEquals("saekewnazeajbka",
            response.properties().skuSettings().get(0).requiredFeatures().get(0));
        Assertions.assertEquals(1161425926, response.properties().skuSettings().get(0).capacity().minimum());
        Assertions.assertEquals(1484033472, response.properties().skuSettings().get(0).capacity().maximum());
        Assertions.assertEquals(1650603661, response.properties().skuSettings().get(0).capacity().defaultProperty());
        Assertions.assertEquals(SkuScaleType.MANUAL, response.properties().skuSettings().get(0).capacity().scaleType());
        Assertions.assertEquals("jtzxnmxsdobygoo", response.properties().skuSettings().get(0).costs().get(0).meterId());
        Assertions.assertEquals("nosdkvi", response.properties().skuSettings().get(0).capabilities().get(0).name());
        Assertions.assertEquals("fasgm", response.properties().skuSettings().get(0).capabilities().get(0).value());
    }
}
