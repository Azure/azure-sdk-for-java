// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.providerhub.models.EndpointType;
import com.azure.resourcemanager.providerhub.models.FeaturesPolicy;
import com.azure.resourcemanager.providerhub.models.ResourceTypeEndpointBase;
import com.azure.resourcemanager.providerhub.models.ResourceTypeEndpointBaseDstsConfiguration;
import com.azure.resourcemanager.providerhub.models.ResourceTypeEndpointBaseFeaturesRule;
import java.time.Duration;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ResourceTypeEndpointBaseTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ResourceTypeEndpointBase model = BinaryData.fromString(
            "{\"enabled\":true,\"apiVersions\":[\"lpqagyn\",\"iprnzcalincry\",\"xzxaqzibmqimiym\"],\"endpointUri\":\"ruqg\",\"locations\":[\"fupetasvv\",\"qsbp\",\"flanfkgxsyao\",\"uzowpuohdkcpr\"],\"requiredFeatures\":[\"kxrzt\",\"ochlu\"],\"featuresRule\":{\"requiredFeaturesPolicy\":\"All\"},\"timeout\":\"PT49H31M30S\",\"endpointType\":\"Canary\",\"dstsConfiguration\":{\"serviceName\":\"qrudjizcbfzmcr\",\"serviceDnsName\":\"fhi\"},\"skuLink\":\"c\",\"apiVersion\":\"mfbcpaqktkrum\",\"zones\":[\"ed\"]}")
            .toObject(ResourceTypeEndpointBase.class);
        Assertions.assertTrue(model.enabled());
        Assertions.assertEquals("lpqagyn", model.apiVersions().get(0));
        Assertions.assertEquals("ruqg", model.endpointUri());
        Assertions.assertEquals("fupetasvv", model.locations().get(0));
        Assertions.assertEquals("kxrzt", model.requiredFeatures().get(0));
        Assertions.assertEquals(FeaturesPolicy.ALL, model.featuresRule().requiredFeaturesPolicy());
        Assertions.assertEquals(Duration.parse("PT49H31M30S"), model.timeout());
        Assertions.assertEquals(EndpointType.CANARY, model.endpointType());
        Assertions.assertEquals("qrudjizcbfzmcr", model.dstsConfiguration().serviceName());
        Assertions.assertEquals("fhi", model.dstsConfiguration().serviceDnsName());
        Assertions.assertEquals("c", model.skuLink());
        Assertions.assertEquals("mfbcpaqktkrum", model.apiVersion());
        Assertions.assertEquals("ed", model.zones().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ResourceTypeEndpointBase model = new ResourceTypeEndpointBase().withEnabled(true)
            .withApiVersions(Arrays.asList("lpqagyn", "iprnzcalincry", "xzxaqzibmqimiym"))
            .withEndpointUri("ruqg")
            .withLocations(Arrays.asList("fupetasvv", "qsbp", "flanfkgxsyao", "uzowpuohdkcpr"))
            .withRequiredFeatures(Arrays.asList("kxrzt", "ochlu"))
            .withFeaturesRule(new ResourceTypeEndpointBaseFeaturesRule().withRequiredFeaturesPolicy(FeaturesPolicy.ALL))
            .withTimeout(Duration.parse("PT49H31M30S"))
            .withEndpointType(EndpointType.CANARY)
            .withDstsConfiguration(new ResourceTypeEndpointBaseDstsConfiguration().withServiceName("qrudjizcbfzmcr")
                .withServiceDnsName("fhi"))
            .withSkuLink("c")
            .withApiVersion("mfbcpaqktkrum")
            .withZones(Arrays.asList("ed"));
        model = BinaryData.fromObject(model).toObject(ResourceTypeEndpointBase.class);
        Assertions.assertTrue(model.enabled());
        Assertions.assertEquals("lpqagyn", model.apiVersions().get(0));
        Assertions.assertEquals("ruqg", model.endpointUri());
        Assertions.assertEquals("fupetasvv", model.locations().get(0));
        Assertions.assertEquals("kxrzt", model.requiredFeatures().get(0));
        Assertions.assertEquals(FeaturesPolicy.ALL, model.featuresRule().requiredFeaturesPolicy());
        Assertions.assertEquals(Duration.parse("PT49H31M30S"), model.timeout());
        Assertions.assertEquals(EndpointType.CANARY, model.endpointType());
        Assertions.assertEquals("qrudjizcbfzmcr", model.dstsConfiguration().serviceName());
        Assertions.assertEquals("fhi", model.dstsConfiguration().serviceDnsName());
        Assertions.assertEquals("c", model.skuLink());
        Assertions.assertEquals("mfbcpaqktkrum", model.apiVersion());
        Assertions.assertEquals("ed", model.zones().get(0));
    }
}
