// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.providerhub.models.EndpointInformation;
import com.azure.resourcemanager.providerhub.models.FilterRule;
import com.azure.resourcemanager.providerhub.models.NotificationEndpointType;
import com.azure.resourcemanager.providerhub.models.SubscriberSetting;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SubscriberSettingTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SubscriberSetting model = BinaryData.fromString(
            "{\"filterRules\":[{\"filterQuery\":\"owskanyktz\",\"endpointInformation\":[{\"endpoint\":\"y\",\"endpointType\":\"Webhook\",\"schemaVersion\":\"wgndrvynhzgpp\"}]},{\"filterQuery\":\"cgyncocpecf\",\"endpointInformation\":[{\"endpoint\":\"oo\",\"endpointType\":\"Eventhub\",\"schemaVersion\":\"zevgb\"}]},{\"filterQuery\":\"jqabcypmivkwlzuv\",\"endpointInformation\":[{\"endpoint\":\"nfnbacfionlebxe\",\"endpointType\":\"Webhook\",\"schemaVersion\":\"zxdpnqbqqw\"},{\"endpoint\":\"jfeallnwsub\",\"endpointType\":\"Webhook\",\"schemaVersion\":\"ampmngnz\"}]}]}")
            .toObject(SubscriberSetting.class);
        Assertions.assertEquals("owskanyktz", model.filterRules().get(0).filterQuery());
        Assertions.assertEquals("y", model.filterRules().get(0).endpointInformation().get(0).endpoint());
        Assertions.assertEquals(NotificationEndpointType.WEBHOOK,
            model.filterRules().get(0).endpointInformation().get(0).endpointType());
        Assertions.assertEquals("wgndrvynhzgpp",
            model.filterRules().get(0).endpointInformation().get(0).schemaVersion());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SubscriberSetting model = new SubscriberSetting().withFilterRules(Arrays.asList(
            new FilterRule().withFilterQuery("owskanyktz")
                .withEndpointInformation(Arrays.asList(new EndpointInformation().withEndpoint("y")
                    .withEndpointType(NotificationEndpointType.WEBHOOK)
                    .withSchemaVersion("wgndrvynhzgpp"))),
            new FilterRule().withFilterQuery("cgyncocpecf")
                .withEndpointInformation(Arrays.asList(new EndpointInformation().withEndpoint("oo")
                    .withEndpointType(NotificationEndpointType.EVENTHUB)
                    .withSchemaVersion("zevgb"))),
            new FilterRule().withFilterQuery("jqabcypmivkwlzuv")
                .withEndpointInformation(Arrays.asList(
                    new EndpointInformation().withEndpoint("nfnbacfionlebxe")
                        .withEndpointType(NotificationEndpointType.WEBHOOK)
                        .withSchemaVersion("zxdpnqbqqw"),
                    new EndpointInformation().withEndpoint("jfeallnwsub")
                        .withEndpointType(NotificationEndpointType.WEBHOOK)
                        .withSchemaVersion("ampmngnz")))));
        model = BinaryData.fromObject(model).toObject(SubscriberSetting.class);
        Assertions.assertEquals("owskanyktz", model.filterRules().get(0).filterQuery());
        Assertions.assertEquals("y", model.filterRules().get(0).endpointInformation().get(0).endpoint());
        Assertions.assertEquals(NotificationEndpointType.WEBHOOK,
            model.filterRules().get(0).endpointInformation().get(0).endpointType());
        Assertions.assertEquals("wgndrvynhzgpp",
            model.filterRules().get(0).endpointInformation().get(0).schemaVersion());
    }
}
