// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.postgresql.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.postgresql.models.GeoRedundantBackup;
import com.azure.resourcemanager.postgresql.models.InfrastructureEncryption;
import com.azure.resourcemanager.postgresql.models.MinimalTlsVersionEnum;
import com.azure.resourcemanager.postgresql.models.PublicNetworkAccessEnum;
import com.azure.resourcemanager.postgresql.models.ServerPropertiesForRestore;
import com.azure.resourcemanager.postgresql.models.ServerVersion;
import com.azure.resourcemanager.postgresql.models.SslEnforcementEnum;
import com.azure.resourcemanager.postgresql.models.StorageAutogrow;
import com.azure.resourcemanager.postgresql.models.StorageProfile;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class ServerPropertiesForRestoreTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ServerPropertiesForRestore model = BinaryData.fromString(
            "{\"createMode\":\"PointInTimeRestore\",\"sourceServerId\":\"d\",\"restorePointInTime\":\"2021-07-14T12:06:58Z\",\"version\":\"9.5\",\"sslEnforcement\":\"Enabled\",\"minimalTlsVersion\":\"TLS1_2\",\"infrastructureEncryption\":\"Enabled\",\"publicNetworkAccess\":\"Enabled\",\"storageProfile\":{\"backupRetentionDays\":1712782654,\"geoRedundantBackup\":\"Disabled\",\"storageMB\":953664851,\"storageAutogrow\":\"Enabled\"}}")
            .toObject(ServerPropertiesForRestore.class);
        Assertions.assertEquals(ServerVersion.NINE_FIVE, model.version());
        Assertions.assertEquals(SslEnforcementEnum.ENABLED, model.sslEnforcement());
        Assertions.assertEquals(MinimalTlsVersionEnum.TLS1_2, model.minimalTlsVersion());
        Assertions.assertEquals(InfrastructureEncryption.ENABLED, model.infrastructureEncryption());
        Assertions.assertEquals(PublicNetworkAccessEnum.ENABLED, model.publicNetworkAccess());
        Assertions.assertEquals(1712782654, model.storageProfile().backupRetentionDays());
        Assertions.assertEquals(GeoRedundantBackup.DISABLED, model.storageProfile().geoRedundantBackup());
        Assertions.assertEquals(953664851, model.storageProfile().storageMB());
        Assertions.assertEquals(StorageAutogrow.ENABLED, model.storageProfile().storageAutogrow());
        Assertions.assertEquals("d", model.sourceServerId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-14T12:06:58Z"), model.restorePointInTime());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ServerPropertiesForRestore model = new ServerPropertiesForRestore().withVersion(ServerVersion.NINE_FIVE)
            .withSslEnforcement(SslEnforcementEnum.ENABLED)
            .withMinimalTlsVersion(MinimalTlsVersionEnum.TLS1_2)
            .withInfrastructureEncryption(InfrastructureEncryption.ENABLED)
            .withPublicNetworkAccess(PublicNetworkAccessEnum.ENABLED)
            .withStorageProfile(new StorageProfile().withBackupRetentionDays(1712782654)
                .withGeoRedundantBackup(GeoRedundantBackup.DISABLED)
                .withStorageMB(953664851)
                .withStorageAutogrow(StorageAutogrow.ENABLED))
            .withSourceServerId("d")
            .withRestorePointInTime(OffsetDateTime.parse("2021-07-14T12:06:58Z"));
        model = BinaryData.fromObject(model).toObject(ServerPropertiesForRestore.class);
        Assertions.assertEquals(ServerVersion.NINE_FIVE, model.version());
        Assertions.assertEquals(SslEnforcementEnum.ENABLED, model.sslEnforcement());
        Assertions.assertEquals(MinimalTlsVersionEnum.TLS1_2, model.minimalTlsVersion());
        Assertions.assertEquals(InfrastructureEncryption.ENABLED, model.infrastructureEncryption());
        Assertions.assertEquals(PublicNetworkAccessEnum.ENABLED, model.publicNetworkAccess());
        Assertions.assertEquals(1712782654, model.storageProfile().backupRetentionDays());
        Assertions.assertEquals(GeoRedundantBackup.DISABLED, model.storageProfile().geoRedundantBackup());
        Assertions.assertEquals(953664851, model.storageProfile().storageMB());
        Assertions.assertEquals(StorageAutogrow.ENABLED, model.storageProfile().storageAutogrow());
        Assertions.assertEquals("d", model.sourceServerId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-14T12:06:58Z"), model.restorePointInTime());
    }
}
