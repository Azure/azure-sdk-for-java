// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.postgresql.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.postgresql.PostgreSqlManager;
import com.azure.resourcemanager.postgresql.models.AdministratorType;
import com.azure.resourcemanager.postgresql.models.ServerAdministratorResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ServerAdministratorsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"administratorType\":\"ActiveDirectory\",\"login\":\"ghhavgrvkffo\",\"sid\":\"4cdb1b73-1f25-4b9a-834d-c2148adb25be\",\"tenantId\":\"beb0c40a-ac9d-4265-9446-f6a2bdf94684\"},\"id\":\"jzhpjbibgjmfx\",\"name\":\"mv\",\"type\":\"cluyovwxnbkf\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        PostgreSqlManager manager = PostgreSqlManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ServerAdministratorResource response = manager.serverAdministrators()
            .getWithResponse("rydxtqm", "eoxorggufhyao", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(AdministratorType.ACTIVE_DIRECTORY, response.administratorType());
        Assertions.assertEquals("ghhavgrvkffo", response.login());
        Assertions.assertEquals(UUID.fromString("4cdb1b73-1f25-4b9a-834d-c2148adb25be"), response.sid());
        Assertions.assertEquals(UUID.fromString("beb0c40a-ac9d-4265-9446-f6a2bdf94684"), response.tenantId());
    }
}
