// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.postgresql.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.postgresql.models.GeoRedundantBackup;
import com.azure.resourcemanager.postgresql.models.InfrastructureEncryption;
import com.azure.resourcemanager.postgresql.models.MinimalTlsVersionEnum;
import com.azure.resourcemanager.postgresql.models.PublicNetworkAccessEnum;
import com.azure.resourcemanager.postgresql.models.ServerPropertiesForReplica;
import com.azure.resourcemanager.postgresql.models.ServerVersion;
import com.azure.resourcemanager.postgresql.models.SslEnforcementEnum;
import com.azure.resourcemanager.postgresql.models.StorageAutogrow;
import com.azure.resourcemanager.postgresql.models.StorageProfile;
import org.junit.jupiter.api.Assertions;

public final class ServerPropertiesForReplicaTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ServerPropertiesForReplica model = BinaryData.fromString(
            "{\"createMode\":\"Replica\",\"sourceServerId\":\"xsrz\",\"version\":\"10.0\",\"sslEnforcement\":\"Disabled\",\"minimalTlsVersion\":\"TLS1_2\",\"infrastructureEncryption\":\"Enabled\",\"publicNetworkAccess\":\"Enabled\",\"storageProfile\":{\"backupRetentionDays\":1008975068,\"geoRedundantBackup\":\"Disabled\",\"storageMB\":2060062752,\"storageAutogrow\":\"Disabled\"}}")
            .toObject(ServerPropertiesForReplica.class);
        Assertions.assertEquals(ServerVersion.ONE_ZERO_ZERO, model.version());
        Assertions.assertEquals(SslEnforcementEnum.DISABLED, model.sslEnforcement());
        Assertions.assertEquals(MinimalTlsVersionEnum.TLS1_2, model.minimalTlsVersion());
        Assertions.assertEquals(InfrastructureEncryption.ENABLED, model.infrastructureEncryption());
        Assertions.assertEquals(PublicNetworkAccessEnum.ENABLED, model.publicNetworkAccess());
        Assertions.assertEquals(1008975068, model.storageProfile().backupRetentionDays());
        Assertions.assertEquals(GeoRedundantBackup.DISABLED, model.storageProfile().geoRedundantBackup());
        Assertions.assertEquals(2060062752, model.storageProfile().storageMB());
        Assertions.assertEquals(StorageAutogrow.DISABLED, model.storageProfile().storageAutogrow());
        Assertions.assertEquals("xsrz", model.sourceServerId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ServerPropertiesForReplica model = new ServerPropertiesForReplica().withVersion(ServerVersion.ONE_ZERO_ZERO)
            .withSslEnforcement(SslEnforcementEnum.DISABLED)
            .withMinimalTlsVersion(MinimalTlsVersionEnum.TLS1_2)
            .withInfrastructureEncryption(InfrastructureEncryption.ENABLED)
            .withPublicNetworkAccess(PublicNetworkAccessEnum.ENABLED)
            .withStorageProfile(new StorageProfile().withBackupRetentionDays(1008975068)
                .withGeoRedundantBackup(GeoRedundantBackup.DISABLED)
                .withStorageMB(2060062752)
                .withStorageAutogrow(StorageAutogrow.DISABLED))
            .withSourceServerId("xsrz");
        model = BinaryData.fromObject(model).toObject(ServerPropertiesForReplica.class);
        Assertions.assertEquals(ServerVersion.ONE_ZERO_ZERO, model.version());
        Assertions.assertEquals(SslEnforcementEnum.DISABLED, model.sslEnforcement());
        Assertions.assertEquals(MinimalTlsVersionEnum.TLS1_2, model.minimalTlsVersion());
        Assertions.assertEquals(InfrastructureEncryption.ENABLED, model.infrastructureEncryption());
        Assertions.assertEquals(PublicNetworkAccessEnum.ENABLED, model.publicNetworkAccess());
        Assertions.assertEquals(1008975068, model.storageProfile().backupRetentionDays());
        Assertions.assertEquals(GeoRedundantBackup.DISABLED, model.storageProfile().geoRedundantBackup());
        Assertions.assertEquals(2060062752, model.storageProfile().storageMB());
        Assertions.assertEquals(StorageAutogrow.DISABLED, model.storageProfile().storageAutogrow());
        Assertions.assertEquals("xsrz", model.sourceServerId());
    }
}
