// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.postgresql.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.postgresql.models.PrivateEndpointProperty;
import com.azure.resourcemanager.postgresql.models.PrivateLinkServiceConnectionStateStatus;
import com.azure.resourcemanager.postgresql.models.ServerPrivateEndpointConnectionProperties;
import com.azure.resourcemanager.postgresql.models.ServerPrivateLinkServiceConnectionStateProperty;
import org.junit.jupiter.api.Assertions;

public final class ServerPrivateEndpointConnectionPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ServerPrivateEndpointConnectionProperties model = BinaryData.fromString(
            "{\"privateEndpoint\":{\"id\":\"v\"},\"privateLinkServiceConnectionState\":{\"status\":\"Pending\",\"description\":\"rwzoxxjtfelluwf\",\"actionsRequired\":\"None\"},\"provisioningState\":\"Rejecting\"}")
            .toObject(ServerPrivateEndpointConnectionProperties.class);
        Assertions.assertEquals("v", model.privateEndpoint().id());
        Assertions.assertEquals(PrivateLinkServiceConnectionStateStatus.PENDING,
            model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("rwzoxxjtfelluwf", model.privateLinkServiceConnectionState().description());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ServerPrivateEndpointConnectionProperties model = new ServerPrivateEndpointConnectionProperties()
            .withPrivateEndpoint(new PrivateEndpointProperty().withId("v"))
            .withPrivateLinkServiceConnectionState(new ServerPrivateLinkServiceConnectionStateProperty()
                .withStatus(PrivateLinkServiceConnectionStateStatus.PENDING)
                .withDescription("rwzoxxjtfelluwf"));
        model = BinaryData.fromObject(model).toObject(ServerPrivateEndpointConnectionProperties.class);
        Assertions.assertEquals("v", model.privateEndpoint().id());
        Assertions.assertEquals(PrivateLinkServiceConnectionStateStatus.PENDING,
            model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("rwzoxxjtfelluwf", model.privateLinkServiceConnectionState().description());
    }
}
