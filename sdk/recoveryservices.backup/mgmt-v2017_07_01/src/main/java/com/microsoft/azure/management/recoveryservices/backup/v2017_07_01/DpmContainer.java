/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.recoveryservices.backup.v2017_07_01;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.microsoft.azure.management.recoveryservices.backup.v2017_07_01.implementation.ProtectionContainerInner;

/**
 * DPM workload-specific protection container.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "containerType")
@JsonTypeName("DPMContainer")
public class DpmContainer extends ProtectionContainerInner {
    /**
     * Specifies whether the container is re-registrable.
     */
    @JsonProperty(value = "canReRegister")
    private Boolean canReRegister;

    /**
     * ID of container.
     */
    @JsonProperty(value = "containerId")
    private String containerId;

    /**
     * Number of protected items in the BackupEngine.
     */
    @JsonProperty(value = "protectedItemCount")
    private Long protectedItemCount;

    /**
     * Backup engine Agent version.
     */
    @JsonProperty(value = "dpmAgentVersion")
    private String dpmAgentVersion;

    /**
     * List of BackupEngines protecting the container.
     */
    @JsonProperty(value = "dpmServers")
    private List<String> dpmServers;

    /**
     * To check if upgrade available.
     */
    @JsonProperty(value = "upgradeAvailable")
    private Boolean upgradeAvailable;

    /**
     * Protection status of the container.
     */
    @JsonProperty(value = "protectionStatus")
    private String protectionStatus;

    /**
     * Extended Info of the container.
     */
    @JsonProperty(value = "extendedInfo")
    private DPMContainerExtendedInfo extendedInfo;

    /**
     * Get specifies whether the container is re-registrable.
     *
     * @return the canReRegister value
     */
    public Boolean canReRegister() {
        return this.canReRegister;
    }

    /**
     * Set specifies whether the container is re-registrable.
     *
     * @param canReRegister the canReRegister value to set
     * @return the DpmContainer object itself.
     */
    public DpmContainer withCanReRegister(Boolean canReRegister) {
        this.canReRegister = canReRegister;
        return this;
    }

    /**
     * Get iD of container.
     *
     * @return the containerId value
     */
    public String containerId() {
        return this.containerId;
    }

    /**
     * Set iD of container.
     *
     * @param containerId the containerId value to set
     * @return the DpmContainer object itself.
     */
    public DpmContainer withContainerId(String containerId) {
        this.containerId = containerId;
        return this;
    }

    /**
     * Get number of protected items in the BackupEngine.
     *
     * @return the protectedItemCount value
     */
    public Long protectedItemCount() {
        return this.protectedItemCount;
    }

    /**
     * Set number of protected items in the BackupEngine.
     *
     * @param protectedItemCount the protectedItemCount value to set
     * @return the DpmContainer object itself.
     */
    public DpmContainer withProtectedItemCount(Long protectedItemCount) {
        this.protectedItemCount = protectedItemCount;
        return this;
    }

    /**
     * Get backup engine Agent version.
     *
     * @return the dpmAgentVersion value
     */
    public String dpmAgentVersion() {
        return this.dpmAgentVersion;
    }

    /**
     * Set backup engine Agent version.
     *
     * @param dpmAgentVersion the dpmAgentVersion value to set
     * @return the DpmContainer object itself.
     */
    public DpmContainer withDpmAgentVersion(String dpmAgentVersion) {
        this.dpmAgentVersion = dpmAgentVersion;
        return this;
    }

    /**
     * Get list of BackupEngines protecting the container.
     *
     * @return the dpmServers value
     */
    public List<String> dpmServers() {
        return this.dpmServers;
    }

    /**
     * Set list of BackupEngines protecting the container.
     *
     * @param dpmServers the dpmServers value to set
     * @return the DpmContainer object itself.
     */
    public DpmContainer withDpmServers(List<String> dpmServers) {
        this.dpmServers = dpmServers;
        return this;
    }

    /**
     * Get to check if upgrade available.
     *
     * @return the upgradeAvailable value
     */
    public Boolean upgradeAvailable() {
        return this.upgradeAvailable;
    }

    /**
     * Set to check if upgrade available.
     *
     * @param upgradeAvailable the upgradeAvailable value to set
     * @return the DpmContainer object itself.
     */
    public DpmContainer withUpgradeAvailable(Boolean upgradeAvailable) {
        this.upgradeAvailable = upgradeAvailable;
        return this;
    }

    /**
     * Get protection status of the container.
     *
     * @return the protectionStatus value
     */
    public String protectionStatus() {
        return this.protectionStatus;
    }

    /**
     * Set protection status of the container.
     *
     * @param protectionStatus the protectionStatus value to set
     * @return the DpmContainer object itself.
     */
    public DpmContainer withProtectionStatus(String protectionStatus) {
        this.protectionStatus = protectionStatus;
        return this;
    }

    /**
     * Get extended Info of the container.
     *
     * @return the extendedInfo value
     */
    public DPMContainerExtendedInfo extendedInfo() {
        return this.extendedInfo;
    }

    /**
     * Set extended Info of the container.
     *
     * @param extendedInfo the extendedInfo value to set
     * @return the DpmContainer object itself.
     */
    public DpmContainer withExtendedInfo(DPMContainerExtendedInfo extendedInfo) {
        this.extendedInfo = extendedInfo;
        return this;
    }

}
