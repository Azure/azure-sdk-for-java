/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.recoveryservices.backup.v2017_07_01.implementation;

import com.microsoft.azure.management.recoveryservices.backup.v2017_07_01.AzureRecoveryServiceVaultProtectionIntent;
import com.microsoft.azure.management.recoveryservices.backup.v2017_07_01.AzureResourceProtectionIntent;
import com.microsoft.azure.management.recoveryservices.backup.v2017_07_01.BackupManagementType;
import com.microsoft.azure.management.recoveryservices.backup.v2017_07_01.ProtectionStatus;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonSubTypes;

/**
 * Base class for backup ProtectionIntent.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "protectionIntentItemType")
@JsonTypeName("ProtectionIntent")
@JsonSubTypes({
    @JsonSubTypes.Type(name = "RecoveryServiceVaultItem", value = AzureRecoveryServiceVaultProtectionIntent.class),
    @JsonSubTypes.Type(name = "AzureResourceItem", value = AzureResourceProtectionIntent.class)
})
public class ProtectionIntentInner {
    /**
     * Type of backup managemenent for the backed up item. Possible values
     * include: 'Invalid', 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer',
     * 'AzureSql', 'AzureStorage', 'AzureWorkload', 'DefaultBackup'.
     */
    @JsonProperty(value = "backupManagementType")
    private BackupManagementType backupManagementType;

    /**
     * ARM ID of the resource to be backed up.
     */
    @JsonProperty(value = "sourceResourceId")
    private String sourceResourceId;

    /**
     * ID of the item which is getting protected, In case of Azure Vm , it is
     * ProtectedItemId.
     */
    @JsonProperty(value = "itemId")
    private String itemId;

    /**
     * ID of the backup policy with which this item is backed up.
     */
    @JsonProperty(value = "policyId")
    private String policyId;

    /**
     * Backup state of this backup item. Possible values include: 'Invalid',
     * 'NotProtected', 'Protecting', 'Protected', 'ProtectionFailed'.
     */
    @JsonProperty(value = "protectionState")
    private ProtectionStatus protectionState;

    /**
     * Get type of backup managemenent for the backed up item. Possible values include: 'Invalid', 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload', 'DefaultBackup'.
     *
     * @return the backupManagementType value
     */
    public BackupManagementType backupManagementType() {
        return this.backupManagementType;
    }

    /**
     * Set type of backup managemenent for the backed up item. Possible values include: 'Invalid', 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload', 'DefaultBackup'.
     *
     * @param backupManagementType the backupManagementType value to set
     * @return the ProtectionIntentInner object itself.
     */
    public ProtectionIntentInner withBackupManagementType(BackupManagementType backupManagementType) {
        this.backupManagementType = backupManagementType;
        return this;
    }

    /**
     * Get aRM ID of the resource to be backed up.
     *
     * @return the sourceResourceId value
     */
    public String sourceResourceId() {
        return this.sourceResourceId;
    }

    /**
     * Set aRM ID of the resource to be backed up.
     *
     * @param sourceResourceId the sourceResourceId value to set
     * @return the ProtectionIntentInner object itself.
     */
    public ProtectionIntentInner withSourceResourceId(String sourceResourceId) {
        this.sourceResourceId = sourceResourceId;
        return this;
    }

    /**
     * Get iD of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId.
     *
     * @return the itemId value
     */
    public String itemId() {
        return this.itemId;
    }

    /**
     * Set iD of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId.
     *
     * @param itemId the itemId value to set
     * @return the ProtectionIntentInner object itself.
     */
    public ProtectionIntentInner withItemId(String itemId) {
        this.itemId = itemId;
        return this;
    }

    /**
     * Get iD of the backup policy with which this item is backed up.
     *
     * @return the policyId value
     */
    public String policyId() {
        return this.policyId;
    }

    /**
     * Set iD of the backup policy with which this item is backed up.
     *
     * @param policyId the policyId value to set
     * @return the ProtectionIntentInner object itself.
     */
    public ProtectionIntentInner withPolicyId(String policyId) {
        this.policyId = policyId;
        return this;
    }

    /**
     * Get backup state of this backup item. Possible values include: 'Invalid', 'NotProtected', 'Protecting', 'Protected', 'ProtectionFailed'.
     *
     * @return the protectionState value
     */
    public ProtectionStatus protectionState() {
        return this.protectionState;
    }

    /**
     * Set backup state of this backup item. Possible values include: 'Invalid', 'NotProtected', 'Protecting', 'Protected', 'ProtectionFailed'.
     *
     * @param protectionState the protectionState value to set
     * @return the ProtectionIntentInner object itself.
     */
    public ProtectionIntentInner withProtectionState(ProtectionStatus protectionState) {
        this.protectionState = protectionState;
        return this;
    }

}
