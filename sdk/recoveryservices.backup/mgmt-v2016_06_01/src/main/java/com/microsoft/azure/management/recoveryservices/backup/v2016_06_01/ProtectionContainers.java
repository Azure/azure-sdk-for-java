/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.recoveryservices.backup.v2016_06_01;

import rx.Observable;
import com.microsoft.azure.management.recoveryservices.backup.v2016_06_01.implementation.ProtectionContainersInner;
import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.recoveryservices.backup.v2016_06_01.ProtectionContainerResource;
import rx.Completable;

/**
 * Type representing ProtectionContainers.
 */
public interface ProtectionContainers extends HasInner<ProtectionContainersInner> {
    /**
     * Gets details of the specific container registered to your Recovery Services vault.
     *
     * @param vaultName The name of the Recovery Services vault.
     * @param resourceGroupName The name of the resource group associated with the Recovery Services vault.
     * @param fabricName The fabric name associated with the container.
     * @param containerName The container name used for this GET operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<BackupFabricVaultProtectionContainerResource> getAsync(String vaultName, String resourceGroupName, String fabricName, String containerName);

    /**
     * Lists the containers registered to the Recovery Services vault.
     *
     * @param vaultName The name of the Recovery Services vault.
     * @param resourceGroupName The name of the resource group associated with the Recovery Services vault.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<ProtectionContainerResource> listAsync(String vaultName, String resourceGroupName);

    /**
     * Discovers the containers in the subscription that can be protected in a Recovery Services vault. This is an asynchronous operation. To learn the status of the operation, use the GetRefreshOperationResult API.
     *
     * @param vaultName The name of the Recovery Services vault.
     * @param resourceGroupName The name of the resource group associated with the Recovery Services vault.
     * @param fabricName The fabric name associated with the container.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable refreshAsync(String vaultName, String resourceGroupName, String fabricName);

    /**
     * Unregisters the given container from your Recovery Services vault.
     *
     * @param resourceGroupName The name of the resource group associated with the Recovery Services vault.
     * @param vaultName The name of the Recovery Services vault.
     * @param identityName Name of the protection container to unregister.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable unregisterAsync(String resourceGroupName, String vaultName, String identityName);

}
