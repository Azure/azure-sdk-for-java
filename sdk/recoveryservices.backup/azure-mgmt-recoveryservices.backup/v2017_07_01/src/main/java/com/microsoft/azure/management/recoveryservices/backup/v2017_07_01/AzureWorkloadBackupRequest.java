/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.recoveryservices.backup.v2017_07_01;

import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AzureWorkload workload-specific backup request.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "objectType")
@JsonTypeName("AzureWorkloadBackupRequest")
public class AzureWorkloadBackupRequest extends BackupRequest {
    /**
     * Type of backup, viz. Full, Differential, Log or CopyOnlyFull. Possible
     * values include: 'Invalid', 'Full', 'Differential', 'Log',
     * 'CopyOnlyFull'.
     */
    @JsonProperty(value = "backupType")
    private BackupType backupType;

    /**
     * Bool for Compression setting.
     */
    @JsonProperty(value = "enableCompression")
    private Boolean enableCompression;

    /**
     * Backup copy will expire after the time specified (UTC).
     */
    @JsonProperty(value = "recoveryPointExpiryTimeInUTC")
    private DateTime recoveryPointExpiryTimeInUTC;

    /**
     * Get type of backup, viz. Full, Differential, Log or CopyOnlyFull. Possible values include: 'Invalid', 'Full', 'Differential', 'Log', 'CopyOnlyFull'.
     *
     * @return the backupType value
     */
    public BackupType backupType() {
        return this.backupType;
    }

    /**
     * Set type of backup, viz. Full, Differential, Log or CopyOnlyFull. Possible values include: 'Invalid', 'Full', 'Differential', 'Log', 'CopyOnlyFull'.
     *
     * @param backupType the backupType value to set
     * @return the AzureWorkloadBackupRequest object itself.
     */
    public AzureWorkloadBackupRequest withBackupType(BackupType backupType) {
        this.backupType = backupType;
        return this;
    }

    /**
     * Get bool for Compression setting.
     *
     * @return the enableCompression value
     */
    public Boolean enableCompression() {
        return this.enableCompression;
    }

    /**
     * Set bool for Compression setting.
     *
     * @param enableCompression the enableCompression value to set
     * @return the AzureWorkloadBackupRequest object itself.
     */
    public AzureWorkloadBackupRequest withEnableCompression(Boolean enableCompression) {
        this.enableCompression = enableCompression;
        return this;
    }

    /**
     * Get backup copy will expire after the time specified (UTC).
     *
     * @return the recoveryPointExpiryTimeInUTC value
     */
    public DateTime recoveryPointExpiryTimeInUTC() {
        return this.recoveryPointExpiryTimeInUTC;
    }

    /**
     * Set backup copy will expire after the time specified (UTC).
     *
     * @param recoveryPointExpiryTimeInUTC the recoveryPointExpiryTimeInUTC value to set
     * @return the AzureWorkloadBackupRequest object itself.
     */
    public AzureWorkloadBackupRequest withRecoveryPointExpiryTimeInUTC(DateTime recoveryPointExpiryTimeInUTC) {
        this.recoveryPointExpiryTimeInUTC = recoveryPointExpiryTimeInUTC;
        return this;
    }

}
