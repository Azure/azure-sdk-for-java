/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.recoveryservices.backup.v2017_07_01;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * BEK is bitlocker key.
 * KEK is encryption key for BEK
 * If the VM was encrypted then we will store follwing details :
 * 1. Secret(BEK) - Url + Backup Data + vaultId.
 * 2. Key(KEK) - Url + Backup Data + vaultId.
 * 3. EncryptionMechanism
 * BEK and KEK can potentiallty have different vault ids.
 */
public class KeyAndSecretDetails {
    /**
     * KEK is encryption key for BEK.
     */
    @JsonProperty(value = "kekDetails")
    private KEKDetails kekDetails;

    /**
     * BEK is bitlocker encrpytion key.
     */
    @JsonProperty(value = "bekDetails")
    private BEKDetails bekDetails;

    /**
     * Encryption mechanism: None/ SinglePass/ DoublePass.
     */
    @JsonProperty(value = "encryptionMechanism")
    private String encryptionMechanism;

    /**
     * Get kEK is encryption key for BEK.
     *
     * @return the kekDetails value
     */
    public KEKDetails kekDetails() {
        return this.kekDetails;
    }

    /**
     * Set kEK is encryption key for BEK.
     *
     * @param kekDetails the kekDetails value to set
     * @return the KeyAndSecretDetails object itself.
     */
    public KeyAndSecretDetails withKekDetails(KEKDetails kekDetails) {
        this.kekDetails = kekDetails;
        return this;
    }

    /**
     * Get bEK is bitlocker encrpytion key.
     *
     * @return the bekDetails value
     */
    public BEKDetails bekDetails() {
        return this.bekDetails;
    }

    /**
     * Set bEK is bitlocker encrpytion key.
     *
     * @param bekDetails the bekDetails value to set
     * @return the KeyAndSecretDetails object itself.
     */
    public KeyAndSecretDetails withBekDetails(BEKDetails bekDetails) {
        this.bekDetails = bekDetails;
        return this;
    }

    /**
     * Get encryption mechanism: None/ SinglePass/ DoublePass.
     *
     * @return the encryptionMechanism value
     */
    public String encryptionMechanism() {
        return this.encryptionMechanism;
    }

    /**
     * Set encryption mechanism: None/ SinglePass/ DoublePass.
     *
     * @param encryptionMechanism the encryptionMechanism value to set
     * @return the KeyAndSecretDetails object itself.
     */
    public KeyAndSecretDetails withEncryptionMechanism(String encryptionMechanism) {
        this.encryptionMechanism = encryptionMechanism;
        return this;
    }

}
