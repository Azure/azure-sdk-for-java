/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package com.microsoft.azure.management.recoveryservices.backup.v2020_02_02;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.microsoft.azure.management.recoveryservices.backup.v2020_02_02.implementation.ProtectionPolicyInner;

/**
 * Azure VM (Mercury) workload-specific backup policy.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "backupManagementType", defaultImpl = AzureVmWorkloadProtectionPolicy.class)
@JsonTypeName("AzureWorkload")
public class AzureVmWorkloadProtectionPolicy extends ProtectionPolicyInner {
    /**
     * Type of workload for the backup management. Possible values include:
     * 'Invalid', 'VM', 'FileFolder', 'AzureSqlDb', 'SQLDB', 'Exchange',
     * 'Sharepoint', 'VMwareVM', 'SystemState', 'Client', 'GenericDataSource',
     * 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase', 'SAPAseDatabase'.
     */
    @JsonProperty(value = "workLoadType")
    private WorkloadType workLoadType;

    /**
     * Common settings for the backup management.
     */
    @JsonProperty(value = "settings")
    private Settings settings;

    /**
     * List of sub-protection policies which includes schedule and retention.
     */
    @JsonProperty(value = "subProtectionPolicy")
    private List<SubProtectionPolicy> subProtectionPolicy;

    /**
     * Fix the policy inconsistency.
     */
    @JsonProperty(value = "makePolicyConsistent")
    private Boolean makePolicyConsistent;

    /**
     * Get type of workload for the backup management. Possible values include: 'Invalid', 'VM', 'FileFolder', 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState', 'Client', 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase', 'SAPAseDatabase'.
     *
     * @return the workLoadType value
     */
    public WorkloadType workLoadType() {
        return this.workLoadType;
    }

    /**
     * Set type of workload for the backup management. Possible values include: 'Invalid', 'VM', 'FileFolder', 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState', 'Client', 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase', 'SAPAseDatabase'.
     *
     * @param workLoadType the workLoadType value to set
     * @return the AzureVmWorkloadProtectionPolicy object itself.
     */
    public AzureVmWorkloadProtectionPolicy withWorkLoadType(WorkloadType workLoadType) {
        this.workLoadType = workLoadType;
        return this;
    }

    /**
     * Get common settings for the backup management.
     *
     * @return the settings value
     */
    public Settings settings() {
        return this.settings;
    }

    /**
     * Set common settings for the backup management.
     *
     * @param settings the settings value to set
     * @return the AzureVmWorkloadProtectionPolicy object itself.
     */
    public AzureVmWorkloadProtectionPolicy withSettings(Settings settings) {
        this.settings = settings;
        return this;
    }

    /**
     * Get list of sub-protection policies which includes schedule and retention.
     *
     * @return the subProtectionPolicy value
     */
    public List<SubProtectionPolicy> subProtectionPolicy() {
        return this.subProtectionPolicy;
    }

    /**
     * Set list of sub-protection policies which includes schedule and retention.
     *
     * @param subProtectionPolicy the subProtectionPolicy value to set
     * @return the AzureVmWorkloadProtectionPolicy object itself.
     */
    public AzureVmWorkloadProtectionPolicy withSubProtectionPolicy(List<SubProtectionPolicy> subProtectionPolicy) {
        this.subProtectionPolicy = subProtectionPolicy;
        return this;
    }

    /**
     * Get fix the policy inconsistency.
     *
     * @return the makePolicyConsistent value
     */
    public Boolean makePolicyConsistent() {
        return this.makePolicyConsistent;
    }

    /**
     * Set fix the policy inconsistency.
     *
     * @param makePolicyConsistent the makePolicyConsistent value to set
     * @return the AzureVmWorkloadProtectionPolicy object itself.
     */
    public AzureVmWorkloadProtectionPolicy withMakePolicyConsistent(Boolean makePolicyConsistent) {
        this.makePolicyConsistent = makePolicyConsistent;
        return this;
    }

}
