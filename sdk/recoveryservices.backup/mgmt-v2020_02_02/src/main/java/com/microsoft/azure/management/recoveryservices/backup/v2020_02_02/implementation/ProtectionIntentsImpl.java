/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 * abc
 */

package com.microsoft.azure.management.recoveryservices.backup.v2020_02_02.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.recoveryservices.backup.v2020_02_02.ProtectionIntents;
import rx.functions.Func1;
import rx.Observable;
import com.microsoft.azure.management.recoveryservices.backup.v2020_02_02.PreValidateEnableBackupResponse;
import com.microsoft.azure.management.recoveryservices.backup.v2020_02_02.PreValidateEnableBackupRequest;
import rx.Completable;
import com.microsoft.azure.management.recoveryservices.backup.v2020_02_02.ProtectionIntentResource;

class ProtectionIntentsImpl extends WrapperImpl<ProtectionIntentsInner> implements ProtectionIntents {
    private final RecoveryServicesManager manager;

    ProtectionIntentsImpl(RecoveryServicesManager manager) {
        super(manager.inner().protectionIntents());
        this.manager = manager;
    }

    public RecoveryServicesManager manager() {
        return this.manager;
    }

    @Override
    public Observable<PreValidateEnableBackupResponse> validateAsync(String azureRegion, PreValidateEnableBackupRequest parameters) {
        ProtectionIntentsInner client = this.inner();
        return client.validateAsync(azureRegion, parameters)
        .map(new Func1<PreValidateEnableBackupResponseInner, PreValidateEnableBackupResponse>() {
            @Override
            public PreValidateEnableBackupResponse call(PreValidateEnableBackupResponseInner inner) {
                return new PreValidateEnableBackupResponseImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<ProtectionIntentResource> getAsync(String vaultName, String resourceGroupName, String fabricName, String intentObjectName) {
        ProtectionIntentsInner client = this.inner();
        return client.getAsync(vaultName, resourceGroupName, fabricName, intentObjectName)
        .map(new Func1<ProtectionIntentResourceInner, ProtectionIntentResource>() {
            @Override
            public ProtectionIntentResource call(ProtectionIntentResourceInner inner) {
                return new ProtectionIntentResourceImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<ProtectionIntentResource> createOrUpdateAsync(String vaultName, String resourceGroupName, String fabricName, String intentObjectName, ProtectionIntentResourceInner parameters) {
        ProtectionIntentsInner client = this.inner();
        return client.createOrUpdateAsync(vaultName, resourceGroupName, fabricName, intentObjectName, parameters)
        .map(new Func1<ProtectionIntentResourceInner, ProtectionIntentResource>() {
            @Override
            public ProtectionIntentResource call(ProtectionIntentResourceInner inner) {
                return new ProtectionIntentResourceImpl(inner, manager());
            }
        });
    }

    @Override
    public Completable deleteAsync(String vaultName, String resourceGroupName, String fabricName, String intentObjectName) {
        ProtectionIntentsInner client = this.inner();
        return client.deleteAsync(vaultName, resourceGroupName, fabricName, intentObjectName).toCompletable();
    }

}
