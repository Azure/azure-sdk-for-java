// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storageactions.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.storageactions.StorageActionsManager;
import com.azure.resourcemanager.storageactions.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.storageactions.models.StorageTask;
import com.azure.resourcemanager.storageactions.models.StorageTaskOperationName;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class StorageTasksListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"identity\":{\"principalId\":\"bd1754d9-26cb-422b-af72-bd75760c416b\",\"tenantId\":\"fc005937-dac1-470f-90f8-83f9757c4ebe\",\"type\":\"SystemAssigned\",\"userAssignedIdentities\":{\"pbh\":{\"principalId\":\"0d374747-7a44-4b93-922f-616e50b004d7\",\"clientId\":\"7a7275ec-0c29-460f-a878-c2ad702951b8\"},\"tkcxywnytnrsy\":{\"principalId\":\"fb708931-95f9-4207-bd2d-e47a99818ac6\",\"clientId\":\"09a9467c-10bf-4a94-bf5b-ca868a13d629\"}}},\"properties\":{\"taskVersion\":7976782507588786268,\"enabled\":true,\"description\":\"ybyxc\",\"action\":{\"if\":{\"condition\":\"fclhaaxdbabphlwr\",\"operations\":[{\"name\":\"SetBlobTier\"},{\"name\":\"SetBlobTier\"}]},\"else\":{\"operations\":[{\"name\":\"SetBlobImmutabilityPolicy\"},{\"name\":\"SetBlobLegalHold\"}]}},\"provisioningState\":\"ValidateSubscriptionQuotaEnd\",\"creationTimeInUtc\":\"2021-12-06T09:51:12Z\"},\"location\":\"mnyyazt\",\"tags\":{\"uedck\":\"wwrq\",\"bxu\":\"ywbiexzfeyueax\"},\"id\":\"wbhqwal\",\"name\":\"uzyoxaep\",\"type\":\"kzjancuxrhdwbav\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        StorageActionsManager manager = StorageActionsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<StorageTask> response
            = manager.storageTasks().listByResourceGroup("ttdbhrbnl", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("mnyyazt", response.iterator().next().location());
        Assertions.assertEquals("wwrq", response.iterator().next().tags().get("uedck"));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED,
            response.iterator().next().identity().type());
        Assertions.assertTrue(response.iterator().next().properties().enabled());
        Assertions.assertEquals("ybyxc", response.iterator().next().properties().description());
        Assertions.assertEquals("fclhaaxdbabphlwr",
            response.iterator().next().properties().action().ifProperty().condition());
        Assertions.assertEquals(StorageTaskOperationName.SET_BLOB_TIER,
            response.iterator().next().properties().action().ifProperty().operations().get(0).name());
        Assertions.assertEquals(StorageTaskOperationName.SET_BLOB_IMMUTABILITY_POLICY,
            response.iterator().next().properties().action().elseProperty().operations().get(0).name());
    }
}
