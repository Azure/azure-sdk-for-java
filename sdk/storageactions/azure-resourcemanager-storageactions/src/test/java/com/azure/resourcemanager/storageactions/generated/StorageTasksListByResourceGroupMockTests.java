// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storageactions.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.storageactions.StorageActionsManager;
import com.azure.resourcemanager.storageactions.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.storageactions.models.StorageTask;
import com.azure.resourcemanager.storageactions.models.StorageTaskOperationName;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class StorageTasksListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"identity\":{\"principalId\":\"b21f5dcf-79af-4115-836c-f370d3cb7fb1\",\"tenantId\":\"3ba7a4f9-1ec3-4026-9670-fcc4b056ee61\",\"type\":\"SystemAssigned\",\"userAssignedIdentities\":{\"pbh\":{\"principalId\":\"cb89506b-4c18-4d20-b317-8598da2525b9\",\"clientId\":\"f239f6e6-6f9b-485f-835e-fb3e82ab58c2\"},\"tkcxywnytnrsy\":{\"principalId\":\"450c1ca2-ee65-4bcd-bcc5-a8809450fd7a\",\"clientId\":\"bc2ebf49-ed3d-4d9f-83a8-e140b8f942f9\"}}},\"properties\":{\"taskVersion\":7976782507588786268,\"enabled\":true,\"description\":\"ybyxc\",\"action\":{\"if\":{\"condition\":\"fclhaaxdbabphlwr\",\"operations\":[{\"name\":\"SetBlobTier\"},{\"name\":\"SetBlobTier\"}]},\"else\":{\"operations\":[{\"name\":\"SetBlobImmutabilityPolicy\"},{\"name\":\"SetBlobLegalHold\"}]}},\"provisioningState\":\"ValidateSubscriptionQuotaEnd\",\"creationTimeInUtc\":\"2021-12-06T09:51:12Z\"},\"location\":\"mnyyazt\",\"tags\":{\"uedck\":\"wwrq\",\"bxu\":\"ywbiexzfeyueax\"},\"id\":\"wbhqwal\",\"name\":\"uzyoxaep\",\"type\":\"kzjancuxrhdwbav\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        StorageActionsManager manager = StorageActionsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<StorageTask> response
            = manager.storageTasks().listByResourceGroup("ttdbhrbnl", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("mnyyazt", response.iterator().next().location());
        Assertions.assertEquals("wwrq", response.iterator().next().tags().get("uedck"));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED,
            response.iterator().next().identity().type());
        Assertions.assertEquals(true, response.iterator().next().properties().enabled());
        Assertions.assertEquals("ybyxc", response.iterator().next().properties().description());
        Assertions.assertEquals("fclhaaxdbabphlwr",
            response.iterator().next().properties().action().ifProperty().condition());
        Assertions.assertEquals(StorageTaskOperationName.SET_BLOB_TIER,
            response.iterator().next().properties().action().ifProperty().operations().get(0).name());
        Assertions.assertEquals(StorageTaskOperationName.SET_BLOB_IMMUTABILITY_POLICY,
            response.iterator().next().properties().action().elseProperty().operations().get(0).name());
    }
}
