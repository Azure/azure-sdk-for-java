// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.storageactions.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.storageactions.StorageActionsManager;
import com.azure.resourcemanager.storageactions.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.storageactions.models.StorageTask;
import com.azure.resourcemanager.storageactions.models.StorageTaskOperationName;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class StorageTasksListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"identity\":{\"principalId\":\"tayriwwroyqbex\",\"tenantId\":\"cqibycnojv\",\"type\":\"SystemAssigned,UserAssigned\",\"userAssignedIdentities\":{\"j\":{\"principalId\":\"qsgzvahapj\",\"clientId\":\"hpvgqz\"}}},\"properties\":{\"taskVersion\":1683500506314740490,\"enabled\":false,\"description\":\"zlmwlxkvugfhz\",\"action\":{\"if\":{\"condition\":\"vawjvzunlu\",\"operations\":[{\"name\":\"SetBlobTier\"},{\"name\":\"SetBlobTags\"}]},\"else\":{\"operations\":[{\"name\":\"SetBlobTier\"},{\"name\":\"DeleteBlob\"}]}},\"provisioningState\":\"Canceled\",\"creationTimeInUtc\":\"2021-04-28T10:05:56Z\"},\"location\":\"pjzu\",\"tags\":{\"kzbbtd\":\"xdult\",\"bsjyofdx\":\"umveekgpwozuhkf\",\"oekqvk\":\"uusdttouwa\",\"vbxwyjsflhh\":\"lns\"},\"id\":\"aalnjixi\",\"name\":\"xyawj\",\"type\":\"yaqcslyjpkiidz\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        StorageActionsManager manager = StorageActionsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<StorageTask> response = manager.storageTasks().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("pjzu", response.iterator().next().location());
        Assertions.assertEquals("xdult", response.iterator().next().tags().get("kzbbtd"));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED,
            response.iterator().next().identity().type());
        Assertions.assertFalse(response.iterator().next().properties().enabled());
        Assertions.assertEquals("zlmwlxkvugfhz", response.iterator().next().properties().description());
        Assertions.assertEquals("vawjvzunlu",
            response.iterator().next().properties().action().ifProperty().condition());
        Assertions.assertEquals(StorageTaskOperationName.SET_BLOB_TIER,
            response.iterator().next().properties().action().ifProperty().operations().get(0).name());
        Assertions.assertEquals(StorageTaskOperationName.SET_BLOB_TIER,
            response.iterator().next().properties().action().elseProperty().operations().get(0).name());
    }
}
