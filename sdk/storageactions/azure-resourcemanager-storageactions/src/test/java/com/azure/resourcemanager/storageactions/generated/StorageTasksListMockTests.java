// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storageactions.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.storageactions.StorageActionsManager;
import com.azure.resourcemanager.storageactions.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.storageactions.models.StorageTask;
import com.azure.resourcemanager.storageactions.models.StorageTaskOperationName;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class StorageTasksListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"identity\":{\"principalId\":\"5e0d4aef-e372-4aa2-916c-4be7bea5d4f9\",\"tenantId\":\"77df2c75-269c-4d5b-85db-05515773be2d\",\"type\":\"None\",\"userAssignedIdentities\":{\"ok\":{\"principalId\":\"13913daf-32b3-4df2-a5c5-7ab32f00896b\",\"clientId\":\"cad241ca-828b-4055-a1b4-99eae8ad0f7c\"},\"jyoxgvclt\":{\"principalId\":\"66d94b27-62a2-41f0-a878-8736543fb2a1\",\"clientId\":\"44a6a37c-1c1f-45a2-ae91-fade81acf8f1\"},\"ncghkje\":{\"principalId\":\"b92011a8-819c-4c67-9640-1a27ea60d288\",\"clientId\":\"cc8388db-331d-498e-bd55-c6cce79b99b2\"},\"hbijhtxfvgxb\":{\"principalId\":\"d2a78c50-4a92-4ed2-8f50-c6927c02ed19\",\"clientId\":\"df996d97-693f-47a5-86f3-cf6bfdd3d660\"}}},\"properties\":{\"taskVersion\":7678271281177155084,\"enabled\":true,\"description\":\"eh\",\"action\":{\"if\":{\"condition\":\"pvecxgodeb\",\"operations\":[{\"name\":\"SetBlobTier\"},{\"name\":\"SetBlobLegalHold\"}]},\"else\":{\"operations\":[{\"name\":\"SetBlobTier\"},{\"name\":\"SetBlobExpiry\"},{\"name\":\"UndeleteBlob\"}]}},\"provisioningState\":\"ValidateSubscriptionQuotaBegin\",\"creationTimeInUtc\":\"2021-10-09T22:24:23Z\"},\"location\":\"flz\",\"tags\":{\"qzahmgkbrp\":\"xzpuzycisp\",\"hibnuqqkpika\":\"y\",\"buynhijggm\":\"rgvtqag\"},\"id\":\"bfs\",\"name\":\"arbu\",\"type\":\"rcvpnazzmhjrunmp\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        StorageActionsManager manager = StorageActionsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<StorageTask> response = manager.storageTasks().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("flz", response.iterator().next().location());
        Assertions.assertEquals("xzpuzycisp", response.iterator().next().tags().get("qzahmgkbrp"));
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, response.iterator().next().identity().type());
        Assertions.assertEquals(true, response.iterator().next().properties().enabled());
        Assertions.assertEquals("eh", response.iterator().next().properties().description());
        Assertions.assertEquals("pvecxgodeb",
            response.iterator().next().properties().action().ifProperty().condition());
        Assertions.assertEquals(StorageTaskOperationName.SET_BLOB_TIER,
            response.iterator().next().properties().action().ifProperty().operations().get(0).name());
        Assertions.assertEquals(StorageTaskOperationName.SET_BLOB_TIER,
            response.iterator().next().properties().action().elseProperty().operations().get(0).name());
    }
}
