// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storageactions.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * The else block of storage task operation.
 */
@Fluent
public final class ElseCondition {
    /*
     * List of operations to execute in the else block
     */
    @JsonProperty(value = "operations", required = true)
    private List<StorageTaskOperation> operations;

    /**
     * Creates an instance of ElseCondition class.
     */
    public ElseCondition() {
    }

    /**
     * Get the operations property: List of operations to execute in the else block.
     * 
     * @return the operations value.
     */
    public List<StorageTaskOperation> operations() {
        return this.operations;
    }

    /**
     * Set the operations property: List of operations to execute in the else block.
     * 
     * @param operations the operations value to set.
     * @return the ElseCondition object itself.
     */
    public ElseCondition withOperations(List<StorageTaskOperation> operations) {
        this.operations = operations;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (operations() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property operations in model ElseCondition"));
        } else {
            operations().forEach(e -> e.validate());
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ElseCondition.class);
}
