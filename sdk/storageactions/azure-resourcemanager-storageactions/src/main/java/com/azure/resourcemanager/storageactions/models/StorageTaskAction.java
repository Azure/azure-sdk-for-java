// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storageactions.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The storage task action represents conditional statements and operations to be performed on target objects.
 */
@Fluent
public final class StorageTaskAction {
    /*
     * The if block of storage task operation
     */
    @JsonProperty(value = "if", required = true)
    private IfCondition ifProperty;

    /*
     * The else block of storage task operation
     */
    @JsonProperty(value = "else")
    private ElseCondition elseProperty;

    /**
     * Creates an instance of StorageTaskAction class.
     */
    public StorageTaskAction() {
    }

    /**
     * Get the ifProperty property: The if block of storage task operation.
     * 
     * @return the ifProperty value.
     */
    public IfCondition ifProperty() {
        return this.ifProperty;
    }

    /**
     * Set the ifProperty property: The if block of storage task operation.
     * 
     * @param ifProperty the ifProperty value to set.
     * @return the StorageTaskAction object itself.
     */
    public StorageTaskAction withIfProperty(IfCondition ifProperty) {
        this.ifProperty = ifProperty;
        return this;
    }

    /**
     * Get the elseProperty property: The else block of storage task operation.
     * 
     * @return the elseProperty value.
     */
    public ElseCondition elseProperty() {
        return this.elseProperty;
    }

    /**
     * Set the elseProperty property: The else block of storage task operation.
     * 
     * @param elseProperty the elseProperty value to set.
     * @return the StorageTaskAction object itself.
     */
    public StorageTaskAction withElseProperty(ElseCondition elseProperty) {
        this.elseProperty = elseProperty;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (ifProperty() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property ifProperty in model StorageTaskAction"));
        } else {
            ifProperty().validate();
        }
        if (elseProperty() != null) {
            elseProperty().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(StorageTaskAction.class);
}
