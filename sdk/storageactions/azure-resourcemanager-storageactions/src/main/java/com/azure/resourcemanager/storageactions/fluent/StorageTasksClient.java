// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storageactions.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.storageactions.fluent.models.StorageTaskInner;
import com.azure.resourcemanager.storageactions.fluent.models.StorageTaskPreviewActionInner;
import com.azure.resourcemanager.storageactions.models.StorageTaskUpdateParameters;

/**
 * An instance of this class provides access to all the operations defined in StorageTasksClient.
 */
public interface StorageTasksClient {
    /**
     * Asynchronously creates a new storage task resource with the specified parameters. If a storage task is already
     * created and a subsequent create request is issued with different properties, the storage task properties will be
     * updated. If a storage task is already created and a subsequent create or update request is issued with the exact
     * same set of properties, the request will succeed.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageTaskName The name of the storage task within the specified resource group. Storage task names must
     * be between 3 and 18 characters in length and use numbers and lower-case letters only.
     * @param parameters The parameters to create a Storage Task.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of represents Storage Task.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<StorageTaskInner>, StorageTaskInner> beginCreate(String resourceGroupName,
        String storageTaskName, StorageTaskInner parameters);

    /**
     * Asynchronously creates a new storage task resource with the specified parameters. If a storage task is already
     * created and a subsequent create request is issued with different properties, the storage task properties will be
     * updated. If a storage task is already created and a subsequent create or update request is issued with the exact
     * same set of properties, the request will succeed.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageTaskName The name of the storage task within the specified resource group. Storage task names must
     * be between 3 and 18 characters in length and use numbers and lower-case letters only.
     * @param parameters The parameters to create a Storage Task.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of represents Storage Task.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<StorageTaskInner>, StorageTaskInner> beginCreate(String resourceGroupName,
        String storageTaskName, StorageTaskInner parameters, Context context);

    /**
     * Asynchronously creates a new storage task resource with the specified parameters. If a storage task is already
     * created and a subsequent create request is issued with different properties, the storage task properties will be
     * updated. If a storage task is already created and a subsequent create or update request is issued with the exact
     * same set of properties, the request will succeed.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageTaskName The name of the storage task within the specified resource group. Storage task names must
     * be between 3 and 18 characters in length and use numbers and lower-case letters only.
     * @param parameters The parameters to create a Storage Task.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents Storage Task.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    StorageTaskInner create(String resourceGroupName, String storageTaskName, StorageTaskInner parameters);

    /**
     * Asynchronously creates a new storage task resource with the specified parameters. If a storage task is already
     * created and a subsequent create request is issued with different properties, the storage task properties will be
     * updated. If a storage task is already created and a subsequent create or update request is issued with the exact
     * same set of properties, the request will succeed.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageTaskName The name of the storage task within the specified resource group. Storage task names must
     * be between 3 and 18 characters in length and use numbers and lower-case letters only.
     * @param parameters The parameters to create a Storage Task.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents Storage Task.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    StorageTaskInner create(String resourceGroupName, String storageTaskName, StorageTaskInner parameters,
        Context context);

    /**
     * Delete the storage task resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageTaskName The name of the storage task within the specified resource group. Storage task names must
     * be between 3 and 18 characters in length and use numbers and lower-case letters only.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String storageTaskName);

    /**
     * Delete the storage task resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageTaskName The name of the storage task within the specified resource group. Storage task names must
     * be between 3 and 18 characters in length and use numbers and lower-case letters only.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String storageTaskName, Context context);

    /**
     * Delete the storage task resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageTaskName The name of the storage task within the specified resource group. Storage task names must
     * be between 3 and 18 characters in length and use numbers and lower-case letters only.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String storageTaskName);

    /**
     * Delete the storage task resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageTaskName The name of the storage task within the specified resource group. Storage task names must
     * be between 3 and 18 characters in length and use numbers and lower-case letters only.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String storageTaskName, Context context);

    /**
     * Get the storage task properties.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageTaskName The name of the storage task within the specified resource group. Storage task names must
     * be between 3 and 18 characters in length and use numbers and lower-case letters only.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the storage task properties along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<StorageTaskInner> getByResourceGroupWithResponse(String resourceGroupName, String storageTaskName,
        Context context);

    /**
     * Get the storage task properties.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageTaskName The name of the storage task within the specified resource group. Storage task names must
     * be between 3 and 18 characters in length and use numbers and lower-case letters only.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the storage task properties.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    StorageTaskInner getByResourceGroup(String resourceGroupName, String storageTaskName);

    /**
     * Update storage task properties.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageTaskName The name of the storage task within the specified resource group. Storage task names must
     * be between 3 and 18 characters in length and use numbers and lower-case letters only.
     * @param parameters The parameters to provide to update the storage task resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of represents Storage Task.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<StorageTaskInner>, StorageTaskInner> beginUpdate(String resourceGroupName,
        String storageTaskName, StorageTaskUpdateParameters parameters);

    /**
     * Update storage task properties.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageTaskName The name of the storage task within the specified resource group. Storage task names must
     * be between 3 and 18 characters in length and use numbers and lower-case letters only.
     * @param parameters The parameters to provide to update the storage task resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of represents Storage Task.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<StorageTaskInner>, StorageTaskInner> beginUpdate(String resourceGroupName,
        String storageTaskName, StorageTaskUpdateParameters parameters, Context context);

    /**
     * Update storage task properties.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageTaskName The name of the storage task within the specified resource group. Storage task names must
     * be between 3 and 18 characters in length and use numbers and lower-case letters only.
     * @param parameters The parameters to provide to update the storage task resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents Storage Task.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    StorageTaskInner update(String resourceGroupName, String storageTaskName, StorageTaskUpdateParameters parameters);

    /**
     * Update storage task properties.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageTaskName The name of the storage task within the specified resource group. Storage task names must
     * be between 3 and 18 characters in length and use numbers and lower-case letters only.
     * @param parameters The parameters to provide to update the storage task resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents Storage Task.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    StorageTaskInner update(String resourceGroupName, String storageTaskName, StorageTaskUpdateParameters parameters,
        Context context);

    /**
     * Lists all the storage tasks available under the subscription.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response from the List Storage Tasks operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<StorageTaskInner> list();

    /**
     * Lists all the storage tasks available under the subscription.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response from the List Storage Tasks operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<StorageTaskInner> list(Context context);

    /**
     * Lists all the storage tasks available under the given resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response from the List Storage Tasks operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<StorageTaskInner> listByResourceGroup(String resourceGroupName);

    /**
     * Lists all the storage tasks available under the given resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response from the List Storage Tasks operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<StorageTaskInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Runs the input conditions against input object metadata properties and designates matched objects in response.
     * 
     * @param location The location to perform preview of the actions.
     * @param parameters The parameters to preview action condition.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return storage Task Preview Action along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<StorageTaskPreviewActionInner> previewActionsWithResponse(String location,
        StorageTaskPreviewActionInner parameters, Context context);

    /**
     * Runs the input conditions against input object metadata properties and designates matched objects in response.
     * 
     * @param location The location to perform preview of the actions.
     * @param parameters The parameters to preview action condition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return storage Task Preview Action.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    StorageTaskPreviewActionInner previewActions(String location, StorageTaskPreviewActionInner parameters);
}
