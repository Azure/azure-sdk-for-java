/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.eventhubs.v2018_01_01_preview.implementation;

import com.microsoft.azure.management.eventhubs.v2018_01_01_preview.Sku;
import com.microsoft.azure.management.eventhubs.v2018_01_01_preview.Identity;
import org.joda.time.DateTime;
import com.microsoft.azure.management.eventhubs.v2018_01_01_preview.Encryption;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.rest.SkipParentValidation;
import com.microsoft.azure.Resource;

/**
 * Single Namespace item in List or Get Operation.
 */
@JsonFlatten
@SkipParentValidation
public class EHNamespaceInner extends Resource {
    /**
     * Properties of sku resource.
     */
    @JsonProperty(value = "sku")
    private Sku sku;

    /**
     * Properties of BYOK Identity description.
     */
    @JsonProperty(value = "identity")
    private Identity identity;

    /**
     * Provisioning state of the Namespace.
     */
    @JsonProperty(value = "properties.provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private String provisioningState;

    /**
     * The time the Namespace was created.
     */
    @JsonProperty(value = "properties.createdAt", access = JsonProperty.Access.WRITE_ONLY)
    private DateTime createdAt;

    /**
     * The time the Namespace was updated.
     */
    @JsonProperty(value = "properties.updatedAt", access = JsonProperty.Access.WRITE_ONLY)
    private DateTime updatedAt;

    /**
     * Endpoint you can use to perform Service Bus operations.
     */
    @JsonProperty(value = "properties.serviceBusEndpoint", access = JsonProperty.Access.WRITE_ONLY)
    private String serviceBusEndpoint;

    /**
     * Cluster ARM ID of the Namespace.
     */
    @JsonProperty(value = "properties.clusterArmId")
    private String clusterArmId;

    /**
     * Identifier for Azure Insights metrics.
     */
    @JsonProperty(value = "properties.metricId", access = JsonProperty.Access.WRITE_ONLY)
    private String metricId;

    /**
     * Value that indicates whether AutoInflate is enabled for eventhub
     * namespace.
     */
    @JsonProperty(value = "properties.isAutoInflateEnabled")
    private Boolean isAutoInflateEnabled;

    /**
     * Upper limit of throughput units when AutoInflate is enabled, value
     * should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled =
     * true).
     */
    @JsonProperty(value = "properties.maximumThroughputUnits")
    private Integer maximumThroughputUnits;

    /**
     * Value that indicates whether Kafka is enabled for eventhub namespace.
     */
    @JsonProperty(value = "properties.kafkaEnabled")
    private Boolean kafkaEnabled;

    /**
     * Enabling this property creates a Standard Event Hubs Namespace in
     * regions supported availability zones.
     */
    @JsonProperty(value = "properties.zoneRedundant")
    private Boolean zoneRedundant;

    /**
     * Properties of BYOK Encryption description.
     */
    @JsonProperty(value = "properties.encryption")
    private Encryption encryption;

    /**
     * Get properties of sku resource.
     *
     * @return the sku value
     */
    public Sku sku() {
        return this.sku;
    }

    /**
     * Set properties of sku resource.
     *
     * @param sku the sku value to set
     * @return the EHNamespaceInner object itself.
     */
    public EHNamespaceInner withSku(Sku sku) {
        this.sku = sku;
        return this;
    }

    /**
     * Get properties of BYOK Identity description.
     *
     * @return the identity value
     */
    public Identity identity() {
        return this.identity;
    }

    /**
     * Set properties of BYOK Identity description.
     *
     * @param identity the identity value to set
     * @return the EHNamespaceInner object itself.
     */
    public EHNamespaceInner withIdentity(Identity identity) {
        this.identity = identity;
        return this;
    }

    /**
     * Get provisioning state of the Namespace.
     *
     * @return the provisioningState value
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the time the Namespace was created.
     *
     * @return the createdAt value
     */
    public DateTime createdAt() {
        return this.createdAt;
    }

    /**
     * Get the time the Namespace was updated.
     *
     * @return the updatedAt value
     */
    public DateTime updatedAt() {
        return this.updatedAt;
    }

    /**
     * Get endpoint you can use to perform Service Bus operations.
     *
     * @return the serviceBusEndpoint value
     */
    public String serviceBusEndpoint() {
        return this.serviceBusEndpoint;
    }

    /**
     * Get cluster ARM ID of the Namespace.
     *
     * @return the clusterArmId value
     */
    public String clusterArmId() {
        return this.clusterArmId;
    }

    /**
     * Set cluster ARM ID of the Namespace.
     *
     * @param clusterArmId the clusterArmId value to set
     * @return the EHNamespaceInner object itself.
     */
    public EHNamespaceInner withClusterArmId(String clusterArmId) {
        this.clusterArmId = clusterArmId;
        return this;
    }

    /**
     * Get identifier for Azure Insights metrics.
     *
     * @return the metricId value
     */
    public String metricId() {
        return this.metricId;
    }

    /**
     * Get value that indicates whether AutoInflate is enabled for eventhub namespace.
     *
     * @return the isAutoInflateEnabled value
     */
    public Boolean isAutoInflateEnabled() {
        return this.isAutoInflateEnabled;
    }

    /**
     * Set value that indicates whether AutoInflate is enabled for eventhub namespace.
     *
     * @param isAutoInflateEnabled the isAutoInflateEnabled value to set
     * @return the EHNamespaceInner object itself.
     */
    public EHNamespaceInner withIsAutoInflateEnabled(Boolean isAutoInflateEnabled) {
        this.isAutoInflateEnabled = isAutoInflateEnabled;
        return this;
    }

    /**
     * Get upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true).
     *
     * @return the maximumThroughputUnits value
     */
    public Integer maximumThroughputUnits() {
        return this.maximumThroughputUnits;
    }

    /**
     * Set upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true).
     *
     * @param maximumThroughputUnits the maximumThroughputUnits value to set
     * @return the EHNamespaceInner object itself.
     */
    public EHNamespaceInner withMaximumThroughputUnits(Integer maximumThroughputUnits) {
        this.maximumThroughputUnits = maximumThroughputUnits;
        return this;
    }

    /**
     * Get value that indicates whether Kafka is enabled for eventhub namespace.
     *
     * @return the kafkaEnabled value
     */
    public Boolean kafkaEnabled() {
        return this.kafkaEnabled;
    }

    /**
     * Set value that indicates whether Kafka is enabled for eventhub namespace.
     *
     * @param kafkaEnabled the kafkaEnabled value to set
     * @return the EHNamespaceInner object itself.
     */
    public EHNamespaceInner withKafkaEnabled(Boolean kafkaEnabled) {
        this.kafkaEnabled = kafkaEnabled;
        return this;
    }

    /**
     * Get enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones.
     *
     * @return the zoneRedundant value
     */
    public Boolean zoneRedundant() {
        return this.zoneRedundant;
    }

    /**
     * Set enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones.
     *
     * @param zoneRedundant the zoneRedundant value to set
     * @return the EHNamespaceInner object itself.
     */
    public EHNamespaceInner withZoneRedundant(Boolean zoneRedundant) {
        this.zoneRedundant = zoneRedundant;
        return this;
    }

    /**
     * Get properties of BYOK Encryption description.
     *
     * @return the encryption value
     */
    public Encryption encryption() {
        return this.encryption;
    }

    /**
     * Set properties of BYOK Encryption description.
     *
     * @param encryption the encryption value to set
     * @return the EHNamespaceInner object itself.
     */
    public EHNamespaceInner withEncryption(Encryption encryption) {
        this.encryption = encryption;
        return this;
    }

}
