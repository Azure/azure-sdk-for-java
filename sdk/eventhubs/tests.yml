trigger: none

jobs:
  - template: ../../eng/pipelines/templates/jobs/archetype-sdk-tests.yml
    parameters:
      ServiceDirectory: eventhubs
        # NB: The PreRunSteps and PostRunSteps are here to prove the concept in the
        # defined scenario. A script will do this work and we will invoke the script
        # from the archetype template, so the only changes required will be in
        # the EnvVars.
      PreRunSteps:
          - pwsh: |
                # $uniqueIdentifier generates a pseudorandom value that represents a unique name that can be used with all resources
                $uniqueIdentifier =  "t" + [guid]::NewGuid().ToString().Replace("-", "").Substring(0,16)
                $jobName = "$(Agent.JobName)".Replace(" ", "_")
                $resourceGroupName = "Tests-$(Build.BuildId)-" + $jobName + "-" + $uniqueIdentifier
                echo "##vso[task.setvariable variable=ResourceGroupName]$resourceGroupName"
                echo "##vso[task.setvariable variable=ScopedIdentifier]$uniqueIdentifier"
                $resourceGroupExpiration = (Get-Date).ToUniversalTime().AddHours(24).ToString("o")

                az login --service-principal -u $env:PROVISIONER_AAD_ID -p $env:PROVISIONER_AAD_SECRET --tenant $env:PROVISIONER_AAD_TENANT
                az account set --subscription $env:PROVISIONER_SUBSCRIPTION

                az group create --name $resourceGroupName --location $env:PROVISIONER_RG_LOCATION --tags DeleteAfter=$resourceGroupExpiration
                az group wait --created --resource-group $resourceGroupName
                $rawDeployOutput = az group deployment create --resource-group $resourceGroupName --template-file sdk/storage/test-resources.json --parameters baseName=$uniqueIdentifier

                $deploymentOutput = $rawDeployOutput | ConvertFrom-JSON -AsHashtable
                $deploymentOutput.properties.outputs.GetEnumerator() | foreach { Write-Host "##vso[task.setvariable variable=$($_.Name);issecret=true]$($_.value.value)" }
          env:
              PROVISIONER_AAD_ID: $(provisioner-aad-id)
              PROVISIONER_AAD_SECRET: $(provisioner-aad-secret)
              PROVISIONER_AAD_TENANT: $(provisioner-aad-tenant)
              PROVISIONER_SUBSCRIPTION: $(provisioner-subscription)
              PROVISIONER_RG_LOCATION: westus2
              displayName: Provision Test-Specific Azure Resources
      PostRunSteps:
          - pwsh: |
                az login --service-principal -u $env:PROVISIONER_AAD_ID -p $env:PROVISIONER_AAD_SECRET --tenant $env:PROVISIONER_AAD_TENANT
                az account set --subscription $env:PROVISIONER_SUBSCRIPTION
                az group delete --resource-group $(ResourceGroupName) -y --no-wait
          env:
              PROVISIONER_AAD_ID: $(provisioner-aad-id)
              PROVISIONER_AAD_SECRET: $(provisioner-aad-secret)
              PROVISIONER_AAD_TENANT: $(provisioner-aad-tenant)
              PROVISIONER_SUBSCRIPTION: $(provisioner-subscription)
              displayName: Delete Test-Specific Azure Resources
              condition: succeededOrFailed()

      # This is the only change you should make to your tests.yml files
      EnvVars:
        AZURE_EVENTHUBS_CONNECTION_STRING: $(job-azure-java-event-hubs-test-connection-string)
        AZURE_EVENTHUBS_FULLY_QUALIFIED_DOMAIN_NAME: $(java-event-hubs-fully-qualified-domain-name)
        AZURE_EVENTHUBS_EVENT_HUB_NAME: $(java-event-hubs-event-hub-name)
        AZURE_TEST_MODE: RECORD
        AZURE_LOG_LEVEL: 4
        AZURE_TENANT_ID: $(aad-azure-sdk-test-tenant-id)
        AZURE_CLIENT_ID: $(aad-azure-sdk-test-client-id)
        AZURE_CLIENT_SECRET: $(aad-azure-sdk-test-client-secret)
        PRIMARY_STORAGE_ACCOUNT_NAME: $(job-primary-storage-account-name)
        PRIMARY_STORAGE_ACCOUNT_KEY: $(job-primary-storage-account-key)
        SECONDARY_STORAGE_ACCOUNT_NAME: $(job-secondary-storage-account-name)
        SECONDARY_STORAGE_ACCOUNT_KEY: $(job-secondary-storage-account-key)
        BLOB_STORAGE_ACCOUNT_NAME: $(job-blob-storage-account-name)
        BLOB_STORAGE_ACCOUNT_KEY: $(job-blob-storage-account-key)
        PREMIUM_STORAGE_ACCOUNT_NAME: $(job-premium-storage-account-name)
        PREMIUM_STORAGE_ACCOUNT_KEY:  $(job-premium-storage-account-key)
        AZURE_STORAGE_ACCESS_KEY: $(java-storage-test-access-key)
