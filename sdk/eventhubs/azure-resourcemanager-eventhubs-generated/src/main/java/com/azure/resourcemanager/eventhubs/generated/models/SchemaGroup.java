// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventhubs.generated.models;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.eventhubs.generated.fluent.models.SchemaGroupInner;
import java.time.OffsetDateTime;
import java.util.Map;
import java.util.UUID;

/** An immutable client-side representation of SchemaGroup. */
public interface SchemaGroup {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the systemData property: The system meta data relating to this resource.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the updatedAtUtc property: Exact time the Schema Group was updated.
     *
     * @return the updatedAtUtc value.
     */
    OffsetDateTime updatedAtUtc();

    /**
     * Gets the createdAtUtc property: Exact time the Schema Group was created.
     *
     * @return the createdAtUtc value.
     */
    OffsetDateTime createdAtUtc();

    /**
     * Gets the etag property: The ETag value.
     *
     * @return the etag value.
     */
    UUID etag();

    /**
     * Gets the groupProperties property: dictionary object for SchemaGroup group properties.
     *
     * @return the groupProperties value.
     */
    Map<String, String> groupProperties();

    /**
     * Gets the schemaCompatibility property: The schemaCompatibility property.
     *
     * @return the schemaCompatibility value.
     */
    SchemaCompatibility schemaCompatibility();

    /**
     * Gets the schemaType property: The schemaType property.
     *
     * @return the schemaType value.
     */
    SchemaType schemaType();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.eventhubs.generated.fluent.models.SchemaGroupInner object.
     *
     * @return the inner object.
     */
    SchemaGroupInner innerModel();

    /** The entirety of the SchemaGroup definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The SchemaGroup definition stages. */
    interface DefinitionStages {
        /** The first stage of the SchemaGroup definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the SchemaGroup definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, namespaceName.
             *
             * @param resourceGroupName Name of the resource group within the azure subscription.
             * @param namespaceName The Namespace name.
             * @return the next definition stage.
             */
            WithCreate withExistingNamespace(String resourceGroupName, String namespaceName);
        }
        /**
         * The stage of the SchemaGroup definition which contains all the minimum required properties for the resource
         * to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithGroupProperties,
                DefinitionStages.WithSchemaCompatibility,
                DefinitionStages.WithSchemaType {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            SchemaGroup create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            SchemaGroup create(Context context);
        }
        /** The stage of the SchemaGroup definition allowing to specify groupProperties. */
        interface WithGroupProperties {
            /**
             * Specifies the groupProperties property: dictionary object for SchemaGroup group properties.
             *
             * @param groupProperties dictionary object for SchemaGroup group properties.
             * @return the next definition stage.
             */
            WithCreate withGroupProperties(Map<String, String> groupProperties);
        }
        /** The stage of the SchemaGroup definition allowing to specify schemaCompatibility. */
        interface WithSchemaCompatibility {
            /**
             * Specifies the schemaCompatibility property: The schemaCompatibility property..
             *
             * @param schemaCompatibility The schemaCompatibility property.
             * @return the next definition stage.
             */
            WithCreate withSchemaCompatibility(SchemaCompatibility schemaCompatibility);
        }
        /** The stage of the SchemaGroup definition allowing to specify schemaType. */
        interface WithSchemaType {
            /**
             * Specifies the schemaType property: The schemaType property..
             *
             * @param schemaType The schemaType property.
             * @return the next definition stage.
             */
            WithCreate withSchemaType(SchemaType schemaType);
        }
    }
    /**
     * Begins update for the SchemaGroup resource.
     *
     * @return the stage of resource update.
     */
    SchemaGroup.Update update();

    /** The template for SchemaGroup update. */
    interface Update
        extends UpdateStages.WithGroupProperties, UpdateStages.WithSchemaCompatibility, UpdateStages.WithSchemaType {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        SchemaGroup apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        SchemaGroup apply(Context context);
    }
    /** The SchemaGroup update stages. */
    interface UpdateStages {
        /** The stage of the SchemaGroup update allowing to specify groupProperties. */
        interface WithGroupProperties {
            /**
             * Specifies the groupProperties property: dictionary object for SchemaGroup group properties.
             *
             * @param groupProperties dictionary object for SchemaGroup group properties.
             * @return the next definition stage.
             */
            Update withGroupProperties(Map<String, String> groupProperties);
        }
        /** The stage of the SchemaGroup update allowing to specify schemaCompatibility. */
        interface WithSchemaCompatibility {
            /**
             * Specifies the schemaCompatibility property: The schemaCompatibility property..
             *
             * @param schemaCompatibility The schemaCompatibility property.
             * @return the next definition stage.
             */
            Update withSchemaCompatibility(SchemaCompatibility schemaCompatibility);
        }
        /** The stage of the SchemaGroup update allowing to specify schemaType. */
        interface WithSchemaType {
            /**
             * Specifies the schemaType property: The schemaType property..
             *
             * @param schemaType The schemaType property.
             * @return the next definition stage.
             */
            Update withSchemaType(SchemaType schemaType);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    SchemaGroup refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    SchemaGroup refresh(Context context);
}
