// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventhubs.generated.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.eventhubs.generated.fluent.models.ConsumerGroupInner;
import java.time.OffsetDateTime;

/** An immutable client-side representation of ConsumerGroup. */
public interface ConsumerGroup {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the createdAt property: Exact time the message was created.
     *
     * @return the createdAt value.
     */
    OffsetDateTime createdAt();

    /**
     * Gets the updatedAt property: The exact time the message was updated.
     *
     * @return the updatedAt value.
     */
    OffsetDateTime updatedAt();

    /**
     * Gets the userMetadata property: User Metadata is a placeholder to store user-defined string data with maximum
     * length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information
     * also user-defined configuration settings can be stored.
     *
     * @return the userMetadata value.
     */
    String userMetadata();

    /**
     * Gets the inner com.azure.resourcemanager.eventhubs.generated.fluent.models.ConsumerGroupInner object.
     *
     * @return the inner object.
     */
    ConsumerGroupInner innerModel();

    /** The entirety of the ConsumerGroup definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The ConsumerGroup definition stages. */
    interface DefinitionStages {
        /** The first stage of the ConsumerGroup definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the ConsumerGroup definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, namespaceName, eventHubName.
             *
             * @param resourceGroupName Name of the resource group within the azure subscription.
             * @param namespaceName The Namespace name.
             * @param eventHubName The Event Hub name.
             * @return the next definition stage.
             */
            WithCreate withExistingEventhub(String resourceGroupName, String namespaceName, String eventHubName);
        }
        /**
         * The stage of the ConsumerGroup definition which contains all the minimum required properties for the resource
         * to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithUserMetadata {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            ConsumerGroup create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            ConsumerGroup create(Context context);
        }
        /** The stage of the ConsumerGroup definition allowing to specify userMetadata. */
        interface WithUserMetadata {
            /**
             * Specifies the userMetadata property: User Metadata is a placeholder to store user-defined string data
             * with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their
             * contact information also user-defined configuration settings can be stored..
             *
             * @param userMetadata User Metadata is a placeholder to store user-defined string data with maximum length
             *     1024. e.g. it can be used to store descriptive data, such as list of teams and their contact
             *     information also user-defined configuration settings can be stored.
             * @return the next definition stage.
             */
            WithCreate withUserMetadata(String userMetadata);
        }
    }
    /**
     * Begins update for the ConsumerGroup resource.
     *
     * @return the stage of resource update.
     */
    ConsumerGroup.Update update();

    /** The template for ConsumerGroup update. */
    interface Update extends UpdateStages.WithUserMetadata {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        ConsumerGroup apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        ConsumerGroup apply(Context context);
    }
    /** The ConsumerGroup update stages. */
    interface UpdateStages {
        /** The stage of the ConsumerGroup update allowing to specify userMetadata. */
        interface WithUserMetadata {
            /**
             * Specifies the userMetadata property: User Metadata is a placeholder to store user-defined string data
             * with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their
             * contact information also user-defined configuration settings can be stored..
             *
             * @param userMetadata User Metadata is a placeholder to store user-defined string data with maximum length
             *     1024. e.g. it can be used to store descriptive data, such as list of teams and their contact
             *     information also user-defined configuration settings can be stored.
             * @return the next definition stage.
             */
            Update withUserMetadata(String userMetadata);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    ConsumerGroup refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    ConsumerGroup refresh(Context context);
}
