// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventhubs.generated.models;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.eventhubs.generated.fluent.models.EHNamespaceInner;
import java.time.OffsetDateTime;
import java.util.Map;

/** An immutable client-side representation of EHNamespace. */
public interface EHNamespace {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the sku property: Properties of sku resource.
     *
     * @return the sku value.
     */
    Sku sku();

    /**
     * Gets the identity property: Properties of BYOK Identity description.
     *
     * @return the identity value.
     */
    Identity identity();

    /**
     * Gets the provisioningState property: Provisioning state of the Namespace.
     *
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * Gets the createdAt property: The time the Namespace was created.
     *
     * @return the createdAt value.
     */
    OffsetDateTime createdAt();

    /**
     * Gets the updatedAt property: The time the Namespace was updated.
     *
     * @return the updatedAt value.
     */
    OffsetDateTime updatedAt();

    /**
     * Gets the serviceBusEndpoint property: Endpoint you can use to perform Service Bus operations.
     *
     * @return the serviceBusEndpoint value.
     */
    String serviceBusEndpoint();

    /**
     * Gets the clusterArmId property: Cluster ARM ID of the Namespace.
     *
     * @return the clusterArmId value.
     */
    String clusterArmId();

    /**
     * Gets the metricId property: Identifier for Azure Insights metrics.
     *
     * @return the metricId value.
     */
    String metricId();

    /**
     * Gets the isAutoInflateEnabled property: Value that indicates whether AutoInflate is enabled for eventhub
     * namespace.
     *
     * @return the isAutoInflateEnabled value.
     */
    Boolean isAutoInflateEnabled();

    /**
     * Gets the maximumThroughputUnits property: Upper limit of throughput units when AutoInflate is enabled, value
     * should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true).
     *
     * @return the maximumThroughputUnits value.
     */
    Integer maximumThroughputUnits();

    /**
     * Gets the kafkaEnabled property: Value that indicates whether Kafka is enabled for eventhub namespace.
     *
     * @return the kafkaEnabled value.
     */
    Boolean kafkaEnabled();

    /**
     * Gets the zoneRedundant property: Enabling this property creates a Standard Event Hubs Namespace in regions
     * supported availability zones.
     *
     * @return the zoneRedundant value.
     */
    Boolean zoneRedundant();

    /**
     * Gets the encryption property: Properties of BYOK Encryption description.
     *
     * @return the encryption value.
     */
    Encryption encryption();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.eventhubs.generated.fluent.models.EHNamespaceInner object.
     *
     * @return the inner object.
     */
    EHNamespaceInner innerModel();

    /** The entirety of the EHNamespace definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithResourceGroup,
            DefinitionStages.WithCreate {
    }
    /** The EHNamespace definition stages. */
    interface DefinitionStages {
        /** The first stage of the EHNamespace definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the EHNamespace definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }
        /** The stage of the EHNamespace definition allowing to specify parent resource. */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             *
             * @param resourceGroupName Name of the resource group within the azure subscription.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }
        /**
         * The stage of the EHNamespace definition which contains all the minimum required properties for the resource
         * to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithSku,
                DefinitionStages.WithIdentity,
                DefinitionStages.WithClusterArmId,
                DefinitionStages.WithIsAutoInflateEnabled,
                DefinitionStages.WithMaximumThroughputUnits,
                DefinitionStages.WithKafkaEnabled,
                DefinitionStages.WithZoneRedundant,
                DefinitionStages.WithEncryption {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            EHNamespace create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            EHNamespace create(Context context);
        }
        /** The stage of the EHNamespace definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the EHNamespace definition allowing to specify sku. */
        interface WithSku {
            /**
             * Specifies the sku property: Properties of sku resource.
             *
             * @param sku Properties of sku resource.
             * @return the next definition stage.
             */
            WithCreate withSku(Sku sku);
        }
        /** The stage of the EHNamespace definition allowing to specify identity. */
        interface WithIdentity {
            /**
             * Specifies the identity property: Properties of BYOK Identity description.
             *
             * @param identity Properties of BYOK Identity description.
             * @return the next definition stage.
             */
            WithCreate withIdentity(Identity identity);
        }
        /** The stage of the EHNamespace definition allowing to specify clusterArmId. */
        interface WithClusterArmId {
            /**
             * Specifies the clusterArmId property: Cluster ARM ID of the Namespace..
             *
             * @param clusterArmId Cluster ARM ID of the Namespace.
             * @return the next definition stage.
             */
            WithCreate withClusterArmId(String clusterArmId);
        }
        /** The stage of the EHNamespace definition allowing to specify isAutoInflateEnabled. */
        interface WithIsAutoInflateEnabled {
            /**
             * Specifies the isAutoInflateEnabled property: Value that indicates whether AutoInflate is enabled for
             * eventhub namespace..
             *
             * @param isAutoInflateEnabled Value that indicates whether AutoInflate is enabled for eventhub namespace.
             * @return the next definition stage.
             */
            WithCreate withIsAutoInflateEnabled(Boolean isAutoInflateEnabled);
        }
        /** The stage of the EHNamespace definition allowing to specify maximumThroughputUnits. */
        interface WithMaximumThroughputUnits {
            /**
             * Specifies the maximumThroughputUnits property: Upper limit of throughput units when AutoInflate is
             * enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true).
             *
             * @param maximumThroughputUnits Upper limit of throughput units when AutoInflate is enabled, value should
             *     be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true).
             * @return the next definition stage.
             */
            WithCreate withMaximumThroughputUnits(Integer maximumThroughputUnits);
        }
        /** The stage of the EHNamespace definition allowing to specify kafkaEnabled. */
        interface WithKafkaEnabled {
            /**
             * Specifies the kafkaEnabled property: Value that indicates whether Kafka is enabled for eventhub
             * namespace..
             *
             * @param kafkaEnabled Value that indicates whether Kafka is enabled for eventhub namespace.
             * @return the next definition stage.
             */
            WithCreate withKafkaEnabled(Boolean kafkaEnabled);
        }
        /** The stage of the EHNamespace definition allowing to specify zoneRedundant. */
        interface WithZoneRedundant {
            /**
             * Specifies the zoneRedundant property: Enabling this property creates a Standard Event Hubs Namespace in
             * regions supported availability zones..
             *
             * @param zoneRedundant Enabling this property creates a Standard Event Hubs Namespace in regions supported
             *     availability zones.
             * @return the next definition stage.
             */
            WithCreate withZoneRedundant(Boolean zoneRedundant);
        }
        /** The stage of the EHNamespace definition allowing to specify encryption. */
        interface WithEncryption {
            /**
             * Specifies the encryption property: Properties of BYOK Encryption description.
             *
             * @param encryption Properties of BYOK Encryption description.
             * @return the next definition stage.
             */
            WithCreate withEncryption(Encryption encryption);
        }
    }
    /**
     * Begins update for the EHNamespace resource.
     *
     * @return the stage of resource update.
     */
    EHNamespace.Update update();

    /** The template for EHNamespace update. */
    interface Update
        extends UpdateStages.WithTags,
            UpdateStages.WithSku,
            UpdateStages.WithIdentity,
            UpdateStages.WithClusterArmId,
            UpdateStages.WithIsAutoInflateEnabled,
            UpdateStages.WithMaximumThroughputUnits,
            UpdateStages.WithKafkaEnabled,
            UpdateStages.WithZoneRedundant,
            UpdateStages.WithEncryption {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        EHNamespace apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        EHNamespace apply(Context context);
    }
    /** The EHNamespace update stages. */
    interface UpdateStages {
        /** The stage of the EHNamespace update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
        /** The stage of the EHNamespace update allowing to specify sku. */
        interface WithSku {
            /**
             * Specifies the sku property: Properties of sku resource.
             *
             * @param sku Properties of sku resource.
             * @return the next definition stage.
             */
            Update withSku(Sku sku);
        }
        /** The stage of the EHNamespace update allowing to specify identity. */
        interface WithIdentity {
            /**
             * Specifies the identity property: Properties of BYOK Identity description.
             *
             * @param identity Properties of BYOK Identity description.
             * @return the next definition stage.
             */
            Update withIdentity(Identity identity);
        }
        /** The stage of the EHNamespace update allowing to specify clusterArmId. */
        interface WithClusterArmId {
            /**
             * Specifies the clusterArmId property: Cluster ARM ID of the Namespace..
             *
             * @param clusterArmId Cluster ARM ID of the Namespace.
             * @return the next definition stage.
             */
            Update withClusterArmId(String clusterArmId);
        }
        /** The stage of the EHNamespace update allowing to specify isAutoInflateEnabled. */
        interface WithIsAutoInflateEnabled {
            /**
             * Specifies the isAutoInflateEnabled property: Value that indicates whether AutoInflate is enabled for
             * eventhub namespace..
             *
             * @param isAutoInflateEnabled Value that indicates whether AutoInflate is enabled for eventhub namespace.
             * @return the next definition stage.
             */
            Update withIsAutoInflateEnabled(Boolean isAutoInflateEnabled);
        }
        /** The stage of the EHNamespace update allowing to specify maximumThroughputUnits. */
        interface WithMaximumThroughputUnits {
            /**
             * Specifies the maximumThroughputUnits property: Upper limit of throughput units when AutoInflate is
             * enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true).
             *
             * @param maximumThroughputUnits Upper limit of throughput units when AutoInflate is enabled, value should
             *     be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true).
             * @return the next definition stage.
             */
            Update withMaximumThroughputUnits(Integer maximumThroughputUnits);
        }
        /** The stage of the EHNamespace update allowing to specify kafkaEnabled. */
        interface WithKafkaEnabled {
            /**
             * Specifies the kafkaEnabled property: Value that indicates whether Kafka is enabled for eventhub
             * namespace..
             *
             * @param kafkaEnabled Value that indicates whether Kafka is enabled for eventhub namespace.
             * @return the next definition stage.
             */
            Update withKafkaEnabled(Boolean kafkaEnabled);
        }
        /** The stage of the EHNamespace update allowing to specify zoneRedundant. */
        interface WithZoneRedundant {
            /**
             * Specifies the zoneRedundant property: Enabling this property creates a Standard Event Hubs Namespace in
             * regions supported availability zones..
             *
             * @param zoneRedundant Enabling this property creates a Standard Event Hubs Namespace in regions supported
             *     availability zones.
             * @return the next definition stage.
             */
            Update withZoneRedundant(Boolean zoneRedundant);
        }
        /** The stage of the EHNamespace update allowing to specify encryption. */
        interface WithEncryption {
            /**
             * Specifies the encryption property: Properties of BYOK Encryption description.
             *
             * @param encryption Properties of BYOK Encryption description.
             * @return the next definition stage.
             */
            Update withEncryption(Encryption encryption);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    EHNamespace refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    EHNamespace refresh(Context context);
}
