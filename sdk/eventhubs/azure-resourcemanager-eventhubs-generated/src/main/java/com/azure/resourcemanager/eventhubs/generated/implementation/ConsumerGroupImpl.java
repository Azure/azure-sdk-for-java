// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventhubs.generated.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.eventhubs.generated.EventHubsManager;
import com.azure.resourcemanager.eventhubs.generated.fluent.models.ConsumerGroupInner;
import com.azure.resourcemanager.eventhubs.generated.models.ConsumerGroup;
import java.time.OffsetDateTime;

public final class ConsumerGroupImpl implements ConsumerGroup, ConsumerGroup.Definition, ConsumerGroup.Update {
    private ConsumerGroupInner innerObject;

    private final EventHubsManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public OffsetDateTime createdAt() {
        return this.innerModel().createdAt();
    }

    public OffsetDateTime updatedAt() {
        return this.innerModel().updatedAt();
    }

    public String userMetadata() {
        return this.innerModel().userMetadata();
    }

    public ConsumerGroupInner innerModel() {
        return this.innerObject;
    }

    private EventHubsManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String namespaceName;

    private String eventHubName;

    private String consumerGroupName;

    public ConsumerGroupImpl withExistingEventhub(String resourceGroupName, String namespaceName, String eventHubName) {
        this.resourceGroupName = resourceGroupName;
        this.namespaceName = namespaceName;
        this.eventHubName = eventHubName;
        return this;
    }

    public ConsumerGroup create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getConsumerGroups()
                .createOrUpdateWithResponse(
                    resourceGroupName, namespaceName, eventHubName, consumerGroupName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public ConsumerGroup create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getConsumerGroups()
                .createOrUpdateWithResponse(
                    resourceGroupName, namespaceName, eventHubName, consumerGroupName, this.innerModel(), context)
                .getValue();
        return this;
    }

    public ConsumerGroupImpl(String name, EventHubsManager serviceManager) {
        this.innerObject = new ConsumerGroupInner();
        this.serviceManager = serviceManager;
        this.consumerGroupName = name;
    }

    public ConsumerGroupImpl update() {
        return this;
    }

    public ConsumerGroup apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getConsumerGroups()
                .createOrUpdateWithResponse(
                    resourceGroupName, namespaceName, eventHubName, consumerGroupName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public ConsumerGroup apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getConsumerGroups()
                .createOrUpdateWithResponse(
                    resourceGroupName, namespaceName, eventHubName, consumerGroupName, this.innerModel(), context)
                .getValue();
        return this;
    }

    public ConsumerGroupImpl(ConsumerGroupInner innerObject, EventHubsManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.namespaceName = Utils.getValueFromIdByName(innerObject.id(), "namespaces");
        this.eventHubName = Utils.getValueFromIdByName(innerObject.id(), "eventhubs");
        this.consumerGroupName = Utils.getValueFromIdByName(innerObject.id(), "consumergroups");
    }

    public ConsumerGroup refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getConsumerGroups()
                .getWithResponse(resourceGroupName, namespaceName, eventHubName, consumerGroupName, Context.NONE)
                .getValue();
        return this;
    }

    public ConsumerGroup refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getConsumerGroups()
                .getWithResponse(resourceGroupName, namespaceName, eventHubName, consumerGroupName, context)
                .getValue();
        return this;
    }

    public ConsumerGroupImpl withUserMetadata(String userMetadata) {
        this.innerModel().withUserMetadata(userMetadata);
        return this;
    }
}
