// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.selfhelp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.selfhelp.models.Confidence;
import com.azure.resourcemanager.selfhelp.models.ResultType;
import com.azure.resourcemanager.selfhelp.models.SearchResult;
import org.junit.jupiter.api.Assertions;

public final class SearchResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SearchResult model = BinaryData.fromString(
            "{\"solutionId\":\"noae\",\"content\":\"fhyhltrpmopjmcma\",\"title\":\"okth\",\"confidence\":\"Medium\",\"source\":\"aodsfcpkv\",\"resultType\":\"Community\",\"rank\":1276916323,\"link\":\"zmyzydagf\"}")
            .toObject(SearchResult.class);
        Assertions.assertEquals("noae", model.solutionId());
        Assertions.assertEquals("fhyhltrpmopjmcma", model.content());
        Assertions.assertEquals("okth", model.title());
        Assertions.assertEquals(Confidence.MEDIUM, model.confidence());
        Assertions.assertEquals("aodsfcpkv", model.source());
        Assertions.assertEquals(ResultType.COMMUNITY, model.resultType());
        Assertions.assertEquals(1276916323, model.rank());
        Assertions.assertEquals("zmyzydagf", model.link());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SearchResult model = new SearchResult().withSolutionId("noae")
            .withContent("fhyhltrpmopjmcma")
            .withTitle("okth")
            .withConfidence(Confidence.MEDIUM)
            .withSource("aodsfcpkv")
            .withResultType(ResultType.COMMUNITY)
            .withRank(1276916323)
            .withLink("zmyzydagf");
        model = BinaryData.fromObject(model).toObject(SearchResult.class);
        Assertions.assertEquals("noae", model.solutionId());
        Assertions.assertEquals("fhyhltrpmopjmcma", model.content());
        Assertions.assertEquals("okth", model.title());
        Assertions.assertEquals(Confidence.MEDIUM, model.confidence());
        Assertions.assertEquals("aodsfcpkv", model.source());
        Assertions.assertEquals(ResultType.COMMUNITY, model.resultType());
        Assertions.assertEquals(1276916323, model.rank());
        Assertions.assertEquals("zmyzydagf", model.link());
    }
}
