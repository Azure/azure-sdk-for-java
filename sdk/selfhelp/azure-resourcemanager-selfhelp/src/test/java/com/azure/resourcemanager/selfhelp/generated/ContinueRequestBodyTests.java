// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.selfhelp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.selfhelp.models.ContinueRequestBody;
import com.azure.resourcemanager.selfhelp.models.QuestionType;
import com.azure.resourcemanager.selfhelp.models.TroubleshooterResponse;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ContinueRequestBodyTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ContinueRequestBody model = BinaryData.fromString(
            "{\"stepId\":\"erscdntne\",\"responses\":[{\"questionId\":\"jmygtdsslswtmwer\",\"questionType\":\"DateTimePicker\",\"response\":\"pyqs\"},{\"questionId\":\"wab\",\"questionType\":\"DateTimePicker\",\"response\":\"hhszh\"},{\"questionId\":\"plvwiwubmwmbes\",\"questionType\":\"MultiLineInfoBox\",\"response\":\"wwtppj\"}]}")
            .toObject(ContinueRequestBody.class);
        Assertions.assertEquals("erscdntne", model.stepId());
        Assertions.assertEquals("jmygtdsslswtmwer", model.responses().get(0).questionId());
        Assertions.assertEquals(QuestionType.DATE_TIME_PICKER, model.responses().get(0).questionType());
        Assertions.assertEquals("pyqs", model.responses().get(0).response());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ContinueRequestBody model = new ContinueRequestBody().withStepId("erscdntne")
            .withResponses(Arrays.asList(
                new TroubleshooterResponse().withQuestionId("jmygtdsslswtmwer")
                    .withQuestionType(QuestionType.DATE_TIME_PICKER)
                    .withResponse("pyqs"),
                new TroubleshooterResponse().withQuestionId("wab")
                    .withQuestionType(QuestionType.DATE_TIME_PICKER)
                    .withResponse("hhszh"),
                new TroubleshooterResponse().withQuestionId("plvwiwubmwmbes")
                    .withQuestionType(QuestionType.MULTI_LINE_INFO_BOX)
                    .withResponse("wwtppj")));
        model = BinaryData.fromObject(model).toObject(ContinueRequestBody.class);
        Assertions.assertEquals("erscdntne", model.stepId());
        Assertions.assertEquals("jmygtdsslswtmwer", model.responses().get(0).questionId());
        Assertions.assertEquals(QuestionType.DATE_TIME_PICKER, model.responses().get(0).questionType());
        Assertions.assertEquals("pyqs", model.responses().get(0).response());
    }
}
