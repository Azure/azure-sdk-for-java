// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.selfhelp.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.selfhelp.fluent.models.DiscoveryNlpResponseInner;
import com.azure.resourcemanager.selfhelp.models.ClassificationService;
import com.azure.resourcemanager.selfhelp.models.SolutionMetadataProperties;
import com.azure.resourcemanager.selfhelp.models.SolutionNlpMetadataResource;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DiscoveryNlpResponseInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DiscoveryNlpResponseInner model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"problemTitle\":\"ka\",\"problemDescription\":\"utiiswacf\",\"serviceId\":\"dkzzewkfvhqcrail\",\"problemClassificationId\":\"n\",\"solutions\":[{\"solutionId\":\"flrwd\",\"solutionType\":\"Solutions\",\"description\":\"xyjrxsagafcnih\",\"requiredInputs\":[\"apnedgfbcvkc\",\"q\",\"pkeqdcvdrhvoo\"]},{\"solutionId\":\"otbobzdopcj\",\"solutionType\":\"Troubleshooters\",\"description\":\"dldwmgxc\",\"requiredInputs\":[\"lpmutwuoegrpkhj\",\"niyqslui\",\"pdggkzzlvm\"]},{\"solutionId\":\"paxmodfvuefywsb\",\"solutionType\":\"Diagnostics\",\"description\":\"wyhrfouyftaakc\",\"requiredInputs\":[\"yzvqt\",\"nubexk\",\"zksmondj\"]}],\"relatedServices\":[{\"serviceId\":\"vypomgkopkwho\",\"displayName\":\"pajqgxysm\",\"resourceTypes\":[\"bq\",\"qvmkcxo\"]},{\"serviceId\":\"pvhelxprg\",\"displayName\":\"atddc\",\"resourceTypes\":[\"cuejrjxgci\",\"ibrhosxsdqr\",\"zoymibmrqyibahw\"]},{\"serviceId\":\"uszdtmhrkwof\",\"displayName\":\"voqacpiexpbt\",\"resourceTypes\":[\"bwoenwashrt\"]},{\"serviceId\":\"kcnqxwbpo\",\"displayName\":\"lpiujwaa\",\"resourceTypes\":[\"qiiobyuqer\",\"qlpqwcciuq\",\"bdbutauvf\"]}]},\"id\":\"kuwhh\",\"name\":\"hykojoxafnndlpic\",\"type\":\"koymkcd\"},{\"properties\":{\"problemTitle\":\"pkkpw\",\"problemDescription\":\"eqnovvqfovl\",\"serviceId\":\"ywsuwsy\",\"problemClassificationId\":\"ndsytgadg\",\"solutions\":[{\"solutionId\":\"aeneqnzarrwl\",\"solutionType\":\"Solutions\",\"description\":\"jfqka\",\"requiredInputs\":[\"iipfpubj\",\"bwwift\"]},{\"solutionId\":\"qkvpuvksgplsakn\",\"solutionType\":\"Troubleshooters\",\"description\":\"ynl\",\"requiredInputs\":[\"uopxodlqiyntor\",\"ihleos\",\"swsrms\",\"yzrpzbchckqqzq\"]},{\"solutionId\":\"xiy\",\"solutionType\":\"SelfHelp\",\"description\":\"zynkedya\",\"requiredInputs\":[\"yhqmibzyhwi\",\"smypyynpc\",\"pumnz\",\"mwzn\"]},{\"solutionId\":\"biknsorgjhxbld\",\"solutionType\":\"Troubleshooters\",\"description\":\"rlkdmtncvokotl\",\"requiredInputs\":[\"yhgsy\"]}],\"relatedServices\":[{\"serviceId\":\"jlt\",\"displayName\":\"bnnhadoocrkvcik\",\"resourceTypes\":[\"p\"]},{\"serviceId\":\"qgxqquezikyw\",\"displayName\":\"xkalla\",\"resourceTypes\":[\"lwuip\",\"ccjzkzivgvv\"]},{\"serviceId\":\"ayrhyrnx\",\"displayName\":\"ueedndrdvs\",\"resourceTypes\":[\"qqtch\"]},{\"serviceId\":\"lmfmtdaay\",\"displayName\":\"v\",\"resourceTypes\":[\"piohgwxrtfu\",\"xepxgyqagvrvmn\",\"k\",\"kghimdblxgwimfnj\"]}]},\"id\":\"j\",\"name\":\"wmszkk\",\"type\":\"oqreyfkzikfjawn\"}]}")
            .toObject(DiscoveryNlpResponseInner.class);
        Assertions.assertEquals("ka", model.value().get(0).problemTitle());
        Assertions.assertEquals("utiiswacf", model.value().get(0).problemDescription());
        Assertions.assertEquals("dkzzewkfvhqcrail", model.value().get(0).serviceId());
        Assertions.assertEquals("n", model.value().get(0).problemClassificationId());
        Assertions.assertEquals("flrwd", model.value().get(0).solutions().get(0).solutionId());
        Assertions.assertEquals("bq", model.value().get(0).relatedServices().get(0).resourceTypes().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DiscoveryNlpResponseInner model = new DiscoveryNlpResponseInner().withValue(Arrays.asList(
            new SolutionNlpMetadataResource().withProblemTitle("ka")
                .withProblemDescription("utiiswacf")
                .withServiceId("dkzzewkfvhqcrail")
                .withProblemClassificationId("n")
                .withSolutions(Arrays.asList(new SolutionMetadataProperties().withSolutionId("flrwd"),
                    new SolutionMetadataProperties().withSolutionId("otbobzdopcj"),
                    new SolutionMetadataProperties().withSolutionId("paxmodfvuefywsb")))
                .withRelatedServices(
                    Arrays.asList(new ClassificationService().withResourceTypes(Arrays.asList("bq", "qvmkcxo")),
                        new ClassificationService()
                            .withResourceTypes(Arrays.asList("cuejrjxgci", "ibrhosxsdqr", "zoymibmrqyibahw")),
                        new ClassificationService().withResourceTypes(Arrays.asList("bwoenwashrt")),
                        new ClassificationService()
                            .withResourceTypes(Arrays.asList("qiiobyuqer", "qlpqwcciuq", "bdbutauvf")))),
            new SolutionNlpMetadataResource().withProblemTitle("pkkpw")
                .withProblemDescription("eqnovvqfovl")
                .withServiceId("ywsuwsy")
                .withProblemClassificationId("ndsytgadg")
                .withSolutions(Arrays.asList(new SolutionMetadataProperties().withSolutionId("aeneqnzarrwl"),
                    new SolutionMetadataProperties().withSolutionId("qkvpuvksgplsakn"),
                    new SolutionMetadataProperties().withSolutionId("xiy"),
                    new SolutionMetadataProperties().withSolutionId("biknsorgjhxbld")))
                .withRelatedServices(Arrays.asList(new ClassificationService().withResourceTypes(Arrays.asList("p")),
                    new ClassificationService().withResourceTypes(Arrays.asList("lwuip", "ccjzkzivgvv")),
                    new ClassificationService().withResourceTypes(Arrays.asList("qqtch")), new ClassificationService()
                        .withResourceTypes(Arrays.asList("piohgwxrtfu", "xepxgyqagvrvmn", "k", "kghimdblxgwimfnj"))))));
        model = BinaryData.fromObject(model).toObject(DiscoveryNlpResponseInner.class);
        Assertions.assertEquals("ka", model.value().get(0).problemTitle());
        Assertions.assertEquals("utiiswacf", model.value().get(0).problemDescription());
        Assertions.assertEquals("dkzzewkfvhqcrail", model.value().get(0).serviceId());
        Assertions.assertEquals("n", model.value().get(0).problemClassificationId());
        Assertions.assertEquals("flrwd", model.value().get(0).solutions().get(0).solutionId());
        Assertions.assertEquals("bq", model.value().get(0).relatedServices().get(0).resourceTypes().get(0));
    }
}
