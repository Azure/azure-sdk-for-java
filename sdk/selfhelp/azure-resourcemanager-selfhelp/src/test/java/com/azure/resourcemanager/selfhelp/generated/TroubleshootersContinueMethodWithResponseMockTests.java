// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.selfhelp.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.selfhelp.SelfHelpManager;
import com.azure.resourcemanager.selfhelp.models.ContinueRequestBody;
import com.azure.resourcemanager.selfhelp.models.QuestionType;
import com.azure.resourcemanager.selfhelp.models.TroubleshooterResponse;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class TroubleshootersContinueMethodWithResponseMockTests {
    @Test
    public void testContinueMethodWithResponse() throws Exception {
        String responseStr = "{}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 204, responseStr.getBytes(StandardCharsets.UTF_8)));
        SelfHelpManager manager = SelfHelpManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        manager.troubleshooters()
            .continueMethodWithResponse("ilqu", "rydxtqm",
                new ContinueRequestBody().withStepId("ox")
                    .withResponses(Arrays.asList(
                        new TroubleshooterResponse().withQuestionId("ufhyaomtbgh")
                            .withQuestionType(QuestionType.DATE_TIME_PICKER)
                            .withResponse("rvk"),
                        new TroubleshooterResponse().withQuestionId("ovjzhpjbibgjmfx")
                            .withQuestionType(QuestionType.DATE_TIME_PICKER)
                            .withResponse("cluyovwxnbkf"),
                        new TroubleshooterResponse().withQuestionId("zxscyhwzdgirujb")
                            .withQuestionType(QuestionType.MULTI_SELECT)
                            .withResponse("vzzbtdcq"))),
                com.azure.core.util.Context.NONE);

    }
}
