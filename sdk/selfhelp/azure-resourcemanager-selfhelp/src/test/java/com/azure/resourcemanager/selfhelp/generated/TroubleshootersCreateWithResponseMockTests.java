// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.selfhelp.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.selfhelp.SelfHelpManager;
import com.azure.resourcemanager.selfhelp.models.TroubleshooterResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class TroubleshootersCreateWithResponseMockTests {
    @Test
    public void testCreateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"solutionId\":\"uayjkqa\",\"parameters\":{\"ntiew\":\"zslesjcbher\",\"uwrbehwagoh\":\"jcvb\",\"xtdr\":\"uffkmrqemvvh\",\"znmwcp\":\"futacoebjvewzc\"},\"provisioningState\":\"Canceled\",\"steps\":[{\"id\":\"raufactkahzova\",\"title\":\"ziuxxpshnee\",\"description\":\"lfg\",\"guidance\":\"qubkw\",\"executionStatus\":\"Success\",\"executionStatusDescription\":\"rds\",\"type\":\"Decision\",\"isLastStep\":true,\"inputs\":[{},{},{}],\"automatedCheckResults\":{\"version\":\"uo\",\"status\":\"inyflnorwmduvwp\",\"result\":\"vxwmygd\",\"type\":\"Warning\"},\"insights\":[{},{}]},{\"id\":\"isze\",\"title\":\"nb\",\"description\":\"rxgibbd\",\"guidance\":\"confozauors\",\"executionStatus\":\"Running\",\"executionStatusDescription\":\"wbqpl\",\"type\":\"Solution\",\"isLastStep\":true,\"inputs\":[{}],\"automatedCheckResults\":{\"version\":\"lrphwzsoldw\",\"status\":\"uqdunvmnnrwrbi\",\"result\":\"ktalywjhhgdnhxms\",\"type\":\"Error\"},\"insights\":[{},{},{},{}]},{\"id\":\"ox\",\"title\":\"dufiq\",\"description\":\"ieuzaofjchvcyyy\",\"guidance\":\"gdotcubiipuipwo\",\"executionStatus\":\"Running\",\"executionStatusDescription\":\"acjekni\",\"type\":\"AutomatedCheck\",\"isLastStep\":false,\"inputs\":[{},{}],\"automatedCheckResults\":{\"version\":\"ev\",\"status\":\"mblrrilbywd\",\"result\":\"miccwrwfscjfnyn\",\"type\":\"Warning\"},\"insights\":[{},{},{}]},{\"id\":\"dvoqyt\",\"title\":\"yo\",\"description\":\"blgyavutpthj\",\"guidance\":\"oismsksbpimlqol\",\"executionStatus\":\"Warning\",\"executionStatusDescription\":\"gxxlxsffgcvizq\",\"type\":\"AutomatedCheck\",\"isLastStep\":false,\"inputs\":[{},{},{}],\"automatedCheckResults\":{\"version\":\"upfgfbk\",\"status\":\"bdyhgkfminsgowz\",\"result\":\"tsttktlahbq\",\"type\":\"Success\"},\"insights\":[{},{},{}]}]},\"id\":\"ukxit\",\"name\":\"m\",\"type\":\"tg\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SelfHelpManager manager = SelfHelpManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        TroubleshooterResource response = manager.troubleshooters()
            .define("h")
            .withExistingScope("piwyczuhxacpqjl")
            .withSolutionId("spskasdvlmfwdgz")
            .withParameters(mapOf("euzvx", "ucvpamrs", "xmrhu", "risjnhnytxifqjz"))
            .create();

        Assertions.assertEquals("uayjkqa", response.solutionId());
        Assertions.assertEquals("zslesjcbher", response.parameters().get("ntiew"));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
