// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.selfhelp.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.selfhelp.fluent.models.SimplifiedSolutionsResourceInner;

/**
 * An instance of this class provides access to all the operations defined in SimplifiedSolutionsClient.
 */
public interface SimplifiedSolutionsClient {
    /**
     * Creates Simplified Solutions for an Azure subscription using 'solutionId' from Discovery Solutions as the input.
     * &lt;br/&gt;&lt;br/&gt; Simplified Solutions API makes the consumption of solutions APIs easier while still
     * providing access to the same powerful solutions rendered in Solutions API. With Simplified Solutions, users don't
     * have to worry about stitching together the article using replacement maps and can use the content in the API
     * response to directly render as HTML content.&lt;br/&gt;.
     * 
     * @param scope scope = resourceUri of affected resource.&lt;br/&gt; For example:
     * /subscriptions/0d0fcd2e-c4fd-4349-8497-200edb3923c6/resourcegroups/myresourceGroup/providers/Microsoft.KeyVault/vaults/test-keyvault-non-read.
     * @param simplifiedSolutionsResourceName Simplified Solutions Resource Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of simplified Solutions response.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<SimplifiedSolutionsResourceInner>, SimplifiedSolutionsResourceInner> beginCreate(String scope,
        String simplifiedSolutionsResourceName);

    /**
     * Creates Simplified Solutions for an Azure subscription using 'solutionId' from Discovery Solutions as the input.
     * &lt;br/&gt;&lt;br/&gt; Simplified Solutions API makes the consumption of solutions APIs easier while still
     * providing access to the same powerful solutions rendered in Solutions API. With Simplified Solutions, users don't
     * have to worry about stitching together the article using replacement maps and can use the content in the API
     * response to directly render as HTML content.&lt;br/&gt;.
     * 
     * @param scope scope = resourceUri of affected resource.&lt;br/&gt; For example:
     * /subscriptions/0d0fcd2e-c4fd-4349-8497-200edb3923c6/resourcegroups/myresourceGroup/providers/Microsoft.KeyVault/vaults/test-keyvault-non-read.
     * @param simplifiedSolutionsResourceName Simplified Solutions Resource Name.
     * @param simplifiedSolutionsRequestBody The required request body for simplified Solutions resource creation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of simplified Solutions response.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<SimplifiedSolutionsResourceInner>, SimplifiedSolutionsResourceInner> beginCreate(String scope,
        String simplifiedSolutionsResourceName, SimplifiedSolutionsResourceInner simplifiedSolutionsRequestBody,
        Context context);

    /**
     * Creates Simplified Solutions for an Azure subscription using 'solutionId' from Discovery Solutions as the input.
     * &lt;br/&gt;&lt;br/&gt; Simplified Solutions API makes the consumption of solutions APIs easier while still
     * providing access to the same powerful solutions rendered in Solutions API. With Simplified Solutions, users don't
     * have to worry about stitching together the article using replacement maps and can use the content in the API
     * response to directly render as HTML content.&lt;br/&gt;.
     * 
     * @param scope scope = resourceUri of affected resource.&lt;br/&gt; For example:
     * /subscriptions/0d0fcd2e-c4fd-4349-8497-200edb3923c6/resourcegroups/myresourceGroup/providers/Microsoft.KeyVault/vaults/test-keyvault-non-read.
     * @param simplifiedSolutionsResourceName Simplified Solutions Resource Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return simplified Solutions response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SimplifiedSolutionsResourceInner create(String scope, String simplifiedSolutionsResourceName);

    /**
     * Creates Simplified Solutions for an Azure subscription using 'solutionId' from Discovery Solutions as the input.
     * &lt;br/&gt;&lt;br/&gt; Simplified Solutions API makes the consumption of solutions APIs easier while still
     * providing access to the same powerful solutions rendered in Solutions API. With Simplified Solutions, users don't
     * have to worry about stitching together the article using replacement maps and can use the content in the API
     * response to directly render as HTML content.&lt;br/&gt;.
     * 
     * @param scope scope = resourceUri of affected resource.&lt;br/&gt; For example:
     * /subscriptions/0d0fcd2e-c4fd-4349-8497-200edb3923c6/resourcegroups/myresourceGroup/providers/Microsoft.KeyVault/vaults/test-keyvault-non-read.
     * @param simplifiedSolutionsResourceName Simplified Solutions Resource Name.
     * @param simplifiedSolutionsRequestBody The required request body for simplified Solutions resource creation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return simplified Solutions response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SimplifiedSolutionsResourceInner create(String scope, String simplifiedSolutionsResourceName,
        SimplifiedSolutionsResourceInner simplifiedSolutionsRequestBody, Context context);

    /**
     * Get the simplified Solutions using the applicable solutionResourceName while creating the simplified Solutions.
     * 
     * @param scope scope = resourceUri of affected resource.&lt;br/&gt; For example:
     * /subscriptions/0d0fcd2e-c4fd-4349-8497-200edb3923c6/resourcegroups/myresourceGroup/providers/Microsoft.KeyVault/vaults/test-keyvault-non-read.
     * @param simplifiedSolutionsResourceName Simplified Solutions Resource Name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the simplified Solutions using the applicable solutionResourceName while creating the simplified
     * Solutions along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<SimplifiedSolutionsResourceInner> getWithResponse(String scope, String simplifiedSolutionsResourceName,
        Context context);

    /**
     * Get the simplified Solutions using the applicable solutionResourceName while creating the simplified Solutions.
     * 
     * @param scope scope = resourceUri of affected resource.&lt;br/&gt; For example:
     * /subscriptions/0d0fcd2e-c4fd-4349-8497-200edb3923c6/resourcegroups/myresourceGroup/providers/Microsoft.KeyVault/vaults/test-keyvault-non-read.
     * @param simplifiedSolutionsResourceName Simplified Solutions Resource Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the simplified Solutions using the applicable solutionResourceName while creating the simplified
     * Solutions.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SimplifiedSolutionsResourceInner get(String scope, String simplifiedSolutionsResourceName);
}
