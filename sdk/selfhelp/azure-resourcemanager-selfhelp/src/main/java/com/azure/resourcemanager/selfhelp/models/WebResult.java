// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.selfhelp.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * AzureKB web result.
 */
@Fluent
public final class WebResult {
    /*
     * Place holder used in HTML Content replace control with the content
     */
    @JsonProperty(value = "replacementKey")
    private String replacementKey;

    /*
     * AzureKB search results
     */
    @JsonProperty(value = "searchResults")
    private List<SearchResult> searchResults;

    /**
     * Creates an instance of WebResult class.
     */
    public WebResult() {
    }

    /**
     * Get the replacementKey property: Place holder used in HTML Content replace control with the content.
     * 
     * @return the replacementKey value.
     */
    public String replacementKey() {
        return this.replacementKey;
    }

    /**
     * Set the replacementKey property: Place holder used in HTML Content replace control with the content.
     * 
     * @param replacementKey the replacementKey value to set.
     * @return the WebResult object itself.
     */
    public WebResult withReplacementKey(String replacementKey) {
        this.replacementKey = replacementKey;
        return this;
    }

    /**
     * Get the searchResults property: AzureKB search results.
     * 
     * @return the searchResults value.
     */
    public List<SearchResult> searchResults() {
        return this.searchResults;
    }

    /**
     * Set the searchResults property: AzureKB search results.
     * 
     * @param searchResults the searchResults value to set.
     * @return the WebResult object itself.
     */
    public WebResult withSearchResults(List<SearchResult> searchResults) {
        this.searchResults = searchResults;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (searchResults() != null) {
            searchResults().forEach(e -> e.validate());
        }
    }
}
