// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.selfhelp.models;

import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * Status of solution provisioning.
 */
public final class SolutionProvisioningState extends ExpandableStringEnum<SolutionProvisioningState> {
    /**
     * Static value Succeeded for SolutionProvisioningState.
     */
    public static final SolutionProvisioningState SUCCEEDED = fromString("Succeeded");

    /**
     * Static value PartialComplete for SolutionProvisioningState.
     */
    public static final SolutionProvisioningState PARTIAL_COMPLETE = fromString("PartialComplete");

    /**
     * Static value Failed for SolutionProvisioningState.
     */
    public static final SolutionProvisioningState FAILED = fromString("Failed");

    /**
     * Static value Running for SolutionProvisioningState.
     */
    public static final SolutionProvisioningState RUNNING = fromString("Running");

    /**
     * Static value Canceled for SolutionProvisioningState.
     */
    public static final SolutionProvisioningState CANCELED = fromString("Canceled");

    /**
     * Creates a new instance of SolutionProvisioningState value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public SolutionProvisioningState() {
    }

    /**
     * Creates or finds a SolutionProvisioningState from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding SolutionProvisioningState.
     */
    public static SolutionProvisioningState fromString(String name) {
        return fromString(name, SolutionProvisioningState.class);
    }

    /**
     * Gets known SolutionProvisioningState values.
     * 
     * @return known SolutionProvisioningState values.
     */
    public static Collection<SolutionProvisioningState> values() {
        return values(SolutionProvisioningState.class);
    }
}
