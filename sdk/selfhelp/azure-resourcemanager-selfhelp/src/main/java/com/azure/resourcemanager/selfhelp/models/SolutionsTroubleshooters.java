// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.selfhelp.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Troubleshooters in Solutions.
 */
@Fluent
public final class SolutionsTroubleshooters implements JsonSerializable<SolutionsTroubleshooters> {
    /*
     * Solution Id to identify single Solutions Troubleshooter
     */
    private String solutionId;

    /*
     * Troubleshooter title
     */
    private String title;

    /*
     * Troubleshooter summary
     */
    private String summary;

    /**
     * Creates an instance of SolutionsTroubleshooters class.
     */
    public SolutionsTroubleshooters() {
    }

    /**
     * Get the solutionId property: Solution Id to identify single Solutions Troubleshooter.
     * 
     * @return the solutionId value.
     */
    public String solutionId() {
        return this.solutionId;
    }

    /**
     * Set the solutionId property: Solution Id to identify single Solutions Troubleshooter.
     * 
     * @param solutionId the solutionId value to set.
     * @return the SolutionsTroubleshooters object itself.
     */
    public SolutionsTroubleshooters withSolutionId(String solutionId) {
        this.solutionId = solutionId;
        return this;
    }

    /**
     * Get the title property: Troubleshooter title.
     * 
     * @return the title value.
     */
    public String title() {
        return this.title;
    }

    /**
     * Set the title property: Troubleshooter title.
     * 
     * @param title the title value to set.
     * @return the SolutionsTroubleshooters object itself.
     */
    public SolutionsTroubleshooters withTitle(String title) {
        this.title = title;
        return this;
    }

    /**
     * Get the summary property: Troubleshooter summary.
     * 
     * @return the summary value.
     */
    public String summary() {
        return this.summary;
    }

    /**
     * Set the summary property: Troubleshooter summary.
     * 
     * @param summary the summary value to set.
     * @return the SolutionsTroubleshooters object itself.
     */
    public SolutionsTroubleshooters withSummary(String summary) {
        this.summary = summary;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("solutionId", this.solutionId);
        jsonWriter.writeStringField("title", this.title);
        jsonWriter.writeStringField("summary", this.summary);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SolutionsTroubleshooters from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SolutionsTroubleshooters if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SolutionsTroubleshooters.
     */
    public static SolutionsTroubleshooters fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SolutionsTroubleshooters deserializedSolutionsTroubleshooters = new SolutionsTroubleshooters();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("solutionId".equals(fieldName)) {
                    deserializedSolutionsTroubleshooters.solutionId = reader.getString();
                } else if ("title".equals(fieldName)) {
                    deserializedSolutionsTroubleshooters.title = reader.getString();
                } else if ("summary".equals(fieldName)) {
                    deserializedSolutionsTroubleshooters.summary = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSolutionsTroubleshooters;
        });
    }
}
