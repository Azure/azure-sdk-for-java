// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.selfhelp.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Video group detail.
 */
@Fluent
public final class VideoGroup {
    /*
     * List of videos will be shown to customers
     */
    @JsonProperty(value = "videos")
    private List<VideoGroupVideo> videos;

    /*
     * Place holder used in HTML Content replace control with the insight content
     */
    @JsonProperty(value = "replacementKey")
    private String replacementKey;

    /**
     * Creates an instance of VideoGroup class.
     */
    public VideoGroup() {
    }

    /**
     * Get the videos property: List of videos will be shown to customers.
     * 
     * @return the videos value.
     */
    public List<VideoGroupVideo> videos() {
        return this.videos;
    }

    /**
     * Set the videos property: List of videos will be shown to customers.
     * 
     * @param videos the videos value to set.
     * @return the VideoGroup object itself.
     */
    public VideoGroup withVideos(List<VideoGroupVideo> videos) {
        this.videos = videos;
        return this;
    }

    /**
     * Get the replacementKey property: Place holder used in HTML Content replace control with the insight content.
     * 
     * @return the replacementKey value.
     */
    public String replacementKey() {
        return this.replacementKey;
    }

    /**
     * Set the replacementKey property: Place holder used in HTML Content replace control with the insight content.
     * 
     * @param replacementKey the replacementKey value to set.
     * @return the VideoGroup object itself.
     */
    public VideoGroup withReplacementKey(String replacementKey) {
        this.replacementKey = replacementKey;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (videos() != null) {
            videos().forEach(e -> e.validate());
        }
    }
}
