// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.selfhelp.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Details of step input.
 */
@Fluent
public final class StepInput implements JsonSerializable<StepInput> {
    /*
     * Use Index as QuestionId.
     */
    private String questionId;

    /*
     * Type of Question
     */
    private QuestionType questionType;

    /*
     * Question title
     */
    private String questionTitle;

    /*
     * User question content.
     */
    private String questionContent;

    /*
     * Default is Text.
     */
    private QuestionContentType questionContentType;

    /*
     * Place holder text for response hints.
     */
    private String responseHint;

    /*
     * Result of Automate step.
     */
    private String recommendedOption;

    /*
     * Text of response that was selected.
     */
    private String selectedOptionValue;

    /*
     * Troubleshooter step input response validation properties
     */
    private ResponseValidationProperties responseValidationProperties;

    /*
     * The responseOptions property.
     */
    private List<ResponseOption> responseOptions;

    /**
     * Creates an instance of StepInput class.
     */
    public StepInput() {
    }

    /**
     * Get the questionId property: Use Index as QuestionId.
     * 
     * @return the questionId value.
     */
    public String questionId() {
        return this.questionId;
    }

    /**
     * Set the questionId property: Use Index as QuestionId.
     * 
     * @param questionId the questionId value to set.
     * @return the StepInput object itself.
     */
    public StepInput withQuestionId(String questionId) {
        this.questionId = questionId;
        return this;
    }

    /**
     * Get the questionType property: Type of Question.
     * 
     * @return the questionType value.
     */
    public QuestionType questionType() {
        return this.questionType;
    }

    /**
     * Set the questionType property: Type of Question.
     * 
     * @param questionType the questionType value to set.
     * @return the StepInput object itself.
     */
    public StepInput withQuestionType(QuestionType questionType) {
        this.questionType = questionType;
        return this;
    }

    /**
     * Get the questionTitle property: Question title.
     * 
     * @return the questionTitle value.
     */
    public String questionTitle() {
        return this.questionTitle;
    }

    /**
     * Set the questionTitle property: Question title.
     * 
     * @param questionTitle the questionTitle value to set.
     * @return the StepInput object itself.
     */
    public StepInput withQuestionTitle(String questionTitle) {
        this.questionTitle = questionTitle;
        return this;
    }

    /**
     * Get the questionContent property: User question content.
     * 
     * @return the questionContent value.
     */
    public String questionContent() {
        return this.questionContent;
    }

    /**
     * Set the questionContent property: User question content.
     * 
     * @param questionContent the questionContent value to set.
     * @return the StepInput object itself.
     */
    public StepInput withQuestionContent(String questionContent) {
        this.questionContent = questionContent;
        return this;
    }

    /**
     * Get the questionContentType property: Default is Text.
     * 
     * @return the questionContentType value.
     */
    public QuestionContentType questionContentType() {
        return this.questionContentType;
    }

    /**
     * Set the questionContentType property: Default is Text.
     * 
     * @param questionContentType the questionContentType value to set.
     * @return the StepInput object itself.
     */
    public StepInput withQuestionContentType(QuestionContentType questionContentType) {
        this.questionContentType = questionContentType;
        return this;
    }

    /**
     * Get the responseHint property: Place holder text for response hints.
     * 
     * @return the responseHint value.
     */
    public String responseHint() {
        return this.responseHint;
    }

    /**
     * Set the responseHint property: Place holder text for response hints.
     * 
     * @param responseHint the responseHint value to set.
     * @return the StepInput object itself.
     */
    public StepInput withResponseHint(String responseHint) {
        this.responseHint = responseHint;
        return this;
    }

    /**
     * Get the recommendedOption property: Result of Automate step.
     * 
     * @return the recommendedOption value.
     */
    public String recommendedOption() {
        return this.recommendedOption;
    }

    /**
     * Set the recommendedOption property: Result of Automate step.
     * 
     * @param recommendedOption the recommendedOption value to set.
     * @return the StepInput object itself.
     */
    public StepInput withRecommendedOption(String recommendedOption) {
        this.recommendedOption = recommendedOption;
        return this;
    }

    /**
     * Get the selectedOptionValue property: Text of response that was selected.
     * 
     * @return the selectedOptionValue value.
     */
    public String selectedOptionValue() {
        return this.selectedOptionValue;
    }

    /**
     * Set the selectedOptionValue property: Text of response that was selected.
     * 
     * @param selectedOptionValue the selectedOptionValue value to set.
     * @return the StepInput object itself.
     */
    public StepInput withSelectedOptionValue(String selectedOptionValue) {
        this.selectedOptionValue = selectedOptionValue;
        return this;
    }

    /**
     * Get the responseValidationProperties property: Troubleshooter step input response validation properties.
     * 
     * @return the responseValidationProperties value.
     */
    public ResponseValidationProperties responseValidationProperties() {
        return this.responseValidationProperties;
    }

    /**
     * Set the responseValidationProperties property: Troubleshooter step input response validation properties.
     * 
     * @param responseValidationProperties the responseValidationProperties value to set.
     * @return the StepInput object itself.
     */
    public StepInput withResponseValidationProperties(ResponseValidationProperties responseValidationProperties) {
        this.responseValidationProperties = responseValidationProperties;
        return this;
    }

    /**
     * Get the responseOptions property: The responseOptions property.
     * 
     * @return the responseOptions value.
     */
    public List<ResponseOption> responseOptions() {
        return this.responseOptions;
    }

    /**
     * Set the responseOptions property: The responseOptions property.
     * 
     * @param responseOptions the responseOptions value to set.
     * @return the StepInput object itself.
     */
    public StepInput withResponseOptions(List<ResponseOption> responseOptions) {
        this.responseOptions = responseOptions;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (responseValidationProperties() != null) {
            responseValidationProperties().validate();
        }
        if (responseOptions() != null) {
            responseOptions().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("questionId", this.questionId);
        jsonWriter.writeStringField("questionType", this.questionType == null ? null : this.questionType.toString());
        jsonWriter.writeStringField("questionTitle", this.questionTitle);
        jsonWriter.writeStringField("questionContent", this.questionContent);
        jsonWriter.writeStringField("questionContentType",
            this.questionContentType == null ? null : this.questionContentType.toString());
        jsonWriter.writeStringField("responseHint", this.responseHint);
        jsonWriter.writeStringField("recommendedOption", this.recommendedOption);
        jsonWriter.writeStringField("selectedOptionValue", this.selectedOptionValue);
        jsonWriter.writeJsonField("responseValidationProperties", this.responseValidationProperties);
        jsonWriter.writeArrayField("responseOptions", this.responseOptions,
            (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of StepInput from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of StepInput if the JsonReader was pointing to an instance of it, or null if it was pointing
     * to JSON null.
     * @throws IOException If an error occurs while reading the StepInput.
     */
    public static StepInput fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            StepInput deserializedStepInput = new StepInput();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("questionId".equals(fieldName)) {
                    deserializedStepInput.questionId = reader.getString();
                } else if ("questionType".equals(fieldName)) {
                    deserializedStepInput.questionType = QuestionType.fromString(reader.getString());
                } else if ("questionTitle".equals(fieldName)) {
                    deserializedStepInput.questionTitle = reader.getString();
                } else if ("questionContent".equals(fieldName)) {
                    deserializedStepInput.questionContent = reader.getString();
                } else if ("questionContentType".equals(fieldName)) {
                    deserializedStepInput.questionContentType = QuestionContentType.fromString(reader.getString());
                } else if ("responseHint".equals(fieldName)) {
                    deserializedStepInput.responseHint = reader.getString();
                } else if ("recommendedOption".equals(fieldName)) {
                    deserializedStepInput.recommendedOption = reader.getString();
                } else if ("selectedOptionValue".equals(fieldName)) {
                    deserializedStepInput.selectedOptionValue = reader.getString();
                } else if ("responseValidationProperties".equals(fieldName)) {
                    deserializedStepInput.responseValidationProperties = ResponseValidationProperties.fromJson(reader);
                } else if ("responseOptions".equals(fieldName)) {
                    List<ResponseOption> responseOptions
                        = reader.readArray(reader1 -> ResponseOption.fromJson(reader1));
                    deserializedStepInput.responseOptions = responseOptions;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedStepInput;
        });
    }
}
