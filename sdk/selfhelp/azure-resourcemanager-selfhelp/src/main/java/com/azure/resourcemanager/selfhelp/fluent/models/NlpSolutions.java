// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.selfhelp.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.selfhelp.models.ClassificationService;
import com.azure.resourcemanager.selfhelp.models.SolutionMetadataProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Nlp metadata.
 */
@Fluent
public final class NlpSolutions {
    /*
     * Title of the problem classification.
     */
    @JsonProperty(value = "problemTitle")
    private String problemTitle;

    /*
     * Description of the problem classification.
     */
    @JsonProperty(value = "problemDescription")
    private String problemDescription;

    /*
     * Id of the service (https://learn.microsoft.com/en-us/rest/api/support/services?view=rest-support-2020-04-01) that may be used to create a support ticket.
     */
    @JsonProperty(value = "serviceId")
    private String serviceId;

    /*
     * Id of the ProblemClassification (https://learn.microsoft.com/en-us/rest/api/support/problem-classifications?view=rest-support-2020-04-01) that may be used to create a support ticket.
     */
    @JsonProperty(value = "problemClassificationId")
    private String problemClassificationId;

    /*
     * The list of solution metadata.
     */
    @JsonProperty(value = "solutions")
    private List<SolutionMetadataProperties> solutions;

    /*
     * The set of services that are most likely related to the request. If relatedServices is included in the response then solutions may not be discovered until the client calls a second time specifying one of the service Ids in the relatedServices object.
     */
    @JsonProperty(value = "relatedServices")
    private List<ClassificationService> relatedServices;

    /**
     * Creates an instance of NlpSolutions class.
     */
    public NlpSolutions() {
    }

    /**
     * Get the problemTitle property: Title of the problem classification.
     * 
     * @return the problemTitle value.
     */
    public String problemTitle() {
        return this.problemTitle;
    }

    /**
     * Set the problemTitle property: Title of the problem classification.
     * 
     * @param problemTitle the problemTitle value to set.
     * @return the NlpSolutions object itself.
     */
    public NlpSolutions withProblemTitle(String problemTitle) {
        this.problemTitle = problemTitle;
        return this;
    }

    /**
     * Get the problemDescription property: Description of the problem classification.
     * 
     * @return the problemDescription value.
     */
    public String problemDescription() {
        return this.problemDescription;
    }

    /**
     * Set the problemDescription property: Description of the problem classification.
     * 
     * @param problemDescription the problemDescription value to set.
     * @return the NlpSolutions object itself.
     */
    public NlpSolutions withProblemDescription(String problemDescription) {
        this.problemDescription = problemDescription;
        return this;
    }

    /**
     * Get the serviceId property: Id of the service
     * (https://learn.microsoft.com/en-us/rest/api/support/services?view=rest-support-2020-04-01) that may be used to
     * create a support ticket.
     * 
     * @return the serviceId value.
     */
    public String serviceId() {
        return this.serviceId;
    }

    /**
     * Set the serviceId property: Id of the service
     * (https://learn.microsoft.com/en-us/rest/api/support/services?view=rest-support-2020-04-01) that may be used to
     * create a support ticket.
     * 
     * @param serviceId the serviceId value to set.
     * @return the NlpSolutions object itself.
     */
    public NlpSolutions withServiceId(String serviceId) {
        this.serviceId = serviceId;
        return this;
    }

    /**
     * Get the problemClassificationId property: Id of the ProblemClassification
     * (https://learn.microsoft.com/en-us/rest/api/support/problem-classifications?view=rest-support-2020-04-01) that
     * may be used to create a support ticket.
     * 
     * @return the problemClassificationId value.
     */
    public String problemClassificationId() {
        return this.problemClassificationId;
    }

    /**
     * Set the problemClassificationId property: Id of the ProblemClassification
     * (https://learn.microsoft.com/en-us/rest/api/support/problem-classifications?view=rest-support-2020-04-01) that
     * may be used to create a support ticket.
     * 
     * @param problemClassificationId the problemClassificationId value to set.
     * @return the NlpSolutions object itself.
     */
    public NlpSolutions withProblemClassificationId(String problemClassificationId) {
        this.problemClassificationId = problemClassificationId;
        return this;
    }

    /**
     * Get the solutions property: The list of solution metadata.
     * 
     * @return the solutions value.
     */
    public List<SolutionMetadataProperties> solutions() {
        return this.solutions;
    }

    /**
     * Set the solutions property: The list of solution metadata.
     * 
     * @param solutions the solutions value to set.
     * @return the NlpSolutions object itself.
     */
    public NlpSolutions withSolutions(List<SolutionMetadataProperties> solutions) {
        this.solutions = solutions;
        return this;
    }

    /**
     * Get the relatedServices property: The set of services that are most likely related to the request. If
     * relatedServices is included in the response then solutions may not be discovered until the client calls a second
     * time specifying one of the service Ids in the relatedServices object.
     * 
     * @return the relatedServices value.
     */
    public List<ClassificationService> relatedServices() {
        return this.relatedServices;
    }

    /**
     * Set the relatedServices property: The set of services that are most likely related to the request. If
     * relatedServices is included in the response then solutions may not be discovered until the client calls a second
     * time specifying one of the service Ids in the relatedServices object.
     * 
     * @param relatedServices the relatedServices value to set.
     * @return the NlpSolutions object itself.
     */
    public NlpSolutions withRelatedServices(List<ClassificationService> relatedServices) {
        this.relatedServices = relatedServices;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (solutions() != null) {
            solutions().forEach(e -> e.validate());
        }
        if (relatedServices() != null) {
            relatedServices().forEach(e -> e.validate());
        }
    }
}
