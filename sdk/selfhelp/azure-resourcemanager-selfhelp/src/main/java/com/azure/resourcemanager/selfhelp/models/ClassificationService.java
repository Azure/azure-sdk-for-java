// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.selfhelp.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Service Classification result object.
 */
@Fluent
public final class ClassificationService {
    /*
     * Azure resource Id of the service.
     */
    @JsonProperty(value = "serviceId", access = JsonProperty.Access.WRITE_ONLY)
    private String serviceId;

    /*
     * Localized name of the azure service.
     */
    @JsonProperty(value = "displayName", access = JsonProperty.Access.WRITE_ONLY)
    private String displayName;

    /*
     * List of applicable ARM resource types for this service.
     */
    @JsonProperty(value = "resourceTypes")
    private List<String> resourceTypes;

    /**
     * Creates an instance of ClassificationService class.
     */
    public ClassificationService() {
    }

    /**
     * Get the serviceId property: Azure resource Id of the service.
     * 
     * @return the serviceId value.
     */
    public String serviceId() {
        return this.serviceId;
    }

    /**
     * Get the displayName property: Localized name of the azure service.
     * 
     * @return the displayName value.
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Get the resourceTypes property: List of applicable ARM resource types for this service.
     * 
     * @return the resourceTypes value.
     */
    public List<String> resourceTypes() {
        return this.resourceTypes;
    }

    /**
     * Set the resourceTypes property: List of applicable ARM resource types for this service.
     * 
     * @param resourceTypes the resourceTypes value to set.
     * @return the ClassificationService object itself.
     */
    public ClassificationService withResourceTypes(List<String> resourceTypes) {
        this.resourceTypes = resourceTypes;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
