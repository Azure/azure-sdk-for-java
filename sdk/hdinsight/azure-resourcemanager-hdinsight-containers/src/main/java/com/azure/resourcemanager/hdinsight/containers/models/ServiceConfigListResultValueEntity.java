// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Default config details.
 */
@Fluent
public final class ServiceConfigListResultValueEntity {
    /*
     * Config value.
     */
    @JsonProperty(value = "value", required = true)
    private String value;

    /*
     * Config description.
     */
    @JsonProperty(value = "description")
    private String description;

    /**
     * Creates an instance of ServiceConfigListResultValueEntity class.
     */
    public ServiceConfigListResultValueEntity() {
    }

    /**
     * Get the value property: Config value.
     * 
     * @return the value value.
     */
    public String value() {
        return this.value;
    }

    /**
     * Set the value property: Config value.
     * 
     * @param value the value value to set.
     * @return the ServiceConfigListResultValueEntity object itself.
     */
    public ServiceConfigListResultValueEntity withValue(String value) {
        this.value = value;
        return this;
    }

    /**
     * Get the description property: Config description.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: Config description.
     * 
     * @param description the description value to set.
     * @return the ServiceConfigListResultValueEntity object itself.
     */
    public ServiceConfigListResultValueEntity withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (value() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property value in model ServiceConfigListResultValueEntity"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ServiceConfigListResultValueEntity.class);
}
