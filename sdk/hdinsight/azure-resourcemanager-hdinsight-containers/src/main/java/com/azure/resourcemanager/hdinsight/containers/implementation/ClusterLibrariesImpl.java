// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.hdinsight.containers.fluent.ClusterLibrariesClient;
import com.azure.resourcemanager.hdinsight.containers.fluent.models.ClusterLibraryInner;
import com.azure.resourcemanager.hdinsight.containers.models.Category;
import com.azure.resourcemanager.hdinsight.containers.models.ClusterLibraries;
import com.azure.resourcemanager.hdinsight.containers.models.ClusterLibrary;
import com.azure.resourcemanager.hdinsight.containers.models.ClusterLibraryManagementOperation;

public final class ClusterLibrariesImpl implements ClusterLibraries {
    private static final ClientLogger LOGGER = new ClientLogger(ClusterLibrariesImpl.class);

    private final ClusterLibrariesClient innerClient;

    private final com.azure.resourcemanager.hdinsight.containers.HDInsightContainersManager serviceManager;

    public ClusterLibrariesImpl(ClusterLibrariesClient innerClient,
        com.azure.resourcemanager.hdinsight.containers.HDInsightContainersManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<ClusterLibrary> list(String resourceGroupName, String clusterPoolName, String clusterName,
        Category category) {
        PagedIterable<ClusterLibraryInner> inner
            = this.serviceClient().list(resourceGroupName, clusterPoolName, clusterName, category);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new ClusterLibraryImpl(inner1, this.manager()));
    }

    public PagedIterable<ClusterLibrary> list(String resourceGroupName, String clusterPoolName, String clusterName,
        Category category, Context context) {
        PagedIterable<ClusterLibraryInner> inner
            = this.serviceClient().list(resourceGroupName, clusterPoolName, clusterName, category, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new ClusterLibraryImpl(inner1, this.manager()));
    }

    public void manageLibraries(String resourceGroupName, String clusterPoolName, String clusterName,
        ClusterLibraryManagementOperation operation) {
        this.serviceClient().manageLibraries(resourceGroupName, clusterPoolName, clusterName, operation);
    }

    public void manageLibraries(String resourceGroupName, String clusterPoolName, String clusterName,
        ClusterLibraryManagementOperation operation, Context context) {
        this.serviceClient().manageLibraries(resourceGroupName, clusterPoolName, clusterName, operation, context);
    }

    private ClusterLibrariesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.hdinsight.containers.HDInsightContainersManager manager() {
        return this.serviceManager;
    }
}
