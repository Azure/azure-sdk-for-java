// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Cluster available AKS patch version upgrade.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "upgradeType")
@JsonTypeName("AKSPatchUpgrade")
@Fluent
public final class ClusterAvailableUpgradeAksPatchUpgradeProperties extends ClusterAvailableUpgradeProperties {
    /*
     * Current node pool version.
     */
    @JsonProperty(value = "currentVersion")
    private String currentVersion;

    /*
     * Current AKS version's status: whether it is deprecated or supported
     */
    @JsonProperty(value = "currentVersionStatus")
    private CurrentClusterAksVersionStatus currentVersionStatus;

    /*
     * Latest available version, which should be equal to AKS control plane version if it's not deprecated.
     */
    @JsonProperty(value = "latestVersion")
    private String latestVersion;

    /**
     * Creates an instance of ClusterAvailableUpgradeAksPatchUpgradeProperties class.
     */
    public ClusterAvailableUpgradeAksPatchUpgradeProperties() {
    }

    /**
     * Get the currentVersion property: Current node pool version.
     * 
     * @return the currentVersion value.
     */
    public String currentVersion() {
        return this.currentVersion;
    }

    /**
     * Set the currentVersion property: Current node pool version.
     * 
     * @param currentVersion the currentVersion value to set.
     * @return the ClusterAvailableUpgradeAksPatchUpgradeProperties object itself.
     */
    public ClusterAvailableUpgradeAksPatchUpgradeProperties withCurrentVersion(String currentVersion) {
        this.currentVersion = currentVersion;
        return this;
    }

    /**
     * Get the currentVersionStatus property: Current AKS version's status: whether it is deprecated or supported.
     * 
     * @return the currentVersionStatus value.
     */
    public CurrentClusterAksVersionStatus currentVersionStatus() {
        return this.currentVersionStatus;
    }

    /**
     * Set the currentVersionStatus property: Current AKS version's status: whether it is deprecated or supported.
     * 
     * @param currentVersionStatus the currentVersionStatus value to set.
     * @return the ClusterAvailableUpgradeAksPatchUpgradeProperties object itself.
     */
    public ClusterAvailableUpgradeAksPatchUpgradeProperties
        withCurrentVersionStatus(CurrentClusterAksVersionStatus currentVersionStatus) {
        this.currentVersionStatus = currentVersionStatus;
        return this;
    }

    /**
     * Get the latestVersion property: Latest available version, which should be equal to AKS control plane version if
     * it's not deprecated.
     * 
     * @return the latestVersion value.
     */
    public String latestVersion() {
        return this.latestVersion;
    }

    /**
     * Set the latestVersion property: Latest available version, which should be equal to AKS control plane version if
     * it's not deprecated.
     * 
     * @param latestVersion the latestVersion value to set.
     * @return the ClusterAvailableUpgradeAksPatchUpgradeProperties object itself.
     */
    public ClusterAvailableUpgradeAksPatchUpgradeProperties withLatestVersion(String latestVersion) {
        this.latestVersion = latestVersion;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
