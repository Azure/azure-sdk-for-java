// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.hdinsight.containers.models.ClusterInstanceViewPropertiesStatus;
import com.azure.resourcemanager.hdinsight.containers.models.ServiceStatus;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Cluster Instance View. */
@Fluent
public final class ClusterInstanceViewResultInner {
    /*
     * Name of the instance view.
     */
    @JsonProperty(value = "name", required = true)
    private String name;

    /*
     * Properties of the instance view.
     */
    @JsonProperty(value = "properties", required = true)
    private ClusterInstanceViewResultProperties innerProperties = new ClusterInstanceViewResultProperties();

    /** Creates an instance of ClusterInstanceViewResultInner class. */
    public ClusterInstanceViewResultInner() {
    }

    /**
     * Get the name property: Name of the instance view.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Name of the instance view.
     *
     * @param name the name value to set.
     * @return the ClusterInstanceViewResultInner object itself.
     */
    public ClusterInstanceViewResultInner withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the innerProperties property: Properties of the instance view.
     *
     * @return the innerProperties value.
     */
    private ClusterInstanceViewResultProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the status property: Status of the instance view.
     *
     * @return the status value.
     */
    public ClusterInstanceViewPropertiesStatus status() {
        return this.innerProperties() == null ? null : this.innerProperties().status();
    }

    /**
     * Set the status property: Status of the instance view.
     *
     * @param status the status value to set.
     * @return the ClusterInstanceViewResultInner object itself.
     */
    public ClusterInstanceViewResultInner withStatus(ClusterInstanceViewPropertiesStatus status) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ClusterInstanceViewResultProperties();
        }
        this.innerProperties().withStatus(status);
        return this;
    }

    /**
     * Get the serviceStatuses property: List of statuses of relevant services that make up the HDInsight on aks cluster
     * to surface to the customer.
     *
     * @return the serviceStatuses value.
     */
    public List<ServiceStatus> serviceStatuses() {
        return this.innerProperties() == null ? null : this.innerProperties().serviceStatuses();
    }

    /**
     * Set the serviceStatuses property: List of statuses of relevant services that make up the HDInsight on aks cluster
     * to surface to the customer.
     *
     * @param serviceStatuses the serviceStatuses value to set.
     * @return the ClusterInstanceViewResultInner object itself.
     */
    public ClusterInstanceViewResultInner withServiceStatuses(List<ServiceStatus> serviceStatuses) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ClusterInstanceViewResultProperties();
        }
        this.innerProperties().withServiceStatuses(serviceStatuses);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (name() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property name in model ClusterInstanceViewResultInner"));
        }
        if (innerProperties() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property innerProperties in model ClusterInstanceViewResultInner"));
        } else {
            innerProperties().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ClusterInstanceViewResultInner.class);
}
