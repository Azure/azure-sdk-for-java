// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Cluster Instance View Properties.
 */
@Fluent
public class ClusterInstanceViewProperties {
    /*
     * Status of the instance view.
     */
    @JsonProperty(value = "status", required = true)
    private ClusterInstanceViewPropertiesStatus status;

    /*
     * List of statuses of relevant services that make up the HDInsight on AKS cluster to surface to the customer.
     */
    @JsonProperty(value = "serviceStatuses", required = true)
    private List<ServiceStatus> serviceStatuses;

    /**
     * Creates an instance of ClusterInstanceViewProperties class.
     */
    public ClusterInstanceViewProperties() {
    }

    /**
     * Get the status property: Status of the instance view.
     * 
     * @return the status value.
     */
    public ClusterInstanceViewPropertiesStatus status() {
        return this.status;
    }

    /**
     * Set the status property: Status of the instance view.
     * 
     * @param status the status value to set.
     * @return the ClusterInstanceViewProperties object itself.
     */
    public ClusterInstanceViewProperties withStatus(ClusterInstanceViewPropertiesStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Get the serviceStatuses property: List of statuses of relevant services that make up the HDInsight on AKS
     * cluster to surface to the customer.
     * 
     * @return the serviceStatuses value.
     */
    public List<ServiceStatus> serviceStatuses() {
        return this.serviceStatuses;
    }

    /**
     * Set the serviceStatuses property: List of statuses of relevant services that make up the HDInsight on AKS
     * cluster to surface to the customer.
     * 
     * @param serviceStatuses the serviceStatuses value to set.
     * @return the ClusterInstanceViewProperties object itself.
     */
    public ClusterInstanceViewProperties withServiceStatuses(List<ServiceStatus> serviceStatuses) {
        this.serviceStatuses = serviceStatuses;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (status() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property status in model ClusterInstanceViewProperties"));
        } else {
            status().validate();
        }
        if (serviceStatuses() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property serviceStatuses in model ClusterInstanceViewProperties"));
        } else {
            serviceStatuses().forEach(e -> e.validate());
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ClusterInstanceViewProperties.class);
}
