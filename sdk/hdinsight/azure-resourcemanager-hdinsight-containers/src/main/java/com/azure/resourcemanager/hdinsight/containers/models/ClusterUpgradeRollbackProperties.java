// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Properties for manual rollback of cluster's upgrade.
 */
@Fluent
public final class ClusterUpgradeRollbackProperties implements JsonSerializable<ClusterUpgradeRollbackProperties> {
    /*
     * A specific upgrade history to rollback
     */
    private String upgradeHistory;

    /**
     * Creates an instance of ClusterUpgradeRollbackProperties class.
     */
    public ClusterUpgradeRollbackProperties() {
    }

    /**
     * Get the upgradeHistory property: A specific upgrade history to rollback.
     * 
     * @return the upgradeHistory value.
     */
    public String upgradeHistory() {
        return this.upgradeHistory;
    }

    /**
     * Set the upgradeHistory property: A specific upgrade history to rollback.
     * 
     * @param upgradeHistory the upgradeHistory value to set.
     * @return the ClusterUpgradeRollbackProperties object itself.
     */
    public ClusterUpgradeRollbackProperties withUpgradeHistory(String upgradeHistory) {
        this.upgradeHistory = upgradeHistory;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (upgradeHistory() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property upgradeHistory in model ClusterUpgradeRollbackProperties"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ClusterUpgradeRollbackProperties.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("upgradeHistory", this.upgradeHistory);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ClusterUpgradeRollbackProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ClusterUpgradeRollbackProperties if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the ClusterUpgradeRollbackProperties.
     */
    public static ClusterUpgradeRollbackProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ClusterUpgradeRollbackProperties deserializedClusterUpgradeRollbackProperties
                = new ClusterUpgradeRollbackProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("upgradeHistory".equals(fieldName)) {
                    deserializedClusterUpgradeRollbackProperties.upgradeHistory = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedClusterUpgradeRollbackProperties;
        });
    }
}
