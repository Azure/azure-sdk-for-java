// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Cluster access profile.
 */
@Fluent
public final class ClusterAccessProfile {
    /*
     * Whether to create cluster using private IP instead of public IP. This property must be set at create time.
     */
    @JsonProperty(value = "enableInternalIngress", required = true)
    private boolean enableInternalIngress;

    /*
     * Private link service resource ID. Only when enableInternalIngress is true, this property will be returned.
     */
    @JsonProperty(value = "privateLinkServiceId", access = JsonProperty.Access.WRITE_ONLY)
    private String privateLinkServiceId;

    /**
     * Creates an instance of ClusterAccessProfile class.
     */
    public ClusterAccessProfile() {
    }

    /**
     * Get the enableInternalIngress property: Whether to create cluster using private IP instead of public IP. This
     * property must be set at create time.
     * 
     * @return the enableInternalIngress value.
     */
    public boolean enableInternalIngress() {
        return this.enableInternalIngress;
    }

    /**
     * Set the enableInternalIngress property: Whether to create cluster using private IP instead of public IP. This
     * property must be set at create time.
     * 
     * @param enableInternalIngress the enableInternalIngress value to set.
     * @return the ClusterAccessProfile object itself.
     */
    public ClusterAccessProfile withEnableInternalIngress(boolean enableInternalIngress) {
        this.enableInternalIngress = enableInternalIngress;
        return this;
    }

    /**
     * Get the privateLinkServiceId property: Private link service resource ID. Only when enableInternalIngress is
     * true, this property will be returned.
     * 
     * @return the privateLinkServiceId value.
     */
    public String privateLinkServiceId() {
        return this.privateLinkServiceId;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
