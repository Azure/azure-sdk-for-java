// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Cluster pool available node OS update.
 */
@Fluent
public final class ClusterPoolAvailableUpgradeNodeOsUpgradeProperties extends ClusterPoolAvailableUpgradeProperties {
    /*
     * Type of upgrade.
     */
    private ClusterPoolAvailableUpgradeType upgradeType = ClusterPoolAvailableUpgradeType.NODE_OS_UPGRADE;

    /*
     * The latest node OS version.
     */
    private String latestVersion;

    /**
     * Creates an instance of ClusterPoolAvailableUpgradeNodeOsUpgradeProperties class.
     */
    public ClusterPoolAvailableUpgradeNodeOsUpgradeProperties() {
    }

    /**
     * Get the upgradeType property: Type of upgrade.
     * 
     * @return the upgradeType value.
     */
    @Override
    public ClusterPoolAvailableUpgradeType upgradeType() {
        return this.upgradeType;
    }

    /**
     * Get the latestVersion property: The latest node OS version.
     * 
     * @return the latestVersion value.
     */
    public String latestVersion() {
        return this.latestVersion;
    }

    /**
     * Set the latestVersion property: The latest node OS version.
     * 
     * @param latestVersion the latestVersion value to set.
     * @return the ClusterPoolAvailableUpgradeNodeOsUpgradeProperties object itself.
     */
    public ClusterPoolAvailableUpgradeNodeOsUpgradeProperties withLatestVersion(String latestVersion) {
        this.latestVersion = latestVersion;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("upgradeType", this.upgradeType == null ? null : this.upgradeType.toString());
        jsonWriter.writeStringField("latestVersion", this.latestVersion);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ClusterPoolAvailableUpgradeNodeOsUpgradeProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ClusterPoolAvailableUpgradeNodeOsUpgradeProperties if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ClusterPoolAvailableUpgradeNodeOsUpgradeProperties.
     */
    public static ClusterPoolAvailableUpgradeNodeOsUpgradeProperties fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            ClusterPoolAvailableUpgradeNodeOsUpgradeProperties deserializedClusterPoolAvailableUpgradeNodeOsUpgradeProperties
                = new ClusterPoolAvailableUpgradeNodeOsUpgradeProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("upgradeType".equals(fieldName)) {
                    deserializedClusterPoolAvailableUpgradeNodeOsUpgradeProperties.upgradeType
                        = ClusterPoolAvailableUpgradeType.fromString(reader.getString());
                } else if ("latestVersion".equals(fieldName)) {
                    deserializedClusterPoolAvailableUpgradeNodeOsUpgradeProperties.latestVersion = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedClusterPoolAvailableUpgradeNodeOsUpgradeProperties;
        });
    }
}
