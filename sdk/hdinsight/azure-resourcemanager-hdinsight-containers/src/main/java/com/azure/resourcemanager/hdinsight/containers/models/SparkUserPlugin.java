// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Spark user plugin.
 */
@Fluent
public final class SparkUserPlugin {
    /*
     * Fully qualified path to the folder containing the plugins.
     */
    @JsonProperty(value = "path", required = true)
    private String path;

    /**
     * Creates an instance of SparkUserPlugin class.
     */
    public SparkUserPlugin() {
    }

    /**
     * Get the path property: Fully qualified path to the folder containing the plugins.
     * 
     * @return the path value.
     */
    public String path() {
        return this.path;
    }

    /**
     * Set the path property: Fully qualified path to the folder containing the plugins.
     * 
     * @param path the path value to set.
     * @return the SparkUserPlugin object itself.
     */
    public SparkUserPlugin withPath(String path) {
        this.path = path;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (path() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property path in model SparkUserPlugin"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(SparkUserPlugin.class);
}
