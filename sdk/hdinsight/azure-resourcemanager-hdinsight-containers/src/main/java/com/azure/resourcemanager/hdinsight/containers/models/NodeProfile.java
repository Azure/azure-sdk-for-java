// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The node profile.
 */
@Fluent
public final class NodeProfile {
    /*
     * The node type.
     */
    @JsonProperty(value = "type", required = true)
    private String type;

    /*
     * The virtual machine SKU.
     */
    @JsonProperty(value = "vmSize", required = true)
    private String vmSize;

    /*
     * The number of virtual machines.
     */
    @JsonProperty(value = "count", required = true)
    private int count;

    /**
     * Creates an instance of NodeProfile class.
     */
    public NodeProfile() {
    }

    /**
     * Get the type property: The node type.
     * 
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Set the type property: The node type.
     * 
     * @param type the type value to set.
     * @return the NodeProfile object itself.
     */
    public NodeProfile withType(String type) {
        this.type = type;
        return this;
    }

    /**
     * Get the vmSize property: The virtual machine SKU.
     * 
     * @return the vmSize value.
     */
    public String vmSize() {
        return this.vmSize;
    }

    /**
     * Set the vmSize property: The virtual machine SKU.
     * 
     * @param vmSize the vmSize value to set.
     * @return the NodeProfile object itself.
     */
    public NodeProfile withVmSize(String vmSize) {
        this.vmSize = vmSize;
        return this;
    }

    /**
     * Get the count property: The number of virtual machines.
     * 
     * @return the count value.
     */
    public int count() {
        return this.count;
    }

    /**
     * Set the count property: The number of virtual machines.
     * 
     * @param count the count value to set.
     * @return the NodeProfile object itself.
     */
    public NodeProfile withCount(int count) {
        this.count = count;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (type() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property type in model NodeProfile"));
        }
        if (vmSize() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property vmSize in model NodeProfile"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(NodeProfile.class);
}
