// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.Resource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.hdinsight.containers.models.ClusterProfile;
import com.azure.resourcemanager.hdinsight.containers.models.ComputeProfile;
import com.azure.resourcemanager.hdinsight.containers.models.ProvisioningStatus;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** The cluster. */
@Fluent
public final class ClusterInner extends Resource {
    /*
     * Gets or sets the properties. Define cluster specific properties.
     */
    @JsonProperty(value = "properties")
    private ClusterResourceProperties innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /** Creates an instance of ClusterInner class. */
    public ClusterInner() {
    }

    /**
     * Get the innerProperties property: Gets or sets the properties. Define cluster specific properties.
     *
     * @return the innerProperties value.
     */
    private ClusterResourceProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /** {@inheritDoc} */
    @Override
    public ClusterInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ClusterInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Get the provisioningState property: Provisioning state of the resource.
     *
     * @return the provisioningState value.
     */
    public ProvisioningStatus provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Get the clusterType property: The type of cluster.
     *
     * @return the clusterType value.
     */
    public String clusterType() {
        return this.innerProperties() == null ? null : this.innerProperties().clusterType();
    }

    /**
     * Set the clusterType property: The type of cluster.
     *
     * @param clusterType the clusterType value to set.
     * @return the ClusterInner object itself.
     */
    public ClusterInner withClusterType(String clusterType) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ClusterResourceProperties();
        }
        this.innerProperties().withClusterType(clusterType);
        return this;
    }

    /**
     * Get the deploymentId property: A unique id generated by the RP to identify the resource.
     *
     * @return the deploymentId value.
     */
    public String deploymentId() {
        return this.innerProperties() == null ? null : this.innerProperties().deploymentId();
    }

    /**
     * Get the computeProfile property: The compute profile.
     *
     * @return the computeProfile value.
     */
    public ComputeProfile computeProfile() {
        return this.innerProperties() == null ? null : this.innerProperties().computeProfile();
    }

    /**
     * Set the computeProfile property: The compute profile.
     *
     * @param computeProfile the computeProfile value to set.
     * @return the ClusterInner object itself.
     */
    public ClusterInner withComputeProfile(ComputeProfile computeProfile) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ClusterResourceProperties();
        }
        this.innerProperties().withComputeProfile(computeProfile);
        return this;
    }

    /**
     * Get the clusterProfile property: Cluster profile.
     *
     * @return the clusterProfile value.
     */
    public ClusterProfile clusterProfile() {
        return this.innerProperties() == null ? null : this.innerProperties().clusterProfile();
    }

    /**
     * Set the clusterProfile property: Cluster profile.
     *
     * @param clusterProfile the clusterProfile value to set.
     * @return the ClusterInner object itself.
     */
    public ClusterInner withClusterProfile(ClusterProfile clusterProfile) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ClusterResourceProperties();
        }
        this.innerProperties().withClusterProfile(clusterProfile);
        return this;
    }

    /**
     * Get the status property: Business status of the resource.
     *
     * @return the status value.
     */
    public String status() {
        return this.innerProperties() == null ? null : this.innerProperties().status();
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
