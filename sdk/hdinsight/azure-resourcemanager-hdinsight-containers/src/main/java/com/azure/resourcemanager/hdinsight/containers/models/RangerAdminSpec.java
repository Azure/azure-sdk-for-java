// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Specification for the Ranger Admin service.
 */
@Fluent
public final class RangerAdminSpec {
    /*
     * List of usernames that should be marked as ranger admins. These usernames should match the user principal name
     * (UPN) of the respective AAD users.
     */
    @JsonProperty(value = "admins", required = true)
    private List<String> admins;

    /*
     * The database property.
     */
    @JsonProperty(value = "database", required = true)
    private RangerAdminSpecDatabase database;

    /**
     * Creates an instance of RangerAdminSpec class.
     */
    public RangerAdminSpec() {
    }

    /**
     * Get the admins property: List of usernames that should be marked as ranger admins. These usernames should match
     * the user principal name (UPN) of the respective AAD users.
     * 
     * @return the admins value.
     */
    public List<String> admins() {
        return this.admins;
    }

    /**
     * Set the admins property: List of usernames that should be marked as ranger admins. These usernames should match
     * the user principal name (UPN) of the respective AAD users.
     * 
     * @param admins the admins value to set.
     * @return the RangerAdminSpec object itself.
     */
    public RangerAdminSpec withAdmins(List<String> admins) {
        this.admins = admins;
        return this;
    }

    /**
     * Get the database property: The database property.
     * 
     * @return the database value.
     */
    public RangerAdminSpecDatabase database() {
        return this.database;
    }

    /**
     * Set the database property: The database property.
     * 
     * @param database the database value to set.
     * @return the RangerAdminSpec object itself.
     */
    public RangerAdminSpec withDatabase(RangerAdminSpecDatabase database) {
        this.database = database;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (admins() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property admins in model RangerAdminSpec"));
        }
        if (database() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property database in model RangerAdminSpec"));
        } else {
            database().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(RangerAdminSpec.class);
}
