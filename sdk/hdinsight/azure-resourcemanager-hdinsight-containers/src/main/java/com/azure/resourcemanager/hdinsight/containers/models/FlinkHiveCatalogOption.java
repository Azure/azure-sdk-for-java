// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Hive Catalog Option for Flink cluster. */
@Fluent
public final class FlinkHiveCatalogOption {
    /*
     * Secret reference name from secretsProfile.secrets containing password for database connection.
     */
    @JsonProperty(value = "metastoreDbConnectionPasswordSecret", required = true)
    private String metastoreDbConnectionPasswordSecret;

    /*
     * Connection string for hive metastore database.
     */
    @JsonProperty(value = "metastoreDbConnectionURL", required = true)
    private String metastoreDbConnectionUrl;

    /*
     * User name for database connection.
     */
    @JsonProperty(value = "metastoreDbConnectionUserName", required = true)
    private String metastoreDbConnectionUsername;

    /** Creates an instance of FlinkHiveCatalogOption class. */
    public FlinkHiveCatalogOption() {
    }

    /**
     * Get the metastoreDbConnectionPasswordSecret property: Secret reference name from secretsProfile.secrets
     * containing password for database connection.
     *
     * @return the metastoreDbConnectionPasswordSecret value.
     */
    public String metastoreDbConnectionPasswordSecret() {
        return this.metastoreDbConnectionPasswordSecret;
    }

    /**
     * Set the metastoreDbConnectionPasswordSecret property: Secret reference name from secretsProfile.secrets
     * containing password for database connection.
     *
     * @param metastoreDbConnectionPasswordSecret the metastoreDbConnectionPasswordSecret value to set.
     * @return the FlinkHiveCatalogOption object itself.
     */
    public FlinkHiveCatalogOption withMetastoreDbConnectionPasswordSecret(String metastoreDbConnectionPasswordSecret) {
        this.metastoreDbConnectionPasswordSecret = metastoreDbConnectionPasswordSecret;
        return this;
    }

    /**
     * Get the metastoreDbConnectionUrl property: Connection string for hive metastore database.
     *
     * @return the metastoreDbConnectionUrl value.
     */
    public String metastoreDbConnectionUrl() {
        return this.metastoreDbConnectionUrl;
    }

    /**
     * Set the metastoreDbConnectionUrl property: Connection string for hive metastore database.
     *
     * @param metastoreDbConnectionUrl the metastoreDbConnectionUrl value to set.
     * @return the FlinkHiveCatalogOption object itself.
     */
    public FlinkHiveCatalogOption withMetastoreDbConnectionUrl(String metastoreDbConnectionUrl) {
        this.metastoreDbConnectionUrl = metastoreDbConnectionUrl;
        return this;
    }

    /**
     * Get the metastoreDbConnectionUsername property: User name for database connection.
     *
     * @return the metastoreDbConnectionUsername value.
     */
    public String metastoreDbConnectionUsername() {
        return this.metastoreDbConnectionUsername;
    }

    /**
     * Set the metastoreDbConnectionUsername property: User name for database connection.
     *
     * @param metastoreDbConnectionUsername the metastoreDbConnectionUsername value to set.
     * @return the FlinkHiveCatalogOption object itself.
     */
    public FlinkHiveCatalogOption withMetastoreDbConnectionUsername(String metastoreDbConnectionUsername) {
        this.metastoreDbConnectionUsername = metastoreDbConnectionUsername;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (metastoreDbConnectionPasswordSecret() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property metastoreDbConnectionPasswordSecret in model"
                            + " FlinkHiveCatalogOption"));
        }
        if (metastoreDbConnectionUrl() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property metastoreDbConnectionUrl in model FlinkHiveCatalogOption"));
        }
        if (metastoreDbConnectionUsername() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property metastoreDbConnectionUsername in model FlinkHiveCatalogOption"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(FlinkHiveCatalogOption.class);
}
