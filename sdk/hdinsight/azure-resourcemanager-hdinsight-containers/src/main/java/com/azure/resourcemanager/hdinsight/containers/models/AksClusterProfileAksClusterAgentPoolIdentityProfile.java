// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Identity properties of the AKS cluster agentpool MSI.
 */
@Fluent
public final class AksClusterProfileAksClusterAgentPoolIdentityProfile extends IdentityProfile {
    /**
     * Creates an instance of AksClusterProfileAksClusterAgentPoolIdentityProfile class.
     */
    public AksClusterProfileAksClusterAgentPoolIdentityProfile() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AksClusterProfileAksClusterAgentPoolIdentityProfile withMsiResourceId(String msiResourceId) {
        super.withMsiResourceId(msiResourceId);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AksClusterProfileAksClusterAgentPoolIdentityProfile withMsiClientId(String msiClientId) {
        super.withMsiClientId(msiClientId);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AksClusterProfileAksClusterAgentPoolIdentityProfile withMsiObjectId(String msiObjectId) {
        super.withMsiObjectId(msiObjectId);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("msiResourceId", msiResourceId());
        jsonWriter.writeStringField("msiClientId", msiClientId());
        jsonWriter.writeStringField("msiObjectId", msiObjectId());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AksClusterProfileAksClusterAgentPoolIdentityProfile from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AksClusterProfileAksClusterAgentPoolIdentityProfile if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AksClusterProfileAksClusterAgentPoolIdentityProfile.
     */
    public static AksClusterProfileAksClusterAgentPoolIdentityProfile fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            AksClusterProfileAksClusterAgentPoolIdentityProfile deserializedAksClusterProfileAksClusterAgentPoolIdentityProfile
                = new AksClusterProfileAksClusterAgentPoolIdentityProfile();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("msiResourceId".equals(fieldName)) {
                    deserializedAksClusterProfileAksClusterAgentPoolIdentityProfile
                        .withMsiResourceId(reader.getString());
                } else if ("msiClientId".equals(fieldName)) {
                    deserializedAksClusterProfileAksClusterAgentPoolIdentityProfile.withMsiClientId(reader.getString());
                } else if ("msiObjectId".equals(fieldName)) {
                    deserializedAksClusterProfileAksClusterAgentPoolIdentityProfile.withMsiObjectId(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAksClusterProfileAksClusterAgentPoolIdentityProfile;
        });
    }
}
