// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Specification for the Ranger Usersync service.
 */
@Fluent
public final class RangerUsersyncSpec {
    /*
     * Denotes whether usersync service should be enabled
     */
    @JsonProperty(value = "enabled")
    private Boolean enabled;

    /*
     * List of groups that should be synced. These group names should match the object id of the respective AAD groups.
     */
    @JsonProperty(value = "groups")
    private List<String> groups;

    /*
     * User & groups can be synced automatically or via a static list that's refreshed.
     */
    @JsonProperty(value = "mode")
    private RangerUsersyncMode mode;

    /*
     * Azure storage location of a mapping file that lists user & group associations.
     */
    @JsonProperty(value = "userMappingLocation")
    private String userMappingLocation;

    /*
     * List of user names that should be synced. These usernames should match the User principal name of the respective
     * AAD users.
     */
    @JsonProperty(value = "users")
    private List<String> users;

    /**
     * Creates an instance of RangerUsersyncSpec class.
     */
    public RangerUsersyncSpec() {
    }

    /**
     * Get the enabled property: Denotes whether usersync service should be enabled.
     * 
     * @return the enabled value.
     */
    public Boolean enabled() {
        return this.enabled;
    }

    /**
     * Set the enabled property: Denotes whether usersync service should be enabled.
     * 
     * @param enabled the enabled value to set.
     * @return the RangerUsersyncSpec object itself.
     */
    public RangerUsersyncSpec withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }

    /**
     * Get the groups property: List of groups that should be synced. These group names should match the object id of
     * the respective AAD groups.
     * 
     * @return the groups value.
     */
    public List<String> groups() {
        return this.groups;
    }

    /**
     * Set the groups property: List of groups that should be synced. These group names should match the object id of
     * the respective AAD groups.
     * 
     * @param groups the groups value to set.
     * @return the RangerUsersyncSpec object itself.
     */
    public RangerUsersyncSpec withGroups(List<String> groups) {
        this.groups = groups;
        return this;
    }

    /**
     * Get the mode property: User &amp; groups can be synced automatically or via a static list that's refreshed.
     * 
     * @return the mode value.
     */
    public RangerUsersyncMode mode() {
        return this.mode;
    }

    /**
     * Set the mode property: User &amp; groups can be synced automatically or via a static list that's refreshed.
     * 
     * @param mode the mode value to set.
     * @return the RangerUsersyncSpec object itself.
     */
    public RangerUsersyncSpec withMode(RangerUsersyncMode mode) {
        this.mode = mode;
        return this;
    }

    /**
     * Get the userMappingLocation property: Azure storage location of a mapping file that lists user &amp; group
     * associations.
     * 
     * @return the userMappingLocation value.
     */
    public String userMappingLocation() {
        return this.userMappingLocation;
    }

    /**
     * Set the userMappingLocation property: Azure storage location of a mapping file that lists user &amp; group
     * associations.
     * 
     * @param userMappingLocation the userMappingLocation value to set.
     * @return the RangerUsersyncSpec object itself.
     */
    public RangerUsersyncSpec withUserMappingLocation(String userMappingLocation) {
        this.userMappingLocation = userMappingLocation;
        return this;
    }

    /**
     * Get the users property: List of user names that should be synced. These usernames should match the User
     * principal name of the respective AAD users.
     * 
     * @return the users value.
     */
    public List<String> users() {
        return this.users;
    }

    /**
     * Set the users property: List of user names that should be synced. These usernames should match the User
     * principal name of the respective AAD users.
     * 
     * @param users the users value to set.
     * @return the RangerUsersyncSpec object itself.
     */
    public RangerUsersyncSpec withUsers(List<String> users) {
        this.users = users;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
