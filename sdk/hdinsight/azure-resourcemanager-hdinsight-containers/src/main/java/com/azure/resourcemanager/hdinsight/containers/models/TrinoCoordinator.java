// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Trino Coordinator.
 */
@Fluent
public final class TrinoCoordinator {
    /*
     * Trino debug configuration.
     */
    @JsonProperty(value = "debug")
    private TrinoDebugConfig debug;

    /*
     * The flag that if enable coordinator HA, uses multiple coordinator replicas with auto failover, one per each head
     * node. Default: true.
     */
    @JsonProperty(value = "highAvailabilityEnabled")
    private Boolean highAvailabilityEnabled;

    /**
     * Creates an instance of TrinoCoordinator class.
     */
    public TrinoCoordinator() {
    }

    /**
     * Get the debug property: Trino debug configuration.
     * 
     * @return the debug value.
     */
    public TrinoDebugConfig debug() {
        return this.debug;
    }

    /**
     * Set the debug property: Trino debug configuration.
     * 
     * @param debug the debug value to set.
     * @return the TrinoCoordinator object itself.
     */
    public TrinoCoordinator withDebug(TrinoDebugConfig debug) {
        this.debug = debug;
        return this;
    }

    /**
     * Get the highAvailabilityEnabled property: The flag that if enable coordinator HA, uses multiple coordinator
     * replicas with auto failover, one per each head node. Default: true.
     * 
     * @return the highAvailabilityEnabled value.
     */
    public Boolean highAvailabilityEnabled() {
        return this.highAvailabilityEnabled;
    }

    /**
     * Set the highAvailabilityEnabled property: The flag that if enable coordinator HA, uses multiple coordinator
     * replicas with auto failover, one per each head node. Default: true.
     * 
     * @param highAvailabilityEnabled the highAvailabilityEnabled value to set.
     * @return the TrinoCoordinator object itself.
     */
    public TrinoCoordinator withHighAvailabilityEnabled(Boolean highAvailabilityEnabled) {
        this.highAvailabilityEnabled = highAvailabilityEnabled;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (debug() != null) {
            debug().validate();
        }
    }
}
