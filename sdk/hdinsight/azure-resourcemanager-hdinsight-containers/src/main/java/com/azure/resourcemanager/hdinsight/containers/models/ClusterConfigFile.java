// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/**
 * Cluster configuration files.
 */
@Fluent
public final class ClusterConfigFile {
    /*
     * Configuration file name.
     */
    @JsonProperty(value = "fileName", required = true)
    private String fileName;

    /*
     * Free form content of the entire configuration file.
     */
    @JsonProperty(value = "content")
    private String content;

    /*
     * This property indicates if the content is encoded and is case-insensitive. Please set the value to base64 if the
     * content is base64 encoded. Set it to none or skip it if the content is plain text.
     */
    @JsonProperty(value = "encoding")
    private ContentEncoding encoding;

    /*
     * Path of the config file if content is specified.
     */
    @JsonProperty(value = "path")
    private String path;

    /*
     * List of key value pairs
     * where key represents a valid service configuration name and value represents the value of the config.
     */
    @JsonProperty(value = "values")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> values;

    /**
     * Creates an instance of ClusterConfigFile class.
     */
    public ClusterConfigFile() {
    }

    /**
     * Get the fileName property: Configuration file name.
     * 
     * @return the fileName value.
     */
    public String fileName() {
        return this.fileName;
    }

    /**
     * Set the fileName property: Configuration file name.
     * 
     * @param fileName the fileName value to set.
     * @return the ClusterConfigFile object itself.
     */
    public ClusterConfigFile withFileName(String fileName) {
        this.fileName = fileName;
        return this;
    }

    /**
     * Get the content property: Free form content of the entire configuration file.
     * 
     * @return the content value.
     */
    public String content() {
        return this.content;
    }

    /**
     * Set the content property: Free form content of the entire configuration file.
     * 
     * @param content the content value to set.
     * @return the ClusterConfigFile object itself.
     */
    public ClusterConfigFile withContent(String content) {
        this.content = content;
        return this;
    }

    /**
     * Get the encoding property: This property indicates if the content is encoded and is case-insensitive. Please set
     * the value to base64 if the content is base64 encoded. Set it to none or skip it if the content is plain text.
     * 
     * @return the encoding value.
     */
    public ContentEncoding encoding() {
        return this.encoding;
    }

    /**
     * Set the encoding property: This property indicates if the content is encoded and is case-insensitive. Please set
     * the value to base64 if the content is base64 encoded. Set it to none or skip it if the content is plain text.
     * 
     * @param encoding the encoding value to set.
     * @return the ClusterConfigFile object itself.
     */
    public ClusterConfigFile withEncoding(ContentEncoding encoding) {
        this.encoding = encoding;
        return this;
    }

    /**
     * Get the path property: Path of the config file if content is specified.
     * 
     * @return the path value.
     */
    public String path() {
        return this.path;
    }

    /**
     * Set the path property: Path of the config file if content is specified.
     * 
     * @param path the path value to set.
     * @return the ClusterConfigFile object itself.
     */
    public ClusterConfigFile withPath(String path) {
        this.path = path;
        return this;
    }

    /**
     * Get the values property: List of key value pairs
     * where key represents a valid service configuration name and value represents the value of the config.
     * 
     * @return the values value.
     */
    public Map<String, String> values() {
        return this.values;
    }

    /**
     * Set the values property: List of key value pairs
     * where key represents a valid service configuration name and value represents the value of the config.
     * 
     * @param values the values value to set.
     * @return the ClusterConfigFile object itself.
     */
    public ClusterConfigFile withValues(Map<String, String> values) {
        this.values = values;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (fileName() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property fileName in model ClusterConfigFile"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ClusterConfigFile.class);
}
