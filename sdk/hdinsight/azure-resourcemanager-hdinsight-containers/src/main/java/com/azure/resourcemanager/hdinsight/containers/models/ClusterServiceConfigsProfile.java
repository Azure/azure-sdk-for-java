// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Cluster service configs.
 */
@Fluent
public final class ClusterServiceConfigsProfile {
    /*
     * Name of the service the configurations should apply to.
     */
    @JsonProperty(value = "serviceName", required = true)
    private String serviceName;

    /*
     * List of service configs.
     */
    @JsonProperty(value = "configs", required = true)
    private List<ClusterServiceConfig> configs;

    /**
     * Creates an instance of ClusterServiceConfigsProfile class.
     */
    public ClusterServiceConfigsProfile() {
    }

    /**
     * Get the serviceName property: Name of the service the configurations should apply to.
     * 
     * @return the serviceName value.
     */
    public String serviceName() {
        return this.serviceName;
    }

    /**
     * Set the serviceName property: Name of the service the configurations should apply to.
     * 
     * @param serviceName the serviceName value to set.
     * @return the ClusterServiceConfigsProfile object itself.
     */
    public ClusterServiceConfigsProfile withServiceName(String serviceName) {
        this.serviceName = serviceName;
        return this;
    }

    /**
     * Get the configs property: List of service configs.
     * 
     * @return the configs value.
     */
    public List<ClusterServiceConfig> configs() {
        return this.configs;
    }

    /**
     * Set the configs property: List of service configs.
     * 
     * @param configs the configs value to set.
     * @return the ClusterServiceConfigsProfile object itself.
     */
    public ClusterServiceConfigsProfile withConfigs(List<ClusterServiceConfig> configs) {
        this.configs = configs;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (serviceName() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property serviceName in model ClusterServiceConfigsProfile"));
        }
        if (configs() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property configs in model ClusterServiceConfigsProfile"));
        } else {
            configs().forEach(e -> e.validate());
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ClusterServiceConfigsProfile.class);
}
