// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Properties of upgrading cluster pool's AKS patch version.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "upgradeType")
@JsonTypeName("AKSPatchUpgrade")
@Fluent
public final class ClusterPoolAksPatchVersionUpgradeProperties extends ClusterPoolUpgradeProperties {
    /*
     * whether upgrade cluster pool or not. If it's true, upgradeAllClusterNodes should be false.
     */
    @JsonProperty(value = "upgradeClusterPool")
    private Boolean upgradeClusterPool;

    /*
     * whether upgrade all clusters' nodes. If it's true, upgradeClusterPool should be false.
     */
    @JsonProperty(value = "upgradeAllClusterNodes")
    private Boolean upgradeAllClusterNodes;

    /*
     * Target AKS version. When it's not set, latest version will be used. When upgradeClusterPool is true and
     * upgradeAllClusterNodes is false, target version should be greater or equal to current version. When
     * upgradeClusterPool is false and upgradeAllClusterNodes is true, target version should be equal to AKS version of
     * cluster pool.
     */
    @JsonProperty(value = "targetAksVersion")
    private String targetAksVersion;

    /**
     * Creates an instance of ClusterPoolAksPatchVersionUpgradeProperties class.
     */
    public ClusterPoolAksPatchVersionUpgradeProperties() {
    }

    /**
     * Get the upgradeClusterPool property: whether upgrade cluster pool or not. If it's true, upgradeAllClusterNodes
     * should be false.
     * 
     * @return the upgradeClusterPool value.
     */
    public Boolean upgradeClusterPool() {
        return this.upgradeClusterPool;
    }

    /**
     * Set the upgradeClusterPool property: whether upgrade cluster pool or not. If it's true, upgradeAllClusterNodes
     * should be false.
     * 
     * @param upgradeClusterPool the upgradeClusterPool value to set.
     * @return the ClusterPoolAksPatchVersionUpgradeProperties object itself.
     */
    public ClusterPoolAksPatchVersionUpgradeProperties withUpgradeClusterPool(Boolean upgradeClusterPool) {
        this.upgradeClusterPool = upgradeClusterPool;
        return this;
    }

    /**
     * Get the upgradeAllClusterNodes property: whether upgrade all clusters' nodes. If it's true, upgradeClusterPool
     * should be false.
     * 
     * @return the upgradeAllClusterNodes value.
     */
    public Boolean upgradeAllClusterNodes() {
        return this.upgradeAllClusterNodes;
    }

    /**
     * Set the upgradeAllClusterNodes property: whether upgrade all clusters' nodes. If it's true, upgradeClusterPool
     * should be false.
     * 
     * @param upgradeAllClusterNodes the upgradeAllClusterNodes value to set.
     * @return the ClusterPoolAksPatchVersionUpgradeProperties object itself.
     */
    public ClusterPoolAksPatchVersionUpgradeProperties withUpgradeAllClusterNodes(Boolean upgradeAllClusterNodes) {
        this.upgradeAllClusterNodes = upgradeAllClusterNodes;
        return this;
    }

    /**
     * Get the targetAksVersion property: Target AKS version. When it's not set, latest version will be used. When
     * upgradeClusterPool is true and upgradeAllClusterNodes is false, target version should be greater or equal to
     * current version. When upgradeClusterPool is false and upgradeAllClusterNodes is true, target version should be
     * equal to AKS version of cluster pool.
     * 
     * @return the targetAksVersion value.
     */
    public String targetAksVersion() {
        return this.targetAksVersion;
    }

    /**
     * Set the targetAksVersion property: Target AKS version. When it's not set, latest version will be used. When
     * upgradeClusterPool is true and upgradeAllClusterNodes is false, target version should be greater or equal to
     * current version. When upgradeClusterPool is false and upgradeAllClusterNodes is true, target version should be
     * equal to AKS version of cluster pool.
     * 
     * @param targetAksVersion the targetAksVersion value to set.
     * @return the ClusterPoolAksPatchVersionUpgradeProperties object itself.
     */
    public ClusterPoolAksPatchVersionUpgradeProperties withTargetAksVersion(String targetAksVersion) {
        this.targetAksVersion = targetAksVersion;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
