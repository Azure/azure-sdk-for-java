// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.Resource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.hdinsight.containers.fluent.models.ClusterResizeProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** The parameters for resizing a cluster. */
@Fluent
public final class ClusterResizeData extends Resource {
    /*
     * Sets the properties. Define cluster resize specific properties.
     */
    @JsonProperty(value = "properties")
    private ClusterResizeProperties innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /** Creates an instance of ClusterResizeData class. */
    public ClusterResizeData() {
    }

    /**
     * Get the innerProperties property: Sets the properties. Define cluster resize specific properties.
     *
     * @return the innerProperties value.
     */
    private ClusterResizeProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /** {@inheritDoc} */
    @Override
    public ClusterResizeData withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ClusterResizeData withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Get the targetWorkerNodeCount property: Target node count of worker node.
     *
     * @return the targetWorkerNodeCount value.
     */
    public Integer targetWorkerNodeCount() {
        return this.innerProperties() == null ? null : this.innerProperties().targetWorkerNodeCount();
    }

    /**
     * Set the targetWorkerNodeCount property: Target node count of worker node.
     *
     * @param targetWorkerNodeCount the targetWorkerNodeCount value to set.
     * @return the ClusterResizeData object itself.
     */
    public ClusterResizeData withTargetWorkerNodeCount(Integer targetWorkerNodeCount) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ClusterResizeProperties();
        }
        this.innerProperties().withTargetWorkerNodeCount(targetWorkerNodeCount);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
