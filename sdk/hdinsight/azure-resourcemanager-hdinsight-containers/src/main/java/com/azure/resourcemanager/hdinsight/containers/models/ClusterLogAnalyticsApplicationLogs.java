// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Collection of logs to be enabled or disabled for log analytics.
 */
@Fluent
public final class ClusterLogAnalyticsApplicationLogs {
    /*
     * True if stdout is enabled, otherwise false.
     */
    @JsonProperty(value = "stdOutEnabled")
    private Boolean stdOutEnabled;

    /*
     * True if stderror is enabled, otherwise false.
     */
    @JsonProperty(value = "stdErrorEnabled")
    private Boolean stdErrorEnabled;

    /**
     * Creates an instance of ClusterLogAnalyticsApplicationLogs class.
     */
    public ClusterLogAnalyticsApplicationLogs() {
    }

    /**
     * Get the stdOutEnabled property: True if stdout is enabled, otherwise false.
     * 
     * @return the stdOutEnabled value.
     */
    public Boolean stdOutEnabled() {
        return this.stdOutEnabled;
    }

    /**
     * Set the stdOutEnabled property: True if stdout is enabled, otherwise false.
     * 
     * @param stdOutEnabled the stdOutEnabled value to set.
     * @return the ClusterLogAnalyticsApplicationLogs object itself.
     */
    public ClusterLogAnalyticsApplicationLogs withStdOutEnabled(Boolean stdOutEnabled) {
        this.stdOutEnabled = stdOutEnabled;
        return this;
    }

    /**
     * Get the stdErrorEnabled property: True if stderror is enabled, otherwise false.
     * 
     * @return the stdErrorEnabled value.
     */
    public Boolean stdErrorEnabled() {
        return this.stdErrorEnabled;
    }

    /**
     * Set the stdErrorEnabled property: True if stderror is enabled, otherwise false.
     * 
     * @param stdErrorEnabled the stdErrorEnabled value to set.
     * @return the ClusterLogAnalyticsApplicationLogs object itself.
     */
    public ClusterLogAnalyticsApplicationLogs withStdErrorEnabled(Boolean stdErrorEnabled) {
        this.stdErrorEnabled = stdErrorEnabled;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
