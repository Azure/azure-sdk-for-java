// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hdinsight.containers.models.FlinkJobProfile;
import com.azure.resourcemanager.hdinsight.containers.models.UpgradeMode;
import org.junit.jupiter.api.Assertions;

public final class FlinkJobProfileTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FlinkJobProfile model = BinaryData.fromString(
            "{\"jobJarDirectory\":\"ohfwds\",\"jarName\":\"n\",\"entryClass\":\"ljuti\",\"args\":\"wacf\",\"savePointName\":\"dkzzewkfvhqcrail\",\"upgradeMode\":\"STATELESS_UPDATE\"}")
            .toObject(FlinkJobProfile.class);
        Assertions.assertEquals("ohfwds", model.jobJarDirectory());
        Assertions.assertEquals("n", model.jarName());
        Assertions.assertEquals("ljuti", model.entryClass());
        Assertions.assertEquals("wacf", model.args());
        Assertions.assertEquals("dkzzewkfvhqcrail", model.savePointName());
        Assertions.assertEquals(UpgradeMode.STATELESS_UPDATE, model.upgradeMode());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FlinkJobProfile model = new FlinkJobProfile().withJobJarDirectory("ohfwds")
            .withJarName("n")
            .withEntryClass("ljuti")
            .withArgs("wacf")
            .withSavePointName("dkzzewkfvhqcrail")
            .withUpgradeMode(UpgradeMode.STATELESS_UPDATE);
        model = BinaryData.fromObject(model).toObject(FlinkJobProfile.class);
        Assertions.assertEquals("ohfwds", model.jobJarDirectory());
        Assertions.assertEquals("n", model.jarName());
        Assertions.assertEquals("ljuti", model.entryClass());
        Assertions.assertEquals("wacf", model.args());
        Assertions.assertEquals("dkzzewkfvhqcrail", model.savePointName());
        Assertions.assertEquals(UpgradeMode.STATELESS_UPDATE, model.upgradeMode());
    }
}
