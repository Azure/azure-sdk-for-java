// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hdinsight.containers.fluent.models.ClusterLibraryInner;
import com.azure.resourcemanager.hdinsight.containers.models.ClusterLibraryManagementOperation;
import com.azure.resourcemanager.hdinsight.containers.models.ClusterLibraryManagementOperationProperties;
import com.azure.resourcemanager.hdinsight.containers.models.ClusterLibraryProperties;
import com.azure.resourcemanager.hdinsight.containers.models.LibraryManagementAction;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ClusterLibraryManagementOperationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ClusterLibraryManagementOperation model = BinaryData.fromString(
            "{\"properties\":{\"action\":\"Uninstall\",\"libraries\":[{\"properties\":{\"type\":\"ClusterLibraryProperties\",\"remarks\":\"wxyiopidkqq\",\"timestamp\":\"2021-05-28T06:42:38Z\",\"status\":\"INSTALLING\",\"message\":\"xkdmligo\"},\"id\":\"brxk\",\"name\":\"mloazuru\",\"type\":\"cbgoor\"},{\"properties\":{\"type\":\"ClusterLibraryProperties\",\"remarks\":\"eoybfhjxakvvjgs\",\"timestamp\":\"2021-07-21T11:06:32Z\",\"status\":\"UNINSTALL_FAILED\",\"message\":\"mywwtkgkxnyed\"},\"id\":\"gyvudtjuewbc\",\"name\":\"hxuuwhcjyxccybvp\",\"type\":\"yakk\"}]},\"id\":\"zp\",\"name\":\"gwjplmag\",\"type\":\"tcyohpfkyrk\"}")
            .toObject(ClusterLibraryManagementOperation.class);
        Assertions.assertEquals(LibraryManagementAction.UNINSTALL, model.properties().action());
        Assertions.assertEquals("wxyiopidkqq", model.properties().libraries().get(0).properties().remarks());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ClusterLibraryManagementOperation model = new ClusterLibraryManagementOperation().withProperties(
            new ClusterLibraryManagementOperationProperties().withAction(LibraryManagementAction.UNINSTALL)
                .withLibraries(Arrays.asList(
                    new ClusterLibraryInner().withProperties(new ClusterLibraryProperties().withRemarks("wxyiopidkqq")),
                    new ClusterLibraryInner()
                        .withProperties(new ClusterLibraryProperties().withRemarks("eoybfhjxakvvjgs")))));
        model = BinaryData.fromObject(model).toObject(ClusterLibraryManagementOperation.class);
        Assertions.assertEquals(LibraryManagementAction.UNINSTALL, model.properties().action());
        Assertions.assertEquals("wxyiopidkqq", model.properties().libraries().get(0).properties().remarks());
    }
}
