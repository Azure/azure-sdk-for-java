// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hdinsight.containers.models.ClusterAvailableUpgradeAksPatchUpgradeProperties;
import com.azure.resourcemanager.hdinsight.containers.models.CurrentClusterAksVersionStatus;
import org.junit.jupiter.api.Assertions;

public final class ClusterAvailableUpgradeAksPatchUpgradePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ClusterAvailableUpgradeAksPatchUpgradeProperties model = BinaryData.fromString(
            "{\"upgradeType\":\"AKSPatchUpgrade\",\"currentVersion\":\"fffiak\",\"currentVersionStatus\":\"Deprecated\",\"latestVersion\":\"qmt\"}")
            .toObject(ClusterAvailableUpgradeAksPatchUpgradeProperties.class);
        Assertions.assertEquals("fffiak", model.currentVersion());
        Assertions.assertEquals(CurrentClusterAksVersionStatus.DEPRECATED, model.currentVersionStatus());
        Assertions.assertEquals("qmt", model.latestVersion());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ClusterAvailableUpgradeAksPatchUpgradeProperties model
            = new ClusterAvailableUpgradeAksPatchUpgradeProperties().withCurrentVersion("fffiak")
                .withCurrentVersionStatus(CurrentClusterAksVersionStatus.DEPRECATED).withLatestVersion("qmt");
        model = BinaryData.fromObject(model).toObject(ClusterAvailableUpgradeAksPatchUpgradeProperties.class);
        Assertions.assertEquals("fffiak", model.currentVersion());
        Assertions.assertEquals(CurrentClusterAksVersionStatus.DEPRECATED, model.currentVersionStatus());
        Assertions.assertEquals("qmt", model.latestVersion());
    }
}
