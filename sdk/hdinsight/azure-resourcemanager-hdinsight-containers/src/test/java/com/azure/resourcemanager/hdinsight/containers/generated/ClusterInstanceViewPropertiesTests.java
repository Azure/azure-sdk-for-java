// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hdinsight.containers.models.ClusterInstanceViewProperties;
import com.azure.resourcemanager.hdinsight.containers.models.ClusterInstanceViewPropertiesStatus;
import com.azure.resourcemanager.hdinsight.containers.models.ServiceStatus;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ClusterInstanceViewPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ClusterInstanceViewProperties model = BinaryData.fromString(
            "{\"status\":{\"ready\":\"pij\",\"reason\":\"rxfrddhc\",\"message\":\"tizzronasxif\"},\"serviceStatuses\":[{\"kind\":\"zq\",\"ready\":\"zh\",\"message\":\"wesgogczh\"},{\"kind\":\"nnxk\",\"ready\":\"lgnyhmo\",\"message\":\"xkk\"}]}")
            .toObject(ClusterInstanceViewProperties.class);
        Assertions.assertEquals("pij", model.status().ready());
        Assertions.assertEquals("rxfrddhc", model.status().reason());
        Assertions.assertEquals("tizzronasxif", model.status().message());
        Assertions.assertEquals("zq", model.serviceStatuses().get(0).kind());
        Assertions.assertEquals("zh", model.serviceStatuses().get(0).ready());
        Assertions.assertEquals("wesgogczh", model.serviceStatuses().get(0).message());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ClusterInstanceViewProperties model = new ClusterInstanceViewProperties()
            .withStatus(new ClusterInstanceViewPropertiesStatus().withReady("pij")
                .withReason("rxfrddhc")
                .withMessage("tizzronasxif"))
            .withServiceStatuses(
                Arrays.asList(new ServiceStatus().withKind("zq").withReady("zh").withMessage("wesgogczh"),
                    new ServiceStatus().withKind("nnxk").withReady("lgnyhmo").withMessage("xkk")));
        model = BinaryData.fromObject(model).toObject(ClusterInstanceViewProperties.class);
        Assertions.assertEquals("pij", model.status().ready());
        Assertions.assertEquals("rxfrddhc", model.status().reason());
        Assertions.assertEquals("tizzronasxif", model.status().message());
        Assertions.assertEquals("zq", model.serviceStatuses().get(0).kind());
        Assertions.assertEquals("zh", model.serviceStatuses().get(0).ready());
        Assertions.assertEquals("wesgogczh", model.serviceStatuses().get(0).message());
    }
}
