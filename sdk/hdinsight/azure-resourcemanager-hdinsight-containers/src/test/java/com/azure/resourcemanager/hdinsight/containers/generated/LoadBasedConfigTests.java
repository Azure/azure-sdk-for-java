// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hdinsight.containers.models.ComparisonOperator;
import com.azure.resourcemanager.hdinsight.containers.models.ComparisonRule;
import com.azure.resourcemanager.hdinsight.containers.models.LoadBasedConfig;
import com.azure.resourcemanager.hdinsight.containers.models.ScaleActionType;
import com.azure.resourcemanager.hdinsight.containers.models.ScalingRule;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class LoadBasedConfigTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LoadBasedConfig model =
            BinaryData
                .fromString(
                    "{\"minNodes\":1002567642,\"maxNodes\":38783234,\"pollInterval\":585972520,\"cooldownPeriod\":1879830205,\"scalingRules\":[{\"actionType\":\"scaledown\",\"evaluationCount\":302712597,\"scalingMetric\":\"xdje\",\"comparisonRule\":{\"operator\":\"lessThan\",\"threshold\":77.09733}},{\"actionType\":\"scaleup\",\"evaluationCount\":741000017,\"scalingMetric\":\"wwfvov\",\"comparisonRule\":{\"operator\":\"greaterThanOrEqual\",\"threshold\":18.919855}},{\"actionType\":\"scaledown\",\"evaluationCount\":2004605521,\"scalingMetric\":\"ecivyh\",\"comparisonRule\":{\"operator\":\"greaterThan\",\"threshold\":58.396214}}]}")
                .toObject(LoadBasedConfig.class);
        Assertions.assertEquals(1002567642, model.minNodes());
        Assertions.assertEquals(38783234, model.maxNodes());
        Assertions.assertEquals(585972520, model.pollInterval());
        Assertions.assertEquals(1879830205, model.cooldownPeriod());
        Assertions.assertEquals(ScaleActionType.SCALEDOWN, model.scalingRules().get(0).actionType());
        Assertions.assertEquals(302712597, model.scalingRules().get(0).evaluationCount());
        Assertions.assertEquals("xdje", model.scalingRules().get(0).scalingMetric());
        Assertions.assertEquals(ComparisonOperator.LESS_THAN, model.scalingRules().get(0).comparisonRule().operator());
        Assertions.assertEquals(77.09733f, model.scalingRules().get(0).comparisonRule().threshold());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LoadBasedConfig model =
            new LoadBasedConfig()
                .withMinNodes(1002567642)
                .withMaxNodes(38783234)
                .withPollInterval(585972520)
                .withCooldownPeriod(1879830205)
                .withScalingRules(
                    Arrays
                        .asList(
                            new ScalingRule()
                                .withActionType(ScaleActionType.SCALEDOWN)
                                .withEvaluationCount(302712597)
                                .withScalingMetric("xdje")
                                .withComparisonRule(
                                    new ComparisonRule()
                                        .withOperator(ComparisonOperator.LESS_THAN)
                                        .withThreshold(77.09733f)),
                            new ScalingRule()
                                .withActionType(ScaleActionType.SCALEUP)
                                .withEvaluationCount(741000017)
                                .withScalingMetric("wwfvov")
                                .withComparisonRule(
                                    new ComparisonRule()
                                        .withOperator(ComparisonOperator.GREATER_THAN_OR_EQUAL)
                                        .withThreshold(18.919855f)),
                            new ScalingRule()
                                .withActionType(ScaleActionType.SCALEDOWN)
                                .withEvaluationCount(2004605521)
                                .withScalingMetric("ecivyh")
                                .withComparisonRule(
                                    new ComparisonRule()
                                        .withOperator(ComparisonOperator.GREATER_THAN)
                                        .withThreshold(58.396214f))));
        model = BinaryData.fromObject(model).toObject(LoadBasedConfig.class);
        Assertions.assertEquals(1002567642, model.minNodes());
        Assertions.assertEquals(38783234, model.maxNodes());
        Assertions.assertEquals(585972520, model.pollInterval());
        Assertions.assertEquals(1879830205, model.cooldownPeriod());
        Assertions.assertEquals(ScaleActionType.SCALEDOWN, model.scalingRules().get(0).actionType());
        Assertions.assertEquals(302712597, model.scalingRules().get(0).evaluationCount());
        Assertions.assertEquals("xdje", model.scalingRules().get(0).scalingMetric());
        Assertions.assertEquals(ComparisonOperator.LESS_THAN, model.scalingRules().get(0).comparisonRule().operator());
        Assertions.assertEquals(77.09733f, model.scalingRules().get(0).comparisonRule().threshold());
    }
}
