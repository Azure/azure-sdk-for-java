// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hdinsight.containers.models.ClusterPoolAksPatchVersionUpgradeProperties;
import org.junit.jupiter.api.Assertions;

public final class ClusterPoolAksPatchVersionUpgradePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ClusterPoolAksPatchVersionUpgradeProperties model = BinaryData.fromString(
            "{\"upgradeType\":\"AKSPatchUpgrade\",\"upgradeClusterPool\":true,\"upgradeAllClusterNodes\":false,\"targetAksVersion\":\"ifmzzsd\"}")
            .toObject(ClusterPoolAksPatchVersionUpgradeProperties.class);
        Assertions.assertEquals(true, model.upgradeClusterPool());
        Assertions.assertEquals(false, model.upgradeAllClusterNodes());
        Assertions.assertEquals("ifmzzsd", model.targetAksVersion());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ClusterPoolAksPatchVersionUpgradeProperties model
            = new ClusterPoolAksPatchVersionUpgradeProperties().withUpgradeClusterPool(true)
                .withUpgradeAllClusterNodes(false)
                .withTargetAksVersion("ifmzzsd");
        model = BinaryData.fromObject(model).toObject(ClusterPoolAksPatchVersionUpgradeProperties.class);
        Assertions.assertEquals(true, model.upgradeClusterPool());
        Assertions.assertEquals(false, model.upgradeAllClusterNodes());
        Assertions.assertEquals("ifmzzsd", model.targetAksVersion());
    }
}
