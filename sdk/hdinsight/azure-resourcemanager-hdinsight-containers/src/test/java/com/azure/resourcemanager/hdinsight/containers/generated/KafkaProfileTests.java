// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hdinsight.containers.models.DataDiskType;
import com.azure.resourcemanager.hdinsight.containers.models.DiskStorageProfile;
import com.azure.resourcemanager.hdinsight.containers.models.KafkaProfile;
import org.junit.jupiter.api.Assertions;

public final class KafkaProfileTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        KafkaProfile model = BinaryData.fromString(
            "{\"enableKRaft\":true,\"enablePublicEndpoints\":false,\"remoteStorageUri\":\"kthumaqolbgycdui\",\"diskStorage\":{\"dataDiskSize\":178501813,\"dataDiskType\":\"Premium_SSD_LRS\"},\"connectivityEndpoints\":{\"bootstrapServerEndpoint\":\"cym\",\"brokerEndpoints\":[\"l\",\"ssl\",\"lfmmdnbbglzpswi\"]}}")
            .toObject(KafkaProfile.class);
        Assertions.assertEquals(true, model.enableKRaft());
        Assertions.assertEquals(false, model.enablePublicEndpoints());
        Assertions.assertEquals("kthumaqolbgycdui", model.remoteStorageUri());
        Assertions.assertEquals(178501813, model.diskStorage().dataDiskSize());
        Assertions.assertEquals(DataDiskType.PREMIUM_SSD_LRS, model.diskStorage().dataDiskType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        KafkaProfile model = new KafkaProfile().withEnableKRaft(true)
            .withEnablePublicEndpoints(false)
            .withRemoteStorageUri("kthumaqolbgycdui")
            .withDiskStorage(
                new DiskStorageProfile().withDataDiskSize(178501813).withDataDiskType(DataDiskType.PREMIUM_SSD_LRS));
        model = BinaryData.fromObject(model).toObject(KafkaProfile.class);
        Assertions.assertEquals(true, model.enableKRaft());
        Assertions.assertEquals(false, model.enablePublicEndpoints());
        Assertions.assertEquals("kthumaqolbgycdui", model.remoteStorageUri());
        Assertions.assertEquals(178501813, model.diskStorage().dataDiskSize());
        Assertions.assertEquals(DataDiskType.PREMIUM_SSD_LRS, model.diskStorage().dataDiskType());
    }
}
