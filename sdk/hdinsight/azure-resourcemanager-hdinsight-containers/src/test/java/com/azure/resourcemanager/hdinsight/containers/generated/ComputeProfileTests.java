// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hdinsight.containers.models.ComputeProfile;
import com.azure.resourcemanager.hdinsight.containers.models.NodeProfile;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ComputeProfileTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ComputeProfile model =
            BinaryData
                .fromString(
                    "{\"nodes\":[{\"type\":\"azjdyggd\",\"vmSize\":\"jixhbk\",\"count\":2140516005},{\"type\":\"fqweykhmene\",\"vmSize\":\"fyexfwhy\",\"count\":1506978127},{\"type\":\"i\",\"vmSize\":\"vyvdcs\",\"count\":1668619152},{\"type\":\"ynnaam\",\"vmSize\":\"ectehf\",\"count\":736113941}]}")
                .toObject(ComputeProfile.class);
        Assertions.assertEquals("azjdyggd", model.nodes().get(0).type());
        Assertions.assertEquals("jixhbk", model.nodes().get(0).vmSize());
        Assertions.assertEquals(2140516005, model.nodes().get(0).count());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ComputeProfile model =
            new ComputeProfile()
                .withNodes(
                    Arrays
                        .asList(
                            new NodeProfile().withType("azjdyggd").withVmSize("jixhbk").withCount(2140516005),
                            new NodeProfile().withType("fqweykhmene").withVmSize("fyexfwhy").withCount(1506978127),
                            new NodeProfile().withType("i").withVmSize("vyvdcs").withCount(1668619152),
                            new NodeProfile().withType("ynnaam").withVmSize("ectehf").withCount(736113941)));
        model = BinaryData.fromObject(model).toObject(ComputeProfile.class);
        Assertions.assertEquals("azjdyggd", model.nodes().get(0).type());
        Assertions.assertEquals("jixhbk", model.nodes().get(0).vmSize());
        Assertions.assertEquals(2140516005, model.nodes().get(0).count());
    }
}
