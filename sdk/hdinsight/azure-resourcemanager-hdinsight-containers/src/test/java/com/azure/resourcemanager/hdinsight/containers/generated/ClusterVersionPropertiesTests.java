// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hdinsight.containers.models.ClusterVersionProperties;
import org.junit.jupiter.api.Assertions;

public final class ClusterVersionPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ClusterVersionProperties model = BinaryData.fromString(
            "{\"clusterType\":\"ngitvgbmhrixkwm\",\"clusterVersion\":\"jejveg\",\"ossVersion\":\"bpnaixexccbdre\",\"clusterPoolVersion\":\"hcexdrrvqa\",\"isPreview\":true,\"components\":[{\"name\":\"pwijnhy\",\"version\":\"vfycxzb\"},{\"name\":\"oowvrv\",\"version\":\"gjqppy\"}]}")
            .toObject(ClusterVersionProperties.class);
        Assertions.assertEquals("ngitvgbmhrixkwm", model.clusterType());
        Assertions.assertEquals("jejveg", model.clusterVersion());
        Assertions.assertEquals("bpnaixexccbdre", model.ossVersion());
        Assertions.assertEquals("hcexdrrvqa", model.clusterPoolVersion());
        Assertions.assertEquals(true, model.isPreview());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ClusterVersionProperties model
            = new ClusterVersionProperties().withClusterType("ngitvgbmhrixkwm").withClusterVersion("jejveg")
                .withOssVersion("bpnaixexccbdre").withClusterPoolVersion("hcexdrrvqa").withIsPreview(true);
        model = BinaryData.fromObject(model).toObject(ClusterVersionProperties.class);
        Assertions.assertEquals("ngitvgbmhrixkwm", model.clusterType());
        Assertions.assertEquals("jejveg", model.clusterVersion());
        Assertions.assertEquals("bpnaixexccbdre", model.ossVersion());
        Assertions.assertEquals("hcexdrrvqa", model.clusterPoolVersion());
        Assertions.assertEquals(true, model.isPreview());
    }
}
