// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hdinsight.containers.models.RangerUsersyncMode;
import com.azure.resourcemanager.hdinsight.containers.models.RangerUsersyncSpec;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RangerUsersyncSpecTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RangerUsersyncSpec model = BinaryData.fromString(
            "{\"enabled\":true,\"groups\":[\"helxprglya\",\"dd\",\"kcbcue\",\"rjxgciqib\"],\"mode\":\"static\",\"userMappingLocation\":\"xsdqrhzoymibmrqy\",\"users\":[\"hwflu\",\"zdtmhrkwofy\",\"voqacpiexpbt\",\"iwbwoenwashrtdtk\"]}")
            .toObject(RangerUsersyncSpec.class);
        Assertions.assertEquals(true, model.enabled());
        Assertions.assertEquals("helxprglya", model.groups().get(0));
        Assertions.assertEquals(RangerUsersyncMode.STATIC, model.mode());
        Assertions.assertEquals("xsdqrhzoymibmrqy", model.userMappingLocation());
        Assertions.assertEquals("hwflu", model.users().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RangerUsersyncSpec model = new RangerUsersyncSpec().withEnabled(true)
            .withGroups(Arrays.asList("helxprglya", "dd", "kcbcue", "rjxgciqib"))
            .withMode(RangerUsersyncMode.STATIC)
            .withUserMappingLocation("xsdqrhzoymibmrqy")
            .withUsers(Arrays.asList("hwflu", "zdtmhrkwofy", "voqacpiexpbt", "iwbwoenwashrtdtk"));
        model = BinaryData.fromObject(model).toObject(RangerUsersyncSpec.class);
        Assertions.assertEquals(true, model.enabled());
        Assertions.assertEquals("helxprglya", model.groups().get(0));
        Assertions.assertEquals(RangerUsersyncMode.STATIC, model.mode());
        Assertions.assertEquals("xsdqrhzoymibmrqy", model.userMappingLocation());
        Assertions.assertEquals("hwflu", model.users().get(0));
    }
}
