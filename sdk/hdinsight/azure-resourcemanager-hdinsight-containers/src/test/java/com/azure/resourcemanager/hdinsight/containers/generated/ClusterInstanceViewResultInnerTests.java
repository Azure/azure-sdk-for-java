// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hdinsight.containers.fluent.models.ClusterInstanceViewResultInner;
import com.azure.resourcemanager.hdinsight.containers.models.ClusterInstanceViewPropertiesStatus;
import com.azure.resourcemanager.hdinsight.containers.models.ClusterInstanceViewResultProperties;
import com.azure.resourcemanager.hdinsight.containers.models.ServiceStatus;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ClusterInstanceViewResultInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ClusterInstanceViewResultInner model = BinaryData.fromString(
            "{\"name\":\"gzxnfaazpxdtnk\",\"properties\":{\"status\":{\"ready\":\"mkqjj\",\"reason\":\"uenvrkp\",\"message\":\"uaibrebqaaysj\"},\"serviceStatuses\":[{\"kind\":\"xqtnq\",\"ready\":\"tezlwff\",\"message\":\"akpjpqqmtedlt\"},{\"kind\":\"mjihyeozphv\",\"ready\":\"auyqncygupkv\",\"message\":\"mdscwxqupev\"}]}}")
            .toObject(ClusterInstanceViewResultInner.class);
        Assertions.assertEquals("gzxnfaazpxdtnk", model.name());
        Assertions.assertEquals("mkqjj", model.properties().status().ready());
        Assertions.assertEquals("uenvrkp", model.properties().status().reason());
        Assertions.assertEquals("uaibrebqaaysj", model.properties().status().message());
        Assertions.assertEquals("xqtnq", model.properties().serviceStatuses().get(0).kind());
        Assertions.assertEquals("tezlwff", model.properties().serviceStatuses().get(0).ready());
        Assertions.assertEquals("akpjpqqmtedlt", model.properties().serviceStatuses().get(0).message());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ClusterInstanceViewResultInner model = new ClusterInstanceViewResultInner().withName("gzxnfaazpxdtnk")
            .withProperties(new ClusterInstanceViewResultProperties()
                .withStatus(new ClusterInstanceViewPropertiesStatus().withReady("mkqjj")
                    .withReason("uenvrkp")
                    .withMessage("uaibrebqaaysj"))
                .withServiceStatuses(Arrays.asList(
                    new ServiceStatus().withKind("xqtnq").withReady("tezlwff").withMessage("akpjpqqmtedlt"),
                    new ServiceStatus().withKind("mjihyeozphv").withReady("auyqncygupkv").withMessage("mdscwxqupev"))));
        model = BinaryData.fromObject(model).toObject(ClusterInstanceViewResultInner.class);
        Assertions.assertEquals("gzxnfaazpxdtnk", model.name());
        Assertions.assertEquals("mkqjj", model.properties().status().ready());
        Assertions.assertEquals("uenvrkp", model.properties().status().reason());
        Assertions.assertEquals("uaibrebqaaysj", model.properties().status().message());
        Assertions.assertEquals("xqtnq", model.properties().serviceStatuses().get(0).kind());
        Assertions.assertEquals("tezlwff", model.properties().serviceStatuses().get(0).ready());
        Assertions.assertEquals("akpjpqqmtedlt", model.properties().serviceStatuses().get(0).message());
    }
}
