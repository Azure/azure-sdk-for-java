// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hdinsight.containers.fluent.models.ClusterInstanceViewResultInner;
import com.azure.resourcemanager.hdinsight.containers.models.ClusterInstanceViewPropertiesStatus;
import com.azure.resourcemanager.hdinsight.containers.models.ClusterInstanceViewResultProperties;
import com.azure.resourcemanager.hdinsight.containers.models.ServiceStatus;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ClusterInstanceViewResultInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ClusterInstanceViewResultInner model = BinaryData.fromString(
            "{\"name\":\"ncormrlxqtvcof\",\"properties\":{\"status\":{\"ready\":\"dflvkg\",\"reason\":\"bgdknnqv\",\"message\":\"znqntoru\"},\"serviceStatuses\":[{\"kind\":\"gsahmkycgrauw\",\"ready\":\"uetae\",\"message\":\"ruvdmov\"},{\"kind\":\"mz\",\"ready\":\"xwabmqoe\",\"message\":\"ifrvtpu\"},{\"kind\":\"ujmqlgkfbtndoa\",\"ready\":\"n\",\"message\":\"jcntuj\"}]}}")
            .toObject(ClusterInstanceViewResultInner.class);
        Assertions.assertEquals("ncormrlxqtvcof", model.name());
        Assertions.assertEquals("dflvkg", model.properties().status().ready());
        Assertions.assertEquals("bgdknnqv", model.properties().status().reason());
        Assertions.assertEquals("znqntoru", model.properties().status().message());
        Assertions.assertEquals("gsahmkycgrauw", model.properties().serviceStatuses().get(0).kind());
        Assertions.assertEquals("uetae", model.properties().serviceStatuses().get(0).ready());
        Assertions.assertEquals("ruvdmov", model.properties().serviceStatuses().get(0).message());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ClusterInstanceViewResultInner model = new ClusterInstanceViewResultInner().withName("ncormrlxqtvcof")
            .withProperties(new ClusterInstanceViewResultProperties()
                .withStatus(new ClusterInstanceViewPropertiesStatus().withReady("dflvkg").withReason("bgdknnqv")
                    .withMessage("znqntoru"))
                .withServiceStatuses(Arrays.asList(
                    new ServiceStatus().withKind("gsahmkycgrauw").withReady("uetae").withMessage("ruvdmov"),
                    new ServiceStatus().withKind("mz").withReady("xwabmqoe").withMessage("ifrvtpu"),
                    new ServiceStatus().withKind("ujmqlgkfbtndoa").withReady("n").withMessage("jcntuj"))));
        model = BinaryData.fromObject(model).toObject(ClusterInstanceViewResultInner.class);
        Assertions.assertEquals("ncormrlxqtvcof", model.name());
        Assertions.assertEquals("dflvkg", model.properties().status().ready());
        Assertions.assertEquals("bgdknnqv", model.properties().status().reason());
        Assertions.assertEquals("znqntoru", model.properties().status().message());
        Assertions.assertEquals("gsahmkycgrauw", model.properties().serviceStatuses().get(0).kind());
        Assertions.assertEquals("uetae", model.properties().serviceStatuses().get(0).ready());
        Assertions.assertEquals("ruvdmov", model.properties().serviceStatuses().get(0).message());
    }
}
