// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hdinsight.containers.models.ScriptActionProfile;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ScriptActionProfileTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ScriptActionProfile model = BinaryData.fromString(
            "{\"type\":\"nqxwbp\",\"name\":\"kulpiujwaasi\",\"url\":\"qiiobyuqer\",\"parameters\":\"lp\",\"services\":[\"cciuqgbdbutau\",\"fbtkuwhhmhyk\",\"joxafnndlpi\"],\"timeoutInMinutes\":1639639314,\"shouldPersist\":false}")
            .toObject(ScriptActionProfile.class);
        Assertions.assertEquals("nqxwbp", model.type());
        Assertions.assertEquals("kulpiujwaasi", model.name());
        Assertions.assertEquals("qiiobyuqer", model.url());
        Assertions.assertEquals("lp", model.parameters());
        Assertions.assertEquals("cciuqgbdbutau", model.services().get(0));
        Assertions.assertEquals(1639639314, model.timeoutInMinutes());
        Assertions.assertEquals(false, model.shouldPersist());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ScriptActionProfile model = new ScriptActionProfile().withType("nqxwbp")
            .withName("kulpiujwaasi")
            .withUrl("qiiobyuqer")
            .withParameters("lp")
            .withServices(Arrays.asList("cciuqgbdbutau", "fbtkuwhhmhyk", "joxafnndlpi"))
            .withTimeoutInMinutes(1639639314)
            .withShouldPersist(false);
        model = BinaryData.fromObject(model).toObject(ScriptActionProfile.class);
        Assertions.assertEquals("nqxwbp", model.type());
        Assertions.assertEquals("kulpiujwaasi", model.name());
        Assertions.assertEquals("qiiobyuqer", model.url());
        Assertions.assertEquals("lp", model.parameters());
        Assertions.assertEquals("cciuqgbdbutau", model.services().get(0));
        Assertions.assertEquals(1639639314, model.timeoutInMinutes());
        Assertions.assertEquals(false, model.shouldPersist());
    }
}
