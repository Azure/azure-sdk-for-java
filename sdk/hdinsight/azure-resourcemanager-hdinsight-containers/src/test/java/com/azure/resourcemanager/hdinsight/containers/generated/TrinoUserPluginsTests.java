// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hdinsight.containers.models.TrinoUserPlugin;
import com.azure.resourcemanager.hdinsight.containers.models.TrinoUserPlugins;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class TrinoUserPluginsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TrinoUserPlugins model =
            BinaryData
                .fromString(
                    "{\"plugins\":[{\"enabled\":false,\"name\":\"j\",\"path\":\"hfxobbcswsrtj\"},{\"enabled\":true,\"name\":\"rbpbewtghfgblcg\",\"path\":\"zvlvqhjkbegib\"}]}")
                .toObject(TrinoUserPlugins.class);
        Assertions.assertEquals(false, model.plugins().get(0).enabled());
        Assertions.assertEquals("j", model.plugins().get(0).name());
        Assertions.assertEquals("hfxobbcswsrtj", model.plugins().get(0).path());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TrinoUserPlugins model =
            new TrinoUserPlugins()
                .withPlugins(
                    Arrays
                        .asList(
                            new TrinoUserPlugin().withEnabled(false).withName("j").withPath("hfxobbcswsrtj"),
                            new TrinoUserPlugin()
                                .withEnabled(true)
                                .withName("rbpbewtghfgblcg")
                                .withPath("zvlvqhjkbegib")));
        model = BinaryData.fromObject(model).toObject(TrinoUserPlugins.class);
        Assertions.assertEquals(false, model.plugins().get(0).enabled());
        Assertions.assertEquals("j", model.plugins().get(0).name());
        Assertions.assertEquals("hfxobbcswsrtj", model.plugins().get(0).path());
    }
}
