// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hdinsight.containers.fluent.models.ClusterPoolInner;
import com.azure.resourcemanager.hdinsight.containers.models.ClusterPoolListResult;
import com.azure.resourcemanager.hdinsight.containers.models.ClusterPoolResourcePropertiesClusterPoolProfile;
import com.azure.resourcemanager.hdinsight.containers.models.ClusterPoolResourcePropertiesComputeProfile;
import com.azure.resourcemanager.hdinsight.containers.models.ClusterPoolResourcePropertiesLogAnalyticsProfile;
import com.azure.resourcemanager.hdinsight.containers.models.ClusterPoolResourcePropertiesNetworkProfile;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ClusterPoolListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ClusterPoolListResult model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"provisioningState\":\"Accepted\",\"deploymentId\":\"ybb\",\"managedResourceGroupName\":\"odepoogin\",\"aksManagedResourceGroupName\":\"amiheognarxz\",\"clusterPoolProfile\":{\"clusterPoolVersion\":\"heotusiv\"},\"computeProfile\":{\"vmSize\":\"evcciqihnhun\",\"count\":1154149650},\"aksClusterProfile\":{\"aksClusterResourceId\":\"rnfygxgispem\",\"aksClusterAgentPoolIdentityProfile\":{\"msiResourceId\":\"zfkufubljofx\",\"msiClientId\":\"eofjaeqjh\",\"msiObjectId\":\"jbasvmsmjqulngs\"},\"aksVersion\":\"nbybkzgcwrwcl\"},\"networkProfile\":{\"subnetId\":\"wrljdouskc\"},\"logAnalyticsProfile\":{\"enabled\":true,\"workspaceId\":\"cr\"},\"status\":\"dkwt\"},\"location\":\"xbnjbiksq\",\"tags\":{\"fmppe\":\"ssainqpjwnzll\",\"c\":\"bvmgxsabkyqduuji\"},\"id\":\"czdzev\",\"name\":\"dhkrwpdappdsbdk\",\"type\":\"wrwjfeu\"},{\"properties\":{\"provisioningState\":\"Failed\",\"deploymentId\":\"je\",\"managedResourceGroupName\":\"mrldhu\",\"aksManagedResourceGroupName\":\"zzd\",\"clusterPoolProfile\":{\"clusterPoolVersion\":\"qxhocdgeablgphut\"},\"computeProfile\":{\"vmSize\":\"cndvkaozwyiftyhx\",\"count\":1298689588},\"aksClusterProfile\":{\"aksClusterResourceId\":\"ftyxolniw\",\"aksClusterAgentPoolIdentityProfile\":{\"msiResourceId\":\"cukjf\",\"msiClientId\":\"giawx\",\"msiObjectId\":\"lryplwckbasyy\"},\"aksVersion\":\"ddhsgcbacphe\"},\"networkProfile\":{\"subnetId\":\"ot\"},\"logAnalyticsProfile\":{\"enabled\":false,\"workspaceId\":\"oulzndlikwyq\"},\"status\":\"fgibmadgakeq\"},\"location\":\"xybz\",\"tags\":{\"kzsmodm\":\"dqytbciqfouflmm\"},\"id\":\"lougpbkw\",\"name\":\"mutduqktaps\",\"type\":\"wgcu\"},{\"properties\":{\"provisioningState\":\"Failed\",\"deploymentId\":\"kdosvqw\",\"managedResourceGroupName\":\"mdgbbjfdd\",\"aksManagedResourceGroupName\":\"bmbexppbhtqqro\",\"clusterPoolProfile\":{\"clusterPoolVersion\":\"p\"},\"computeProfile\":{\"vmSize\":\"psalgbqux\",\"count\":596871405},\"aksClusterProfile\":{\"aksClusterResourceId\":\"gzjaoyfhrtxilne\",\"aksClusterAgentPoolIdentityProfile\":{\"msiResourceId\":\"ujysvle\",\"msiClientId\":\"uvfqawrlyxwj\",\"msiObjectId\":\"cpr\"},\"aksVersion\":\"wbxgjvt\"},\"networkProfile\":{\"subnetId\":\"p\"},\"logAnalyticsProfile\":{\"enabled\":false,\"workspaceId\":\"dnrujqguhmuouqfp\"},\"status\":\"zw\"},\"location\":\"g\",\"tags\":{\"gazxuf\":\"nwui\"},\"id\":\"zuckyfi\",\"name\":\"rfidfvzwdz\",\"type\":\"htymw\"},{\"properties\":{\"provisioningState\":\"Canceled\",\"deploymentId\":\"thwxmnteiwaopvkm\",\"managedResourceGroupName\":\"c\",\"aksManagedResourceGroupName\":\"xdcu\",\"clusterPoolProfile\":{\"clusterPoolVersion\":\"fsrpymzidnse\"},\"computeProfile\":{\"vmSize\":\"cxtbzsg\",\"count\":121296393},\"aksClusterProfile\":{\"aksClusterResourceId\":\"newmdwzjeiachbo\",\"aksClusterAgentPoolIdentityProfile\":{\"msiResourceId\":\"flnrosfqpteehzz\",\"msiClientId\":\"ypyqrimzinp\",\"msiObjectId\":\"swjdkirso\"},\"aksVersion\":\"qxhcrmn\"},\"networkProfile\":{\"subnetId\":\"jtckwhdso\"},\"logAnalyticsProfile\":{\"enabled\":false,\"workspaceId\":\"i\"},\"status\":\"xsqwpgrjbznorc\"},\"location\":\"vsnb\",\"tags\":{\"zafb\":\"abnmocpcyshu\",\"oq\":\"jjgpb\"},\"id\":\"jmkljavbqidtqajz\",\"name\":\"ulpkudjkrl\",\"type\":\"hbzhfepg\"}],\"nextLink\":\"qex\"}")
                .toObject(ClusterPoolListResult.class);
        Assertions.assertEquals("xbnjbiksq", model.value().get(0).location());
        Assertions.assertEquals("ssainqpjwnzll", model.value().get(0).tags().get("fmppe"));
        Assertions.assertEquals("odepoogin", model.value().get(0).managedResourceGroupName());
        Assertions.assertEquals("heotusiv", model.value().get(0).clusterPoolProfile().clusterPoolVersion());
        Assertions.assertEquals("evcciqihnhun", model.value().get(0).computeProfile().vmSize());
        Assertions.assertEquals("wrljdouskc", model.value().get(0).networkProfile().subnetId());
        Assertions.assertEquals(true, model.value().get(0).logAnalyticsProfile().enabled());
        Assertions.assertEquals("cr", model.value().get(0).logAnalyticsProfile().workspaceId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ClusterPoolListResult model =
            new ClusterPoolListResult()
                .withValue(
                    Arrays
                        .asList(
                            new ClusterPoolInner()
                                .withLocation("xbnjbiksq")
                                .withTags(mapOf("fmppe", "ssainqpjwnzll", "c", "bvmgxsabkyqduuji"))
                                .withManagedResourceGroupName("odepoogin")
                                .withClusterPoolProfile(
                                    new ClusterPoolResourcePropertiesClusterPoolProfile()
                                        .withClusterPoolVersion("heotusiv"))
                                .withComputeProfile(
                                    new ClusterPoolResourcePropertiesComputeProfile().withVmSize("evcciqihnhun"))
                                .withNetworkProfile(
                                    new ClusterPoolResourcePropertiesNetworkProfile().withSubnetId("wrljdouskc"))
                                .withLogAnalyticsProfile(
                                    new ClusterPoolResourcePropertiesLogAnalyticsProfile()
                                        .withEnabled(true)
                                        .withWorkspaceId("cr")),
                            new ClusterPoolInner()
                                .withLocation("xybz")
                                .withTags(mapOf("kzsmodm", "dqytbciqfouflmm"))
                                .withManagedResourceGroupName("mrldhu")
                                .withClusterPoolProfile(
                                    new ClusterPoolResourcePropertiesClusterPoolProfile()
                                        .withClusterPoolVersion("qxhocdgeablgphut"))
                                .withComputeProfile(
                                    new ClusterPoolResourcePropertiesComputeProfile().withVmSize("cndvkaozwyiftyhx"))
                                .withNetworkProfile(
                                    new ClusterPoolResourcePropertiesNetworkProfile().withSubnetId("ot"))
                                .withLogAnalyticsProfile(
                                    new ClusterPoolResourcePropertiesLogAnalyticsProfile()
                                        .withEnabled(false)
                                        .withWorkspaceId("oulzndlikwyq")),
                            new ClusterPoolInner()
                                .withLocation("g")
                                .withTags(mapOf("gazxuf", "nwui"))
                                .withManagedResourceGroupName("mdgbbjfdd")
                                .withClusterPoolProfile(
                                    new ClusterPoolResourcePropertiesClusterPoolProfile().withClusterPoolVersion("p"))
                                .withComputeProfile(
                                    new ClusterPoolResourcePropertiesComputeProfile().withVmSize("psalgbqux"))
                                .withNetworkProfile(new ClusterPoolResourcePropertiesNetworkProfile().withSubnetId("p"))
                                .withLogAnalyticsProfile(
                                    new ClusterPoolResourcePropertiesLogAnalyticsProfile()
                                        .withEnabled(false)
                                        .withWorkspaceId("dnrujqguhmuouqfp")),
                            new ClusterPoolInner()
                                .withLocation("vsnb")
                                .withTags(mapOf("zafb", "abnmocpcyshu", "oq", "jjgpb"))
                                .withManagedResourceGroupName("c")
                                .withClusterPoolProfile(
                                    new ClusterPoolResourcePropertiesClusterPoolProfile()
                                        .withClusterPoolVersion("fsrpymzidnse"))
                                .withComputeProfile(
                                    new ClusterPoolResourcePropertiesComputeProfile().withVmSize("cxtbzsg"))
                                .withNetworkProfile(
                                    new ClusterPoolResourcePropertiesNetworkProfile().withSubnetId("jtckwhdso"))
                                .withLogAnalyticsProfile(
                                    new ClusterPoolResourcePropertiesLogAnalyticsProfile()
                                        .withEnabled(false)
                                        .withWorkspaceId("i"))));
        model = BinaryData.fromObject(model).toObject(ClusterPoolListResult.class);
        Assertions.assertEquals("xbnjbiksq", model.value().get(0).location());
        Assertions.assertEquals("ssainqpjwnzll", model.value().get(0).tags().get("fmppe"));
        Assertions.assertEquals("odepoogin", model.value().get(0).managedResourceGroupName());
        Assertions.assertEquals("heotusiv", model.value().get(0).clusterPoolProfile().clusterPoolVersion());
        Assertions.assertEquals("evcciqihnhun", model.value().get(0).computeProfile().vmSize());
        Assertions.assertEquals("wrljdouskc", model.value().get(0).networkProfile().subnetId());
        Assertions.assertEquals(true, model.value().get(0).logAnalyticsProfile().enabled());
        Assertions.assertEquals("cr", model.value().get(0).logAnalyticsProfile().workspaceId());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
