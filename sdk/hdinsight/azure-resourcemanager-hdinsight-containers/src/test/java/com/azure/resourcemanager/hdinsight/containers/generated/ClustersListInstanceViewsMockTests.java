// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.hdinsight.containers.HDInsightContainersManager;
import com.azure.resourcemanager.hdinsight.containers.models.ClusterInstanceViewResult;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ClustersListInstanceViewsMockTests {
    @Test
    public void testListInstanceViews() throws Exception {
        String responseStr
            = "{\"value\":[{\"name\":\"ons\",\"properties\":{\"status\":{\"ready\":\"onwpnga\",\"reason\":\"n\",\"message\":\"xjawrt\"},\"serviceStatuses\":[{\"kind\":\"fjmyccxlzhco\",\"ready\":\"ovne\",\"message\":\"enlusfn\"},{\"kind\":\"dtjxtxrdcqt\",\"ready\":\"vidttgepuslvyjt\",\"message\":\"uwkasiz\"},{\"kind\":\"esfuught\",\"ready\":\"qfecjxeygtuhx\",\"message\":\"cbuewmrswnjlxuz\"}]}}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HDInsightContainersManager manager = HDInsightContainersManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<ClusterInstanceViewResult> response = manager.clusters()
            .listInstanceViews("fjgtixrjvzuy", "urmlmuo", "olbauirop", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("ons", response.iterator().next().name());
        Assertions.assertEquals("onwpnga", response.iterator().next().properties().status().ready());
        Assertions.assertEquals("n", response.iterator().next().properties().status().reason());
        Assertions.assertEquals("xjawrt", response.iterator().next().properties().status().message());
        Assertions.assertEquals("fjmyccxlzhco",
            response.iterator().next().properties().serviceStatuses().get(0).kind());
        Assertions.assertEquals("ovne", response.iterator().next().properties().serviceStatuses().get(0).ready());
        Assertions.assertEquals("enlusfn", response.iterator().next().properties().serviceStatuses().get(0).message());
    }
}
