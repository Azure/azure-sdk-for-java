// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The disk billing meters.
 */
@Fluent
public final class DiskBillingMeters implements JsonSerializable<DiskBillingMeters> {
    /*
     * The managed disk meter guid.
     */
    private String diskRpMeter;

    /*
     * The managed disk billing sku, P30 or S30.
     */
    private String sku;

    /*
     * The managed disk billing tier, Standard or Premium.
     */
    private Tier tier;

    /**
     * Creates an instance of DiskBillingMeters class.
     */
    public DiskBillingMeters() {
    }

    /**
     * Get the diskRpMeter property: The managed disk meter guid.
     * 
     * @return the diskRpMeter value.
     */
    public String diskRpMeter() {
        return this.diskRpMeter;
    }

    /**
     * Set the diskRpMeter property: The managed disk meter guid.
     * 
     * @param diskRpMeter the diskRpMeter value to set.
     * @return the DiskBillingMeters object itself.
     */
    public DiskBillingMeters withDiskRpMeter(String diskRpMeter) {
        this.diskRpMeter = diskRpMeter;
        return this;
    }

    /**
     * Get the sku property: The managed disk billing sku, P30 or S30.
     * 
     * @return the sku value.
     */
    public String sku() {
        return this.sku;
    }

    /**
     * Set the sku property: The managed disk billing sku, P30 or S30.
     * 
     * @param sku the sku value to set.
     * @return the DiskBillingMeters object itself.
     */
    public DiskBillingMeters withSku(String sku) {
        this.sku = sku;
        return this;
    }

    /**
     * Get the tier property: The managed disk billing tier, Standard or Premium.
     * 
     * @return the tier value.
     */
    public Tier tier() {
        return this.tier;
    }

    /**
     * Set the tier property: The managed disk billing tier, Standard or Premium.
     * 
     * @param tier the tier value to set.
     * @return the DiskBillingMeters object itself.
     */
    public DiskBillingMeters withTier(Tier tier) {
        this.tier = tier;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("diskRpMeter", this.diskRpMeter);
        jsonWriter.writeStringField("sku", this.sku);
        jsonWriter.writeStringField("tier", this.tier == null ? null : this.tier.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DiskBillingMeters from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DiskBillingMeters if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the DiskBillingMeters.
     */
    public static DiskBillingMeters fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            DiskBillingMeters deserializedDiskBillingMeters = new DiskBillingMeters();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("diskRpMeter".equals(fieldName)) {
                    deserializedDiskBillingMeters.diskRpMeter = reader.getString();
                } else if ("sku".equals(fieldName)) {
                    deserializedDiskBillingMeters.sku = reader.getString();
                } else if ("tier".equals(fieldName)) {
                    deserializedDiskBillingMeters.tier = Tier.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedDiskBillingMeters;
        });
    }
}
