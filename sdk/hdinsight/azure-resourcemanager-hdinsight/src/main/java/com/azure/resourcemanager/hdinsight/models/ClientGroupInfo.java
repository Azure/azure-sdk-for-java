// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The information of AAD security group.
 */
@Fluent
public final class ClientGroupInfo implements JsonSerializable<ClientGroupInfo> {
    /*
     * The AAD security group name.
     */
    private String groupName;

    /*
     * The AAD security group id.
     */
    private String groupId;

    /**
     * Creates an instance of ClientGroupInfo class.
     */
    public ClientGroupInfo() {
    }

    /**
     * Get the groupName property: The AAD security group name.
     * 
     * @return the groupName value.
     */
    public String groupName() {
        return this.groupName;
    }

    /**
     * Set the groupName property: The AAD security group name.
     * 
     * @param groupName the groupName value to set.
     * @return the ClientGroupInfo object itself.
     */
    public ClientGroupInfo withGroupName(String groupName) {
        this.groupName = groupName;
        return this;
    }

    /**
     * Get the groupId property: The AAD security group id.
     * 
     * @return the groupId value.
     */
    public String groupId() {
        return this.groupId;
    }

    /**
     * Set the groupId property: The AAD security group id.
     * 
     * @param groupId the groupId value to set.
     * @return the ClientGroupInfo object itself.
     */
    public ClientGroupInfo withGroupId(String groupId) {
        this.groupId = groupId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("groupName", this.groupName);
        jsonWriter.writeStringField("groupId", this.groupId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ClientGroupInfo from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ClientGroupInfo if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the ClientGroupInfo.
     */
    public static ClientGroupInfo fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ClientGroupInfo deserializedClientGroupInfo = new ClientGroupInfo();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("groupName".equals(fieldName)) {
                    deserializedClientGroupInfo.groupName = reader.getString();
                } else if ("groupId".equals(fieldName)) {
                    deserializedClientGroupInfo.groupId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedClientGroupInfo;
        });
    }
}
