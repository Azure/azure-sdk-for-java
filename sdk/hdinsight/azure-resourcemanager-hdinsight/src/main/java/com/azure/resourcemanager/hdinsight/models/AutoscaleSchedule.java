// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Parameters for a schedule-based autoscale rule, consisting of an array of days + a time and capacity.
 */
@Fluent
public final class AutoscaleSchedule implements JsonSerializable<AutoscaleSchedule> {
    /*
     * Days of the week for a schedule-based autoscale rule
     */
    private List<DaysOfWeek> days;

    /*
     * Time and capacity for a schedule-based autoscale rule
     */
    private AutoscaleTimeAndCapacity timeAndCapacity;

    /**
     * Creates an instance of AutoscaleSchedule class.
     */
    public AutoscaleSchedule() {
    }

    /**
     * Get the days property: Days of the week for a schedule-based autoscale rule.
     * 
     * @return the days value.
     */
    public List<DaysOfWeek> days() {
        return this.days;
    }

    /**
     * Set the days property: Days of the week for a schedule-based autoscale rule.
     * 
     * @param days the days value to set.
     * @return the AutoscaleSchedule object itself.
     */
    public AutoscaleSchedule withDays(List<DaysOfWeek> days) {
        this.days = days;
        return this;
    }

    /**
     * Get the timeAndCapacity property: Time and capacity for a schedule-based autoscale rule.
     * 
     * @return the timeAndCapacity value.
     */
    public AutoscaleTimeAndCapacity timeAndCapacity() {
        return this.timeAndCapacity;
    }

    /**
     * Set the timeAndCapacity property: Time and capacity for a schedule-based autoscale rule.
     * 
     * @param timeAndCapacity the timeAndCapacity value to set.
     * @return the AutoscaleSchedule object itself.
     */
    public AutoscaleSchedule withTimeAndCapacity(AutoscaleTimeAndCapacity timeAndCapacity) {
        this.timeAndCapacity = timeAndCapacity;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (timeAndCapacity() != null) {
            timeAndCapacity().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("days", this.days,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeJsonField("timeAndCapacity", this.timeAndCapacity);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AutoscaleSchedule from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AutoscaleSchedule if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the AutoscaleSchedule.
     */
    public static AutoscaleSchedule fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AutoscaleSchedule deserializedAutoscaleSchedule = new AutoscaleSchedule();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("days".equals(fieldName)) {
                    List<DaysOfWeek> days = reader.readArray(reader1 -> DaysOfWeek.fromString(reader1.getString()));
                    deserializedAutoscaleSchedule.days = days;
                } else if ("timeAndCapacity".equals(fieldName)) {
                    deserializedAutoscaleSchedule.timeAndCapacity = AutoscaleTimeAndCapacity.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAutoscaleSchedule;
        });
    }
}
