// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Details of an Entra user for gateway access.
 */
@Fluent
public final class EntraUserInfo implements JsonSerializable<EntraUserInfo> {
    /*
     * The unique object ID of the Entra user or client ID of the enterprise applications.
     */
    private String objectId;

    /*
     * The display name of the Entra user.
     */
    private String displayName;

    /*
     * The User Principal Name (UPN) of the Entra user. It may be empty in certain cases, such as for enterprise
     * applications.
     */
    private String upn;

    /**
     * Creates an instance of EntraUserInfo class.
     */
    public EntraUserInfo() {
    }

    /**
     * Get the objectId property: The unique object ID of the Entra user or client ID of the enterprise applications.
     * 
     * @return the objectId value.
     */
    public String objectId() {
        return this.objectId;
    }

    /**
     * Set the objectId property: The unique object ID of the Entra user or client ID of the enterprise applications.
     * 
     * @param objectId the objectId value to set.
     * @return the EntraUserInfo object itself.
     */
    public EntraUserInfo withObjectId(String objectId) {
        this.objectId = objectId;
        return this;
    }

    /**
     * Get the displayName property: The display name of the Entra user.
     * 
     * @return the displayName value.
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set the displayName property: The display name of the Entra user.
     * 
     * @param displayName the displayName value to set.
     * @return the EntraUserInfo object itself.
     */
    public EntraUserInfo withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the upn property: The User Principal Name (UPN) of the Entra user. It may be empty in certain cases, such as
     * for enterprise applications.
     * 
     * @return the upn value.
     */
    public String upn() {
        return this.upn;
    }

    /**
     * Set the upn property: The User Principal Name (UPN) of the Entra user. It may be empty in certain cases, such as
     * for enterprise applications.
     * 
     * @param upn the upn value to set.
     * @return the EntraUserInfo object itself.
     */
    public EntraUserInfo withUpn(String upn) {
        this.upn = upn;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("objectId", this.objectId);
        jsonWriter.writeStringField("displayName", this.displayName);
        jsonWriter.writeStringField("upn", this.upn);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of EntraUserInfo from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of EntraUserInfo if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the EntraUserInfo.
     */
    public static EntraUserInfo fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            EntraUserInfo deserializedEntraUserInfo = new EntraUserInfo();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("objectId".equals(fieldName)) {
                    deserializedEntraUserInfo.objectId = reader.getString();
                } else if ("displayName".equals(fieldName)) {
                    deserializedEntraUserInfo.displayName = reader.getString();
                } else if ("upn".equals(fieldName)) {
                    deserializedEntraUserInfo.upn = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedEntraUserInfo;
        });
    }
}
