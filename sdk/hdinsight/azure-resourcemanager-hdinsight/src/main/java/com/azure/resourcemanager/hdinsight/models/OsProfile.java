// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The Linux operation systems profile.
 */
@Fluent
public final class OsProfile implements JsonSerializable<OsProfile> {
    /*
     * The Linux OS profile.
     */
    private LinuxOperatingSystemProfile linuxOperatingSystemProfile;

    /**
     * Creates an instance of OsProfile class.
     */
    public OsProfile() {
    }

    /**
     * Get the linuxOperatingSystemProfile property: The Linux OS profile.
     * 
     * @return the linuxOperatingSystemProfile value.
     */
    public LinuxOperatingSystemProfile linuxOperatingSystemProfile() {
        return this.linuxOperatingSystemProfile;
    }

    /**
     * Set the linuxOperatingSystemProfile property: The Linux OS profile.
     * 
     * @param linuxOperatingSystemProfile the linuxOperatingSystemProfile value to set.
     * @return the OsProfile object itself.
     */
    public OsProfile withLinuxOperatingSystemProfile(LinuxOperatingSystemProfile linuxOperatingSystemProfile) {
        this.linuxOperatingSystemProfile = linuxOperatingSystemProfile;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (linuxOperatingSystemProfile() != null) {
            linuxOperatingSystemProfile().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("linuxOperatingSystemProfile", this.linuxOperatingSystemProfile);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of OsProfile from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of OsProfile if the JsonReader was pointing to an instance of it, or null if it was pointing
     * to JSON null.
     * @throws IOException If an error occurs while reading the OsProfile.
     */
    public static OsProfile fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            OsProfile deserializedOsProfile = new OsProfile();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("linuxOperatingSystemProfile".equals(fieldName)) {
                    deserializedOsProfile.linuxOperatingSystemProfile = LinuxOperatingSystemProfile.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedOsProfile;
        });
    }
}
