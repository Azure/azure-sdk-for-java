// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The encryption-in-transit properties. */
@Fluent
public final class EncryptionInTransitProperties {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(EncryptionInTransitProperties.class);

    /*
     * Indicates whether or not inter cluster node communication is encrypted
     * in transit.
     */
    @JsonProperty(value = "isEncryptionInTransitEnabled")
    private Boolean isEncryptionInTransitEnabled;

    /**
     * Get the isEncryptionInTransitEnabled property: Indicates whether or not inter cluster node communication is
     * encrypted in transit.
     *
     * @return the isEncryptionInTransitEnabled value.
     */
    public Boolean isEncryptionInTransitEnabled() {
        return this.isEncryptionInTransitEnabled;
    }

    /**
     * Set the isEncryptionInTransitEnabled property: Indicates whether or not inter cluster node communication is
     * encrypted in transit.
     *
     * @param isEncryptionInTransitEnabled the isEncryptionInTransitEnabled value to set.
     * @return the EncryptionInTransitProperties object itself.
     */
    public EncryptionInTransitProperties withIsEncryptionInTransitEnabled(Boolean isEncryptionInTransitEnabled) {
        this.isEncryptionInTransitEnabled = isEncryptionInTransitEnabled;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
