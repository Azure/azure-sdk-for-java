// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The billing meters. */
@Fluent
public final class BillingMeters {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(BillingMeters.class);

    /*
     * The virtual machine sizes.
     */
    @JsonProperty(value = "meterParameter")
    private String meterParameter;

    /*
     * The HDInsight meter guid.
     */
    @JsonProperty(value = "meter")
    private String meter;

    /*
     * The unit of meter, VMHours or CoreHours.
     */
    @JsonProperty(value = "unit")
    private String unit;

    /**
     * Get the meterParameter property: The virtual machine sizes.
     *
     * @return the meterParameter value.
     */
    public String meterParameter() {
        return this.meterParameter;
    }

    /**
     * Set the meterParameter property: The virtual machine sizes.
     *
     * @param meterParameter the meterParameter value to set.
     * @return the BillingMeters object itself.
     */
    public BillingMeters withMeterParameter(String meterParameter) {
        this.meterParameter = meterParameter;
        return this;
    }

    /**
     * Get the meter property: The HDInsight meter guid.
     *
     * @return the meter value.
     */
    public String meter() {
        return this.meter;
    }

    /**
     * Set the meter property: The HDInsight meter guid.
     *
     * @param meter the meter value to set.
     * @return the BillingMeters object itself.
     */
    public BillingMeters withMeter(String meter) {
        this.meter = meter;
        return this;
    }

    /**
     * Get the unit property: The unit of meter, VMHours or CoreHours.
     *
     * @return the unit value.
     */
    public String unit() {
        return this.unit;
    }

    /**
     * Set the unit property: The unit of meter, VMHours or CoreHours.
     *
     * @param unit the unit value to set.
     * @return the BillingMeters object itself.
     */
    public BillingMeters withUnit(String unit) {
        this.unit = unit;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
