// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.hdinsight.HDInsightManager;
import com.azure.resourcemanager.hdinsight.models.Autoscale;
import com.azure.resourcemanager.hdinsight.models.AutoscaleCapacity;
import com.azure.resourcemanager.hdinsight.models.AutoscaleConfigurationUpdateParameter;
import com.azure.resourcemanager.hdinsight.models.AutoscaleRecurrence;
import com.azure.resourcemanager.hdinsight.models.AutoscaleSchedule;
import com.azure.resourcemanager.hdinsight.models.AutoscaleTimeAndCapacity;
import com.azure.resourcemanager.hdinsight.models.DaysOfWeek;
import com.azure.resourcemanager.hdinsight.models.RoleName;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ClustersUpdateAutoScaleConfigurationMockTests {
    @Test
    public void testUpdateAutoScaleConfiguration() throws Exception {
        String responseStr = "{}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HDInsightManager manager = HDInsightManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        manager.clusters()
            .updateAutoScaleConfiguration("uewmrswnjlxuzrhw", "usxjbaqehg", RoleName.WORKERNODE,
                new AutoscaleConfigurationUpdateParameter()
                    .withAutoscale(
                        new Autoscale()
                            .withCapacity(new AutoscaleCapacity().withMinInstanceCount(1306458114)
                                .withMaxInstanceCount(1128032057))
                            .withRecurrence(
                                new AutoscaleRecurrence().withTimeZone("coi")
                                    .withSchedule(Arrays.asList(
                                        new AutoscaleSchedule()
                                            .withDays(Arrays.asList(DaysOfWeek.MONDAY, DaysOfWeek.MONDAY,
                                                DaysOfWeek.SATURDAY))
                                            .withTimeAndCapacity(new AutoscaleTimeAndCapacity()),
                                        new AutoscaleSchedule()
                                            .withDays(Arrays.asList(DaysOfWeek.WEDNESDAY, DaysOfWeek.THURSDAY,
                                                DaysOfWeek.FRIDAY))
                                            .withTimeAndCapacity(new AutoscaleTimeAndCapacity()),
                                        new AutoscaleSchedule().withDays(Arrays.asList(DaysOfWeek.THURSDAY))
                                            .withTimeAndCapacity(new AutoscaleTimeAndCapacity()))))),
                com.azure.core.util.Context.NONE);

    }
}
