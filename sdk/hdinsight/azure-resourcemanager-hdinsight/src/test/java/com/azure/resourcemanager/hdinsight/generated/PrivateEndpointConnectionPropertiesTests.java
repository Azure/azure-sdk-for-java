// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hdinsight.fluent.models.PrivateEndpointConnectionProperties;
import com.azure.resourcemanager.hdinsight.models.PrivateLinkServiceConnectionState;
import com.azure.resourcemanager.hdinsight.models.PrivateLinkServiceConnectionStatus;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class PrivateEndpointConnectionPropertiesTests {
    @Test
    public void testDeserialize() {
        PrivateEndpointConnectionProperties model =
            BinaryData
                .fromString(
                    "{\"privateEndpoint\":{\"id\":\"wburvjxxjnspydpt\"},\"privateLinkServiceConnectionState\":{\"status\":\"Removed\",\"description\":\"nkoukn\",\"actionsRequired\":\"dwtiukbldngkp\"},\"linkIdentifier\":\"ipazyxoegukgjnpi\",\"provisioningState\":\"InProgress\"}")
                .toObject(PrivateEndpointConnectionProperties.class);
        Assertions
            .assertEquals(
                PrivateLinkServiceConnectionStatus.REMOVED, model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("nkoukn", model.privateLinkServiceConnectionState().description());
        Assertions.assertEquals("dwtiukbldngkp", model.privateLinkServiceConnectionState().actionsRequired());
    }

    @Test
    public void testSerialize() {
        PrivateEndpointConnectionProperties model =
            new PrivateEndpointConnectionProperties()
                .withPrivateLinkServiceConnectionState(
                    new PrivateLinkServiceConnectionState()
                        .withStatus(PrivateLinkServiceConnectionStatus.REMOVED)
                        .withDescription("nkoukn")
                        .withActionsRequired("dwtiukbldngkp"));
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnectionProperties.class);
        Assertions
            .assertEquals(
                PrivateLinkServiceConnectionStatus.REMOVED, model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("nkoukn", model.privateLinkServiceConnectionState().description());
        Assertions.assertEquals("dwtiukbldngkp", model.privateLinkServiceConnectionState().actionsRequired());
    }
}
