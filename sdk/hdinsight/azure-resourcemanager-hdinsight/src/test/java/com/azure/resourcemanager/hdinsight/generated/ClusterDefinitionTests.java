// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hdinsight.models.ClusterDefinition;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ClusterDefinitionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ClusterDefinition model =
            BinaryData
                .fromString(
                    "{\"blueprint\":\"vce\",\"kind\":\"eil\",\"componentVersion\":{\"jfcn\":\"oty\",\"x\":\"bkc\",\"nv\":\"hbttkphyw\",\"qnermclfplphoxu\":\"t\"},\"configurations\":\"datarpabg\"}")
                .toObject(ClusterDefinition.class);
        Assertions.assertEquals("vce", model.blueprint());
        Assertions.assertEquals("eil", model.kind());
        Assertions.assertEquals("oty", model.componentVersion().get("jfcn"));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ClusterDefinition model =
            new ClusterDefinition()
                .withBlueprint("vce")
                .withKind("eil")
                .withComponentVersion(mapOf("jfcn", "oty", "x", "bkc", "nv", "hbttkphyw", "qnermclfplphoxu", "t"))
                .withConfigurations("datarpabg");
        model = BinaryData.fromObject(model).toObject(ClusterDefinition.class);
        Assertions.assertEquals("vce", model.blueprint());
        Assertions.assertEquals("eil", model.kind());
        Assertions.assertEquals("oty", model.componentVersion().get("jfcn"));
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
