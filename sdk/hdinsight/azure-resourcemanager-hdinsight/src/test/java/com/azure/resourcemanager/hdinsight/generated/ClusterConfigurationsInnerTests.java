// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hdinsight.fluent.models.ClusterConfigurationsInner;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ClusterConfigurationsInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ClusterConfigurationsInner model = BinaryData.fromString(
            "{\"configurations\":{\"bpkkpwdre\":{\"pichkoymkcdy\":\"nd\"},\"iipfpubj\":{\"syrsndsytgadgvra\":\"ovvqfovljxywsu\",\"uu\":\"aeneqnzarrwl\",\"e\":\"jfqka\"}}}")
            .toObject(ClusterConfigurationsInner.class);
        Assertions.assertEquals("nd", model.configurations().get("bpkkpwdre").get("pichkoymkcdy"));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ClusterConfigurationsInner model
            = new ClusterConfigurationsInner().withConfigurations(mapOf("bpkkpwdre", mapOf("pichkoymkcdy", "nd"),
                "iipfpubj", mapOf("syrsndsytgadgvra", "ovvqfovljxywsu", "uu", "aeneqnzarrwl", "e", "jfqka")));
        model = BinaryData.fromObject(model).toObject(ClusterConfigurationsInner.class);
        Assertions.assertEquals("nd", model.configurations().get("bpkkpwdre").get("pichkoymkcdy"));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
