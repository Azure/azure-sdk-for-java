// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hdinsight.fluent.models.ClusterConfigurationsInner;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class ClusterConfigurationsInnerTests {
    @Test
    public void testDeserialize() {
        ClusterConfigurationsInner model =
            BinaryData
                .fromString(
                    "{\"configurations\":{\"bjbsybb\":{\"gkakmokzhjjklff\":\"kzbzkdvncjabudu\",\"bizikayuhq\":\"mouwqlgzrfzeey\"},\"dgmfpgvmpipasl\":{\"t\":\"r\"},\"pdrhne\":{\"wutwbdsre\":\"aqfxss\"}}}")
                .toObject(ClusterConfigurationsInner.class);
        Assertions.assertEquals("kzbzkdvncjabudu", model.configurations().get("bjbsybb").get("gkakmokzhjjklff"));
    }

    @Test
    public void testSerialize() {
        ClusterConfigurationsInner model =
            new ClusterConfigurationsInner()
                .withConfigurations(
                    mapOf(
                        "bjbsybb",
                        mapOf("gkakmokzhjjklff", "kzbzkdvncjabudu", "bizikayuhq", "mouwqlgzrfzeey"),
                        "dgmfpgvmpipasl",
                        mapOf("t", "r"),
                        "pdrhne",
                        mapOf("wutwbdsre", "aqfxss")));
        model = BinaryData.fromObject(model).toObject(ClusterConfigurationsInner.class);
        Assertions.assertEquals("kzbzkdvncjabudu", model.configurations().get("bjbsybb").get("gkakmokzhjjklff"));
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
