// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hdinsight.models.AaddsResourceDetails;
import org.junit.jupiter.api.Assertions;

public final class AaddsResourceDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AaddsResourceDetails model =
            BinaryData
                .fromString(
                    "{\"domainName\":\"gzslesjcbhernnti\",\"initialSyncComplete\":false,\"ldapsEnabled\":false,\"ldapsPublicCertificateInBase64\":\"bquwrbehw\",\"resourceId\":\"o\",\"subnetId\":\"uffkmrqemvvh\",\"tenantId\":\"tdrjfutacoebj\"}")
                .toObject(AaddsResourceDetails.class);
        Assertions.assertEquals("gzslesjcbhernnti", model.domainName());
        Assertions.assertEquals(false, model.initialSyncComplete());
        Assertions.assertEquals(false, model.ldapsEnabled());
        Assertions.assertEquals("bquwrbehw", model.ldapsPublicCertificateInBase64());
        Assertions.assertEquals("o", model.resourceId());
        Assertions.assertEquals("uffkmrqemvvh", model.subnetId());
        Assertions.assertEquals("tdrjfutacoebj", model.tenantId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AaddsResourceDetails model =
            new AaddsResourceDetails()
                .withDomainName("gzslesjcbhernnti")
                .withInitialSyncComplete(false)
                .withLdapsEnabled(false)
                .withLdapsPublicCertificateInBase64("bquwrbehw")
                .withResourceId("o")
                .withSubnetId("uffkmrqemvvh")
                .withTenantId("tdrjfutacoebj");
        model = BinaryData.fromObject(model).toObject(AaddsResourceDetails.class);
        Assertions.assertEquals("gzslesjcbhernnti", model.domainName());
        Assertions.assertEquals(false, model.initialSyncComplete());
        Assertions.assertEquals(false, model.ldapsEnabled());
        Assertions.assertEquals("bquwrbehw", model.ldapsPublicCertificateInBase64());
        Assertions.assertEquals("o", model.resourceId());
        Assertions.assertEquals("uffkmrqemvvh", model.subnetId());
        Assertions.assertEquals("tdrjfutacoebj", model.tenantId());
    }
}
