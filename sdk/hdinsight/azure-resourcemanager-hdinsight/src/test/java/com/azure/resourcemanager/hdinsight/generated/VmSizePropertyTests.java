// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hdinsight.models.VmSizeProperty;
import org.junit.jupiter.api.Assertions;

public final class VmSizePropertyTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VmSizeProperty model = BinaryData.fromString(
            "{\"name\":\"jk\",\"cores\":1622584038,\"dataDiskStorageTier\":\"mouwqlgzrfzeey\",\"label\":\"izikayuhq\",\"maxDataDiskCount\":8650674702908423803,\"memoryInMb\":7267265154767840469,\"supportedByVirtualMachines\":true,\"supportedByWebWorkerRoles\":false,\"virtualMachineResourceDiskSizeInMb\":629489002910902814,\"webWorkerResourceDiskSizeInMb\":8237830073363773936}")
            .toObject(VmSizeProperty.class);
        Assertions.assertEquals("jk", model.name());
        Assertions.assertEquals(1622584038, model.cores());
        Assertions.assertEquals("mouwqlgzrfzeey", model.dataDiskStorageTier());
        Assertions.assertEquals("izikayuhq", model.label());
        Assertions.assertEquals(8650674702908423803L, model.maxDataDiskCount());
        Assertions.assertEquals(7267265154767840469L, model.memoryInMb());
        Assertions.assertTrue(model.supportedByVirtualMachines());
        Assertions.assertFalse(model.supportedByWebWorkerRoles());
        Assertions.assertEquals(629489002910902814L, model.virtualMachineResourceDiskSizeInMb());
        Assertions.assertEquals(8237830073363773936L, model.webWorkerResourceDiskSizeInMb());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VmSizeProperty model = new VmSizeProperty().withName("jk")
            .withCores(1622584038)
            .withDataDiskStorageTier("mouwqlgzrfzeey")
            .withLabel("izikayuhq")
            .withMaxDataDiskCount(8650674702908423803L)
            .withMemoryInMb(7267265154767840469L)
            .withSupportedByVirtualMachines(true)
            .withSupportedByWebWorkerRoles(false)
            .withVirtualMachineResourceDiskSizeInMb(629489002910902814L)
            .withWebWorkerResourceDiskSizeInMb(8237830073363773936L);
        model = BinaryData.fromObject(model).toObject(VmSizeProperty.class);
        Assertions.assertEquals("jk", model.name());
        Assertions.assertEquals(1622584038, model.cores());
        Assertions.assertEquals("mouwqlgzrfzeey", model.dataDiskStorageTier());
        Assertions.assertEquals("izikayuhq", model.label());
        Assertions.assertEquals(8650674702908423803L, model.maxDataDiskCount());
        Assertions.assertEquals(7267265154767840469L, model.memoryInMb());
        Assertions.assertTrue(model.supportedByVirtualMachines());
        Assertions.assertFalse(model.supportedByWebWorkerRoles());
        Assertions.assertEquals(629489002910902814L, model.virtualMachineResourceDiskSizeInMb());
        Assertions.assertEquals(8237830073363773936L, model.webWorkerResourceDiskSizeInMb());
    }
}
