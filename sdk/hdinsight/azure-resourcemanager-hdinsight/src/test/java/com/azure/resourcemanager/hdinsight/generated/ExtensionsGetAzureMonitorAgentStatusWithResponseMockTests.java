// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.hdinsight.HDInsightManager;
import com.azure.resourcemanager.hdinsight.models.AzureMonitorResponse;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ExtensionsGetAzureMonitorAgentStatusWithResponseMockTests {
    @Test
    public void testGetAzureMonitorAgentStatusWithResponse() throws Exception {
        String responseStr
            = "{\"clusterMonitoringEnabled\":false,\"workspaceId\":\"oknssqyzqedikdf\",\"selectedConfigurations\":{\"configurationVersion\":\"iqmrjgeihfqlggw\",\"globalConfigurations\":{\"mgtvlj\":\"zcxmjpbyep\",\"yfqi\":\"rc\",\"ui\":\"gxhnpomyqwcabv\",\"augmrmfjlr\":\"eeyaswl\"},\"tableList\":[{\"name\":\"aukhfkvcisiz\"},{\"name\":\"a\"},{\"name\":\"sx\"},{\"name\":\"uivedwcgyeewxeiq\"}]}}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HDInsightManager manager = HDInsightManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        AzureMonitorResponse response = manager.extensions()
            .getAzureMonitorAgentStatusWithResponse("mhbrbqgvg", "vpbbt", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(false, response.clusterMonitoringEnabled());
        Assertions.assertEquals("oknssqyzqedikdf", response.workspaceId());
        Assertions.assertEquals("iqmrjgeihfqlggw", response.selectedConfigurations().configurationVersion());
        Assertions.assertEquals("zcxmjpbyep", response.selectedConfigurations().globalConfigurations().get("mgtvlj"));
        Assertions.assertEquals("aukhfkvcisiz", response.selectedConfigurations().tableList().get(0).name());
    }
}
