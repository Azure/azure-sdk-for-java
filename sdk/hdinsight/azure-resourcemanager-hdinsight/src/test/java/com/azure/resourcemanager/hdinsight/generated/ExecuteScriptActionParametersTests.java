// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hdinsight.models.ExecuteScriptActionParameters;
import com.azure.resourcemanager.hdinsight.models.RuntimeScriptAction;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ExecuteScriptActionParametersTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ExecuteScriptActionParameters model =
            BinaryData
                .fromString(
                    "{\"scriptActions\":[{\"name\":\"ddjib\",\"uri\":\"bxv\",\"parameters\":\"itvtzeexavo\",\"roles\":[\"fglecdmdqbwp\",\"pqtgsfjac\"],\"applicationName\":\"lhhxudbxvodhtnsi\"},{\"name\":\"ud\",\"uri\":\"z\",\"parameters\":\"es\",\"roles\":[\"dlpagzrcxfail\",\"f\"],\"applicationName\":\"m\"}],\"persistOnSuccess\":true}")
                .toObject(ExecuteScriptActionParameters.class);
        Assertions.assertEquals("ddjib", model.scriptActions().get(0).name());
        Assertions.assertEquals("bxv", model.scriptActions().get(0).uri());
        Assertions.assertEquals("itvtzeexavo", model.scriptActions().get(0).parameters());
        Assertions.assertEquals("fglecdmdqbwp", model.scriptActions().get(0).roles().get(0));
        Assertions.assertEquals(true, model.persistOnSuccess());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ExecuteScriptActionParameters model =
            new ExecuteScriptActionParameters()
                .withScriptActions(
                    Arrays
                        .asList(
                            new RuntimeScriptAction()
                                .withName("ddjib")
                                .withUri("bxv")
                                .withParameters("itvtzeexavo")
                                .withRoles(Arrays.asList("fglecdmdqbwp", "pqtgsfjac")),
                            new RuntimeScriptAction()
                                .withName("ud")
                                .withUri("z")
                                .withParameters("es")
                                .withRoles(Arrays.asList("dlpagzrcxfail", "f"))))
                .withPersistOnSuccess(true);
        model = BinaryData.fromObject(model).toObject(ExecuteScriptActionParameters.class);
        Assertions.assertEquals("ddjib", model.scriptActions().get(0).name());
        Assertions.assertEquals("bxv", model.scriptActions().get(0).uri());
        Assertions.assertEquals("itvtzeexavo", model.scriptActions().get(0).parameters());
        Assertions.assertEquals("fglecdmdqbwp", model.scriptActions().get(0).roles().get(0));
        Assertions.assertEquals(true, model.persistOnSuccess());
    }
}
