// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hdinsight.models.QuotaCapability;
import com.azure.resourcemanager.hdinsight.models.RegionalQuotaCapability;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class QuotaCapabilityTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        QuotaCapability model =
            BinaryData
                .fromString(
                    "{\"coresUsed\":5551569076358580820,\"maxCoresAllowed\":3267053393250008871,\"regionalQuotas\":[{\"regionName\":\"grauwjuetaebur\",\"coresUsed\":6667663712851473070,\"coresAvailable\":308370800789582415}]}")
                .toObject(QuotaCapability.class);
        Assertions.assertEquals(5551569076358580820L, model.coresUsed());
        Assertions.assertEquals(3267053393250008871L, model.maxCoresAllowed());
        Assertions.assertEquals("grauwjuetaebur", model.regionalQuotas().get(0).regionName());
        Assertions.assertEquals(6667663712851473070L, model.regionalQuotas().get(0).coresUsed());
        Assertions.assertEquals(308370800789582415L, model.regionalQuotas().get(0).coresAvailable());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        QuotaCapability model =
            new QuotaCapability()
                .withCoresUsed(5551569076358580820L)
                .withMaxCoresAllowed(3267053393250008871L)
                .withRegionalQuotas(
                    Arrays
                        .asList(
                            new RegionalQuotaCapability()
                                .withRegionName("grauwjuetaebur")
                                .withCoresUsed(6667663712851473070L)
                                .withCoresAvailable(308370800789582415L)));
        model = BinaryData.fromObject(model).toObject(QuotaCapability.class);
        Assertions.assertEquals(5551569076358580820L, model.coresUsed());
        Assertions.assertEquals(3267053393250008871L, model.maxCoresAllowed());
        Assertions.assertEquals("grauwjuetaebur", model.regionalQuotas().get(0).regionName());
        Assertions.assertEquals(6667663712851473070L, model.regionalQuotas().get(0).coresUsed());
        Assertions.assertEquals(308370800789582415L, model.regionalQuotas().get(0).coresAvailable());
    }
}
