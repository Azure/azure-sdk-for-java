// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.hdinsight.HDInsightManager;
import com.azure.resourcemanager.hdinsight.models.UsagesListResult;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class LocationsListUsagesWithResponseMockTests {
    @Test
    public void testListUsagesWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"unit\":\"lhkgmnsghp\",\"currentValue\":5615654712753691017,\"limit\":2704306276443969386,\"name\":{\"value\":\"jkhvyomacluzvxnq\",\"localizedValue\":\"rpqpd\"}}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HDInsightManager manager = HDInsightManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        UsagesListResult response
            = manager.locations().listUsagesWithResponse("pnyghs", com.azure.core.util.Context.NONE).getValue();

        Assertions.assertEquals("lhkgmnsghp", response.value().get(0).unit());
        Assertions.assertEquals(5615654712753691017L, response.value().get(0).currentValue());
        Assertions.assertEquals(2704306276443969386L, response.value().get(0).limit());
    }
}
