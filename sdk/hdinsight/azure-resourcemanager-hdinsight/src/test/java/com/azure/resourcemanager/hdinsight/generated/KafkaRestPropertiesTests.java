// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hdinsight.models.ClientGroupInfo;
import com.azure.resourcemanager.hdinsight.models.KafkaRestProperties;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class KafkaRestPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        KafkaRestProperties model =
            BinaryData
                .fromString(
                    "{\"clientGroupInfo\":{\"groupName\":\"sbj\",\"groupId\":\"zq\"},\"configurationOverride\":{\"jidsuyonobglaoc\":\"ywpmueefjzwfqkq\",\"udxytlmoyrx\":\"xtccmg\",\"qj\":\"wfudwpzntxhdzhl\",\"bkyvp\":\"hckfrlhrx\"}}")
                .toObject(KafkaRestProperties.class);
        Assertions.assertEquals("sbj", model.clientGroupInfo().groupName());
        Assertions.assertEquals("zq", model.clientGroupInfo().groupId());
        Assertions.assertEquals("ywpmueefjzwfqkq", model.configurationOverride().get("jidsuyonobglaoc"));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        KafkaRestProperties model =
            new KafkaRestProperties()
                .withClientGroupInfo(new ClientGroupInfo().withGroupName("sbj").withGroupId("zq"))
                .withConfigurationOverride(
                    mapOf(
                        "jidsuyonobglaoc",
                        "ywpmueefjzwfqkq",
                        "udxytlmoyrx",
                        "xtccmg",
                        "qj",
                        "wfudwpzntxhdzhl",
                        "bkyvp",
                        "hckfrlhrx"));
        model = BinaryData.fromObject(model).toObject(KafkaRestProperties.class);
        Assertions.assertEquals("sbj", model.clientGroupInfo().groupName());
        Assertions.assertEquals("zq", model.clientGroupInfo().groupId());
        Assertions.assertEquals("ywpmueefjzwfqkq", model.configurationOverride().get("jidsuyonobglaoc"));
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
