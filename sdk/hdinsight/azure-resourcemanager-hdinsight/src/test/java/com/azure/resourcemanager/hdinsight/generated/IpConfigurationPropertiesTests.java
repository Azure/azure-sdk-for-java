// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hdinsight.fluent.models.IpConfigurationProperties;
import com.azure.resourcemanager.hdinsight.models.PrivateIpAllocationMethod;
import com.azure.resourcemanager.hdinsight.models.ResourceId;
import org.junit.jupiter.api.Assertions;

public final class IpConfigurationPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IpConfigurationProperties model =
            BinaryData
                .fromString(
                    "{\"provisioningState\":\"Deleting\",\"primary\":false,\"privateIPAddress\":\"yq\",\"privateIPAllocationMethod\":\"dynamic\",\"subnet\":{\"id\":\"j\"}}")
                .toObject(IpConfigurationProperties.class);
        Assertions.assertEquals(false, model.primary());
        Assertions.assertEquals("yq", model.privateIpAddress());
        Assertions.assertEquals(PrivateIpAllocationMethod.DYNAMIC, model.privateIpAllocationMethod());
        Assertions.assertEquals("j", model.subnet().id());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IpConfigurationProperties model =
            new IpConfigurationProperties()
                .withPrimary(false)
                .withPrivateIpAddress("yq")
                .withPrivateIpAllocationMethod(PrivateIpAllocationMethod.DYNAMIC)
                .withSubnet(new ResourceId().withId("j"));
        model = BinaryData.fromObject(model).toObject(IpConfigurationProperties.class);
        Assertions.assertEquals(false, model.primary());
        Assertions.assertEquals("yq", model.privateIpAddress());
        Assertions.assertEquals(PrivateIpAllocationMethod.DYNAMIC, model.privateIpAllocationMethod());
        Assertions.assertEquals("j", model.subnet().id());
    }
}
