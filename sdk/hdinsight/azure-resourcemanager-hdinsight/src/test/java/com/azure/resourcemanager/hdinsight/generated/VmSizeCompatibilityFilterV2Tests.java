// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hdinsight.models.FilterMode;
import com.azure.resourcemanager.hdinsight.models.OSType;
import com.azure.resourcemanager.hdinsight.models.VmSizeCompatibilityFilterV2;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class VmSizeCompatibilityFilterV2Tests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VmSizeCompatibilityFilterV2 model = BinaryData.fromString(
            "{\"filterMode\":\"Exclude\",\"regions\":[\"wzxltjc\",\"nhltiugcxn\",\"vvwxqi\"],\"clusterFlavors\":[\"unyowxwl\",\"djrkvfgbvfvpd\",\"odacizs\",\"q\"],\"nodeTypes\":[\"rribd\",\"ibqipqkg\",\"vxndz\"],\"clusterVersions\":[\"refajpjorwkqnyh\",\"b\",\"j\"],\"osType\":[\"Windows\",\"Linux\",\"Windows\",\"Windows\"],\"vmSizes\":[\"ab\",\"bsystawfsdjpvk\",\"p\"],\"espApplied\":\"xbkzbzkdvncj\",\"computeIsolationSupported\":\"udurgkakmokz\"}")
            .toObject(VmSizeCompatibilityFilterV2.class);
        Assertions.assertEquals(FilterMode.EXCLUDE, model.filterMode());
        Assertions.assertEquals("wzxltjc", model.regions().get(0));
        Assertions.assertEquals("unyowxwl", model.clusterFlavors().get(0));
        Assertions.assertEquals("rribd", model.nodeTypes().get(0));
        Assertions.assertEquals("refajpjorwkqnyh", model.clusterVersions().get(0));
        Assertions.assertEquals(OSType.WINDOWS, model.osType().get(0));
        Assertions.assertEquals("ab", model.vmSizes().get(0));
        Assertions.assertEquals("xbkzbzkdvncj", model.espApplied());
        Assertions.assertEquals("udurgkakmokz", model.computeIsolationSupported());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VmSizeCompatibilityFilterV2 model = new VmSizeCompatibilityFilterV2().withFilterMode(FilterMode.EXCLUDE)
            .withRegions(Arrays.asList("wzxltjc", "nhltiugcxn", "vvwxqi"))
            .withClusterFlavors(Arrays.asList("unyowxwl", "djrkvfgbvfvpd", "odacizs", "q"))
            .withNodeTypes(Arrays.asList("rribd", "ibqipqkg", "vxndz"))
            .withClusterVersions(Arrays.asList("refajpjorwkqnyh", "b", "j"))
            .withOsType(Arrays.asList(OSType.WINDOWS, OSType.LINUX, OSType.WINDOWS, OSType.WINDOWS))
            .withVmSizes(Arrays.asList("ab", "bsystawfsdjpvk", "p"))
            .withEspApplied("xbkzbzkdvncj")
            .withComputeIsolationSupported("udurgkakmokz");
        model = BinaryData.fromObject(model).toObject(VmSizeCompatibilityFilterV2.class);
        Assertions.assertEquals(FilterMode.EXCLUDE, model.filterMode());
        Assertions.assertEquals("wzxltjc", model.regions().get(0));
        Assertions.assertEquals("unyowxwl", model.clusterFlavors().get(0));
        Assertions.assertEquals("rribd", model.nodeTypes().get(0));
        Assertions.assertEquals("refajpjorwkqnyh", model.clusterVersions().get(0));
        Assertions.assertEquals(OSType.WINDOWS, model.osType().get(0));
        Assertions.assertEquals("ab", model.vmSizes().get(0));
        Assertions.assertEquals("xbkzbzkdvncj", model.espApplied());
        Assertions.assertEquals("udurgkakmokz", model.computeIsolationSupported());
    }
}
