// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.defendereasm.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.defendereasm.fluent.models.TaskResourceProperties;
import org.junit.jupiter.api.Assertions;

public final class TaskResourcePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TaskResourceProperties model = BinaryData.fromString(
            "{\"startedAt\":\"qrolfpf\",\"completedAt\":\"algbquxigjyjg\",\"lastPolledAt\":\"aoyfhrtxilnerkuj\",\"state\":\"vlejuvfqa\",\"phase\":\"lyxwjkcprbnwbx\",\"reason\":\"vtb\",\"metadata\":\"dataysszdnrujqguh\",\"provisioningState\":\"InstallingApplication\"}")
            .toObject(TaskResourceProperties.class);
        Assertions.assertEquals("qrolfpf", model.startedAt());
        Assertions.assertEquals("algbquxigjyjg", model.completedAt());
        Assertions.assertEquals("aoyfhrtxilnerkuj", model.lastPolledAt());
        Assertions.assertEquals("vlejuvfqa", model.state());
        Assertions.assertEquals("lyxwjkcprbnwbx", model.phase());
        Assertions.assertEquals("vtb", model.reason());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TaskResourceProperties model = new TaskResourceProperties().withStartedAt("qrolfpf")
            .withCompletedAt("algbquxigjyjg")
            .withLastPolledAt("aoyfhrtxilnerkuj")
            .withState("vlejuvfqa")
            .withPhase("lyxwjkcprbnwbx")
            .withReason("vtb")
            .withMetadata("dataysszdnrujqguh");
        model = BinaryData.fromObject(model).toObject(TaskResourceProperties.class);
        Assertions.assertEquals("qrolfpf", model.startedAt());
        Assertions.assertEquals("algbquxigjyjg", model.completedAt());
        Assertions.assertEquals("aoyfhrtxilnerkuj", model.lastPolledAt());
        Assertions.assertEquals("vlejuvfqa", model.state());
        Assertions.assertEquals("lyxwjkcprbnwbx", model.phase());
        Assertions.assertEquals("vtb", model.reason());
    }
}
