// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.defendereasm.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.defendereasm.fluent.models.TaskResourceInner;
import org.junit.jupiter.api.Assertions;

public final class TaskResourceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TaskResourceInner model =
            BinaryData
                .fromString(
                    "{\"properties\":{\"startedAt\":\"rxybz\",\"completedAt\":\"e\",\"lastPolledAt\":\"ytb\",\"state\":\"qfou\",\"phase\":\"mmnkzsmodmgl\",\"reason\":\"gpbkwtmut\",\"metadata\":\"dataqktapspwgcuert\",\"provisioningState\":\"DeletingArtifacts\"},\"id\":\"dosvqwhbmdgbbjf\",\"name\":\"dgmb\",\"type\":\"bexppb\"}")
                .toObject(TaskResourceInner.class);
        Assertions.assertEquals("rxybz", model.startedAt());
        Assertions.assertEquals("e", model.completedAt());
        Assertions.assertEquals("ytb", model.lastPolledAt());
        Assertions.assertEquals("qfou", model.state());
        Assertions.assertEquals("mmnkzsmodmgl", model.phase());
        Assertions.assertEquals("gpbkwtmut", model.reason());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TaskResourceInner model =
            new TaskResourceInner()
                .withStartedAt("rxybz")
                .withCompletedAt("e")
                .withLastPolledAt("ytb")
                .withState("qfou")
                .withPhase("mmnkzsmodmgl")
                .withReason("gpbkwtmut")
                .withMetadata("dataqktapspwgcuert");
        model = BinaryData.fromObject(model).toObject(TaskResourceInner.class);
        Assertions.assertEquals("rxybz", model.startedAt());
        Assertions.assertEquals("e", model.completedAt());
        Assertions.assertEquals("ytb", model.lastPolledAt());
        Assertions.assertEquals("qfou", model.state());
        Assertions.assertEquals("mmnkzsmodmgl", model.phase());
        Assertions.assertEquals("gpbkwtmut", model.reason());
    }
}
