// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.defendereasm.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.defendereasm.fluent.models.TaskResourceInner;

/** An instance of this class provides access to all the operations defined in TasksClient. */
public interface TasksClient {
    /**
     * Returns a task in the given workspace.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the Workspace.
     * @param taskId The id of the Task.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return task details along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<TaskResourceInner> getByWorkspaceWithResponse(
        String resourceGroupName, String workspaceName, String taskId, Context context);

    /**
     * Returns a task in the given workspace.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the Workspace.
     * @param taskId The id of the Task.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return task details.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    TaskResourceInner getByWorkspace(String resourceGroupName, String workspaceName, String taskId);
}
