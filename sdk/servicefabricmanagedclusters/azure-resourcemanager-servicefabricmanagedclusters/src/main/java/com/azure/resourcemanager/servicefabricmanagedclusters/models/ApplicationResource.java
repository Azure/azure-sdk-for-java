// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicefabricmanagedclusters.models;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.servicefabricmanagedclusters.fluent.models.ApplicationResourceInner;
import java.util.List;
import java.util.Map;

/**
 * An immutable client-side representation of ApplicationResource.
 */
public interface ApplicationResource {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the identity property: Describes the managed identities for an Azure resource.
     * 
     * @return the identity value.
     */
    ManagedIdentity identity();

    /**
     * Gets the location property: Resource location depends on the parent resource.
     * 
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Azure resource tags.
     * 
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the systemData property: Metadata pertaining to creation and last modification of the resource.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the provisioningState property: The current deployment or provisioning state, which only appears in the
     * response.
     * 
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * Gets the version property: The version of the application type as defined in the application manifest.
     * This name must be the full Arm Resource ID for the referenced application type version.
     * 
     * @return the version value.
     */
    String version();

    /**
     * Gets the parameters property: List of application parameters with overridden values from their default values
     * specified in the application manifest.
     * 
     * @return the parameters value.
     */
    Map<String, String> parameters();

    /**
     * Gets the upgradePolicy property: Describes the policy for a monitored application upgrade.
     * 
     * @return the upgradePolicy value.
     */
    ApplicationUpgradePolicy upgradePolicy();

    /**
     * Gets the managedIdentities property: List of user assigned identities for the application, each mapped to a
     * friendly name.
     * 
     * @return the managedIdentities value.
     */
    List<ApplicationUserAssignedIdentity> managedIdentities();

    /**
     * Gets the region of the resource.
     * 
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     * 
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.servicefabricmanagedclusters.fluent.models.ApplicationResourceInner
     * object.
     * 
     * @return the inner object.
     */
    ApplicationResourceInner innerModel();

    /**
     * The entirety of the ApplicationResource definition.
     */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }

    /**
     * The ApplicationResource definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the ApplicationResource definition.
         */
        interface Blank extends WithParentResource {
        }

        /**
         * The stage of the ApplicationResource definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, clusterName.
             * 
             * @param resourceGroupName The name of the resource group.
             * @param clusterName The name of the cluster resource.
             * @return the next definition stage.
             */
            WithCreate withExistingManagedcluster(String resourceGroupName, String clusterName);
        }

        /**
         * The stage of the ApplicationResource definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithLocation, DefinitionStages.WithTags,
            DefinitionStages.WithIdentity, DefinitionStages.WithVersion, DefinitionStages.WithParameters,
            DefinitionStages.WithUpgradePolicy, DefinitionStages.WithManagedIdentities {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            ApplicationResource create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            ApplicationResource create(Context context);
        }

        /**
         * The stage of the ApplicationResource definition allowing to specify location.
         */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             * 
             * @param location Resource location depends on the parent resource.
             * @return the next definition stage.
             */
            WithCreate withRegion(Region location);

            /**
             * Specifies the region for the resource.
             * 
             * @param location Resource location depends on the parent resource.
             * @return the next definition stage.
             */
            WithCreate withRegion(String location);
        }

        /**
         * The stage of the ApplicationResource definition allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Azure resource tags..
             * 
             * @param tags Azure resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the ApplicationResource definition allowing to specify identity.
         */
        interface WithIdentity {
            /**
             * Specifies the identity property: Describes the managed identities for an Azure resource..
             * 
             * @param identity Describes the managed identities for an Azure resource.
             * @return the next definition stage.
             */
            WithCreate withIdentity(ManagedIdentity identity);
        }

        /**
         * The stage of the ApplicationResource definition allowing to specify version.
         */
        interface WithVersion {
            /**
             * Specifies the version property: The version of the application type as defined in the application
             * manifest.
             * This name must be the full Arm Resource ID for the referenced application type version.
             * .
             * 
             * @param version The version of the application type as defined in the application manifest.
             * This name must be the full Arm Resource ID for the referenced application type version.
             * @return the next definition stage.
             */
            WithCreate withVersion(String version);
        }

        /**
         * The stage of the ApplicationResource definition allowing to specify parameters.
         */
        interface WithParameters {
            /**
             * Specifies the parameters property: List of application parameters with overridden values from their
             * default values specified in the application manifest..
             * 
             * @param parameters List of application parameters with overridden values from their default values
             * specified in the application manifest.
             * @return the next definition stage.
             */
            WithCreate withParameters(Map<String, String> parameters);
        }

        /**
         * The stage of the ApplicationResource definition allowing to specify upgradePolicy.
         */
        interface WithUpgradePolicy {
            /**
             * Specifies the upgradePolicy property: Describes the policy for a monitored application upgrade..
             * 
             * @param upgradePolicy Describes the policy for a monitored application upgrade.
             * @return the next definition stage.
             */
            WithCreate withUpgradePolicy(ApplicationUpgradePolicy upgradePolicy);
        }

        /**
         * The stage of the ApplicationResource definition allowing to specify managedIdentities.
         */
        interface WithManagedIdentities {
            /**
             * Specifies the managedIdentities property: List of user assigned identities for the application, each
             * mapped to a friendly name..
             * 
             * @param managedIdentities List of user assigned identities for the application, each mapped to a friendly
             * name.
             * @return the next definition stage.
             */
            WithCreate withManagedIdentities(List<ApplicationUserAssignedIdentity> managedIdentities);
        }
    }

    /**
     * Begins update for the ApplicationResource resource.
     * 
     * @return the stage of resource update.
     */
    ApplicationResource.Update update();

    /**
     * The template for ApplicationResource update.
     */
    interface Update extends UpdateStages.WithTags {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        ApplicationResource apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        ApplicationResource apply(Context context);
    }

    /**
     * The ApplicationResource update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the ApplicationResource update allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Application update parameters.
             * 
             * @param tags Application update parameters.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    ApplicationResource refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    ApplicationResource refresh(Context context);
}
