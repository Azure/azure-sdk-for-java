// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.servicefabricmanagedclusters.models;

import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * Managed data disk type. IOPS and throughput are given by the disk size, to see more information go to
 * https://docs.microsoft.com/en-us/azure/virtual-machines/disks-types.
 */
public final class DiskType extends ExpandableStringEnum<DiskType> {
    /**
     * Standard HDD locally redundant storage. Best for backup, non-critical, and infrequent access.
     */
    public static final DiskType STANDARD_LRS = fromString("Standard_LRS");

    /**
     * Standard SSD locally redundant storage. Best for web servers, lightly used enterprise applications and dev/test.
     */
    public static final DiskType STANDARD_SSD_LRS = fromString("StandardSSD_LRS");

    /**
     * Premium SSD locally redundant storage. Best for production and performance sensitive workloads.
     */
    public static final DiskType PREMIUM_LRS = fromString("Premium_LRS");

    /**
     * Premium SSD V2 locally redundant storage. Best for production and performance sensitive workloads that
     * consistently require low latency and high IOPS and throughput.
     */
    public static final DiskType PREMIUM_V2_LRS = fromString("PremiumV2_LRS");

    /**
     * Standard SSD zone redundant storage. Best for web servers, lightly used enterprise applications and dev/test that
     * need storage resiliency against zone failures.
     */
    public static final DiskType STANDARD_SSD_ZRS = fromString("StandardSSD_ZRS");

    /**
     * Premium SSD zone redundant storage. Best for production workloads that need storage resiliency against zone
     * failures.
     */
    public static final DiskType PREMIUM_ZRS = fromString("Premium_ZRS");

    /**
     * Creates a new instance of DiskType value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public DiskType() {
    }

    /**
     * Creates or finds a DiskType from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding DiskType.
     */
    public static DiskType fromString(String name) {
        return fromString(name, DiskType.class);
    }

    /**
     * Gets known DiskType values.
     * 
     * @return known DiskType values.
     */
    public static Collection<DiskType> values() {
        return values(DiskType.class);
    }
}
