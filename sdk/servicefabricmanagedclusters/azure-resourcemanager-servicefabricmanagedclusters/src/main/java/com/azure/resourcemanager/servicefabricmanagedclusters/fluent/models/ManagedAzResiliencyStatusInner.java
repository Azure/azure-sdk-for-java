// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicefabricmanagedclusters.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.ResourceAzStatus;
import java.io.IOException;
import java.util.List;

/**
 * Describes the result of the request to list Managed VM Sizes for Service Fabric Managed Clusters.
 */
@Fluent
public final class ManagedAzResiliencyStatusInner implements JsonSerializable<ManagedAzResiliencyStatusInner> {
    /*
     * List of Managed VM Sizes for Service Fabric Managed Clusters.
     */
    private List<ResourceAzStatus> baseResourceStatus;

    /*
     * URL to get the next set of Managed VM Sizes if there are any.
     */
    private Boolean isClusterZoneResilient;

    /**
     * Creates an instance of ManagedAzResiliencyStatusInner class.
     */
    public ManagedAzResiliencyStatusInner() {
    }

    /**
     * Get the baseResourceStatus property: List of Managed VM Sizes for Service Fabric Managed Clusters.
     * 
     * @return the baseResourceStatus value.
     */
    public List<ResourceAzStatus> baseResourceStatus() {
        return this.baseResourceStatus;
    }

    /**
     * Set the baseResourceStatus property: List of Managed VM Sizes for Service Fabric Managed Clusters.
     * 
     * @param baseResourceStatus the baseResourceStatus value to set.
     * @return the ManagedAzResiliencyStatusInner object itself.
     */
    public ManagedAzResiliencyStatusInner withBaseResourceStatus(List<ResourceAzStatus> baseResourceStatus) {
        this.baseResourceStatus = baseResourceStatus;
        return this;
    }

    /**
     * Get the isClusterZoneResilient property: URL to get the next set of Managed VM Sizes if there are any.
     * 
     * @return the isClusterZoneResilient value.
     */
    public Boolean isClusterZoneResilient() {
        return this.isClusterZoneResilient;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (baseResourceStatus() != null) {
            baseResourceStatus().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("baseResourceStatus", this.baseResourceStatus,
            (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ManagedAzResiliencyStatusInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ManagedAzResiliencyStatusInner if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ManagedAzResiliencyStatusInner.
     */
    public static ManagedAzResiliencyStatusInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ManagedAzResiliencyStatusInner deserializedManagedAzResiliencyStatusInner
                = new ManagedAzResiliencyStatusInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("baseResourceStatus".equals(fieldName)) {
                    List<ResourceAzStatus> baseResourceStatus
                        = reader.readArray(reader1 -> ResourceAzStatus.fromJson(reader1));
                    deserializedManagedAzResiliencyStatusInner.baseResourceStatus = baseResourceStatus;
                } else if ("isClusterZoneResilient".equals(fieldName)) {
                    deserializedManagedAzResiliencyStatusInner.isClusterZoneResilient
                        = reader.getNullable(JsonReader::getBoolean);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedManagedAzResiliencyStatusInner;
        });
    }
}
