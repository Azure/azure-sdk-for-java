// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.servicefabricmanagedclusters.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.servicefabricmanagedclusters.fluent.NodeTypeSkusClient;
import com.azure.resourcemanager.servicefabricmanagedclusters.fluent.models.NodeTypeListSkuResultInner;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.NodeTypeListSkuResult;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.NodeTypeSkus;

public final class NodeTypeSkusImpl implements NodeTypeSkus {
    private static final ClientLogger LOGGER = new ClientLogger(NodeTypeSkusImpl.class);

    private final NodeTypeSkusClient innerClient;

    private final com.azure.resourcemanager.servicefabricmanagedclusters.ServiceFabricManagedClustersManager serviceManager;

    public NodeTypeSkusImpl(NodeTypeSkusClient innerClient,
        com.azure.resourcemanager.servicefabricmanagedclusters.ServiceFabricManagedClustersManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<NodeTypeListSkuResult> listWithResponse(String resourceGroupName, String clusterName,
        String nodeTypeName, Context context) {
        Response<NodeTypeListSkuResultInner> inner
            = this.serviceClient().listWithResponse(resourceGroupName, clusterName, nodeTypeName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new NodeTypeListSkuResultImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public NodeTypeListSkuResult list(String resourceGroupName, String clusterName, String nodeTypeName) {
        NodeTypeListSkuResultInner inner = this.serviceClient().list(resourceGroupName, clusterName, nodeTypeName);
        if (inner != null) {
            return new NodeTypeListSkuResultImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private NodeTypeSkusClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.servicefabricmanagedclusters.ServiceFabricManagedClustersManager manager() {
        return this.serviceManager;
    }
}
