// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.servicefabricmanagedclusters.models;

import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * The current state of the cluster.
 */
public final class ClusterState extends ExpandableStringEnum<ClusterState> {
    /**
     * Indicates that the cluster resource is created and the resource provider is waiting for Service Fabric VM
     * extension to boot up and report to it.
     */
    public static final ClusterState WAITING_FOR_NODES = fromString("WaitingForNodes");

    /**
     * Indicates that the Service Fabric runtime is being installed on the VMs. Cluster resource will be in this state
     * until the cluster boots up and system services are up.
     */
    public static final ClusterState DEPLOYING = fromString("Deploying");

    /**
     * Indicates that the cluster is upgrading to establishes the cluster version. This upgrade is automatically
     * initiated when the cluster boots up for the first time.
     */
    public static final ClusterState BASELINE_UPGRADE = fromString("BaselineUpgrade");

    /**
     * Indicates that the cluster is being upgraded with the user provided configuration.
     */
    public static final ClusterState UPGRADING = fromString("Upgrading");

    /**
     * Indicates that the last upgrade for the cluster has failed.
     */
    public static final ClusterState UPGRADE_FAILED = fromString("UpgradeFailed");

    /**
     * Indicates that the cluster is in a stable state.
     */
    public static final ClusterState READY = fromString("Ready");

    /**
     * Creates a new instance of ClusterState value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public ClusterState() {
    }

    /**
     * Creates or finds a ClusterState from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding ClusterState.
     */
    public static ClusterState fromString(String name) {
        return fromString(name, ClusterState.class);
    }

    /**
     * Gets known ClusterState values.
     * 
     * @return known ClusterState values.
     */
    public static Collection<ClusterState> values() {
        return values(ClusterState.class);
    }
}
