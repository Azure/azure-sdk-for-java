// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicefabricmanagedclusters.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.servicefabricmanagedclusters.fluent.models.ManagedClusterInner;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.ManagedClusterUpdateParameters;

/**
 * An instance of this class provides access to all the operations defined in ManagedClustersClient.
 */
public interface ManagedClustersClient {
    /**
     * Gets the list of Service Fabric cluster resources created in the specified resource group.
     * 
     * Gets all Service Fabric cluster resources created or in the process of being created in the resource group.
     * 
     * @param resourceGroupName The name of the resource group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all Service Fabric cluster resources created or in the process of being created in the resource group as
     * paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ManagedClusterInner> listByResourceGroup(String resourceGroupName);

    /**
     * Gets the list of Service Fabric cluster resources created in the specified resource group.
     * 
     * Gets all Service Fabric cluster resources created or in the process of being created in the resource group.
     * 
     * @param resourceGroupName The name of the resource group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all Service Fabric cluster resources created or in the process of being created in the resource group as
     * paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ManagedClusterInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Gets the list of Service Fabric cluster resources created in the specified subscription.
     * 
     * Gets all Service Fabric cluster resources created or in the process of being created in the subscription.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all Service Fabric cluster resources created or in the process of being created in the subscription as
     * paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ManagedClusterInner> list();

    /**
     * Gets the list of Service Fabric cluster resources created in the specified subscription.
     * 
     * Gets all Service Fabric cluster resources created or in the process of being created in the subscription.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all Service Fabric cluster resources created or in the process of being created in the subscription as
     * paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ManagedClusterInner> list(Context context);

    /**
     * Gets a Service Fabric managed cluster resource.
     * 
     * Get a Service Fabric managed cluster resource created or in the process of being created in the specified
     * resource group.
     * 
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Service Fabric managed cluster resource created or in the process of being created in the specified
     * resource group along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ManagedClusterInner> getByResourceGroupWithResponse(String resourceGroupName, String clusterName,
        Context context);

    /**
     * Gets a Service Fabric managed cluster resource.
     * 
     * Get a Service Fabric managed cluster resource created or in the process of being created in the specified
     * resource group.
     * 
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Service Fabric managed cluster resource created or in the process of being created in the specified
     * resource group.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ManagedClusterInner getByResourceGroup(String resourceGroupName, String clusterName);

    /**
     * Creates or updates a Service Fabric managed cluster resource.
     * 
     * Create or update a Service Fabric managed cluster resource with the specified name.
     * 
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster resource.
     * @param parameters The cluster resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the managed cluster resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ManagedClusterInner>, ManagedClusterInner> beginCreateOrUpdate(String resourceGroupName,
        String clusterName, ManagedClusterInner parameters);

    /**
     * Creates or updates a Service Fabric managed cluster resource.
     * 
     * Create or update a Service Fabric managed cluster resource with the specified name.
     * 
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster resource.
     * @param parameters The cluster resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the managed cluster resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ManagedClusterInner>, ManagedClusterInner> beginCreateOrUpdate(String resourceGroupName,
        String clusterName, ManagedClusterInner parameters, Context context);

    /**
     * Creates or updates a Service Fabric managed cluster resource.
     * 
     * Create or update a Service Fabric managed cluster resource with the specified name.
     * 
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster resource.
     * @param parameters The cluster resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the managed cluster resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ManagedClusterInner createOrUpdate(String resourceGroupName, String clusterName, ManagedClusterInner parameters);

    /**
     * Creates or updates a Service Fabric managed cluster resource.
     * 
     * Create or update a Service Fabric managed cluster resource with the specified name.
     * 
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster resource.
     * @param parameters The cluster resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the managed cluster resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ManagedClusterInner createOrUpdate(String resourceGroupName, String clusterName, ManagedClusterInner parameters,
        Context context);

    /**
     * Updates the tags of of a Service Fabric managed cluster resource.
     * 
     * Update the tags of of a Service Fabric managed cluster resource with the specified name.
     * 
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster resource.
     * @param parameters The managed cluster resource updated tags.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the managed cluster resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ManagedClusterInner> updateWithResponse(String resourceGroupName, String clusterName,
        ManagedClusterUpdateParameters parameters, Context context);

    /**
     * Updates the tags of of a Service Fabric managed cluster resource.
     * 
     * Update the tags of of a Service Fabric managed cluster resource with the specified name.
     * 
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster resource.
     * @param parameters The managed cluster resource updated tags.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the managed cluster resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ManagedClusterInner update(String resourceGroupName, String clusterName, ManagedClusterUpdateParameters parameters);

    /**
     * Deletes a Service Fabric managed cluster resource.
     * 
     * Delete a Service Fabric managed cluster resource with the specified name.
     * 
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String clusterName);

    /**
     * Deletes a Service Fabric managed cluster resource.
     * 
     * Delete a Service Fabric managed cluster resource with the specified name.
     * 
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String clusterName, Context context);

    /**
     * Deletes a Service Fabric managed cluster resource.
     * 
     * Delete a Service Fabric managed cluster resource with the specified name.
     * 
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String clusterName);

    /**
     * Deletes a Service Fabric managed cluster resource.
     * 
     * Delete a Service Fabric managed cluster resource with the specified name.
     * 
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String clusterName, Context context);
}
