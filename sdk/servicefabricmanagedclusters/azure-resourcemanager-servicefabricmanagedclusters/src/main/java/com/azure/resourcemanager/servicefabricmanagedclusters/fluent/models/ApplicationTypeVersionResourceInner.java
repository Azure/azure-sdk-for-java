// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicefabricmanagedclusters.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.Map;

/**
 * An application type version resource for the specified application type name resource.
 */
@Fluent
public final class ApplicationTypeVersionResourceInner extends ProxyResource {
    /*
     * The properties of the application type version resource.
     */
    private ApplicationTypeVersionResourceProperties innerProperties;

    /*
     * Resource location depends on the parent resource.
     */
    private String location;

    /*
     * Azure resource tags.
     */
    private Map<String, String> tags;

    /*
     * Metadata pertaining to creation and last modification of the resource.
     */
    private SystemData systemData;

    /*
     * The type of the resource.
     */
    private String type;

    /*
     * The name of the resource.
     */
    private String name;

    /*
     * Fully qualified resource Id for the resource.
     */
    private String id;

    /**
     * Creates an instance of ApplicationTypeVersionResourceInner class.
     */
    public ApplicationTypeVersionResourceInner() {
    }

    /**
     * Get the innerProperties property: The properties of the application type version resource.
     * 
     * @return the innerProperties value.
     */
    private ApplicationTypeVersionResourceProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the location property: Resource location depends on the parent resource.
     * 
     * @return the location value.
     */
    public String location() {
        return this.location;
    }

    /**
     * Set the location property: Resource location depends on the parent resource.
     * 
     * @param location the location value to set.
     * @return the ApplicationTypeVersionResourceInner object itself.
     */
    public ApplicationTypeVersionResourceInner withLocation(String location) {
        this.location = location;
        return this;
    }

    /**
     * Get the tags property: Azure resource tags.
     * 
     * @return the tags value.
     */
    public Map<String, String> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: Azure resource tags.
     * 
     * @param tags the tags value to set.
     * @return the ApplicationTypeVersionResourceInner object itself.
     */
    public ApplicationTypeVersionResourceInner withTags(Map<String, String> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get the systemData property: Metadata pertaining to creation and last modification of the resource.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the type property: The type of the resource.
     * 
     * @return the type value.
     */
    @Override
    public String type() {
        return this.type;
    }

    /**
     * Get the name property: The name of the resource.
     * 
     * @return the name value.
     */
    @Override
    public String name() {
        return this.name;
    }

    /**
     * Get the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    @Override
    public String id() {
        return this.id;
    }

    /**
     * Get the provisioningState property: The current deployment or provisioning state, which only appears in the
     * response.
     * 
     * @return the provisioningState value.
     */
    public String provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Get the appPackageUrl property: The URL to the application package.
     * 
     * @return the appPackageUrl value.
     */
    public String appPackageUrl() {
        return this.innerProperties() == null ? null : this.innerProperties().appPackageUrl();
    }

    /**
     * Set the appPackageUrl property: The URL to the application package.
     * 
     * @param appPackageUrl the appPackageUrl value to set.
     * @return the ApplicationTypeVersionResourceInner object itself.
     */
    public ApplicationTypeVersionResourceInner withAppPackageUrl(String appPackageUrl) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ApplicationTypeVersionResourceProperties();
        }
        this.innerProperties().withAppPackageUrl(appPackageUrl);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("properties", this.innerProperties);
        jsonWriter.writeStringField("location", this.location);
        jsonWriter.writeMapField("tags", this.tags, (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ApplicationTypeVersionResourceInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ApplicationTypeVersionResourceInner if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the ApplicationTypeVersionResourceInner.
     */
    public static ApplicationTypeVersionResourceInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ApplicationTypeVersionResourceInner deserializedApplicationTypeVersionResourceInner
                = new ApplicationTypeVersionResourceInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedApplicationTypeVersionResourceInner.id = reader.getString();
                } else if ("name".equals(fieldName)) {
                    deserializedApplicationTypeVersionResourceInner.name = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedApplicationTypeVersionResourceInner.type = reader.getString();
                } else if ("properties".equals(fieldName)) {
                    deserializedApplicationTypeVersionResourceInner.innerProperties
                        = ApplicationTypeVersionResourceProperties.fromJson(reader);
                } else if ("location".equals(fieldName)) {
                    deserializedApplicationTypeVersionResourceInner.location = reader.getString();
                } else if ("tags".equals(fieldName)) {
                    Map<String, String> tags = reader.readMap(reader1 -> reader1.getString());
                    deserializedApplicationTypeVersionResourceInner.tags = tags;
                } else if ("systemData".equals(fieldName)) {
                    deserializedApplicationTypeVersionResourceInner.systemData = SystemData.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedApplicationTypeVersionResourceInner;
        });
    }
}
