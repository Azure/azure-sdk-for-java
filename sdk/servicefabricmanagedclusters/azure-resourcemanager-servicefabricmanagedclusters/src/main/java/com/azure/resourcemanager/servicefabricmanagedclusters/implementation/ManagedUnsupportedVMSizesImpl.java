// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicefabricmanagedclusters.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.servicefabricmanagedclusters.fluent.ManagedUnsupportedVMSizesClient;
import com.azure.resourcemanager.servicefabricmanagedclusters.fluent.models.ManagedVMSizeInner;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.ManagedUnsupportedVMSizes;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.ManagedVMSize;

public final class ManagedUnsupportedVMSizesImpl implements ManagedUnsupportedVMSizes {
    private static final ClientLogger LOGGER = new ClientLogger(ManagedUnsupportedVMSizesImpl.class);

    private final ManagedUnsupportedVMSizesClient innerClient;

    private final com.azure.resourcemanager.servicefabricmanagedclusters.ServiceFabricManagedClustersManager serviceManager;

    public ManagedUnsupportedVMSizesImpl(ManagedUnsupportedVMSizesClient innerClient,
        com.azure.resourcemanager.servicefabricmanagedclusters.ServiceFabricManagedClustersManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<ManagedVMSize> list(String location) {
        PagedIterable<ManagedVMSizeInner> inner = this.serviceClient().list(location);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new ManagedVMSizeImpl(inner1, this.manager()));
    }

    public PagedIterable<ManagedVMSize> list(String location, Context context) {
        PagedIterable<ManagedVMSizeInner> inner = this.serviceClient().list(location, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new ManagedVMSizeImpl(inner1, this.manager()));
    }

    public Response<ManagedVMSize> getWithResponse(String location, String vmSize, Context context) {
        Response<ManagedVMSizeInner> inner = this.serviceClient().getWithResponse(location, vmSize, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new ManagedVMSizeImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public ManagedVMSize get(String location, String vmSize) {
        ManagedVMSizeInner inner = this.serviceClient().get(location, vmSize);
        if (inner != null) {
            return new ManagedVMSizeImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private ManagedUnsupportedVMSizesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.servicefabricmanagedclusters.ServiceFabricManagedClustersManager manager() {
        return this.serviceManager;
    }
}
