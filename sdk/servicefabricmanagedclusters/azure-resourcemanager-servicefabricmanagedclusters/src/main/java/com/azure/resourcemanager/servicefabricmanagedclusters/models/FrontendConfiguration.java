// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicefabricmanagedclusters.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Describes the frontend configurations for the node type.
 */
@Fluent
public final class FrontendConfiguration implements JsonSerializable<FrontendConfiguration> {
    /*
     * The IP address type of this frontend configuration. If omitted the default value is IPv4.
     */
    private IpAddressType ipAddressType;

    /*
     * The resource Id of the Load Balancer backend address pool that the VM instances of the node type are associated
     * with. The format of the resource Id is
     * '/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/loadBalancers/<
     * loadBalancerName>/backendAddressPools/<backendAddressPoolName>'.
     */
    private String loadBalancerBackendAddressPoolId;

    /*
     * The resource Id of the Load Balancer inbound NAT pool that the VM instances of the node type are associated with.
     * The format of the resource Id is
     * '/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/loadBalancers/<
     * loadBalancerName>/inboundNatPools/<inboundNatPoolName>'.
     */
    private String loadBalancerInboundNatPoolId;

    /*
     * The resource Id of application gateway backend address pool. The format of the resource Id is
     * '/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/
     * applicationGateways/<applicationGatewayName>/backendAddressPools/<backendAddressPoolName>'.
     */
    private String applicationGatewayBackendAddressPoolId;

    /**
     * Creates an instance of FrontendConfiguration class.
     */
    public FrontendConfiguration() {
    }

    /**
     * Get the ipAddressType property: The IP address type of this frontend configuration. If omitted the default value
     * is IPv4.
     * 
     * @return the ipAddressType value.
     */
    public IpAddressType ipAddressType() {
        return this.ipAddressType;
    }

    /**
     * Set the ipAddressType property: The IP address type of this frontend configuration. If omitted the default value
     * is IPv4.
     * 
     * @param ipAddressType the ipAddressType value to set.
     * @return the FrontendConfiguration object itself.
     */
    public FrontendConfiguration withIpAddressType(IpAddressType ipAddressType) {
        this.ipAddressType = ipAddressType;
        return this;
    }

    /**
     * Get the loadBalancerBackendAddressPoolId property: The resource Id of the Load Balancer backend address pool that
     * the VM instances of the node type are associated with. The format of the resource Id is
     * '/subscriptions/&lt;subscriptionId&gt;/resourceGroups/&lt;resourceGroupName&gt;/providers/Microsoft.Network/loadBalancers/&lt;loadBalancerName&gt;/backendAddressPools/&lt;backendAddressPoolName&gt;'.
     * 
     * @return the loadBalancerBackendAddressPoolId value.
     */
    public String loadBalancerBackendAddressPoolId() {
        return this.loadBalancerBackendAddressPoolId;
    }

    /**
     * Set the loadBalancerBackendAddressPoolId property: The resource Id of the Load Balancer backend address pool that
     * the VM instances of the node type are associated with. The format of the resource Id is
     * '/subscriptions/&lt;subscriptionId&gt;/resourceGroups/&lt;resourceGroupName&gt;/providers/Microsoft.Network/loadBalancers/&lt;loadBalancerName&gt;/backendAddressPools/&lt;backendAddressPoolName&gt;'.
     * 
     * @param loadBalancerBackendAddressPoolId the loadBalancerBackendAddressPoolId value to set.
     * @return the FrontendConfiguration object itself.
     */
    public FrontendConfiguration withLoadBalancerBackendAddressPoolId(String loadBalancerBackendAddressPoolId) {
        this.loadBalancerBackendAddressPoolId = loadBalancerBackendAddressPoolId;
        return this;
    }

    /**
     * Get the loadBalancerInboundNatPoolId property: The resource Id of the Load Balancer inbound NAT pool that the VM
     * instances of the node type are associated with. The format of the resource Id is
     * '/subscriptions/&lt;subscriptionId&gt;/resourceGroups/&lt;resourceGroupName&gt;/providers/Microsoft.Network/loadBalancers/&lt;loadBalancerName&gt;/inboundNatPools/&lt;inboundNatPoolName&gt;'.
     * 
     * @return the loadBalancerInboundNatPoolId value.
     */
    public String loadBalancerInboundNatPoolId() {
        return this.loadBalancerInboundNatPoolId;
    }

    /**
     * Set the loadBalancerInboundNatPoolId property: The resource Id of the Load Balancer inbound NAT pool that the VM
     * instances of the node type are associated with. The format of the resource Id is
     * '/subscriptions/&lt;subscriptionId&gt;/resourceGroups/&lt;resourceGroupName&gt;/providers/Microsoft.Network/loadBalancers/&lt;loadBalancerName&gt;/inboundNatPools/&lt;inboundNatPoolName&gt;'.
     * 
     * @param loadBalancerInboundNatPoolId the loadBalancerInboundNatPoolId value to set.
     * @return the FrontendConfiguration object itself.
     */
    public FrontendConfiguration withLoadBalancerInboundNatPoolId(String loadBalancerInboundNatPoolId) {
        this.loadBalancerInboundNatPoolId = loadBalancerInboundNatPoolId;
        return this;
    }

    /**
     * Get the applicationGatewayBackendAddressPoolId property: The resource Id of application gateway backend address
     * pool. The format of the resource Id is
     * '/subscriptions/&lt;subscriptionId&gt;/resourceGroups/&lt;resourceGroupName&gt;/providers/Microsoft.Network/applicationGateways/&lt;applicationGatewayName&gt;/backendAddressPools/&lt;backendAddressPoolName&gt;'.
     * 
     * @return the applicationGatewayBackendAddressPoolId value.
     */
    public String applicationGatewayBackendAddressPoolId() {
        return this.applicationGatewayBackendAddressPoolId;
    }

    /**
     * Set the applicationGatewayBackendAddressPoolId property: The resource Id of application gateway backend address
     * pool. The format of the resource Id is
     * '/subscriptions/&lt;subscriptionId&gt;/resourceGroups/&lt;resourceGroupName&gt;/providers/Microsoft.Network/applicationGateways/&lt;applicationGatewayName&gt;/backendAddressPools/&lt;backendAddressPoolName&gt;'.
     * 
     * @param applicationGatewayBackendAddressPoolId the applicationGatewayBackendAddressPoolId value to set.
     * @return the FrontendConfiguration object itself.
     */
    public FrontendConfiguration
        withApplicationGatewayBackendAddressPoolId(String applicationGatewayBackendAddressPoolId) {
        this.applicationGatewayBackendAddressPoolId = applicationGatewayBackendAddressPoolId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("ipAddressType", this.ipAddressType == null ? null : this.ipAddressType.toString());
        jsonWriter.writeStringField("loadBalancerBackendAddressPoolId", this.loadBalancerBackendAddressPoolId);
        jsonWriter.writeStringField("loadBalancerInboundNatPoolId", this.loadBalancerInboundNatPoolId);
        jsonWriter.writeStringField("applicationGatewayBackendAddressPoolId",
            this.applicationGatewayBackendAddressPoolId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of FrontendConfiguration from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of FrontendConfiguration if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the FrontendConfiguration.
     */
    public static FrontendConfiguration fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            FrontendConfiguration deserializedFrontendConfiguration = new FrontendConfiguration();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("ipAddressType".equals(fieldName)) {
                    deserializedFrontendConfiguration.ipAddressType = IpAddressType.fromString(reader.getString());
                } else if ("loadBalancerBackendAddressPoolId".equals(fieldName)) {
                    deserializedFrontendConfiguration.loadBalancerBackendAddressPoolId = reader.getString();
                } else if ("loadBalancerInboundNatPoolId".equals(fieldName)) {
                    deserializedFrontendConfiguration.loadBalancerInboundNatPoolId = reader.getString();
                } else if ("applicationGatewayBackendAddressPoolId".equals(fieldName)) {
                    deserializedFrontendConfiguration.applicationGatewayBackendAddressPoolId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedFrontendConfiguration;
        });
    }
}
