// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicefabricmanagedclusters.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.servicefabricmanagedclusters.fluent.models.LongRunningOperationResultInner;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class LongRunningOperationResultInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        LongRunningOperationResultInner model = BinaryData.fromString(
            "{\"name\":\"vimjwos\",\"startTime\":\"2020-12-23T18:35:53Z\",\"endTime\":\"2021-01-07T09:14:38Z\",\"percentComplete\":19.459108261656645,\"status\":\"cktqumiekkezzi\"}")
            .toObject(LongRunningOperationResultInner.class);
        Assertions.assertEquals("vimjwos", model.name());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-23T18:35:53Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-07T09:14:38Z"), model.endTime());
        Assertions.assertEquals(19.459108261656645D, model.percentComplete());
        Assertions.assertEquals("cktqumiekkezzi", model.status());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        LongRunningOperationResultInner model = new LongRunningOperationResultInner().withName("vimjwos")
            .withStartTime(OffsetDateTime.parse("2020-12-23T18:35:53Z"))
            .withEndTime(OffsetDateTime.parse("2021-01-07T09:14:38Z"))
            .withPercentComplete(19.459108261656645D)
            .withStatus("cktqumiekkezzi");
        model = BinaryData.fromObject(model).toObject(LongRunningOperationResultInner.class);
        Assertions.assertEquals("vimjwos", model.name());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-23T18:35:53Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-07T09:14:38Z"), model.endTime());
        Assertions.assertEquals(19.459108261656645D, model.percentComplete());
        Assertions.assertEquals("cktqumiekkezzi", model.status());
    }
}
