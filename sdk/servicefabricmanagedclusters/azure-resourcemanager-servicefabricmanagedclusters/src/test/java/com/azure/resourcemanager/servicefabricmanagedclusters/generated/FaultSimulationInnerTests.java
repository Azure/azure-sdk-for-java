// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.servicefabricmanagedclusters.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.servicefabricmanagedclusters.fluent.models.FaultSimulationInner;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.FaultSimulationStatus;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.SfmcOperationStatus;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class FaultSimulationInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FaultSimulationInner model = BinaryData.fromString(
            "{\"simulationId\":\"mnjijpxacqqudf\",\"status\":\"Active\",\"startTime\":\"2021-06-13T18:20:41Z\",\"endTime\":\"2021-01-28T01:39:16Z\",\"details\":{\"clusterId\":\"jyvayffimrzrtuz\",\"operationId\":\"gsexne\",\"nodeTypeFaultSimulation\":[{\"nodeTypeName\":\"wnwmewzs\",\"status\":\"Starting\",\"operationId\":\"uzsoi\",\"operationStatus\":\"Failed\"}],\"parameters\":{\"faultKind\":\"FaultSimulationContent\",\"force\":true,\"constraints\":{\"expirationTime\":\"2021-08-16T07:42:29Z\"}}}}")
            .toObject(FaultSimulationInner.class);
        Assertions.assertEquals("mnjijpxacqqudf", model.simulationId());
        Assertions.assertEquals(FaultSimulationStatus.ACTIVE, model.status());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-13T18:20:41Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-28T01:39:16Z"), model.endTime());
        Assertions.assertEquals("jyvayffimrzrtuz", model.details().clusterId());
        Assertions.assertEquals("gsexne", model.details().operationId());
        Assertions.assertEquals("wnwmewzs", model.details().nodeTypeFaultSimulation().get(0).nodeTypeName());
        Assertions.assertEquals(FaultSimulationStatus.STARTING,
            model.details().nodeTypeFaultSimulation().get(0).status());
        Assertions.assertEquals("uzsoi", model.details().nodeTypeFaultSimulation().get(0).operationId());
        Assertions.assertEquals(SfmcOperationStatus.FAILED,
            model.details().nodeTypeFaultSimulation().get(0).operationStatus());
        Assertions.assertTrue(model.details().parameters().force());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-16T07:42:29Z"),
            model.details().parameters().constraints().expirationTime());
    }
}
