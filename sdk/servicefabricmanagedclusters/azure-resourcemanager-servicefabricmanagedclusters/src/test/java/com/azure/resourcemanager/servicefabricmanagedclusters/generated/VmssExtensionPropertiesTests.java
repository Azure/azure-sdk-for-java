// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicefabricmanagedclusters.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.servicefabricmanagedclusters.fluent.models.VmssExtensionProperties;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.VmssExtensionSetupOrder;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class VmssExtensionPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VmssExtensionProperties model = BinaryData.fromString(
            "{\"publisher\":\"wspughftqsxhqx\",\"type\":\"j\",\"typeHandlerVersion\":\"ukndxdigrjgu\",\"autoUpgradeMinorVersion\":true,\"settings\":\"datamsyqtfi\",\"protectedSettings\":\"datahbotzingamvppho\",\"forceUpdateTag\":\"qzudphq\",\"provisionAfterExtensions\":[\"dkfw\",\"nwcvtbvkayhmtnv\",\"qiatkzwpcnp\",\"zcjaesgvvsccy\"],\"provisioningState\":\"g\",\"enableAutomaticUpgrade\":true,\"setupOrder\":[\"BeforeSFRuntime\",\"BeforeSFRuntime\",\"BeforeSFRuntime\",\"BeforeSFRuntime\"]}")
            .toObject(VmssExtensionProperties.class);
        Assertions.assertEquals("wspughftqsxhqx", model.publisher());
        Assertions.assertEquals("j", model.type());
        Assertions.assertEquals("ukndxdigrjgu", model.typeHandlerVersion());
        Assertions.assertEquals(true, model.autoUpgradeMinorVersion());
        Assertions.assertEquals("qzudphq", model.forceUpdateTag());
        Assertions.assertEquals("dkfw", model.provisionAfterExtensions().get(0));
        Assertions.assertEquals(true, model.enableAutomaticUpgrade());
        Assertions.assertEquals(VmssExtensionSetupOrder.BEFORE_SFRUNTIME, model.setupOrder().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VmssExtensionProperties model = new VmssExtensionProperties().withPublisher("wspughftqsxhqx")
            .withType("j")
            .withTypeHandlerVersion("ukndxdigrjgu")
            .withAutoUpgradeMinorVersion(true)
            .withSettings("datamsyqtfi")
            .withProtectedSettings("datahbotzingamvppho")
            .withForceUpdateTag("qzudphq")
            .withProvisionAfterExtensions(Arrays.asList("dkfw", "nwcvtbvkayhmtnv", "qiatkzwpcnp", "zcjaesgvvsccy"))
            .withEnableAutomaticUpgrade(true)
            .withSetupOrder(
                Arrays.asList(VmssExtensionSetupOrder.BEFORE_SFRUNTIME, VmssExtensionSetupOrder.BEFORE_SFRUNTIME,
                    VmssExtensionSetupOrder.BEFORE_SFRUNTIME, VmssExtensionSetupOrder.BEFORE_SFRUNTIME));
        model = BinaryData.fromObject(model).toObject(VmssExtensionProperties.class);
        Assertions.assertEquals("wspughftqsxhqx", model.publisher());
        Assertions.assertEquals("j", model.type());
        Assertions.assertEquals("ukndxdigrjgu", model.typeHandlerVersion());
        Assertions.assertEquals(true, model.autoUpgradeMinorVersion());
        Assertions.assertEquals("qzudphq", model.forceUpdateTag());
        Assertions.assertEquals("dkfw", model.provisionAfterExtensions().get(0));
        Assertions.assertEquals(true, model.enableAutomaticUpgrade());
        Assertions.assertEquals(VmssExtensionSetupOrder.BEFORE_SFRUNTIME, model.setupOrder().get(0));
    }
}
