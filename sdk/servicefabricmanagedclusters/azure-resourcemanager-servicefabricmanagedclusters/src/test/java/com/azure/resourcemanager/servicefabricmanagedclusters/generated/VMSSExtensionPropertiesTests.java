// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.servicefabricmanagedclusters.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.servicefabricmanagedclusters.fluent.models.VMSSExtensionProperties;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.VmssExtensionSetupOrder;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class VMSSExtensionPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VMSSExtensionProperties model = BinaryData.fromString(
            "{\"publisher\":\"vdnkfxusem\",\"type\":\"wzrmuh\",\"typeHandlerVersion\":\"pfcqdp\",\"autoUpgradeMinorVersion\":false,\"settings\":\"datavpsvuoymgcce\",\"protectedSettings\":\"dataezrypql\",\"forceUpdateTag\":\"eokerqwkyhkobopg\",\"provisionAfterExtensions\":[\"k\"],\"provisioningState\":\"epbqpcrfkbw\",\"enableAutomaticUpgrade\":true,\"setupOrder\":[\"BeforeSFRuntime\",\"BeforeSFRuntime\",\"BeforeSFRuntime\"]}")
            .toObject(VMSSExtensionProperties.class);
        Assertions.assertEquals("vdnkfxusem", model.publisher());
        Assertions.assertEquals("wzrmuh", model.type());
        Assertions.assertEquals("pfcqdp", model.typeHandlerVersion());
        Assertions.assertFalse(model.autoUpgradeMinorVersion());
        Assertions.assertEquals("eokerqwkyhkobopg", model.forceUpdateTag());
        Assertions.assertEquals("k", model.provisionAfterExtensions().get(0));
        Assertions.assertTrue(model.enableAutomaticUpgrade());
        Assertions.assertEquals(VmssExtensionSetupOrder.BEFORE_SFRUNTIME, model.setupOrder().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VMSSExtensionProperties model = new VMSSExtensionProperties().withPublisher("vdnkfxusem")
            .withType("wzrmuh")
            .withTypeHandlerVersion("pfcqdp")
            .withAutoUpgradeMinorVersion(false)
            .withSettings("datavpsvuoymgcce")
            .withProtectedSettings("dataezrypql")
            .withForceUpdateTag("eokerqwkyhkobopg")
            .withProvisionAfterExtensions(Arrays.asList("k"))
            .withEnableAutomaticUpgrade(true)
            .withSetupOrder(Arrays.asList(VmssExtensionSetupOrder.BEFORE_SFRUNTIME,
                VmssExtensionSetupOrder.BEFORE_SFRUNTIME, VmssExtensionSetupOrder.BEFORE_SFRUNTIME));
        model = BinaryData.fromObject(model).toObject(VMSSExtensionProperties.class);
        Assertions.assertEquals("vdnkfxusem", model.publisher());
        Assertions.assertEquals("wzrmuh", model.type());
        Assertions.assertEquals("pfcqdp", model.typeHandlerVersion());
        Assertions.assertFalse(model.autoUpgradeMinorVersion());
        Assertions.assertEquals("eokerqwkyhkobopg", model.forceUpdateTag());
        Assertions.assertEquals("k", model.provisionAfterExtensions().get(0));
        Assertions.assertTrue(model.enableAutomaticUpgrade());
        Assertions.assertEquals(VmssExtensionSetupOrder.BEFORE_SFRUNTIME, model.setupOrder().get(0));
    }
}
