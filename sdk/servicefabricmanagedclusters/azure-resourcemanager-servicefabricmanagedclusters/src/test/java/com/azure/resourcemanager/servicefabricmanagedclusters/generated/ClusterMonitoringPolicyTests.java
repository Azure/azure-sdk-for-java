// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicefabricmanagedclusters.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterMonitoringPolicy;
import org.junit.jupiter.api.Assertions;

public final class ClusterMonitoringPolicyTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ClusterMonitoringPolicy model = BinaryData.fromString(
            "{\"healthCheckWaitDuration\":\"lp\",\"healthCheckStableDuration\":\"wcciuqgbdbu\",\"healthCheckRetryTimeout\":\"auvfbtkuwhhmhyk\",\"upgradeTimeout\":\"joxafnndlpi\",\"upgradeDomainTimeout\":\"hkoymkcdyhbp\"}")
            .toObject(ClusterMonitoringPolicy.class);
        Assertions.assertEquals("lp", model.healthCheckWaitDuration());
        Assertions.assertEquals("wcciuqgbdbu", model.healthCheckStableDuration());
        Assertions.assertEquals("auvfbtkuwhhmhyk", model.healthCheckRetryTimeout());
        Assertions.assertEquals("joxafnndlpi", model.upgradeTimeout());
        Assertions.assertEquals("hkoymkcdyhbp", model.upgradeDomainTimeout());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ClusterMonitoringPolicy model = new ClusterMonitoringPolicy().withHealthCheckWaitDuration("lp")
            .withHealthCheckStableDuration("wcciuqgbdbu")
            .withHealthCheckRetryTimeout("auvfbtkuwhhmhyk")
            .withUpgradeTimeout("joxafnndlpi")
            .withUpgradeDomainTimeout("hkoymkcdyhbp");
        model = BinaryData.fromObject(model).toObject(ClusterMonitoringPolicy.class);
        Assertions.assertEquals("lp", model.healthCheckWaitDuration());
        Assertions.assertEquals("wcciuqgbdbu", model.healthCheckStableDuration());
        Assertions.assertEquals("auvfbtkuwhhmhyk", model.healthCheckRetryTimeout());
        Assertions.assertEquals("joxafnndlpi", model.upgradeTimeout());
        Assertions.assertEquals("hkoymkcdyhbp", model.upgradeDomainTimeout());
    }
}
