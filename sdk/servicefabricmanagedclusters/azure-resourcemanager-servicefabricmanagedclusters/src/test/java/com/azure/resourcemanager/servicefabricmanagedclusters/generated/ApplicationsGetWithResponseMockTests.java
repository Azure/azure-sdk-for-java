// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicefabricmanagedclusters.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.servicefabricmanagedclusters.ServiceFabricManagedClustersManager;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationResource;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.FailureAction;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.ManagedIdentityType;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.RollingUpgradeMode;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ApplicationsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"identity\":{\"principalId\":\"riglaec\",\"tenantId\":\"dticokpvzml\",\"type\":\"UserAssigned\",\"userAssignedIdentities\":{\"iykhy\":{\"principalId\":\"x\",\"clientId\":\"firclnpkciayz\"},\"hdwdi\":{\"principalId\":\"fvjlboxqvkjlmx\",\"clientId\":\"mdy\"},\"ysdzhez\":{\"principalId\":\"mbnraauzzp\",\"clientId\":\"a\"}}},\"properties\":{\"provisioningState\":\"aiqyuvvfo\",\"version\":\"p\",\"parameters\":{\"y\":\"yik\",\"vluwmncsttij\":\"auy\"},\"upgradePolicy\":{\"applicationHealthPolicy\":{\"considerWarningAsError\":false,\"maxPercentUnhealthyDeployedApplications\":387251402,\"defaultServiceTypeHealthPolicy\":{\"maxPercentUnhealthyServices\":1465256653,\"maxPercentUnhealthyPartitionsPerService\":1661659645,\"maxPercentUnhealthyReplicasPerPartition\":576086700},\"serviceTypeHealthPolicyMap\":{\"dhuzqgnjdgk\":{\"maxPercentUnhealthyServices\":1694137236,\"maxPercentUnhealthyPartitionsPerService\":968704736,\"maxPercentUnhealthyReplicasPerPartition\":165392512},\"liqhzvhx\":{\"maxPercentUnhealthyServices\":1189347509,\"maxPercentUnhealthyPartitionsPerService\":1089866050,\"maxPercentUnhealthyReplicasPerPartition\":540645493},\"tkubotppn\":{\"maxPercentUnhealthyServices\":1010103487,\"maxPercentUnhealthyPartitionsPerService\":1549555977,\"maxPercentUnhealthyReplicasPerPartition\":633968013}}},\"forceRestart\":false,\"rollingUpgradeMonitoringPolicy\":{\"failureAction\":\"Manual\",\"healthCheckWaitDuration\":\"hihfrbbcevqagtlt\",\"healthCheckStableDuration\":\"hlfkqojpy\",\"healthCheckRetryTimeout\":\"vgtrdcnifmzzs\",\"upgradeTimeout\":\"ymbrnysuxmpraf\",\"upgradeDomainTimeout\":\"g\"},\"instanceCloseDelayDuration\":8531736753355462643,\"upgradeMode\":\"Monitored\",\"upgradeReplicaSetCheckTimeout\":986496173108927775,\"recreateApplication\":true},\"managedIdentities\":[{\"name\":\"fqroudas\",\"principalId\":\"avehhrvkbunzo\"}]},\"location\":\"dhcxgkmoy\",\"tags\":{\"dnbzydvfvfcjn\":\"yuibhm\",\"fukiscvwmzhw\":\"eoisrvhmgor\"},\"id\":\"efaxvxilc\",\"name\":\"tg\",\"type\":\"hnze\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ServiceFabricManagedClustersManager manager = ServiceFabricManagedClustersManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ApplicationResource response = manager.applications()
            .getWithResponse("nwy", "pzdm", "vzvfvaawzqadfl", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(ManagedIdentityType.USER_ASSIGNED, response.identity().type());
        Assertions.assertEquals("dhcxgkmoy", response.location());
        Assertions.assertEquals("yuibhm", response.tags().get("dnbzydvfvfcjn"));
        Assertions.assertEquals("p", response.version());
        Assertions.assertEquals("yik", response.parameters().get("y"));
        Assertions.assertEquals(false, response.upgradePolicy().applicationHealthPolicy().considerWarningAsError());
        Assertions.assertEquals(387251402,
            response.upgradePolicy().applicationHealthPolicy().maxPercentUnhealthyDeployedApplications());
        Assertions.assertEquals(1465256653,
            response.upgradePolicy()
                .applicationHealthPolicy()
                .defaultServiceTypeHealthPolicy()
                .maxPercentUnhealthyServices());
        Assertions.assertEquals(1661659645,
            response.upgradePolicy()
                .applicationHealthPolicy()
                .defaultServiceTypeHealthPolicy()
                .maxPercentUnhealthyPartitionsPerService());
        Assertions.assertEquals(576086700,
            response.upgradePolicy()
                .applicationHealthPolicy()
                .defaultServiceTypeHealthPolicy()
                .maxPercentUnhealthyReplicasPerPartition());
        Assertions.assertEquals(1694137236,
            response.upgradePolicy()
                .applicationHealthPolicy()
                .serviceTypeHealthPolicyMap()
                .get("dhuzqgnjdgk")
                .maxPercentUnhealthyServices());
        Assertions.assertEquals(968704736,
            response.upgradePolicy()
                .applicationHealthPolicy()
                .serviceTypeHealthPolicyMap()
                .get("dhuzqgnjdgk")
                .maxPercentUnhealthyPartitionsPerService());
        Assertions.assertEquals(165392512,
            response.upgradePolicy()
                .applicationHealthPolicy()
                .serviceTypeHealthPolicyMap()
                .get("dhuzqgnjdgk")
                .maxPercentUnhealthyReplicasPerPartition());
        Assertions.assertEquals(false, response.upgradePolicy().forceRestart());
        Assertions.assertEquals(FailureAction.MANUAL,
            response.upgradePolicy().rollingUpgradeMonitoringPolicy().failureAction());
        Assertions.assertEquals("hihfrbbcevqagtlt",
            response.upgradePolicy().rollingUpgradeMonitoringPolicy().healthCheckWaitDuration());
        Assertions.assertEquals("hlfkqojpy",
            response.upgradePolicy().rollingUpgradeMonitoringPolicy().healthCheckStableDuration());
        Assertions.assertEquals("vgtrdcnifmzzs",
            response.upgradePolicy().rollingUpgradeMonitoringPolicy().healthCheckRetryTimeout());
        Assertions.assertEquals("ymbrnysuxmpraf",
            response.upgradePolicy().rollingUpgradeMonitoringPolicy().upgradeTimeout());
        Assertions.assertEquals("g", response.upgradePolicy().rollingUpgradeMonitoringPolicy().upgradeDomainTimeout());
        Assertions.assertEquals(8531736753355462643L, response.upgradePolicy().instanceCloseDelayDuration());
        Assertions.assertEquals(RollingUpgradeMode.MONITORED, response.upgradePolicy().upgradeMode());
        Assertions.assertEquals(986496173108927775L, response.upgradePolicy().upgradeReplicaSetCheckTimeout());
        Assertions.assertEquals(true, response.upgradePolicy().recreateApplication());
        Assertions.assertEquals("fqroudas", response.managedIdentities().get(0).name());
        Assertions.assertEquals("avehhrvkbunzo", response.managedIdentities().get(0).principalId());
    }
}
