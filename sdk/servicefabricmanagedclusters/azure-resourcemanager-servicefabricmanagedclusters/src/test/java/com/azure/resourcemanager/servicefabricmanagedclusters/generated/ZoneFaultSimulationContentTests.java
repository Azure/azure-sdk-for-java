// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.servicefabricmanagedclusters.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.FaultSimulationConstraints;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.ZoneFaultSimulationContent;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ZoneFaultSimulationContentTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ZoneFaultSimulationContent model = BinaryData.fromString(
            "{\"faultKind\":\"Zone\",\"zones\":[\"dkcrodt\",\"infwjlfltkacjve\",\"kdlfoa\"],\"force\":false,\"constraints\":{\"expirationTime\":\"2021-01-22T11:21:37Z\"}}")
            .toObject(ZoneFaultSimulationContent.class);
        Assertions.assertFalse(model.force());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-22T11:21:37Z"), model.constraints().expirationTime());
        Assertions.assertEquals("dkcrodt", model.zones().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ZoneFaultSimulationContent model = new ZoneFaultSimulationContent().withForce(false)
            .withConstraints(
                new FaultSimulationConstraints().withExpirationTime(OffsetDateTime.parse("2021-01-22T11:21:37Z")))
            .withZones(Arrays.asList("dkcrodt", "infwjlfltkacjve", "kdlfoa"));
        model = BinaryData.fromObject(model).toObject(ZoneFaultSimulationContent.class);
        Assertions.assertFalse(model.force());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-22T11:21:37Z"), model.constraints().expirationTime());
        Assertions.assertEquals("dkcrodt", model.zones().get(0));
    }
}
