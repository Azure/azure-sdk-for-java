// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicefabricmanagedclusters.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.servicefabricmanagedclusters.fluent.models.OperationResultInner;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.AvailableOperationDisplay;
import org.junit.jupiter.api.Assertions;

public final class OperationResultInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationResultInner model = BinaryData.fromString(
            "{\"name\":\"mnjijpxacqqudf\",\"isDataAction\":true,\"display\":{\"provider\":\"aaabjyvayff\",\"resource\":\"rzrtuzqogsex\",\"operation\":\"vfdnwnwmewzsyyce\",\"description\":\"soibjudpfrx\"},\"origin\":\"thzvaytdwkqbrqu\",\"nextLink\":\"axhexiilivp\"}")
            .toObject(OperationResultInner.class);
        Assertions.assertEquals("mnjijpxacqqudf", model.name());
        Assertions.assertEquals(true, model.isDataAction());
        Assertions.assertEquals("aaabjyvayff", model.display().provider());
        Assertions.assertEquals("rzrtuzqogsex", model.display().resource());
        Assertions.assertEquals("vfdnwnwmewzsyyce", model.display().operation());
        Assertions.assertEquals("soibjudpfrx", model.display().description());
        Assertions.assertEquals("thzvaytdwkqbrqu", model.origin());
        Assertions.assertEquals("axhexiilivp", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationResultInner model = new OperationResultInner().withName("mnjijpxacqqudf")
            .withIsDataAction(true)
            .withDisplay(new AvailableOperationDisplay().withProvider("aaabjyvayff")
                .withResource("rzrtuzqogsex")
                .withOperation("vfdnwnwmewzsyyce")
                .withDescription("soibjudpfrx"))
            .withOrigin("thzvaytdwkqbrqu")
            .withNextLink("axhexiilivp");
        model = BinaryData.fromObject(model).toObject(OperationResultInner.class);
        Assertions.assertEquals("mnjijpxacqqudf", model.name());
        Assertions.assertEquals(true, model.isDataAction());
        Assertions.assertEquals("aaabjyvayff", model.display().provider());
        Assertions.assertEquals("rzrtuzqogsex", model.display().resource());
        Assertions.assertEquals("vfdnwnwmewzsyyce", model.display().operation());
        Assertions.assertEquals("soibjudpfrx", model.display().description());
        Assertions.assertEquals("thzvaytdwkqbrqu", model.origin());
        Assertions.assertEquals("axhexiilivp", model.nextLink());
    }
}
