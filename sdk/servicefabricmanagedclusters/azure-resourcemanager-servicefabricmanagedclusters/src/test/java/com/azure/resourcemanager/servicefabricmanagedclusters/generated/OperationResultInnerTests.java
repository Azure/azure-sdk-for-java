// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicefabricmanagedclusters.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.servicefabricmanagedclusters.fluent.models.OperationResultInner;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.AvailableOperationDisplay;
import org.junit.jupiter.api.Assertions;

public final class OperationResultInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationResultInner model = BinaryData.fromString(
            "{\"name\":\"rxxle\",\"isDataAction\":true,\"display\":{\"provider\":\"xje\",\"resource\":\"lwnwxuqlcvydyp\",\"operation\":\"dooaojkniodko\",\"description\":\"bw\"},\"origin\":\"jhemms\",\"nextLink\":\"dkcrodt\"}")
            .toObject(OperationResultInner.class);
        Assertions.assertEquals("rxxle", model.name());
        Assertions.assertEquals(true, model.isDataAction());
        Assertions.assertEquals("xje", model.display().provider());
        Assertions.assertEquals("lwnwxuqlcvydyp", model.display().resource());
        Assertions.assertEquals("dooaojkniodko", model.display().operation());
        Assertions.assertEquals("bw", model.display().description());
        Assertions.assertEquals("jhemms", model.origin());
        Assertions.assertEquals("dkcrodt", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationResultInner model = new OperationResultInner().withName("rxxle")
            .withIsDataAction(true)
            .withDisplay(new AvailableOperationDisplay().withProvider("xje")
                .withResource("lwnwxuqlcvydyp")
                .withOperation("dooaojkniodko")
                .withDescription("bw"))
            .withOrigin("jhemms")
            .withNextLink("dkcrodt");
        model = BinaryData.fromObject(model).toObject(OperationResultInner.class);
        Assertions.assertEquals("rxxle", model.name());
        Assertions.assertEquals(true, model.isDataAction());
        Assertions.assertEquals("xje", model.display().provider());
        Assertions.assertEquals("lwnwxuqlcvydyp", model.display().resource());
        Assertions.assertEquals("dooaojkniodko", model.display().operation());
        Assertions.assertEquals("bw", model.display().description());
        Assertions.assertEquals("jhemms", model.origin());
        Assertions.assertEquals("dkcrodt", model.nextLink());
    }
}
