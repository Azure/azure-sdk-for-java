// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicefabricmanagedclusters.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterHealthPolicy;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterMonitoringPolicy;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterUpgradeDeltaHealthPolicy;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterUpgradePolicy;
import org.junit.jupiter.api.Assertions;

public final class ClusterUpgradePolicyTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ClusterUpgradePolicy model = BinaryData.fromString(
            "{\"forceRestart\":true,\"healthPolicy\":{\"maxPercentUnhealthyNodes\":1655642589,\"maxPercentUnhealthyApplications\":1338367817},\"deltaHealthPolicy\":{\"maxPercentDeltaUnhealthyNodes\":354911524,\"maxPercentUpgradeDomainDeltaUnhealthyNodes\":1486476697,\"maxPercentDeltaUnhealthyApplications\":837458643},\"monitoringPolicy\":{\"healthCheckWaitDuration\":\"tg\",\"healthCheckStableDuration\":\"wbwo\",\"healthCheckRetryTimeout\":\"nwashrtd\",\"upgradeTimeout\":\"kcnqxwbpo\",\"upgradeDomainTimeout\":\"ulpiuj\"},\"upgradeReplicaSetCheckTimeout\":\"asipqiio\"}")
            .toObject(ClusterUpgradePolicy.class);
        Assertions.assertEquals(true, model.forceRestart());
        Assertions.assertEquals(1655642589, model.healthPolicy().maxPercentUnhealthyNodes());
        Assertions.assertEquals(1338367817, model.healthPolicy().maxPercentUnhealthyApplications());
        Assertions.assertEquals(354911524, model.deltaHealthPolicy().maxPercentDeltaUnhealthyNodes());
        Assertions.assertEquals(1486476697, model.deltaHealthPolicy().maxPercentUpgradeDomainDeltaUnhealthyNodes());
        Assertions.assertEquals(837458643, model.deltaHealthPolicy().maxPercentDeltaUnhealthyApplications());
        Assertions.assertEquals("tg", model.monitoringPolicy().healthCheckWaitDuration());
        Assertions.assertEquals("wbwo", model.monitoringPolicy().healthCheckStableDuration());
        Assertions.assertEquals("nwashrtd", model.monitoringPolicy().healthCheckRetryTimeout());
        Assertions.assertEquals("kcnqxwbpo", model.monitoringPolicy().upgradeTimeout());
        Assertions.assertEquals("ulpiuj", model.monitoringPolicy().upgradeDomainTimeout());
        Assertions.assertEquals("asipqiio", model.upgradeReplicaSetCheckTimeout());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ClusterUpgradePolicy model = new ClusterUpgradePolicy().withForceRestart(true)
            .withHealthPolicy(new ClusterHealthPolicy().withMaxPercentUnhealthyNodes(1655642589)
                .withMaxPercentUnhealthyApplications(1338367817))
            .withDeltaHealthPolicy(new ClusterUpgradeDeltaHealthPolicy().withMaxPercentDeltaUnhealthyNodes(354911524)
                .withMaxPercentUpgradeDomainDeltaUnhealthyNodes(1486476697)
                .withMaxPercentDeltaUnhealthyApplications(837458643))
            .withMonitoringPolicy(new ClusterMonitoringPolicy().withHealthCheckWaitDuration("tg")
                .withHealthCheckStableDuration("wbwo")
                .withHealthCheckRetryTimeout("nwashrtd")
                .withUpgradeTimeout("kcnqxwbpo")
                .withUpgradeDomainTimeout("ulpiuj"))
            .withUpgradeReplicaSetCheckTimeout("asipqiio");
        model = BinaryData.fromObject(model).toObject(ClusterUpgradePolicy.class);
        Assertions.assertEquals(true, model.forceRestart());
        Assertions.assertEquals(1655642589, model.healthPolicy().maxPercentUnhealthyNodes());
        Assertions.assertEquals(1338367817, model.healthPolicy().maxPercentUnhealthyApplications());
        Assertions.assertEquals(354911524, model.deltaHealthPolicy().maxPercentDeltaUnhealthyNodes());
        Assertions.assertEquals(1486476697, model.deltaHealthPolicy().maxPercentUpgradeDomainDeltaUnhealthyNodes());
        Assertions.assertEquals(837458643, model.deltaHealthPolicy().maxPercentDeltaUnhealthyApplications());
        Assertions.assertEquals("tg", model.monitoringPolicy().healthCheckWaitDuration());
        Assertions.assertEquals("wbwo", model.monitoringPolicy().healthCheckStableDuration());
        Assertions.assertEquals("nwashrtd", model.monitoringPolicy().healthCheckRetryTimeout());
        Assertions.assertEquals("kcnqxwbpo", model.monitoringPolicy().upgradeTimeout());
        Assertions.assertEquals("ulpiuj", model.monitoringPolicy().upgradeDomainTimeout());
        Assertions.assertEquals("asipqiio", model.upgradeReplicaSetCheckTimeout());
    }
}
