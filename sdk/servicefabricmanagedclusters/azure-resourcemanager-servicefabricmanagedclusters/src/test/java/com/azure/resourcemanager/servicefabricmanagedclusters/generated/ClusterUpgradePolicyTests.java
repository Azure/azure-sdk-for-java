// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.servicefabricmanagedclusters.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterHealthPolicy;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterMonitoringPolicy;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterUpgradeDeltaHealthPolicy;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterUpgradePolicy;
import org.junit.jupiter.api.Assertions;

public final class ClusterUpgradePolicyTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ClusterUpgradePolicy model = BinaryData.fromString(
            "{\"forceRestart\":false,\"healthPolicy\":{\"maxPercentUnhealthyNodes\":682770513,\"maxPercentUnhealthyApplications\":581712977},\"deltaHealthPolicy\":{\"maxPercentDeltaUnhealthyNodes\":1910249555,\"maxPercentUpgradeDomainDeltaUnhealthyNodes\":1729587671,\"maxPercentDeltaUnhealthyApplications\":1714837723},\"monitoringPolicy\":{\"healthCheckWaitDuration\":\"ukghimdblxgw\",\"healthCheckStableDuration\":\"mfnjh\",\"healthCheckRetryTimeout\":\"j\",\"upgradeTimeout\":\"wmszkk\",\"upgradeDomainTimeout\":\"oqreyfkzikfjawn\"},\"upgradeReplicaSetCheckTimeout\":\"ivx\"}")
            .toObject(ClusterUpgradePolicy.class);
        Assertions.assertFalse(model.forceRestart());
        Assertions.assertEquals(682770513, model.healthPolicy().maxPercentUnhealthyNodes());
        Assertions.assertEquals(581712977, model.healthPolicy().maxPercentUnhealthyApplications());
        Assertions.assertEquals(1910249555, model.deltaHealthPolicy().maxPercentDeltaUnhealthyNodes());
        Assertions.assertEquals(1729587671, model.deltaHealthPolicy().maxPercentUpgradeDomainDeltaUnhealthyNodes());
        Assertions.assertEquals(1714837723, model.deltaHealthPolicy().maxPercentDeltaUnhealthyApplications());
        Assertions.assertEquals("ukghimdblxgw", model.monitoringPolicy().healthCheckWaitDuration());
        Assertions.assertEquals("mfnjh", model.monitoringPolicy().healthCheckStableDuration());
        Assertions.assertEquals("j", model.monitoringPolicy().healthCheckRetryTimeout());
        Assertions.assertEquals("wmszkk", model.monitoringPolicy().upgradeTimeout());
        Assertions.assertEquals("oqreyfkzikfjawn", model.monitoringPolicy().upgradeDomainTimeout());
        Assertions.assertEquals("ivx", model.upgradeReplicaSetCheckTimeout());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ClusterUpgradePolicy model = new ClusterUpgradePolicy().withForceRestart(false)
            .withHealthPolicy(new ClusterHealthPolicy().withMaxPercentUnhealthyNodes(682770513)
                .withMaxPercentUnhealthyApplications(581712977))
            .withDeltaHealthPolicy(new ClusterUpgradeDeltaHealthPolicy().withMaxPercentDeltaUnhealthyNodes(1910249555)
                .withMaxPercentUpgradeDomainDeltaUnhealthyNodes(1729587671)
                .withMaxPercentDeltaUnhealthyApplications(1714837723))
            .withMonitoringPolicy(new ClusterMonitoringPolicy().withHealthCheckWaitDuration("ukghimdblxgw")
                .withHealthCheckStableDuration("mfnjh")
                .withHealthCheckRetryTimeout("j")
                .withUpgradeTimeout("wmszkk")
                .withUpgradeDomainTimeout("oqreyfkzikfjawn"))
            .withUpgradeReplicaSetCheckTimeout("ivx");
        model = BinaryData.fromObject(model).toObject(ClusterUpgradePolicy.class);
        Assertions.assertFalse(model.forceRestart());
        Assertions.assertEquals(682770513, model.healthPolicy().maxPercentUnhealthyNodes());
        Assertions.assertEquals(581712977, model.healthPolicy().maxPercentUnhealthyApplications());
        Assertions.assertEquals(1910249555, model.deltaHealthPolicy().maxPercentDeltaUnhealthyNodes());
        Assertions.assertEquals(1729587671, model.deltaHealthPolicy().maxPercentUpgradeDomainDeltaUnhealthyNodes());
        Assertions.assertEquals(1714837723, model.deltaHealthPolicy().maxPercentDeltaUnhealthyApplications());
        Assertions.assertEquals("ukghimdblxgw", model.monitoringPolicy().healthCheckWaitDuration());
        Assertions.assertEquals("mfnjh", model.monitoringPolicy().healthCheckStableDuration());
        Assertions.assertEquals("j", model.monitoringPolicy().healthCheckRetryTimeout());
        Assertions.assertEquals("wmszkk", model.monitoringPolicy().upgradeTimeout());
        Assertions.assertEquals("oqreyfkzikfjawn", model.monitoringPolicy().upgradeDomainTimeout());
        Assertions.assertEquals("ivx", model.upgradeReplicaSetCheckTimeout());
    }
}
