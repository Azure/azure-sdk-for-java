// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.servicefabricmanagedclusters.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterHealthPolicy;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterMonitoringPolicy;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterUpgradeDeltaHealthPolicy;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterUpgradePolicy;
import org.junit.jupiter.api.Assertions;

public final class ClusterUpgradePolicyTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ClusterUpgradePolicy model = BinaryData.fromString(
            "{\"forceRestart\":false,\"healthPolicy\":{\"maxPercentUnhealthyNodes\":1947559864,\"maxPercentUnhealthyApplications\":2088277848},\"deltaHealthPolicy\":{\"maxPercentDeltaUnhealthyNodes\":101100234,\"maxPercentUpgradeDomainDeltaUnhealthyNodes\":972343553,\"maxPercentDeltaUnhealthyApplications\":636112442},\"monitoringPolicy\":{\"healthCheckWaitDuration\":\"gwimfn\",\"healthCheckStableDuration\":\"hfjx\",\"healthCheckRetryTimeout\":\"mszkkfo\",\"upgradeTimeout\":\"rey\",\"upgradeDomainTimeout\":\"kzikfjawneaivxwc\"},\"upgradeReplicaSetCheckTimeout\":\"lpcirelsf\"}")
            .toObject(ClusterUpgradePolicy.class);
        Assertions.assertFalse(model.forceRestart());
        Assertions.assertEquals(1947559864, model.healthPolicy().maxPercentUnhealthyNodes());
        Assertions.assertEquals(2088277848, model.healthPolicy().maxPercentUnhealthyApplications());
        Assertions.assertEquals(101100234, model.deltaHealthPolicy().maxPercentDeltaUnhealthyNodes());
        Assertions.assertEquals(972343553, model.deltaHealthPolicy().maxPercentUpgradeDomainDeltaUnhealthyNodes());
        Assertions.assertEquals(636112442, model.deltaHealthPolicy().maxPercentDeltaUnhealthyApplications());
        Assertions.assertEquals("gwimfn", model.monitoringPolicy().healthCheckWaitDuration());
        Assertions.assertEquals("hfjx", model.monitoringPolicy().healthCheckStableDuration());
        Assertions.assertEquals("mszkkfo", model.monitoringPolicy().healthCheckRetryTimeout());
        Assertions.assertEquals("rey", model.monitoringPolicy().upgradeTimeout());
        Assertions.assertEquals("kzikfjawneaivxwc", model.monitoringPolicy().upgradeDomainTimeout());
        Assertions.assertEquals("lpcirelsf", model.upgradeReplicaSetCheckTimeout());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ClusterUpgradePolicy model = new ClusterUpgradePolicy().withForceRestart(false)
            .withHealthPolicy(new ClusterHealthPolicy().withMaxPercentUnhealthyNodes(1947559864)
                .withMaxPercentUnhealthyApplications(2088277848))
            .withDeltaHealthPolicy(new ClusterUpgradeDeltaHealthPolicy().withMaxPercentDeltaUnhealthyNodes(101100234)
                .withMaxPercentUpgradeDomainDeltaUnhealthyNodes(972343553)
                .withMaxPercentDeltaUnhealthyApplications(636112442))
            .withMonitoringPolicy(new ClusterMonitoringPolicy().withHealthCheckWaitDuration("gwimfn")
                .withHealthCheckStableDuration("hfjx")
                .withHealthCheckRetryTimeout("mszkkfo")
                .withUpgradeTimeout("rey")
                .withUpgradeDomainTimeout("kzikfjawneaivxwc"))
            .withUpgradeReplicaSetCheckTimeout("lpcirelsf");
        model = BinaryData.fromObject(model).toObject(ClusterUpgradePolicy.class);
        Assertions.assertFalse(model.forceRestart());
        Assertions.assertEquals(1947559864, model.healthPolicy().maxPercentUnhealthyNodes());
        Assertions.assertEquals(2088277848, model.healthPolicy().maxPercentUnhealthyApplications());
        Assertions.assertEquals(101100234, model.deltaHealthPolicy().maxPercentDeltaUnhealthyNodes());
        Assertions.assertEquals(972343553, model.deltaHealthPolicy().maxPercentUpgradeDomainDeltaUnhealthyNodes());
        Assertions.assertEquals(636112442, model.deltaHealthPolicy().maxPercentDeltaUnhealthyApplications());
        Assertions.assertEquals("gwimfn", model.monitoringPolicy().healthCheckWaitDuration());
        Assertions.assertEquals("hfjx", model.monitoringPolicy().healthCheckStableDuration());
        Assertions.assertEquals("mszkkfo", model.monitoringPolicy().healthCheckRetryTimeout());
        Assertions.assertEquals("rey", model.monitoringPolicy().upgradeTimeout());
        Assertions.assertEquals("kzikfjawneaivxwc", model.monitoringPolicy().upgradeDomainTimeout());
        Assertions.assertEquals("lpcirelsf", model.upgradeReplicaSetCheckTimeout());
    }
}
