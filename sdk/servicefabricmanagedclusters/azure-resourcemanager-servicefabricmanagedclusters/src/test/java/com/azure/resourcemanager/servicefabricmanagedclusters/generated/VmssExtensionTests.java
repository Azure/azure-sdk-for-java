// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicefabricmanagedclusters.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.VmssExtension;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.VmssExtensionSetupOrder;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class VmssExtensionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VmssExtension model = BinaryData.fromString(
            "{\"name\":\"rjqc\",\"properties\":{\"publisher\":\"rgz\",\"type\":\"frl\",\"typeHandlerVersion\":\"zszrnwoiindfpw\",\"autoUpgradeMinorVersion\":true,\"settings\":\"datawbtlhflsjcdh\",\"protectedSettings\":\"datafjvfbgofeljagr\",\"forceUpdateTag\":\"qhl\",\"provisionAfterExtensions\":[\"iiiojnalghf\",\"vtvsexsowueluq\",\"hahhxvrhmzkwpj\",\"wws\"],\"provisioningState\":\"ghftqsxhqxujxuk\",\"enableAutomaticUpgrade\":false,\"setupOrder\":[\"BeforeSFRuntime\",\"BeforeSFRuntime\",\"BeforeSFRuntime\"]}}")
            .toObject(VmssExtension.class);
        Assertions.assertEquals("rjqc", model.name());
        Assertions.assertEquals("rgz", model.publisher());
        Assertions.assertEquals("frl", model.type());
        Assertions.assertEquals("zszrnwoiindfpw", model.typeHandlerVersion());
        Assertions.assertEquals(true, model.autoUpgradeMinorVersion());
        Assertions.assertEquals("qhl", model.forceUpdateTag());
        Assertions.assertEquals("iiiojnalghf", model.provisionAfterExtensions().get(0));
        Assertions.assertEquals(false, model.enableAutomaticUpgrade());
        Assertions.assertEquals(VmssExtensionSetupOrder.BEFORE_SFRUNTIME, model.setupOrder().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VmssExtension model = new VmssExtension().withName("rjqc")
            .withPublisher("rgz")
            .withType("frl")
            .withTypeHandlerVersion("zszrnwoiindfpw")
            .withAutoUpgradeMinorVersion(true)
            .withSettings("datawbtlhflsjcdh")
            .withProtectedSettings("datafjvfbgofeljagr")
            .withForceUpdateTag("qhl")
            .withProvisionAfterExtensions(Arrays.asList("iiiojnalghf", "vtvsexsowueluq", "hahhxvrhmzkwpj", "wws"))
            .withEnableAutomaticUpgrade(false)
            .withSetupOrder(Arrays.asList(VmssExtensionSetupOrder.BEFORE_SFRUNTIME,
                VmssExtensionSetupOrder.BEFORE_SFRUNTIME, VmssExtensionSetupOrder.BEFORE_SFRUNTIME));
        model = BinaryData.fromObject(model).toObject(VmssExtension.class);
        Assertions.assertEquals("rjqc", model.name());
        Assertions.assertEquals("rgz", model.publisher());
        Assertions.assertEquals("frl", model.type());
        Assertions.assertEquals("zszrnwoiindfpw", model.typeHandlerVersion());
        Assertions.assertEquals(true, model.autoUpgradeMinorVersion());
        Assertions.assertEquals("qhl", model.forceUpdateTag());
        Assertions.assertEquals("iiiojnalghf", model.provisionAfterExtensions().get(0));
        Assertions.assertEquals(false, model.enableAutomaticUpgrade());
        Assertions.assertEquals(VmssExtensionSetupOrder.BEFORE_SFRUNTIME, model.setupOrder().get(0));
    }
}
