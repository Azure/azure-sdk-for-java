// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicefabricmanagedclusters.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.VmssExtension;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.VmssExtensionSetupOrder;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class VmssExtensionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VmssExtension model = BinaryData.fromString(
            "{\"name\":\"ircgpikpz\",\"properties\":{\"publisher\":\"mejzanlfzxia\",\"type\":\"rmbzo\",\"typeHandlerVersion\":\"okixrjqcir\",\"autoUpgradeMinorVersion\":false,\"settings\":\"datarlazszrnw\",\"protectedSettings\":\"dataindfpwpjyl\",\"forceUpdateTag\":\"tlhflsjcdhszf\",\"provisionAfterExtensions\":[\"bgofeljag\",\"qmqhldvriii\",\"jnalghf\",\"vtvsexsowueluq\"],\"provisioningState\":\"ahhxvrh\",\"enableAutomaticUpgrade\":true,\"setupOrder\":[\"BeforeSFRuntime\",\"BeforeSFRuntime\",\"BeforeSFRuntime\"]}}")
            .toObject(VmssExtension.class);
        Assertions.assertEquals("ircgpikpz", model.name());
        Assertions.assertEquals("mejzanlfzxia", model.publisher());
        Assertions.assertEquals("rmbzo", model.type());
        Assertions.assertEquals("okixrjqcir", model.typeHandlerVersion());
        Assertions.assertEquals(false, model.autoUpgradeMinorVersion());
        Assertions.assertEquals("tlhflsjcdhszf", model.forceUpdateTag());
        Assertions.assertEquals("bgofeljag", model.provisionAfterExtensions().get(0));
        Assertions.assertEquals(true, model.enableAutomaticUpgrade());
        Assertions.assertEquals(VmssExtensionSetupOrder.BEFORE_SFRUNTIME, model.setupOrder().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VmssExtension model = new VmssExtension().withName("ircgpikpz")
            .withPublisher("mejzanlfzxia")
            .withType("rmbzo")
            .withTypeHandlerVersion("okixrjqcir")
            .withAutoUpgradeMinorVersion(false)
            .withSettings("datarlazszrnw")
            .withProtectedSettings("dataindfpwpjyl")
            .withForceUpdateTag("tlhflsjcdhszf")
            .withProvisionAfterExtensions(Arrays.asList("bgofeljag", "qmqhldvriii", "jnalghf", "vtvsexsowueluq"))
            .withEnableAutomaticUpgrade(true)
            .withSetupOrder(Arrays.asList(VmssExtensionSetupOrder.BEFORE_SFRUNTIME,
                VmssExtensionSetupOrder.BEFORE_SFRUNTIME, VmssExtensionSetupOrder.BEFORE_SFRUNTIME));
        model = BinaryData.fromObject(model).toObject(VmssExtension.class);
        Assertions.assertEquals("ircgpikpz", model.name());
        Assertions.assertEquals("mejzanlfzxia", model.publisher());
        Assertions.assertEquals("rmbzo", model.type());
        Assertions.assertEquals("okixrjqcir", model.typeHandlerVersion());
        Assertions.assertEquals(false, model.autoUpgradeMinorVersion());
        Assertions.assertEquals("tlhflsjcdhszf", model.forceUpdateTag());
        Assertions.assertEquals("bgofeljag", model.provisionAfterExtensions().get(0));
        Assertions.assertEquals(true, model.enableAutomaticUpgrade());
        Assertions.assertEquals(VmssExtensionSetupOrder.BEFORE_SFRUNTIME, model.setupOrder().get(0));
    }
}
