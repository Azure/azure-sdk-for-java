// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.servicefabricmanagedclusters.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.servicefabricmanagedclusters.ServiceFabricManagedClustersManager;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.FaultSimulation;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.FaultSimulationStatus;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.SfmcOperationStatus;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class NodeTypesListFaultSimulationMockTests {
    @Test
    public void testListFaultSimulation() throws Exception {
        String responseStr
            = "{\"value\":[{\"simulationId\":\"vclx\",\"status\":\"Done\",\"startTime\":\"2021-04-22T20:04:17Z\",\"endTime\":\"2021-07-17T14:44:19Z\",\"details\":{\"clusterId\":\"buiyji\",\"operationId\":\"zphdugneiknp\",\"nodeTypeFaultSimulation\":[{\"nodeTypeName\":\"jiuqhibtozi\",\"status\":\"Stopping\",\"operationId\":\"edmurrxxge\",\"operationStatus\":\"Canceled\"},{\"nodeTypeName\":\"vqylkmqpzoyhl\",\"status\":\"Done\",\"operationId\":\"wgcloxoebqinji\",\"operationStatus\":\"Failed\"}],\"parameters\":{\"faultKind\":\"FaultSimulationContent\",\"force\":true,\"constraints\":{\"expirationTime\":\"2021-10-27T23:36:18Z\"}}}}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ServiceFabricManagedClustersManager manager = ServiceFabricManagedClustersManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<FaultSimulation> response = manager.nodeTypes()
            .listFaultSimulation("gswvxwlmzqwm", "tx", "jmxmcuqud", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("vclx", response.iterator().next().simulationId());
        Assertions.assertEquals(FaultSimulationStatus.DONE, response.iterator().next().status());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-22T20:04:17Z"), response.iterator().next().startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-17T14:44:19Z"), response.iterator().next().endTime());
        Assertions.assertEquals("buiyji", response.iterator().next().details().clusterId());
        Assertions.assertEquals("zphdugneiknp", response.iterator().next().details().operationId());
        Assertions.assertEquals("jiuqhibtozi",
            response.iterator().next().details().nodeTypeFaultSimulation().get(0).nodeTypeName());
        Assertions.assertEquals(FaultSimulationStatus.STOPPING,
            response.iterator().next().details().nodeTypeFaultSimulation().get(0).status());
        Assertions.assertEquals("edmurrxxge",
            response.iterator().next().details().nodeTypeFaultSimulation().get(0).operationId());
        Assertions.assertEquals(SfmcOperationStatus.CANCELED,
            response.iterator().next().details().nodeTypeFaultSimulation().get(0).operationStatus());
        Assertions.assertTrue(response.iterator().next().details().parameters().force());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-27T23:36:18Z"),
            response.iterator().next().details().parameters().constraints().expirationTime());
    }
}
