// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.servicefabricmanagedclusters.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.servicefabricmanagedclusters.ServiceFabricManagedClustersManager;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.OperationListResult;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class OperationsListWithResponseMockTests {
    @Test
    public void testListWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"name\":\"gzslesjcbhernnti\",\"isDataAction\":false,\"display\":{\"provider\":\"vbquwr\",\"resource\":\"hwagohbuffkmrqe\",\"operation\":\"vhmxtdrjfu\",\"description\":\"coebjvewzcj\"},\"origin\":\"m\",\"nextLink\":\"pmguaadraufac\"},{\"name\":\"ahzovajjziuxxp\",\"isDataAction\":false,\"display\":{\"provider\":\"kulfg\",\"resource\":\"qubkw\",\"operation\":\"enr\",\"description\":\"utujba\"},\"origin\":\"juohminyflnorw\",\"nextLink\":\"uvwpklvxwmyg\"},{\"name\":\"pgpqchiszepnnb\",\"isDataAction\":false,\"display\":{\"provider\":\"ibbdaxconfoza\",\"resource\":\"rsukokwbqplh\",\"operation\":\"nuuepzlrp\",\"description\":\"zsoldwey\"},\"origin\":\"dunvmnnrwrbiorkt\",\"nextLink\":\"ywjhhgdnhx\"},{\"name\":\"ivfomiloxgg\",\"isDataAction\":false,\"display\":{\"provider\":\"ndieuzaofj\",\"resource\":\"vcyy\",\"operation\":\"fgdo\",\"description\":\"ubiipuipwoqonma\"},\"origin\":\"ekni\",\"nextLink\":\"hqvcimpevfgmblr\"}],\"nextLink\":\"lbywdxsm\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ServiceFabricManagedClustersManager manager = ServiceFabricManagedClustersManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        OperationListResult response
            = manager.operations().listWithResponse(com.azure.core.util.Context.NONE).getValue();

        Assertions.assertEquals("gzslesjcbhernnti", response.value().get(0).name());
        Assertions.assertFalse(response.value().get(0).isDataAction());
        Assertions.assertEquals("vbquwr", response.value().get(0).display().provider());
        Assertions.assertEquals("hwagohbuffkmrqe", response.value().get(0).display().resource());
        Assertions.assertEquals("vhmxtdrjfu", response.value().get(0).display().operation());
        Assertions.assertEquals("coebjvewzcj", response.value().get(0).display().description());
        Assertions.assertEquals("m", response.value().get(0).origin());
        Assertions.assertEquals("pmguaadraufac", response.value().get(0).nextLink());
        Assertions.assertEquals("lbywdxsm", response.nextLink());
    }
}
