// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.servicefabricmanagedclusters.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.servicefabricmanagedclusters.ServiceFabricManagedClustersManager;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.ManagedVMSizesResult;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ManagedUnsupportedVMSizesListWithResponseMockTests {
    @Test
    public void testListWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"size\":\"z\"},\"id\":\"qnmcjngzqdqx\",\"name\":\"jw\",\"type\":\"yfu\"},{\"properties\":{\"size\":\"svtui\"},\"id\":\"hajqglcfh\",\"name\":\"rqryxynqn\",\"type\":\"dpsovwxznptgo\"},{\"properties\":{\"size\":\"bbabp\"},\"id\":\"vf\",\"name\":\"kvntjlrigjkskyri\",\"type\":\"vzidsxwaab\"},{\"properties\":{\"size\":\"frygznmmax\"},\"id\":\"zkzobgopxlhslnel\",\"name\":\"eixynllxecwcroj\",\"type\":\"slhcawjutifd\"}],\"nextLink\":\"mvi\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ServiceFabricManagedClustersManager manager = ServiceFabricManagedClustersManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        ManagedVMSizesResult response
            = manager.managedUnsupportedVMSizes().listWithResponse("um", com.azure.core.util.Context.NONE).getValue();

        Assertions.assertEquals("mvi", response.nextLink());
    }
}
