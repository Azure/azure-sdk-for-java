// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicefabricmanagedclusters.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.servicefabricmanagedclusters.fluent.models.OperationResultInner;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.AvailableOperationDisplay;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.OperationListResult;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class OperationListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationListResult model = BinaryData.fromString(
            "{\"value\":[{\"name\":\"jhdgqggebdunyga\",\"isDataAction\":false,\"display\":{\"provider\":\"qfatpxllrxcyjm\",\"resource\":\"dsuvarmywdmjsjqb\",\"operation\":\"hyxxrwlycoduhpk\",\"description\":\"gymare\"},\"origin\":\"ajxq\",\"nextLink\":\"jhkycub\"}],\"nextLink\":\"dgssofwqmzqal\"}")
            .toObject(OperationListResult.class);
        Assertions.assertEquals("jhdgqggebdunyga", model.value().get(0).name());
        Assertions.assertEquals(false, model.value().get(0).isDataAction());
        Assertions.assertEquals("qfatpxllrxcyjm", model.value().get(0).display().provider());
        Assertions.assertEquals("dsuvarmywdmjsjqb", model.value().get(0).display().resource());
        Assertions.assertEquals("hyxxrwlycoduhpk", model.value().get(0).display().operation());
        Assertions.assertEquals("gymare", model.value().get(0).display().description());
        Assertions.assertEquals("ajxq", model.value().get(0).origin());
        Assertions.assertEquals("jhkycub", model.value().get(0).nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationListResult model
            = new OperationListResult().withValue(Arrays.asList(new OperationResultInner().withName("jhdgqggebdunyga")
                .withIsDataAction(false)
                .withDisplay(new AvailableOperationDisplay().withProvider("qfatpxllrxcyjm")
                    .withResource("dsuvarmywdmjsjqb")
                    .withOperation("hyxxrwlycoduhpk")
                    .withDescription("gymare"))
                .withOrigin("ajxq")
                .withNextLink("jhkycub")));
        model = BinaryData.fromObject(model).toObject(OperationListResult.class);
        Assertions.assertEquals("jhdgqggebdunyga", model.value().get(0).name());
        Assertions.assertEquals(false, model.value().get(0).isDataAction());
        Assertions.assertEquals("qfatpxllrxcyjm", model.value().get(0).display().provider());
        Assertions.assertEquals("dsuvarmywdmjsjqb", model.value().get(0).display().resource());
        Assertions.assertEquals("hyxxrwlycoduhpk", model.value().get(0).display().operation());
        Assertions.assertEquals("gymare", model.value().get(0).display().description());
        Assertions.assertEquals("ajxq", model.value().get(0).origin());
        Assertions.assertEquals("jhkycub", model.value().get(0).nextLink());
    }
}
