// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.servicefabricmanagedclusters.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.servicefabricmanagedclusters.implementation.models.ApplicationResourceList;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.FailureAction;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.ManagedIdentityType;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.RollingUpgradeMode;
import org.junit.jupiter.api.Assertions;

public final class ApplicationResourceListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ApplicationResourceList model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"managedIdentities\":[{\"name\":\"mocpc\",\"principalId\":\"shurzafbljjgpbto\"}],\"provisioningState\":\"jmkljavbqidtqajz\",\"version\":\"l\",\"parameters\":{\"rlkhbzhfepgzgq\":\"dj\"},\"upgradePolicy\":{\"applicationHealthPolicy\":{\"considerWarningAsError\":false,\"maxPercentUnhealthyDeployedApplications\":1678385538,\"defaultServiceTypeHealthPolicy\":{\"maxPercentUnhealthyServices\":1054800376,\"maxPercentUnhealthyPartitionsPerService\":1323879070,\"maxPercentUnhealthyReplicasPerPartition\":149734817},\"serviceTypeHealthPolicyMap\":{\"hhbcsglummajtjao\":{\"maxPercentUnhealthyServices\":1853852705,\"maxPercentUnhealthyPartitionsPerService\":812550328,\"maxPercentUnhealthyReplicasPerPartition\":1450066184},\"nbdxk\":{\"maxPercentUnhealthyServices\":1291201271,\"maxPercentUnhealthyPartitionsPerService\":1555681942,\"maxPercentUnhealthyReplicasPerPartition\":2016183317}}},\"forceRestart\":false,\"rollingUpgradeMonitoringPolicy\":{\"failureAction\":\"Manual\",\"healthCheckWaitDuration\":\"ajionpimexgstxg\",\"healthCheckStableDuration\":\"po\",\"healthCheckRetryTimeout\":\"gmaajrm\",\"upgradeTimeout\":\"djwzrlov\",\"upgradeDomainTimeout\":\"clwhijcoejctbz\"},\"instanceCloseDelayDuration\":93842203637959361,\"upgradeMode\":\"Monitored\",\"upgradeReplicaSetCheckTimeout\":4015230803094049478,\"recreateApplication\":true}},\"tags\":{\"c\":\"ukdkexxppofmxa\",\"toc\":\"jpgd\",\"hvpmoue\":\"j\"},\"identity\":{\"principalId\":\"zxibqeoj\",\"tenantId\":\"qbzvddntwnd\",\"type\":\"SystemAssigned, UserAssigned\",\"userAssignedIdentities\":{\"qkwpyeicxmqc\":{\"principalId\":\"npzaoq\",\"clientId\":\"hrhcffcyddglmjth\"},\"joghmewuama\":{\"principalId\":\"q\",\"clientId\":\"khixuigdtopbo\"},\"iotkftutqxl\":{\"principalId\":\"rzayv\",\"clientId\":\"pgvdf\"},\"tthzrvqd\":{\"principalId\":\"xlefgugnxkrx\",\"clientId\":\"mi\"}}},\"location\":\"bhj\",\"id\":\"igeho\",\"name\":\"fbowskanyk\",\"type\":\"zlcuiywgqywgndrv\"},{\"properties\":{\"managedIdentities\":[{\"name\":\"gpphrcgyn\",\"principalId\":\"ocpecfvmmco\"},{\"name\":\"fsxlzevgbmqjqa\",\"principalId\":\"c\"},{\"name\":\"pmivkwlzu\",\"principalId\":\"ccfwnfnbacfion\"},{\"name\":\"ebxetqgtzxdp\",\"principalId\":\"qbqqwxr\"}],\"provisioningState\":\"eallnwsubisnj\",\"version\":\"pmng\",\"parameters\":{\"aqw\":\"c\",\"xnj\":\"ochcbonqvpkvl\"},\"upgradePolicy\":{\"applicationHealthPolicy\":{\"considerWarningAsError\":true,\"maxPercentUnhealthyDeployedApplications\":1797788548,\"defaultServiceTypeHealthPolicy\":{\"maxPercentUnhealthyServices\":1902616098,\"maxPercentUnhealthyPartitionsPerService\":495940499,\"maxPercentUnhealthyReplicasPerPartition\":1864604101},\"serviceTypeHealthPolicyMap\":{\"yyien\":{\"maxPercentUnhealthyServices\":248230839,\"maxPercentUnhealthyPartitionsPerService\":1111118193,\"maxPercentUnhealthyReplicasPerPartition\":762343473},\"wtgrhpdjpj\":{\"maxPercentUnhealthyServices\":1285754335,\"maxPercentUnhealthyPartitionsPerService\":290307035,\"maxPercentUnhealthyReplicasPerPartition\":147839675}}},\"forceRestart\":true,\"rollingUpgradeMonitoringPolicy\":{\"failureAction\":\"Manual\",\"healthCheckWaitDuration\":\"azjpqyegualhbxxh\",\"healthCheckStableDuration\":\"jj\",\"healthCheckRetryTimeout\":\"zvdudgwdslfhotwm\",\"upgradeTimeout\":\"ynpwlbj\",\"upgradeDomainTimeout\":\"pgacftadehxnlty\"},\"instanceCloseDelayDuration\":3166263548175677909,\"upgradeMode\":\"Monitored\",\"upgradeReplicaSetCheckTimeout\":5708772881134087692,\"recreateApplication\":false}},\"tags\":{\"xzdmohctb\":\"dejbavo\"},\"identity\":{\"principalId\":\"dwxdndnv\",\"tenantId\":\"gujjugwdkcglh\",\"type\":\"SystemAssigned\",\"userAssignedIdentities\":{\"kh\":{\"principalId\":\"yggdtjixh\",\"clientId\":\"uofqwe\"},\"cibvyvdcsitynn\":{\"principalId\":\"n\",\"clientId\":\"fyexfwhy\"},\"c\":{\"principalId\":\"mdectehfiqscjey\",\"clientId\":\"hezrkgq\"}}},\"location\":\"efovgmk\",\"id\":\"leyyvx\",\"name\":\"qjpkcattpngjcrc\",\"type\":\"zsqpjhvmdajvny\"}],\"nextLink\":\"unqecanoae\"}")
            .toObject(ApplicationResourceList.class);
        Assertions.assertEquals("ukdkexxppofmxa", model.value().get(0).tags().get("c"));
        Assertions.assertEquals(ManagedIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED,
            model.value().get(0).identity().type());
        Assertions.assertEquals("bhj", model.value().get(0).location());
        Assertions.assertEquals("mocpc", model.value().get(0).managedIdentities().get(0).name());
        Assertions.assertEquals("shurzafbljjgpbto", model.value().get(0).managedIdentities().get(0).principalId());
        Assertions.assertEquals("l", model.value().get(0).version());
        Assertions.assertEquals("dj", model.value().get(0).parameters().get("rlkhbzhfepgzgq"));
        Assertions.assertFalse(model.value().get(0).upgradePolicy().applicationHealthPolicy().considerWarningAsError());
        Assertions.assertEquals(1678385538,
            model.value().get(0).upgradePolicy().applicationHealthPolicy().maxPercentUnhealthyDeployedApplications());
        Assertions.assertEquals(1054800376,
            model.value()
                .get(0)
                .upgradePolicy()
                .applicationHealthPolicy()
                .defaultServiceTypeHealthPolicy()
                .maxPercentUnhealthyServices());
        Assertions.assertEquals(1323879070,
            model.value()
                .get(0)
                .upgradePolicy()
                .applicationHealthPolicy()
                .defaultServiceTypeHealthPolicy()
                .maxPercentUnhealthyPartitionsPerService());
        Assertions.assertEquals(149734817,
            model.value()
                .get(0)
                .upgradePolicy()
                .applicationHealthPolicy()
                .defaultServiceTypeHealthPolicy()
                .maxPercentUnhealthyReplicasPerPartition());
        Assertions.assertEquals(1853852705,
            model.value()
                .get(0)
                .upgradePolicy()
                .applicationHealthPolicy()
                .serviceTypeHealthPolicyMap()
                .get("hhbcsglummajtjao")
                .maxPercentUnhealthyServices());
        Assertions.assertEquals(812550328,
            model.value()
                .get(0)
                .upgradePolicy()
                .applicationHealthPolicy()
                .serviceTypeHealthPolicyMap()
                .get("hhbcsglummajtjao")
                .maxPercentUnhealthyPartitionsPerService());
        Assertions.assertEquals(1450066184,
            model.value()
                .get(0)
                .upgradePolicy()
                .applicationHealthPolicy()
                .serviceTypeHealthPolicyMap()
                .get("hhbcsglummajtjao")
                .maxPercentUnhealthyReplicasPerPartition());
        Assertions.assertFalse(model.value().get(0).upgradePolicy().forceRestart());
        Assertions.assertEquals(FailureAction.MANUAL,
            model.value().get(0).upgradePolicy().rollingUpgradeMonitoringPolicy().failureAction());
        Assertions.assertEquals("ajionpimexgstxg",
            model.value().get(0).upgradePolicy().rollingUpgradeMonitoringPolicy().healthCheckWaitDuration());
        Assertions.assertEquals("po",
            model.value().get(0).upgradePolicy().rollingUpgradeMonitoringPolicy().healthCheckStableDuration());
        Assertions.assertEquals("gmaajrm",
            model.value().get(0).upgradePolicy().rollingUpgradeMonitoringPolicy().healthCheckRetryTimeout());
        Assertions.assertEquals("djwzrlov",
            model.value().get(0).upgradePolicy().rollingUpgradeMonitoringPolicy().upgradeTimeout());
        Assertions.assertEquals("clwhijcoejctbz",
            model.value().get(0).upgradePolicy().rollingUpgradeMonitoringPolicy().upgradeDomainTimeout());
        Assertions.assertEquals(93842203637959361L, model.value().get(0).upgradePolicy().instanceCloseDelayDuration());
        Assertions.assertEquals(RollingUpgradeMode.MONITORED, model.value().get(0).upgradePolicy().upgradeMode());
        Assertions.assertEquals(4015230803094049478L,
            model.value().get(0).upgradePolicy().upgradeReplicaSetCheckTimeout());
        Assertions.assertTrue(model.value().get(0).upgradePolicy().recreateApplication());
        Assertions.assertEquals("unqecanoae", model.nextLink());
    }
}
