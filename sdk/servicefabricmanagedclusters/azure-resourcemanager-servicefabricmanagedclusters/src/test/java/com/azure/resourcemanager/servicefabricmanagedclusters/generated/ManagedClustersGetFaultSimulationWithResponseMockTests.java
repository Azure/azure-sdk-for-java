// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.servicefabricmanagedclusters.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.servicefabricmanagedclusters.ServiceFabricManagedClustersManager;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.FaultSimulation;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.FaultSimulationIdContent;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.FaultSimulationStatus;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.SfmcOperationStatus;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ManagedClustersGetFaultSimulationWithResponseMockTests {
    @Test
    public void testGetFaultSimulationWithResponse() throws Exception {
        String responseStr
            = "{\"simulationId\":\"rqjb\",\"status\":\"Active\",\"startTime\":\"2021-01-25T09:16:29Z\",\"endTime\":\"2021-01-05T10:30:14Z\",\"details\":{\"clusterId\":\"afhonqj\",\"operationId\":\"eickpz\",\"nodeTypeFaultSimulation\":[{\"nodeTypeName\":\"pmxelnwcltyje\",\"status\":\"Stopping\",\"operationId\":\"mlfmkqs\",\"operationStatus\":\"Created\"}],\"parameters\":{\"faultKind\":\"FaultSimulationContent\",\"force\":true,\"constraints\":{\"expirationTime\":\"2021-07-30T21:11:41Z\"}}}}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ServiceFabricManagedClustersManager manager = ServiceFabricManagedClustersManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        FaultSimulation response = manager.managedClusters()
            .getFaultSimulationWithResponse("xecwcro", "phslhcawjutifdw",
                new FaultSimulationIdContent().withSimulationId("mvi"), com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("rqjb", response.simulationId());
        Assertions.assertEquals(FaultSimulationStatus.ACTIVE, response.status());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-25T09:16:29Z"), response.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-05T10:30:14Z"), response.endTime());
        Assertions.assertEquals("afhonqj", response.details().clusterId());
        Assertions.assertEquals("eickpz", response.details().operationId());
        Assertions.assertEquals("pmxelnwcltyje", response.details().nodeTypeFaultSimulation().get(0).nodeTypeName());
        Assertions.assertEquals(FaultSimulationStatus.STOPPING,
            response.details().nodeTypeFaultSimulation().get(0).status());
        Assertions.assertEquals("mlfmkqs", response.details().nodeTypeFaultSimulation().get(0).operationId());
        Assertions.assertEquals(SfmcOperationStatus.CREATED,
            response.details().nodeTypeFaultSimulation().get(0).operationStatus());
        Assertions.assertTrue(response.details().parameters().force());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-30T21:11:41Z"),
            response.details().parameters().constraints().expirationTime());
    }
}
