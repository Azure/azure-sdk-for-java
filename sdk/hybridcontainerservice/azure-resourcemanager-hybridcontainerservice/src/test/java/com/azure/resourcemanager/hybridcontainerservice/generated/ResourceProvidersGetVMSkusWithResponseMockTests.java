// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcontainerservice.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.hybridcontainerservice.HybridContainerServiceManager;
import com.azure.resourcemanager.hybridcontainerservice.models.ExtendedLocationTypes;
import com.azure.resourcemanager.hybridcontainerservice.models.VmSkuProfile;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ResourceProvidersGetVMSkusWithResponseMockTests {
    @Test
    public void testGetVMSkusWithResponse() throws Exception {
        String responseStr
            = "{\"extendedLocation\":{\"type\":\"CustomLocation\",\"name\":\"dphqamv\"},\"properties\":{\"provisioningState\":\"Pending\",\"values\":[{\"resourceType\":\"cvtbv\",\"capabilities\":[{},{},{}],\"name\":\"mtnvyq\",\"tier\":\"tkzwpcnpwzc\",\"size\":\"esgvvsccyaj\"},{\"resourceType\":\"qfhwyg\",\"capabilities\":[{},{},{}],\"name\":\"nk\",\"tier\":\"usemdwzrmuhap\",\"size\":\"qdpsqxqvpsvu\"},{\"resourceType\":\"mgccelvezrypq\",\"capabilities\":[{}],\"name\":\"okerqwkyhkobop\",\"tier\":\"edkowepbqpcrfk\",\"size\":\"ccsnjvcdwxlpq\"},{\"resourceType\":\"ftnkhtj\",\"capabilities\":[{}],\"name\":\"gwfqatmt\",\"tier\":\"tmdvypgikdgs\",\"size\":\"w\"}]},\"id\":\"irryuzhlh\",\"name\":\"joqrvqqaatj\",\"type\":\"nrvgoupmfiibfgg\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HybridContainerServiceManager manager = HybridContainerServiceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        VmSkuProfile response
            = manager.resourceProviders().getVMSkusWithResponse("o", com.azure.core.util.Context.NONE).getValue();

        Assertions.assertEquals(ExtendedLocationTypes.CUSTOM_LOCATION, response.extendedLocation().type());
        Assertions.assertEquals("dphqamv", response.extendedLocation().name());
    }
}
