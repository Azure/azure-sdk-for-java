// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcontainerservice.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridcontainerservice.models.AddonProfiles;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class AddonProfilesTests {
    @Test
    public void testDeserialize() {
        AddonProfiles model =
            BinaryData
                .fromString(
                    "{\"config\":{\"fgibmadgakeq\":\"ulzndlikwyqk\",\"qedqytbciqfoufl\":\"rxybz\",\"glougpbk\":\"mnkzsmod\"},\"enabled\":true}")
                .toObject(AddonProfiles.class);
        Assertions.assertEquals("ulzndlikwyqk", model.config().get("fgibmadgakeq"));
        Assertions.assertEquals(true, model.enabled());
    }

    @Test
    public void testSerialize() {
        AddonProfiles model =
            new AddonProfiles()
                .withConfig(mapOf("fgibmadgakeq", "ulzndlikwyqk", "qedqytbciqfoufl", "rxybz", "glougpbk", "mnkzsmod"))
                .withEnabled(true);
        model = BinaryData.fromObject(model).toObject(AddonProfiles.class);
        Assertions.assertEquals("ulzndlikwyqk", model.config().get("fgibmadgakeq"));
        Assertions.assertEquals(true, model.enabled());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
