// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcontainerservice.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridcontainerservice.models.AddonPhase;
import com.azure.resourcemanager.hybridcontainerservice.models.AddonStatusProfile;
import org.junit.jupiter.api.Assertions;

public final class AddonStatusProfileTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AddonStatusProfile model = BinaryData.fromString(
            "{\"name\":\"czwlokjyem\",\"phase\":\"provisioning {MSICertificateDownloaded}\",\"ready\":true,\"errorMessage\":\"joxzjnchgejspodm\"}")
            .toObject(AddonStatusProfile.class);
        Assertions.assertEquals("czwlokjyem", model.name());
        Assertions.assertEquals(AddonPhase.PROVISIONING_MSICERTIFICATE_DOWNLOADED, model.phase());
        Assertions.assertEquals(true, model.ready());
        Assertions.assertEquals("joxzjnchgejspodm", model.errorMessage());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AddonStatusProfile model = new AddonStatusProfile().withName("czwlokjyem")
            .withPhase(AddonPhase.PROVISIONING_MSICERTIFICATE_DOWNLOADED).withReady(true)
            .withErrorMessage("joxzjnchgejspodm");
        model = BinaryData.fromObject(model).toObject(AddonStatusProfile.class);
        Assertions.assertEquals("czwlokjyem", model.name());
        Assertions.assertEquals(AddonPhase.PROVISIONING_MSICERTIFICATE_DOWNLOADED, model.phase());
        Assertions.assertEquals(true, model.ready());
        Assertions.assertEquals("joxzjnchgejspodm", model.errorMessage());
    }
}
