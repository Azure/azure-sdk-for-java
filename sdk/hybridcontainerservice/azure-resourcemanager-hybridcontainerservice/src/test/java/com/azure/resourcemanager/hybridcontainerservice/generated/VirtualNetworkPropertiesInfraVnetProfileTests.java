// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcontainerservice.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridcontainerservice.models.VirtualNetworkPropertiesInfraVnetProfile;
import com.azure.resourcemanager.hybridcontainerservice.models.VirtualNetworkPropertiesInfraVnetProfileHci;
import com.azure.resourcemanager.hybridcontainerservice.models.VirtualNetworkPropertiesInfraVnetProfileVmware;
import org.junit.jupiter.api.Assertions;

public final class VirtualNetworkPropertiesInfraVnetProfileTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VirtualNetworkPropertiesInfraVnetProfile model = BinaryData.fromString(
            "{\"hci\":{\"mocGroup\":\"d\",\"mocLocation\":\"ygdvwv\",\"mocVnetName\":\"iohgwxrtfud\"},\"vmware\":{\"segmentName\":\"xg\"}}")
            .toObject(VirtualNetworkPropertiesInfraVnetProfile.class);
        Assertions.assertEquals("d", model.hci().mocGroup());
        Assertions.assertEquals("ygdvwv", model.hci().mocLocation());
        Assertions.assertEquals("iohgwxrtfud", model.hci().mocVnetName());
        Assertions.assertEquals("xg", model.vmware().segmentName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VirtualNetworkPropertiesInfraVnetProfile model = new VirtualNetworkPropertiesInfraVnetProfile()
            .withHci(new VirtualNetworkPropertiesInfraVnetProfileHci().withMocGroup("d").withMocLocation("ygdvwv")
                .withMocVnetName("iohgwxrtfud"))
            .withVmware(new VirtualNetworkPropertiesInfraVnetProfileVmware().withSegmentName("xg"));
        model = BinaryData.fromObject(model).toObject(VirtualNetworkPropertiesInfraVnetProfile.class);
        Assertions.assertEquals("d", model.hci().mocGroup());
        Assertions.assertEquals("ygdvwv", model.hci().mocLocation());
        Assertions.assertEquals("iohgwxrtfud", model.hci().mocVnetName());
        Assertions.assertEquals("xg", model.vmware().segmentName());
    }
}
