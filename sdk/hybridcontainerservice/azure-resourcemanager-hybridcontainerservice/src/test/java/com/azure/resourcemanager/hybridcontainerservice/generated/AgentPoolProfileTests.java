// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcontainerservice.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridcontainerservice.models.AgentPoolProfile;
import com.azure.resourcemanager.hybridcontainerservice.models.OsType;
import com.azure.resourcemanager.hybridcontainerservice.models.Ossku;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AgentPoolProfileTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AgentPoolProfile model = BinaryData.fromString(
            "{\"availabilityZones\":[\"gdf\",\"glzlhjxrifkwmrv\",\"tsizntocipaoua\"],\"osType\":\"Windows\",\"osSKU\":\"Windows2022\",\"nodeImageVersion\":\"mpoyfd\"}")
            .toObject(AgentPoolProfile.class);
        Assertions.assertEquals("gdf", model.availabilityZones().get(0));
        Assertions.assertEquals(OsType.WINDOWS, model.osType());
        Assertions.assertEquals(Ossku.WINDOWS2022, model.osSku());
        Assertions.assertEquals("mpoyfd", model.nodeImageVersion());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AgentPoolProfile model
            = new AgentPoolProfile().withAvailabilityZones(Arrays.asList("gdf", "glzlhjxrifkwmrv", "tsizntocipaoua"))
                .withOsType(OsType.WINDOWS).withOsSku(Ossku.WINDOWS2022).withNodeImageVersion("mpoyfd");
        model = BinaryData.fromObject(model).toObject(AgentPoolProfile.class);
        Assertions.assertEquals("gdf", model.availabilityZones().get(0));
        Assertions.assertEquals(OsType.WINDOWS, model.osType());
        Assertions.assertEquals(Ossku.WINDOWS2022, model.osSku());
        Assertions.assertEquals("mpoyfd", model.nodeImageVersion());
    }
}
