// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcontainerservice.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.hybridcontainerservice.HybridContainerServiceManager;
import com.azure.resourcemanager.hybridcontainerservice.models.ExtendedLocationTypes;
import com.azure.resourcemanager.hybridcontainerservice.models.KubernetesVersionProfile;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ResourceProvidersGetKubernetesVersionsWithResponseMockTests {
    @Test
    public void testGetKubernetesVersionsWithResponse() throws Exception {
        String responseStr
            = "{\"extendedLocation\":{\"type\":\"CustomLocation\",\"name\":\"htwdwrftswibyrcd\"},\"properties\":{\"provisioningState\":\"Pending\",\"values\":[{\"version\":\"p\",\"isPreview\":false,\"patchVersions\":{\"wity\":{},\"hevxcced\":{},\"pnmdyodnwzxltjcv\":{}}},{\"version\":\"ltiugcxnavv\",\"isPreview\":false,\"patchVersions\":{\"y\":{},\"unyowxwl\":{}}},{\"version\":\"jrkvfgbvfvpdbo\",\"isPreview\":true,\"patchVersions\":{\"sjq\":{},\"hkr\":{}}}]},\"id\":\"bdeibqipqk\",\"name\":\"hvxndzwmkrefajpj\",\"type\":\"rwkq\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HybridContainerServiceManager manager = HybridContainerServiceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        KubernetesVersionProfile response = manager.resourceProviders()
            .getKubernetesVersionsWithResponse("vu", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(ExtendedLocationTypes.CUSTOM_LOCATION, response.extendedLocation().type());
        Assertions.assertEquals("htwdwrftswibyrcd", response.extendedLocation().name());
    }
}
