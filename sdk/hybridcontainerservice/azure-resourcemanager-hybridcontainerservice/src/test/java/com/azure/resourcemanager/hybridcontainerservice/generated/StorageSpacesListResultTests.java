// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcontainerservice.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridcontainerservice.fluent.models.StorageSpacesInner;
import com.azure.resourcemanager.hybridcontainerservice.models.StorageSpacesExtendedLocation;
import com.azure.resourcemanager.hybridcontainerservice.models.StorageSpacesListResult;
import com.azure.resourcemanager.hybridcontainerservice.models.StorageSpacesProperties;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class StorageSpacesListResultTests {
    @Test
    public void testDeserialize() {
        StorageSpacesListResult model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"provisioningState\":\"Failed\"},\"extendedLocation\":{\"type\":\"zxiavrm\",\"name\":\"onok\"},\"location\":\"xrjqcirgzpfrlazs\",\"tags\":{\"wp\":\"woiindf\",\"jvfbgofelja\":\"ylwbtlhflsjcdhsz\"},\"id\":\"rqmq\",\"name\":\"ldvriiiojnalghfk\",\"type\":\"tvsexsowuel\"},{\"properties\":{\"provisioningState\":\"Updating\"},\"extendedLocation\":{\"type\":\"hmzk\",\"name\":\"jgwwspughftq\"},\"location\":\"xhqxujxukndxdigr\",\"tags\":{\"fi\":\"ufzdmsyq\",\"phoszqz\":\"whbotzingamv\",\"kfwynw\":\"dphqamv\",\"tnvyqiatkzwp\":\"vtbvkayh\"},\"id\":\"npwzcjaes\",\"name\":\"vvsccyajguq\",\"type\":\"hwyg\"},{\"properties\":{\"provisioningState\":\"Failed\"},\"extendedLocation\":{\"type\":\"emdwzrmuhapfc\",\"name\":\"psqxq\"},\"location\":\"psvuoymgc\",\"tags\":{\"erqwkyhkobopg\":\"vezrypqlmfeo\"},\"id\":\"edkowepbqpcrfk\",\"name\":\"wccsnjvcdwxlpqek\",\"type\":\"tn\"}],\"nextLink\":\"tjsyin\"}")
                .toObject(StorageSpacesListResult.class);
        Assertions.assertEquals("xrjqcirgzpfrlazs", model.value().get(0).location());
        Assertions.assertEquals("woiindf", model.value().get(0).tags().get("wp"));
        Assertions.assertEquals("zxiavrm", model.value().get(0).extendedLocation().type());
        Assertions.assertEquals("onok", model.value().get(0).extendedLocation().name());
        Assertions.assertEquals("tjsyin", model.nextLink());
    }

    @Test
    public void testSerialize() {
        StorageSpacesListResult model =
            new StorageSpacesListResult()
                .withValue(
                    Arrays
                        .asList(
                            new StorageSpacesInner()
                                .withLocation("xrjqcirgzpfrlazs")
                                .withTags(mapOf("wp", "woiindf", "jvfbgofelja", "ylwbtlhflsjcdhsz"))
                                .withProperties(new StorageSpacesProperties())
                                .withExtendedLocation(
                                    new StorageSpacesExtendedLocation().withType("zxiavrm").withName("onok")),
                            new StorageSpacesInner()
                                .withLocation("xhqxujxukndxdigr")
                                .withTags(
                                    mapOf(
                                        "fi",
                                        "ufzdmsyq",
                                        "phoszqz",
                                        "whbotzingamv",
                                        "kfwynw",
                                        "dphqamv",
                                        "tnvyqiatkzwp",
                                        "vtbvkayh"))
                                .withProperties(new StorageSpacesProperties())
                                .withExtendedLocation(
                                    new StorageSpacesExtendedLocation().withType("hmzk").withName("jgwwspughftq")),
                            new StorageSpacesInner()
                                .withLocation("psvuoymgc")
                                .withTags(mapOf("erqwkyhkobopg", "vezrypqlmfeo"))
                                .withProperties(new StorageSpacesProperties())
                                .withExtendedLocation(
                                    new StorageSpacesExtendedLocation().withType("emdwzrmuhapfc").withName("psqxq"))))
                .withNextLink("tjsyin");
        model = BinaryData.fromObject(model).toObject(StorageSpacesListResult.class);
        Assertions.assertEquals("xrjqcirgzpfrlazs", model.value().get(0).location());
        Assertions.assertEquals("woiindf", model.value().get(0).tags().get("wp"));
        Assertions.assertEquals("zxiavrm", model.value().get(0).extendedLocation().type());
        Assertions.assertEquals("onok", model.value().get(0).extendedLocation().name());
        Assertions.assertEquals("tjsyin", model.nextLink());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
