// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcontainerservice.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridcontainerservice.models.NamedAgentPoolProfile;
import com.azure.resourcemanager.hybridcontainerservice.models.OsType;
import com.azure.resourcemanager.hybridcontainerservice.models.Ossku;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NamedAgentPoolProfileTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NamedAgentPoolProfile model = BinaryData.fromString(
            "{\"count\":1439902652,\"vmSize\":\"qijgkd\",\"name\":\"pazlobcufpdz\",\"availabilityZones\":[\"t\",\"qqjnqgl\"],\"osType\":\"Windows\",\"osSKU\":\"Windows2019\",\"nodeImageVersion\":\"ooojywifsqe\"}")
            .toObject(NamedAgentPoolProfile.class);
        Assertions.assertEquals("t", model.availabilityZones().get(0));
        Assertions.assertEquals(OsType.WINDOWS, model.osType());
        Assertions.assertEquals(Ossku.WINDOWS2019, model.osSku());
        Assertions.assertEquals("ooojywifsqe", model.nodeImageVersion());
        Assertions.assertEquals(1439902652, model.count());
        Assertions.assertEquals("qijgkd", model.vmSize());
        Assertions.assertEquals("pazlobcufpdz", model.name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NamedAgentPoolProfile model = new NamedAgentPoolProfile().withAvailabilityZones(Arrays.asList("t", "qqjnqgl"))
            .withOsType(OsType.WINDOWS).withOsSku(Ossku.WINDOWS2019).withNodeImageVersion("ooojywifsqe")
            .withCount(1439902652).withVmSize("qijgkd").withName("pazlobcufpdz");
        model = BinaryData.fromObject(model).toObject(NamedAgentPoolProfile.class);
        Assertions.assertEquals("t", model.availabilityZones().get(0));
        Assertions.assertEquals(OsType.WINDOWS, model.osType());
        Assertions.assertEquals(Ossku.WINDOWS2019, model.osSku());
        Assertions.assertEquals("ooojywifsqe", model.nodeImageVersion());
        Assertions.assertEquals(1439902652, model.count());
        Assertions.assertEquals("qijgkd", model.vmSize());
        Assertions.assertEquals("pazlobcufpdz", model.name());
    }
}
