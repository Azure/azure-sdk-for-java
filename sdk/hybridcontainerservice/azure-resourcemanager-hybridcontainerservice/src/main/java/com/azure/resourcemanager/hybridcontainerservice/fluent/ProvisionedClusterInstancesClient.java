// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcontainerservice.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.hybridcontainerservice.fluent.models.ListCredentialResponseInner;
import com.azure.resourcemanager.hybridcontainerservice.fluent.models.ProvisionedClusterUpgradeProfileInner;
import com.azure.resourcemanager.hybridcontainerservice.fluent.models.ProvisionedClustersInner;

/**
 * An instance of this class provides access to all the operations defined in ProvisionedClusterInstancesClient.
 */
public interface ProvisionedClusterInstancesClient {
    /**
     * Gets the provisioned cluster instance
     * 
     * Gets the Hybrid AKS provisioned cluster instance.
     * 
     * @param connectedClusterResourceUri The fully qualified Azure Resource manager identifier of the connected cluster
     * resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Hybrid AKS provisioned cluster instance along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ProvisionedClustersInner> getWithResponse(String connectedClusterResourceUri, Context context);

    /**
     * Gets the provisioned cluster instance
     * 
     * Gets the Hybrid AKS provisioned cluster instance.
     * 
     * @param connectedClusterResourceUri The fully qualified Azure Resource manager identifier of the connected cluster
     * resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Hybrid AKS provisioned cluster instance.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ProvisionedClustersInner get(String connectedClusterResourceUri);

    /**
     * Creates the provisioned cluster instance
     * 
     * Creates the Hybrid AKS provisioned cluster instance.
     * 
     * @param connectedClusterResourceUri The fully qualified Azure Resource manager identifier of the connected cluster
     * resource.
     * @param provisionedClusterInstance The provisionedClusterInstances resource definition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the provisionedClusterInstances resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ProvisionedClustersInner>, ProvisionedClustersInner>
        beginCreateOrUpdate(String connectedClusterResourceUri, ProvisionedClustersInner provisionedClusterInstance);

    /**
     * Creates the provisioned cluster instance
     * 
     * Creates the Hybrid AKS provisioned cluster instance.
     * 
     * @param connectedClusterResourceUri The fully qualified Azure Resource manager identifier of the connected cluster
     * resource.
     * @param provisionedClusterInstance The provisionedClusterInstances resource definition.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the provisionedClusterInstances resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ProvisionedClustersInner>, ProvisionedClustersInner> beginCreateOrUpdate(
        String connectedClusterResourceUri, ProvisionedClustersInner provisionedClusterInstance, Context context);

    /**
     * Creates the provisioned cluster instance
     * 
     * Creates the Hybrid AKS provisioned cluster instance.
     * 
     * @param connectedClusterResourceUri The fully qualified Azure Resource manager identifier of the connected cluster
     * resource.
     * @param provisionedClusterInstance The provisionedClusterInstances resource definition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the provisionedClusterInstances resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ProvisionedClustersInner createOrUpdate(String connectedClusterResourceUri,
        ProvisionedClustersInner provisionedClusterInstance);

    /**
     * Creates the provisioned cluster instance
     * 
     * Creates the Hybrid AKS provisioned cluster instance.
     * 
     * @param connectedClusterResourceUri The fully qualified Azure Resource manager identifier of the connected cluster
     * resource.
     * @param provisionedClusterInstance The provisionedClusterInstances resource definition.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the provisionedClusterInstances resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ProvisionedClustersInner createOrUpdate(String connectedClusterResourceUri,
        ProvisionedClustersInner provisionedClusterInstance, Context context);

    /**
     * Deletes the provisioned cluster instance
     * 
     * Deletes the Hybrid AKS provisioned cluster instance.
     * 
     * @param connectedClusterResourceUri The fully qualified Azure Resource manager identifier of the connected cluster
     * resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String connectedClusterResourceUri);

    /**
     * Deletes the provisioned cluster instance
     * 
     * Deletes the Hybrid AKS provisioned cluster instance.
     * 
     * @param connectedClusterResourceUri The fully qualified Azure Resource manager identifier of the connected cluster
     * resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String connectedClusterResourceUri, Context context);

    /**
     * Deletes the provisioned cluster instance
     * 
     * Deletes the Hybrid AKS provisioned cluster instance.
     * 
     * @param connectedClusterResourceUri The fully qualified Azure Resource manager identifier of the connected cluster
     * resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String connectedClusterResourceUri);

    /**
     * Deletes the provisioned cluster instance
     * 
     * Deletes the Hybrid AKS provisioned cluster instance.
     * 
     * @param connectedClusterResourceUri The fully qualified Azure Resource manager identifier of the connected cluster
     * resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String connectedClusterResourceUri, Context context);

    /**
     * Gets the provisioned cluster instances associated with the connected cluster
     * 
     * Gets the Hybrid AKS provisioned cluster instances associated with the connected cluster.
     * 
     * @param connectedClusterResourceUri The fully qualified Azure Resource manager identifier of the connected cluster
     * resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Hybrid AKS provisioned cluster instances associated with the connected cluster as paginated response
     * with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ProvisionedClustersInner> list(String connectedClusterResourceUri);

    /**
     * Gets the provisioned cluster instances associated with the connected cluster
     * 
     * Gets the Hybrid AKS provisioned cluster instances associated with the connected cluster.
     * 
     * @param connectedClusterResourceUri The fully qualified Azure Resource manager identifier of the connected cluster
     * resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Hybrid AKS provisioned cluster instances associated with the connected cluster as paginated response
     * with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ProvisionedClustersInner> list(String connectedClusterResourceUri, Context context);

    /**
     * Gets the upgrade profile of a provisioned cluster instance.
     * 
     * @param connectedClusterResourceUri The fully qualified Azure Resource manager identifier of the connected cluster
     * resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the upgrade profile of a provisioned cluster instance along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ProvisionedClusterUpgradeProfileInner> getUpgradeProfileWithResponse(String connectedClusterResourceUri,
        Context context);

    /**
     * Gets the upgrade profile of a provisioned cluster instance.
     * 
     * @param connectedClusterResourceUri The fully qualified Azure Resource manager identifier of the connected cluster
     * resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the upgrade profile of a provisioned cluster instance.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ProvisionedClusterUpgradeProfileInner getUpgradeProfile(String connectedClusterResourceUri);

    /**
     * Listing the AAD user credentials of a provisioned cluster instance used only in direct mode.
     * 
     * Lists the AAD user credentials of a provisioned cluster instance used only in direct mode.
     * 
     * @param connectedClusterResourceUri The fully qualified Azure Resource manager identifier of the connected cluster
     * resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the list kubeconfig result response.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ListCredentialResponseInner>, ListCredentialResponseInner>
        beginListUserKubeconfig(String connectedClusterResourceUri);

    /**
     * Listing the AAD user credentials of a provisioned cluster instance used only in direct mode.
     * 
     * Lists the AAD user credentials of a provisioned cluster instance used only in direct mode.
     * 
     * @param connectedClusterResourceUri The fully qualified Azure Resource manager identifier of the connected cluster
     * resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the list kubeconfig result response.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ListCredentialResponseInner>, ListCredentialResponseInner>
        beginListUserKubeconfig(String connectedClusterResourceUri, Context context);

    /**
     * Listing the AAD user credentials of a provisioned cluster instance used only in direct mode.
     * 
     * Lists the AAD user credentials of a provisioned cluster instance used only in direct mode.
     * 
     * @param connectedClusterResourceUri The fully qualified Azure Resource manager identifier of the connected cluster
     * resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list kubeconfig result response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ListCredentialResponseInner listUserKubeconfig(String connectedClusterResourceUri);

    /**
     * Listing the AAD user credentials of a provisioned cluster instance used only in direct mode.
     * 
     * Lists the AAD user credentials of a provisioned cluster instance used only in direct mode.
     * 
     * @param connectedClusterResourceUri The fully qualified Azure Resource manager identifier of the connected cluster
     * resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list kubeconfig result response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ListCredentialResponseInner listUserKubeconfig(String connectedClusterResourceUri, Context context);

    /**
     * Listing the admin credentials of a provisioned cluster instance used only in direct mode.
     * 
     * Lists the admin credentials of a provisioned cluster instance used only in direct mode.
     * 
     * @param connectedClusterResourceUri The fully qualified Azure Resource manager identifier of the connected cluster
     * resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the list kubeconfig result response.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ListCredentialResponseInner>, ListCredentialResponseInner>
        beginListAdminKubeconfig(String connectedClusterResourceUri);

    /**
     * Listing the admin credentials of a provisioned cluster instance used only in direct mode.
     * 
     * Lists the admin credentials of a provisioned cluster instance used only in direct mode.
     * 
     * @param connectedClusterResourceUri The fully qualified Azure Resource manager identifier of the connected cluster
     * resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the list kubeconfig result response.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ListCredentialResponseInner>, ListCredentialResponseInner>
        beginListAdminKubeconfig(String connectedClusterResourceUri, Context context);

    /**
     * Listing the admin credentials of a provisioned cluster instance used only in direct mode.
     * 
     * Lists the admin credentials of a provisioned cluster instance used only in direct mode.
     * 
     * @param connectedClusterResourceUri The fully qualified Azure Resource manager identifier of the connected cluster
     * resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list kubeconfig result response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ListCredentialResponseInner listAdminKubeconfig(String connectedClusterResourceUri);

    /**
     * Listing the admin credentials of a provisioned cluster instance used only in direct mode.
     * 
     * Lists the admin credentials of a provisioned cluster instance used only in direct mode.
     * 
     * @param connectedClusterResourceUri The fully qualified Azure Resource manager identifier of the connected cluster
     * resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list kubeconfig result response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ListCredentialResponseInner listAdminKubeconfig(String connectedClusterResourceUri, Context context);
}
