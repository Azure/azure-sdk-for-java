// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcontainerservice.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** WindowsProfile - Profile for Windows VMs in the container service cluster. */
@Fluent
public final class WindowsProfile extends WindowsProfileResponse {
    /*
     * AdminPassword - Specifies the password of the administrator account. <br><br> **Minimum-length:** 8 characters
     * <br><br> **Max-length:** 123 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need
     * to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character
     * (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123",
     * "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!"
     */
    @JsonProperty(value = "adminPassword")
    private String adminPassword;

    /** Creates an instance of WindowsProfile class. */
    public WindowsProfile() {
    }

    /**
     * Get the adminPassword property: AdminPassword - Specifies the password of the administrator account.
     * &lt;br&gt;&lt;br&gt; **Minimum-length:** 8 characters &lt;br&gt;&lt;br&gt; **Max-length:** 123 characters
     * &lt;br&gt;&lt;br&gt; **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled &lt;br&gt; Has
     * lower characters &lt;br&gt;Has upper characters &lt;br&gt; Has a digit &lt;br&gt; Has a special character (Regex
     * match [\W_]) &lt;br&gt;&lt;br&gt; **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123",
     * "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!".
     *
     * @return the adminPassword value.
     */
    public String adminPassword() {
        return this.adminPassword;
    }

    /**
     * Set the adminPassword property: AdminPassword - Specifies the password of the administrator account.
     * &lt;br&gt;&lt;br&gt; **Minimum-length:** 8 characters &lt;br&gt;&lt;br&gt; **Max-length:** 123 characters
     * &lt;br&gt;&lt;br&gt; **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled &lt;br&gt; Has
     * lower characters &lt;br&gt;Has upper characters &lt;br&gt; Has a digit &lt;br&gt; Has a special character (Regex
     * match [\W_]) &lt;br&gt;&lt;br&gt; **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123",
     * "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!".
     *
     * @param adminPassword the adminPassword value to set.
     * @return the WindowsProfile object itself.
     */
    public WindowsProfile withAdminPassword(String adminPassword) {
        this.adminPassword = adminPassword;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public WindowsProfile withAdminUsername(String adminUsername) {
        super.withAdminUsername(adminUsername);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public WindowsProfile withEnableCsiProxy(Boolean enableCsiProxy) {
        super.withEnableCsiProxy(enableCsiProxy);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public WindowsProfile withLicenseType(LicenseType licenseType) {
        super.withLicenseType(licenseType);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
