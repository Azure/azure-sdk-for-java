// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcontainerservice.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/**
 * Profile of the default agent pool along with a name parameter.
 */
@Fluent
public final class NamedAgentPoolProfile extends AgentPoolProfile {
    /*
     * Number of nodes in the agent pool. The default value is 1.
     */
    @JsonProperty(value = "count")
    private Integer count;

    /*
     * The VM sku size of the agent pool node VMs.
     */
    @JsonProperty(value = "vmSize")
    private String vmSize;

    /*
     * Version of Kubernetes in use by the agent pool. This is inherited from the kubernetesVersion of the provisioned
     * cluster.
     */
    @JsonProperty(value = "kubernetesVersion", access = JsonProperty.Access.WRITE_ONLY)
    private String kubernetesVersion;

    /*
     * Unique name of the default agent pool in the context of the provisioned cluster. Default value is
     * <clusterName>-nodepool1
     */
    @JsonProperty(value = "name")
    private String name;

    /**
     * Creates an instance of NamedAgentPoolProfile class.
     */
    public NamedAgentPoolProfile() {
    }

    /**
     * Get the count property: Number of nodes in the agent pool. The default value is 1.
     * 
     * @return the count value.
     */
    public Integer count() {
        return this.count;
    }

    /**
     * Set the count property: Number of nodes in the agent pool. The default value is 1.
     * 
     * @param count the count value to set.
     * @return the NamedAgentPoolProfile object itself.
     */
    public NamedAgentPoolProfile withCount(Integer count) {
        this.count = count;
        return this;
    }

    /**
     * Get the vmSize property: The VM sku size of the agent pool node VMs.
     * 
     * @return the vmSize value.
     */
    public String vmSize() {
        return this.vmSize;
    }

    /**
     * Set the vmSize property: The VM sku size of the agent pool node VMs.
     * 
     * @param vmSize the vmSize value to set.
     * @return the NamedAgentPoolProfile object itself.
     */
    public NamedAgentPoolProfile withVmSize(String vmSize) {
        this.vmSize = vmSize;
        return this;
    }

    /**
     * Get the kubernetesVersion property: Version of Kubernetes in use by the agent pool. This is inherited from the
     * kubernetesVersion of the provisioned cluster.
     * 
     * @return the kubernetesVersion value.
     */
    public String kubernetesVersion() {
        return this.kubernetesVersion;
    }

    /**
     * Get the name property: Unique name of the default agent pool in the context of the provisioned cluster. Default
     * value is &lt;clusterName&gt;-nodepool1.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Unique name of the default agent pool in the context of the provisioned cluster. Default
     * value is &lt;clusterName&gt;-nodepool1.
     * 
     * @param name the name value to set.
     * @return the NamedAgentPoolProfile object itself.
     */
    public NamedAgentPoolProfile withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NamedAgentPoolProfile withOsType(OsType osType) {
        super.withOsType(osType);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NamedAgentPoolProfile withOsSku(Ossku osSku) {
        super.withOsSku(osSku);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NamedAgentPoolProfile withNodeLabels(Map<String, String> nodeLabels) {
        super.withNodeLabels(nodeLabels);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NamedAgentPoolProfile withNodeTaints(List<String> nodeTaints) {
        super.withNodeTaints(nodeTaints);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NamedAgentPoolProfile withMaxCount(Integer maxCount) {
        super.withMaxCount(maxCount);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NamedAgentPoolProfile withMinCount(Integer minCount) {
        super.withMinCount(minCount);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NamedAgentPoolProfile withEnableAutoScaling(Boolean enableAutoScaling) {
        super.withEnableAutoScaling(enableAutoScaling);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NamedAgentPoolProfile withMaxPods(Integer maxPods) {
        super.withMaxPods(maxPods);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
