// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcontainerservice.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Agent pool profile along with a name parameter.
 */
@Fluent
public class NamedAgentPoolProfile extends AgentPoolProfile {
    /*
     * Count - Number of agents to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive).
     * The default value is 1.
     */
    @JsonProperty(value = "count")
    private Integer count;

    /*
     * VmSize - The size of the agent pool VMs.
     */
    @JsonProperty(value = "vmSize")
    private String vmSize;

    /*
     * Unique name of the agent pool profile in the context of the subscription and resource group.
     */
    @JsonProperty(value = "name")
    private String name;

    /**
     * Creates an instance of NamedAgentPoolProfile class.
     */
    public NamedAgentPoolProfile() {
    }

    /**
     * Get the count property: Count - Number of agents to host docker containers. Allowed values must be in the range
     * of 1 to 100 (inclusive). The default value is 1.
     * 
     * @return the count value.
     */
    public Integer count() {
        return this.count;
    }

    /**
     * Set the count property: Count - Number of agents to host docker containers. Allowed values must be in the range
     * of 1 to 100 (inclusive). The default value is 1.
     * 
     * @param count the count value to set.
     * @return the NamedAgentPoolProfile object itself.
     */
    public NamedAgentPoolProfile withCount(Integer count) {
        this.count = count;
        return this;
    }

    /**
     * Get the vmSize property: VmSize - The size of the agent pool VMs.
     * 
     * @return the vmSize value.
     */
    public String vmSize() {
        return this.vmSize;
    }

    /**
     * Set the vmSize property: VmSize - The size of the agent pool VMs.
     * 
     * @param vmSize the vmSize value to set.
     * @return the NamedAgentPoolProfile object itself.
     */
    public NamedAgentPoolProfile withVmSize(String vmSize) {
        this.vmSize = vmSize;
        return this;
    }

    /**
     * Get the name property: Unique name of the agent pool profile in the context of the subscription and resource
     * group.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Unique name of the agent pool profile in the context of the subscription and resource
     * group.
     * 
     * @param name the name value to set.
     * @return the NamedAgentPoolProfile object itself.
     */
    public NamedAgentPoolProfile withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NamedAgentPoolProfile withAvailabilityZones(List<String> availabilityZones) {
        super.withAvailabilityZones(availabilityZones);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NamedAgentPoolProfile withOsType(OsType osType) {
        super.withOsType(osType);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NamedAgentPoolProfile withOsSku(Ossku osSku) {
        super.withOsSku(osSku);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NamedAgentPoolProfile withNodeImageVersion(String nodeImageVersion) {
        super.withNodeImageVersion(nodeImageVersion);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
