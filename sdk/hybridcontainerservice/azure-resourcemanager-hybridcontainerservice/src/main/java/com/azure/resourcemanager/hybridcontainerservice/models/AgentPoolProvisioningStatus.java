// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcontainerservice.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The agentPool resource provisioning status definition.
 */
@Fluent
public class AgentPoolProvisioningStatus implements JsonSerializable<AgentPoolProvisioningStatus> {
    /*
     * The status of the latest long running operation for the agent pool.
     */
    private ResourceProvisioningState provisioningState;

    /*
     * The observed status of the agent pool.
     */
    private AgentPoolProvisioningStatusStatus status;

    /**
     * Creates an instance of AgentPoolProvisioningStatus class.
     */
    public AgentPoolProvisioningStatus() {
    }

    /**
     * Get the provisioningState property: The status of the latest long running operation for the agent pool.
     * 
     * @return the provisioningState value.
     */
    public ResourceProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Set the provisioningState property: The status of the latest long running operation for the agent pool.
     * 
     * @param provisioningState the provisioningState value to set.
     * @return the AgentPoolProvisioningStatus object itself.
     */
    AgentPoolProvisioningStatus withProvisioningState(ResourceProvisioningState provisioningState) {
        this.provisioningState = provisioningState;
        return this;
    }

    /**
     * Get the status property: The observed status of the agent pool.
     * 
     * @return the status value.
     */
    public AgentPoolProvisioningStatusStatus status() {
        return this.status;
    }

    /**
     * Set the status property: The observed status of the agent pool.
     * 
     * @param status the status value to set.
     * @return the AgentPoolProvisioningStatus object itself.
     */
    public AgentPoolProvisioningStatus withStatus(AgentPoolProvisioningStatusStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (status() != null) {
            status().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("status", this.status);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AgentPoolProvisioningStatus from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AgentPoolProvisioningStatus if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AgentPoolProvisioningStatus.
     */
    public static AgentPoolProvisioningStatus fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AgentPoolProvisioningStatus deserializedAgentPoolProvisioningStatus = new AgentPoolProvisioningStatus();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("provisioningState".equals(fieldName)) {
                    deserializedAgentPoolProvisioningStatus.provisioningState
                        = ResourceProvisioningState.fromString(reader.getString());
                } else if ("status".equals(fieldName)) {
                    deserializedAgentPoolProvisioningStatus.status = AgentPoolProvisioningStatusStatus.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAgentPoolProvisioningStatus;
        });
    }
}
