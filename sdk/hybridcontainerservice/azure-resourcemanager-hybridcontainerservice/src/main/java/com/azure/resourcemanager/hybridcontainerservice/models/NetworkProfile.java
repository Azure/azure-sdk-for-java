// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcontainerservice.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * NetworkProfile - Profile of network configuration.
 */
@Fluent
public final class NetworkProfile {
    /*
     * LoadBalancerProfile - Profile of the cluster load balancer.
     */
    @JsonProperty(value = "loadBalancerProfile")
    private NetworkProfileLoadBalancerProfile loadBalancerProfile;

    /*
     * NetworkPolicy - Network policy used for building Kubernetes network. Possible values include: 'calico',
     * 'flannel'. Default is 'calico'
     */
    @JsonProperty(value = "networkPolicy")
    private NetworkPolicy networkPolicy;

    /*
     * PodCidr - A CIDR notation IP range from which to assign pod IPs when kubenet is used.
     */
    @JsonProperty(value = "podCidr")
    private String podCidr;

    /**
     * Creates an instance of NetworkProfile class.
     */
    public NetworkProfile() {
    }

    /**
     * Get the loadBalancerProfile property: LoadBalancerProfile - Profile of the cluster load balancer.
     * 
     * @return the loadBalancerProfile value.
     */
    public NetworkProfileLoadBalancerProfile loadBalancerProfile() {
        return this.loadBalancerProfile;
    }

    /**
     * Set the loadBalancerProfile property: LoadBalancerProfile - Profile of the cluster load balancer.
     * 
     * @param loadBalancerProfile the loadBalancerProfile value to set.
     * @return the NetworkProfile object itself.
     */
    public NetworkProfile withLoadBalancerProfile(NetworkProfileLoadBalancerProfile loadBalancerProfile) {
        this.loadBalancerProfile = loadBalancerProfile;
        return this;
    }

    /**
     * Get the networkPolicy property: NetworkPolicy - Network policy used for building Kubernetes network. Possible
     * values include: 'calico', 'flannel'. Default is 'calico'.
     * 
     * @return the networkPolicy value.
     */
    public NetworkPolicy networkPolicy() {
        return this.networkPolicy;
    }

    /**
     * Set the networkPolicy property: NetworkPolicy - Network policy used for building Kubernetes network. Possible
     * values include: 'calico', 'flannel'. Default is 'calico'.
     * 
     * @param networkPolicy the networkPolicy value to set.
     * @return the NetworkProfile object itself.
     */
    public NetworkProfile withNetworkPolicy(NetworkPolicy networkPolicy) {
        this.networkPolicy = networkPolicy;
        return this;
    }

    /**
     * Get the podCidr property: PodCidr - A CIDR notation IP range from which to assign pod IPs when kubenet is used.
     * 
     * @return the podCidr value.
     */
    public String podCidr() {
        return this.podCidr;
    }

    /**
     * Set the podCidr property: PodCidr - A CIDR notation IP range from which to assign pod IPs when kubenet is used.
     * 
     * @param podCidr the podCidr value to set.
     * @return the NetworkProfile object itself.
     */
    public NetworkProfile withPodCidr(String podCidr) {
        this.podCidr = podCidr;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (loadBalancerProfile() != null) {
            loadBalancerProfile().validate();
        }
    }
}
