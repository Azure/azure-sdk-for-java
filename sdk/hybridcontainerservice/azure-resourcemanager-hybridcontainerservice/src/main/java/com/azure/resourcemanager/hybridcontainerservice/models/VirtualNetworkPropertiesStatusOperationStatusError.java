// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcontainerservice.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The error if any from the operation.
 */
@Fluent
public final class VirtualNetworkPropertiesStatusOperationStatusError
    implements JsonSerializable<VirtualNetworkPropertiesStatusOperationStatusError> {
    /*
     * The error code from the operation.
     */
    private String code;

    /*
     * The error message from the operation.
     */
    private String message;

    /**
     * Creates an instance of VirtualNetworkPropertiesStatusOperationStatusError class.
     */
    public VirtualNetworkPropertiesStatusOperationStatusError() {
    }

    /**
     * Get the code property: The error code from the operation.
     * 
     * @return the code value.
     */
    public String code() {
        return this.code;
    }

    /**
     * Set the code property: The error code from the operation.
     * 
     * @param code the code value to set.
     * @return the VirtualNetworkPropertiesStatusOperationStatusError object itself.
     */
    public VirtualNetworkPropertiesStatusOperationStatusError withCode(String code) {
        this.code = code;
        return this;
    }

    /**
     * Get the message property: The error message from the operation.
     * 
     * @return the message value.
     */
    public String message() {
        return this.message;
    }

    /**
     * Set the message property: The error message from the operation.
     * 
     * @param message the message value to set.
     * @return the VirtualNetworkPropertiesStatusOperationStatusError object itself.
     */
    public VirtualNetworkPropertiesStatusOperationStatusError withMessage(String message) {
        this.message = message;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("code", this.code);
        jsonWriter.writeStringField("message", this.message);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of VirtualNetworkPropertiesStatusOperationStatusError from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of VirtualNetworkPropertiesStatusOperationStatusError if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the VirtualNetworkPropertiesStatusOperationStatusError.
     */
    public static VirtualNetworkPropertiesStatusOperationStatusError fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            VirtualNetworkPropertiesStatusOperationStatusError deserializedVirtualNetworkPropertiesStatusOperationStatusError
                = new VirtualNetworkPropertiesStatusOperationStatusError();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("code".equals(fieldName)) {
                    deserializedVirtualNetworkPropertiesStatusOperationStatusError.code = reader.getString();
                } else if ("message".equals(fieldName)) {
                    deserializedVirtualNetworkPropertiesStatusOperationStatusError.message = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedVirtualNetworkPropertiesStatusOperationStatusError;
        });
    }
}
