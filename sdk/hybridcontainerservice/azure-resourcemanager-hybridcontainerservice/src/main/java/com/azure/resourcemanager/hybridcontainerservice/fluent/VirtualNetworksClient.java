// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcontainerservice.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.hybridcontainerservice.fluent.models.VirtualNetworkInner;
import com.azure.resourcemanager.hybridcontainerservice.models.VirtualNetworksPatch;

/**
 * An instance of this class provides access to all the operations defined in VirtualNetworksClient.
 */
public interface VirtualNetworksClient {
    /**
     * Gets the specified virtual network resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualNetworkName Parameter for the name of the virtual network.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified virtual network resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<VirtualNetworkInner> getByResourceGroupWithResponse(String resourceGroupName, String virtualNetworkName,
        Context context);

    /**
     * Gets the specified virtual network resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualNetworkName Parameter for the name of the virtual network.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified virtual network resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    VirtualNetworkInner getByResourceGroup(String resourceGroupName, String virtualNetworkName);

    /**
     * Creates or updates the virtual network resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualNetworkName Parameter for the name of the virtual network.
     * @param virtualNetworks Virtual Network resource definition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the Virtual Network resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<VirtualNetworkInner>, VirtualNetworkInner> beginCreateOrUpdate(String resourceGroupName,
        String virtualNetworkName, VirtualNetworkInner virtualNetworks);

    /**
     * Creates or updates the virtual network resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualNetworkName Parameter for the name of the virtual network.
     * @param virtualNetworks Virtual Network resource definition.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the Virtual Network resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<VirtualNetworkInner>, VirtualNetworkInner> beginCreateOrUpdate(String resourceGroupName,
        String virtualNetworkName, VirtualNetworkInner virtualNetworks, Context context);

    /**
     * Creates or updates the virtual network resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualNetworkName Parameter for the name of the virtual network.
     * @param virtualNetworks Virtual Network resource definition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Virtual Network resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    VirtualNetworkInner createOrUpdate(String resourceGroupName, String virtualNetworkName,
        VirtualNetworkInner virtualNetworks);

    /**
     * Creates or updates the virtual network resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualNetworkName Parameter for the name of the virtual network.
     * @param virtualNetworks Virtual Network resource definition.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Virtual Network resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    VirtualNetworkInner createOrUpdate(String resourceGroupName, String virtualNetworkName,
        VirtualNetworkInner virtualNetworks, Context context);

    /**
     * Deletes the specified virtual network resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualNetworkName Parameter for the name of the virtual network.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String virtualNetworkName);

    /**
     * Deletes the specified virtual network resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualNetworkName Parameter for the name of the virtual network.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String virtualNetworkName,
        Context context);

    /**
     * Deletes the specified virtual network resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualNetworkName Parameter for the name of the virtual network.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String virtualNetworkName);

    /**
     * Deletes the specified virtual network resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualNetworkName Parameter for the name of the virtual network.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String virtualNetworkName, Context context);

    /**
     * Patches the virtual network resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualNetworkName Parameter for the name of the virtual network.
     * @param virtualNetworks Virtual Network resource patch definition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the Virtual Network resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<VirtualNetworkInner>, VirtualNetworkInner> beginUpdate(String resourceGroupName,
        String virtualNetworkName, VirtualNetworksPatch virtualNetworks);

    /**
     * Patches the virtual network resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualNetworkName Parameter for the name of the virtual network.
     * @param virtualNetworks Virtual Network resource patch definition.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the Virtual Network resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<VirtualNetworkInner>, VirtualNetworkInner> beginUpdate(String resourceGroupName,
        String virtualNetworkName, VirtualNetworksPatch virtualNetworks, Context context);

    /**
     * Patches the virtual network resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualNetworkName Parameter for the name of the virtual network.
     * @param virtualNetworks Virtual Network resource patch definition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Virtual Network resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    VirtualNetworkInner update(String resourceGroupName, String virtualNetworkName,
        VirtualNetworksPatch virtualNetworks);

    /**
     * Patches the virtual network resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualNetworkName Parameter for the name of the virtual network.
     * @param virtualNetworks Virtual Network resource patch definition.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Virtual Network resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    VirtualNetworkInner update(String resourceGroupName, String virtualNetworkName,
        VirtualNetworksPatch virtualNetworks, Context context);

    /**
     * Lists the virtual networks in the specified resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of virtual network resources as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<VirtualNetworkInner> listByResourceGroup(String resourceGroupName);

    /**
     * Lists the virtual networks in the specified resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of virtual network resources as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<VirtualNetworkInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Lists the virtual networks in the specified subscription.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of virtual network resources as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<VirtualNetworkInner> list();

    /**
     * Lists the virtual networks in the specified subscription.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of virtual network resources as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<VirtualNetworkInner> list(Context context);
}
