// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcontainerservice.models;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.hybridcontainerservice.fluent.models.KubernetesVersionProfileInner;
import com.azure.resourcemanager.hybridcontainerservice.fluent.models.VmSkuProfileInner;

/**
 * Resource collection API of ResourceProviders.
 */
public interface ResourceProviders {
    /**
     * Gets the supported kubernetes versions
     * 
     * Gets the supported kubernetes versions from the underlying custom location.
     * 
     * @param customLocationResourceUri The fully qualified Azure Resource manager identifier of the custom location
     * resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the supported kubernetes versions from the underlying custom location along with {@link Response}.
     */
    Response<KubernetesVersionProfile> getKubernetesVersionsWithResponse(String customLocationResourceUri,
        Context context);

    /**
     * Gets the supported kubernetes versions
     * 
     * Gets the supported kubernetes versions from the underlying custom location.
     * 
     * @param customLocationResourceUri The fully qualified Azure Resource manager identifier of the custom location
     * resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the supported kubernetes versions from the underlying custom location.
     */
    KubernetesVersionProfile getKubernetesVersions(String customLocationResourceUri);

    /**
     * Puts the kubernetes version
     * 
     * Puts the kubernetes version resource type.
     * 
     * @param customLocationResourceUri The fully qualified Azure Resource manager identifier of the custom location
     * resource.
     * @param kubernetesVersions Kubernetes Versions resource definition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the supported kubernetes versions.
     */
    KubernetesVersionProfile putKubernetesVersions(String customLocationResourceUri,
        KubernetesVersionProfileInner kubernetesVersions);

    /**
     * Puts the kubernetes version
     * 
     * Puts the kubernetes version resource type.
     * 
     * @param customLocationResourceUri The fully qualified Azure Resource manager identifier of the custom location
     * resource.
     * @param kubernetesVersions Kubernetes Versions resource definition.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the supported kubernetes versions.
     */
    KubernetesVersionProfile putKubernetesVersions(String customLocationResourceUri,
        KubernetesVersionProfileInner kubernetesVersions, Context context);

    /**
     * Delete the kubernetes versions
     * 
     * Delete the kubernetes versions resource type.
     * 
     * @param customLocationResourceUri The fully qualified Azure Resource manager identifier of the custom location
     * resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteKubernetesVersions(String customLocationResourceUri);

    /**
     * Delete the kubernetes versions
     * 
     * Delete the kubernetes versions resource type.
     * 
     * @param customLocationResourceUri The fully qualified Azure Resource manager identifier of the custom location
     * resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteKubernetesVersions(String customLocationResourceUri, Context context);

    /**
     * Gets the supported VM skus
     * 
     * Gets the supported VM skus from the underlying custom location.
     * 
     * @param customLocationResourceUri The fully qualified Azure Resource manager identifier of the custom location
     * resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the supported VM skus from the underlying custom location along with {@link Response}.
     */
    Response<VmSkuProfile> getVMSkusWithResponse(String customLocationResourceUri, Context context);

    /**
     * Gets the supported VM skus
     * 
     * Gets the supported VM skus from the underlying custom location.
     * 
     * @param customLocationResourceUri The fully qualified Azure Resource manager identifier of the custom location
     * resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the supported VM skus from the underlying custom location.
     */
    VmSkuProfile getVMSkus(String customLocationResourceUri);

    /**
     * Puts the VM SKUs
     * 
     * Puts the VM SKUs resource type.
     * 
     * @param customLocationResourceUri The fully qualified Azure Resource manager identifier of the custom location
     * resource.
     * @param skus VM SKUs resource definition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of supported VM SKUs.
     */
    VmSkuProfile putVMSkus(String customLocationResourceUri, VmSkuProfileInner skus);

    /**
     * Puts the VM SKUs
     * 
     * Puts the VM SKUs resource type.
     * 
     * @param customLocationResourceUri The fully qualified Azure Resource manager identifier of the custom location
     * resource.
     * @param skus VM SKUs resource definition.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of supported VM SKUs.
     */
    VmSkuProfile putVMSkus(String customLocationResourceUri, VmSkuProfileInner skus, Context context);

    /**
     * Deletes the Vm Skus
     * 
     * Deletes the Vm Sku resource type.
     * 
     * @param customLocationResourceUri The fully qualified Azure Resource manager identifier of the custom location
     * resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteVMSkus(String customLocationResourceUri);

    /**
     * Deletes the Vm Skus
     * 
     * Deletes the Vm Sku resource type.
     * 
     * @param customLocationResourceUri The fully qualified Azure Resource manager identifier of the custom location
     * resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteVMSkus(String customLocationResourceUri, Context context);
}
