// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcontainerservice.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The SSH restricted access profile for the VMs in the provisioned cluster.
 */
@Fluent
public final class ClusterVMAccessProfile implements JsonSerializable<ClusterVMAccessProfile> {
    /*
     * IP Address or CIDR for SSH access to VMs in the provisioned cluster
     */
    private String authorizedIpRanges;

    /**
     * Creates an instance of ClusterVMAccessProfile class.
     */
    public ClusterVMAccessProfile() {
    }

    /**
     * Get the authorizedIpRanges property: IP Address or CIDR for SSH access to VMs in the provisioned cluster.
     * 
     * @return the authorizedIpRanges value.
     */
    public String authorizedIpRanges() {
        return this.authorizedIpRanges;
    }

    /**
     * Set the authorizedIpRanges property: IP Address or CIDR for SSH access to VMs in the provisioned cluster.
     * 
     * @param authorizedIpRanges the authorizedIpRanges value to set.
     * @return the ClusterVMAccessProfile object itself.
     */
    public ClusterVMAccessProfile withAuthorizedIpRanges(String authorizedIpRanges) {
        this.authorizedIpRanges = authorizedIpRanges;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("authorizedIPRanges", this.authorizedIpRanges);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ClusterVMAccessProfile from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ClusterVMAccessProfile if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ClusterVMAccessProfile.
     */
    public static ClusterVMAccessProfile fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ClusterVMAccessProfile deserializedClusterVMAccessProfile = new ClusterVMAccessProfile();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("authorizedIPRanges".equals(fieldName)) {
                    deserializedClusterVMAccessProfile.authorizedIpRanges = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedClusterVMAccessProfile;
        });
    }
}
