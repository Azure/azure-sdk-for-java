// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcontainerservice.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * The KubernetesVersionProfileProperties model.
 */
@Fluent
public final class KubernetesVersionProfileProperties {
    /*
     * Provisioning state of the resource
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ResourceProvisioningState provisioningState;

    /*
     * List of supported Kubernetes versions
     */
    @JsonProperty(value = "values")
    private List<KubernetesVersionProperties> values;

    /**
     * Creates an instance of KubernetesVersionProfileProperties class.
     */
    public KubernetesVersionProfileProperties() {
    }

    /**
     * Get the provisioningState property: Provisioning state of the resource.
     * 
     * @return the provisioningState value.
     */
    public ResourceProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the values property: List of supported Kubernetes versions.
     * 
     * @return the values value.
     */
    public List<KubernetesVersionProperties> values() {
        return this.values;
    }

    /**
     * Set the values property: List of supported Kubernetes versions.
     * 
     * @param values the values value to set.
     * @return the KubernetesVersionProfileProperties object itself.
     */
    public KubernetesVersionProfileProperties withValues(List<KubernetesVersionProperties> values) {
        this.values = values;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (values() != null) {
            values().forEach(e -> e.validate());
        }
    }
}
