// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcontainerservice.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AgentPool update configuration.
 */
@Fluent
public class AgentPoolUpdateProfile {
    /*
     * Count - Number of agents to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive).
     * The default value is 1.
     */
    @JsonProperty(value = "count")
    private Integer count;

    /*
     * VmSize - The size of the agent pool VMs.
     */
    @JsonProperty(value = "vmSize")
    private String vmSize;

    /**
     * Creates an instance of AgentPoolUpdateProfile class.
     */
    public AgentPoolUpdateProfile() {
    }

    /**
     * Get the count property: Count - Number of agents to host docker containers. Allowed values must be in the range
     * of 1 to 100 (inclusive). The default value is 1.
     * 
     * @return the count value.
     */
    public Integer count() {
        return this.count;
    }

    /**
     * Set the count property: Count - Number of agents to host docker containers. Allowed values must be in the range
     * of 1 to 100 (inclusive). The default value is 1.
     * 
     * @param count the count value to set.
     * @return the AgentPoolUpdateProfile object itself.
     */
    public AgentPoolUpdateProfile withCount(Integer count) {
        this.count = count;
        return this;
    }

    /**
     * Get the vmSize property: VmSize - The size of the agent pool VMs.
     * 
     * @return the vmSize value.
     */
    public String vmSize() {
        return this.vmSize;
    }

    /**
     * Set the vmSize property: VmSize - The size of the agent pool VMs.
     * 
     * @param vmSize the vmSize value to set.
     * @return the AgentPoolUpdateProfile object itself.
     */
    public AgentPoolUpdateProfile withVmSize(String vmSize) {
        this.vmSize = vmSize;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
