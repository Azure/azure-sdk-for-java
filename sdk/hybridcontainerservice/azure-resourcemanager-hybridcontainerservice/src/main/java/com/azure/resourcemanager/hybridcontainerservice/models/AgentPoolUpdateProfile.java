// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcontainerservice.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Profile for agent pool properties that can be updated.
 */
@Fluent
public class AgentPoolUpdateProfile implements JsonSerializable<AgentPoolUpdateProfile> {
    /*
     * Number of nodes in the agent pool. The default value is 1.
     */
    private Integer count;

    /*
     * The VM sku size of the agent pool node VMs.
     */
    private String vmSize;

    /*
     * Version of Kubernetes in use by the agent pool. This is inherited from the kubernetesVersion of the provisioned
     * cluster.
     */
    private String kubernetesVersion;

    /**
     * Creates an instance of AgentPoolUpdateProfile class.
     */
    public AgentPoolUpdateProfile() {
    }

    /**
     * Get the count property: Number of nodes in the agent pool. The default value is 1.
     * 
     * @return the count value.
     */
    public Integer count() {
        return this.count;
    }

    /**
     * Set the count property: Number of nodes in the agent pool. The default value is 1.
     * 
     * @param count the count value to set.
     * @return the AgentPoolUpdateProfile object itself.
     */
    public AgentPoolUpdateProfile withCount(Integer count) {
        this.count = count;
        return this;
    }

    /**
     * Get the vmSize property: The VM sku size of the agent pool node VMs.
     * 
     * @return the vmSize value.
     */
    public String vmSize() {
        return this.vmSize;
    }

    /**
     * Set the vmSize property: The VM sku size of the agent pool node VMs.
     * 
     * @param vmSize the vmSize value to set.
     * @return the AgentPoolUpdateProfile object itself.
     */
    public AgentPoolUpdateProfile withVmSize(String vmSize) {
        this.vmSize = vmSize;
        return this;
    }

    /**
     * Get the kubernetesVersion property: Version of Kubernetes in use by the agent pool. This is inherited from the
     * kubernetesVersion of the provisioned cluster.
     * 
     * @return the kubernetesVersion value.
     */
    public String kubernetesVersion() {
        return this.kubernetesVersion;
    }

    /**
     * Set the kubernetesVersion property: Version of Kubernetes in use by the agent pool. This is inherited from the
     * kubernetesVersion of the provisioned cluster.
     * 
     * @param kubernetesVersion the kubernetesVersion value to set.
     * @return the AgentPoolUpdateProfile object itself.
     */
    AgentPoolUpdateProfile withKubernetesVersion(String kubernetesVersion) {
        this.kubernetesVersion = kubernetesVersion;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("count", this.count);
        jsonWriter.writeStringField("vmSize", this.vmSize);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AgentPoolUpdateProfile from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AgentPoolUpdateProfile if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AgentPoolUpdateProfile.
     */
    public static AgentPoolUpdateProfile fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AgentPoolUpdateProfile deserializedAgentPoolUpdateProfile = new AgentPoolUpdateProfile();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("count".equals(fieldName)) {
                    deserializedAgentPoolUpdateProfile.count = reader.getNullable(JsonReader::getInt);
                } else if ("vmSize".equals(fieldName)) {
                    deserializedAgentPoolUpdateProfile.vmSize = reader.getString();
                } else if ("kubernetesVersion".equals(fieldName)) {
                    deserializedAgentPoolUpdateProfile.kubernetesVersion = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAgentPoolUpdateProfile;
        });
    }
}
