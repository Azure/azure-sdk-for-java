// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcontainerservice.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of StorageSpacesOperations. */
public interface StorageSpacesOperations {
    /**
     * Gets the storage space object
     *
     * <p>Gets the Hybrid AKS storage space object.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageSpacesName Parameter for the name of the storage object.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Hybrid AKS storage space object along with {@link Response}.
     */
    Response<StorageSpaces> getByResourceGroupWithResponse(
        String resourceGroupName, String storageSpacesName, Context context);

    /**
     * Gets the storage space object
     *
     * <p>Gets the Hybrid AKS storage space object.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageSpacesName Parameter for the name of the storage object.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Hybrid AKS storage space object.
     */
    StorageSpaces getByResourceGroup(String resourceGroupName, String storageSpacesName);

    /**
     * Deletes the storage object
     *
     * <p>Deletes the Hybrid AKS storage object.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageSpacesName Parameter for the name of the storage object.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByResourceGroupWithResponse(
        String resourceGroupName, String storageSpacesName, Context context);

    /**
     * Deletes the storage object
     *
     * <p>Deletes the Hybrid AKS storage object.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageSpacesName Parameter for the name of the storage object.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String storageSpacesName);

    /**
     * List the storage object by resource group
     *
     * <p>List the Hybrid AKS storage object by resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the paginated response with {@link PagedIterable}.
     */
    PagedIterable<StorageSpaces> listByResourceGroup(String resourceGroupName);

    /**
     * List the storage object by resource group
     *
     * <p>List the Hybrid AKS storage object by resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the paginated response with {@link PagedIterable}.
     */
    PagedIterable<StorageSpaces> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * List the storage object by subscription
     *
     * <p>List the Hybrid AKS storage object by subscription.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the paginated response with {@link PagedIterable}.
     */
    PagedIterable<StorageSpaces> list();

    /**
     * List the storage object by subscription
     *
     * <p>List the Hybrid AKS storage object by subscription.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the paginated response with {@link PagedIterable}.
     */
    PagedIterable<StorageSpaces> list(Context context);

    /**
     * Gets the storage space object
     *
     * <p>Gets the Hybrid AKS storage space object.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Hybrid AKS storage space object along with {@link Response}.
     */
    StorageSpaces getById(String id);

    /**
     * Gets the storage space object
     *
     * <p>Gets the Hybrid AKS storage space object.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Hybrid AKS storage space object along with {@link Response}.
     */
    Response<StorageSpaces> getByIdWithResponse(String id, Context context);

    /**
     * Deletes the storage object
     *
     * <p>Deletes the Hybrid AKS storage object.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes the storage object
     *
     * <p>Deletes the Hybrid AKS storage object.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new StorageSpaces resource.
     *
     * @param name resource name.
     * @return the first stage of the new StorageSpaces definition.
     */
    StorageSpaces.DefinitionStages.Blank define(String name);
}
