// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcontainerservice.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Parameters to be applied to the cluster-autoscaler when auto scaling is enabled for the provisioned cluster.
 */
@Fluent
public final class ProvisionedClusterPropertiesAutoScalerProfile
    implements JsonSerializable<ProvisionedClusterPropertiesAutoScalerProfile> {
    /*
     * Valid values are 'true' and 'false'
     */
    private String balanceSimilarNodeGroups;

    /*
     * If not specified, the default is 'random'. See
     * [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders)
     * for more information.
     */
    private Expander expander;

    /*
     * The default is 10.
     */
    private String maxEmptyBulkDelete;

    /*
     * The default is 600.
     */
    private String maxGracefulTerminationSec;

    /*
     * The default is '15m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is
     * supported.
     */
    private String maxNodeProvisionTime;

    /*
     * The default is 45. The maximum is 100 and the minimum is 0.
     */
    private String maxTotalUnreadyPercentage;

    /*
     * For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could
     * schedule all the pods, you can tell CA to ignore unscheduled pods before they're a certain age. The default is
     * '0s'. Values must be an integer followed by a unit ('s' for seconds, 'm' for minutes, 'h' for hours, etc).
     */
    private String newPodScaleUpDelay;

    /*
     * This must be an integer. The default is 3.
     */
    private String okTotalUnreadyCount;

    /*
     * The default is '10'. Values must be an integer number of seconds.
     */
    private String scanInterval;

    /*
     * The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is
     * supported.
     */
    private String scaleDownDelayAfterAdd;

    /*
     * The default is the scan-interval. Values must be an integer followed by an 'm'. No unit of time other than
     * minutes (m) is supported.
     */
    private String scaleDownDelayAfterDelete;

    /*
     * The default is '3m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is
     * supported.
     */
    private String scaleDownDelayAfterFailure;

    /*
     * The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is
     * supported.
     */
    private String scaleDownUnneededTime;

    /*
     * The default is '20m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is
     * supported.
     */
    private String scaleDownUnreadyTime;

    /*
     * The default is '0.5'.
     */
    private String scaleDownUtilizationThreshold;

    /*
     * The default is true.
     */
    private String skipNodesWithLocalStorage;

    /*
     * The default is true.
     */
    private String skipNodesWithSystemPods;

    /**
     * Creates an instance of ProvisionedClusterPropertiesAutoScalerProfile class.
     */
    public ProvisionedClusterPropertiesAutoScalerProfile() {
    }

    /**
     * Get the balanceSimilarNodeGroups property: Valid values are 'true' and 'false'.
     * 
     * @return the balanceSimilarNodeGroups value.
     */
    public String balanceSimilarNodeGroups() {
        return this.balanceSimilarNodeGroups;
    }

    /**
     * Set the balanceSimilarNodeGroups property: Valid values are 'true' and 'false'.
     * 
     * @param balanceSimilarNodeGroups the balanceSimilarNodeGroups value to set.
     * @return the ProvisionedClusterPropertiesAutoScalerProfile object itself.
     */
    public ProvisionedClusterPropertiesAutoScalerProfile withBalanceSimilarNodeGroups(String balanceSimilarNodeGroups) {
        this.balanceSimilarNodeGroups = balanceSimilarNodeGroups;
        return this;
    }

    /**
     * Get the expander property: If not specified, the default is 'random'. See
     * [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders)
     * for more information.
     * 
     * @return the expander value.
     */
    public Expander expander() {
        return this.expander;
    }

    /**
     * Set the expander property: If not specified, the default is 'random'. See
     * [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders)
     * for more information.
     * 
     * @param expander the expander value to set.
     * @return the ProvisionedClusterPropertiesAutoScalerProfile object itself.
     */
    public ProvisionedClusterPropertiesAutoScalerProfile withExpander(Expander expander) {
        this.expander = expander;
        return this;
    }

    /**
     * Get the maxEmptyBulkDelete property: The default is 10.
     * 
     * @return the maxEmptyBulkDelete value.
     */
    public String maxEmptyBulkDelete() {
        return this.maxEmptyBulkDelete;
    }

    /**
     * Set the maxEmptyBulkDelete property: The default is 10.
     * 
     * @param maxEmptyBulkDelete the maxEmptyBulkDelete value to set.
     * @return the ProvisionedClusterPropertiesAutoScalerProfile object itself.
     */
    public ProvisionedClusterPropertiesAutoScalerProfile withMaxEmptyBulkDelete(String maxEmptyBulkDelete) {
        this.maxEmptyBulkDelete = maxEmptyBulkDelete;
        return this;
    }

    /**
     * Get the maxGracefulTerminationSec property: The default is 600.
     * 
     * @return the maxGracefulTerminationSec value.
     */
    public String maxGracefulTerminationSec() {
        return this.maxGracefulTerminationSec;
    }

    /**
     * Set the maxGracefulTerminationSec property: The default is 600.
     * 
     * @param maxGracefulTerminationSec the maxGracefulTerminationSec value to set.
     * @return the ProvisionedClusterPropertiesAutoScalerProfile object itself.
     */
    public ProvisionedClusterPropertiesAutoScalerProfile
        withMaxGracefulTerminationSec(String maxGracefulTerminationSec) {
        this.maxGracefulTerminationSec = maxGracefulTerminationSec;
        return this;
    }

    /**
     * Get the maxNodeProvisionTime property: The default is '15m'. Values must be an integer followed by an 'm'. No
     * unit of time other than minutes (m) is supported.
     * 
     * @return the maxNodeProvisionTime value.
     */
    public String maxNodeProvisionTime() {
        return this.maxNodeProvisionTime;
    }

    /**
     * Set the maxNodeProvisionTime property: The default is '15m'. Values must be an integer followed by an 'm'. No
     * unit of time other than minutes (m) is supported.
     * 
     * @param maxNodeProvisionTime the maxNodeProvisionTime value to set.
     * @return the ProvisionedClusterPropertiesAutoScalerProfile object itself.
     */
    public ProvisionedClusterPropertiesAutoScalerProfile withMaxNodeProvisionTime(String maxNodeProvisionTime) {
        this.maxNodeProvisionTime = maxNodeProvisionTime;
        return this;
    }

    /**
     * Get the maxTotalUnreadyPercentage property: The default is 45. The maximum is 100 and the minimum is 0.
     * 
     * @return the maxTotalUnreadyPercentage value.
     */
    public String maxTotalUnreadyPercentage() {
        return this.maxTotalUnreadyPercentage;
    }

    /**
     * Set the maxTotalUnreadyPercentage property: The default is 45. The maximum is 100 and the minimum is 0.
     * 
     * @param maxTotalUnreadyPercentage the maxTotalUnreadyPercentage value to set.
     * @return the ProvisionedClusterPropertiesAutoScalerProfile object itself.
     */
    public ProvisionedClusterPropertiesAutoScalerProfile
        withMaxTotalUnreadyPercentage(String maxTotalUnreadyPercentage) {
        this.maxTotalUnreadyPercentage = maxTotalUnreadyPercentage;
        return this;
    }

    /**
     * Get the newPodScaleUpDelay property: For scenarios like burst/batch scale where you don't want CA to act before
     * the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they're a
     * certain age. The default is '0s'. Values must be an integer followed by a unit ('s' for seconds, 'm' for minutes,
     * 'h' for hours, etc).
     * 
     * @return the newPodScaleUpDelay value.
     */
    public String newPodScaleUpDelay() {
        return this.newPodScaleUpDelay;
    }

    /**
     * Set the newPodScaleUpDelay property: For scenarios like burst/batch scale where you don't want CA to act before
     * the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they're a
     * certain age. The default is '0s'. Values must be an integer followed by a unit ('s' for seconds, 'm' for minutes,
     * 'h' for hours, etc).
     * 
     * @param newPodScaleUpDelay the newPodScaleUpDelay value to set.
     * @return the ProvisionedClusterPropertiesAutoScalerProfile object itself.
     */
    public ProvisionedClusterPropertiesAutoScalerProfile withNewPodScaleUpDelay(String newPodScaleUpDelay) {
        this.newPodScaleUpDelay = newPodScaleUpDelay;
        return this;
    }

    /**
     * Get the okTotalUnreadyCount property: This must be an integer. The default is 3.
     * 
     * @return the okTotalUnreadyCount value.
     */
    public String okTotalUnreadyCount() {
        return this.okTotalUnreadyCount;
    }

    /**
     * Set the okTotalUnreadyCount property: This must be an integer. The default is 3.
     * 
     * @param okTotalUnreadyCount the okTotalUnreadyCount value to set.
     * @return the ProvisionedClusterPropertiesAutoScalerProfile object itself.
     */
    public ProvisionedClusterPropertiesAutoScalerProfile withOkTotalUnreadyCount(String okTotalUnreadyCount) {
        this.okTotalUnreadyCount = okTotalUnreadyCount;
        return this;
    }

    /**
     * Get the scanInterval property: The default is '10'. Values must be an integer number of seconds.
     * 
     * @return the scanInterval value.
     */
    public String scanInterval() {
        return this.scanInterval;
    }

    /**
     * Set the scanInterval property: The default is '10'. Values must be an integer number of seconds.
     * 
     * @param scanInterval the scanInterval value to set.
     * @return the ProvisionedClusterPropertiesAutoScalerProfile object itself.
     */
    public ProvisionedClusterPropertiesAutoScalerProfile withScanInterval(String scanInterval) {
        this.scanInterval = scanInterval;
        return this;
    }

    /**
     * Get the scaleDownDelayAfterAdd property: The default is '10m'. Values must be an integer followed by an 'm'. No
     * unit of time other than minutes (m) is supported.
     * 
     * @return the scaleDownDelayAfterAdd value.
     */
    public String scaleDownDelayAfterAdd() {
        return this.scaleDownDelayAfterAdd;
    }

    /**
     * Set the scaleDownDelayAfterAdd property: The default is '10m'. Values must be an integer followed by an 'm'. No
     * unit of time other than minutes (m) is supported.
     * 
     * @param scaleDownDelayAfterAdd the scaleDownDelayAfterAdd value to set.
     * @return the ProvisionedClusterPropertiesAutoScalerProfile object itself.
     */
    public ProvisionedClusterPropertiesAutoScalerProfile withScaleDownDelayAfterAdd(String scaleDownDelayAfterAdd) {
        this.scaleDownDelayAfterAdd = scaleDownDelayAfterAdd;
        return this;
    }

    /**
     * Get the scaleDownDelayAfterDelete property: The default is the scan-interval. Values must be an integer followed
     * by an 'm'. No unit of time other than minutes (m) is supported.
     * 
     * @return the scaleDownDelayAfterDelete value.
     */
    public String scaleDownDelayAfterDelete() {
        return this.scaleDownDelayAfterDelete;
    }

    /**
     * Set the scaleDownDelayAfterDelete property: The default is the scan-interval. Values must be an integer followed
     * by an 'm'. No unit of time other than minutes (m) is supported.
     * 
     * @param scaleDownDelayAfterDelete the scaleDownDelayAfterDelete value to set.
     * @return the ProvisionedClusterPropertiesAutoScalerProfile object itself.
     */
    public ProvisionedClusterPropertiesAutoScalerProfile
        withScaleDownDelayAfterDelete(String scaleDownDelayAfterDelete) {
        this.scaleDownDelayAfterDelete = scaleDownDelayAfterDelete;
        return this;
    }

    /**
     * Get the scaleDownDelayAfterFailure property: The default is '3m'. Values must be an integer followed by an 'm'.
     * No unit of time other than minutes (m) is supported.
     * 
     * @return the scaleDownDelayAfterFailure value.
     */
    public String scaleDownDelayAfterFailure() {
        return this.scaleDownDelayAfterFailure;
    }

    /**
     * Set the scaleDownDelayAfterFailure property: The default is '3m'. Values must be an integer followed by an 'm'.
     * No unit of time other than minutes (m) is supported.
     * 
     * @param scaleDownDelayAfterFailure the scaleDownDelayAfterFailure value to set.
     * @return the ProvisionedClusterPropertiesAutoScalerProfile object itself.
     */
    public ProvisionedClusterPropertiesAutoScalerProfile
        withScaleDownDelayAfterFailure(String scaleDownDelayAfterFailure) {
        this.scaleDownDelayAfterFailure = scaleDownDelayAfterFailure;
        return this;
    }

    /**
     * Get the scaleDownUnneededTime property: The default is '10m'. Values must be an integer followed by an 'm'. No
     * unit of time other than minutes (m) is supported.
     * 
     * @return the scaleDownUnneededTime value.
     */
    public String scaleDownUnneededTime() {
        return this.scaleDownUnneededTime;
    }

    /**
     * Set the scaleDownUnneededTime property: The default is '10m'. Values must be an integer followed by an 'm'. No
     * unit of time other than minutes (m) is supported.
     * 
     * @param scaleDownUnneededTime the scaleDownUnneededTime value to set.
     * @return the ProvisionedClusterPropertiesAutoScalerProfile object itself.
     */
    public ProvisionedClusterPropertiesAutoScalerProfile withScaleDownUnneededTime(String scaleDownUnneededTime) {
        this.scaleDownUnneededTime = scaleDownUnneededTime;
        return this;
    }

    /**
     * Get the scaleDownUnreadyTime property: The default is '20m'. Values must be an integer followed by an 'm'. No
     * unit of time other than minutes (m) is supported.
     * 
     * @return the scaleDownUnreadyTime value.
     */
    public String scaleDownUnreadyTime() {
        return this.scaleDownUnreadyTime;
    }

    /**
     * Set the scaleDownUnreadyTime property: The default is '20m'. Values must be an integer followed by an 'm'. No
     * unit of time other than minutes (m) is supported.
     * 
     * @param scaleDownUnreadyTime the scaleDownUnreadyTime value to set.
     * @return the ProvisionedClusterPropertiesAutoScalerProfile object itself.
     */
    public ProvisionedClusterPropertiesAutoScalerProfile withScaleDownUnreadyTime(String scaleDownUnreadyTime) {
        this.scaleDownUnreadyTime = scaleDownUnreadyTime;
        return this;
    }

    /**
     * Get the scaleDownUtilizationThreshold property: The default is '0.5'.
     * 
     * @return the scaleDownUtilizationThreshold value.
     */
    public String scaleDownUtilizationThreshold() {
        return this.scaleDownUtilizationThreshold;
    }

    /**
     * Set the scaleDownUtilizationThreshold property: The default is '0.5'.
     * 
     * @param scaleDownUtilizationThreshold the scaleDownUtilizationThreshold value to set.
     * @return the ProvisionedClusterPropertiesAutoScalerProfile object itself.
     */
    public ProvisionedClusterPropertiesAutoScalerProfile
        withScaleDownUtilizationThreshold(String scaleDownUtilizationThreshold) {
        this.scaleDownUtilizationThreshold = scaleDownUtilizationThreshold;
        return this;
    }

    /**
     * Get the skipNodesWithLocalStorage property: The default is true.
     * 
     * @return the skipNodesWithLocalStorage value.
     */
    public String skipNodesWithLocalStorage() {
        return this.skipNodesWithLocalStorage;
    }

    /**
     * Set the skipNodesWithLocalStorage property: The default is true.
     * 
     * @param skipNodesWithLocalStorage the skipNodesWithLocalStorage value to set.
     * @return the ProvisionedClusterPropertiesAutoScalerProfile object itself.
     */
    public ProvisionedClusterPropertiesAutoScalerProfile
        withSkipNodesWithLocalStorage(String skipNodesWithLocalStorage) {
        this.skipNodesWithLocalStorage = skipNodesWithLocalStorage;
        return this;
    }

    /**
     * Get the skipNodesWithSystemPods property: The default is true.
     * 
     * @return the skipNodesWithSystemPods value.
     */
    public String skipNodesWithSystemPods() {
        return this.skipNodesWithSystemPods;
    }

    /**
     * Set the skipNodesWithSystemPods property: The default is true.
     * 
     * @param skipNodesWithSystemPods the skipNodesWithSystemPods value to set.
     * @return the ProvisionedClusterPropertiesAutoScalerProfile object itself.
     */
    public ProvisionedClusterPropertiesAutoScalerProfile withSkipNodesWithSystemPods(String skipNodesWithSystemPods) {
        this.skipNodesWithSystemPods = skipNodesWithSystemPods;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("balance-similar-node-groups", this.balanceSimilarNodeGroups);
        jsonWriter.writeStringField("expander", this.expander == null ? null : this.expander.toString());
        jsonWriter.writeStringField("max-empty-bulk-delete", this.maxEmptyBulkDelete);
        jsonWriter.writeStringField("max-graceful-termination-sec", this.maxGracefulTerminationSec);
        jsonWriter.writeStringField("max-node-provision-time", this.maxNodeProvisionTime);
        jsonWriter.writeStringField("max-total-unready-percentage", this.maxTotalUnreadyPercentage);
        jsonWriter.writeStringField("new-pod-scale-up-delay", this.newPodScaleUpDelay);
        jsonWriter.writeStringField("ok-total-unready-count", this.okTotalUnreadyCount);
        jsonWriter.writeStringField("scan-interval", this.scanInterval);
        jsonWriter.writeStringField("scale-down-delay-after-add", this.scaleDownDelayAfterAdd);
        jsonWriter.writeStringField("scale-down-delay-after-delete", this.scaleDownDelayAfterDelete);
        jsonWriter.writeStringField("scale-down-delay-after-failure", this.scaleDownDelayAfterFailure);
        jsonWriter.writeStringField("scale-down-unneeded-time", this.scaleDownUnneededTime);
        jsonWriter.writeStringField("scale-down-unready-time", this.scaleDownUnreadyTime);
        jsonWriter.writeStringField("scale-down-utilization-threshold", this.scaleDownUtilizationThreshold);
        jsonWriter.writeStringField("skip-nodes-with-local-storage", this.skipNodesWithLocalStorage);
        jsonWriter.writeStringField("skip-nodes-with-system-pods", this.skipNodesWithSystemPods);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ProvisionedClusterPropertiesAutoScalerProfile from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ProvisionedClusterPropertiesAutoScalerProfile if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ProvisionedClusterPropertiesAutoScalerProfile.
     */
    public static ProvisionedClusterPropertiesAutoScalerProfile fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ProvisionedClusterPropertiesAutoScalerProfile deserializedProvisionedClusterPropertiesAutoScalerProfile
                = new ProvisionedClusterPropertiesAutoScalerProfile();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("balance-similar-node-groups".equals(fieldName)) {
                    deserializedProvisionedClusterPropertiesAutoScalerProfile.balanceSimilarNodeGroups
                        = reader.getString();
                } else if ("expander".equals(fieldName)) {
                    deserializedProvisionedClusterPropertiesAutoScalerProfile.expander
                        = Expander.fromString(reader.getString());
                } else if ("max-empty-bulk-delete".equals(fieldName)) {
                    deserializedProvisionedClusterPropertiesAutoScalerProfile.maxEmptyBulkDelete = reader.getString();
                } else if ("max-graceful-termination-sec".equals(fieldName)) {
                    deserializedProvisionedClusterPropertiesAutoScalerProfile.maxGracefulTerminationSec
                        = reader.getString();
                } else if ("max-node-provision-time".equals(fieldName)) {
                    deserializedProvisionedClusterPropertiesAutoScalerProfile.maxNodeProvisionTime = reader.getString();
                } else if ("max-total-unready-percentage".equals(fieldName)) {
                    deserializedProvisionedClusterPropertiesAutoScalerProfile.maxTotalUnreadyPercentage
                        = reader.getString();
                } else if ("new-pod-scale-up-delay".equals(fieldName)) {
                    deserializedProvisionedClusterPropertiesAutoScalerProfile.newPodScaleUpDelay = reader.getString();
                } else if ("ok-total-unready-count".equals(fieldName)) {
                    deserializedProvisionedClusterPropertiesAutoScalerProfile.okTotalUnreadyCount = reader.getString();
                } else if ("scan-interval".equals(fieldName)) {
                    deserializedProvisionedClusterPropertiesAutoScalerProfile.scanInterval = reader.getString();
                } else if ("scale-down-delay-after-add".equals(fieldName)) {
                    deserializedProvisionedClusterPropertiesAutoScalerProfile.scaleDownDelayAfterAdd
                        = reader.getString();
                } else if ("scale-down-delay-after-delete".equals(fieldName)) {
                    deserializedProvisionedClusterPropertiesAutoScalerProfile.scaleDownDelayAfterDelete
                        = reader.getString();
                } else if ("scale-down-delay-after-failure".equals(fieldName)) {
                    deserializedProvisionedClusterPropertiesAutoScalerProfile.scaleDownDelayAfterFailure
                        = reader.getString();
                } else if ("scale-down-unneeded-time".equals(fieldName)) {
                    deserializedProvisionedClusterPropertiesAutoScalerProfile.scaleDownUnneededTime
                        = reader.getString();
                } else if ("scale-down-unready-time".equals(fieldName)) {
                    deserializedProvisionedClusterPropertiesAutoScalerProfile.scaleDownUnreadyTime = reader.getString();
                } else if ("scale-down-utilization-threshold".equals(fieldName)) {
                    deserializedProvisionedClusterPropertiesAutoScalerProfile.scaleDownUtilizationThreshold
                        = reader.getString();
                } else if ("skip-nodes-with-local-storage".equals(fieldName)) {
                    deserializedProvisionedClusterPropertiesAutoScalerProfile.skipNodesWithLocalStorage
                        = reader.getString();
                } else if ("skip-nodes-with-system-pods".equals(fieldName)) {
                    deserializedProvisionedClusterPropertiesAutoScalerProfile.skipNodesWithSystemPods
                        = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedProvisionedClusterPropertiesAutoScalerProfile;
        });
    }
}
