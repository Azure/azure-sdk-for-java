// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcontainerservice.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * HybridAKSClusterStatus defines the observed state of HybridAKSCluster.
 */
@Fluent
public final class ProvisionedClusterPropertiesStatus {
    /*
     * Status of the control plane components
     */
    @JsonProperty(value = "controlPlaneStatus")
    private List<AddonStatusProfile> controlPlaneStatus;

    /*
     * ErrorMessage - Error messages during creation of cluster
     */
    @JsonProperty(value = "errorMessage")
    private String errorMessage;

    /*
     * Contains Provisioning errors
     */
    @JsonProperty(value = "operationStatus")
    private ProvisionedClusterPropertiesStatusOperationStatus operationStatus;

    /**
     * Creates an instance of ProvisionedClusterPropertiesStatus class.
     */
    public ProvisionedClusterPropertiesStatus() {
    }

    /**
     * Get the controlPlaneStatus property: Status of the control plane components.
     * 
     * @return the controlPlaneStatus value.
     */
    public List<AddonStatusProfile> controlPlaneStatus() {
        return this.controlPlaneStatus;
    }

    /**
     * Set the controlPlaneStatus property: Status of the control plane components.
     * 
     * @param controlPlaneStatus the controlPlaneStatus value to set.
     * @return the ProvisionedClusterPropertiesStatus object itself.
     */
    public ProvisionedClusterPropertiesStatus withControlPlaneStatus(List<AddonStatusProfile> controlPlaneStatus) {
        this.controlPlaneStatus = controlPlaneStatus;
        return this;
    }

    /**
     * Get the errorMessage property: ErrorMessage - Error messages during creation of cluster.
     * 
     * @return the errorMessage value.
     */
    public String errorMessage() {
        return this.errorMessage;
    }

    /**
     * Set the errorMessage property: ErrorMessage - Error messages during creation of cluster.
     * 
     * @param errorMessage the errorMessage value to set.
     * @return the ProvisionedClusterPropertiesStatus object itself.
     */
    public ProvisionedClusterPropertiesStatus withErrorMessage(String errorMessage) {
        this.errorMessage = errorMessage;
        return this;
    }

    /**
     * Get the operationStatus property: Contains Provisioning errors.
     * 
     * @return the operationStatus value.
     */
    public ProvisionedClusterPropertiesStatusOperationStatus operationStatus() {
        return this.operationStatus;
    }

    /**
     * Set the operationStatus property: Contains Provisioning errors.
     * 
     * @param operationStatus the operationStatus value to set.
     * @return the ProvisionedClusterPropertiesStatus object itself.
     */
    public ProvisionedClusterPropertiesStatus
        withOperationStatus(ProvisionedClusterPropertiesStatusOperationStatus operationStatus) {
        this.operationStatus = operationStatus;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (controlPlaneStatus() != null) {
            controlPlaneStatus().forEach(e -> e.validate());
        }
        if (operationStatus() != null) {
            operationStatus().validate();
        }
    }
}
