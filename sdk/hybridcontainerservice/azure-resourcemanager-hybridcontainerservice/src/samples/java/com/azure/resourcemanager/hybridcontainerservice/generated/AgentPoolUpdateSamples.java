// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcontainerservice.generated;

import com.azure.resourcemanager.hybridcontainerservice.models.AgentPool;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for AgentPool Update.
 */
public final class AgentPoolUpdateSamples {
    /*
     * x-ms-original-file:
     * specification/hybridaks/resource-manager/Microsoft.HybridContainerService/preview/2023-11-15-preview/examples/
     * UpdateAgentPool.json
     */
    /**
     * Sample code: UpdateAgentPool.
     * 
     * @param manager Entry point to HybridContainerServiceManager.
     */
    public static void
        updateAgentPool(com.azure.resourcemanager.hybridcontainerservice.HybridContainerServiceManager manager) {
        AgentPool resource = manager.agentPools().getWithResponse(
            "subscriptions/fd3c3665-1729-4b7b-9a38-238e83b0f98b/resourceGroups/testrg/providers/Microsoft.Kubernetes/connectedClusters/test-hybridakscluster",
            "test-hybridaksnodepool", com.azure.core.util.Context.NONE).getValue();
        resource.update().withTags(mapOf("additionalProperties", "sample")).apply();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
