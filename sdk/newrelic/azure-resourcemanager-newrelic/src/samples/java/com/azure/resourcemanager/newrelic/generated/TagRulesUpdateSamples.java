// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.newrelic.generated;

import com.azure.resourcemanager.newrelic.fluent.models.MetricRulesInner;
import com.azure.resourcemanager.newrelic.models.FilteringTag;
import com.azure.resourcemanager.newrelic.models.LogRules;
import com.azure.resourcemanager.newrelic.models.SendAadLogsStatus;
import com.azure.resourcemanager.newrelic.models.SendActivityLogsStatus;
import com.azure.resourcemanager.newrelic.models.SendSubscriptionLogsStatus;
import com.azure.resourcemanager.newrelic.models.TagAction;
import com.azure.resourcemanager.newrelic.models.TagRule;
import java.util.Arrays;

/** Samples for TagRules Update. */
public final class TagRulesUpdateSamples {
    /*
     * x-ms-original-file: specification/newrelic/resource-manager/NewRelic.Observability/preview/2022-07-01-preview/examples/TagRules_Update_MaximumSet_Gen.json
     */
    /**
     * Sample code: TagRules_Update_MaximumSet_Gen.
     *
     * @param manager Entry point to NewRelicManager.
     */
    public static void tagRulesUpdateMaximumSetGen(com.azure.resourcemanager.newrelic.NewRelicManager manager) {
        TagRule resource =
            manager
                .tagRules()
                .getWithResponse(
                    "rgopenapi",
                    "ipxmlcbonyxtolzejcjshkmlron",
                    "bxcantgzggsepbhqmedjqyrqeezmfb",
                    com.azure.core.util.Context.NONE)
                .getValue();
        resource
            .update()
            .withLogRules(
                new LogRules()
                    .withSendAadLogs(SendAadLogsStatus.ENABLED)
                    .withSendSubscriptionLogs(SendSubscriptionLogsStatus.ENABLED)
                    .withSendActivityLogs(SendActivityLogsStatus.ENABLED)
                    .withFilteringTags(
                        Arrays
                            .asList(
                                new FilteringTag()
                                    .withName("saokgpjvdlorciqbjmjxazpee")
                                    .withValue("sarxrqsxouhdjwsrqqicbeirdb")
                                    .withAction(TagAction.INCLUDE))))
            .withMetricRules(
                new MetricRulesInner()
                    .withFilteringTags(
                        Arrays
                            .asList(
                                new FilteringTag()
                                    .withName("saokgpjvdlorciqbjmjxazpee")
                                    .withValue("sarxrqsxouhdjwsrqqicbeirdb")
                                    .withAction(TagAction.INCLUDE)))
                    .withUserEmail("test@testing.com"))
            .apply();
    }

    /*
     * x-ms-original-file: specification/newrelic/resource-manager/NewRelic.Observability/preview/2022-07-01-preview/examples/TagRules_Update_MinimumSet_Gen.json
     */
    /**
     * Sample code: TagRules_Update_MinimumSet_Gen.
     *
     * @param manager Entry point to NewRelicManager.
     */
    public static void tagRulesUpdateMinimumSetGen(com.azure.resourcemanager.newrelic.NewRelicManager manager) {
        TagRule resource =
            manager
                .tagRules()
                .getWithResponse(
                    "rgopenapi",
                    "ipxmlcbonyxtolzejcjshkmlron",
                    "bxcantgzggsepbhqmedjqyrqeezmfb",
                    com.azure.core.util.Context.NONE)
                .getValue();
        resource.update().apply();
    }
}
