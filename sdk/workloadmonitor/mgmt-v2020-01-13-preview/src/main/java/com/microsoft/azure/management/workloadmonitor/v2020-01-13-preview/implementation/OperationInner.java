/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.workloadmonitor.v2020-01-13-preview.implementation;

import com.microsoft.azure.management.workloadmonitor.v2020-01-13-preview.OperationDisplay;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Operation supported by the resource provider.
 */
public class OperationInner {
    /**
     * The name of the operation being performed on this particular object.
     */
    @JsonProperty(value = "name", required = true)
    private String name;

    /**
     * The localized display information for this particular operation or
     * action.
     */
    @JsonProperty(value = "display", required = true)
    private OperationDisplay display;

    /**
     * The intended executor of the operation.
     */
    @JsonProperty(value = "origin", required = true)
    private String origin;

    /**
     * Get the name of the operation being performed on this particular object.
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name of the operation being performed on this particular object.
     *
     * @param name the name value to set
     * @return the OperationInner object itself.
     */
    public OperationInner withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the localized display information for this particular operation or action.
     *
     * @return the display value
     */
    public OperationDisplay display() {
        return this.display;
    }

    /**
     * Set the localized display information for this particular operation or action.
     *
     * @param display the display value to set
     * @return the OperationInner object itself.
     */
    public OperationInner withDisplay(OperationDisplay display) {
        this.display = display;
        return this;
    }

    /**
     * Get the intended executor of the operation.
     *
     * @return the origin value
     */
    public String origin() {
        return this.origin;
    }

    /**
     * Set the intended executor of the operation.
     *
     * @param origin the origin value to set
     * @return the OperationInner object itself.
     */
    public OperationInner withOrigin(String origin) {
        this.origin = origin;
        return this;
    }

}
