/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * abc
 */

package com.microsoft.azure.management.workloadmonitor.v2018_08_31_preview.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.workloadmonitor.v2018_08_31_preview.MonitorInstancesSummarys;
import rx.functions.Func1;
import rx.Observable;
import com.microsoft.azure.Page;
import com.microsoft.azure.management.workloadmonitor.v2018_08_31_preview.MonitorInstance;

class MonitorInstancesSummarysImpl extends WrapperImpl<MonitorInstancesSummarysInner> implements MonitorInstancesSummarys {
    private final WorkloadMonitorManager manager;

    MonitorInstancesSummarysImpl(WorkloadMonitorManager manager) {
        super(manager.inner().monitorInstancesSummarys());
        this.manager = manager;
    }

    public WorkloadMonitorManager manager() {
        return this.manager;
    }

    @Override
    public Observable<MonitorInstance> listAsync() {
        MonitorInstancesSummarysInner client = this.inner();
        return client.listAsync()
        .flatMapIterable(new Func1<Page<MonitorInstanceInner>, Iterable<MonitorInstanceInner>>() {
            @Override
            public Iterable<MonitorInstanceInner> call(Page<MonitorInstanceInner> page) {
                return page.items();
            }
        })
        .map(new Func1<MonitorInstanceInner, MonitorInstance>() {
            @Override
            public MonitorInstance call(MonitorInstanceInner inner) {
                return new MonitorInstanceImpl(inner, manager());
            }
        });
    }

}
