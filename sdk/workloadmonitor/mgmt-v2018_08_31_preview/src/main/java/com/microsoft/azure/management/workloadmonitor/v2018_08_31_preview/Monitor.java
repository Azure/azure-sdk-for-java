/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.workloadmonitor.v2018_08_31_preview;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.workloadmonitor.v2018_08_31_preview.implementation.MonitorInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.workloadmonitor.v2018_08_31_preview.implementation.WorkloadMonitorManager;
import java.util.List;

/**
 * Type representing Monitor.
 */
public interface Monitor extends HasInner<MonitorInner>, Indexable, Updatable<Monitor.Update>, HasManager<WorkloadMonitorManager> {
    /**
     * @return the alertGeneration value.
     */
    AlertGeneration alertGeneration();

    /**
     * @return the componentTypeDisplayName value.
     */
    String componentTypeDisplayName();

    /**
     * @return the componentTypeId value.
     */
    String componentTypeId();

    /**
     * @return the componentTypeName value.
     */
    String componentTypeName();

    /**
     * @return the criteria value.
     */
    List<MonitorCriteria> criteria();

    /**
     * @return the description value.
     */
    String description();

    /**
     * @return the documentationURL value.
     */
    String documentationURL();

    /**
     * @return the etag value.
     */
    String etag();

    /**
     * @return the frequency value.
     */
    Integer frequency();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the lookbackDuration value.
     */
    Integer lookbackDuration();

    /**
     * @return the monitorCategory value.
     */
    MonitorCategory monitorCategory();

    /**
     * @return the monitorDisplayName value.
     */
    String monitorDisplayName();

    /**
     * @return the monitorId value.
     */
    String monitorId();

    /**
     * @return the monitorName value.
     */
    String monitorName();

    /**
     * @return the monitorState value.
     */
    MonitorState monitorState();

    /**
     * @return the monitorType value.
     */
    MonitorType monitorType();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the parentMonitorDisplayName value.
     */
    String parentMonitorDisplayName();

    /**
     * @return the parentMonitorName value.
     */
    String parentMonitorName();

    /**
     * @return the signalName value.
     */
    String signalName();

    /**
     * @return the signalType value.
     */
    String signalType();

    /**
     * @return the type value.
     */
    String type();

    /**
     * The template for a Monitor update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<Monitor> {
    }

    /**
     * Grouping of Monitor update stages.
     */
    interface UpdateStages {
    }
}
