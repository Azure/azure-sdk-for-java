/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.workloadmonitor.v2018_08_31_preview.implementation;

import com.microsoft.azure.AzureEnvironment;
import com.microsoft.azure.AzureResponseBuilder;
import com.microsoft.azure.credentials.AzureTokenCredentials;
import com.microsoft.azure.management.apigeneration.Beta;
import com.microsoft.azure.management.apigeneration.Beta.SinceVersion;
import com.microsoft.azure.arm.resources.AzureConfigurable;
import com.microsoft.azure.serializer.AzureJacksonAdapter;
import com.microsoft.rest.RestClient;
import com.microsoft.azure.management.workloadmonitor.v2018_08_31_preview.Monitors;
import com.microsoft.azure.management.workloadmonitor.v2018_08_31_preview.Components;
import com.microsoft.azure.management.workloadmonitor.v2018_08_31_preview.MonitorInstances;
import com.microsoft.azure.management.workloadmonitor.v2018_08_31_preview.NotificationSettings;
import com.microsoft.azure.management.workloadmonitor.v2018_08_31_preview.ComponentsSummarys;
import com.microsoft.azure.management.workloadmonitor.v2018_08_31_preview.MonitorInstancesSummarys;
import com.microsoft.azure.management.workloadmonitor.v2018_08_31_preview.Operations;
import com.microsoft.azure.arm.resources.implementation.AzureConfigurableCoreImpl;
import com.microsoft.azure.arm.resources.implementation.ManagerCore;

/**
 * Entry point to Azure WorkloadMonitor resource management.
 */
public final class WorkloadMonitorManager extends ManagerCore<WorkloadMonitorManager, WorkloadMonitorAPIImpl> {
    private Monitors monitors;
    private Components components;
    private MonitorInstances monitorInstances;
    private NotificationSettings notificationSettings;
    private ComponentsSummarys componentsSummarys;
    private MonitorInstancesSummarys monitorInstancesSummarys;
    private Operations operations;
    /**
    * Get a Configurable instance that can be used to create WorkloadMonitorManager with optional configuration.
    *
    * @return the instance allowing configurations
    */
    public static Configurable configure() {
        return new WorkloadMonitorManager.ConfigurableImpl();
    }
    /**
    * Creates an instance of WorkloadMonitorManager that exposes WorkloadMonitor resource management API entry points.
    *
    * @param credentials the credentials to use
    * @param subscriptionId the subscription UUID
    * @return the WorkloadMonitorManager
    */
    public static WorkloadMonitorManager authenticate(AzureTokenCredentials credentials, String subscriptionId) {
        return new WorkloadMonitorManager(new RestClient.Builder()
            .withBaseUrl(credentials.environment(), AzureEnvironment.Endpoint.RESOURCE_MANAGER)
            .withCredentials(credentials)
            .withSerializerAdapter(new AzureJacksonAdapter())
            .withResponseBuilderFactory(new AzureResponseBuilder.Factory())
            .build(), subscriptionId);
    }
    /**
    * Creates an instance of WorkloadMonitorManager that exposes WorkloadMonitor resource management API entry points.
    *
    * @param restClient the RestClient to be used for API calls.
    * @param subscriptionId the subscription UUID
    * @return the WorkloadMonitorManager
    */
    public static WorkloadMonitorManager authenticate(RestClient restClient, String subscriptionId) {
        return new WorkloadMonitorManager(restClient, subscriptionId);
    }
    /**
    * The interface allowing configurations to be set.
    */
    public interface Configurable extends AzureConfigurable<Configurable> {
        /**
        * Creates an instance of WorkloadMonitorManager that exposes WorkloadMonitor management API entry points.
        *
        * @param credentials the credentials to use
        * @param subscriptionId the subscription UUID
        * @return the interface exposing WorkloadMonitor management API entry points that work across subscriptions
        */
        WorkloadMonitorManager authenticate(AzureTokenCredentials credentials, String subscriptionId);
    }

    /**
     * @return Entry point to manage Monitors.
     */
    public Monitors monitors() {
        if (this.monitors == null) {
            this.monitors = new MonitorsImpl(this);
        }
        return this.monitors;
    }

    /**
     * @return Entry point to manage Components.
     */
    public Components components() {
        if (this.components == null) {
            this.components = new ComponentsImpl(this);
        }
        return this.components;
    }

    /**
     * @return Entry point to manage MonitorInstances.
     */
    public MonitorInstances monitorInstances() {
        if (this.monitorInstances == null) {
            this.monitorInstances = new MonitorInstancesImpl(this);
        }
        return this.monitorInstances;
    }

    /**
     * @return Entry point to manage NotificationSettings.
     */
    public NotificationSettings notificationSettings() {
        if (this.notificationSettings == null) {
            this.notificationSettings = new NotificationSettingsImpl(this);
        }
        return this.notificationSettings;
    }

    /**
     * @return Entry point to manage ComponentsSummarys.
     */
    public ComponentsSummarys componentsSummarys() {
        if (this.componentsSummarys == null) {
            this.componentsSummarys = new ComponentsSummarysImpl(this);
        }
        return this.componentsSummarys;
    }

    /**
     * @return Entry point to manage MonitorInstancesSummarys.
     */
    public MonitorInstancesSummarys monitorInstancesSummarys() {
        if (this.monitorInstancesSummarys == null) {
            this.monitorInstancesSummarys = new MonitorInstancesSummarysImpl(this);
        }
        return this.monitorInstancesSummarys;
    }

    /**
     * @return Entry point to manage Operations.
     */
    public Operations operations() {
        if (this.operations == null) {
            this.operations = new OperationsImpl(this);
        }
        return this.operations;
    }

    /**
    * The implementation for Configurable interface.
    */
    private static final class ConfigurableImpl extends AzureConfigurableCoreImpl<Configurable> implements Configurable {
        public WorkloadMonitorManager authenticate(AzureTokenCredentials credentials, String subscriptionId) {
           return WorkloadMonitorManager.authenticate(buildRestClient(credentials), subscriptionId);
        }
     }
    private WorkloadMonitorManager(RestClient restClient, String subscriptionId) {
        super(
            restClient,
            subscriptionId,
            new WorkloadMonitorAPIImpl(restClient).withSubscriptionId(subscriptionId));
    }
}
