// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.dell.storage.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.dell.storage.fluent.models.FileSystemResourceInner;
import com.azure.resourcemanager.dell.storage.models.FileSystemResource;
import com.azure.resourcemanager.dell.storage.models.FileSystemResourceProperties;
import com.azure.resourcemanager.dell.storage.models.FileSystemResourceUpdate;
import com.azure.resourcemanager.dell.storage.models.FileSystemResourceUpdateProperties;
import com.azure.resourcemanager.dell.storage.models.ManagedServiceIdentity;
import com.azure.resourcemanager.dell.storage.models.ManagedServiceIdentityUpdate;
import java.util.Collections;
import java.util.Map;

public final class FileSystemResourceImpl
    implements FileSystemResource, FileSystemResource.Definition, FileSystemResource.Update {
    private FileSystemResourceInner innerObject;

    private final com.azure.resourcemanager.dell.storage.DellStorageManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public FileSystemResourceProperties properties() {
        return this.innerModel().properties();
    }

    public ManagedServiceIdentity identity() {
        return this.innerModel().identity();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public FileSystemResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.dell.storage.DellStorageManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String filesystemName;

    private FileSystemResourceUpdate updateProperties;

    public FileSystemResourceImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public FileSystemResource create() {
        this.innerObject = serviceManager.serviceClient()
            .getFileSystems()
            .createOrUpdate(resourceGroupName, filesystemName, this.innerModel(), Context.NONE);
        return this;
    }

    public FileSystemResource create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getFileSystems()
            .createOrUpdate(resourceGroupName, filesystemName, this.innerModel(), context);
        return this;
    }

    FileSystemResourceImpl(String name, com.azure.resourcemanager.dell.storage.DellStorageManager serviceManager) {
        this.innerObject = new FileSystemResourceInner();
        this.serviceManager = serviceManager;
        this.filesystemName = name;
    }

    public FileSystemResourceImpl update() {
        this.updateProperties = new FileSystemResourceUpdate();
        return this;
    }

    public FileSystemResource apply() {
        this.innerObject = serviceManager.serviceClient()
            .getFileSystems()
            .updateWithResponse(resourceGroupName, filesystemName, updateProperties, Context.NONE)
            .getValue();
        return this;
    }

    public FileSystemResource apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getFileSystems()
            .updateWithResponse(resourceGroupName, filesystemName, updateProperties, context)
            .getValue();
        return this;
    }

    FileSystemResourceImpl(FileSystemResourceInner innerObject,
        com.azure.resourcemanager.dell.storage.DellStorageManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.filesystemName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "filesystems");
    }

    public FileSystemResource refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getFileSystems()
            .getByResourceGroupWithResponse(resourceGroupName, filesystemName, Context.NONE)
            .getValue();
        return this;
    }

    public FileSystemResource refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getFileSystems()
            .getByResourceGroupWithResponse(resourceGroupName, filesystemName, context)
            .getValue();
        return this;
    }

    public FileSystemResourceImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public FileSystemResourceImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public FileSystemResourceImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateProperties.withTags(tags);
            return this;
        }
    }

    public FileSystemResourceImpl withProperties(FileSystemResourceProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }

    public FileSystemResourceImpl withIdentity(ManagedServiceIdentity identity) {
        this.innerModel().withIdentity(identity);
        return this;
    }

    public FileSystemResourceImpl withIdentity(ManagedServiceIdentityUpdate identity) {
        this.updateProperties.withIdentity(identity);
        return this;
    }

    public FileSystemResourceImpl withProperties(FileSystemResourceUpdateProperties properties) {
        this.updateProperties.withProperties(properties);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel() == null || this.innerModel().id() == null;
    }
}
