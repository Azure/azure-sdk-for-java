// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.dell.storage.generated;

import com.azure.resourcemanager.dell.storage.models.Capacity;
import com.azure.resourcemanager.dell.storage.models.EncryptionIdentityType;
import com.azure.resourcemanager.dell.storage.models.EncryptionIdentityUpdateProperties;
import com.azure.resourcemanager.dell.storage.models.EncryptionUpdateProperties;
import com.azure.resourcemanager.dell.storage.models.FileSystemResource;
import com.azure.resourcemanager.dell.storage.models.FileSystemResourceUpdateProperties;
import com.azure.resourcemanager.dell.storage.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.dell.storage.models.ManagedServiceIdentityUpdate;
import com.azure.resourcemanager.dell.storage.models.ResourceEncryptionType;
import com.azure.resourcemanager.dell.storage.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for FileSystems Update.
 */
public final class FileSystemsUpdateSamples {
    /*
     * x-ms-original-file: 2025-03-21-preview/FileSystems_Update_MinimumSet_Gen.json
     */
    /**
     * Sample code: FileSystems_Update_MinimumSet_Gen.
     * 
     * @param manager Entry point to DellStorageManager.
     */
    public static void
        fileSystemsUpdateMinimumSetGen(com.azure.resourcemanager.dell.storage.DellStorageManager manager) {
        FileSystemResource resource = manager.fileSystems()
            .getByResourceGroupWithResponse("rgDell", "abcd", com.azure.core.util.Context.NONE)
            .getValue();
        resource.update()
            .withProperties(
                new FileSystemResourceUpdateProperties().withDelegatedSubnetId("uqfvajvyltgmqvdnxhbrfqbpuey")
                    .withCapacity(new Capacity().withCurrent("5")))
            .apply();
    }

    /*
     * x-ms-original-file: 2025-03-21-preview/FileSystems_Update_MaximumSet_Gen.json
     */
    /**
     * Sample code: FileSystems_Update_MaximumSet_Gen.
     * 
     * @param manager Entry point to DellStorageManager.
     */
    public static void
        fileSystemsUpdateMaximumSetGen(com.azure.resourcemanager.dell.storage.DellStorageManager manager) {
        FileSystemResource resource = manager.fileSystems()
            .getByResourceGroupWithResponse("rgDell", "abcd", com.azure.core.util.Context.NONE)
            .getValue();
        resource.update()
            .withTags(mapOf("key6099", "fakeTokenPlaceholder"))
            .withIdentity(
                new ManagedServiceIdentityUpdate().withType(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED)
                    .withUserAssignedIdentities(mapOf("key7645", new UserAssignedIdentity())))
            .withProperties(new FileSystemResourceUpdateProperties().withDelegatedSubnetId("bfpuabdz")
                .withCapacity(new Capacity().withCurrent("5"))
                .withEncryption(new EncryptionUpdateProperties()
                    .withEncryptionType(ResourceEncryptionType.CUSTOMER_MANAGED_KEYS_CMK)
                    .withKeyUrl("fakeTokenPlaceholder")
                    .withEncryptionIdentityProperties(new EncryptionIdentityUpdateProperties()
                        .withIdentityType(EncryptionIdentityType.USER_ASSIGNED)
                        .withIdentityResourceId(
                            "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}"))))
            .apply();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
