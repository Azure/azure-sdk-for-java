// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.dell.storage.generated;

import com.azure.resourcemanager.dell.storage.models.EncryptionIdentityProperties;
import com.azure.resourcemanager.dell.storage.models.EncryptionIdentityType;
import com.azure.resourcemanager.dell.storage.models.EncryptionProperties;
import com.azure.resourcemanager.dell.storage.models.FileSystemResourceProperties;
import com.azure.resourcemanager.dell.storage.models.ManagedServiceIdentity;
import com.azure.resourcemanager.dell.storage.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.dell.storage.models.MarketplaceDetails;
import com.azure.resourcemanager.dell.storage.models.ResourceEncryptionType;
import com.azure.resourcemanager.dell.storage.models.UserAssignedIdentity;
import com.azure.resourcemanager.dell.storage.models.UserDetails;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for FileSystems CreateOrUpdate.
 */
public final class FileSystemsCreateOrUpdateSamples {
    /*
     * x-ms-original-file: 2025-03-21-preview/FileSystems_CreateOrUpdate_MaximumSet_Gen.json
     */
    /**
     * Sample code: FileSystems_CreateOrUpdate_MaximumSet_Gen.
     * 
     * @param manager Entry point to DellStorageManager.
     */
    public static void
        fileSystemsCreateOrUpdateMaximumSetGen(com.azure.resourcemanager.dell.storage.DellStorageManager manager) {
        manager.fileSystems()
            .define("abcd")
            .withRegion("cvbmsqftppe")
            .withExistingResourceGroup("rgDell")
            .withTags(mapOf("key7594", "fakeTokenPlaceholder"))
            .withProperties(new FileSystemResourceProperties()
                .withMarketplace(new MarketplaceDetails().withMarketplaceSubscriptionId("mvjcxwndudbylynme")
                    .withPlanId("eekvwfndjoxijeasksnt")
                    .withOfferId("bcganbkmvznyqfnvhjuag")
                    .withPublisherId("trdzykoeskmcwpo")
                    .withPrivateOfferId("privateOfferId")
                    .withPlanName("planeName"))
                .withDelegatedSubnetId("rqkpvczbtqcxiaivtbuixblb")
                .withDelegatedSubnetCidr("10.0.0.1/24")
                .withUser(new UserDetails().withEmail("jwogfgznmjabdbcjcljjlkxdpc"))
                .withSmartConnectFqdn("fqdn")
                .withOneFsUrl("oneFsUrl")
                .withDellReferenceNumber("fhewkj")
                .withEncryption(new EncryptionProperties()
                    .withEncryptionType(ResourceEncryptionType.CUSTOMER_MANAGED_KEYS_CMK)
                    .withKeyUrl("fakeTokenPlaceholder")
                    .withEncryptionIdentityProperties(new EncryptionIdentityProperties()
                        .withIdentityType(EncryptionIdentityType.USER_ASSIGNED)
                        .withIdentityResourceId(
                            "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}"))))
            .withIdentity(new ManagedServiceIdentity().withType(ManagedServiceIdentityType.USER_ASSIGNED)
                .withUserAssignedIdentities(mapOf("key7644", new UserAssignedIdentity())))
            .create();
    }

    /*
     * x-ms-original-file: 2025-03-21-preview/FileSystems_CreateOrUpdate_MinimumSet_Gen.json
     */
    /**
     * Sample code: FileSystems_CreateOrUpdate_MinimumSet_Gen.
     * 
     * @param manager Entry point to DellStorageManager.
     */
    public static void
        fileSystemsCreateOrUpdateMinimumSetGen(com.azure.resourcemanager.dell.storage.DellStorageManager manager) {
        manager.fileSystems()
            .define("abcd")
            .withRegion("tbcvhxzpgrijtdygkttnfswwtacs")
            .withExistingResourceGroup("rgDell")
            .withProperties(
                new FileSystemResourceProperties()
                    .withMarketplace(new MarketplaceDetails().withPlanId("lgozf")
                        .withOfferId("pzhjvibxqgeqkndqnjlduwnxqbr")
                        .withPrivateOfferId("privateOfferId")
                        .withPlanName("planeName"))
                    .withDelegatedSubnetId("yp")
                    .withDelegatedSubnetCidr("10.0.0.1/24")
                    .withUser(new UserDetails().withEmail("hoznewwtzmyjzctzosfuh"))
                    .withDellReferenceNumber("fhewkj")
                    .withEncryption(new EncryptionProperties()
                        .withEncryptionType(ResourceEncryptionType.MICROSOFT_MANAGED_KEYS_MMK)))
            .create();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
