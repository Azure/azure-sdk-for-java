// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.vision.face.generated;

import com.azure.ai.vision.face.models.AuditLivenessResponseInfo;
import com.azure.ai.vision.face.models.AuditRequestInfo;
import com.azure.ai.vision.face.models.FaceSessionStatus;
import com.azure.ai.vision.face.models.LivenessResponseBody;
import com.azure.ai.vision.face.models.LivenessSession;
import com.azure.ai.vision.face.models.LivenessSessionAuditEntry;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class GetLivenessSessionResultTests extends FaceAdministrationClientTestBase {
    @Test
    @Disabled
    public void testGetLivenessSessionResultTests() {
        // method invocation
        LivenessSession response = faceSessionClient.getLivenessSessionResult("b12e033e-bda7-4b83-a211-e721c661f30e");

        // response assertion
        Assertions.assertNotNull(response);
        // verify property "id"
        Assertions.assertEquals("b12e033e-bda7-4b83-a211-e721c661f30e", response.getId());
        // verify property "createdDateTime"
        Assertions.assertNotNull(response.getCreatedDateTime());
        // verify property "sessionStartDateTime"
        Assertions.assertNotNull(response.getSessionStartDateTime());
        // verify property "sessionExpired"
        Assertions.assertEquals(true, response.isSessionExpired());
        // verify property "deviceCorrelationId"
        Assertions.assertEquals("your_device_correlation_id", response.getDeviceCorrelationId());
        // verify property "authTokenTimeToLiveInSeconds"
        Assertions.assertEquals(600, response.getAuthTokenTimeToLiveInSeconds());
        // verify property "status"
        Assertions.assertEquals(FaceSessionStatus.NOT_STARTED, response.getStatus());
        // verify property "result"
        LivenessSessionAuditEntry responseResult = response.getResult();
        Assertions.assertNotNull(responseResult);
        Assertions.assertEquals(4L, responseResult.getId());
        Assertions.assertEquals("b12e033e-bda7-4b83-a211-e721c661f30e", responseResult.getSessionId());
        Assertions.assertEquals("4af681e9-0e25-43e9-9922-a7adebf13b2f", responseResult.getRequestId());
        Assertions.assertEquals("4af681e9-0e25-43e9-9922-a7adebf13b2f", responseResult.getClientRequestId());
        Assertions.assertNotNull(responseResult.getReceivedDateTime());
        AuditRequestInfo responseResultRequest = responseResult.getRequest();
        Assertions.assertNotNull(responseResultRequest);
        Assertions.assertEquals("/face/v1.2-preview.1/detectliveness/singlemodal", responseResultRequest.getUrl());
        Assertions.assertEquals("POST", responseResultRequest.getMethod());
        Assertions.assertEquals(18L, responseResultRequest.getContentLength());
        Assertions.assertEquals("multipart/form-data", responseResultRequest.getContentType());
        Assertions.assertEquals(
            "Mozilla/5.0 (Linux) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Mobile Safari/537.36",
            responseResultRequest.getUserAgent());
        AuditLivenessResponseInfo responseResultResponse = responseResult.getResponse();
        Assertions.assertNotNull(responseResultResponse);
        LivenessResponseBody responseResultResponseBody = responseResultResponse.getBody();
        Assertions.assertNotNull(responseResultResponseBody);
        Assertions.assertEquals(200, responseResultResponse.getStatusCode());
        Assertions.assertEquals(1200L, responseResultResponse.getLatencyInMilliseconds());
        Assertions.assertEquals("1CC98BA83EAF1D0FF7F566FAEFCCCC787819FFA01251E2D9299143F7AD6651DB",
            responseResult.getDigest());
    }
}
