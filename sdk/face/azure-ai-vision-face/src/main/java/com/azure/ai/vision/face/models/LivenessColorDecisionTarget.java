// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.vision.face.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The target from color image used for liveness classification.
 */
@Immutable
public final class LivenessColorDecisionTarget implements JsonSerializable<LivenessColorDecisionTarget> {
    /*
     * The face region where the liveness classification was made on.
     */
    @Generated
    private final FaceRectangle faceRectangle;

    /**
     * Creates an instance of LivenessColorDecisionTarget class.
     * 
     * @param faceRectangle the faceRectangle value to set.
     */
    @Generated
    private LivenessColorDecisionTarget(FaceRectangle faceRectangle) {
        this.faceRectangle = faceRectangle;
    }

    /**
     * Get the faceRectangle property: The face region where the liveness classification was made on.
     * 
     * @return the faceRectangle value.
     */
    @Generated
    public FaceRectangle getFaceRectangle() {
        return this.faceRectangle;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("faceRectangle", this.faceRectangle);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of LivenessColorDecisionTarget from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of LivenessColorDecisionTarget if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the LivenessColorDecisionTarget.
     */
    @Generated
    public static LivenessColorDecisionTarget fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            FaceRectangle faceRectangle = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("faceRectangle".equals(fieldName)) {
                    faceRectangle = FaceRectangle.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }
            return new LivenessColorDecisionTarget(faceRectangle);
        });
    }
}
