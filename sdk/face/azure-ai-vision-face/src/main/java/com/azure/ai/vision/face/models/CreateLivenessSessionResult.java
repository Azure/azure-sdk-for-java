// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.vision.face.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Response of liveness session creation.
 */
@Immutable
public final class CreateLivenessSessionResult {

    /*
     * The unique session ID of the created session. It will expire 48 hours after it was created or may be deleted
     * sooner using the corresponding Session DELETE operation.
     */
    @Generated
    @JsonProperty(value = "sessionId")
    private final String sessionId;

    /*
     * Bearer token to provide authentication for the Vision SDK running on a client application. This Bearer token has
     * limited permissions to perform only the required action and expires after the TTL time. It is also auditable.
     */
    @Generated
    @JsonProperty(value = "authToken")
    private final String authToken;

    /**
     * Creates an instance of CreateLivenessSessionResult class.
     *
     * @param sessionId the sessionId value to set.
     * @param authToken the authToken value to set.
     */
    @Generated
    @JsonCreator
    private CreateLivenessSessionResult(@JsonProperty(value = "sessionId") String sessionId,
        @JsonProperty(value = "authToken") String authToken) {
        this.sessionId = sessionId;
        this.authToken = authToken;
    }

    /**
     * Get the sessionId property: The unique session ID of the created session. It will expire 48 hours after it was
     * created or may be deleted sooner using the corresponding Session DELETE operation.
     *
     * @return the sessionId value.
     */
    @Generated
    public String getSessionId() {
        return this.sessionId;
    }

    /**
     * Get the authToken property: Bearer token to provide authentication for the Vision SDK running on a client
     * application. This Bearer token has limited permissions to perform only the required action and expires after the
     * TTL time. It is also auditable.
     *
     * @return the authToken value.
     */
    @Generated
    public String getAuthToken() {
        return this.authToken;
    }
}
