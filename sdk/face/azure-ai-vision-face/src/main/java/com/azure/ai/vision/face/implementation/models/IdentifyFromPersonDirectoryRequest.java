// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.vision.face.implementation.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The IdentifyFromPersonDirectoryRequest model.
 */
@Fluent
public final class IdentifyFromPersonDirectoryRequest implements JsonSerializable<IdentifyFromPersonDirectoryRequest> {
    /*
     * Array of query faces faceIds, created by the "Detect". Each of the faces are identified independently. The valid number of faceIds is between [1, 10].
     */
    @Generated
    private final List<String> faceIds;

    /*
     * Array of personIds created in Person Directory "Create Person". The valid number of personIds is between [1,30].
     */
    @Generated
    private final List<String> personIds;

    /*
     * The range of maxNumOfCandidatesReturned is between 1 and 100. Default value is 10.
     */
    @Generated
    private Integer maxNumOfCandidatesReturned;

    /*
     * Customized identification confidence threshold, in the range of [0, 1]. Advanced user can tweak this value to override default internal threshold for better precision on their scenario data. Note there is no guarantee of this threshold value working on other data and after algorithm updates.
     */
    @Generated
    private Double confidenceThreshold;

    /**
     * Creates an instance of IdentifyFromPersonDirectoryRequest class.
     * 
     * @param faceIds the faceIds value to set.
     * @param personIds the personIds value to set.
     */
    @Generated
    public IdentifyFromPersonDirectoryRequest(List<String> faceIds, List<String> personIds) {
        this.faceIds = faceIds;
        this.personIds = personIds;
    }

    /**
     * Get the faceIds property: Array of query faces faceIds, created by the "Detect". Each of the faces are identified
     * independently. The valid number of faceIds is between [1, 10].
     * 
     * @return the faceIds value.
     */
    @Generated
    public List<String> getFaceIds() {
        return this.faceIds;
    }

    /**
     * Get the personIds property: Array of personIds created in Person Directory "Create Person". The valid number of
     * personIds is between [1,30].
     * 
     * @return the personIds value.
     */
    @Generated
    public List<String> getPersonIds() {
        return this.personIds;
    }

    /**
     * Get the maxNumOfCandidatesReturned property: The range of maxNumOfCandidatesReturned is between 1 and 100.
     * Default value is 10.
     * 
     * @return the maxNumOfCandidatesReturned value.
     */
    @Generated
    public Integer getMaxNumOfCandidatesReturned() {
        return this.maxNumOfCandidatesReturned;
    }

    /**
     * Set the maxNumOfCandidatesReturned property: The range of maxNumOfCandidatesReturned is between 1 and 100.
     * Default value is 10.
     * 
     * @param maxNumOfCandidatesReturned the maxNumOfCandidatesReturned value to set.
     * @return the IdentifyFromPersonDirectoryRequest object itself.
     */
    @Generated
    public IdentifyFromPersonDirectoryRequest setMaxNumOfCandidatesReturned(Integer maxNumOfCandidatesReturned) {
        this.maxNumOfCandidatesReturned = maxNumOfCandidatesReturned;
        return this;
    }

    /**
     * Get the confidenceThreshold property: Customized identification confidence threshold, in the range of [0, 1].
     * Advanced user can tweak this value to override default internal threshold for better precision on their scenario
     * data. Note there is no guarantee of this threshold value working on other data and after algorithm updates.
     * 
     * @return the confidenceThreshold value.
     */
    @Generated
    public Double getConfidenceThreshold() {
        return this.confidenceThreshold;
    }

    /**
     * Set the confidenceThreshold property: Customized identification confidence threshold, in the range of [0, 1].
     * Advanced user can tweak this value to override default internal threshold for better precision on their scenario
     * data. Note there is no guarantee of this threshold value working on other data and after algorithm updates.
     * 
     * @param confidenceThreshold the confidenceThreshold value to set.
     * @return the IdentifyFromPersonDirectoryRequest object itself.
     */
    @Generated
    public IdentifyFromPersonDirectoryRequest setConfidenceThreshold(Double confidenceThreshold) {
        this.confidenceThreshold = confidenceThreshold;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("faceIds", this.faceIds, (writer, element) -> writer.writeString(element));
        jsonWriter.writeArrayField("personIds", this.personIds, (writer, element) -> writer.writeString(element));
        jsonWriter.writeNumberField("maxNumOfCandidatesReturned", this.maxNumOfCandidatesReturned);
        jsonWriter.writeNumberField("confidenceThreshold", this.confidenceThreshold);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of IdentifyFromPersonDirectoryRequest from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of IdentifyFromPersonDirectoryRequest if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the IdentifyFromPersonDirectoryRequest.
     */
    @Generated
    public static IdentifyFromPersonDirectoryRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            List<String> faceIds = null;
            List<String> personIds = null;
            Integer maxNumOfCandidatesReturned = null;
            Double confidenceThreshold = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("faceIds".equals(fieldName)) {
                    faceIds = reader.readArray(reader1 -> reader1.getString());
                } else if ("personIds".equals(fieldName)) {
                    personIds = reader.readArray(reader1 -> reader1.getString());
                } else if ("maxNumOfCandidatesReturned".equals(fieldName)) {
                    maxNumOfCandidatesReturned = reader.getNullable(JsonReader::getInt);
                } else if ("confidenceThreshold".equals(fieldName)) {
                    confidenceThreshold = reader.getNullable(JsonReader::getDouble);
                } else {
                    reader.skipChildren();
                }
            }
            IdentifyFromPersonDirectoryRequest deserializedIdentifyFromPersonDirectoryRequest
                = new IdentifyFromPersonDirectoryRequest(faceIds, personIds);
            deserializedIdentifyFromPersonDirectoryRequest.maxNumOfCandidatesReturned = maxNumOfCandidatesReturned;
            deserializedIdentifyFromPersonDirectoryRequest.confidenceThreshold = confidenceThreshold;

            return deserializedIdentifyFromPersonDirectoryRequest;
        });
    }
}
