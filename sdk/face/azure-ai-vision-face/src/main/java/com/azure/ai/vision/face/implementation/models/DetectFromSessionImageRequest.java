// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.vision.face.implementation.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The DetectFromSessionImageRequest model.
 */
@Immutable
public final class DetectFromSessionImageRequest implements JsonSerializable<DetectFromSessionImageRequest> {

    /*
     * Id of session image.
     */
    @Generated
    private final String sessionImageId;

    /**
     * Creates an instance of DetectFromSessionImageRequest class.
     *
     * @param sessionImageId the sessionImageId value to set.
     */
    @Generated
    public DetectFromSessionImageRequest(String sessionImageId) {
        this.sessionImageId = sessionImageId;
    }

    /**
     * Get the sessionImageId property: Id of session image.
     *
     * @return the sessionImageId value.
     */
    @Generated
    public String getSessionImageId() {
        return this.sessionImageId;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("sessionImageId", this.sessionImageId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DetectFromSessionImageRequest from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of DetectFromSessionImageRequest if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the DetectFromSessionImageRequest.
     */
    @Generated
    public static DetectFromSessionImageRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String sessionImageId = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("sessionImageId".equals(fieldName)) {
                    sessionImageId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            return new DetectFromSessionImageRequest(sessionImageId);
        });
    }
}
