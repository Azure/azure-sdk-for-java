// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.vision.face.implementation.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The UpdateFaceRequest1 model.
 */
@Fluent
public final class UpdateFaceRequest1 implements JsonSerializable<UpdateFaceRequest1> {

    /*
     * User-provided data attached to the face. The length limit is 1K.
     */
    @Generated
    private String userData;

    /**
     * Creates an instance of UpdateFaceRequest1 class.
     */
    @Generated
    public UpdateFaceRequest1() {
    }

    /**
     * Get the userData property: User-provided data attached to the face. The length limit is 1K.
     *
     * @return the userData value.
     */
    @Generated
    public String getUserData() {
        return this.userData;
    }

    /**
     * Set the userData property: User-provided data attached to the face. The length limit is 1K.
     *
     * @param userData the userData value to set.
     * @return the UpdateFaceRequest1 object itself.
     */
    @Generated
    public UpdateFaceRequest1 setUserData(String userData) {
        this.userData = userData;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("userData", this.userData);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of UpdateFaceRequest1 from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of UpdateFaceRequest1 if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the UpdateFaceRequest1.
     */
    @Generated
    public static UpdateFaceRequest1 fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            UpdateFaceRequest1 deserializedUpdateFaceRequest1 = new UpdateFaceRequest1();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("userData".equals(fieldName)) {
                    deserializedUpdateFaceRequest1.userData = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            return deserializedUpdateFaceRequest1;
        });
    }
}
