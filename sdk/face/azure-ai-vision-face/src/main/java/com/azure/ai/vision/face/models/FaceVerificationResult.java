// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.vision.face.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Verify result.
 */
@Immutable
public final class FaceVerificationResult implements JsonSerializable<FaceVerificationResult> {
    /*
     * True if the two faces belong to the same person or the face belongs to the person, otherwise false.
     */
    @Generated
    private final boolean isIdentical;

    /*
     * A number indicates the similarity confidence of whether two faces belong to the same person, or whether the face belongs to the person. By default, isIdentical is set to True if similarity confidence is greater than or equal to 0.5. This is useful for advanced users to override 'isIdentical' and fine-tune the result on their own data.
     */
    @Generated
    private final double confidence;

    /**
     * Creates an instance of FaceVerificationResult class.
     * 
     * @param isIdentical the isIdentical value to set.
     * @param confidence the confidence value to set.
     */
    @Generated
    private FaceVerificationResult(boolean isIdentical, double confidence) {
        this.isIdentical = isIdentical;
        this.confidence = confidence;
    }

    /**
     * Get the isIdentical property: True if the two faces belong to the same person or the face belongs to the person,
     * otherwise false.
     * 
     * @return the isIdentical value.
     */
    @Generated
    public boolean isIdentical() {
        return this.isIdentical;
    }

    /**
     * Get the confidence property: A number indicates the similarity confidence of whether two faces belong to the same
     * person, or whether the face belongs to the person. By default, isIdentical is set to True if similarity
     * confidence is greater than or equal to 0.5. This is useful for advanced users to override 'isIdentical' and
     * fine-tune the result on their own data.
     * 
     * @return the confidence value.
     */
    @Generated
    public double getConfidence() {
        return this.confidence;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("isIdentical", this.isIdentical);
        jsonWriter.writeDoubleField("confidence", this.confidence);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of FaceVerificationResult from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of FaceVerificationResult if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the FaceVerificationResult.
     */
    @Generated
    public static FaceVerificationResult fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            boolean isIdentical = false;
            double confidence = 0.0;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("isIdentical".equals(fieldName)) {
                    isIdentical = reader.getBoolean();
                } else if ("confidence".equals(fieldName)) {
                    confidence = reader.getDouble();
                } else {
                    reader.skipChildren();
                }
            }
            return new FaceVerificationResult(isIdentical, confidence);
        });
    }
}
