// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.vision.face.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;

/**
 * Request of liveness with verify session creation.
 */
@Fluent
public final class CreateLivenessWithVerifySessionContent {

    /*
     * Type of liveness mode the client should follow.
     */
    @Generated
    private final LivenessOperationMode livenessOperationMode;

    /*
     * Whether or not to allow client to set their own 'deviceCorrelationId' via the Vision SDK. Default is false, and
     * 'deviceCorrelationId' must be set in this request body.
     */
    @Generated
    private Boolean deviceCorrelationIdSetInClient;

    /*
     * Whether or not store the session image.
     */
    @Generated
    private Boolean enableSessionImage;

    /*
     * Unique Guid per each end-user device. This is to provide rate limiting and anti-hammering. If
     * 'deviceCorrelationIdSetInClient' is true in this request, this 'deviceCorrelationId' must be null.
     */
    @Generated
    private String deviceCorrelationId;

    /*
     * Seconds the session should last for. Range is 60 to 86400 seconds. Default value is 600.
     */
    @Generated
    private Integer authTokenTimeToLiveInSeconds;

    /*
     * Whether or not return the verify image hash.
     */
    @Generated
    private Boolean returnVerifyImageHash;

    /*
     * Threshold for confidence of the face verification. Please refer to the documentation for more details.
     * https://learn.microsoft.com/legal/cognitive-services/face/characteristics-and-limitations?context=%2Fazure%2Fai-
     * services%2Fcomputer-vision%2Fcontext%2Fcontext#recognition-confidence-score
     */
    @Generated
    private Double verifyConfidenceThreshold;

    /**
     * Get the livenessOperationMode property: Type of liveness mode the client should follow.
     *
     * @return the livenessOperationMode value.
     */
    @Generated
    public LivenessOperationMode getLivenessOperationMode() {
        return this.livenessOperationMode;
    }

    /**
     * Get the deviceCorrelationIdSetInClient property: Whether or not to allow client to set their own
     * 'deviceCorrelationId' via the Vision SDK. Default is false, and 'deviceCorrelationId' must be set in this request
     * body.
     *
     * @return the deviceCorrelationIdSetInClient value.
     */
    @Generated
    public Boolean isDeviceCorrelationIdSetInClient() {
        return this.deviceCorrelationIdSetInClient;
    }

    /**
     * Set the deviceCorrelationIdSetInClient property: Whether or not to allow client to set their own
     * 'deviceCorrelationId' via the Vision SDK. Default is false, and 'deviceCorrelationId' must be set in this request
     * body.
     *
     * @param deviceCorrelationIdSetInClient the deviceCorrelationIdSetInClient value to set.
     * @return the CreateLivenessWithVerifySessionContent object itself.
     */
    @Generated
    public CreateLivenessWithVerifySessionContent
        setDeviceCorrelationIdSetInClient(Boolean deviceCorrelationIdSetInClient) {
        this.deviceCorrelationIdSetInClient = deviceCorrelationIdSetInClient;
        return this;
    }

    /**
     * Get the enableSessionImage property: Whether or not store the session image.
     *
     * @return the enableSessionImage value.
     */
    @Generated
    public Boolean isEnableSessionImage() {
        return this.enableSessionImage;
    }

    /**
     * Set the enableSessionImage property: Whether or not store the session image.
     *
     * @param enableSessionImage the enableSessionImage value to set.
     * @return the CreateLivenessWithVerifySessionContent object itself.
     */
    @Generated
    public CreateLivenessWithVerifySessionContent setEnableSessionImage(Boolean enableSessionImage) {
        this.enableSessionImage = enableSessionImage;
        return this;
    }

    /**
     * Get the deviceCorrelationId property: Unique Guid per each end-user device. This is to provide rate limiting and
     * anti-hammering. If 'deviceCorrelationIdSetInClient' is true in this request, this 'deviceCorrelationId' must be
     * null.
     *
     * @return the deviceCorrelationId value.
     */
    @Generated
    public String getDeviceCorrelationId() {
        return this.deviceCorrelationId;
    }

    /**
     * Set the deviceCorrelationId property: Unique Guid per each end-user device. This is to provide rate limiting and
     * anti-hammering. If 'deviceCorrelationIdSetInClient' is true in this request, this 'deviceCorrelationId' must be
     * null.
     *
     * @param deviceCorrelationId the deviceCorrelationId value to set.
     * @return the CreateLivenessWithVerifySessionContent object itself.
     */
    @Generated
    public CreateLivenessWithVerifySessionContent setDeviceCorrelationId(String deviceCorrelationId) {
        this.deviceCorrelationId = deviceCorrelationId;
        return this;
    }

    /**
     * Get the authTokenTimeToLiveInSeconds property: Seconds the session should last for. Range is 60 to 86400 seconds.
     * Default value is 600.
     *
     * @return the authTokenTimeToLiveInSeconds value.
     */
    @Generated
    public Integer getAuthTokenTimeToLiveInSeconds() {
        return this.authTokenTimeToLiveInSeconds;
    }

    /**
     * Set the authTokenTimeToLiveInSeconds property: Seconds the session should last for. Range is 60 to 86400 seconds.
     * Default value is 600.
     *
     * @param authTokenTimeToLiveInSeconds the authTokenTimeToLiveInSeconds value to set.
     * @return the CreateLivenessWithVerifySessionContent object itself.
     */
    @Generated
    public CreateLivenessWithVerifySessionContent
        setAuthTokenTimeToLiveInSeconds(Integer authTokenTimeToLiveInSeconds) {
        this.authTokenTimeToLiveInSeconds = authTokenTimeToLiveInSeconds;
        return this;
    }

    /**
     * Get the returnVerifyImageHash property: Whether or not return the verify image hash.
     *
     * @return the returnVerifyImageHash value.
     */
    @Generated
    public Boolean isReturnVerifyImageHash() {
        return this.returnVerifyImageHash;
    }

    /**
     * Set the returnVerifyImageHash property: Whether or not return the verify image hash.
     *
     * @param returnVerifyImageHash the returnVerifyImageHash value to set.
     * @return the CreateLivenessWithVerifySessionContent object itself.
     */
    @Generated
    public CreateLivenessWithVerifySessionContent setReturnVerifyImageHash(Boolean returnVerifyImageHash) {
        this.returnVerifyImageHash = returnVerifyImageHash;
        return this;
    }

    /**
     * Get the verifyConfidenceThreshold property: Threshold for confidence of the face verification. Please refer to
     * the documentation for more details.
     * https://learn.microsoft.com/legal/cognitive-services/face/characteristics-and-limitations?context=%2Fazure%2Fai-services%2Fcomputer-vision%2Fcontext%2Fcontext#recognition-confidence-score.
     *
     * @return the verifyConfidenceThreshold value.
     */
    @Generated
    public Double getVerifyConfidenceThreshold() {
        return this.verifyConfidenceThreshold;
    }

    /**
     * Set the verifyConfidenceThreshold property: Threshold for confidence of the face verification. Please refer to
     * the documentation for more details.
     * https://learn.microsoft.com/legal/cognitive-services/face/characteristics-and-limitations?context=%2Fazure%2Fai-services%2Fcomputer-vision%2Fcontext%2Fcontext#recognition-confidence-score.
     *
     * @param verifyConfidenceThreshold the verifyConfidenceThreshold value to set.
     * @return the CreateLivenessWithVerifySessionContent object itself.
     */
    @Generated
    public CreateLivenessWithVerifySessionContent setVerifyConfidenceThreshold(Double verifyConfidenceThreshold) {
        this.verifyConfidenceThreshold = verifyConfidenceThreshold;
        return this;
    }

    /*
     * The model version used for liveness classification. This is an optional parameter, and if this is not specified,
     * then the latest supported model version will be chosen
     */
    @Generated
    private LivenessModel livenessModelVersion;

    /*
     * The image stream for verify. Content-Disposition header field for this part must have filename.
     */
    @Generated
    private final VerifyImageFileDetails verifyImage;

    /**
     * Creates an instance of CreateLivenessWithVerifySessionContent class.
     *
     * @param livenessOperationMode the livenessOperationMode value to set.
     * @param verifyImage the verifyImage value to set.
     */
    @Generated
    public CreateLivenessWithVerifySessionContent(LivenessOperationMode livenessOperationMode,
        VerifyImageFileDetails verifyImage) {
        this.livenessOperationMode = livenessOperationMode;
        this.verifyImage = verifyImage;
    }

    /**
     * Get the livenessModelVersion property: The model version used for liveness classification. This is an optional
     * parameter, and if this is not specified, then the latest supported model version will be chosen.
     *
     * @return the livenessModelVersion value.
     */
    @Generated
    public LivenessModel getLivenessModelVersion() {
        return this.livenessModelVersion;
    }

    /**
     * Set the livenessModelVersion property: The model version used for liveness classification. This is an optional
     * parameter, and if this is not specified, then the latest supported model version will be chosen.
     *
     * @param livenessModelVersion the livenessModelVersion value to set.
     * @return the CreateLivenessWithVerifySessionContent object itself.
     */
    @Generated
    public CreateLivenessWithVerifySessionContent setLivenessModelVersion(LivenessModel livenessModelVersion) {
        this.livenessModelVersion = livenessModelVersion;
        return this;
    }

    /**
     * Get the verifyImage property: The image stream for verify. Content-Disposition header field for this part must
     * have filename.
     *
     * @return the verifyImage value.
     */
    @Generated
    public VerifyImageFileDetails getVerifyImage() {
        return this.verifyImage;
    }
}
