// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.vision.face.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * A collection of 27-point face landmarks pointing to the important positions of face components.
 */
@Immutable
public final class FaceLandmarks implements JsonSerializable<FaceLandmarks> {

    /*
     * The coordinates of the left eye pupil.
     */
    @Generated
    private final LandmarkCoordinate pupilLeft;

    /*
     * The coordinates of the right eye pupil.
     */
    @Generated
    private final LandmarkCoordinate pupilRight;

    /*
     * The coordinates of the nose tip.
     */
    @Generated
    private final LandmarkCoordinate noseTip;

    /*
     * The coordinates of the mouth left.
     */
    @Generated
    private final LandmarkCoordinate mouthLeft;

    /*
     * The coordinates of the mouth right.
     */
    @Generated
    private final LandmarkCoordinate mouthRight;

    /*
     * The coordinates of the left eyebrow outer.
     */
    @Generated
    private final LandmarkCoordinate eyebrowLeftOuter;

    /*
     * The coordinates of the left eyebrow inner.
     */
    @Generated
    private final LandmarkCoordinate eyebrowLeftInner;

    /*
     * The coordinates of the left eye outer.
     */
    @Generated
    private final LandmarkCoordinate eyeLeftOuter;

    /*
     * The coordinates of the left eye top.
     */
    @Generated
    private final LandmarkCoordinate eyeLeftTop;

    /*
     * The coordinates of the left eye bottom.
     */
    @Generated
    private final LandmarkCoordinate eyeLeftBottom;

    /*
     * The coordinates of the left eye inner.
     */
    @Generated
    private final LandmarkCoordinate eyeLeftInner;

    /*
     * The coordinates of the right eyebrow inner.
     */
    @Generated
    private final LandmarkCoordinate eyebrowRightInner;

    /*
     * The coordinates of the right eyebrow outer.
     */
    @Generated
    private final LandmarkCoordinate eyebrowRightOuter;

    /*
     * The coordinates of the right eye inner.
     */
    @Generated
    private final LandmarkCoordinate eyeRightInner;

    /*
     * The coordinates of the right eye top.
     */
    @Generated
    private final LandmarkCoordinate eyeRightTop;

    /*
     * The coordinates of the right eye bottom.
     */
    @Generated
    private final LandmarkCoordinate eyeRightBottom;

    /*
     * The coordinates of the right eye outer.
     */
    @Generated
    private final LandmarkCoordinate eyeRightOuter;

    /*
     * The coordinates of the nose root left.
     */
    @Generated
    private final LandmarkCoordinate noseRootLeft;

    /*
     * The coordinates of the nose root right.
     */
    @Generated
    private final LandmarkCoordinate noseRootRight;

    /*
     * The coordinates of the nose left alar top.
     */
    @Generated
    private final LandmarkCoordinate noseLeftAlarTop;

    /*
     * The coordinates of the nose right alar top.
     */
    @Generated
    private final LandmarkCoordinate noseRightAlarTop;

    /*
     * The coordinates of the nose left alar out tip.
     */
    @Generated
    private final LandmarkCoordinate noseLeftAlarOutTip;

    /*
     * The coordinates of the nose right alar out tip.
     */
    @Generated
    private final LandmarkCoordinate noseRightAlarOutTip;

    /*
     * The coordinates of the upper lip top.
     */
    @Generated
    private final LandmarkCoordinate upperLipTop;

    /*
     * The coordinates of the upper lip bottom.
     */
    @Generated
    private final LandmarkCoordinate upperLipBottom;

    /*
     * The coordinates of the under lip top.
     */
    @Generated
    private final LandmarkCoordinate underLipTop;

    /*
     * The coordinates of the under lip bottom.
     */
    @Generated
    private final LandmarkCoordinate underLipBottom;

    /**
     * Creates an instance of FaceLandmarks class.
     *
     * @param pupilLeft the pupilLeft value to set.
     * @param pupilRight the pupilRight value to set.
     * @param noseTip the noseTip value to set.
     * @param mouthLeft the mouthLeft value to set.
     * @param mouthRight the mouthRight value to set.
     * @param eyebrowLeftOuter the eyebrowLeftOuter value to set.
     * @param eyebrowLeftInner the eyebrowLeftInner value to set.
     * @param eyeLeftOuter the eyeLeftOuter value to set.
     * @param eyeLeftTop the eyeLeftTop value to set.
     * @param eyeLeftBottom the eyeLeftBottom value to set.
     * @param eyeLeftInner the eyeLeftInner value to set.
     * @param eyebrowRightInner the eyebrowRightInner value to set.
     * @param eyebrowRightOuter the eyebrowRightOuter value to set.
     * @param eyeRightInner the eyeRightInner value to set.
     * @param eyeRightTop the eyeRightTop value to set.
     * @param eyeRightBottom the eyeRightBottom value to set.
     * @param eyeRightOuter the eyeRightOuter value to set.
     * @param noseRootLeft the noseRootLeft value to set.
     * @param noseRootRight the noseRootRight value to set.
     * @param noseLeftAlarTop the noseLeftAlarTop value to set.
     * @param noseRightAlarTop the noseRightAlarTop value to set.
     * @param noseLeftAlarOutTip the noseLeftAlarOutTip value to set.
     * @param noseRightAlarOutTip the noseRightAlarOutTip value to set.
     * @param upperLipTop the upperLipTop value to set.
     * @param upperLipBottom the upperLipBottom value to set.
     * @param underLipTop the underLipTop value to set.
     * @param underLipBottom the underLipBottom value to set.
     */
    @Generated
    private FaceLandmarks(LandmarkCoordinate pupilLeft, LandmarkCoordinate pupilRight, LandmarkCoordinate noseTip,
        LandmarkCoordinate mouthLeft, LandmarkCoordinate mouthRight, LandmarkCoordinate eyebrowLeftOuter,
        LandmarkCoordinate eyebrowLeftInner, LandmarkCoordinate eyeLeftOuter, LandmarkCoordinate eyeLeftTop,
        LandmarkCoordinate eyeLeftBottom, LandmarkCoordinate eyeLeftInner, LandmarkCoordinate eyebrowRightInner,
        LandmarkCoordinate eyebrowRightOuter, LandmarkCoordinate eyeRightInner, LandmarkCoordinate eyeRightTop,
        LandmarkCoordinate eyeRightBottom, LandmarkCoordinate eyeRightOuter, LandmarkCoordinate noseRootLeft,
        LandmarkCoordinate noseRootRight, LandmarkCoordinate noseLeftAlarTop, LandmarkCoordinate noseRightAlarTop,
        LandmarkCoordinate noseLeftAlarOutTip, LandmarkCoordinate noseRightAlarOutTip, LandmarkCoordinate upperLipTop,
        LandmarkCoordinate upperLipBottom, LandmarkCoordinate underLipTop, LandmarkCoordinate underLipBottom) {
        this.pupilLeft = pupilLeft;
        this.pupilRight = pupilRight;
        this.noseTip = noseTip;
        this.mouthLeft = mouthLeft;
        this.mouthRight = mouthRight;
        this.eyebrowLeftOuter = eyebrowLeftOuter;
        this.eyebrowLeftInner = eyebrowLeftInner;
        this.eyeLeftOuter = eyeLeftOuter;
        this.eyeLeftTop = eyeLeftTop;
        this.eyeLeftBottom = eyeLeftBottom;
        this.eyeLeftInner = eyeLeftInner;
        this.eyebrowRightInner = eyebrowRightInner;
        this.eyebrowRightOuter = eyebrowRightOuter;
        this.eyeRightInner = eyeRightInner;
        this.eyeRightTop = eyeRightTop;
        this.eyeRightBottom = eyeRightBottom;
        this.eyeRightOuter = eyeRightOuter;
        this.noseRootLeft = noseRootLeft;
        this.noseRootRight = noseRootRight;
        this.noseLeftAlarTop = noseLeftAlarTop;
        this.noseRightAlarTop = noseRightAlarTop;
        this.noseLeftAlarOutTip = noseLeftAlarOutTip;
        this.noseRightAlarOutTip = noseRightAlarOutTip;
        this.upperLipTop = upperLipTop;
        this.upperLipBottom = upperLipBottom;
        this.underLipTop = underLipTop;
        this.underLipBottom = underLipBottom;
    }

    /**
     * Get the pupilLeft property: The coordinates of the left eye pupil.
     *
     * @return the pupilLeft value.
     */
    @Generated
    public LandmarkCoordinate getPupilLeft() {
        return this.pupilLeft;
    }

    /**
     * Get the pupilRight property: The coordinates of the right eye pupil.
     *
     * @return the pupilRight value.
     */
    @Generated
    public LandmarkCoordinate getPupilRight() {
        return this.pupilRight;
    }

    /**
     * Get the noseTip property: The coordinates of the nose tip.
     *
     * @return the noseTip value.
     */
    @Generated
    public LandmarkCoordinate getNoseTip() {
        return this.noseTip;
    }

    /**
     * Get the mouthLeft property: The coordinates of the mouth left.
     *
     * @return the mouthLeft value.
     */
    @Generated
    public LandmarkCoordinate getMouthLeft() {
        return this.mouthLeft;
    }

    /**
     * Get the mouthRight property: The coordinates of the mouth right.
     *
     * @return the mouthRight value.
     */
    @Generated
    public LandmarkCoordinate getMouthRight() {
        return this.mouthRight;
    }

    /**
     * Get the eyebrowLeftOuter property: The coordinates of the left eyebrow outer.
     *
     * @return the eyebrowLeftOuter value.
     */
    @Generated
    public LandmarkCoordinate getEyebrowLeftOuter() {
        return this.eyebrowLeftOuter;
    }

    /**
     * Get the eyebrowLeftInner property: The coordinates of the left eyebrow inner.
     *
     * @return the eyebrowLeftInner value.
     */
    @Generated
    public LandmarkCoordinate getEyebrowLeftInner() {
        return this.eyebrowLeftInner;
    }

    /**
     * Get the eyeLeftOuter property: The coordinates of the left eye outer.
     *
     * @return the eyeLeftOuter value.
     */
    @Generated
    public LandmarkCoordinate getEyeLeftOuter() {
        return this.eyeLeftOuter;
    }

    /**
     * Get the eyeLeftTop property: The coordinates of the left eye top.
     *
     * @return the eyeLeftTop value.
     */
    @Generated
    public LandmarkCoordinate getEyeLeftTop() {
        return this.eyeLeftTop;
    }

    /**
     * Get the eyeLeftBottom property: The coordinates of the left eye bottom.
     *
     * @return the eyeLeftBottom value.
     */
    @Generated
    public LandmarkCoordinate getEyeLeftBottom() {
        return this.eyeLeftBottom;
    }

    /**
     * Get the eyeLeftInner property: The coordinates of the left eye inner.
     *
     * @return the eyeLeftInner value.
     */
    @Generated
    public LandmarkCoordinate getEyeLeftInner() {
        return this.eyeLeftInner;
    }

    /**
     * Get the eyebrowRightInner property: The coordinates of the right eyebrow inner.
     *
     * @return the eyebrowRightInner value.
     */
    @Generated
    public LandmarkCoordinate getEyebrowRightInner() {
        return this.eyebrowRightInner;
    }

    /**
     * Get the eyebrowRightOuter property: The coordinates of the right eyebrow outer.
     *
     * @return the eyebrowRightOuter value.
     */
    @Generated
    public LandmarkCoordinate getEyebrowRightOuter() {
        return this.eyebrowRightOuter;
    }

    /**
     * Get the eyeRightInner property: The coordinates of the right eye inner.
     *
     * @return the eyeRightInner value.
     */
    @Generated
    public LandmarkCoordinate getEyeRightInner() {
        return this.eyeRightInner;
    }

    /**
     * Get the eyeRightTop property: The coordinates of the right eye top.
     *
     * @return the eyeRightTop value.
     */
    @Generated
    public LandmarkCoordinate getEyeRightTop() {
        return this.eyeRightTop;
    }

    /**
     * Get the eyeRightBottom property: The coordinates of the right eye bottom.
     *
     * @return the eyeRightBottom value.
     */
    @Generated
    public LandmarkCoordinate getEyeRightBottom() {
        return this.eyeRightBottom;
    }

    /**
     * Get the eyeRightOuter property: The coordinates of the right eye outer.
     *
     * @return the eyeRightOuter value.
     */
    @Generated
    public LandmarkCoordinate getEyeRightOuter() {
        return this.eyeRightOuter;
    }

    /**
     * Get the noseRootLeft property: The coordinates of the nose root left.
     *
     * @return the noseRootLeft value.
     */
    @Generated
    public LandmarkCoordinate getNoseRootLeft() {
        return this.noseRootLeft;
    }

    /**
     * Get the noseRootRight property: The coordinates of the nose root right.
     *
     * @return the noseRootRight value.
     */
    @Generated
    public LandmarkCoordinate getNoseRootRight() {
        return this.noseRootRight;
    }

    /**
     * Get the noseLeftAlarTop property: The coordinates of the nose left alar top.
     *
     * @return the noseLeftAlarTop value.
     */
    @Generated
    public LandmarkCoordinate getNoseLeftAlarTop() {
        return this.noseLeftAlarTop;
    }

    /**
     * Get the noseRightAlarTop property: The coordinates of the nose right alar top.
     *
     * @return the noseRightAlarTop value.
     */
    @Generated
    public LandmarkCoordinate getNoseRightAlarTop() {
        return this.noseRightAlarTop;
    }

    /**
     * Get the noseLeftAlarOutTip property: The coordinates of the nose left alar out tip.
     *
     * @return the noseLeftAlarOutTip value.
     */
    @Generated
    public LandmarkCoordinate getNoseLeftAlarOutTip() {
        return this.noseLeftAlarOutTip;
    }

    /**
     * Get the noseRightAlarOutTip property: The coordinates of the nose right alar out tip.
     *
     * @return the noseRightAlarOutTip value.
     */
    @Generated
    public LandmarkCoordinate getNoseRightAlarOutTip() {
        return this.noseRightAlarOutTip;
    }

    /**
     * Get the upperLipTop property: The coordinates of the upper lip top.
     *
     * @return the upperLipTop value.
     */
    @Generated
    public LandmarkCoordinate getUpperLipTop() {
        return this.upperLipTop;
    }

    /**
     * Get the upperLipBottom property: The coordinates of the upper lip bottom.
     *
     * @return the upperLipBottom value.
     */
    @Generated
    public LandmarkCoordinate getUpperLipBottom() {
        return this.upperLipBottom;
    }

    /**
     * Get the underLipTop property: The coordinates of the under lip top.
     *
     * @return the underLipTop value.
     */
    @Generated
    public LandmarkCoordinate getUnderLipTop() {
        return this.underLipTop;
    }

    /**
     * Get the underLipBottom property: The coordinates of the under lip bottom.
     *
     * @return the underLipBottom value.
     */
    @Generated
    public LandmarkCoordinate getUnderLipBottom() {
        return this.underLipBottom;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("pupilLeft", this.pupilLeft);
        jsonWriter.writeJsonField("pupilRight", this.pupilRight);
        jsonWriter.writeJsonField("noseTip", this.noseTip);
        jsonWriter.writeJsonField("mouthLeft", this.mouthLeft);
        jsonWriter.writeJsonField("mouthRight", this.mouthRight);
        jsonWriter.writeJsonField("eyebrowLeftOuter", this.eyebrowLeftOuter);
        jsonWriter.writeJsonField("eyebrowLeftInner", this.eyebrowLeftInner);
        jsonWriter.writeJsonField("eyeLeftOuter", this.eyeLeftOuter);
        jsonWriter.writeJsonField("eyeLeftTop", this.eyeLeftTop);
        jsonWriter.writeJsonField("eyeLeftBottom", this.eyeLeftBottom);
        jsonWriter.writeJsonField("eyeLeftInner", this.eyeLeftInner);
        jsonWriter.writeJsonField("eyebrowRightInner", this.eyebrowRightInner);
        jsonWriter.writeJsonField("eyebrowRightOuter", this.eyebrowRightOuter);
        jsonWriter.writeJsonField("eyeRightInner", this.eyeRightInner);
        jsonWriter.writeJsonField("eyeRightTop", this.eyeRightTop);
        jsonWriter.writeJsonField("eyeRightBottom", this.eyeRightBottom);
        jsonWriter.writeJsonField("eyeRightOuter", this.eyeRightOuter);
        jsonWriter.writeJsonField("noseRootLeft", this.noseRootLeft);
        jsonWriter.writeJsonField("noseRootRight", this.noseRootRight);
        jsonWriter.writeJsonField("noseLeftAlarTop", this.noseLeftAlarTop);
        jsonWriter.writeJsonField("noseRightAlarTop", this.noseRightAlarTop);
        jsonWriter.writeJsonField("noseLeftAlarOutTip", this.noseLeftAlarOutTip);
        jsonWriter.writeJsonField("noseRightAlarOutTip", this.noseRightAlarOutTip);
        jsonWriter.writeJsonField("upperLipTop", this.upperLipTop);
        jsonWriter.writeJsonField("upperLipBottom", this.upperLipBottom);
        jsonWriter.writeJsonField("underLipTop", this.underLipTop);
        jsonWriter.writeJsonField("underLipBottom", this.underLipBottom);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of FaceLandmarks from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of FaceLandmarks if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the FaceLandmarks.
     */
    @Generated
    public static FaceLandmarks fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            LandmarkCoordinate pupilLeft = null;
            LandmarkCoordinate pupilRight = null;
            LandmarkCoordinate noseTip = null;
            LandmarkCoordinate mouthLeft = null;
            LandmarkCoordinate mouthRight = null;
            LandmarkCoordinate eyebrowLeftOuter = null;
            LandmarkCoordinate eyebrowLeftInner = null;
            LandmarkCoordinate eyeLeftOuter = null;
            LandmarkCoordinate eyeLeftTop = null;
            LandmarkCoordinate eyeLeftBottom = null;
            LandmarkCoordinate eyeLeftInner = null;
            LandmarkCoordinate eyebrowRightInner = null;
            LandmarkCoordinate eyebrowRightOuter = null;
            LandmarkCoordinate eyeRightInner = null;
            LandmarkCoordinate eyeRightTop = null;
            LandmarkCoordinate eyeRightBottom = null;
            LandmarkCoordinate eyeRightOuter = null;
            LandmarkCoordinate noseRootLeft = null;
            LandmarkCoordinate noseRootRight = null;
            LandmarkCoordinate noseLeftAlarTop = null;
            LandmarkCoordinate noseRightAlarTop = null;
            LandmarkCoordinate noseLeftAlarOutTip = null;
            LandmarkCoordinate noseRightAlarOutTip = null;
            LandmarkCoordinate upperLipTop = null;
            LandmarkCoordinate upperLipBottom = null;
            LandmarkCoordinate underLipTop = null;
            LandmarkCoordinate underLipBottom = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("pupilLeft".equals(fieldName)) {
                    pupilLeft = LandmarkCoordinate.fromJson(reader);
                } else if ("pupilRight".equals(fieldName)) {
                    pupilRight = LandmarkCoordinate.fromJson(reader);
                } else if ("noseTip".equals(fieldName)) {
                    noseTip = LandmarkCoordinate.fromJson(reader);
                } else if ("mouthLeft".equals(fieldName)) {
                    mouthLeft = LandmarkCoordinate.fromJson(reader);
                } else if ("mouthRight".equals(fieldName)) {
                    mouthRight = LandmarkCoordinate.fromJson(reader);
                } else if ("eyebrowLeftOuter".equals(fieldName)) {
                    eyebrowLeftOuter = LandmarkCoordinate.fromJson(reader);
                } else if ("eyebrowLeftInner".equals(fieldName)) {
                    eyebrowLeftInner = LandmarkCoordinate.fromJson(reader);
                } else if ("eyeLeftOuter".equals(fieldName)) {
                    eyeLeftOuter = LandmarkCoordinate.fromJson(reader);
                } else if ("eyeLeftTop".equals(fieldName)) {
                    eyeLeftTop = LandmarkCoordinate.fromJson(reader);
                } else if ("eyeLeftBottom".equals(fieldName)) {
                    eyeLeftBottom = LandmarkCoordinate.fromJson(reader);
                } else if ("eyeLeftInner".equals(fieldName)) {
                    eyeLeftInner = LandmarkCoordinate.fromJson(reader);
                } else if ("eyebrowRightInner".equals(fieldName)) {
                    eyebrowRightInner = LandmarkCoordinate.fromJson(reader);
                } else if ("eyebrowRightOuter".equals(fieldName)) {
                    eyebrowRightOuter = LandmarkCoordinate.fromJson(reader);
                } else if ("eyeRightInner".equals(fieldName)) {
                    eyeRightInner = LandmarkCoordinate.fromJson(reader);
                } else if ("eyeRightTop".equals(fieldName)) {
                    eyeRightTop = LandmarkCoordinate.fromJson(reader);
                } else if ("eyeRightBottom".equals(fieldName)) {
                    eyeRightBottom = LandmarkCoordinate.fromJson(reader);
                } else if ("eyeRightOuter".equals(fieldName)) {
                    eyeRightOuter = LandmarkCoordinate.fromJson(reader);
                } else if ("noseRootLeft".equals(fieldName)) {
                    noseRootLeft = LandmarkCoordinate.fromJson(reader);
                } else if ("noseRootRight".equals(fieldName)) {
                    noseRootRight = LandmarkCoordinate.fromJson(reader);
                } else if ("noseLeftAlarTop".equals(fieldName)) {
                    noseLeftAlarTop = LandmarkCoordinate.fromJson(reader);
                } else if ("noseRightAlarTop".equals(fieldName)) {
                    noseRightAlarTop = LandmarkCoordinate.fromJson(reader);
                } else if ("noseLeftAlarOutTip".equals(fieldName)) {
                    noseLeftAlarOutTip = LandmarkCoordinate.fromJson(reader);
                } else if ("noseRightAlarOutTip".equals(fieldName)) {
                    noseRightAlarOutTip = LandmarkCoordinate.fromJson(reader);
                } else if ("upperLipTop".equals(fieldName)) {
                    upperLipTop = LandmarkCoordinate.fromJson(reader);
                } else if ("upperLipBottom".equals(fieldName)) {
                    upperLipBottom = LandmarkCoordinate.fromJson(reader);
                } else if ("underLipTop".equals(fieldName)) {
                    underLipTop = LandmarkCoordinate.fromJson(reader);
                } else if ("underLipBottom".equals(fieldName)) {
                    underLipBottom = LandmarkCoordinate.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }
            return new FaceLandmarks(pupilLeft, pupilRight, noseTip, mouthLeft, mouthRight, eyebrowLeftOuter,
                eyebrowLeftInner, eyeLeftOuter, eyeLeftTop, eyeLeftBottom, eyeLeftInner, eyebrowRightInner,
                eyebrowRightOuter, eyeRightInner, eyeRightTop, eyeRightBottom, eyeRightOuter, noseRootLeft,
                noseRootRight, noseLeftAlarTop, noseRightAlarTop, noseLeftAlarOutTip, noseRightAlarOutTip, upperLipTop,
                upperLipBottom, underLipTop, underLipBottom);
        });
    }
}
