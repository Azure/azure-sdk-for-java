// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.vision.face.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/**
 * Audit entry for a request in session.
 */
@Immutable
public final class LivenessSessionAuditEntry {

    /*
     * The unique id to refer to this audit request. Use this id with the 'start' query parameter to continue on to the
     * next page of audit results.
     */
    @Generated
    @JsonProperty(value = "id")
    private final long id;

    /*
     * The unique sessionId of the created session. It will expire 48 hours after it was created or may be deleted
     * sooner using the corresponding session DELETE operation.
     */
    @Generated
    @JsonProperty(value = "sessionId")
    private final String sessionId;

    /*
     * The unique requestId that is returned by the service to the client in the 'apim-request-id' header.
     */
    @Generated
    @JsonProperty(value = "requestId")
    private final String requestId;

    /*
     * The unique clientRequestId that is sent by the client in the 'client-request-id' header.
     */
    @Generated
    @JsonProperty(value = "clientRequestId")
    private final String clientRequestId;

    /*
     * The UTC DateTime that the request was received.
     */
    @Generated
    @JsonProperty(value = "receivedDateTime")
    private final OffsetDateTime receivedDateTime;

    /*
     * The request of this entry.
     */
    @Generated
    @JsonProperty(value = "request")
    private final AuditRequestInfo request;

    /*
     * The response of this entry.
     */
    @Generated
    @JsonProperty(value = "response")
    private final AuditLivenessResponseInfo response;

    /*
     * The server calculated digest for this request. If the client reported digest differs from the server calculated
     * digest, then the message integrity between the client and service has been compromised and the result should not
     * be trusted. For more information, see how to guides on how to leverage this value to secure your end-to-end
     * solution.
     */
    @Generated
    @JsonProperty(value = "digest")
    private final String digest;

    /**
     * Creates an instance of LivenessSessionAuditEntry class.
     *
     * @param id the id value to set.
     * @param sessionId the sessionId value to set.
     * @param requestId the requestId value to set.
     * @param clientRequestId the clientRequestId value to set.
     * @param receivedDateTime the receivedDateTime value to set.
     * @param request the request value to set.
     * @param response the response value to set.
     * @param digest the digest value to set.
     */
    @Generated
    @JsonCreator
    private LivenessSessionAuditEntry(@JsonProperty(value = "id") long id,
        @JsonProperty(value = "sessionId") String sessionId, @JsonProperty(value = "requestId") String requestId,
        @JsonProperty(value = "clientRequestId") String clientRequestId,
        @JsonProperty(value = "receivedDateTime") OffsetDateTime receivedDateTime,
        @JsonProperty(value = "request") AuditRequestInfo request,
        @JsonProperty(value = "response") AuditLivenessResponseInfo response,
        @JsonProperty(value = "digest") String digest) {
        this.id = id;
        this.sessionId = sessionId;
        this.requestId = requestId;
        this.clientRequestId = clientRequestId;
        this.receivedDateTime = receivedDateTime;
        this.request = request;
        this.response = response;
        this.digest = digest;
    }

    /**
     * Get the id property: The unique id to refer to this audit request. Use this id with the 'start' query parameter
     * to continue on to the next page of audit results.
     *
     * @return the id value.
     */
    @Generated
    public long getId() {
        return this.id;
    }

    /**
     * Get the sessionId property: The unique sessionId of the created session. It will expire 48 hours after it was
     * created or may be deleted sooner using the corresponding session DELETE operation.
     *
     * @return the sessionId value.
     */
    @Generated
    public String getSessionId() {
        return this.sessionId;
    }

    /**
     * Get the requestId property: The unique requestId that is returned by the service to the client in the
     * 'apim-request-id' header.
     *
     * @return the requestId value.
     */
    @Generated
    public String getRequestId() {
        return this.requestId;
    }

    /**
     * Get the clientRequestId property: The unique clientRequestId that is sent by the client in the
     * 'client-request-id' header.
     *
     * @return the clientRequestId value.
     */
    @Generated
    public String getClientRequestId() {
        return this.clientRequestId;
    }

    /**
     * Get the receivedDateTime property: The UTC DateTime that the request was received.
     *
     * @return the receivedDateTime value.
     */
    @Generated
    public OffsetDateTime getReceivedDateTime() {
        return this.receivedDateTime;
    }

    /**
     * Get the request property: The request of this entry.
     *
     * @return the request value.
     */
    @Generated
    public AuditRequestInfo getRequest() {
        return this.request;
    }

    /**
     * Get the response property: The response of this entry.
     *
     * @return the response value.
     */
    @Generated
    public AuditLivenessResponseInfo getResponse() {
        return this.response;
    }

    /**
     * Get the digest property: The server calculated digest for this request. If the client reported digest differs
     * from the server calculated digest, then the message integrity between the client and service has been compromised
     * and the result should not be trusted. For more information, see how to guides on how to leverage this value to
     * secure your end-to-end solution.
     *
     * @return the digest value.
     */
    @Generated
    public String getDigest() {
        return this.digest;
    }
}
