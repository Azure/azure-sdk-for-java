// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadorchestration.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.workloadorchestration.models.Capability;
import com.azure.resourcemanager.workloadorchestration.models.ContextProperties;
import com.azure.resourcemanager.workloadorchestration.models.Hierarchy;
import com.azure.resourcemanager.workloadorchestration.models.ResourceState;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ContextPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ContextProperties model = BinaryData.fromString(
            "{\"capabilities\":[{\"name\":\"ggqowey\",\"description\":\"rdhlis\",\"state\":\"active\"}],\"hierarchies\":[{\"name\":\"lqqmpiz\",\"description\":\"uwnpqxpxiwfcng\"}],\"provisioningState\":\"Succeeded\"}")
            .toObject(ContextProperties.class);
        Assertions.assertEquals("ggqowey", model.capabilities().get(0).name());
        Assertions.assertEquals("rdhlis", model.capabilities().get(0).description());
        Assertions.assertEquals(ResourceState.ACTIVE, model.capabilities().get(0).state());
        Assertions.assertEquals("lqqmpiz", model.hierarchies().get(0).name());
        Assertions.assertEquals("uwnpqxpxiwfcng", model.hierarchies().get(0).description());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ContextProperties model = new ContextProperties()
            .withCapabilities(Arrays
                .asList(new Capability().withName("ggqowey").withDescription("rdhlis").withState(ResourceState.ACTIVE)))
            .withHierarchies(Arrays.asList(new Hierarchy().withName("lqqmpiz").withDescription("uwnpqxpxiwfcng")));
        model = BinaryData.fromObject(model).toObject(ContextProperties.class);
        Assertions.assertEquals("ggqowey", model.capabilities().get(0).name());
        Assertions.assertEquals("rdhlis", model.capabilities().get(0).description());
        Assertions.assertEquals(ResourceState.ACTIVE, model.capabilities().get(0).state());
        Assertions.assertEquals("lqqmpiz", model.hierarchies().get(0).name());
        Assertions.assertEquals("uwnpqxpxiwfcng", model.hierarchies().get(0).description());
    }
}
