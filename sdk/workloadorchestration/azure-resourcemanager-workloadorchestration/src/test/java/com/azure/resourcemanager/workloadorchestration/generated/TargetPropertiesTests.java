// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadorchestration.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.workloadorchestration.models.ResourceState;
import com.azure.resourcemanager.workloadorchestration.models.TargetProperties;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class TargetPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TargetProperties model = BinaryData.fromString(
            "{\"description\":\"nalaulppg\",\"displayName\":\"dtpnapnyiropuhp\",\"contextId\":\"gvpgy\",\"targetSpecification\":{},\"capabilities\":[\"git\",\"medjvcslynqwwncw\"],\"hierarchyLevel\":\"zhxgktrmgucn\",\"status\":{\"lastModified\":\"2021-09-22T11:03:56Z\",\"deployed\":1588610928,\"expectedRunningJobId\":1950925712,\"runningJobId\":1409884239,\"status\":\"tfdygpfqb\",\"statusDetails\":\"ceopzfqrhhuaopp\",\"generation\":1290719044,\"targetStatuses\":[{\"name\":\"ol\",\"status\":\"ahzxctobgbk\",\"componentStatuses\":[{\"name\":\"zpostmgrcfbu\",\"status\":\"mfqjhhkxbp\"},{\"name\":\"ymjhxxjyngudivkr\",\"status\":\"wbxqzvszjfau\"},{\"name\":\"fdxxivetvtcqaqtd\",\"status\":\"mcbxvwvxysl\"},{\"name\":\"hsfxoblytkb\",\"status\":\"pe\"}]},{\"name\":\"wfbkrvrns\",\"status\":\"hqjohxcrsbfova\",\"componentStatuses\":[{\"name\":\"v\",\"status\":\"hsqfsubcgjbirxbp\"}]},{\"name\":\"srfbjfdtwss\",\"status\":\"ftpvjzbexil\",\"componentStatuses\":[{\"name\":\"qqnvwpmq\",\"status\":\"ruoujmk\"},{\"name\":\"hwqytj\",\"status\":\"bnw\"}]}]},\"solutionScope\":\"wgdrjervnaenqp\",\"state\":\"inactive\",\"provisioningState\":\"Deleting\"}")
            .toObject(TargetProperties.class);
        Assertions.assertEquals("nalaulppg", model.description());
        Assertions.assertEquals("dtpnapnyiropuhp", model.displayName());
        Assertions.assertEquals("gvpgy", model.contextId());
        Assertions.assertEquals("git", model.capabilities().get(0));
        Assertions.assertEquals("zhxgktrmgucn", model.hierarchyLevel());
        Assertions.assertEquals("wgdrjervnaenqp", model.solutionScope());
        Assertions.assertEquals(ResourceState.INACTIVE, model.state());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TargetProperties model = new TargetProperties().withDescription("nalaulppg")
            .withDisplayName("dtpnapnyiropuhp")
            .withContextId("gvpgy")
            .withTargetSpecification(mapOf())
            .withCapabilities(Arrays.asList("git", "medjvcslynqwwncw"))
            .withHierarchyLevel("zhxgktrmgucn")
            .withSolutionScope("wgdrjervnaenqp")
            .withState(ResourceState.INACTIVE);
        model = BinaryData.fromObject(model).toObject(TargetProperties.class);
        Assertions.assertEquals("nalaulppg", model.description());
        Assertions.assertEquals("dtpnapnyiropuhp", model.displayName());
        Assertions.assertEquals("gvpgy", model.contextId());
        Assertions.assertEquals("git", model.capabilities().get(0));
        Assertions.assertEquals("zhxgktrmgucn", model.hierarchyLevel());
        Assertions.assertEquals("wgdrjervnaenqp", model.solutionScope());
        Assertions.assertEquals(ResourceState.INACTIVE, model.state());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
