// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadorchestration.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.workloadorchestration.WorkloadOrchestrationManager;
import com.azure.resourcemanager.workloadorchestration.models.ContextModel;
import com.azure.resourcemanager.workloadorchestration.models.ResourceState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ContextsListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"capabilities\":[{\"name\":\"dmfcoibicziusws\",\"description\":\"jrkbqsjhbtqqvyfs\",\"state\":\"active\"},{\"name\":\"fwbivqvo\",\"description\":\"fuy\",\"state\":\"inactive\"},{\"name\":\"bhli\",\"description\":\"byqecroo\",\"state\":\"inactive\"},{\"name\":\"kcdrdaasaxxobsm\",\"description\":\"kwiy\",\"state\":\"active\"}],\"hierarchies\":[{\"name\":\"ko\",\"description\":\"r\"},{\"name\":\"awn\",\"description\":\"zm\"}],\"provisioningState\":\"Initialized\"},\"location\":\"ywsxvjabjqqaxu\",\"tags\":{\"udndoabhjxw\":\"mc\"},\"id\":\"qweuip\",\"name\":\"pvksmit\",\"type\":\"sqxtltclkrdpq\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        WorkloadOrchestrationManager manager = WorkloadOrchestrationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<ContextModel> response
            = manager.contexts().listByResourceGroup("wnsnlaimouxwks", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("ywsxvjabjqqaxu", response.iterator().next().location());
        Assertions.assertEquals("mc", response.iterator().next().tags().get("udndoabhjxw"));
        Assertions.assertEquals("dmfcoibicziusws",
            response.iterator().next().properties().capabilities().get(0).name());
        Assertions.assertEquals("jrkbqsjhbtqqvyfs",
            response.iterator().next().properties().capabilities().get(0).description());
        Assertions.assertEquals(ResourceState.ACTIVE,
            response.iterator().next().properties().capabilities().get(0).state());
        Assertions.assertEquals("ko", response.iterator().next().properties().hierarchies().get(0).name());
        Assertions.assertEquals("r", response.iterator().next().properties().hierarchies().get(0).description());
    }
}
