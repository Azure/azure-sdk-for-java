// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadorchestration.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.workloadorchestration.WorkloadOrchestrationManager;
import com.azure.resourcemanager.workloadorchestration.models.ActiveState;
import com.azure.resourcemanager.workloadorchestration.models.ExtendedLocationType;
import com.azure.resourcemanager.workloadorchestration.models.InstanceHistory;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class InstanceHistoriesListByInstanceMockTests {
    @Test
    public void testListByInstance() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"solutionVersion\":{\"solutionVersionId\":\"rebluimmbwxsf\",\"specification\":{}},\"target\":{\"targetId\":\"b\",\"targetSpecification\":{},\"solutionScope\":\"raokqkbudb\"},\"solutionScope\":\"aokbavlyttaaknwf\",\"activeState\":\"inactive\",\"reconciliationPolicy\":{\"state\":\"inactive\",\"interval\":\"mhpdu\"},\"status\":{\"lastModified\":\"2021-09-23T19:09Z\",\"deployed\":1707350997,\"expectedRunningJobId\":1236887032,\"runningJobId\":545387189,\"status\":\"cbctnanqimwbzx\",\"statusDetails\":\"cldpkawn\",\"generation\":73625606,\"targetStatuses\":[{\"name\":\"o\",\"status\":\"w\",\"componentStatuses\":[{},{},{}]},{\"name\":\"udmfcoibiczius\",\"status\":\"wjrkb\",\"componentStatuses\":[{},{}]},{\"name\":\"btqqvyfs\",\"status\":\"rfwb\",\"componentStatuses\":[{},{}]},{\"name\":\"ogfuyzwvbhlim\",\"status\":\"qecroodl\",\"componentStatuses\":[{},{},{}]}]},\"provisioningState\":\"Initialized\"},\"extendedLocation\":{\"name\":\"aasaxx\",\"type\":\"CustomLocation\"},\"eTag\":\"mfkwiyjvzuk\",\"id\":\"r\",\"name\":\"awn\",\"type\":\"zm\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        WorkloadOrchestrationManager manager = WorkloadOrchestrationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<InstanceHistory> response = manager.instanceHistories()
            .listByInstance("zvqnsqktcmbjwzzo", "lpky", "tglwkzpgajsqjc", "mqbmfuvqarwz",
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals(ActiveState.INACTIVE, response.iterator().next().properties().activeState());
        Assertions.assertEquals("aasaxx", response.iterator().next().extendedLocation().name());
        Assertions.assertEquals(ExtendedLocationType.CUSTOM_LOCATION,
            response.iterator().next().extendedLocation().type());
    }
}
