// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadorchestration.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.workloadorchestration.WorkloadOrchestrationManager;
import com.azure.resourcemanager.workloadorchestration.models.ActiveState;
import com.azure.resourcemanager.workloadorchestration.models.ExtendedLocationType;
import com.azure.resourcemanager.workloadorchestration.models.InstanceHistory;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class InstanceHistoriesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"solutionVersion\":{\"solutionVersionId\":\"xe\",\"specification\":{}},\"target\":{\"targetId\":\"bormcqmiciijqpkz\",\"targetSpecification\":{},\"solutionScope\":\"xjmcsmyqwixvcpw\"},\"solutionScope\":\"wy\",\"activeState\":\"active\",\"reconciliationPolicy\":{\"state\":\"active\",\"interval\":\"alickduoi\"},\"status\":{\"lastModified\":\"2021-02-12T08:45:06Z\",\"deployed\":947599262,\"expectedRunningJobId\":1704599538,\"runningJobId\":384634481,\"status\":\"rwzawnvs\",\"statusDetails\":\"fhzag\",\"generation\":2116581743,\"targetStatuses\":[{\"name\":\"vdimwrzregzgy\",\"status\":\"utrwpweryekz\",\"componentStatuses\":[{},{}]},{\"name\":\"eotta\",\"status\":\"yos\",\"componentStatuses\":[{},{}]}]},\"provisioningState\":\"Failed\"},\"extendedLocation\":{\"name\":\"jtfvpndpmiljpn\",\"type\":\"CustomLocation\"},\"eTag\":\"udqll\",\"id\":\"auzpjlx\",\"name\":\"ehuxiqhzlraym\",\"type\":\"zxlskihmxr\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        WorkloadOrchestrationManager manager = WorkloadOrchestrationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        InstanceHistory response = manager.instanceHistories()
            .getWithResponse("v", "atbwbqam", "e", "liys", "pkcvmwf", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(ActiveState.ACTIVE, response.properties().activeState());
        Assertions.assertEquals("jtfvpndpmiljpn", response.extendedLocation().name());
        Assertions.assertEquals(ExtendedLocationType.CUSTOM_LOCATION, response.extendedLocation().type());
    }
}
