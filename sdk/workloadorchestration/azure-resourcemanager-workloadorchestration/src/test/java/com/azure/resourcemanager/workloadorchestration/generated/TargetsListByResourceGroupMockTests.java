// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadorchestration.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.workloadorchestration.WorkloadOrchestrationManager;
import com.azure.resourcemanager.workloadorchestration.models.ExtendedLocationType;
import com.azure.resourcemanager.workloadorchestration.models.ResourceState;
import com.azure.resourcemanager.workloadorchestration.models.Target;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class TargetsListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"description\":\"lgmtrwahzjmucf\",\"displayName\":\"byrplrohkpig\",\"contextId\":\"fusuckzmkwklsno\",\"targetSpecification\":{},\"capabilities\":[\"mqeq\",\"lhhjnh\"],\"hierarchyLevel\":\"wy\",\"status\":{\"lastModified\":\"2021-06-11T23:55:26Z\",\"deployed\":1760985730,\"expectedRunningJobId\":837661803,\"runningJobId\":705392339,\"status\":\"vqtanarfdlpuk\",\"statusDetails\":\"yrneizjcpeo\",\"generation\":45100221,\"targetStatuses\":[{\"name\":\"brouxdd\",\"status\":\"fhp\",\"componentStatuses\":[{},{}]},{\"name\":\"jzoywjxhp\",\"status\":\"lontacnpq\",\"componentStatuses\":[{},{},{}]}]},\"solutionScope\":\"tuevrh\",\"state\":\"active\",\"provisioningState\":\"Succeeded\"},\"eTag\":\"gwxhnsduugwbsreu\",\"extendedLocation\":{\"name\":\"q\",\"type\":\"CustomLocation\"},\"location\":\"arenlvhhtklnvnaf\",\"tags\":{\"lcqxypokk\":\"yfedevjbo\",\"zng\":\"minqcym\"},\"id\":\"bdxxe\",\"name\":\"unin\",\"type\":\"udbchaqdtv\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        WorkloadOrchestrationManager manager = WorkloadOrchestrationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<Target> response
            = manager.targets().listByResourceGroup("etndnbfqyggagf", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("arenlvhhtklnvnaf", response.iterator().next().location());
        Assertions.assertEquals("yfedevjbo", response.iterator().next().tags().get("lcqxypokk"));
        Assertions.assertEquals("lgmtrwahzjmucf", response.iterator().next().properties().description());
        Assertions.assertEquals("byrplrohkpig", response.iterator().next().properties().displayName());
        Assertions.assertEquals("fusuckzmkwklsno", response.iterator().next().properties().contextId());
        Assertions.assertEquals("mqeq", response.iterator().next().properties().capabilities().get(0));
        Assertions.assertEquals("wy", response.iterator().next().properties().hierarchyLevel());
        Assertions.assertEquals("tuevrh", response.iterator().next().properties().solutionScope());
        Assertions.assertEquals(ResourceState.ACTIVE, response.iterator().next().properties().state());
        Assertions.assertEquals("q", response.iterator().next().extendedLocation().name());
        Assertions.assertEquals(ExtendedLocationType.CUSTOM_LOCATION,
            response.iterator().next().extendedLocation().type());
    }
}
