// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadorchestration.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.workloadorchestration.models.SolutionDependencyParameter;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SolutionDependencyParameterTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SolutionDependencyParameter model = BinaryData.fromString(
            "{\"solutionVersionId\":\"fnjhfjxwmszkkfo\",\"solutionTemplateId\":\"eyfkzikfja\",\"solutionTemplateVersion\":\"eaivxwczel\",\"solutionInstanceName\":\"irels\",\"targetId\":\"aenwabf\",\"dependencies\":[{\"solutionVersionId\":\"ddxbjhwuaanoz\",\"solutionTemplateId\":\"sphyoulpjrvxa\",\"solutionTemplateVersion\":\"rvimjwosytxitcsk\",\"solutionInstanceName\":\"k\",\"targetId\":\"umiekkezzi\",\"dependencies\":[{\"solutionVersionId\":\"fjhdg\",\"solutionTemplateId\":\"gebdunygaeq\",\"solutionTemplateVersion\":\"bqfatpxllrxcyjmo\",\"solutionInstanceName\":\"su\",\"targetId\":\"r\",\"dependencies\":[{},{},{},{}]}]}]}")
            .toObject(SolutionDependencyParameter.class);
        Assertions.assertEquals("fnjhfjxwmszkkfo", model.solutionVersionId());
        Assertions.assertEquals("eyfkzikfja", model.solutionTemplateId());
        Assertions.assertEquals("eaivxwczel", model.solutionTemplateVersion());
        Assertions.assertEquals("irels", model.solutionInstanceName());
        Assertions.assertEquals("aenwabf", model.targetId());
        Assertions.assertEquals("ddxbjhwuaanoz", model.dependencies().get(0).solutionVersionId());
        Assertions.assertEquals("sphyoulpjrvxa", model.dependencies().get(0).solutionTemplateId());
        Assertions.assertEquals("rvimjwosytxitcsk", model.dependencies().get(0).solutionTemplateVersion());
        Assertions.assertEquals("k", model.dependencies().get(0).solutionInstanceName());
        Assertions.assertEquals("umiekkezzi", model.dependencies().get(0).targetId());
        Assertions.assertEquals("fjhdg", model.dependencies().get(0).dependencies().get(0).solutionVersionId());
        Assertions.assertEquals("gebdunygaeq", model.dependencies().get(0).dependencies().get(0).solutionTemplateId());
        Assertions.assertEquals("bqfatpxllrxcyjmo",
            model.dependencies().get(0).dependencies().get(0).solutionTemplateVersion());
        Assertions.assertEquals("su", model.dependencies().get(0).dependencies().get(0).solutionInstanceName());
        Assertions.assertEquals("r", model.dependencies().get(0).dependencies().get(0).targetId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SolutionDependencyParameter model
            = new SolutionDependencyParameter().withSolutionVersionId("fnjhfjxwmszkkfo")
                .withSolutionTemplateId("eyfkzikfja")
                .withSolutionTemplateVersion("eaivxwczel")
                .withSolutionInstanceName("irels")
                .withTargetId("aenwabf")
                .withDependencies(
                    Arrays
                        .asList(new SolutionDependencyParameter().withSolutionVersionId("ddxbjhwuaanoz")
                            .withSolutionTemplateId("sphyoulpjrvxa")
                            .withSolutionTemplateVersion("rvimjwosytxitcsk")
                            .withSolutionInstanceName("k")
                            .withTargetId("umiekkezzi")
                            .withDependencies(
                                Arrays.asList(new SolutionDependencyParameter().withSolutionVersionId("fjhdg")
                                    .withSolutionTemplateId("gebdunygaeq")
                                    .withSolutionTemplateVersion("bqfatpxllrxcyjmo")
                                    .withSolutionInstanceName("su")
                                    .withTargetId("r")
                                    .withDependencies(Arrays.asList(new SolutionDependencyParameter(),
                                        new SolutionDependencyParameter(), new SolutionDependencyParameter(),
                                        new SolutionDependencyParameter()))))));
        model = BinaryData.fromObject(model).toObject(SolutionDependencyParameter.class);
        Assertions.assertEquals("fnjhfjxwmszkkfo", model.solutionVersionId());
        Assertions.assertEquals("eyfkzikfja", model.solutionTemplateId());
        Assertions.assertEquals("eaivxwczel", model.solutionTemplateVersion());
        Assertions.assertEquals("irels", model.solutionInstanceName());
        Assertions.assertEquals("aenwabf", model.targetId());
        Assertions.assertEquals("ddxbjhwuaanoz", model.dependencies().get(0).solutionVersionId());
        Assertions.assertEquals("sphyoulpjrvxa", model.dependencies().get(0).solutionTemplateId());
        Assertions.assertEquals("rvimjwosytxitcsk", model.dependencies().get(0).solutionTemplateVersion());
        Assertions.assertEquals("k", model.dependencies().get(0).solutionInstanceName());
        Assertions.assertEquals("umiekkezzi", model.dependencies().get(0).targetId());
        Assertions.assertEquals("fjhdg", model.dependencies().get(0).dependencies().get(0).solutionVersionId());
        Assertions.assertEquals("gebdunygaeq", model.dependencies().get(0).dependencies().get(0).solutionTemplateId());
        Assertions.assertEquals("bqfatpxllrxcyjmo",
            model.dependencies().get(0).dependencies().get(0).solutionTemplateVersion());
        Assertions.assertEquals("su", model.dependencies().get(0).dependencies().get(0).solutionInstanceName());
        Assertions.assertEquals("r", model.dependencies().get(0).dependencies().get(0).targetId());
    }
}
