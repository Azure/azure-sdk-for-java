// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadorchestration.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.workloadorchestration.WorkloadOrchestrationManager;
import com.azure.resourcemanager.workloadorchestration.models.ExtendedLocationType;
import com.azure.resourcemanager.workloadorchestration.models.WorkflowVersion;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WorkflowVersionsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"revision\":1288458710,\"configuration\":\"ztekxbyjgmsfep\",\"stageSpec\":[{\"name\":\"ihpq\",\"specification\":{},\"tasks\":[{\"name\":\"hrdicxdwyjfo\",\"specification\":{}},{\"name\":\"xwyovcxjsgbip\",\"specification\":{}}],\"taskOption\":{\"concurrency\":1208173457,\"errorAction\":{}}},{\"name\":\"eksbuhoduchvls\",\"specification\":{},\"tasks\":[{\"name\":\"bfdyjduss\",\"specification\":{}}],\"taskOption\":{\"concurrency\":1022332024,\"errorAction\":{}}},{\"name\":\"kbhwlkaaggkrehbf\",\"specification\":{},\"tasks\":[{\"name\":\"ff\",\"specification\":{}},{\"name\":\"jfiimreoa\",\"specification\":{}},{\"name\":\"sqtaadusrexxfa\",\"specification\":{}},{\"name\":\"sqwudohzilfmnli\",\"specification\":{}}],\"taskOption\":{\"concurrency\":12668329,\"errorAction\":{}}}],\"reviewId\":\"feypofqpmb\",\"state\":\"InReview\",\"specification\":{},\"provisioningState\":\"Deleting\"},\"extendedLocation\":{\"name\":\"mttjxophgerh\",\"type\":\"EdgeZone\"},\"eTag\":\"gohtwz\",\"id\":\"ilrixysf\",\"name\":\"imsqywwwmhk\",\"type\":\"uwaedrympmlqoi\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        WorkloadOrchestrationManager manager = WorkloadOrchestrationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        WorkflowVersion response = manager.workflowVersions()
            .getWithResponse("pq", "evhamfowg", "btmkekxpkzwaq", "ofqovchiqbplv", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("ihpq", response.properties().stageSpec().get(0).name());
        Assertions.assertEquals("hrdicxdwyjfo", response.properties().stageSpec().get(0).tasks().get(0).name());
        Assertions.assertEquals(1208173457, response.properties().stageSpec().get(0).taskOption().concurrency());
        Assertions.assertEquals("mttjxophgerh", response.extendedLocation().name());
        Assertions.assertEquals(ExtendedLocationType.EDGE_ZONE, response.extendedLocation().type());
    }
}
