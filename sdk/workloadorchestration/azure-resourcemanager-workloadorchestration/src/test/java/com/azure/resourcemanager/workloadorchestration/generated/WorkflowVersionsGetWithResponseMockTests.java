// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadorchestration.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.workloadorchestration.WorkloadOrchestrationManager;
import com.azure.resourcemanager.workloadorchestration.models.ExtendedLocationType;
import com.azure.resourcemanager.workloadorchestration.models.WorkflowVersion;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WorkflowVersionsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"revision\":1660876742,\"configuration\":\"dkkgjiiytssikizb\",\"stageSpec\":[{\"name\":\"fqb\",\"specification\":{},\"tasks\":[{\"name\":\"gmqsorhcekxg\",\"specification\":{}},{\"name\":\"lykmxcpwzvmdo\",\"specification\":{}}],\"taskOption\":{\"concurrency\":502016456,\"errorAction\":{}}},{\"name\":\"iw\",\"specification\":{},\"tasks\":[{\"name\":\"oncqbazqicqch\",\"specification\":{}},{\"name\":\"gtvxbyj\",\"specification\":{}},{\"name\":\"nepubdpkxyqvgx\",\"specification\":{}}],\"taskOption\":{\"concurrency\":1008631704,\"errorAction\":{}}},{\"name\":\"tvo\",\"specification\":{},\"tasks\":[{\"name\":\"uwsaifmcwn\",\"specification\":{}},{\"name\":\"s\",\"specification\":{}}],\"taskOption\":{\"concurrency\":914020378,\"errorAction\":{}}}],\"reviewId\":\"cvk\",\"state\":\"ExternalValidationFailed\",\"specification\":{},\"provisioningState\":\"Canceled\"},\"extendedLocation\":{\"name\":\"jy\",\"type\":\"CustomLocation\"},\"eTag\":\"velsz\",\"id\":\"qzevxoqeint\",\"name\":\"waljglzoblqwaaf\",\"type\":\"qulhmzy\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        WorkloadOrchestrationManager manager = WorkloadOrchestrationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        WorkflowVersion response = manager.workflowVersions()
            .getWithResponse("lhjym", "cgqtag", "rclsso", "jomevtfycnlb", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("fqb", response.properties().stageSpec().get(0).name());
        Assertions.assertEquals("gmqsorhcekxg", response.properties().stageSpec().get(0).tasks().get(0).name());
        Assertions.assertEquals(502016456, response.properties().stageSpec().get(0).taskOption().concurrency());
        Assertions.assertEquals("jy", response.extendedLocation().name());
        Assertions.assertEquals(ExtendedLocationType.CUSTOM_LOCATION, response.extendedLocation().type());
    }
}
