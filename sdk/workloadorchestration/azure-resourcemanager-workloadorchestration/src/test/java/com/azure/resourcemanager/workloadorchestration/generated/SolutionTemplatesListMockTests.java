// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadorchestration.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.workloadorchestration.WorkloadOrchestrationManager;
import com.azure.resourcemanager.workloadorchestration.models.ResourceState;
import com.azure.resourcemanager.workloadorchestration.models.SolutionTemplate;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SolutionTemplatesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"description\":\"ui\",\"capabilities\":[\"ri\",\"fohyk\",\"kxbbcbrwjiutgnj\"],\"latestVersion\":\"beewoi\",\"state\":\"active\",\"enableExternalValidation\":false,\"provisioningState\":\"Initialized\"},\"eTag\":\"yrsrziuctixgb\",\"location\":\"uifr\",\"tags\":{\"parybjufpt\":\"aapezkiswqjmdghs\",\"daswvpp\":\"jczjnciuiyqv\",\"rr\":\"sqqzlgcndhz\",\"uww\":\"cfsrhkhgsn\"},\"id\":\"pphefsbzx\",\"name\":\"bzxomeik\",\"type\":\"clwzacnmwpfsu\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        WorkloadOrchestrationManager manager = WorkloadOrchestrationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<SolutionTemplate> response = manager.solutionTemplates().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("uifr", response.iterator().next().location());
        Assertions.assertEquals("aapezkiswqjmdghs", response.iterator().next().tags().get("parybjufpt"));
        Assertions.assertEquals("ui", response.iterator().next().properties().description());
        Assertions.assertEquals("ri", response.iterator().next().properties().capabilities().get(0));
        Assertions.assertEquals(ResourceState.ACTIVE, response.iterator().next().properties().state());
        Assertions.assertFalse(response.iterator().next().properties().enableExternalValidation());
    }
}
