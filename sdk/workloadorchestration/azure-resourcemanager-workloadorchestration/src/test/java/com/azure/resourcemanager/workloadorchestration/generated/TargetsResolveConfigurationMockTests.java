// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadorchestration.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.workloadorchestration.WorkloadOrchestrationManager;
import com.azure.resourcemanager.workloadorchestration.models.ResolvedConfiguration;
import com.azure.resourcemanager.workloadorchestration.models.SolutionDependencyParameter;
import com.azure.resourcemanager.workloadorchestration.models.SolutionTemplateParameter;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class TargetsResolveConfigurationMockTests {
    @Test
    public void testResolveConfiguration() throws Exception {
        String responseStr = "{\"configuration\":\"vagbwidqlvhukove\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        WorkloadOrchestrationManager manager = WorkloadOrchestrationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        ResolvedConfiguration response = manager.targets()
            .resolveConfiguration("bsxtkcudfbsfarfs", "owlkjxnqpv",
                new SolutionTemplateParameter().withSolutionTemplateVersionId("gf")
                    .withSolutionInstanceName("mhqykizmdksa")
                    .withSolutionDependencies(Arrays.asList(
                        new SolutionDependencyParameter().withSolutionVersionId("luqvoxmycjimryv")
                            .withSolutionTemplateId("cwwp")
                            .withSolutionTemplateVersion("zgwe")
                            .withSolutionInstanceName("dsxwefoh")
                            .withTargetId("bvopwndyqle")
                            .withDependencies(Arrays.asList(
                                new SolutionDependencyParameter().withSolutionVersionId("lmtkhlowkxx")
                                    .withSolutionTemplateId("br")
                                    .withSolutionTemplateVersion("jmzsyzfh")
                                    .withSolutionInstanceName("lhikcyychunsj")
                                    .withTargetId("jrtwsz")
                                    .withDependencies(Arrays.asList(new SolutionDependencyParameter(),
                                        new SolutionDependencyParameter())),
                                new SolutionDependencyParameter().withSolutionVersionId("icphvtrrmhw")
                                    .withSolutionTemplateId("fdpyflubh")
                                    .withSolutionTemplateVersion("glrocuy")
                                    .withSolutionInstanceName("whhmemhooc")
                                    .withTargetId("tnpqmemczjk")
                                    .withDependencies(Arrays.asList(new SolutionDependencyParameter(),
                                        new SolutionDependencyParameter())),
                                new SolutionDependencyParameter().withSolutionVersionId("yujxsglhsrrry")
                                    .withSolutionTemplateId("ylmbkzudni")
                                    .withSolutionTemplateVersion("fihotj")
                                    .withSolutionInstanceName("lpxuzzjgnrefq")
                                    .withTargetId("qotoihiqakydiwfb")
                                    .withDependencies(Arrays.asList(new SolutionDependencyParameter(),
                                        new SolutionDependencyParameter(), new SolutionDependencyParameter())))),
                        new SolutionDependencyParameter().withSolutionVersionId("zdq")
                            .withSolutionTemplateId("hcspo")
                            .withSolutionTemplateVersion("qaxsipietgbebjf")
                            .withSolutionInstanceName("bmoichd")
                            .withTargetId("nfpubntnbatz")
                            .withDependencies(
                                Arrays.asList(new SolutionDependencyParameter().withSolutionVersionId("owsaaelcattcjuh")
                                    .withSolutionTemplateId("rvkmjcwmjvlgfggc")
                                    .withSolutionTemplateVersion("yylizrz")
                                    .withSolutionInstanceName("psfxsf")
                                    .withTargetId("tl")
                                    .withDependencies(Arrays.asList(new SolutionDependencyParameter(),
                                        new SolutionDependencyParameter(), new SolutionDependencyParameter(),
                                        new SolutionDependencyParameter())))))),
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("vagbwidqlvhukove", response.configuration());
    }
}
