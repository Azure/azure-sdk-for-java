// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadorchestration.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.workloadorchestration.WorkloadOrchestrationManager;
import com.azure.resourcemanager.workloadorchestration.models.ContextModel;
import com.azure.resourcemanager.workloadorchestration.models.ResourceState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ContextsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"capabilities\":[{\"name\":\"yrfrak\",\"description\":\"ldgrcw\",\"state\":\"inactive\"},{\"name\":\"fc\",\"description\":\"rjajqmatxjtie\",\"state\":\"active\"},{\"name\":\"qgxxgfbb\",\"description\":\"tlpqagynoi\",\"state\":\"active\"}],\"hierarchies\":[{\"name\":\"calincryqxz\",\"description\":\"aqzi\"},{\"name\":\"mqimiymqru\",\"description\":\"guhfupe\"},{\"name\":\"asvvoqsbpkfl\",\"description\":\"nfkgxsyaowuzowpu\"}],\"provisioningState\":\"Failed\"},\"location\":\"cprgukxrztiochl\",\"tags\":{\"f\":\"xmqrudjizc\",\"fbcpaqktkrumzu\":\"mcrunfhiucn\",\"kxiuxqggvqr\":\"dkyzbfvxov\",\"jhffbxrqrkij\":\"hyhlwcjsqg\"},\"id\":\"euqlsdxeqztv\",\"name\":\"wmwwmjswen\",\"type\":\"wwa\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        WorkloadOrchestrationManager manager = WorkloadOrchestrationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<ContextModel> response = manager.contexts().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("cprgukxrztiochl", response.iterator().next().location());
        Assertions.assertEquals("xmqrudjizc", response.iterator().next().tags().get("f"));
        Assertions.assertEquals("yrfrak", response.iterator().next().properties().capabilities().get(0).name());
        Assertions.assertEquals("ldgrcw", response.iterator().next().properties().capabilities().get(0).description());
        Assertions.assertEquals(ResourceState.INACTIVE,
            response.iterator().next().properties().capabilities().get(0).state());
        Assertions.assertEquals("calincryqxz", response.iterator().next().properties().hierarchies().get(0).name());
        Assertions.assertEquals("aqzi", response.iterator().next().properties().hierarchies().get(0).description());
    }
}
