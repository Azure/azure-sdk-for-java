// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadorchestration.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.workloadorchestration.WorkloadOrchestrationManager;
import com.azure.resourcemanager.workloadorchestration.models.ActiveState;
import com.azure.resourcemanager.workloadorchestration.models.ExtendedLocationType;
import com.azure.resourcemanager.workloadorchestration.models.Instance;
import com.azure.resourcemanager.workloadorchestration.models.ReconciliationState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class InstancesListBySolutionMockTests {
    @Test
    public void testListBySolution() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"solutionVersionId\":\"hlzvfictnkjj\",\"targetId\":\"gcwn\",\"activeState\":\"inactive\",\"reconciliationPolicy\":{\"state\":\"active\",\"interval\":\"fyrtogmhmjp\"},\"solutionScope\":\"cdf\",\"status\":{\"lastModified\":\"2021-09-25T01:25:06Z\",\"deployed\":1104557547,\"expectedRunningJobId\":495145104,\"runningJobId\":806895875,\"status\":\"mseharx\",\"statusDetails\":\"vqnrxtmbpj\",\"generation\":1341207363,\"targetStatuses\":[{\"name\":\"hrsidq\",\"status\":\"l\",\"componentStatuses\":[{},{},{}]},{\"name\":\"kft\",\"status\":\"atw\",\"componentStatuses\":[{},{},{},{}]},{\"name\":\"u\",\"status\":\"ym\",\"componentStatuses\":[{},{},{},{}]},{\"name\":\"jhp\",\"status\":\"vjqdvdwkq\",\"componentStatuses\":[{},{},{},{}]}]},\"deploymentTimestampEpoch\":5810045625940459054,\"provisioningState\":\"Deleting\"},\"extendedLocation\":{\"name\":\"aavuagntetaout\",\"type\":\"CustomLocation\"},\"eTag\":\"ctuhspfefyihduye\",\"id\":\"ldphmtybkcgs\",\"name\":\"thhllnmwyne\",\"type\":\"x\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        WorkloadOrchestrationManager manager = WorkloadOrchestrationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<Instance> response
            = manager.instances().listBySolution("fununmpzk", "vfy", "fkd", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("hlzvfictnkjj", response.iterator().next().properties().solutionVersionId());
        Assertions.assertEquals("gcwn", response.iterator().next().properties().targetId());
        Assertions.assertEquals(ActiveState.INACTIVE, response.iterator().next().properties().activeState());
        Assertions.assertEquals(ReconciliationState.ACTIVE,
            response.iterator().next().properties().reconciliationPolicy().state());
        Assertions.assertEquals("fyrtogmhmjp",
            response.iterator().next().properties().reconciliationPolicy().interval());
        Assertions.assertEquals("cdf", response.iterator().next().properties().solutionScope());
        Assertions.assertEquals("aavuagntetaout", response.iterator().next().extendedLocation().name());
        Assertions.assertEquals(ExtendedLocationType.CUSTOM_LOCATION,
            response.iterator().next().extendedLocation().type());
    }
}
