// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadorchestration.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.workloadorchestration.fluent.models.ExecutionInner;
import com.azure.resourcemanager.workloadorchestration.models.ExecutionProperties;
import com.azure.resourcemanager.workloadorchestration.models.ExtendedLocation;
import com.azure.resourcemanager.workloadorchestration.models.ExtendedLocationType;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ExecutionInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ExecutionInner model = BinaryData.fromString(
            "{\"properties\":{\"workflowVersionId\":\"iwrxgkn\",\"specification\":{},\"status\":{\"updateTime\":\"2021-10-18T16:16:50Z\",\"status\":1482773915,\"statusMessage\":\"dfvpg\",\"stageHistory\":[{\"status\":631960755,\"statusMessage\":\"gbpfgz\",\"stage\":\"tx\",\"nextstage\":\"flbqvgaq\",\"errorMessage\":\"gafcqu\",\"isActive\":\"active\",\"inputs\":{},\"outputs\":{}},{\"status\":999562740,\"statusMessage\":\"tutnwlduycvuzhyr\",\"stage\":\"wipmvekdxuk\",\"nextstage\":\"gsjj\",\"errorMessage\":\"n\",\"isActive\":\"inactive\",\"inputs\":{},\"outputs\":{}},{\"status\":1861244838,\"statusMessage\":\"zjhfjmhvv\",\"stage\":\"vgpmun\",\"nextstage\":\"sx\",\"errorMessage\":\"hfbuzjyihsasbhud\",\"isActive\":\"inactive\",\"inputs\":{},\"outputs\":{}},{\"status\":840782124,\"statusMessage\":\"ynsqyrpfoobr\",\"stage\":\"tyms\",\"nextstage\":\"ygqdnfwqzdz\",\"errorMessage\":\"ilaxhn\",\"isActive\":\"active\",\"inputs\":{},\"outputs\":{}}]},\"provisioningState\":\"Failed\"},\"extendedLocation\":{\"name\":\"wivkxo\",\"type\":\"EdgeZone\"},\"eTag\":\"nbixxrti\",\"id\":\"cpwpg\",\"name\":\"lrcivtsoxfrke\",\"type\":\"xpmyyefrpmpdnq\"}")
            .toObject(ExecutionInner.class);
        Assertions.assertEquals("iwrxgkn", model.properties().workflowVersionId());
        Assertions.assertEquals("wivkxo", model.extendedLocation().name());
        Assertions.assertEquals(ExtendedLocationType.EDGE_ZONE, model.extendedLocation().type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ExecutionInner model = new ExecutionInner()
            .withProperties(new ExecutionProperties().withWorkflowVersionId("iwrxgkn").withSpecification(mapOf()))
            .withExtendedLocation(new ExtendedLocation().withName("wivkxo").withType(ExtendedLocationType.EDGE_ZONE));
        model = BinaryData.fromObject(model).toObject(ExecutionInner.class);
        Assertions.assertEquals("iwrxgkn", model.properties().workflowVersionId());
        Assertions.assertEquals("wivkxo", model.extendedLocation().name());
        Assertions.assertEquals(ExtendedLocationType.EDGE_ZONE, model.extendedLocation().type());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
