// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadorchestration.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.workloadorchestration.models.Capability;
import com.azure.resourcemanager.workloadorchestration.models.ContextUpdateProperties;
import com.azure.resourcemanager.workloadorchestration.models.Hierarchy;
import com.azure.resourcemanager.workloadorchestration.models.ResourceState;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ContextUpdatePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ContextUpdateProperties model = BinaryData.fromString(
            "{\"capabilities\":[{\"name\":\"dtmaa\",\"description\":\"quhuxylrj\",\"state\":\"active\"},{\"name\":\"ygjbmzyospspsh\",\"description\":\"kfkyjp\",\"state\":\"inactive\"},{\"name\":\"bpssdfp\",\"description\":\"yogtieyujtvczkcn\",\"state\":\"inactive\"},{\"name\":\"x\",\"description\":\"unjdx\",\"state\":\"active\"}],\"hierarchies\":[{\"name\":\"vxlx\",\"description\":\"aglqivbgkcvkh\"},{\"name\":\"zvuqdflvon\",\"description\":\"yp\"}]}")
            .toObject(ContextUpdateProperties.class);
        Assertions.assertEquals("dtmaa", model.capabilities().get(0).name());
        Assertions.assertEquals("quhuxylrj", model.capabilities().get(0).description());
        Assertions.assertEquals(ResourceState.ACTIVE, model.capabilities().get(0).state());
        Assertions.assertEquals("vxlx", model.hierarchies().get(0).name());
        Assertions.assertEquals("aglqivbgkcvkh", model.hierarchies().get(0).description());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ContextUpdateProperties model = new ContextUpdateProperties().withCapabilities(Arrays.asList(
            new Capability().withName("dtmaa").withDescription("quhuxylrj").withState(ResourceState.ACTIVE),
            new Capability().withName("ygjbmzyospspsh").withDescription("kfkyjp").withState(ResourceState.INACTIVE),
            new Capability().withName("bpssdfp").withDescription("yogtieyujtvczkcn").withState(ResourceState.INACTIVE),
            new Capability().withName("x").withDescription("unjdx").withState(ResourceState.ACTIVE)))
            .withHierarchies(Arrays.asList(new Hierarchy().withName("vxlx").withDescription("aglqivbgkcvkh"),
                new Hierarchy().withName("zvuqdflvon").withDescription("yp")));
        model = BinaryData.fromObject(model).toObject(ContextUpdateProperties.class);
        Assertions.assertEquals("dtmaa", model.capabilities().get(0).name());
        Assertions.assertEquals("quhuxylrj", model.capabilities().get(0).description());
        Assertions.assertEquals(ResourceState.ACTIVE, model.capabilities().get(0).state());
        Assertions.assertEquals("vxlx", model.hierarchies().get(0).name());
        Assertions.assertEquals("aglqivbgkcvkh", model.hierarchies().get(0).description());
    }
}
