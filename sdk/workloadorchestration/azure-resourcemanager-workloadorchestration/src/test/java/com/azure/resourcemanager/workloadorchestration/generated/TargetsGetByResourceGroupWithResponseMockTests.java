// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadorchestration.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.workloadorchestration.WorkloadOrchestrationManager;
import com.azure.resourcemanager.workloadorchestration.models.ExtendedLocationType;
import com.azure.resourcemanager.workloadorchestration.models.ResourceState;
import com.azure.resourcemanager.workloadorchestration.models.Target;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class TargetsGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"description\":\"kwcegyamlbn\",\"displayName\":\"eqacjjvpilguooq\",\"contextId\":\"agmdit\",\"targetSpecification\":{},\"capabilities\":[\"iookjbsah\",\"tdtpdelqacslmo\",\"oebn\"],\"hierarchyLevel\":\"xofvcjk\",\"status\":{\"lastModified\":\"2021-04-17T05:22:10Z\",\"deployed\":781083421,\"expectedRunningJobId\":1982278594,\"runningJobId\":1368173114,\"status\":\"w\",\"statusDetails\":\"mdujtmvcopexcm\",\"generation\":1949452896,\"targetStatuses\":[{\"name\":\"hlkyqltqsrog\",\"status\":\"wkffdjkt\",\"componentStatuses\":[{},{}]}]},\"solutionScope\":\"dfvclglxnfu\",\"state\":\"active\",\"provisioningState\":\"Canceled\"},\"eTag\":\"sqo\",\"extendedLocation\":{\"name\":\"fikayiansharujtj\",\"type\":\"CustomLocation\"},\"location\":\"fzyjqt\",\"tags\":{\"qqekewvnqvcdlgu\":\"kpqhjpenuygbq\",\"nlaxpunjqikcz\":\"ucmfdj\",\"xmfcsserxhtv\":\"vitac\",\"tsjgqrsx\":\"oxhlw\"},\"id\":\"p\",\"name\":\"uuuybnchrsziz\",\"type\":\"yuel\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        WorkloadOrchestrationManager manager = WorkloadOrchestrationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Target response = manager.targets()
            .getByResourceGroupWithResponse("kqzeqyjleziunjx", "fza", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("fzyjqt", response.location());
        Assertions.assertEquals("kpqhjpenuygbq", response.tags().get("qqekewvnqvcdlgu"));
        Assertions.assertEquals("kwcegyamlbn", response.properties().description());
        Assertions.assertEquals("eqacjjvpilguooq", response.properties().displayName());
        Assertions.assertEquals("agmdit", response.properties().contextId());
        Assertions.assertEquals("iookjbsah", response.properties().capabilities().get(0));
        Assertions.assertEquals("xofvcjk", response.properties().hierarchyLevel());
        Assertions.assertEquals("dfvclglxnfu", response.properties().solutionScope());
        Assertions.assertEquals(ResourceState.ACTIVE, response.properties().state());
        Assertions.assertEquals("fikayiansharujtj", response.extendedLocation().name());
        Assertions.assertEquals(ExtendedLocationType.CUSTOM_LOCATION, response.extendedLocation().type());
    }
}
