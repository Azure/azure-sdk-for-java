// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadorchestration.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.workloadorchestration.WorkloadOrchestrationManager;
import com.azure.resourcemanager.workloadorchestration.models.ExtendedLocationType;
import com.azure.resourcemanager.workloadorchestration.models.ResourceState;
import com.azure.resourcemanager.workloadorchestration.models.Target;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class TargetsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"description\":\"an\",\"displayName\":\"oypmbltoorm\",\"contextId\":\"fqlwxldykalsy\",\"targetSpecification\":{},\"capabilities\":[\"lnjpnnbmjksibjgs\",\"jxxahmrnad\",\"yqegx\",\"iv\"],\"hierarchyLevel\":\"inbmh\",\"status\":{\"lastModified\":\"2021-02-09T15:04:07Z\",\"deployed\":1144091174,\"expectedRunningJobId\":1599505348,\"runningJobId\":1861737690,\"status\":\"mbk\",\"statusDetails\":\"njaujvaan\",\"generation\":2077139001,\"targetStatuses\":[{\"name\":\"wkdtaawxwf\",\"status\":\"aumrrqmbzmqkrat\",\"componentStatuses\":[{},{}]},{\"name\":\"bjsidb\",\"status\":\"kfpksokdgo\",\"componentStatuses\":[{},{}]},{\"name\":\"jymrhbg\",\"status\":\"ozkyewnfnzh\",\"componentStatuses\":[{}]}]},\"solutionScope\":\"smffjkutycyarnr\",\"state\":\"inactive\",\"provisioningState\":\"Succeeded\"},\"eTag\":\"bzog\",\"extendedLocation\":{\"name\":\"t\",\"type\":\"EdgeZone\"},\"location\":\"czhcoeocnh\",\"tags\":{\"jzcfyjzptwr\":\"ot\",\"yglqdhmrjzral\":\"ohapqinfsz\",\"ypsjoq\":\"xpjb\",\"qzvs\":\"jenkyh\"},\"id\":\"xfxjelgcmpzqj\",\"name\":\"hhqxuwyvcacoyviv\",\"type\":\"s\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        WorkloadOrchestrationManager manager = WorkloadOrchestrationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<Target> response = manager.targets().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("czhcoeocnh", response.iterator().next().location());
        Assertions.assertEquals("ot", response.iterator().next().tags().get("jzcfyjzptwr"));
        Assertions.assertEquals("an", response.iterator().next().properties().description());
        Assertions.assertEquals("oypmbltoorm", response.iterator().next().properties().displayName());
        Assertions.assertEquals("fqlwxldykalsy", response.iterator().next().properties().contextId());
        Assertions.assertEquals("lnjpnnbmjksibjgs", response.iterator().next().properties().capabilities().get(0));
        Assertions.assertEquals("inbmh", response.iterator().next().properties().hierarchyLevel());
        Assertions.assertEquals("smffjkutycyarnr", response.iterator().next().properties().solutionScope());
        Assertions.assertEquals(ResourceState.INACTIVE, response.iterator().next().properties().state());
        Assertions.assertEquals("t", response.iterator().next().extendedLocation().name());
        Assertions.assertEquals(ExtendedLocationType.EDGE_ZONE, response.iterator().next().extendedLocation().type());
    }
}
