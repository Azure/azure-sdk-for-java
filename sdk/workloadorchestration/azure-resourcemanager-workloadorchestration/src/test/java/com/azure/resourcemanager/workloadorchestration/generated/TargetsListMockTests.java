// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadorchestration.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.workloadorchestration.WorkloadOrchestrationManager;
import com.azure.resourcemanager.workloadorchestration.models.ExtendedLocationType;
import com.azure.resourcemanager.workloadorchestration.models.ResourceState;
import com.azure.resourcemanager.workloadorchestration.models.Target;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class TargetsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"description\":\"crqctmxxdtddmflh\",\"displayName\":\"ytxzvtznapxbanno\",\"contextId\":\"voxczytpr\",\"targetSpecification\":{},\"capabilities\":[\"vroevytlyo\",\"rrrouuxvnsa\",\"bcrymodizrx\",\"lobdxna\"],\"hierarchyLevel\":\"pmkmlmvevfx\",\"status\":{\"lastModified\":\"2021-01-31T11:09:27Z\",\"deployed\":1939182119,\"expectedRunningJobId\":315314299,\"runningJobId\":252805227,\"status\":\"hrdd\",\"statusDetails\":\"fg\",\"generation\":354945221,\"targetStatuses\":[{\"name\":\"cbb\",\"status\":\"qcy\",\"componentStatuses\":[{},{},{}]},{\"name\":\"qofyuicdhzbdy\",\"status\":\"wgbdvibidmhmwffp\",\"componentStatuses\":[{},{}]},{\"name\":\"vapckccrrvwey\",\"status\":\"oy\",\"componentStatuses\":[{}]}]},\"solutionScope\":\"haim\",\"state\":\"active\",\"provisioningState\":\"Deleting\"},\"eTag\":\"boshbragapyyrmfs\",\"extendedLocation\":{\"name\":\"pavbo\",\"type\":\"EdgeZone\"},\"location\":\"pdbwnupgahxkum\",\"tags\":{\"dmmcpugmehqep\":\"caac\",\"hbzehewho\":\"u\",\"qnbldxe\":\"hnl\",\"orim\":\"clgsc\"},\"id\":\"rsrrmoucsofldp\",\"name\":\"viyfcaabeolhbhlv\",\"type\":\"mxuq\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        WorkloadOrchestrationManager manager = WorkloadOrchestrationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<Target> response = manager.targets().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("pdbwnupgahxkum", response.iterator().next().location());
        Assertions.assertEquals("caac", response.iterator().next().tags().get("dmmcpugmehqep"));
        Assertions.assertEquals("crqctmxxdtddmflh", response.iterator().next().properties().description());
        Assertions.assertEquals("ytxzvtznapxbanno", response.iterator().next().properties().displayName());
        Assertions.assertEquals("voxczytpr", response.iterator().next().properties().contextId());
        Assertions.assertEquals("vroevytlyo", response.iterator().next().properties().capabilities().get(0));
        Assertions.assertEquals("pmkmlmvevfx", response.iterator().next().properties().hierarchyLevel());
        Assertions.assertEquals("haim", response.iterator().next().properties().solutionScope());
        Assertions.assertEquals(ResourceState.ACTIVE, response.iterator().next().properties().state());
        Assertions.assertEquals("pavbo", response.iterator().next().extendedLocation().name());
        Assertions.assertEquals(ExtendedLocationType.EDGE_ZONE, response.iterator().next().extendedLocation().type());
    }
}
