// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadorchestration.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.workloadorchestration.WorkloadOrchestrationManager;
import com.azure.resourcemanager.workloadorchestration.models.ExtendedLocationType;
import com.azure.resourcemanager.workloadorchestration.models.Solution;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SolutionsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"solutionTemplateId\":\"fqz\",\"availableSolutionTemplateVersions\":[{\"solutionTemplateVersion\":\"njyixh\",\"latestConfigRevision\":\"fratqxmbjroumzz\",\"isConfigured\":true},{\"solutionTemplateVersion\":\"al\",\"latestConfigRevision\":\"jrhuzgf\",\"isConfigured\":false}],\"provisioningState\":\"Deleting\"},\"extendedLocation\":{\"name\":\"pusllywpv\",\"type\":\"CustomLocation\"},\"eTag\":\"tzbpdbollgry\",\"id\":\"iuas\",\"name\":\"growsoc\",\"type\":\"equygdjboqgrmtq\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        WorkloadOrchestrationManager manager = WorkloadOrchestrationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Solution response = manager.solutions()
            .getWithResponse("blgmokzkltrfowtd", "rfmvlihcvjdrqcrj", "dhftukvhdxlwy", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("pusllywpv", response.extendedLocation().name());
        Assertions.assertEquals(ExtendedLocationType.CUSTOM_LOCATION, response.extendedLocation().type());
    }
}
