// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadorchestration.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.workloadorchestration.WorkloadOrchestrationManager;
import com.azure.resourcemanager.workloadorchestration.models.Execution;
import com.azure.resourcemanager.workloadorchestration.models.ExtendedLocationType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ExecutionsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"workflowVersionId\":\"ibuyvpirf\",\"specification\":{},\"status\":{\"updateTime\":\"2021-01-03T00:43:50Z\",\"status\":1671411460,\"statusMessage\":\"sbede\",\"stageHistory\":[{\"status\":160688731,\"statusMessage\":\"bhxv\",\"stage\":\"nul\",\"nextstage\":\"nhj\",\"errorMessage\":\"dyznfajsvks\",\"isActive\":\"inactive\",\"inputs\":{},\"outputs\":{}},{\"status\":1522602449,\"statusMessage\":\"hjrliizjixlqfh\",\"stage\":\"kwabsolronqq\",\"nextstage\":\"gn\",\"errorMessage\":\"xsjxtelexhvuqboz\",\"isActive\":\"active\",\"inputs\":{},\"outputs\":{}}]},\"provisioningState\":\"Succeeded\"},\"extendedLocation\":{\"name\":\"uzlbcnn\",\"type\":\"EdgeZone\"},\"eTag\":\"nx\",\"id\":\"qytl\",\"name\":\"hd\",\"type\":\"z\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        WorkloadOrchestrationManager manager = WorkloadOrchestrationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Execution response = manager.executions()
            .getWithResponse("wvpsoz", "iihjriybmrzo", "pnx", "dvwnjkgvfnmxa", "rsqftib",
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("ibuyvpirf", response.properties().workflowVersionId());
        Assertions.assertEquals("uzlbcnn", response.extendedLocation().name());
        Assertions.assertEquals(ExtendedLocationType.EDGE_ZONE, response.extendedLocation().type());
    }
}
