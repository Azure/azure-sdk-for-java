// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadorchestration.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.workloadorchestration.WorkloadOrchestrationManager;
import com.azure.resourcemanager.workloadorchestration.models.Execution;
import com.azure.resourcemanager.workloadorchestration.models.ExtendedLocationType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ExecutionsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"workflowVersionId\":\"clctzey\",\"specification\":{},\"status\":{\"updateTime\":\"2021-04-17T02:25:11Z\",\"status\":221950277,\"statusMessage\":\"wzqauxzanhmkvf\",\"stageHistory\":[{\"status\":1650089892,\"statusMessage\":\"rbcp\",\"stage\":\"xudqyemebunaucmc\",\"nextstage\":\"tneemmjauwcgxef\",\"errorMessage\":\"haitranize\",\"isActive\":\"inactive\",\"inputs\":{},\"outputs\":{}},{\"status\":1177263124,\"statusMessage\":\"bvfbngfcocefhpri\",\"stage\":\"fmpztraudsvh\",\"nextstage\":\"dculregp\",\"errorMessage\":\"moj\",\"isActive\":\"active\",\"inputs\":{},\"outputs\":{}},{\"status\":776813116,\"statusMessage\":\"hqrdgrtwmewjzlpy\",\"stage\":\"fa\",\"nextstage\":\"wjcayerzrr\",\"errorMessage\":\"syb\",\"isActive\":\"inactive\",\"inputs\":{},\"outputs\":{}}]},\"provisioningState\":\"Deleting\"},\"extendedLocation\":{\"name\":\"srleinkfscjfn\",\"type\":\"EdgeZone\"},\"eTag\":\"vuagfqwtl\",\"id\":\"gvmreuptrklzmi\",\"name\":\"ajwolxfs\",\"type\":\"aghm\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        WorkloadOrchestrationManager manager = WorkloadOrchestrationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Execution response = manager.executions()
            .getWithResponse("ewfopazdazg", "sqgpewqcfu", "mdpv", "zgl", "jbkn", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("clctzey", response.properties().workflowVersionId());
        Assertions.assertEquals("srleinkfscjfn", response.extendedLocation().name());
        Assertions.assertEquals(ExtendedLocationType.EDGE_ZONE, response.extendedLocation().type());
    }
}
