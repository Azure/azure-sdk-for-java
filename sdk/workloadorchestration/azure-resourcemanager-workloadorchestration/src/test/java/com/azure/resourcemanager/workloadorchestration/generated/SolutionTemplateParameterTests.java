// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadorchestration.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.workloadorchestration.models.SolutionDependencyParameter;
import com.azure.resourcemanager.workloadorchestration.models.SolutionTemplateParameter;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SolutionTemplateParameterTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SolutionTemplateParameter model = BinaryData.fromString(
            "{\"solutionTemplateVersionId\":\"uu\",\"solutionInstanceName\":\"fqka\",\"solutionDependencies\":[{\"solutionVersionId\":\"ipfpubji\",\"solutionTemplateId\":\"wifto\",\"solutionTemplateVersion\":\"kvpuvksgplsaknyn\",\"solutionInstanceName\":\"ynl\",\"targetId\":\"huopxodlqiynto\",\"dependencies\":[{\"solutionVersionId\":\"leosjswsrms\",\"solutionTemplateId\":\"zrpzb\",\"solutionTemplateVersion\":\"ckqqzqioxiysui\",\"solutionInstanceName\":\"ynkedyatrwyhqmib\",\"targetId\":\"hwit\",\"dependencies\":[{},{},{},{}]},{\"solutionVersionId\":\"yynpcdpumnzgmwz\",\"solutionTemplateId\":\"abikns\",\"solutionTemplateVersion\":\"gj\",\"solutionInstanceName\":\"bldtlww\",\"targetId\":\"kdmtncvokotll\",\"dependencies\":[{},{}]}]},{\"solutionVersionId\":\"gsyocogj\",\"solutionTemplateId\":\"dtbnnha\",\"solutionTemplateVersion\":\"ocrkvcikh\",\"solutionInstanceName\":\"p\",\"targetId\":\"qgxqquezikyw\",\"dependencies\":[{\"solutionVersionId\":\"allatmelwuipic\",\"solutionTemplateId\":\"zkzivgvvcnay\",\"solutionTemplateVersion\":\"yrnxxmueedn\",\"solutionInstanceName\":\"dvstkw\",\"targetId\":\"tchealmf\",\"dependencies\":[{}]},{\"solutionVersionId\":\"aygdvwvgpioh\",\"solutionTemplateId\":\"xrtfudxep\",\"solutionTemplateVersion\":\"yqagvrvm\",\"solutionInstanceName\":\"k\",\"targetId\":\"ghimdblx\",\"dependencies\":[{},{},{}]}]}]}")
            .toObject(SolutionTemplateParameter.class);
        Assertions.assertEquals("uu", model.solutionTemplateVersionId());
        Assertions.assertEquals("fqka", model.solutionInstanceName());
        Assertions.assertEquals("ipfpubji", model.solutionDependencies().get(0).solutionVersionId());
        Assertions.assertEquals("wifto", model.solutionDependencies().get(0).solutionTemplateId());
        Assertions.assertEquals("kvpuvksgplsaknyn", model.solutionDependencies().get(0).solutionTemplateVersion());
        Assertions.assertEquals("ynl", model.solutionDependencies().get(0).solutionInstanceName());
        Assertions.assertEquals("huopxodlqiynto", model.solutionDependencies().get(0).targetId());
        Assertions.assertEquals("leosjswsrms",
            model.solutionDependencies().get(0).dependencies().get(0).solutionVersionId());
        Assertions.assertEquals("zrpzb",
            model.solutionDependencies().get(0).dependencies().get(0).solutionTemplateId());
        Assertions.assertEquals("ckqqzqioxiysui",
            model.solutionDependencies().get(0).dependencies().get(0).solutionTemplateVersion());
        Assertions.assertEquals("ynkedyatrwyhqmib",
            model.solutionDependencies().get(0).dependencies().get(0).solutionInstanceName());
        Assertions.assertEquals("hwit", model.solutionDependencies().get(0).dependencies().get(0).targetId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SolutionTemplateParameter model
            = new SolutionTemplateParameter().withSolutionTemplateVersionId("uu")
                .withSolutionInstanceName("fqka")
                .withSolutionDependencies(
                    Arrays.asList(
                        new SolutionDependencyParameter().withSolutionVersionId("ipfpubji")
                            .withSolutionTemplateId("wifto")
                            .withSolutionTemplateVersion("kvpuvksgplsaknyn")
                            .withSolutionInstanceName("ynl")
                            .withTargetId("huopxodlqiynto")
                            .withDependencies(Arrays.asList(
                                new SolutionDependencyParameter().withSolutionVersionId("leosjswsrms")
                                    .withSolutionTemplateId("zrpzb")
                                    .withSolutionTemplateVersion("ckqqzqioxiysui")
                                    .withSolutionInstanceName("ynkedyatrwyhqmib")
                                    .withTargetId("hwit")
                                    .withDependencies(Arrays.asList(new SolutionDependencyParameter(),
                                        new SolutionDependencyParameter(), new SolutionDependencyParameter(),
                                        new SolutionDependencyParameter())),
                                new SolutionDependencyParameter().withSolutionVersionId("yynpcdpumnzgmwz")
                                    .withSolutionTemplateId("abikns")
                                    .withSolutionTemplateVersion("gj")
                                    .withSolutionInstanceName("bldtlww")
                                    .withTargetId("kdmtncvokotll")
                                    .withDependencies(Arrays.asList(new SolutionDependencyParameter(),
                                        new SolutionDependencyParameter())))),
                        new SolutionDependencyParameter().withSolutionVersionId("gsyocogj")
                            .withSolutionTemplateId("dtbnnha")
                            .withSolutionTemplateVersion("ocrkvcikh")
                            .withSolutionInstanceName("p")
                            .withTargetId("qgxqquezikyw")
                            .withDependencies(Arrays.asList(
                                new SolutionDependencyParameter().withSolutionVersionId("allatmelwuipic")
                                    .withSolutionTemplateId("zkzivgvvcnay")
                                    .withSolutionTemplateVersion("yrnxxmueedn")
                                    .withSolutionInstanceName("dvstkw")
                                    .withTargetId("tchealmf")
                                    .withDependencies(Arrays.asList(new SolutionDependencyParameter())),
                                new SolutionDependencyParameter().withSolutionVersionId("aygdvwvgpioh")
                                    .withSolutionTemplateId("xrtfudxep")
                                    .withSolutionTemplateVersion("yqagvrvm")
                                    .withSolutionInstanceName("k")
                                    .withTargetId("ghimdblx")
                                    .withDependencies(Arrays.asList(new SolutionDependencyParameter(),
                                        new SolutionDependencyParameter(), new SolutionDependencyParameter()))))));
        model = BinaryData.fromObject(model).toObject(SolutionTemplateParameter.class);
        Assertions.assertEquals("uu", model.solutionTemplateVersionId());
        Assertions.assertEquals("fqka", model.solutionInstanceName());
        Assertions.assertEquals("ipfpubji", model.solutionDependencies().get(0).solutionVersionId());
        Assertions.assertEquals("wifto", model.solutionDependencies().get(0).solutionTemplateId());
        Assertions.assertEquals("kvpuvksgplsaknyn", model.solutionDependencies().get(0).solutionTemplateVersion());
        Assertions.assertEquals("ynl", model.solutionDependencies().get(0).solutionInstanceName());
        Assertions.assertEquals("huopxodlqiynto", model.solutionDependencies().get(0).targetId());
        Assertions.assertEquals("leosjswsrms",
            model.solutionDependencies().get(0).dependencies().get(0).solutionVersionId());
        Assertions.assertEquals("zrpzb",
            model.solutionDependencies().get(0).dependencies().get(0).solutionTemplateId());
        Assertions.assertEquals("ckqqzqioxiysui",
            model.solutionDependencies().get(0).dependencies().get(0).solutionTemplateVersion());
        Assertions.assertEquals("ynkedyatrwyhqmib",
            model.solutionDependencies().get(0).dependencies().get(0).solutionInstanceName());
        Assertions.assertEquals("hwit", model.solutionDependencies().get(0).dependencies().get(0).targetId());
    }
}
