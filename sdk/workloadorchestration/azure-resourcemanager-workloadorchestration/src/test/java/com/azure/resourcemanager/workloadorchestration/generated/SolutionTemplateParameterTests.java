// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadorchestration.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.workloadorchestration.models.SolutionDependencyParameter;
import com.azure.resourcemanager.workloadorchestration.models.SolutionTemplateParameter;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SolutionTemplateParameterTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SolutionTemplateParameter model = BinaryData.fromString(
            "{\"solutionTemplateVersionId\":\"rknftguvriuhprwm\",\"solutionInstanceName\":\"vxqtayriwwroyqbe\",\"solutionDependencies\":[{\"solutionVersionId\":\"qibycnojvknm\",\"solutionTemplateId\":\"qsgzvahapj\",\"solutionTemplateVersion\":\"hpvgqz\",\"solutionInstanceName\":\"rvxdjzlmw\",\"targetId\":\"kvugfhzovawjvzun\",\"dependencies\":[{\"solutionVersionId\":\"nnprn\",\"solutionTemplateId\":\"peilpjzuaejxdu\",\"solutionTemplateVersion\":\"skzbb\",\"solutionInstanceName\":\"zumveekgpwo\",\"targetId\":\"hkfpbs\",\"dependencies\":[{}]},{\"solutionVersionId\":\"dxluu\",\"solutionTemplateId\":\"ttouwaboekqvkel\",\"solutionTemplateVersion\":\"mvb\",\"solutionInstanceName\":\"yjsflhhcaalnji\",\"targetId\":\"sxyawjoyaqcs\",\"dependencies\":[{},{},{},{}]}]},{\"solutionVersionId\":\"kiidzyex\",\"solutionTemplateId\":\"eli\",\"solutionTemplateVersion\":\"nr\",\"solutionInstanceName\":\"folhbnxknal\",\"targetId\":\"lp\",\"dependencies\":[{\"solutionVersionId\":\"tpnapnyiropuhpig\",\"solutionTemplateId\":\"gylgqgitxmedjvcs\",\"solutionTemplateVersion\":\"n\",\"solutionInstanceName\":\"wncwzzhxgktrmg\",\"targetId\":\"napkteoellw\",\"dependencies\":[{},{},{},{}]},{\"solutionVersionId\":\"ygpfqb\",\"solutionTemplateId\":\"ceopzfqrhhuaopp\",\"solutionTemplateVersion\":\"qeqxo\",\"solutionInstanceName\":\"dahzxctobg\",\"targetId\":\"dmoizpostmg\",\"dependencies\":[{},{},{}]},{\"solutionVersionId\":\"unrmfqjhhkxb\",\"solutionTemplateId\":\"jy\",\"solutionTemplateVersion\":\"hx\",\"solutionInstanceName\":\"yngudivk\",\"targetId\":\"swbxqz\",\"dependencies\":[{}]}]},{\"solutionVersionId\":\"fauvjfdxx\",\"solutionTemplateId\":\"e\",\"solutionTemplateVersion\":\"t\",\"solutionInstanceName\":\"aqtdoqmcbx\",\"targetId\":\"vxysl\",\"dependencies\":[{\"solutionVersionId\":\"fxoblytkb\",\"solutionTemplateId\":\"pe\",\"solutionTemplateVersion\":\"wfbkrvrns\",\"solutionInstanceName\":\"hqjohxcrsbfova\",\"targetId\":\"ruvw\",\"dependencies\":[{},{},{},{}]},{\"solutionVersionId\":\"fsubcgjbirxbpy\",\"solutionTemplateId\":\"rfbjf\",\"solutionTemplateVersion\":\"w\",\"solutionInstanceName\":\"otftpvjzbexilz\",\"targetId\":\"fqqnvwpmqtaruo\",\"dependencies\":[{},{},{},{}]},{\"solutionVersionId\":\"cjhwq\",\"solutionTemplateId\":\"jrybnwjewgdrjer\",\"solutionTemplateVersion\":\"aen\",\"solutionInstanceName\":\"eh\",\"targetId\":\"doy\",\"dependencies\":[{},{}]}]}]}")
            .toObject(SolutionTemplateParameter.class);
        Assertions.assertEquals("rknftguvriuhprwm", model.solutionTemplateVersionId());
        Assertions.assertEquals("vxqtayriwwroyqbe", model.solutionInstanceName());
        Assertions.assertEquals("qibycnojvknm", model.solutionDependencies().get(0).solutionVersionId());
        Assertions.assertEquals("qsgzvahapj", model.solutionDependencies().get(0).solutionTemplateId());
        Assertions.assertEquals("hpvgqz", model.solutionDependencies().get(0).solutionTemplateVersion());
        Assertions.assertEquals("rvxdjzlmw", model.solutionDependencies().get(0).solutionInstanceName());
        Assertions.assertEquals("kvugfhzovawjvzun", model.solutionDependencies().get(0).targetId());
        Assertions.assertEquals("nnprn", model.solutionDependencies().get(0).dependencies().get(0).solutionVersionId());
        Assertions.assertEquals("peilpjzuaejxdu",
            model.solutionDependencies().get(0).dependencies().get(0).solutionTemplateId());
        Assertions.assertEquals("skzbb",
            model.solutionDependencies().get(0).dependencies().get(0).solutionTemplateVersion());
        Assertions.assertEquals("zumveekgpwo",
            model.solutionDependencies().get(0).dependencies().get(0).solutionInstanceName());
        Assertions.assertEquals("hkfpbs", model.solutionDependencies().get(0).dependencies().get(0).targetId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SolutionTemplateParameter model
            = new SolutionTemplateParameter().withSolutionTemplateVersionId("rknftguvriuhprwm")
                .withSolutionInstanceName("vxqtayriwwroyqbe")
                .withSolutionDependencies(
                    Arrays.asList(
                        new SolutionDependencyParameter().withSolutionVersionId("qibycnojvknm")
                            .withSolutionTemplateId("qsgzvahapj")
                            .withSolutionTemplateVersion("hpvgqz")
                            .withSolutionInstanceName("rvxdjzlmw")
                            .withTargetId("kvugfhzovawjvzun")
                            .withDependencies(Arrays.asList(
                                new SolutionDependencyParameter().withSolutionVersionId("nnprn")
                                    .withSolutionTemplateId("peilpjzuaejxdu")
                                    .withSolutionTemplateVersion("skzbb")
                                    .withSolutionInstanceName("zumveekgpwo")
                                    .withTargetId("hkfpbs")
                                    .withDependencies(Arrays.asList(new SolutionDependencyParameter())),
                                new SolutionDependencyParameter().withSolutionVersionId("dxluu")
                                    .withSolutionTemplateId("ttouwaboekqvkel")
                                    .withSolutionTemplateVersion("mvb")
                                    .withSolutionInstanceName("yjsflhhcaalnji")
                                    .withTargetId("sxyawjoyaqcs")
                                    .withDependencies(Arrays.asList(new SolutionDependencyParameter(),
                                        new SolutionDependencyParameter(), new SolutionDependencyParameter(),
                                        new SolutionDependencyParameter())))),
                        new SolutionDependencyParameter().withSolutionVersionId("kiidzyex")
                            .withSolutionTemplateId("eli")
                            .withSolutionTemplateVersion("nr")
                            .withSolutionInstanceName("folhbnxknal")
                            .withTargetId("lp")
                            .withDependencies(Arrays.asList(
                                new SolutionDependencyParameter().withSolutionVersionId("tpnapnyiropuhpig")
                                    .withSolutionTemplateId("gylgqgitxmedjvcs")
                                    .withSolutionTemplateVersion("n")
                                    .withSolutionInstanceName("wncwzzhxgktrmg")
                                    .withTargetId("napkteoellw")
                                    .withDependencies(Arrays.asList(
                                        new SolutionDependencyParameter(), new SolutionDependencyParameter(),
                                        new SolutionDependencyParameter(), new SolutionDependencyParameter())),
                                new SolutionDependencyParameter().withSolutionVersionId("ygpfqb")
                                    .withSolutionTemplateId("ceopzfqrhhuaopp")
                                    .withSolutionTemplateVersion("qeqxo")
                                    .withSolutionInstanceName("dahzxctobg")
                                    .withTargetId("dmoizpostmg")
                                    .withDependencies(Arrays.asList(new SolutionDependencyParameter(),
                                        new SolutionDependencyParameter(), new SolutionDependencyParameter())),
                                new SolutionDependencyParameter().withSolutionVersionId("unrmfqjhhkxb")
                                    .withSolutionTemplateId("jy")
                                    .withSolutionTemplateVersion("hx")
                                    .withSolutionInstanceName("yngudivk")
                                    .withTargetId("swbxqz")
                                    .withDependencies(Arrays.asList(new SolutionDependencyParameter())))),
                        new SolutionDependencyParameter().withSolutionVersionId("fauvjfdxx")
                            .withSolutionTemplateId("e")
                            .withSolutionTemplateVersion("t")
                            .withSolutionInstanceName("aqtdoqmcbx")
                            .withTargetId("vxysl")
                            .withDependencies(Arrays.asList(
                                new SolutionDependencyParameter().withSolutionVersionId("fxoblytkb")
                                    .withSolutionTemplateId("pe")
                                    .withSolutionTemplateVersion("wfbkrvrns")
                                    .withSolutionInstanceName("hqjohxcrsbfova")
                                    .withTargetId("ruvw")
                                    .withDependencies(Arrays.asList(new SolutionDependencyParameter(),
                                        new SolutionDependencyParameter(), new SolutionDependencyParameter(),
                                        new SolutionDependencyParameter())),
                                new SolutionDependencyParameter().withSolutionVersionId("fsubcgjbirxbpy")
                                    .withSolutionTemplateId("rfbjf")
                                    .withSolutionTemplateVersion("w")
                                    .withSolutionInstanceName("otftpvjzbexilz")
                                    .withTargetId("fqqnvwpmqtaruo")
                                    .withDependencies(Arrays.asList(new SolutionDependencyParameter(),
                                        new SolutionDependencyParameter(), new SolutionDependencyParameter(),
                                        new SolutionDependencyParameter())),
                                new SolutionDependencyParameter().withSolutionVersionId("cjhwq")
                                    .withSolutionTemplateId("jrybnwjewgdrjer")
                                    .withSolutionTemplateVersion("aen")
                                    .withSolutionInstanceName("eh")
                                    .withTargetId("doy")
                                    .withDependencies(Arrays.asList(new SolutionDependencyParameter(),
                                        new SolutionDependencyParameter()))))));
        model = BinaryData.fromObject(model).toObject(SolutionTemplateParameter.class);
        Assertions.assertEquals("rknftguvriuhprwm", model.solutionTemplateVersionId());
        Assertions.assertEquals("vxqtayriwwroyqbe", model.solutionInstanceName());
        Assertions.assertEquals("qibycnojvknm", model.solutionDependencies().get(0).solutionVersionId());
        Assertions.assertEquals("qsgzvahapj", model.solutionDependencies().get(0).solutionTemplateId());
        Assertions.assertEquals("hpvgqz", model.solutionDependencies().get(0).solutionTemplateVersion());
        Assertions.assertEquals("rvxdjzlmw", model.solutionDependencies().get(0).solutionInstanceName());
        Assertions.assertEquals("kvugfhzovawjvzun", model.solutionDependencies().get(0).targetId());
        Assertions.assertEquals("nnprn", model.solutionDependencies().get(0).dependencies().get(0).solutionVersionId());
        Assertions.assertEquals("peilpjzuaejxdu",
            model.solutionDependencies().get(0).dependencies().get(0).solutionTemplateId());
        Assertions.assertEquals("skzbb",
            model.solutionDependencies().get(0).dependencies().get(0).solutionTemplateVersion());
        Assertions.assertEquals("zumveekgpwo",
            model.solutionDependencies().get(0).dependencies().get(0).solutionInstanceName());
        Assertions.assertEquals("hkfpbs", model.solutionDependencies().get(0).dependencies().get(0).targetId());
    }
}
