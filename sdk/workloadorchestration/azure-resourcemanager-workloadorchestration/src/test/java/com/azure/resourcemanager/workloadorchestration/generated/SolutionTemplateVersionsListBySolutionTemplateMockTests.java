// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadorchestration.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.workloadorchestration.WorkloadOrchestrationManager;
import com.azure.resourcemanager.workloadorchestration.models.OrchestratorType;
import com.azure.resourcemanager.workloadorchestration.models.SolutionTemplateVersion;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SolutionTemplateVersionsListBySolutionTemplateMockTests {
    @Test
    public void testListBySolutionTemplate() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"configurations\":\"wzhomewjjstl\",\"specification\":{},\"orchestratorType\":\"TO\",\"provisioningState\":\"Succeeded\"},\"eTag\":\"oaiancznvodrrs\",\"id\":\"lxydkxrxv\",\"name\":\"bxiwkgfbqljn\",\"type\":\"khychocokulehur\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        WorkloadOrchestrationManager manager = WorkloadOrchestrationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<SolutionTemplateVersion> response = manager.solutionTemplateVersions()
            .listBySolutionTemplate("v", "czuejdtxptl", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("wzhomewjjstl", response.iterator().next().properties().configurations());
        Assertions.assertEquals(OrchestratorType.TO, response.iterator().next().properties().orchestratorType());
    }
}
