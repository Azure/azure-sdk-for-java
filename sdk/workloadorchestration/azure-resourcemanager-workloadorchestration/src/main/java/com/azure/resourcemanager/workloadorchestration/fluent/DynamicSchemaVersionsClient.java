// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadorchestration.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.workloadorchestration.fluent.models.DynamicSchemaVersionInner;

/**
 * An instance of this class provides access to all the operations defined in DynamicSchemaVersionsClient.
 */
public interface DynamicSchemaVersionsClient {
    /**
     * Get a Dynamic Schema Version Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param schemaName The name of the Schema.
     * @param dynamicSchemaName The name of the DynamicSchema.
     * @param dynamicSchemaVersionName The name of the DynamicSchemaVersion.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Dynamic Schema Version Resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DynamicSchemaVersionInner> getWithResponse(String resourceGroupName, String schemaName,
        String dynamicSchemaName, String dynamicSchemaVersionName, Context context);

    /**
     * Get a Dynamic Schema Version Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param schemaName The name of the Schema.
     * @param dynamicSchemaName The name of the DynamicSchema.
     * @param dynamicSchemaVersionName The name of the DynamicSchemaVersion.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Dynamic Schema Version Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DynamicSchemaVersionInner get(String resourceGroupName, String schemaName, String dynamicSchemaName,
        String dynamicSchemaVersionName);

    /**
     * Create or update a Dynamic Schema Version Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param schemaName The name of the Schema.
     * @param dynamicSchemaName The name of the DynamicSchema.
     * @param dynamicSchemaVersionName The name of the DynamicSchemaVersion.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of dynamic Schema Version Resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<DynamicSchemaVersionInner>, DynamicSchemaVersionInner> beginCreateOrUpdate(
        String resourceGroupName, String schemaName, String dynamicSchemaName, String dynamicSchemaVersionName,
        DynamicSchemaVersionInner resource);

    /**
     * Create or update a Dynamic Schema Version Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param schemaName The name of the Schema.
     * @param dynamicSchemaName The name of the DynamicSchema.
     * @param dynamicSchemaVersionName The name of the DynamicSchemaVersion.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of dynamic Schema Version Resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<DynamicSchemaVersionInner>, DynamicSchemaVersionInner> beginCreateOrUpdate(
        String resourceGroupName, String schemaName, String dynamicSchemaName, String dynamicSchemaVersionName,
        DynamicSchemaVersionInner resource, Context context);

    /**
     * Create or update a Dynamic Schema Version Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param schemaName The name of the Schema.
     * @param dynamicSchemaName The name of the DynamicSchema.
     * @param dynamicSchemaVersionName The name of the DynamicSchemaVersion.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return dynamic Schema Version Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DynamicSchemaVersionInner createOrUpdate(String resourceGroupName, String schemaName, String dynamicSchemaName,
        String dynamicSchemaVersionName, DynamicSchemaVersionInner resource);

    /**
     * Create or update a Dynamic Schema Version Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param schemaName The name of the Schema.
     * @param dynamicSchemaName The name of the DynamicSchema.
     * @param dynamicSchemaVersionName The name of the DynamicSchemaVersion.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return dynamic Schema Version Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DynamicSchemaVersionInner createOrUpdate(String resourceGroupName, String schemaName, String dynamicSchemaName,
        String dynamicSchemaVersionName, DynamicSchemaVersionInner resource, Context context);

    /**
     * update a Dynamic Schema Version Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param schemaName The name of the Schema.
     * @param dynamicSchemaName The name of the DynamicSchema.
     * @param dynamicSchemaVersionName The name of the DynamicSchemaVersion.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return dynamic Schema Version Resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DynamicSchemaVersionInner> updateWithResponse(String resourceGroupName, String schemaName,
        String dynamicSchemaName, String dynamicSchemaVersionName, DynamicSchemaVersionInner properties,
        Context context);

    /**
     * update a Dynamic Schema Version Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param schemaName The name of the Schema.
     * @param dynamicSchemaName The name of the DynamicSchema.
     * @param dynamicSchemaVersionName The name of the DynamicSchemaVersion.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return dynamic Schema Version Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DynamicSchemaVersionInner update(String resourceGroupName, String schemaName, String dynamicSchemaName,
        String dynamicSchemaVersionName, DynamicSchemaVersionInner properties);

    /**
     * Delete a Dynamic Schema Version Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param schemaName The name of the Schema.
     * @param dynamicSchemaName The name of the DynamicSchema.
     * @param dynamicSchemaVersionName The name of the DynamicSchemaVersion.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String schemaName,
        String dynamicSchemaName, String dynamicSchemaVersionName);

    /**
     * Delete a Dynamic Schema Version Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param schemaName The name of the Schema.
     * @param dynamicSchemaName The name of the DynamicSchema.
     * @param dynamicSchemaVersionName The name of the DynamicSchemaVersion.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String schemaName,
        String dynamicSchemaName, String dynamicSchemaVersionName, Context context);

    /**
     * Delete a Dynamic Schema Version Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param schemaName The name of the Schema.
     * @param dynamicSchemaName The name of the DynamicSchema.
     * @param dynamicSchemaVersionName The name of the DynamicSchemaVersion.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String schemaName, String dynamicSchemaName, String dynamicSchemaVersionName);

    /**
     * Delete a Dynamic Schema Version Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param schemaName The name of the Schema.
     * @param dynamicSchemaName The name of the DynamicSchema.
     * @param dynamicSchemaVersionName The name of the DynamicSchemaVersion.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String schemaName, String dynamicSchemaName, String dynamicSchemaVersionName,
        Context context);

    /**
     * List by Dynamic Schema.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param schemaName The name of the Schema.
     * @param dynamicSchemaName The name of the DynamicSchema.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a DynamicSchemaVersion list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DynamicSchemaVersionInner> listByDynamicSchema(String resourceGroupName, String schemaName,
        String dynamicSchemaName);

    /**
     * List by Dynamic Schema.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param schemaName The name of the Schema.
     * @param dynamicSchemaName The name of the DynamicSchema.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a DynamicSchemaVersion list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DynamicSchemaVersionInner> listByDynamicSchema(String resourceGroupName, String schemaName,
        String dynamicSchemaName, Context context);
}
