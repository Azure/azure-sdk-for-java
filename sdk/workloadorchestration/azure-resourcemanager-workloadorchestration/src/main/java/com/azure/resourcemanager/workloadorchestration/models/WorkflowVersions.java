// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadorchestration.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of WorkflowVersions.
 */
public interface WorkflowVersions {
    /**
     * Get a Workflow Version Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contextName The name of the Context.
     * @param workflowName Name of the workflow.
     * @param versionName The name of the workflowVersion.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Workflow Version Resource along with {@link Response}.
     */
    Response<WorkflowVersion> getWithResponse(String resourceGroupName, String contextName, String workflowName,
        String versionName, Context context);

    /**
     * Get a Workflow Version Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contextName The name of the Context.
     * @param workflowName Name of the workflow.
     * @param versionName The name of the workflowVersion.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Workflow Version Resource.
     */
    WorkflowVersion get(String resourceGroupName, String contextName, String workflowName, String versionName);

    /**
     * Delete a Workflow Version Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contextName The name of the Context.
     * @param workflowName Name of the workflow.
     * @param versionName The name of the workflowVersion.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String contextName, String workflowName, String versionName);

    /**
     * Delete a Workflow Version Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contextName The name of the Context.
     * @param workflowName Name of the workflow.
     * @param versionName The name of the workflowVersion.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String contextName, String workflowName, String versionName, Context context);

    /**
     * List Workflow Version Resources.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contextName The name of the Context.
     * @param workflowName Name of the workflow.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a WorkflowVersion list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<WorkflowVersion> listByWorkflow(String resourceGroupName, String contextName, String workflowName);

    /**
     * List Workflow Version Resources.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contextName The name of the Context.
     * @param workflowName Name of the workflow.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a WorkflowVersion list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<WorkflowVersion> listByWorkflow(String resourceGroupName, String contextName, String workflowName,
        Context context);

    /**
     * Get a Workflow Version Resource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Workflow Version Resource along with {@link Response}.
     */
    WorkflowVersion getById(String id);

    /**
     * Get a Workflow Version Resource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Workflow Version Resource along with {@link Response}.
     */
    Response<WorkflowVersion> getByIdWithResponse(String id, Context context);

    /**
     * Delete a Workflow Version Resource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete a Workflow Version Resource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new WorkflowVersion resource.
     * 
     * @param name resource name.
     * @return the first stage of the new WorkflowVersion definition.
     */
    WorkflowVersion.DefinitionStages.Blank define(String name);
}
