// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadorchestration.models;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.workloadorchestration.fluent.models.ExecutionInner;

/**
 * An immutable client-side representation of Execution.
 */
public interface Execution {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the properties property: The resource-specific properties for this resource.
     * 
     * @return the properties value.
     */
    ExecutionProperties properties();

    /**
     * Gets the extendedLocation property: The extendedLocation property.
     * 
     * @return the extendedLocation value.
     */
    ExtendedLocation extendedLocation();

    /**
     * Gets the eTag property: If eTag is provided in the response body, it may also be provided as a header per the
     * normal etag convention. Entity tags are used for comparing two or more entities from the same requested resource.
     * HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26),
     * and If-Range (section 14.27) header fields.
     * 
     * @return the eTag value.
     */
    String eTag();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.workloadorchestration.fluent.models.ExecutionInner object.
     * 
     * @return the inner object.
     */
    ExecutionInner innerModel();

    /**
     * The entirety of the Execution definition.
     */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }

    /**
     * The Execution definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the Execution definition.
         */
        interface Blank extends WithParentResource {
        }

        /**
         * The stage of the Execution definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, contextName, workflowName, versionName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param contextName The name of the Context.
             * @param workflowName Name of the workflow.
             * @param versionName The name of the workflowVersion.
             * @return the next definition stage.
             */
            WithCreate withExistingVersion(String resourceGroupName, String contextName, String workflowName,
                String versionName);
        }

        /**
         * The stage of the Execution definition which contains all the minimum required properties for the resource to
         * be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithProperties, DefinitionStages.WithExtendedLocation {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            Execution create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            Execution create(Context context);
        }

        /**
         * The stage of the Execution definition allowing to specify properties.
         */
        interface WithProperties {
            /**
             * Specifies the properties property: The resource-specific properties for this resource..
             * 
             * @param properties The resource-specific properties for this resource.
             * @return the next definition stage.
             */
            WithCreate withProperties(ExecutionProperties properties);
        }

        /**
         * The stage of the Execution definition allowing to specify extendedLocation.
         */
        interface WithExtendedLocation {
            /**
             * Specifies the extendedLocation property: The extendedLocation property..
             * 
             * @param extendedLocation The extendedLocation property.
             * @return the next definition stage.
             */
            WithCreate withExtendedLocation(ExtendedLocation extendedLocation);
        }
    }

    /**
     * Begins update for the Execution resource.
     * 
     * @return the stage of resource update.
     */
    Execution.Update update();

    /**
     * The template for Execution update.
     */
    interface Update extends UpdateStages.WithProperties {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        Execution apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        Execution apply(Context context);
    }

    /**
     * The Execution update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the Execution update allowing to specify properties.
         */
        interface WithProperties {
            /**
             * Specifies the properties property: The resource-specific properties for this resource..
             * 
             * @param properties The resource-specific properties for this resource.
             * @return the next definition stage.
             */
            Update withProperties(ExecutionProperties properties);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    Execution refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    Execution refresh(Context context);
}
