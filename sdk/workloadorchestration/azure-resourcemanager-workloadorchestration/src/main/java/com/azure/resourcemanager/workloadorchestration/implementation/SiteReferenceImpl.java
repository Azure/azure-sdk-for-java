// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadorchestration.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.workloadorchestration.fluent.models.SiteReferenceInner;
import com.azure.resourcemanager.workloadorchestration.models.SiteReference;
import com.azure.resourcemanager.workloadorchestration.models.SiteReferenceProperties;

public final class SiteReferenceImpl implements SiteReference, SiteReference.Definition, SiteReference.Update {
    private SiteReferenceInner innerObject;

    private final com.azure.resourcemanager.workloadorchestration.WorkloadOrchestrationManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SiteReferenceProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public SiteReferenceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.workloadorchestration.WorkloadOrchestrationManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String contextName;

    private String siteReferenceName;

    public SiteReferenceImpl withExistingContext(String resourceGroupName, String contextName) {
        this.resourceGroupName = resourceGroupName;
        this.contextName = contextName;
        return this;
    }

    public SiteReference create() {
        this.innerObject = serviceManager.serviceClient()
            .getSiteReferences()
            .createOrUpdate(resourceGroupName, contextName, siteReferenceName, this.innerModel(), Context.NONE);
        return this;
    }

    public SiteReference create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getSiteReferences()
            .createOrUpdate(resourceGroupName, contextName, siteReferenceName, this.innerModel(), context);
        return this;
    }

    SiteReferenceImpl(String name,
        com.azure.resourcemanager.workloadorchestration.WorkloadOrchestrationManager serviceManager) {
        this.innerObject = new SiteReferenceInner();
        this.serviceManager = serviceManager;
        this.siteReferenceName = name;
    }

    public SiteReferenceImpl update() {
        return this;
    }

    public SiteReference apply() {
        this.innerObject = serviceManager.serviceClient()
            .getSiteReferences()
            .update(resourceGroupName, contextName, siteReferenceName, this.innerModel(), Context.NONE);
        return this;
    }

    public SiteReference apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getSiteReferences()
            .update(resourceGroupName, contextName, siteReferenceName, this.innerModel(), context);
        return this;
    }

    SiteReferenceImpl(SiteReferenceInner innerObject,
        com.azure.resourcemanager.workloadorchestration.WorkloadOrchestrationManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.contextName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "contexts");
        this.siteReferenceName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "siteReferences");
    }

    public SiteReference refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getSiteReferences()
            .getWithResponse(resourceGroupName, contextName, siteReferenceName, Context.NONE)
            .getValue();
        return this;
    }

    public SiteReference refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getSiteReferences()
            .getWithResponse(resourceGroupName, contextName, siteReferenceName, context)
            .getValue();
        return this;
    }

    public SiteReferenceImpl withProperties(SiteReferenceProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}
