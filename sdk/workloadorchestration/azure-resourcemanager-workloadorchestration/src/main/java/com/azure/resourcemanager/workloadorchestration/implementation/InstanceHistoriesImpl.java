// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadorchestration.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.workloadorchestration.fluent.InstanceHistoriesClient;
import com.azure.resourcemanager.workloadorchestration.fluent.models.InstanceHistoryInner;
import com.azure.resourcemanager.workloadorchestration.models.InstanceHistories;
import com.azure.resourcemanager.workloadorchestration.models.InstanceHistory;

public final class InstanceHistoriesImpl implements InstanceHistories {
    private static final ClientLogger LOGGER = new ClientLogger(InstanceHistoriesImpl.class);

    private final InstanceHistoriesClient innerClient;

    private final com.azure.resourcemanager.workloadorchestration.WorkloadOrchestrationManager serviceManager;

    public InstanceHistoriesImpl(InstanceHistoriesClient innerClient,
        com.azure.resourcemanager.workloadorchestration.WorkloadOrchestrationManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<InstanceHistory> getWithResponse(String resourceGroupName, String targetName, String solutionName,
        String instanceName, String instanceHistoryName, Context context) {
        Response<InstanceHistoryInner> inner = this.serviceClient()
            .getWithResponse(resourceGroupName, targetName, solutionName, instanceName, instanceHistoryName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new InstanceHistoryImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public InstanceHistory get(String resourceGroupName, String targetName, String solutionName, String instanceName,
        String instanceHistoryName) {
        InstanceHistoryInner inner
            = this.serviceClient().get(resourceGroupName, targetName, solutionName, instanceName, instanceHistoryName);
        if (inner != null) {
            return new InstanceHistoryImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public PagedIterable<InstanceHistory> listByInstance(String resourceGroupName, String targetName,
        String solutionName, String instanceName) {
        PagedIterable<InstanceHistoryInner> inner
            = this.serviceClient().listByInstance(resourceGroupName, targetName, solutionName, instanceName);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new InstanceHistoryImpl(inner1, this.manager()));
    }

    public PagedIterable<InstanceHistory> listByInstance(String resourceGroupName, String targetName,
        String solutionName, String instanceName, Context context) {
        PagedIterable<InstanceHistoryInner> inner
            = this.serviceClient().listByInstance(resourceGroupName, targetName, solutionName, instanceName, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new InstanceHistoryImpl(inner1, this.manager()));
    }

    private InstanceHistoriesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.workloadorchestration.WorkloadOrchestrationManager manager() {
        return this.serviceManager;
    }
}
