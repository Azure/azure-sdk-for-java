// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadorchestration.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.workloadorchestration.fluent.models.ConfigTemplateVersionWithUpdateTypeInner;

/**
 * Resource collection API of ConfigTemplates.
 */
public interface ConfigTemplates {
    /**
     * Get a Config Template Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param configTemplateName The name of the ConfigTemplate.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Config Template Resource along with {@link Response}.
     */
    Response<ConfigTemplate> getByResourceGroupWithResponse(String resourceGroupName, String configTemplateName,
        Context context);

    /**
     * Get a Config Template Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param configTemplateName The name of the ConfigTemplate.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Config Template Resource.
     */
    ConfigTemplate getByResourceGroup(String resourceGroupName, String configTemplateName);

    /**
     * Create or update a Config Template Version Resource with the specified UpdateType.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param configTemplateName The name of the ConfigTemplate.
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    ConfigTemplateVersion createVersion(String resourceGroupName, String configTemplateName,
        ConfigTemplateVersionWithUpdateTypeInner body);

    /**
     * Create or update a Config Template Version Resource with the specified UpdateType.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param configTemplateName The name of the ConfigTemplate.
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    ConfigTemplateVersion createVersion(String resourceGroupName, String configTemplateName,
        ConfigTemplateVersionWithUpdateTypeInner body, Context context);

    /**
     * Remove Config Template Version Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param configTemplateName The name of the ConfigTemplate.
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return remove Version response along with {@link Response}.
     */
    Response<RemoveVersionResponse> removeVersionWithResponse(String resourceGroupName, String configTemplateName,
        VersionParameter body, Context context);

    /**
     * Remove Config Template Version Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param configTemplateName The name of the ConfigTemplate.
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return remove Version response.
     */
    RemoveVersionResponse removeVersion(String resourceGroupName, String configTemplateName, VersionParameter body);

    /**
     * Delete a Config Template Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param configTemplateName The name of the ConfigTemplate.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String configTemplateName);

    /**
     * Delete a Config Template Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param configTemplateName The name of the ConfigTemplate.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String configTemplateName, Context context);

    /**
     * List by specified resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a ConfigTemplate list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ConfigTemplate> listByResourceGroup(String resourceGroupName);

    /**
     * List by specified resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a ConfigTemplate list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ConfigTemplate> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * List by subscription.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a ConfigTemplate list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ConfigTemplate> list();

    /**
     * List by subscription.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a ConfigTemplate list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ConfigTemplate> list(Context context);

    /**
     * Get a Config Template Resource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Config Template Resource along with {@link Response}.
     */
    ConfigTemplate getById(String id);

    /**
     * Get a Config Template Resource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Config Template Resource along with {@link Response}.
     */
    Response<ConfigTemplate> getByIdWithResponse(String id, Context context);

    /**
     * Delete a Config Template Resource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete a Config Template Resource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new ConfigTemplate resource.
     * 
     * @param name resource name.
     * @return the first stage of the new ConfigTemplate definition.
     */
    ConfigTemplate.DefinitionStages.Blank define(String name);
}
