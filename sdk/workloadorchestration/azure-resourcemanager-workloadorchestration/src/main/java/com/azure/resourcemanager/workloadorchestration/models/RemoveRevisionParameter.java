// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadorchestration.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Install Solution Parameter.
 */
@Fluent
public final class RemoveRevisionParameter implements JsonSerializable<RemoveRevisionParameter> {
    /*
     * Solution Template ARM Id
     */
    private String solutionTemplateId;

    /*
     * Solution Version Name
     */
    private String solutionVersion;

    /**
     * Creates an instance of RemoveRevisionParameter class.
     */
    public RemoveRevisionParameter() {
    }

    /**
     * Get the solutionTemplateId property: Solution Template ARM Id.
     * 
     * @return the solutionTemplateId value.
     */
    public String solutionTemplateId() {
        return this.solutionTemplateId;
    }

    /**
     * Set the solutionTemplateId property: Solution Template ARM Id.
     * 
     * @param solutionTemplateId the solutionTemplateId value to set.
     * @return the RemoveRevisionParameter object itself.
     */
    public RemoveRevisionParameter withSolutionTemplateId(String solutionTemplateId) {
        this.solutionTemplateId = solutionTemplateId;
        return this;
    }

    /**
     * Get the solutionVersion property: Solution Version Name.
     * 
     * @return the solutionVersion value.
     */
    public String solutionVersion() {
        return this.solutionVersion;
    }

    /**
     * Set the solutionVersion property: Solution Version Name.
     * 
     * @param solutionVersion the solutionVersion value to set.
     * @return the RemoveRevisionParameter object itself.
     */
    public RemoveRevisionParameter withSolutionVersion(String solutionVersion) {
        this.solutionVersion = solutionVersion;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (solutionTemplateId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property solutionTemplateId in model RemoveRevisionParameter"));
        }
        if (solutionVersion() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property solutionVersion in model RemoveRevisionParameter"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(RemoveRevisionParameter.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("solutionTemplateId", this.solutionTemplateId);
        jsonWriter.writeStringField("solutionVersion", this.solutionVersion);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RemoveRevisionParameter from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RemoveRevisionParameter if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the RemoveRevisionParameter.
     */
    public static RemoveRevisionParameter fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RemoveRevisionParameter deserializedRemoveRevisionParameter = new RemoveRevisionParameter();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("solutionTemplateId".equals(fieldName)) {
                    deserializedRemoveRevisionParameter.solutionTemplateId = reader.getString();
                } else if ("solutionVersion".equals(fieldName)) {
                    deserializedRemoveRevisionParameter.solutionVersion = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRemoveRevisionParameter;
        });
    }
}
