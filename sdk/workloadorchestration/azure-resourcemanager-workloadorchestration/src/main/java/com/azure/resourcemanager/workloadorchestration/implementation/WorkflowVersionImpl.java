// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadorchestration.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.workloadorchestration.fluent.models.WorkflowVersionInner;
import com.azure.resourcemanager.workloadorchestration.models.ExtendedLocation;
import com.azure.resourcemanager.workloadorchestration.models.WorkflowVersion;
import com.azure.resourcemanager.workloadorchestration.models.WorkflowVersionProperties;

public final class WorkflowVersionImpl implements WorkflowVersion, WorkflowVersion.Definition, WorkflowVersion.Update {
    private WorkflowVersionInner innerObject;

    private final com.azure.resourcemanager.workloadorchestration.WorkloadOrchestrationManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public WorkflowVersionProperties properties() {
        return this.innerModel().properties();
    }

    public ExtendedLocation extendedLocation() {
        return this.innerModel().extendedLocation();
    }

    public String eTag() {
        return this.innerModel().eTag();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public WorkflowVersionInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.workloadorchestration.WorkloadOrchestrationManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String contextName;

    private String workflowName;

    private String versionName;

    public WorkflowVersionImpl withExistingWorkflow(String resourceGroupName, String contextName, String workflowName) {
        this.resourceGroupName = resourceGroupName;
        this.contextName = contextName;
        this.workflowName = workflowName;
        return this;
    }

    public WorkflowVersion create() {
        this.innerObject = serviceManager.serviceClient()
            .getWorkflowVersions()
            .createOrUpdate(resourceGroupName, contextName, workflowName, versionName, this.innerModel(), Context.NONE);
        return this;
    }

    public WorkflowVersion create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getWorkflowVersions()
            .createOrUpdate(resourceGroupName, contextName, workflowName, versionName, this.innerModel(), context);
        return this;
    }

    WorkflowVersionImpl(String name,
        com.azure.resourcemanager.workloadorchestration.WorkloadOrchestrationManager serviceManager) {
        this.innerObject = new WorkflowVersionInner();
        this.serviceManager = serviceManager;
        this.versionName = name;
    }

    public WorkflowVersionImpl update() {
        return this;
    }

    public WorkflowVersion apply() {
        this.innerObject = serviceManager.serviceClient()
            .getWorkflowVersions()
            .update(resourceGroupName, contextName, workflowName, versionName, this.innerModel(), Context.NONE);
        return this;
    }

    public WorkflowVersion apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getWorkflowVersions()
            .update(resourceGroupName, contextName, workflowName, versionName, this.innerModel(), context);
        return this;
    }

    WorkflowVersionImpl(WorkflowVersionInner innerObject,
        com.azure.resourcemanager.workloadorchestration.WorkloadOrchestrationManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.contextName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "contexts");
        this.workflowName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "workflows");
        this.versionName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "versions");
    }

    public WorkflowVersion refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getWorkflowVersions()
            .getWithResponse(resourceGroupName, contextName, workflowName, versionName, Context.NONE)
            .getValue();
        return this;
    }

    public WorkflowVersion refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getWorkflowVersions()
            .getWithResponse(resourceGroupName, contextName, workflowName, versionName, context)
            .getValue();
        return this;
    }

    public WorkflowVersionImpl withProperties(WorkflowVersionProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }

    public WorkflowVersionImpl withExtendedLocation(ExtendedLocation extendedLocation) {
        this.innerModel().withExtendedLocation(extendedLocation);
        return this;
    }
}
