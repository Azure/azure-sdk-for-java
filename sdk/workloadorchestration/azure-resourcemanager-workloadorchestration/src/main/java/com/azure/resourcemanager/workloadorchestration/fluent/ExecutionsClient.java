// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadorchestration.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.workloadorchestration.fluent.models.ExecutionInner;

/**
 * An instance of this class provides access to all the operations defined in ExecutionsClient.
 */
public interface ExecutionsClient {
    /**
     * Get Execution Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contextName The name of the Context.
     * @param workflowName Name of the workflow.
     * @param versionName The name of the workflowVersion.
     * @param executionName The name of the Execution.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return execution Resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ExecutionInner> getWithResponse(String resourceGroupName, String contextName, String workflowName,
        String versionName, String executionName, Context context);

    /**
     * Get Execution Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contextName The name of the Context.
     * @param workflowName Name of the workflow.
     * @param versionName The name of the workflowVersion.
     * @param executionName The name of the Execution.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return execution Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ExecutionInner get(String resourceGroupName, String contextName, String workflowName, String versionName,
        String executionName);

    /**
     * Create or update Execution Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contextName The name of the Context.
     * @param workflowName Name of the workflow.
     * @param versionName The name of the workflowVersion.
     * @param executionName The name of the Execution.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of execution Resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ExecutionInner>, ExecutionInner> beginCreateOrUpdate(String resourceGroupName,
        String contextName, String workflowName, String versionName, String executionName, ExecutionInner resource);

    /**
     * Create or update Execution Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contextName The name of the Context.
     * @param workflowName Name of the workflow.
     * @param versionName The name of the workflowVersion.
     * @param executionName The name of the Execution.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of execution Resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ExecutionInner>, ExecutionInner> beginCreateOrUpdate(String resourceGroupName,
        String contextName, String workflowName, String versionName, String executionName, ExecutionInner resource,
        Context context);

    /**
     * Create or update Execution Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contextName The name of the Context.
     * @param workflowName Name of the workflow.
     * @param versionName The name of the workflowVersion.
     * @param executionName The name of the Execution.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return execution Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ExecutionInner createOrUpdate(String resourceGroupName, String contextName, String workflowName, String versionName,
        String executionName, ExecutionInner resource);

    /**
     * Create or update Execution Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contextName The name of the Context.
     * @param workflowName Name of the workflow.
     * @param versionName The name of the workflowVersion.
     * @param executionName The name of the Execution.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return execution Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ExecutionInner createOrUpdate(String resourceGroupName, String contextName, String workflowName, String versionName,
        String executionName, ExecutionInner resource, Context context);

    /**
     * update an Execution Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contextName The name of the Context.
     * @param workflowName Name of the workflow.
     * @param versionName The name of the workflowVersion.
     * @param executionName The name of the Execution.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of execution Resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ExecutionInner>, ExecutionInner> beginUpdate(String resourceGroupName, String contextName,
        String workflowName, String versionName, String executionName, ExecutionInner properties);

    /**
     * update an Execution Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contextName The name of the Context.
     * @param workflowName Name of the workflow.
     * @param versionName The name of the workflowVersion.
     * @param executionName The name of the Execution.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of execution Resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ExecutionInner>, ExecutionInner> beginUpdate(String resourceGroupName, String contextName,
        String workflowName, String versionName, String executionName, ExecutionInner properties, Context context);

    /**
     * update an Execution Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contextName The name of the Context.
     * @param workflowName Name of the workflow.
     * @param versionName The name of the workflowVersion.
     * @param executionName The name of the Execution.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return execution Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ExecutionInner update(String resourceGroupName, String contextName, String workflowName, String versionName,
        String executionName, ExecutionInner properties);

    /**
     * update an Execution Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contextName The name of the Context.
     * @param workflowName Name of the workflow.
     * @param versionName The name of the workflowVersion.
     * @param executionName The name of the Execution.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return execution Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ExecutionInner update(String resourceGroupName, String contextName, String workflowName, String versionName,
        String executionName, ExecutionInner properties, Context context);

    /**
     * Delete Execution Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contextName The name of the Context.
     * @param workflowName Name of the workflow.
     * @param versionName The name of the workflowVersion.
     * @param executionName The name of the Execution.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String contextName, String workflowName,
        String versionName, String executionName);

    /**
     * Delete Execution Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contextName The name of the Context.
     * @param workflowName Name of the workflow.
     * @param versionName The name of the workflowVersion.
     * @param executionName The name of the Execution.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String contextName, String workflowName,
        String versionName, String executionName, Context context);

    /**
     * Delete Execution Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contextName The name of the Context.
     * @param workflowName Name of the workflow.
     * @param versionName The name of the workflowVersion.
     * @param executionName The name of the Execution.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String contextName, String workflowName, String versionName,
        String executionName);

    /**
     * Delete Execution Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contextName The name of the Context.
     * @param workflowName Name of the workflow.
     * @param versionName The name of the workflowVersion.
     * @param executionName The name of the Execution.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String contextName, String workflowName, String versionName,
        String executionName, Context context);

    /**
     * List Execution Resources.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contextName The name of the Context.
     * @param workflowName Name of the workflow.
     * @param versionName The name of the workflowVersion.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Execution list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ExecutionInner> listByWorkflowVersion(String resourceGroupName, String contextName,
        String workflowName, String versionName);

    /**
     * List Execution Resources.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contextName The name of the Context.
     * @param workflowName Name of the workflow.
     * @param versionName The name of the workflowVersion.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Execution list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ExecutionInner> listByWorkflowVersion(String resourceGroupName, String contextName,
        String workflowName, String versionName, Context context);
}
