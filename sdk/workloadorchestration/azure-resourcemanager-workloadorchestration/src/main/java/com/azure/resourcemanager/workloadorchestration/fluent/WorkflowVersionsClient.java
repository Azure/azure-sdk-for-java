// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadorchestration.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.workloadorchestration.fluent.models.WorkflowVersionInner;

/**
 * An instance of this class provides access to all the operations defined in WorkflowVersionsClient.
 */
public interface WorkflowVersionsClient {
    /**
     * Get a Workflow Version Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contextName The name of the Context.
     * @param workflowName Name of the workflow.
     * @param versionName The name of the workflowVersion.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Workflow Version Resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<WorkflowVersionInner> getWithResponse(String resourceGroupName, String contextName, String workflowName,
        String versionName, Context context);

    /**
     * Get a Workflow Version Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contextName The name of the Context.
     * @param workflowName Name of the workflow.
     * @param versionName The name of the workflowVersion.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Workflow Version Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    WorkflowVersionInner get(String resourceGroupName, String contextName, String workflowName, String versionName);

    /**
     * Create or update a Workflow Version Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contextName The name of the Context.
     * @param workflowName Name of the workflow.
     * @param versionName The name of the workflowVersion.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of workflow Version Resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<WorkflowVersionInner>, WorkflowVersionInner> beginCreateOrUpdate(String resourceGroupName,
        String contextName, String workflowName, String versionName, WorkflowVersionInner resource);

    /**
     * Create or update a Workflow Version Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contextName The name of the Context.
     * @param workflowName Name of the workflow.
     * @param versionName The name of the workflowVersion.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of workflow Version Resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<WorkflowVersionInner>, WorkflowVersionInner> beginCreateOrUpdate(String resourceGroupName,
        String contextName, String workflowName, String versionName, WorkflowVersionInner resource, Context context);

    /**
     * Create or update a Workflow Version Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contextName The name of the Context.
     * @param workflowName Name of the workflow.
     * @param versionName The name of the workflowVersion.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return workflow Version Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    WorkflowVersionInner createOrUpdate(String resourceGroupName, String contextName, String workflowName,
        String versionName, WorkflowVersionInner resource);

    /**
     * Create or update a Workflow Version Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contextName The name of the Context.
     * @param workflowName Name of the workflow.
     * @param versionName The name of the workflowVersion.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return workflow Version Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    WorkflowVersionInner createOrUpdate(String resourceGroupName, String contextName, String workflowName,
        String versionName, WorkflowVersionInner resource, Context context);

    /**
     * update an WorkflowVersion Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contextName The name of the Context.
     * @param workflowName Name of the workflow.
     * @param versionName The name of the workflowVersion.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of workflow Version Resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<WorkflowVersionInner>, WorkflowVersionInner> beginUpdate(String resourceGroupName,
        String contextName, String workflowName, String versionName, WorkflowVersionInner properties);

    /**
     * update an WorkflowVersion Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contextName The name of the Context.
     * @param workflowName Name of the workflow.
     * @param versionName The name of the workflowVersion.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of workflow Version Resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<WorkflowVersionInner>, WorkflowVersionInner> beginUpdate(String resourceGroupName,
        String contextName, String workflowName, String versionName, WorkflowVersionInner properties, Context context);

    /**
     * update an WorkflowVersion Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contextName The name of the Context.
     * @param workflowName Name of the workflow.
     * @param versionName The name of the workflowVersion.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return workflow Version Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    WorkflowVersionInner update(String resourceGroupName, String contextName, String workflowName, String versionName,
        WorkflowVersionInner properties);

    /**
     * update an WorkflowVersion Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contextName The name of the Context.
     * @param workflowName Name of the workflow.
     * @param versionName The name of the workflowVersion.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return workflow Version Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    WorkflowVersionInner update(String resourceGroupName, String contextName, String workflowName, String versionName,
        WorkflowVersionInner properties, Context context);

    /**
     * Delete a Workflow Version Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contextName The name of the Context.
     * @param workflowName Name of the workflow.
     * @param versionName The name of the workflowVersion.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String contextName, String workflowName,
        String versionName);

    /**
     * Delete a Workflow Version Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contextName The name of the Context.
     * @param workflowName Name of the workflow.
     * @param versionName The name of the workflowVersion.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String contextName, String workflowName,
        String versionName, Context context);

    /**
     * Delete a Workflow Version Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contextName The name of the Context.
     * @param workflowName Name of the workflow.
     * @param versionName The name of the workflowVersion.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String contextName, String workflowName, String versionName);

    /**
     * Delete a Workflow Version Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contextName The name of the Context.
     * @param workflowName Name of the workflow.
     * @param versionName The name of the workflowVersion.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String contextName, String workflowName, String versionName, Context context);

    /**
     * List Workflow Version Resources.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contextName The name of the Context.
     * @param workflowName Name of the workflow.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a WorkflowVersion list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<WorkflowVersionInner> listByWorkflow(String resourceGroupName, String contextName,
        String workflowName);

    /**
     * List Workflow Version Resources.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contextName The name of the Context.
     * @param workflowName Name of the workflow.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a WorkflowVersion list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<WorkflowVersionInner> listByWorkflow(String resourceGroupName, String contextName,
        String workflowName, Context context);
}
