// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadorchestration.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Bulk publish target details.
 */
@Fluent
public final class BulkPublishTargetDetails implements JsonSerializable<BulkPublishTargetDetails> {
    /*
     * ArmId of Target
     */
    private String targetId;

    /*
     * Name of the solution instance
     */
    private String solutionInstanceName;

    /**
     * Creates an instance of BulkPublishTargetDetails class.
     */
    public BulkPublishTargetDetails() {
    }

    /**
     * Get the targetId property: ArmId of Target.
     * 
     * @return the targetId value.
     */
    public String targetId() {
        return this.targetId;
    }

    /**
     * Set the targetId property: ArmId of Target.
     * 
     * @param targetId the targetId value to set.
     * @return the BulkPublishTargetDetails object itself.
     */
    public BulkPublishTargetDetails withTargetId(String targetId) {
        this.targetId = targetId;
        return this;
    }

    /**
     * Get the solutionInstanceName property: Name of the solution instance.
     * 
     * @return the solutionInstanceName value.
     */
    public String solutionInstanceName() {
        return this.solutionInstanceName;
    }

    /**
     * Set the solutionInstanceName property: Name of the solution instance.
     * 
     * @param solutionInstanceName the solutionInstanceName value to set.
     * @return the BulkPublishTargetDetails object itself.
     */
    public BulkPublishTargetDetails withSolutionInstanceName(String solutionInstanceName) {
        this.solutionInstanceName = solutionInstanceName;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (targetId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property targetId in model BulkPublishTargetDetails"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(BulkPublishTargetDetails.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("targetId", this.targetId);
        jsonWriter.writeStringField("solutionInstanceName", this.solutionInstanceName);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of BulkPublishTargetDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of BulkPublishTargetDetails if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the BulkPublishTargetDetails.
     */
    public static BulkPublishTargetDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            BulkPublishTargetDetails deserializedBulkPublishTargetDetails = new BulkPublishTargetDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("targetId".equals(fieldName)) {
                    deserializedBulkPublishTargetDetails.targetId = reader.getString();
                } else if ("solutionInstanceName".equals(fieldName)) {
                    deserializedBulkPublishTargetDetails.solutionInstanceName = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedBulkPublishTargetDetails;
        });
    }
}
