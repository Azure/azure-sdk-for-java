// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadorchestration.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.workloadorchestration.fluent.models.RemoveVersionResponseInner;
import com.azure.resourcemanager.workloadorchestration.fluent.models.SchemaInner;
import com.azure.resourcemanager.workloadorchestration.fluent.models.SchemaVersionInner;
import com.azure.resourcemanager.workloadorchestration.fluent.models.SchemaVersionWithUpdateTypeInner;
import com.azure.resourcemanager.workloadorchestration.models.VersionParameter;

/**
 * An instance of this class provides access to all the operations defined in SchemasClient.
 */
public interface SchemasClient {
    /**
     * Get a Schema Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param schemaName The name of the Schema.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Schema Resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<SchemaInner> getByResourceGroupWithResponse(String resourceGroupName, String schemaName, Context context);

    /**
     * Get a Schema Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param schemaName The name of the Schema.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Schema Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SchemaInner getByResourceGroup(String resourceGroupName, String schemaName);

    /**
     * Create or update a Schema Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param schemaName The name of the Schema.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of schema Resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<SchemaInner>, SchemaInner> beginCreateOrUpdate(String resourceGroupName, String schemaName,
        SchemaInner resource);

    /**
     * Create or update a Schema Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param schemaName The name of the Schema.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of schema Resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<SchemaInner>, SchemaInner> beginCreateOrUpdate(String resourceGroupName, String schemaName,
        SchemaInner resource, Context context);

    /**
     * Create or update a Schema Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param schemaName The name of the Schema.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return schema Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SchemaInner createOrUpdate(String resourceGroupName, String schemaName, SchemaInner resource);

    /**
     * Create or update a Schema Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param schemaName The name of the Schema.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return schema Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SchemaInner createOrUpdate(String resourceGroupName, String schemaName, SchemaInner resource, Context context);

    /**
     * update a Schema Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param schemaName The name of the Schema.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return schema Resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<SchemaInner> updateWithResponse(String resourceGroupName, String schemaName, SchemaInner properties,
        Context context);

    /**
     * update a Schema Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param schemaName The name of the Schema.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return schema Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SchemaInner update(String resourceGroupName, String schemaName, SchemaInner properties);

    /**
     * Delete a Schema Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param schemaName The name of the Schema.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String schemaName);

    /**
     * Delete a Schema Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param schemaName The name of the Schema.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String schemaName, Context context);

    /**
     * Delete a Schema Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param schemaName The name of the Schema.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String schemaName);

    /**
     * Delete a Schema Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param schemaName The name of the Schema.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String schemaName, Context context);

    /**
     * Create a Schema Version Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param schemaName The name of the Schema.
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<SchemaVersionInner>, SchemaVersionInner> beginCreateVersion(String resourceGroupName,
        String schemaName, SchemaVersionWithUpdateTypeInner body);

    /**
     * Create a Schema Version Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param schemaName The name of the Schema.
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<SchemaVersionInner>, SchemaVersionInner> beginCreateVersion(String resourceGroupName,
        String schemaName, SchemaVersionWithUpdateTypeInner body, Context context);

    /**
     * Create a Schema Version Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param schemaName The name of the Schema.
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SchemaVersionInner createVersion(String resourceGroupName, String schemaName,
        SchemaVersionWithUpdateTypeInner body);

    /**
     * Create a Schema Version Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param schemaName The name of the Schema.
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SchemaVersionInner createVersion(String resourceGroupName, String schemaName, SchemaVersionWithUpdateTypeInner body,
        Context context);

    /**
     * Remove Schema Version Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param schemaName The name of the Schema.
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return remove Version response along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<RemoveVersionResponseInner> removeVersionWithResponse(String resourceGroupName, String schemaName,
        VersionParameter body, Context context);

    /**
     * Remove Schema Version Resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param schemaName The name of the Schema.
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return remove Version response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    RemoveVersionResponseInner removeVersion(String resourceGroupName, String schemaName, VersionParameter body);

    /**
     * List by specified resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Schema list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SchemaInner> listByResourceGroup(String resourceGroupName);

    /**
     * List by specified resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Schema list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SchemaInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * List by subscription.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Schema list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SchemaInner> list();

    /**
     * List by subscription.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Schema list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SchemaInner> list(Context context);
}
