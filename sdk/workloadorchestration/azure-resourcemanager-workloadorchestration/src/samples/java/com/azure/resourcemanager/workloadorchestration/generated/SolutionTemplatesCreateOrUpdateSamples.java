// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.workloadorchestration.generated;

import com.azure.resourcemanager.workloadorchestration.models.ResourceState;
import com.azure.resourcemanager.workloadorchestration.models.SolutionTemplateProperties;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for SolutionTemplates CreateOrUpdate.
 */
public final class SolutionTemplatesCreateOrUpdateSamples {
    /*
     * x-ms-original-file: 2025-06-01/SolutionTemplates_CreateOrUpdate_MaximumSet_Gen.json
     */
    /**
     * Sample code: SolutionTemplates_CreateOrUpdate_MaximumSet.
     * 
     * @param manager Entry point to WorkloadOrchestrationManager.
     */
    public static void solutionTemplatesCreateOrUpdateMaximumSet(
        com.azure.resourcemanager.workloadorchestration.WorkloadOrchestrationManager manager) {
        manager.solutionTemplates()
            .define("testname")
            .withRegion("zheaaqvadewftnctxzpinrgeproqs")
            .withExistingResourceGroup("rgconfigurationmanager")
            .withTags(mapOf("key5091", "fakeTokenPlaceholder"))
            .withProperties(new SolutionTemplateProperties().withDescription("psrftehgzngcdlccivhjmwsmiz")
                .withCapabilities(Arrays.asList("dfoyxbbknrhvlunhmuyyt"))
                .withState(ResourceState.ACTIVE)
                .withEnableExternalValidation(true))
            .create();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
