# NOTE: Please refer to https://aka.ms/azsdk/engsys/ci-yaml before editing this file.

trigger:
  branches:
    include:
      - main
      - hotfix/*
      - release/*
  paths:
    include:
      - sdk/core/
      - sdk/parents/azure-sdk-parent/
      - sdk/parents/azure-client-sdk-parent/
      - eng/
    exclude:
      - eng/versioning
      - eng/jacoco-test-coverage

pr:
  branches:
    include:
      - main
      - feature/*
      - hotfix/*
      - release/*
  paths:
    include:
      - sdk/core/
      - sdk/parents/azure-sdk-parent/
      - sdk/parents/azure-client-sdk-parent/
      - eng/
    exclude:
      - eng/versioning
      - eng/jacoco-test-coverage


extends:
  template: ../../eng/pipelines/templates/stages/archetype-sdk-client.yml
  parameters:
    ServiceDirectory: core
    Artifacts:
      - name: azure-core
        groupId: com.azure
        safeName: azurecore
      - name: azure-core-amqp
        groupId: com.azure
        safeName: azurecoreamqp
      - name: azure-core-amqp-experimental
        groupId: com.azure
        safeName: azurecoreamqpexperimental
      - name: azure-core-experimental
        groupId: com.azure
        safeName: azurecoreexperimental
      - name: azure-core-http-jdk-httpclient
        groupId: com.azure
        safeName: azurecorehttpjdkhttpclient
      - name: azure-core-http-netty
        groupId: com.azure
        safeName: azurecorehttpnetty
      - name: azure-core-http-okhttp
        groupId: com.azure
        safeName: azurecorehttpokhttp
      - name: azure-core-management
        groupId: com.azure
        safeName: azurecoremanagement
      - name: azure-core-serializer-avro-apache
        groupId: com.azure
        safeName: azurecoreserializeravroapache
      - name: azure-core-serializer-json-gson
        groupId: com.azure
        safeName: azurecoreserializerjsongson
      - name: azure-core-serializer-json-jackson
        groupId: com.azure
        safeName: azurecoreserializerjsonjackson
      - name: azure-core-test
        groupId: com.azure
        safeName: azurecoretest
      - name: azure-core-tracing-opentelemetry
        groupId: com.azure
        safeName: azurecoretracingopentelemetry
    AdditionalModules:
      - name: perf-test-core
        groupId: com.azure

  - job: 'Analyze From Source'
    condition: and(succeeded(), ne(variables['Skip.Analyze'], 'true'))

    variables:
      - template: ../variables/globals.yml

    pool:
      name: azsdk-pool-mms-ubuntu-2004-general
      vmImage: MMSUbuntu20.04

    steps:
      - task: UsePythonVersion@0
        displayName: 'Use Python 3.6'
        inputs:
          versionSpec: '3.6'

      - template: /eng/common/pipelines/templates/steps/sparse-checkout.yml
        parameters:
          Paths:
            - 'sdk/${{ parameters.ServiceDirectory }}'
            - '**/*.xml'
            - '**/*.md'
            - '.vscode/cspell.json'
            - '!sdk/**/test-recordings'
            - '!sdk/**/session-records'

      - template: /eng/common/pipelines/templates/steps/check-spelling.yml
        parameters:
          CspellConfigPath: .vscode/cspell.json
       - task: PowerShell@2
        displayName: 'Verify versions in POM files'
        inputs:
          pwsh: true
          workingDirectory: $(Agent.BuildDirectory)
          filePath: eng/versioning/pom_file_version_scanner.ps1
          arguments: -Debug:$$(IsDebug)

      - template: ../steps/generate-project-list.yml
        parameters:
          Artifacts: ${{ parameters.Artifacts }}
          AdditionalModules: ${{ parameters.AdditionalModules }}
          JobType: 'Analyze'
          SDKType: ${{parameters.SDKType}}
          ServiceDirectory: ${{parameters.ServiceDirectory}}
       - task: PythonScript@0
        displayName: 'Generate directories variable for sparse checkout'
        inputs:
          scriptPath: 'eng/scripts/generate_from_source_pom.py'
          arguments: '--set-pipeline-variable CheckoutDirectories --project-list $(ProjectList)'
          workingDirectory: '$(System.DefaultWorkingDirectory)'
       - template: /eng/common/pipelines/templates/steps/sparse-checkout.yml
        parameters:
          Paths: $(CheckoutDirectories)
          SkipDefaultCheckout: true

      - template: /eng/common/pipelines/templates/steps/set-test-pipeline-version.yml
        parameters:
          PackageName: "azure-sdk-template"
          ServiceDirectory: "template"
          TestPipeline: ${{ parameters.TestPipeline }}

      - script: |
          pip install setuptools wheel
          pip install doc-warden==$(DocWardenVersion)
          ward scan -d $(Build.SourcesDirectory) -c $(Build.SourcesDirectory)/eng/.docsettings.yml
        displayName: 'Verify Readmes'

      - template: /eng/common/pipelines/templates/steps/verify-links.yml
        parameters:
          ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
            Directory: ''
            Urls: (eng/common/scripts/get-markdown-files-from-changed-files.ps1)
          ${{ if ne(variables['Build.Reason'], 'PullRequest') }}:
            Directory: sdk/${{ parameters.ServiceDirectory }}
          CheckLinkGuidance: $true

      - template: /eng/common/pipelines/templates/steps/verify-samples.yml
        parameters:
          ServiceDirectory: ${{ parameters.ServiceDirectory }}

      # Use BasePathLength of 38 instead of the default 49 as some released files fail when the number is higher.
      - template: /eng/common/pipelines/templates/steps/verify-path-length.yml
        parameters:
          SourceDirectory: $(Build.SourcesDirectory)
          BasePathLength: 38

      - ${{if ne(parameters.SDKType, 'data')}}:
          - ${{ each artifact in parameters.Artifacts }}:
              - template: /eng/common/pipelines/templates/steps/verify-changelog.yml
                parameters:
                  PackageName: ${{artifact.name}}
                  ServiceName: ${{parameters.ServiceDirectory}}
                  ForRelease: false

      # We `install` the code quality reports tooling into our local m2 cache separately from building the Maven project
      # reports. This means it is available as part of that, but also so that this is not documented in the project report.
      - template: ../steps/install-reporting-tools.yml

      # maven dependency:tree needs to be able to resolve dependencies, so these should be installed.
      - task: Maven@3
        displayName: 'Build and Install'
        inputs:
          mavenPomFile: pom.xml
          goals: 'install'
          options: '$(DefaultOptions) -T 2C -DskipTests -Dgpg.skip -Dmaven.javadoc.skip=true -Dcheckstyle.skip=true -Dspotbugs.skip=true -Drevapi.skip=true -pl $(ProjectList) -am'
          mavenOptions: '$(MemoryOptions) $(LoggingOptions)'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: $(JavaBuildVersion)
          jdkArchitectureOption: 'x64'
          publishJUnitResults: false

      - task: Maven@3
        displayName: 'Run SpotBugs, Checkstyle, RevApi, and Javadoc'
        inputs:
          mavenPomFile: pom.xml
          options: '$(DefaultOptions) --no-transfer-progress -DskipTests -Dgpg.skip -Dverify-readme -pl $(ProjectList)'
          mavenOptions: '$(MemoryOptions)'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: $(JavaBuildVersion)
          jdkArchitectureOption: 'x64'
          publishJUnitResults: false
          goals: 'verify'

      - template: ../steps/upload-repository-on-failure.yml

      - template: /eng/common/pipelines/templates/steps/eng-common-workflow-enforcer.yml
