/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id("com.azure.java-conventions")
}

dependencies {
    api("com.fasterxml.jackson.core:jackson-annotations:2.13.2")
    implementation("com.fasterxml.jackson.core:jackson-core:2.13.2")
    api("com.fasterxml.jackson.core:jackson-databind:2.13.2.2")
    api("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.2")
    api("com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.13.2")
    api("org.slf4j:slf4j-api:1.7.36")
    api("io.projectreactor:reactor-core:3.4.16")
    testImplementation("io.projectreactor:reactor-test:3.4.16")
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.8.2")
    testImplementation("org.junit.jupiter:junit-jupiter-engine:5.8.2")
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.8.2")
    testImplementation("org.hamcrest:hamcrest-library:2.2")
    testImplementation("org.mockito:mockito-core:4.0.0")
    testImplementation("com.github.tomakehurst:wiremock-standalone:2.24.1")
    testImplementation("org.openjdk.jmh:jmh-core:1.22")
    testImplementation("org.openjdk.jmh:jmh-generator-annprocess:1.22")
    testImplementation("javax.json:javax.json-api:1.1.4")
    compileOnly("com.google.code.findbugs:jsr305:3.0.2")
}

sourceSets {
    create("java9") {
        java {
            setSrcDirs(listOf("src/main/java9"))
        }
    }
}

tasks.getByName<JavaCompile>("compileJava9Java") {
    classpath = sourceSets.main.get().output
    options.release.set(9)
}

tasks.getByName<Jar>("jar") {
    into("META-INF/versions/9") {
        from(sourceSets.getByName("java9").output)
    }

    manifest.attributes(mapOf("Multi-Release" to "true"))
}

tasks.getByName<Test>("test") {
    dependsOn("jar")
    classpath = files(tasks.getByName<Jar>("jar").archiveFile, classpath) - sourceSets.main.get().output
}

description = "Microsoft Azure Java Core Library"

//tasks.register("testsJar", Jar) {
//    archiveClassifier = "tests"
//    from(sourceSets.test.output)
//}
//
//publishing.publications.maven.artifact(testsJar)
//
//java {
//    withJavadocJar()
//}
