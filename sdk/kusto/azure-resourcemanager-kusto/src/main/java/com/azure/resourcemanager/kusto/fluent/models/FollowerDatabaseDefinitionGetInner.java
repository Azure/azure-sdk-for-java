// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kusto.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.kusto.models.DatabaseShareOrigin;
import com.azure.resourcemanager.kusto.models.TableLevelSharingProperties;
import java.io.IOException;

/**
 * A class representing follower database object.
 */
@Fluent
public final class FollowerDatabaseDefinitionGetInner implements JsonSerializable<FollowerDatabaseDefinitionGetInner> {
    /*
     * Follower database definition.
     */
    private FollowerDatabaseProperties innerProperties;

    /**
     * Creates an instance of FollowerDatabaseDefinitionGetInner class.
     */
    public FollowerDatabaseDefinitionGetInner() {
    }

    /**
     * Get the innerProperties property: Follower database definition.
     * 
     * @return the innerProperties value.
     */
    private FollowerDatabaseProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the clusterResourceId property: Resource id of the cluster that follows a database owned by this cluster.
     * 
     * @return the clusterResourceId value.
     */
    public String clusterResourceId() {
        return this.innerProperties() == null ? null : this.innerProperties().clusterResourceId();
    }

    /**
     * Set the clusterResourceId property: Resource id of the cluster that follows a database owned by this cluster.
     * 
     * @param clusterResourceId the clusterResourceId value to set.
     * @return the FollowerDatabaseDefinitionGetInner object itself.
     */
    public FollowerDatabaseDefinitionGetInner withClusterResourceId(String clusterResourceId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new FollowerDatabaseProperties();
        }
        this.innerProperties().withClusterResourceId(clusterResourceId);
        return this;
    }

    /**
     * Get the attachedDatabaseConfigurationName property: Resource name of the attached database configuration in the
     * follower cluster.
     * 
     * @return the attachedDatabaseConfigurationName value.
     */
    public String attachedDatabaseConfigurationName() {
        return this.innerProperties() == null ? null : this.innerProperties().attachedDatabaseConfigurationName();
    }

    /**
     * Set the attachedDatabaseConfigurationName property: Resource name of the attached database configuration in the
     * follower cluster.
     * 
     * @param attachedDatabaseConfigurationName the attachedDatabaseConfigurationName value to set.
     * @return the FollowerDatabaseDefinitionGetInner object itself.
     */
    public FollowerDatabaseDefinitionGetInner
        withAttachedDatabaseConfigurationName(String attachedDatabaseConfigurationName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new FollowerDatabaseProperties();
        }
        this.innerProperties().withAttachedDatabaseConfigurationName(attachedDatabaseConfigurationName);
        return this;
    }

    /**
     * Get the databaseName property: The database name owned by this cluster that was followed. * in case following all
     * databases.
     * 
     * @return the databaseName value.
     */
    public String databaseName() {
        return this.innerProperties() == null ? null : this.innerProperties().databaseName();
    }

    /**
     * Get the tableLevelSharingProperties property: Table level sharing specifications.
     * 
     * @return the tableLevelSharingProperties value.
     */
    public TableLevelSharingProperties tableLevelSharingProperties() {
        return this.innerProperties() == null ? null : this.innerProperties().tableLevelSharingProperties();
    }

    /**
     * Get the databaseShareOrigin property: The origin of the following setup.
     * 
     * @return the databaseShareOrigin value.
     */
    public DatabaseShareOrigin databaseShareOrigin() {
        return this.innerProperties() == null ? null : this.innerProperties().databaseShareOrigin();
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("properties", this.innerProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of FollowerDatabaseDefinitionGetInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of FollowerDatabaseDefinitionGetInner if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the FollowerDatabaseDefinitionGetInner.
     */
    public static FollowerDatabaseDefinitionGetInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            FollowerDatabaseDefinitionGetInner deserializedFollowerDatabaseDefinitionGetInner
                = new FollowerDatabaseDefinitionGetInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("properties".equals(fieldName)) {
                    deserializedFollowerDatabaseDefinitionGetInner.innerProperties
                        = FollowerDatabaseProperties.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedFollowerDatabaseDefinitionGetInner;
        });
    }
}
