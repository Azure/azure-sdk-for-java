// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kusto.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.kusto.fluent.models.SandboxCustomImageInner;
import com.azure.resourcemanager.kusto.models.Language;
import com.azure.resourcemanager.kusto.models.ProvisioningState;
import com.azure.resourcemanager.kusto.models.SandboxCustomImage;

public final class SandboxCustomImageImpl
    implements SandboxCustomImage, SandboxCustomImage.Definition, SandboxCustomImage.Update {
    private SandboxCustomImageInner innerObject;

    private final com.azure.resourcemanager.kusto.KustoManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public Language language() {
        return this.innerModel().language();
    }

    public String languageVersion() {
        return this.innerModel().languageVersion();
    }

    public String requirementsFileContent() {
        return this.innerModel().requirementsFileContent();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public SandboxCustomImageInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.kusto.KustoManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String clusterName;

    private String sandboxCustomImageName;

    public SandboxCustomImageImpl withExistingCluster(String resourceGroupName, String clusterName) {
        this.resourceGroupName = resourceGroupName;
        this.clusterName = clusterName;
        return this;
    }

    public SandboxCustomImage create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSandboxCustomImages()
                .createOrUpdate(
                    resourceGroupName, clusterName, sandboxCustomImageName, this.innerModel(), Context.NONE);
        return this;
    }

    public SandboxCustomImage create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSandboxCustomImages()
                .createOrUpdate(resourceGroupName, clusterName, sandboxCustomImageName, this.innerModel(), context);
        return this;
    }

    SandboxCustomImageImpl(String name, com.azure.resourcemanager.kusto.KustoManager serviceManager) {
        this.innerObject = new SandboxCustomImageInner();
        this.serviceManager = serviceManager;
        this.sandboxCustomImageName = name;
    }

    public SandboxCustomImageImpl update() {
        return this;
    }

    public SandboxCustomImage apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSandboxCustomImages()
                .update(resourceGroupName, clusterName, sandboxCustomImageName, this.innerModel(), Context.NONE);
        return this;
    }

    public SandboxCustomImage apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSandboxCustomImages()
                .update(resourceGroupName, clusterName, sandboxCustomImageName, this.innerModel(), context);
        return this;
    }

    SandboxCustomImageImpl(
        SandboxCustomImageInner innerObject, com.azure.resourcemanager.kusto.KustoManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.clusterName = Utils.getValueFromIdByName(innerObject.id(), "clusters");
        this.sandboxCustomImageName = Utils.getValueFromIdByName(innerObject.id(), "sandboxCustomImages");
    }

    public SandboxCustomImage refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSandboxCustomImages()
                .getWithResponse(resourceGroupName, clusterName, sandboxCustomImageName, Context.NONE)
                .getValue();
        return this;
    }

    public SandboxCustomImage refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSandboxCustomImages()
                .getWithResponse(resourceGroupName, clusterName, sandboxCustomImageName, context)
                .getValue();
        return this;
    }

    public SandboxCustomImageImpl withLanguage(Language language) {
        this.innerModel().withLanguage(language);
        return this;
    }

    public SandboxCustomImageImpl withLanguageVersion(String languageVersion) {
        this.innerModel().withLanguageVersion(languageVersion);
        return this;
    }

    public SandboxCustomImageImpl withRequirementsFileContent(String requirementsFileContent) {
        this.innerModel().withRequirementsFileContent(requirementsFileContent);
        return this;
    }
}
