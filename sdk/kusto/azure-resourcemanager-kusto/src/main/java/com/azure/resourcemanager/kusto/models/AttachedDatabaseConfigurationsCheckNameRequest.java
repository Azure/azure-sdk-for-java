// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kusto.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The result returned from a AttachedDatabaseConfigurations check name availability request.
 */
@Fluent
public final class AttachedDatabaseConfigurationsCheckNameRequest
    implements JsonSerializable<AttachedDatabaseConfigurationsCheckNameRequest> {
    /*
     * Attached database resource name.
     */
    private String name;

    /*
     * The type of resource, for instance Microsoft.Kusto/clusters/attachedDatabaseConfigurations.
     */
    private final String type = "Microsoft.Kusto/clusters/attachedDatabaseConfigurations";

    /**
     * Creates an instance of AttachedDatabaseConfigurationsCheckNameRequest class.
     */
    public AttachedDatabaseConfigurationsCheckNameRequest() {
    }

    /**
     * Get the name property: Attached database resource name.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Attached database resource name.
     * 
     * @param name the name value to set.
     * @return the AttachedDatabaseConfigurationsCheckNameRequest object itself.
     */
    public AttachedDatabaseConfigurationsCheckNameRequest withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the type property: The type of resource, for instance
     * Microsoft.Kusto/clusters/attachedDatabaseConfigurations.
     * 
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (name() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property name in model AttachedDatabaseConfigurationsCheckNameRequest"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(AttachedDatabaseConfigurationsCheckNameRequest.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("name", this.name);
        jsonWriter.writeStringField("type", this.type);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AttachedDatabaseConfigurationsCheckNameRequest from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AttachedDatabaseConfigurationsCheckNameRequest if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AttachedDatabaseConfigurationsCheckNameRequest.
     */
    public static AttachedDatabaseConfigurationsCheckNameRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AttachedDatabaseConfigurationsCheckNameRequest deserializedAttachedDatabaseConfigurationsCheckNameRequest
                = new AttachedDatabaseConfigurationsCheckNameRequest();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("name".equals(fieldName)) {
                    deserializedAttachedDatabaseConfigurationsCheckNameRequest.name = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAttachedDatabaseConfigurationsCheckNameRequest;
        });
    }
}
