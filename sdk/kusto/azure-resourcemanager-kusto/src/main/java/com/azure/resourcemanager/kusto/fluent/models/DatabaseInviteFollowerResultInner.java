// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kusto.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The result returned from a follower invitation generation request.
 */
@Fluent
public final class DatabaseInviteFollowerResultInner implements JsonSerializable<DatabaseInviteFollowerResultInner> {
    /*
     * The generated invitation token.
     */
    private String generatedInvitation;

    /**
     * Creates an instance of DatabaseInviteFollowerResultInner class.
     */
    public DatabaseInviteFollowerResultInner() {
    }

    /**
     * Get the generatedInvitation property: The generated invitation token.
     * 
     * @return the generatedInvitation value.
     */
    public String generatedInvitation() {
        return this.generatedInvitation;
    }

    /**
     * Set the generatedInvitation property: The generated invitation token.
     * 
     * @param generatedInvitation the generatedInvitation value to set.
     * @return the DatabaseInviteFollowerResultInner object itself.
     */
    public DatabaseInviteFollowerResultInner withGeneratedInvitation(String generatedInvitation) {
        this.generatedInvitation = generatedInvitation;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("generatedInvitation", this.generatedInvitation);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DatabaseInviteFollowerResultInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DatabaseInviteFollowerResultInner if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the DatabaseInviteFollowerResultInner.
     */
    public static DatabaseInviteFollowerResultInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            DatabaseInviteFollowerResultInner deserializedDatabaseInviteFollowerResultInner
                = new DatabaseInviteFollowerResultInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("generatedInvitation".equals(fieldName)) {
                    deserializedDatabaseInviteFollowerResultInner.generatedInvitation = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedDatabaseInviteFollowerResultInner;
        });
    }
}
