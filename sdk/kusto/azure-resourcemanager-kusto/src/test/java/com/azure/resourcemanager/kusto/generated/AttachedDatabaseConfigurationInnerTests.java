// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kusto.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.kusto.fluent.models.AttachedDatabaseConfigurationInner;
import com.azure.resourcemanager.kusto.models.DefaultPrincipalsModificationKind;
import com.azure.resourcemanager.kusto.models.TableLevelSharingProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AttachedDatabaseConfigurationInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AttachedDatabaseConfigurationInner model =
            BinaryData
                .fromString(
                    "{\"location\":\"ronasxift\",\"properties\":{\"provisioningState\":\"Moving\",\"databaseName\":\"zh\",\"clusterResourceId\":\"tw\",\"attachedDatabaseNames\":[\"ogczhonnxkrlg\",\"yhmossxkkg\",\"h\",\"rghxjb\"],\"defaultPrincipalsModificationKind\":\"None\",\"tableLevelSharingProperties\":{\"tablesToInclude\":[\"cx\",\"frpdsofbshrns\",\"buswdvzyy\",\"ycnunvjsrtk\"],\"tablesToExclude\":[\"nopqgikyzirtx\",\"yuxzejntpsewgi\",\"ilqu\",\"rydxtqm\"],\"externalTablesToInclude\":[\"xorgg\"],\"externalTablesToExclude\":[\"yaomtb\",\"hhavgrvkffovjz\",\"pjbi\",\"gjmfxumvfcl\"],\"materializedViewsToInclude\":[\"vwxnbkfe\",\"zxscyhwzdgirujb\",\"bomvzzbtdcqv\",\"niyujv\"],\"materializedViewsToExclude\":[\"wdsh\"],\"functionsToInclude\":[\"n\",\"bgye\",\"rymsgaojfmw\",\"cotmr\"],\"functionsToExclude\":[\"rctym\",\"xoftpipiwyczu\",\"xacpqjli\",\"hyus\"]},\"databaseNameOverride\":\"kasdvlm\",\"databaseNamePrefix\":\"dgzxulucvpamrsr\"},\"id\":\"uzvx\",\"name\":\"risjnhnytxifqjz\",\"type\":\"xmrhu\"}")
                .toObject(AttachedDatabaseConfigurationInner.class);
        Assertions.assertEquals("ronasxift", model.location());
        Assertions.assertEquals("zh", model.databaseName());
        Assertions.assertEquals("tw", model.clusterResourceId());
        Assertions.assertEquals(DefaultPrincipalsModificationKind.NONE, model.defaultPrincipalsModificationKind());
        Assertions.assertEquals("cx", model.tableLevelSharingProperties().tablesToInclude().get(0));
        Assertions.assertEquals("nopqgikyzirtx", model.tableLevelSharingProperties().tablesToExclude().get(0));
        Assertions.assertEquals("xorgg", model.tableLevelSharingProperties().externalTablesToInclude().get(0));
        Assertions.assertEquals("yaomtb", model.tableLevelSharingProperties().externalTablesToExclude().get(0));
        Assertions.assertEquals("vwxnbkfe", model.tableLevelSharingProperties().materializedViewsToInclude().get(0));
        Assertions.assertEquals("wdsh", model.tableLevelSharingProperties().materializedViewsToExclude().get(0));
        Assertions.assertEquals("n", model.tableLevelSharingProperties().functionsToInclude().get(0));
        Assertions.assertEquals("rctym", model.tableLevelSharingProperties().functionsToExclude().get(0));
        Assertions.assertEquals("kasdvlm", model.databaseNameOverride());
        Assertions.assertEquals("dgzxulucvpamrsr", model.databaseNamePrefix());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AttachedDatabaseConfigurationInner model =
            new AttachedDatabaseConfigurationInner()
                .withLocation("ronasxift")
                .withDatabaseName("zh")
                .withClusterResourceId("tw")
                .withDefaultPrincipalsModificationKind(DefaultPrincipalsModificationKind.NONE)
                .withTableLevelSharingProperties(
                    new TableLevelSharingProperties()
                        .withTablesToInclude(Arrays.asList("cx", "frpdsofbshrns", "buswdvzyy", "ycnunvjsrtk"))
                        .withTablesToExclude(Arrays.asList("nopqgikyzirtx", "yuxzejntpsewgi", "ilqu", "rydxtqm"))
                        .withExternalTablesToInclude(Arrays.asList("xorgg"))
                        .withExternalTablesToExclude(Arrays.asList("yaomtb", "hhavgrvkffovjz", "pjbi", "gjmfxumvfcl"))
                        .withMaterializedViewsToInclude(
                            Arrays.asList("vwxnbkfe", "zxscyhwzdgirujb", "bomvzzbtdcqv", "niyujv"))
                        .withMaterializedViewsToExclude(Arrays.asList("wdsh"))
                        .withFunctionsToInclude(Arrays.asList("n", "bgye", "rymsgaojfmw", "cotmr"))
                        .withFunctionsToExclude(Arrays.asList("rctym", "xoftpipiwyczu", "xacpqjli", "hyus")))
                .withDatabaseNameOverride("kasdvlm")
                .withDatabaseNamePrefix("dgzxulucvpamrsr");
        model = BinaryData.fromObject(model).toObject(AttachedDatabaseConfigurationInner.class);
        Assertions.assertEquals("ronasxift", model.location());
        Assertions.assertEquals("zh", model.databaseName());
        Assertions.assertEquals("tw", model.clusterResourceId());
        Assertions.assertEquals(DefaultPrincipalsModificationKind.NONE, model.defaultPrincipalsModificationKind());
        Assertions.assertEquals("cx", model.tableLevelSharingProperties().tablesToInclude().get(0));
        Assertions.assertEquals("nopqgikyzirtx", model.tableLevelSharingProperties().tablesToExclude().get(0));
        Assertions.assertEquals("xorgg", model.tableLevelSharingProperties().externalTablesToInclude().get(0));
        Assertions.assertEquals("yaomtb", model.tableLevelSharingProperties().externalTablesToExclude().get(0));
        Assertions.assertEquals("vwxnbkfe", model.tableLevelSharingProperties().materializedViewsToInclude().get(0));
        Assertions.assertEquals("wdsh", model.tableLevelSharingProperties().materializedViewsToExclude().get(0));
        Assertions.assertEquals("n", model.tableLevelSharingProperties().functionsToInclude().get(0));
        Assertions.assertEquals("rctym", model.tableLevelSharingProperties().functionsToExclude().get(0));
        Assertions.assertEquals("kasdvlm", model.databaseNameOverride());
        Assertions.assertEquals("dgzxulucvpamrsr", model.databaseNamePrefix());
    }
}
