// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kusto.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.kusto.fluent.models.ClusterPrincipalAssignmentInner;
import com.azure.resourcemanager.kusto.models.ClusterPrincipalAssignmentListResult;
import com.azure.resourcemanager.kusto.models.ClusterPrincipalRole;
import com.azure.resourcemanager.kusto.models.PrincipalType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ClusterPrincipalAssignmentListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ClusterPrincipalAssignmentListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"principalId\":\"cyshurzafbljjgp\",\"role\":\"AllDatabasesMonitor\",\"tenantId\":\"qcjm\",\"principalType\":\"Group\",\"tenantName\":\"a\",\"principalName\":\"qidtqajzyu\",\"provisioningState\":\"Deleting\",\"aadObjectId\":\"dj\"},\"id\":\"rlkhbzhfepgzgq\",\"name\":\"xzlocxscp\",\"type\":\"ierhhbcsglummaj\"}]}")
            .toObject(ClusterPrincipalAssignmentListResult.class);
        Assertions.assertEquals("cyshurzafbljjgp", model.value().get(0).principalId());
        Assertions.assertEquals(ClusterPrincipalRole.ALL_DATABASES_MONITOR, model.value().get(0).role());
        Assertions.assertEquals("qcjm", model.value().get(0).tenantId());
        Assertions.assertEquals(PrincipalType.GROUP, model.value().get(0).principalType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ClusterPrincipalAssignmentListResult model = new ClusterPrincipalAssignmentListResult()
            .withValue(Arrays.asList(new ClusterPrincipalAssignmentInner().withPrincipalId("cyshurzafbljjgp")
                .withRole(ClusterPrincipalRole.ALL_DATABASES_MONITOR)
                .withTenantId("qcjm")
                .withPrincipalType(PrincipalType.GROUP)));
        model = BinaryData.fromObject(model).toObject(ClusterPrincipalAssignmentListResult.class);
        Assertions.assertEquals("cyshurzafbljjgp", model.value().get(0).principalId());
        Assertions.assertEquals(ClusterPrincipalRole.ALL_DATABASES_MONITOR, model.value().get(0).role());
        Assertions.assertEquals("qcjm", model.value().get(0).tenantId());
        Assertions.assertEquals(PrincipalType.GROUP, model.value().get(0).principalType());
    }
}
