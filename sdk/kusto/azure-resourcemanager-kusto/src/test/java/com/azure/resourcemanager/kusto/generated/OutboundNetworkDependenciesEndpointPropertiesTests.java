// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kusto.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.kusto.fluent.models.OutboundNetworkDependenciesEndpointProperties;
import com.azure.resourcemanager.kusto.models.EndpointDependency;
import com.azure.resourcemanager.kusto.models.EndpointDetail;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class OutboundNetworkDependenciesEndpointPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OutboundNetworkDependenciesEndpointProperties model =
            BinaryData
                .fromString(
                    "{\"category\":\"jq\",\"endpoints\":[{\"domainName\":\"zpfrla\",\"endpointDetails\":[{\"port\":1822187571,\"ipAddress\":\"oiindfpwpjy\"}]}],\"provisioningState\":\"Moving\"}")
                .toObject(OutboundNetworkDependenciesEndpointProperties.class);
        Assertions.assertEquals("jq", model.category());
        Assertions.assertEquals("zpfrla", model.endpoints().get(0).domainName());
        Assertions.assertEquals(1822187571, model.endpoints().get(0).endpointDetails().get(0).port());
        Assertions.assertEquals("oiindfpwpjy", model.endpoints().get(0).endpointDetails().get(0).ipAddress());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OutboundNetworkDependenciesEndpointProperties model =
            new OutboundNetworkDependenciesEndpointProperties()
                .withCategory("jq")
                .withEndpoints(
                    Arrays
                        .asList(
                            new EndpointDependency()
                                .withDomainName("zpfrla")
                                .withEndpointDetails(
                                    Arrays
                                        .asList(
                                            new EndpointDetail().withPort(1822187571).withIpAddress("oiindfpwpjy")))));
        model = BinaryData.fromObject(model).toObject(OutboundNetworkDependenciesEndpointProperties.class);
        Assertions.assertEquals("jq", model.category());
        Assertions.assertEquals("zpfrla", model.endpoints().get(0).domainName());
        Assertions.assertEquals(1822187571, model.endpoints().get(0).endpointDetails().get(0).port());
        Assertions.assertEquals("oiindfpwpjy", model.endpoints().get(0).endpointDetails().get(0).ipAddress());
    }
}
