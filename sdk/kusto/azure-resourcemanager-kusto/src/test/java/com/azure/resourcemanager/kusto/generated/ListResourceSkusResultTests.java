// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kusto.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.kusto.fluent.models.AzureResourceSkuInner;
import com.azure.resourcemanager.kusto.models.AzureCapacity;
import com.azure.resourcemanager.kusto.models.AzureScaleType;
import com.azure.resourcemanager.kusto.models.AzureSku;
import com.azure.resourcemanager.kusto.models.AzureSkuName;
import com.azure.resourcemanager.kusto.models.AzureSkuTier;
import com.azure.resourcemanager.kusto.models.ListResourceSkusResult;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ListResourceSkusResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ListResourceSkusResult model = BinaryData.fromString(
            "{\"value\":[{\"resourceType\":\"uyfta\",\"sku\":{\"name\":\"Standard_L8s\",\"capacity\":1662588727,\"tier\":\"Standard\"},\"capacity\":{\"scaleType\":\"manual\",\"minimum\":1777343462,\"maximum\":842537299,\"default\":1814420357}},{\"resourceType\":\"nubexk\",\"sku\":{\"name\":\"Standard_L32as_v3\",\"capacity\":986433901,\"tier\":\"Basic\"},\"capacity\":{\"scaleType\":\"automatic\",\"minimum\":848558030,\"maximum\":1929847054,\"default\":1007666972}}]}")
            .toObject(ListResourceSkusResult.class);
        Assertions.assertEquals("uyfta", model.value().get(0).resourceType());
        Assertions.assertEquals(AzureSkuName.STANDARD_L8S, model.value().get(0).sku().name());
        Assertions.assertEquals(1662588727, model.value().get(0).sku().capacity());
        Assertions.assertEquals(AzureSkuTier.STANDARD, model.value().get(0).sku().tier());
        Assertions.assertEquals(AzureScaleType.MANUAL, model.value().get(0).capacity().scaleType());
        Assertions.assertEquals(1777343462, model.value().get(0).capacity().minimum());
        Assertions.assertEquals(842537299, model.value().get(0).capacity().maximum());
        Assertions.assertEquals(1814420357, model.value().get(0).capacity().defaultProperty());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ListResourceSkusResult model = new ListResourceSkusResult().withValue(Arrays.asList(
            new AzureResourceSkuInner().withResourceType("uyfta")
                .withSku(new AzureSku().withName(AzureSkuName.STANDARD_L8S)
                    .withCapacity(1662588727)
                    .withTier(AzureSkuTier.STANDARD))
                .withCapacity(new AzureCapacity().withScaleType(AzureScaleType.MANUAL)
                    .withMinimum(1777343462)
                    .withMaximum(842537299)
                    .withDefaultProperty(1814420357)),
            new AzureResourceSkuInner().withResourceType("nubexk")
                .withSku(new AzureSku().withName(AzureSkuName.STANDARD_L32AS_V3)
                    .withCapacity(986433901)
                    .withTier(AzureSkuTier.BASIC))
                .withCapacity(new AzureCapacity().withScaleType(AzureScaleType.AUTOMATIC)
                    .withMinimum(848558030)
                    .withMaximum(1929847054)
                    .withDefaultProperty(1007666972))));
        model = BinaryData.fromObject(model).toObject(ListResourceSkusResult.class);
        Assertions.assertEquals("uyfta", model.value().get(0).resourceType());
        Assertions.assertEquals(AzureSkuName.STANDARD_L8S, model.value().get(0).sku().name());
        Assertions.assertEquals(1662588727, model.value().get(0).sku().capacity());
        Assertions.assertEquals(AzureSkuTier.STANDARD, model.value().get(0).sku().tier());
        Assertions.assertEquals(AzureScaleType.MANUAL, model.value().get(0).capacity().scaleType());
        Assertions.assertEquals(1777343462, model.value().get(0).capacity().minimum());
        Assertions.assertEquals(842537299, model.value().get(0).capacity().maximum());
        Assertions.assertEquals(1814420357, model.value().get(0).capacity().defaultProperty());
    }
}
