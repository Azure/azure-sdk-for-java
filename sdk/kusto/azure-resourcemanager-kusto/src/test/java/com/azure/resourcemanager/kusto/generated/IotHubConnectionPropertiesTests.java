// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kusto.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.kusto.fluent.models.IotHubConnectionProperties;
import com.azure.resourcemanager.kusto.models.DatabaseRouting;
import com.azure.resourcemanager.kusto.models.IotHubDataFormat;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class IotHubConnectionPropertiesTests {
    @Test
    public void testDeserialize() {
        IotHubConnectionProperties model =
            BinaryData
                .fromString(
                    "{\"iotHubResourceId\":\"xndzwm\",\"consumerGroup\":\"refajpjorwkqnyh\",\"tableName\":\"ij\",\"mappingRuleName\":\"ivfxzsjabibsyst\",\"dataFormat\":\"RAW\",\"eventSystemProperties\":[\"jpvkvpbjxbkzbzkd\",\"ncj\",\"budurgkakmo\",\"zhjjklffhmouwq\"],\"sharedAccessPolicyName\":\"gzrf\",\"databaseRouting\":\"Multi\",\"retrievalStartDate\":\"2021-04-04T13:09:14Z\",\"provisioningState\":\"Creating\"}")
                .toObject(IotHubConnectionProperties.class);
        Assertions.assertEquals("xndzwm", model.iotHubResourceId());
        Assertions.assertEquals("refajpjorwkqnyh", model.consumerGroup());
        Assertions.assertEquals("ij", model.tableName());
        Assertions.assertEquals("ivfxzsjabibsyst", model.mappingRuleName());
        Assertions.assertEquals(IotHubDataFormat.RAW, model.dataFormat());
        Assertions.assertEquals("jpvkvpbjxbkzbzkd", model.eventSystemProperties().get(0));
        Assertions.assertEquals("gzrf", model.sharedAccessPolicyName());
        Assertions.assertEquals(DatabaseRouting.MULTI, model.databaseRouting());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-04T13:09:14Z"), model.retrievalStartDate());
    }

    @Test
    public void testSerialize() {
        IotHubConnectionProperties model =
            new IotHubConnectionProperties()
                .withIotHubResourceId("xndzwm")
                .withConsumerGroup("refajpjorwkqnyh")
                .withTableName("ij")
                .withMappingRuleName("ivfxzsjabibsyst")
                .withDataFormat(IotHubDataFormat.RAW)
                .withEventSystemProperties(Arrays.asList("jpvkvpbjxbkzbzkd", "ncj", "budurgkakmo", "zhjjklffhmouwq"))
                .withSharedAccessPolicyName("gzrf")
                .withDatabaseRouting(DatabaseRouting.MULTI)
                .withRetrievalStartDate(OffsetDateTime.parse("2021-04-04T13:09:14Z"));
        model = BinaryData.fromObject(model).toObject(IotHubConnectionProperties.class);
        Assertions.assertEquals("xndzwm", model.iotHubResourceId());
        Assertions.assertEquals("refajpjorwkqnyh", model.consumerGroup());
        Assertions.assertEquals("ij", model.tableName());
        Assertions.assertEquals("ivfxzsjabibsyst", model.mappingRuleName());
        Assertions.assertEquals(IotHubDataFormat.RAW, model.dataFormat());
        Assertions.assertEquals("jpvkvpbjxbkzbzkd", model.eventSystemProperties().get(0));
        Assertions.assertEquals("gzrf", model.sharedAccessPolicyName());
        Assertions.assertEquals(DatabaseRouting.MULTI, model.databaseRouting());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-04T13:09:14Z"), model.retrievalStartDate());
    }
}
