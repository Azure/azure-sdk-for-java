// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kusto.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.kusto.KustoManager;
import com.azure.resourcemanager.kusto.models.ManagedPrivateEndpoint;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ManagedPrivateEndpointsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"privateLinkResourceId\":\"cecybmrqbrjbbmpx\",\"privateLinkResourceRegion\":\"vykfrexcrse\",\"groupId\":\"wjksghudgzhxo\",\"requestMessage\":\"ggsvoujkxibdaf\",\"provisioningState\":\"Creating\"},\"id\":\"dyomkxfbv\",\"name\":\"bhdyir\",\"type\":\"pwpgddei\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        KustoManager manager = KustoManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ManagedPrivateEndpoint response = manager.managedPrivateEndpoints()
            .getWithResponse("uvqejosovyrrle", "esi", "uqtljqobbpih", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("cecybmrqbrjbbmpx", response.privateLinkResourceId());
        Assertions.assertEquals("vykfrexcrse", response.privateLinkResourceRegion());
        Assertions.assertEquals("wjksghudgzhxo", response.groupId());
        Assertions.assertEquals("ggsvoujkxibdaf", response.requestMessage());
    }
}
