// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kusto.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.kusto.models.ReadOnlyFollowingDatabase;
import java.time.Duration;
import org.junit.jupiter.api.Assertions;

public final class ReadOnlyFollowingDatabaseTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ReadOnlyFollowingDatabase model = BinaryData.fromString(
            "{\"kind\":\"ReadOnlyFollowing\",\"properties\":{\"provisioningState\":\"Creating\",\"softDeletePeriod\":\"PT175H34M27S\",\"hotCachePeriod\":\"PT40H32M34S\",\"statistics\":{\"size\":39.45976},\"leaderClusterResourceId\":\"ilcbtgnhnzeyqxtj\",\"attachedDatabaseConfigurationName\":\"zqlqhyc\",\"principalsModificationKind\":\"Union\",\"tableLevelSharingProperties\":{\"tablesToInclude\":[\"xdbeesmieknl\",\"ariaawi\",\"agy\"],\"tablesToExclude\":[\"fbylyrfg\"],\"externalTablesToInclude\":[\"tcojocqwo\",\"fnzjvusfzldm\",\"zuxylfsbtkadpyso\"],\"externalTablesToExclude\":[\"tgkbugrjqctojc\",\"isofieypefojyqd\",\"cuplcplcwkhih\",\"hlhzdsqtzbsrgno\"],\"materializedViewsToInclude\":[\"hfgmvecactxm\"],\"materializedViewsToExclude\":[\"e\",\"owcluqo\"],\"functionsToInclude\":[\"qvgqouw\",\"fzmpjwyivq\"],\"functionsToExclude\":[\"xcvhrfs\"]},\"originalDatabaseName\":\"uagrttikteusqc\",\"databaseShareOrigin\":\"Direct\",\"suspensionDetails\":{\"suspensionStartDate\":\"2021-07-05T09:11:28Z\"}},\"location\":\"ubyjaffmmf\",\"id\":\"lcqcuubgqibrt\",\"name\":\"lmetttwgdslqxi\",\"type\":\"hrmooi\"}")
            .toObject(ReadOnlyFollowingDatabase.class);
        Assertions.assertEquals("ubyjaffmmf", model.location());
        Assertions.assertEquals(Duration.parse("PT40H32M34S"), model.hotCachePeriod());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ReadOnlyFollowingDatabase model = new ReadOnlyFollowingDatabase().withLocation("ubyjaffmmf")
            .withHotCachePeriod(Duration.parse("PT40H32M34S"));
        model = BinaryData.fromObject(model).toObject(ReadOnlyFollowingDatabase.class);
        Assertions.assertEquals("ubyjaffmmf", model.location());
        Assertions.assertEquals(Duration.parse("PT40H32M34S"), model.hotCachePeriod());
    }
}
