// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kusto.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.kusto.models.ReadOnlyFollowingDatabase;
import java.time.Duration;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class ReadOnlyFollowingDatabaseTests {
    @Test
    public void testDeserialize() {
        ReadOnlyFollowingDatabase model =
            BinaryData
                .fromString(
                    "{\"kind\":\"ReadOnlyFollowing\",\"properties\":{\"provisioningState\":\"Creating\",\"softDeletePeriod\":\"PT178H48M17S\",\"hotCachePeriod\":\"PT107H10M35S\",\"statistics\":{\"size\":27.504385},\"leaderClusterResourceId\":\"sj\",\"attachedDatabaseConfigurationName\":\"hszfjvfb\",\"principalsModificationKind\":\"Replace\",\"tableLevelSharingProperties\":{\"tablesToInclude\":[\"a\",\"rqmq\",\"ldvriiiojnalghfk\"],\"tablesToExclude\":[\"sexso\",\"ueluqhhahhxvrhmz\",\"wpjgwws\"],\"externalTablesToInclude\":[\"hftqsxhqxujxukn\",\"xdigrjg\",\"ufzdmsyq\",\"fi\"],\"externalTablesToExclude\":[\"botzingamvppho\",\"zqzudph\",\"amvdkfwynwcvtbv\",\"ayhmtnvyqiatkz\"],\"materializedViewsToInclude\":[\"npwzcjaes\",\"vvsccyajguq\",\"hwyg\",\"lvdnkfx\"],\"materializedViewsToExclude\":[\"mdwzrmuhapfcqdps\",\"xqv\",\"svuo\",\"mgccelvezrypq\"]},\"originalDatabaseName\":\"feo\",\"databaseShareOrigin\":\"DataShare\"},\"location\":\"wkyhkobopgxe\",\"id\":\"k\",\"name\":\"wep\",\"type\":\"qpcrf\"}")
                .toObject(ReadOnlyFollowingDatabase.class);
        Assertions.assertEquals("wkyhkobopgxe", model.location());
        Assertions.assertEquals(Duration.parse("PT107H10M35S"), model.hotCachePeriod());
    }

    @Test
    public void testSerialize() {
        ReadOnlyFollowingDatabase model =
            new ReadOnlyFollowingDatabase()
                .withLocation("wkyhkobopgxe")
                .withHotCachePeriod(Duration.parse("PT107H10M35S"));
        model = BinaryData.fromObject(model).toObject(ReadOnlyFollowingDatabase.class);
        Assertions.assertEquals("wkyhkobopgxe", model.location());
        Assertions.assertEquals(Duration.parse("PT107H10M35S"), model.hotCachePeriod());
    }
}
