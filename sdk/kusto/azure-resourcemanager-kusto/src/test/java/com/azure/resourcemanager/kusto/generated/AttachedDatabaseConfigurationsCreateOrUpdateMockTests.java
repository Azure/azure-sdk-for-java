// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kusto.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.kusto.KustoManager;
import com.azure.resourcemanager.kusto.models.AttachedDatabaseConfiguration;
import com.azure.resourcemanager.kusto.models.DefaultPrincipalsModificationKind;
import com.azure.resourcemanager.kusto.models.TableLevelSharingProperties;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AttachedDatabaseConfigurationsCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        String responseStr
            = "{\"location\":\"gcvkyyli\",\"properties\":{\"provisioningState\":\"Succeeded\",\"databaseName\":\"jpsfxsfu\",\"clusterResourceId\":\"tl\",\"attachedDatabaseNames\":[\"vagbwidqlvhukove\",\"fizr\",\"jfnmjmvlwyz\",\"iblkujr\"],\"defaultPrincipalsModificationKind\":\"None\",\"tableLevelSharingProperties\":{\"tablesToInclude\":[\"uidjpuuyjucej\"],\"tablesToExclude\":[\"oeo\",\"vtzejetjklnti\",\"yjuzkdb\"],\"externalTablesToInclude\":[\"lxrzvhqjwtr\"],\"externalTablesToExclude\":[\"vgzpcrrkolawj\"],\"materializedViewsToInclude\":[\"mwrokcdxfzzzwyja\"],\"materializedViewsToExclude\":[\"lhguyn\",\"chl\",\"mltx\"],\"functionsToInclude\":[\"mozusgzvlnsnnjz\"],\"functionsToExclude\":[\"folpymwamxqzra\",\"p\",\"dphtv\",\"ulajvlejchc\"]},\"databaseNameOverride\":\"lzk\",\"databaseNamePrefix\":\"zlanrupdwvnph\"},\"id\":\"nzqtpjhmqrhvt\",\"name\":\"laiwdcxsmlzzh\",\"type\":\"dtxetlgydlh\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        KustoManager manager = KustoManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        AttachedDatabaseConfiguration response = manager.attachedDatabaseConfigurations()
            .define("ucsofldpuviyf")
            .withExistingCluster("eaclgschorimk", "srrm")
            .withRegion("abeolhbhlvbm")
            .withDatabaseName("bsxtkcudfbsfarfs")
            .withClusterResourceId("owlkjxnqpv")
            .withDefaultPrincipalsModificationKind(DefaultPrincipalsModificationKind.NONE)
            .withTableLevelSharingProperties(new TableLevelSharingProperties()
                .withTablesToInclude(Arrays.asList("wefohecbvo", "wndyqleallk", "mtkhlowkxxpvbr", "fjmzsyzfho"))
                .withTablesToExclude(Arrays.asList("ikcyyc"))
                .withExternalTablesToInclude(Arrays.asList("sjlpjrtwszhv", "uic", "hvtrrmhwrbfdpyf"))
                .withExternalTablesToExclude(Arrays.asList("hvj", "lrocuyzlwh"))
                .withMaterializedViewsToInclude(Arrays.asList("mhoocl", "tnpqmemczjk", "mykyujxsglhs"))
                .withMaterializedViewsToExclude(Arrays.asList("yejylmbkzudnigrf"))
                .withFunctionsToInclude(Arrays.asList("tjewlpxuzzj", "nrefqyh", "otoihiqa", "ydiw"))
                .withFunctionsToExclude(Arrays.asList("kwpzdqtvh", "spodaqax", "ipietgbe", "jfulbmoic")))
            .withDatabaseNameOverride("lpnfpubntnb")
            .withDatabaseNamePrefix("zviqsowsaae")
            .create();

        Assertions.assertEquals("gcvkyyli", response.location());
        Assertions.assertEquals("jpsfxsfu", response.databaseName());
        Assertions.assertEquals("tl", response.clusterResourceId());
        Assertions.assertEquals(DefaultPrincipalsModificationKind.NONE, response.defaultPrincipalsModificationKind());
        Assertions.assertEquals("uidjpuuyjucej", response.tableLevelSharingProperties().tablesToInclude().get(0));
        Assertions.assertEquals("oeo", response.tableLevelSharingProperties().tablesToExclude().get(0));
        Assertions.assertEquals("lxrzvhqjwtr", response.tableLevelSharingProperties().externalTablesToInclude().get(0));
        Assertions.assertEquals("vgzpcrrkolawj",
            response.tableLevelSharingProperties().externalTablesToExclude().get(0));
        Assertions.assertEquals("mwrokcdxfzzzwyja",
            response.tableLevelSharingProperties().materializedViewsToInclude().get(0));
        Assertions.assertEquals("lhguyn", response.tableLevelSharingProperties().materializedViewsToExclude().get(0));
        Assertions.assertEquals("mozusgzvlnsnnjz", response.tableLevelSharingProperties().functionsToInclude().get(0));
        Assertions.assertEquals("folpymwamxqzra", response.tableLevelSharingProperties().functionsToExclude().get(0));
        Assertions.assertEquals("lzk", response.databaseNameOverride());
        Assertions.assertEquals("zlanrupdwvnph", response.databaseNamePrefix());
    }
}
