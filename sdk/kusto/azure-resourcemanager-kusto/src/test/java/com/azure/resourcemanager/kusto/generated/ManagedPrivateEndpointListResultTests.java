// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kusto.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.kusto.fluent.models.ManagedPrivateEndpointInner;
import com.azure.resourcemanager.kusto.models.ManagedPrivateEndpointListResult;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ManagedPrivateEndpointListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ManagedPrivateEndpointListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"privateLinkResourceId\":\"rdgrtw\",\"privateLinkResourceRegion\":\"nuuzkopbm\",\"groupId\":\"nrfdw\",\"requestMessage\":\"uhhziuiefozbhdm\",\"provisioningState\":\"Moving\"},\"id\":\"zqhof\",\"name\":\"rmaequ\",\"type\":\"ah\"}]}")
            .toObject(ManagedPrivateEndpointListResult.class);
        Assertions.assertEquals("rdgrtw", model.value().get(0).privateLinkResourceId());
        Assertions.assertEquals("nuuzkopbm", model.value().get(0).privateLinkResourceRegion());
        Assertions.assertEquals("nrfdw", model.value().get(0).groupId());
        Assertions.assertEquals("uhhziuiefozbhdm", model.value().get(0).requestMessage());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ManagedPrivateEndpointListResult model = new ManagedPrivateEndpointListResult()
            .withValue(Arrays.asList(new ManagedPrivateEndpointInner().withPrivateLinkResourceId("rdgrtw")
                .withPrivateLinkResourceRegion("nuuzkopbm")
                .withGroupId("nrfdw")
                .withRequestMessage("uhhziuiefozbhdm")));
        model = BinaryData.fromObject(model).toObject(ManagedPrivateEndpointListResult.class);
        Assertions.assertEquals("rdgrtw", model.value().get(0).privateLinkResourceId());
        Assertions.assertEquals("nuuzkopbm", model.value().get(0).privateLinkResourceRegion());
        Assertions.assertEquals("nrfdw", model.value().get(0).groupId());
        Assertions.assertEquals("uhhziuiefozbhdm", model.value().get(0).requestMessage());
    }
}
