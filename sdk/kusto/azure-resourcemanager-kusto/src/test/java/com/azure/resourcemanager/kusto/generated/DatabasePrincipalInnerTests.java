// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kusto.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.kusto.fluent.models.DatabasePrincipalInner;
import com.azure.resourcemanager.kusto.models.DatabasePrincipalRole;
import com.azure.resourcemanager.kusto.models.DatabasePrincipalType;
import org.junit.jupiter.api.Assertions;

public final class DatabasePrincipalInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DatabasePrincipalInner model =
            BinaryData
                .fromString(
                    "{\"role\":\"Viewer\",\"name\":\"kqze\",\"type\":\"Group\",\"fqn\":\"dltfz\",\"email\":\"hhvh\",\"appId\":\"r\",\"tenantName\":\"dkwobdagx\"}")
                .toObject(DatabasePrincipalInner.class);
        Assertions.assertEquals(DatabasePrincipalRole.VIEWER, model.role());
        Assertions.assertEquals("kqze", model.name());
        Assertions.assertEquals(DatabasePrincipalType.GROUP, model.type());
        Assertions.assertEquals("dltfz", model.fqn());
        Assertions.assertEquals("hhvh", model.email());
        Assertions.assertEquals("r", model.appId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DatabasePrincipalInner model =
            new DatabasePrincipalInner()
                .withRole(DatabasePrincipalRole.VIEWER)
                .withName("kqze")
                .withType(DatabasePrincipalType.GROUP)
                .withFqn("dltfz")
                .withEmail("hhvh")
                .withAppId("r");
        model = BinaryData.fromObject(model).toObject(DatabasePrincipalInner.class);
        Assertions.assertEquals(DatabasePrincipalRole.VIEWER, model.role());
        Assertions.assertEquals("kqze", model.name());
        Assertions.assertEquals(DatabasePrincipalType.GROUP, model.type());
        Assertions.assertEquals("dltfz", model.fqn());
        Assertions.assertEquals("hhvh", model.email());
        Assertions.assertEquals("r", model.appId());
    }
}
