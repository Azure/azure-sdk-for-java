// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kusto.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.kusto.fluent.models.DatabasePrincipalProperties;
import com.azure.resourcemanager.kusto.models.DatabasePrincipalRole;
import com.azure.resourcemanager.kusto.models.PrincipalType;
import org.junit.jupiter.api.Assertions;

public final class DatabasePrincipalPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DatabasePrincipalProperties model =
            BinaryData
                .fromString(
                    "{\"principalId\":\"opcjwvnhd\",\"role\":\"Ingestor\",\"tenantId\":\"mgxcxrslpm\",\"principalType\":\"App\",\"tenantName\":\"uoegrpkhjwniyqs\",\"principalName\":\"i\",\"provisioningState\":\"Succeeded\",\"aadObjectId\":\"gk\"}")
                .toObject(DatabasePrincipalProperties.class);
        Assertions.assertEquals("opcjwvnhd", model.principalId());
        Assertions.assertEquals(DatabasePrincipalRole.INGESTOR, model.role());
        Assertions.assertEquals("mgxcxrslpm", model.tenantId());
        Assertions.assertEquals(PrincipalType.APP, model.principalType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DatabasePrincipalProperties model =
            new DatabasePrincipalProperties()
                .withPrincipalId("opcjwvnhd")
                .withRole(DatabasePrincipalRole.INGESTOR)
                .withTenantId("mgxcxrslpm")
                .withPrincipalType(PrincipalType.APP);
        model = BinaryData.fromObject(model).toObject(DatabasePrincipalProperties.class);
        Assertions.assertEquals("opcjwvnhd", model.principalId());
        Assertions.assertEquals(DatabasePrincipalRole.INGESTOR, model.role());
        Assertions.assertEquals("mgxcxrslpm", model.tenantId());
        Assertions.assertEquals(PrincipalType.APP, model.principalType());
    }
}
