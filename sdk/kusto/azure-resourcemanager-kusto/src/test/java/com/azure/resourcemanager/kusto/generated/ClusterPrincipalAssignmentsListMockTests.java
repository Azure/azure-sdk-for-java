// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kusto.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.kusto.KustoManager;
import com.azure.resourcemanager.kusto.models.ClusterPrincipalAssignment;
import com.azure.resourcemanager.kusto.models.ClusterPrincipalRole;
import com.azure.resourcemanager.kusto.models.PrincipalType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ClusterPrincipalAssignmentsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"principalId\":\"xkbsazgakgac\",\"role\":\"AllDatabasesViewer\",\"tenantId\":\"m\",\"principalType\":\"Group\",\"tenantName\":\"spofapvuhry\",\"principalName\":\"iofrzgbzjedmstk\",\"provisioningState\":\"Moving\",\"aadObjectId\":\"xbcuiiznkt\"},\"id\":\"f\",\"name\":\"nsnvpd\",\"type\":\"bmikost\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        KustoManager manager = KustoManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<ClusterPrincipalAssignment> response
            = manager.clusterPrincipalAssignments().list("felisdjub", "gbqi", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("xkbsazgakgac", response.iterator().next().principalId());
        Assertions.assertEquals(ClusterPrincipalRole.ALL_DATABASES_VIEWER, response.iterator().next().role());
        Assertions.assertEquals("m", response.iterator().next().tenantId());
        Assertions.assertEquals(PrincipalType.GROUP, response.iterator().next().principalType());
    }
}
