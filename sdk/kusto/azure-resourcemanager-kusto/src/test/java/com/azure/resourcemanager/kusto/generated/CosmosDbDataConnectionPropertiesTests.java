// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kusto.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.kusto.fluent.models.CosmosDbDataConnectionProperties;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class CosmosDbDataConnectionPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CosmosDbDataConnectionProperties model =
            BinaryData
                .fromString(
                    "{\"tableName\":\"nhdwdigumbnra\",\"mappingRuleName\":\"zzp\",\"managedIdentityResourceId\":\"jazysdzhezwwvaiq\",\"managedIdentityObjectId\":\"vv\",\"cosmosDbAccountResourceId\":\"onkp\",\"cosmosDbDatabase\":\"hqyikvy\",\"cosmosDbContainer\":\"auy\",\"retrievalStartDate\":\"2021-04-05T06:39:57Z\",\"provisioningState\":\"Succeeded\"}")
                .toObject(CosmosDbDataConnectionProperties.class);
        Assertions.assertEquals("nhdwdigumbnra", model.tableName());
        Assertions.assertEquals("zzp", model.mappingRuleName());
        Assertions.assertEquals("jazysdzhezwwvaiq", model.managedIdentityResourceId());
        Assertions.assertEquals("onkp", model.cosmosDbAccountResourceId());
        Assertions.assertEquals("hqyikvy", model.cosmosDbDatabase());
        Assertions.assertEquals("auy", model.cosmosDbContainer());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-05T06:39:57Z"), model.retrievalStartDate());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CosmosDbDataConnectionProperties model =
            new CosmosDbDataConnectionProperties()
                .withTableName("nhdwdigumbnra")
                .withMappingRuleName("zzp")
                .withManagedIdentityResourceId("jazysdzhezwwvaiq")
                .withCosmosDbAccountResourceId("onkp")
                .withCosmosDbDatabase("hqyikvy")
                .withCosmosDbContainer("auy")
                .withRetrievalStartDate(OffsetDateTime.parse("2021-04-05T06:39:57Z"));
        model = BinaryData.fromObject(model).toObject(CosmosDbDataConnectionProperties.class);
        Assertions.assertEquals("nhdwdigumbnra", model.tableName());
        Assertions.assertEquals("zzp", model.mappingRuleName());
        Assertions.assertEquals("jazysdzhezwwvaiq", model.managedIdentityResourceId());
        Assertions.assertEquals("onkp", model.cosmosDbAccountResourceId());
        Assertions.assertEquals("hqyikvy", model.cosmosDbDatabase());
        Assertions.assertEquals("auy", model.cosmosDbContainer());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-05T06:39:57Z"), model.retrievalStartDate());
    }
}
