// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kusto.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.kusto.fluent.models.CosmosDbDataConnectionProperties;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class CosmosDbDataConnectionPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CosmosDbDataConnectionProperties model = BinaryData.fromString(
            "{\"tableName\":\"xvd\",\"mappingRuleName\":\"fwafqrouda\",\"managedIdentityResourceId\":\"pavehhr\",\"managedIdentityObjectId\":\"bunzozudh\",\"cosmosDbAccountResourceId\":\"xg\",\"cosmosDbDatabase\":\"moy\",\"cosmosDbContainer\":\"cdyuibhmfdnbzyd\",\"retrievalStartDate\":\"2021-04-24T12:16:29Z\",\"provisioningState\":\"Creating\"}")
            .toObject(CosmosDbDataConnectionProperties.class);
        Assertions.assertEquals("xvd", model.tableName());
        Assertions.assertEquals("fwafqrouda", model.mappingRuleName());
        Assertions.assertEquals("pavehhr", model.managedIdentityResourceId());
        Assertions.assertEquals("xg", model.cosmosDbAccountResourceId());
        Assertions.assertEquals("moy", model.cosmosDbDatabase());
        Assertions.assertEquals("cdyuibhmfdnbzyd", model.cosmosDbContainer());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-24T12:16:29Z"), model.retrievalStartDate());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CosmosDbDataConnectionProperties model = new CosmosDbDataConnectionProperties().withTableName("xvd")
            .withMappingRuleName("fwafqrouda")
            .withManagedIdentityResourceId("pavehhr")
            .withCosmosDbAccountResourceId("xg")
            .withCosmosDbDatabase("moy")
            .withCosmosDbContainer("cdyuibhmfdnbzyd")
            .withRetrievalStartDate(OffsetDateTime.parse("2021-04-24T12:16:29Z"));
        model = BinaryData.fromObject(model).toObject(CosmosDbDataConnectionProperties.class);
        Assertions.assertEquals("xvd", model.tableName());
        Assertions.assertEquals("fwafqrouda", model.mappingRuleName());
        Assertions.assertEquals("pavehhr", model.managedIdentityResourceId());
        Assertions.assertEquals("xg", model.cosmosDbAccountResourceId());
        Assertions.assertEquals("moy", model.cosmosDbDatabase());
        Assertions.assertEquals("cdyuibhmfdnbzyd", model.cosmosDbContainer());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-24T12:16:29Z"), model.retrievalStartDate());
    }
}
