// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kusto.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.kusto.fluent.models.CalloutPolicyInner;
import com.azure.resourcemanager.kusto.models.CalloutPoliciesList;
import com.azure.resourcemanager.kusto.models.CalloutType;
import com.azure.resourcemanager.kusto.models.OutboundAccess;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class CalloutPoliciesListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CalloutPoliciesList model = BinaryData.fromString(
            "{\"value\":[{\"calloutUriRegex\":\"ybvpay\",\"calloutType\":\"sandbox_artifacts\",\"outboundAccess\":\"Deny\",\"calloutId\":\"px\"},{\"calloutUriRegex\":\"jplmagstcy\",\"calloutType\":\"cosmosdb\",\"outboundAccess\":\"Allow\",\"calloutId\":\"rkdbdgiogsjkmnwq\"}],\"nextLink\":\"obaiyhddviaceg\"}")
            .toObject(CalloutPoliciesList.class);
        Assertions.assertEquals("ybvpay", model.value().get(0).calloutUriRegex());
        Assertions.assertEquals(CalloutType.SANDBOX_ARTIFACTS, model.value().get(0).calloutType());
        Assertions.assertEquals(OutboundAccess.DENY, model.value().get(0).outboundAccess());
        Assertions.assertEquals("obaiyhddviaceg", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CalloutPoliciesList model = new CalloutPoliciesList().withValue(Arrays.asList(
            new CalloutPolicyInner().withCalloutUriRegex("ybvpay")
                .withCalloutType(CalloutType.SANDBOX_ARTIFACTS)
                .withOutboundAccess(OutboundAccess.DENY),
            new CalloutPolicyInner().withCalloutUriRegex("jplmagstcy")
                .withCalloutType(CalloutType.COSMOSDB)
                .withOutboundAccess(OutboundAccess.ALLOW)))
            .withNextLink("obaiyhddviaceg");
        model = BinaryData.fromObject(model).toObject(CalloutPoliciesList.class);
        Assertions.assertEquals("ybvpay", model.value().get(0).calloutUriRegex());
        Assertions.assertEquals(CalloutType.SANDBOX_ARTIFACTS, model.value().get(0).calloutType());
        Assertions.assertEquals(OutboundAccess.DENY, model.value().get(0).outboundAccess());
        Assertions.assertEquals("obaiyhddviaceg", model.nextLink());
    }
}
