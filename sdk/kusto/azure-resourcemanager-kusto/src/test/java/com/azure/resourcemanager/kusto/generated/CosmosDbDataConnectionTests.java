// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kusto.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.kusto.models.CosmosDbDataConnection;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class CosmosDbDataConnectionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CosmosDbDataConnection model = BinaryData.fromString(
            "{\"kind\":\"CosmosDb\",\"properties\":{\"tableName\":\"xgketwz\",\"mappingRuleName\":\"zjhfjmhvv\",\"managedIdentityResourceId\":\"uvgp\",\"managedIdentityObjectId\":\"neqsxvmh\",\"cosmosDbAccountResourceId\":\"buzjyih\",\"cosmosDbDatabase\":\"as\",\"cosmosDbContainer\":\"hudypohyuemsl\",\"retrievalStartDate\":\"2021-08-05T10:43:49Z\",\"provisioningState\":\"Running\"},\"location\":\"pfoobr\",\"id\":\"ttymsjny\",\"name\":\"qdnfwqzdz\",\"type\":\"tilaxh\"}")
            .toObject(CosmosDbDataConnection.class);
        Assertions.assertEquals("pfoobr", model.location());
        Assertions.assertEquals("xgketwz", model.tableName());
        Assertions.assertEquals("zjhfjmhvv", model.mappingRuleName());
        Assertions.assertEquals("uvgp", model.managedIdentityResourceId());
        Assertions.assertEquals("buzjyih", model.cosmosDbAccountResourceId());
        Assertions.assertEquals("as", model.cosmosDbDatabase());
        Assertions.assertEquals("hudypohyuemsl", model.cosmosDbContainer());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-05T10:43:49Z"), model.retrievalStartDate());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CosmosDbDataConnection model = new CosmosDbDataConnection().withLocation("pfoobr")
            .withTableName("xgketwz")
            .withMappingRuleName("zjhfjmhvv")
            .withManagedIdentityResourceId("uvgp")
            .withCosmosDbAccountResourceId("buzjyih")
            .withCosmosDbDatabase("as")
            .withCosmosDbContainer("hudypohyuemsl")
            .withRetrievalStartDate(OffsetDateTime.parse("2021-08-05T10:43:49Z"));
        model = BinaryData.fromObject(model).toObject(CosmosDbDataConnection.class);
        Assertions.assertEquals("pfoobr", model.location());
        Assertions.assertEquals("xgketwz", model.tableName());
        Assertions.assertEquals("zjhfjmhvv", model.mappingRuleName());
        Assertions.assertEquals("uvgp", model.managedIdentityResourceId());
        Assertions.assertEquals("buzjyih", model.cosmosDbAccountResourceId());
        Assertions.assertEquals("as", model.cosmosDbDatabase());
        Assertions.assertEquals("hudypohyuemsl", model.cosmosDbContainer());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-05T10:43:49Z"), model.retrievalStartDate());
    }
}
