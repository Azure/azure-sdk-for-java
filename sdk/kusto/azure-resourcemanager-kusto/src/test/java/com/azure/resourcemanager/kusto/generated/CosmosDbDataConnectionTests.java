// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kusto.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.kusto.models.CosmosDbDataConnection;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class CosmosDbDataConnectionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CosmosDbDataConnection model =
            BinaryData
                .fromString(
                    "{\"kind\":\"CosmosDb\",\"properties\":{\"tableName\":\"obaiyhddviaceg\",\"mappingRuleName\":\"m\",\"managedIdentityResourceId\":\"tfpmvmemfnczdw\",\"managedIdentityObjectId\":\"b\",\"cosmosDbAccountResourceId\":\"lxlllchpo\",\"cosmosDbDatabase\":\"bzevwrd\",\"cosmosDbContainer\":\"hfuk\",\"retrievalStartDate\":\"2021-04-26T19:15:59Z\",\"provisioningState\":\"Moving\"},\"location\":\"wsmystuluqypf\",\"id\":\"vlerchpqbmfpjba\",\"name\":\"widf\",\"type\":\"xsspuunnoxyhk\"}")
                .toObject(CosmosDbDataConnection.class);
        Assertions.assertEquals("wsmystuluqypf", model.location());
        Assertions.assertEquals("obaiyhddviaceg", model.tableName());
        Assertions.assertEquals("m", model.mappingRuleName());
        Assertions.assertEquals("tfpmvmemfnczdw", model.managedIdentityResourceId());
        Assertions.assertEquals("lxlllchpo", model.cosmosDbAccountResourceId());
        Assertions.assertEquals("bzevwrd", model.cosmosDbDatabase());
        Assertions.assertEquals("hfuk", model.cosmosDbContainer());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-26T19:15:59Z"), model.retrievalStartDate());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CosmosDbDataConnection model =
            new CosmosDbDataConnection()
                .withLocation("wsmystuluqypf")
                .withTableName("obaiyhddviaceg")
                .withMappingRuleName("m")
                .withManagedIdentityResourceId("tfpmvmemfnczdw")
                .withCosmosDbAccountResourceId("lxlllchpo")
                .withCosmosDbDatabase("bzevwrd")
                .withCosmosDbContainer("hfuk")
                .withRetrievalStartDate(OffsetDateTime.parse("2021-04-26T19:15:59Z"));
        model = BinaryData.fromObject(model).toObject(CosmosDbDataConnection.class);
        Assertions.assertEquals("wsmystuluqypf", model.location());
        Assertions.assertEquals("obaiyhddviaceg", model.tableName());
        Assertions.assertEquals("m", model.mappingRuleName());
        Assertions.assertEquals("tfpmvmemfnczdw", model.managedIdentityResourceId());
        Assertions.assertEquals("lxlllchpo", model.cosmosDbAccountResourceId());
        Assertions.assertEquals("bzevwrd", model.cosmosDbDatabase());
        Assertions.assertEquals("hfuk", model.cosmosDbContainer());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-26T19:15:59Z"), model.retrievalStartDate());
    }
}
