// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kusto.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.kusto.fluent.models.OperationInner;
import com.azure.resourcemanager.kusto.models.OperationDisplay;
import com.azure.resourcemanager.kusto.models.OperationListResult;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class OperationListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationListResult model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"name\":\"fdlwg\",\"display\":{\"provider\":\"sb\",\"operation\":\"ovvtgseinqfiu\",\"resource\":\"qknp\",\"description\":\"gnepttwqmsni\"},\"origin\":\"cdm\",\"properties\":\"datar\"},{\"name\":\"lpijnkrxfrd\",\"display\":{\"provider\":\"ratiz\",\"operation\":\"onasxifto\",\"resource\":\"yzhftwesgogczh\",\"description\":\"nxkrlgnyhmossxkk\"},\"origin\":\"h\",\"properties\":\"datagh\"}],\"nextLink\":\"bdhqxvcxgf\"}")
                .toObject(OperationListResult.class);
        Assertions.assertEquals("fdlwg", model.value().get(0).name());
        Assertions.assertEquals("sb", model.value().get(0).display().provider());
        Assertions.assertEquals("ovvtgseinqfiu", model.value().get(0).display().operation());
        Assertions.assertEquals("qknp", model.value().get(0).display().resource());
        Assertions.assertEquals("gnepttwqmsni", model.value().get(0).display().description());
        Assertions.assertEquals("cdm", model.value().get(0).origin());
        Assertions.assertEquals("bdhqxvcxgf", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationListResult model =
            new OperationListResult()
                .withValue(
                    Arrays
                        .asList(
                            new OperationInner()
                                .withName("fdlwg")
                                .withDisplay(
                                    new OperationDisplay()
                                        .withProvider("sb")
                                        .withOperation("ovvtgseinqfiu")
                                        .withResource("qknp")
                                        .withDescription("gnepttwqmsni"))
                                .withOrigin("cdm")
                                .withProperties("datar"),
                            new OperationInner()
                                .withName("lpijnkrxfrd")
                                .withDisplay(
                                    new OperationDisplay()
                                        .withProvider("ratiz")
                                        .withOperation("onasxifto")
                                        .withResource("yzhftwesgogczh")
                                        .withDescription("nxkrlgnyhmossxkk"))
                                .withOrigin("h")
                                .withProperties("datagh")))
                .withNextLink("bdhqxvcxgf");
        model = BinaryData.fromObject(model).toObject(OperationListResult.class);
        Assertions.assertEquals("fdlwg", model.value().get(0).name());
        Assertions.assertEquals("sb", model.value().get(0).display().provider());
        Assertions.assertEquals("ovvtgseinqfiu", model.value().get(0).display().operation());
        Assertions.assertEquals("qknp", model.value().get(0).display().resource());
        Assertions.assertEquals("gnepttwqmsni", model.value().get(0).display().description());
        Assertions.assertEquals("cdm", model.value().get(0).origin());
        Assertions.assertEquals("bdhqxvcxgf", model.nextLink());
    }
}
