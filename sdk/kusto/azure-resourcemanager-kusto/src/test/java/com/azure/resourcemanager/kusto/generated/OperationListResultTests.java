// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kusto.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.kusto.fluent.models.OperationInner;
import com.azure.resourcemanager.kusto.models.OperationDisplay;
import com.azure.resourcemanager.kusto.models.OperationListResult;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class OperationListResultTests {
    @Test
    public void testDeserialize() {
        OperationListResult model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"name\":\"tujitcjedft\",\"display\":{\"provider\":\"ezkojvdcp\",\"operation\":\"oqouicybxarzgszu\",\"resource\":\"x\",\"description\":\"q\"},\"origin\":\"idoamciodhkha\"}],\"nextLink\":\"hnzbonl\"}")
                .toObject(OperationListResult.class);
        Assertions.assertEquals("tujitcjedft", model.value().get(0).name());
        Assertions.assertEquals("ezkojvdcp", model.value().get(0).display().provider());
        Assertions.assertEquals("oqouicybxarzgszu", model.value().get(0).display().operation());
        Assertions.assertEquals("x", model.value().get(0).display().resource());
        Assertions.assertEquals("q", model.value().get(0).display().description());
        Assertions.assertEquals("idoamciodhkha", model.value().get(0).origin());
        Assertions.assertEquals("hnzbonl", model.nextLink());
    }

    @Test
    public void testSerialize() {
        OperationListResult model =
            new OperationListResult()
                .withValue(
                    Arrays
                        .asList(
                            new OperationInner()
                                .withName("tujitcjedft")
                                .withDisplay(
                                    new OperationDisplay()
                                        .withProvider("ezkojvdcp")
                                        .withOperation("oqouicybxarzgszu")
                                        .withResource("x")
                                        .withDescription("q"))
                                .withOrigin("idoamciodhkha")))
                .withNextLink("hnzbonl");
        model = BinaryData.fromObject(model).toObject(OperationListResult.class);
        Assertions.assertEquals("tujitcjedft", model.value().get(0).name());
        Assertions.assertEquals("ezkojvdcp", model.value().get(0).display().provider());
        Assertions.assertEquals("oqouicybxarzgszu", model.value().get(0).display().operation());
        Assertions.assertEquals("x", model.value().get(0).display().resource());
        Assertions.assertEquals("q", model.value().get(0).display().description());
        Assertions.assertEquals("idoamciodhkha", model.value().get(0).origin());
        Assertions.assertEquals("hnzbonl", model.nextLink());
    }
}
