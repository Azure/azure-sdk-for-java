// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kusto.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.kusto.models.ReadWriteDatabase;
import java.time.Duration;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class ReadWriteDatabaseTests {
    @Test
    public void testDeserialize() {
        ReadWriteDatabase model =
            BinaryData
                .fromString(
                    "{\"kind\":\"ReadWrite\",\"properties\":{\"provisioningState\":\"Deleting\",\"softDeletePeriod\":\"PT221H17M27S\",\"hotCachePeriod\":\"PT115H47M50S\",\"statistics\":{\"size\":20.182014},\"isFollowed\":true},\"location\":\"fzxiavrmb\",\"id\":\"onok\",\"name\":\"xrjqcirgzpfrlazs\",\"type\":\"rnwoiindfp\"}")
                .toObject(ReadWriteDatabase.class);
        Assertions.assertEquals("fzxiavrmb", model.location());
        Assertions.assertEquals(Duration.parse("PT221H17M27S"), model.softDeletePeriod());
        Assertions.assertEquals(Duration.parse("PT115H47M50S"), model.hotCachePeriod());
    }

    @Test
    public void testSerialize() {
        ReadWriteDatabase model =
            new ReadWriteDatabase()
                .withLocation("fzxiavrmb")
                .withSoftDeletePeriod(Duration.parse("PT221H17M27S"))
                .withHotCachePeriod(Duration.parse("PT115H47M50S"));
        model = BinaryData.fromObject(model).toObject(ReadWriteDatabase.class);
        Assertions.assertEquals("fzxiavrmb", model.location());
        Assertions.assertEquals(Duration.parse("PT221H17M27S"), model.softDeletePeriod());
        Assertions.assertEquals(Duration.parse("PT115H47M50S"), model.hotCachePeriod());
    }
}
