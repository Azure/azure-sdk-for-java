// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kusto.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.kusto.fluent.models.OperationInner;
import com.azure.resourcemanager.kusto.models.OperationDisplay;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class OperationInnerTests {
    @Test
    public void testDeserialize() {
        OperationInner model =
            BinaryData
                .fromString(
                    "{\"name\":\"toego\",\"display\":{\"provider\":\"bwh\",\"operation\":\"z\",\"resource\":\"mrv\",\"description\":\"ztvbtqgsfr\"},\"origin\":\"yzkoowtlmngu\"}")
                .toObject(OperationInner.class);
        Assertions.assertEquals("toego", model.name());
        Assertions.assertEquals("bwh", model.display().provider());
        Assertions.assertEquals("z", model.display().operation());
        Assertions.assertEquals("mrv", model.display().resource());
        Assertions.assertEquals("ztvbtqgsfr", model.display().description());
        Assertions.assertEquals("yzkoowtlmngu", model.origin());
    }

    @Test
    public void testSerialize() {
        OperationInner model =
            new OperationInner()
                .withName("toego")
                .withDisplay(
                    new OperationDisplay()
                        .withProvider("bwh")
                        .withOperation("z")
                        .withResource("mrv")
                        .withDescription("ztvbtqgsfr"))
                .withOrigin("yzkoowtlmngu");
        model = BinaryData.fromObject(model).toObject(OperationInner.class);
        Assertions.assertEquals("toego", model.name());
        Assertions.assertEquals("bwh", model.display().provider());
        Assertions.assertEquals("z", model.display().operation());
        Assertions.assertEquals("mrv", model.display().resource());
        Assertions.assertEquals("ztvbtqgsfr", model.display().description());
        Assertions.assertEquals("yzkoowtlmngu", model.origin());
    }
}
