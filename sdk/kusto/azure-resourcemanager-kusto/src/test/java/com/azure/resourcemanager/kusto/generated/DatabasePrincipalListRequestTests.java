// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kusto.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.kusto.fluent.models.DatabasePrincipalInner;
import com.azure.resourcemanager.kusto.models.DatabasePrincipalListRequest;
import com.azure.resourcemanager.kusto.models.DatabasePrincipalRole;
import com.azure.resourcemanager.kusto.models.DatabasePrincipalType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DatabasePrincipalListRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DatabasePrincipalListRequest model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"role\":\"UnrestrictedViewer\",\"name\":\"hxbld\",\"type\":\"App\",\"fqn\":\"wrlkdmtn\",\"email\":\"ok\",\"appId\":\"llxdyhgs\",\"tenantName\":\"cogjltdtbn\"}]}")
                .toObject(DatabasePrincipalListRequest.class);
        Assertions.assertEquals(DatabasePrincipalRole.UNRESTRICTED_VIEWER, model.value().get(0).role());
        Assertions.assertEquals("hxbld", model.value().get(0).name());
        Assertions.assertEquals(DatabasePrincipalType.APP, model.value().get(0).type());
        Assertions.assertEquals("wrlkdmtn", model.value().get(0).fqn());
        Assertions.assertEquals("ok", model.value().get(0).email());
        Assertions.assertEquals("llxdyhgs", model.value().get(0).appId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DatabasePrincipalListRequest model =
            new DatabasePrincipalListRequest()
                .withValue(
                    Arrays
                        .asList(
                            new DatabasePrincipalInner()
                                .withRole(DatabasePrincipalRole.UNRESTRICTED_VIEWER)
                                .withName("hxbld")
                                .withType(DatabasePrincipalType.APP)
                                .withFqn("wrlkdmtn")
                                .withEmail("ok")
                                .withAppId("llxdyhgs")));
        model = BinaryData.fromObject(model).toObject(DatabasePrincipalListRequest.class);
        Assertions.assertEquals(DatabasePrincipalRole.UNRESTRICTED_VIEWER, model.value().get(0).role());
        Assertions.assertEquals("hxbld", model.value().get(0).name());
        Assertions.assertEquals(DatabasePrincipalType.APP, model.value().get(0).type());
        Assertions.assertEquals("wrlkdmtn", model.value().get(0).fqn());
        Assertions.assertEquals("ok", model.value().get(0).email());
        Assertions.assertEquals("llxdyhgs", model.value().get(0).appId());
    }
}
