// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kusto.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.kusto.fluent.models.DatabasePrincipalInner;
import com.azure.resourcemanager.kusto.models.DatabasePrincipalListRequest;
import com.azure.resourcemanager.kusto.models.DatabasePrincipalRole;
import com.azure.resourcemanager.kusto.models.DatabasePrincipalType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DatabasePrincipalListRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DatabasePrincipalListRequest model = BinaryData.fromString(
            "{\"value\":[{\"role\":\"Viewer\",\"name\":\"rbuukzclewyhmlwp\",\"type\":\"User\",\"fqn\":\"zpof\",\"email\":\"ckw\",\"appId\":\"zqwhxxbuyqaxzfeq\",\"tenantName\":\"ppriol\"},{\"role\":\"Viewer\",\"name\":\"rjaltolmncw\",\"type\":\"User\",\"fqn\":\"qwcsdbnwdcfhuc\",\"email\":\"pfuvglsbjjca\",\"appId\":\"xbvtvudu\",\"tenantName\":\"cormr\"},{\"role\":\"Ingestor\",\"name\":\"qtvcofudflvkgj\",\"type\":\"Group\",\"fqn\":\"dknnqvsazn\",\"email\":\"tor\",\"appId\":\"sgsahmkycgr\",\"tenantName\":\"wjue\"}]}")
            .toObject(DatabasePrincipalListRequest.class);
        Assertions.assertEquals(DatabasePrincipalRole.VIEWER, model.value().get(0).role());
        Assertions.assertEquals("rbuukzclewyhmlwp", model.value().get(0).name());
        Assertions.assertEquals(DatabasePrincipalType.USER, model.value().get(0).type());
        Assertions.assertEquals("zpof", model.value().get(0).fqn());
        Assertions.assertEquals("ckw", model.value().get(0).email());
        Assertions.assertEquals("zqwhxxbuyqaxzfeq", model.value().get(0).appId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DatabasePrincipalListRequest model = new DatabasePrincipalListRequest().withValue(Arrays.asList(
            new DatabasePrincipalInner().withRole(DatabasePrincipalRole.VIEWER)
                .withName("rbuukzclewyhmlwp")
                .withType(DatabasePrincipalType.USER)
                .withFqn("zpof")
                .withEmail("ckw")
                .withAppId("zqwhxxbuyqaxzfeq"),
            new DatabasePrincipalInner().withRole(DatabasePrincipalRole.VIEWER)
                .withName("rjaltolmncw")
                .withType(DatabasePrincipalType.USER)
                .withFqn("qwcsdbnwdcfhuc")
                .withEmail("pfuvglsbjjca")
                .withAppId("xbvtvudu"),
            new DatabasePrincipalInner().withRole(DatabasePrincipalRole.INGESTOR)
                .withName("qtvcofudflvkgj")
                .withType(DatabasePrincipalType.GROUP)
                .withFqn("dknnqvsazn")
                .withEmail("tor")
                .withAppId("sgsahmkycgr")));
        model = BinaryData.fromObject(model).toObject(DatabasePrincipalListRequest.class);
        Assertions.assertEquals(DatabasePrincipalRole.VIEWER, model.value().get(0).role());
        Assertions.assertEquals("rbuukzclewyhmlwp", model.value().get(0).name());
        Assertions.assertEquals(DatabasePrincipalType.USER, model.value().get(0).type());
        Assertions.assertEquals("zpof", model.value().get(0).fqn());
        Assertions.assertEquals("ckw", model.value().get(0).email());
        Assertions.assertEquals("zqwhxxbuyqaxzfeq", model.value().get(0).appId());
    }
}
