// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kusto.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.kusto.KustoManager;
import com.azure.resourcemanager.kusto.models.AttachedDatabaseConfiguration;
import com.azure.resourcemanager.kusto.models.DefaultPrincipalsModificationKind;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AttachedDatabaseConfigurationsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"location\":\"dxxewuninv\",\"properties\":{\"provisioningState\":\"Canceled\",\"databaseName\":\"h\",\"clusterResourceId\":\"qdtvqecrqctmxx\",\"attachedDatabaseNames\":[\"dmflhuytx\"],\"defaultPrincipalsModificationKind\":\"Replace\",\"tableLevelSharingProperties\":{\"tablesToInclude\":[\"apxbannovvoxczy\",\"prwnwvroevytlyo\",\"rrrouuxvnsa\"],\"tablesToExclude\":[\"rymo\",\"izrxklob\",\"xnazpmkml\",\"vevfxz\"],\"externalTablesToInclude\":[\"hbzxli\",\"hrdd\",\"tfgxqbawpcb\",\"nzqcy\"],\"externalTablesToExclude\":[\"p\",\"ofyuicd\",\"zb\"],\"materializedViewsToInclude\":[\"wwgbdv\"],\"materializedViewsToExclude\":[\"dmhm\",\"ffplfmuvapckcc\"],\"functionsToInclude\":[\"weyoxoy\"],\"functionsToExclude\":[\"phaimmoi\"]},\"databaseNameOverride\":\"qboshbra\",\"databaseNamePrefix\":\"pyyrmfs\"},\"id\":\"bpav\",\"name\":\"opfppdbwnupgah\",\"type\":\"kuma\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        KustoManager manager = KustoManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        AttachedDatabaseConfiguration response = manager.attachedDatabaseConfigurations()
            .getWithResponse("lcqxypokk", "minqcym", "zng", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("dxxewuninv", response.location());
        Assertions.assertEquals("h", response.databaseName());
        Assertions.assertEquals("qdtvqecrqctmxx", response.clusterResourceId());
        Assertions.assertEquals(DefaultPrincipalsModificationKind.REPLACE,
            response.defaultPrincipalsModificationKind());
        Assertions.assertEquals("apxbannovvoxczy", response.tableLevelSharingProperties().tablesToInclude().get(0));
        Assertions.assertEquals("rymo", response.tableLevelSharingProperties().tablesToExclude().get(0));
        Assertions.assertEquals("hbzxli", response.tableLevelSharingProperties().externalTablesToInclude().get(0));
        Assertions.assertEquals("p", response.tableLevelSharingProperties().externalTablesToExclude().get(0));
        Assertions.assertEquals("wwgbdv", response.tableLevelSharingProperties().materializedViewsToInclude().get(0));
        Assertions.assertEquals("dmhm", response.tableLevelSharingProperties().materializedViewsToExclude().get(0));
        Assertions.assertEquals("weyoxoy", response.tableLevelSharingProperties().functionsToInclude().get(0));
        Assertions.assertEquals("phaimmoi", response.tableLevelSharingProperties().functionsToExclude().get(0));
        Assertions.assertEquals("qboshbra", response.databaseNameOverride());
        Assertions.assertEquals("pyyrmfs", response.databaseNamePrefix());
    }
}
