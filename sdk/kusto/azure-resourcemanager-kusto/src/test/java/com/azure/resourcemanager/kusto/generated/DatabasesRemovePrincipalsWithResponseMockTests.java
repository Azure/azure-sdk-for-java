// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kusto.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.kusto.KustoManager;
import com.azure.resourcemanager.kusto.fluent.models.DatabasePrincipalInner;
import com.azure.resourcemanager.kusto.models.DatabasePrincipalListRequest;
import com.azure.resourcemanager.kusto.models.DatabasePrincipalListResult;
import com.azure.resourcemanager.kusto.models.DatabasePrincipalRole;
import com.azure.resourcemanager.kusto.models.DatabasePrincipalType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DatabasesRemovePrincipalsWithResponseMockTests {
    @Test
    public void testRemovePrincipalsWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"role\":\"Admin\",\"name\":\"dfgkmtdh\",\"type\":\"User\",\"fqn\":\"gb\",\"email\":\"juahokqto\",\"appId\":\"auxofshfph\",\"tenantName\":\"nulaiywzejywhsl\"},{\"role\":\"Monitor\",\"name\":\"ojpllndnpdwrpqaf\",\"type\":\"User\",\"fqn\":\"gsnnf\",\"email\":\"et\",\"appId\":\"ypococtfjgtixr\",\"tenantName\":\"zuyt\"},{\"role\":\"UnrestrictedViewer\",\"name\":\"mlmuowol\",\"type\":\"User\",\"fqn\":\"iropionszon\",\"email\":\"ngajinnixjawrtmj\",\"appId\":\"myccx\",\"tenantName\":\"hcoxov\"},{\"role\":\"Viewer\",\"name\":\"khenlus\",\"type\":\"App\",\"fqn\":\"dtjxtxrdcqt\",\"email\":\"idttgepus\",\"appId\":\"yjtcvuwk\",\"tenantName\":\"iziesfuughtuq\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        KustoManager manager = KustoManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        DatabasePrincipalListResult response = manager.databases()
            .removePrincipalsWithResponse("fbcgwgcloxoebqin", "ipnwj", "ujqlafcbahh",
                new DatabasePrincipalListRequest().withValue(Arrays.asList(
                    new DatabasePrincipalInner().withRole(DatabasePrincipalRole.VIEWER)
                        .withName("foiyjwpfilk")
                        .withType(DatabasePrincipalType.GROUP)
                        .withFqn("holvdn")
                        .withEmail("iauogphuartv")
                        .withAppId("ukyefchnmnahmnxh"),
                    new DatabasePrincipalInner().withRole(DatabasePrincipalRole.UNRESTRICTED_VIEWER)
                        .withName("oxffif")
                        .withType(DatabasePrincipalType.USER)
                        .withFqn("rsnewmozqvbubqma")
                        .withEmail("sycxhxzgaz")
                        .withAppId("abo"))),
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(DatabasePrincipalRole.ADMIN, response.value().get(0).role());
        Assertions.assertEquals("dfgkmtdh", response.value().get(0).name());
        Assertions.assertEquals(DatabasePrincipalType.USER, response.value().get(0).type());
        Assertions.assertEquals("gb", response.value().get(0).fqn());
        Assertions.assertEquals("juahokqto", response.value().get(0).email());
        Assertions.assertEquals("auxofshfph", response.value().get(0).appId());
    }
}
