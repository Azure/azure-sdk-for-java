// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kusto.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.kusto.fluent.models.OperationResultInner;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class OperationResultInnerTests {
    @Test
    public void testDeserialize() {
        OperationResultInner model =
            BinaryData
                .fromString(
                    "{\"id\":\"lmkk\",\"name\":\"vdlhewpusdsttwv\",\"status\":\"Failed\",\"startTime\":\"2021-04-23T12:39:39Z\",\"endTime\":\"2021-11-12T06:38:22Z\",\"percentComplete\":89.35053284729781,\"properties\":{\"operationKind\":\"qmoa\",\"provisioningState\":\"Running\",\"operationState\":\"m\"},\"error\":{\"code\":\"wr\",\"message\":\"rtwaenuuzko\"}}")
                .toObject(OperationResultInner.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-23T12:39:39Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-12T06:38:22Z"), model.endTime());
        Assertions.assertEquals(89.35053284729781D, model.percentComplete());
        Assertions.assertEquals("qmoa", model.operationKind());
        Assertions.assertEquals("m", model.operationState());
        Assertions.assertEquals("wr", model.code());
        Assertions.assertEquals("rtwaenuuzko", model.message());
    }

    @Test
    public void testSerialize() {
        OperationResultInner model =
            new OperationResultInner()
                .withStartTime(OffsetDateTime.parse("2021-04-23T12:39:39Z"))
                .withEndTime(OffsetDateTime.parse("2021-11-12T06:38:22Z"))
                .withPercentComplete(89.35053284729781D)
                .withOperationKind("qmoa")
                .withOperationState("m")
                .withCode("wr")
                .withMessage("rtwaenuuzko");
        model = BinaryData.fromObject(model).toObject(OperationResultInner.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-23T12:39:39Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-12T06:38:22Z"), model.endTime());
        Assertions.assertEquals(89.35053284729781D, model.percentComplete());
        Assertions.assertEquals("qmoa", model.operationKind());
        Assertions.assertEquals("m", model.operationState());
        Assertions.assertEquals("wr", model.code());
        Assertions.assertEquals("rtwaenuuzko", model.message());
    }
}
