// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kusto.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.kusto.fluent.models.AzureResourceSkuInner;
import com.azure.resourcemanager.kusto.models.AzureCapacity;
import com.azure.resourcemanager.kusto.models.AzureScaleType;
import com.azure.resourcemanager.kusto.models.AzureSku;
import com.azure.resourcemanager.kusto.models.AzureSkuName;
import com.azure.resourcemanager.kusto.models.AzureSkuTier;
import org.junit.jupiter.api.Assertions;

public final class AzureResourceSkuInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureResourceSkuInner model =
            BinaryData
                .fromString(
                    "{\"resourceType\":\"ndslgnayqigynduh\",\"sku\":{\"name\":\"Standard_EC8as_v5+1TB_PS\",\"capacity\":1238517729,\"tier\":\"Standard\"},\"capacity\":{\"scaleType\":\"manual\",\"minimum\":918393543,\"maximum\":1117250592,\"default\":1615397265}}")
                .toObject(AzureResourceSkuInner.class);
        Assertions.assertEquals("ndslgnayqigynduh", model.resourceType());
        Assertions.assertEquals(AzureSkuName.STANDARD_EC8AS_V5_1TB_PS, model.sku().name());
        Assertions.assertEquals(1238517729, model.sku().capacity());
        Assertions.assertEquals(AzureSkuTier.STANDARD, model.sku().tier());
        Assertions.assertEquals(AzureScaleType.MANUAL, model.capacity().scaleType());
        Assertions.assertEquals(918393543, model.capacity().minimum());
        Assertions.assertEquals(1117250592, model.capacity().maximum());
        Assertions.assertEquals(1615397265, model.capacity().defaultProperty());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureResourceSkuInner model =
            new AzureResourceSkuInner()
                .withResourceType("ndslgnayqigynduh")
                .withSku(
                    new AzureSku()
                        .withName(AzureSkuName.STANDARD_EC8AS_V5_1TB_PS)
                        .withCapacity(1238517729)
                        .withTier(AzureSkuTier.STANDARD))
                .withCapacity(
                    new AzureCapacity()
                        .withScaleType(AzureScaleType.MANUAL)
                        .withMinimum(918393543)
                        .withMaximum(1117250592)
                        .withDefaultProperty(1615397265));
        model = BinaryData.fromObject(model).toObject(AzureResourceSkuInner.class);
        Assertions.assertEquals("ndslgnayqigynduh", model.resourceType());
        Assertions.assertEquals(AzureSkuName.STANDARD_EC8AS_V5_1TB_PS, model.sku().name());
        Assertions.assertEquals(1238517729, model.sku().capacity());
        Assertions.assertEquals(AzureSkuTier.STANDARD, model.sku().tier());
        Assertions.assertEquals(AzureScaleType.MANUAL, model.capacity().scaleType());
        Assertions.assertEquals(918393543, model.capacity().minimum());
        Assertions.assertEquals(1117250592, model.capacity().maximum());
        Assertions.assertEquals(1615397265, model.capacity().defaultProperty());
    }
}
