// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kusto.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.kusto.fluent.models.EventHubConnectionProperties;
import com.azure.resourcemanager.kusto.models.Compression;
import com.azure.resourcemanager.kusto.models.DatabaseRouting;
import com.azure.resourcemanager.kusto.models.EventHubDataFormat;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class EventHubConnectionPropertiesTests {
    @Test
    public void testDeserialize() {
        EventHubConnectionProperties model =
            BinaryData
                .fromString(
                    "{\"eventHubResourceId\":\"cxnavv\",\"consumerGroup\":\"xqi\",\"tableName\":\"qunyowxwlmdjr\",\"mappingRuleName\":\"fgbvfvpdbo\",\"dataFormat\":\"W3CLOGFILE\",\"eventSystemProperties\":[\"sjq\",\"hkr\"],\"compression\":\"GZip\",\"provisioningState\":\"Moving\",\"managedIdentityResourceId\":\"b\",\"managedIdentityObjectId\":\"p\",\"databaseRouting\":\"Multi\",\"retrievalStartDate\":\"2021-01-11T11:05:07Z\"}")
                .toObject(EventHubConnectionProperties.class);
        Assertions.assertEquals("cxnavv", model.eventHubResourceId());
        Assertions.assertEquals("xqi", model.consumerGroup());
        Assertions.assertEquals("qunyowxwlmdjr", model.tableName());
        Assertions.assertEquals("fgbvfvpdbo", model.mappingRuleName());
        Assertions.assertEquals(EventHubDataFormat.W3CLOGFILE, model.dataFormat());
        Assertions.assertEquals("sjq", model.eventSystemProperties().get(0));
        Assertions.assertEquals(Compression.GZIP, model.compression());
        Assertions.assertEquals("b", model.managedIdentityResourceId());
        Assertions.assertEquals(DatabaseRouting.MULTI, model.databaseRouting());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-11T11:05:07Z"), model.retrievalStartDate());
    }

    @Test
    public void testSerialize() {
        EventHubConnectionProperties model =
            new EventHubConnectionProperties()
                .withEventHubResourceId("cxnavv")
                .withConsumerGroup("xqi")
                .withTableName("qunyowxwlmdjr")
                .withMappingRuleName("fgbvfvpdbo")
                .withDataFormat(EventHubDataFormat.W3CLOGFILE)
                .withEventSystemProperties(Arrays.asList("sjq", "hkr"))
                .withCompression(Compression.GZIP)
                .withManagedIdentityResourceId("b")
                .withDatabaseRouting(DatabaseRouting.MULTI)
                .withRetrievalStartDate(OffsetDateTime.parse("2021-01-11T11:05:07Z"));
        model = BinaryData.fromObject(model).toObject(EventHubConnectionProperties.class);
        Assertions.assertEquals("cxnavv", model.eventHubResourceId());
        Assertions.assertEquals("xqi", model.consumerGroup());
        Assertions.assertEquals("qunyowxwlmdjr", model.tableName());
        Assertions.assertEquals("fgbvfvpdbo", model.mappingRuleName());
        Assertions.assertEquals(EventHubDataFormat.W3CLOGFILE, model.dataFormat());
        Assertions.assertEquals("sjq", model.eventSystemProperties().get(0));
        Assertions.assertEquals(Compression.GZIP, model.compression());
        Assertions.assertEquals("b", model.managedIdentityResourceId());
        Assertions.assertEquals(DatabaseRouting.MULTI, model.databaseRouting());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-11T11:05:07Z"), model.retrievalStartDate());
    }
}
