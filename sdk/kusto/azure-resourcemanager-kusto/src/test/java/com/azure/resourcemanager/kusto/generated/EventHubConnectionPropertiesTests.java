// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kusto.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.kusto.fluent.models.EventHubConnectionProperties;
import com.azure.resourcemanager.kusto.models.Compression;
import com.azure.resourcemanager.kusto.models.DatabaseRouting;
import com.azure.resourcemanager.kusto.models.EventHubDataFormat;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class EventHubConnectionPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        EventHubConnectionProperties model =
            BinaryData
                .fromString(
                    "{\"eventHubResourceId\":\"prvkwcfzqljyxgtc\",\"consumerGroup\":\"heyd\",\"tableName\":\"dshmkxmaehvbbx\",\"mappingRuleName\":\"iplt\",\"dataFormat\":\"TSV\",\"eventSystemProperties\":[\"axkgx\"],\"compression\":\"None\",\"provisioningState\":\"Succeeded\",\"managedIdentityResourceId\":\"yklyhpluodpvruud\",\"managedIdentityObjectId\":\"zibt\",\"databaseRouting\":\"Single\",\"retrievalStartDate\":\"2021-02-15T06:11:31Z\"}")
                .toObject(EventHubConnectionProperties.class);
        Assertions.assertEquals("prvkwcfzqljyxgtc", model.eventHubResourceId());
        Assertions.assertEquals("heyd", model.consumerGroup());
        Assertions.assertEquals("dshmkxmaehvbbx", model.tableName());
        Assertions.assertEquals("iplt", model.mappingRuleName());
        Assertions.assertEquals(EventHubDataFormat.TSV, model.dataFormat());
        Assertions.assertEquals("axkgx", model.eventSystemProperties().get(0));
        Assertions.assertEquals(Compression.NONE, model.compression());
        Assertions.assertEquals("yklyhpluodpvruud", model.managedIdentityResourceId());
        Assertions.assertEquals(DatabaseRouting.SINGLE, model.databaseRouting());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-15T06:11:31Z"), model.retrievalStartDate());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        EventHubConnectionProperties model =
            new EventHubConnectionProperties()
                .withEventHubResourceId("prvkwcfzqljyxgtc")
                .withConsumerGroup("heyd")
                .withTableName("dshmkxmaehvbbx")
                .withMappingRuleName("iplt")
                .withDataFormat(EventHubDataFormat.TSV)
                .withEventSystemProperties(Arrays.asList("axkgx"))
                .withCompression(Compression.NONE)
                .withManagedIdentityResourceId("yklyhpluodpvruud")
                .withDatabaseRouting(DatabaseRouting.SINGLE)
                .withRetrievalStartDate(OffsetDateTime.parse("2021-02-15T06:11:31Z"));
        model = BinaryData.fromObject(model).toObject(EventHubConnectionProperties.class);
        Assertions.assertEquals("prvkwcfzqljyxgtc", model.eventHubResourceId());
        Assertions.assertEquals("heyd", model.consumerGroup());
        Assertions.assertEquals("dshmkxmaehvbbx", model.tableName());
        Assertions.assertEquals("iplt", model.mappingRuleName());
        Assertions.assertEquals(EventHubDataFormat.TSV, model.dataFormat());
        Assertions.assertEquals("axkgx", model.eventSystemProperties().get(0));
        Assertions.assertEquals(Compression.NONE, model.compression());
        Assertions.assertEquals("yklyhpluodpvruud", model.managedIdentityResourceId());
        Assertions.assertEquals(DatabaseRouting.SINGLE, model.databaseRouting());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-15T06:11:31Z"), model.retrievalStartDate());
    }
}
