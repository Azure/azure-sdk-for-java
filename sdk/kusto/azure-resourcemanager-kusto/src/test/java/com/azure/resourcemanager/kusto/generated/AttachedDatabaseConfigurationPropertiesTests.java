// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kusto.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.kusto.fluent.models.AttachedDatabaseConfigurationProperties;
import com.azure.resourcemanager.kusto.models.DefaultPrincipalsModificationKind;
import com.azure.resourcemanager.kusto.models.TableLevelSharingProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AttachedDatabaseConfigurationPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AttachedDatabaseConfigurationProperties model = BinaryData.fromString(
            "{\"provisioningState\":\"Canceled\",\"databaseName\":\"ejd\",\"clusterResourceId\":\"nxcvds\",\"attachedDatabaseNames\":[\"jivolvtnov\",\"fzg\",\"mjdftu\"],\"defaultPrincipalsModificationKind\":\"Union\",\"tableLevelSharingProperties\":{\"tablesToInclude\":[\"ucea\",\"tmczuomejwcwwqi\",\"knssxmojm\"],\"tablesToExclude\":[\"kjprvk\"],\"externalTablesToInclude\":[\"zqljyxgtczh\"],\"externalTablesToExclude\":[\"bsdshmkxmaehvbbx\",\"ripltf\"],\"materializedViewsToInclude\":[\"baxk\",\"xywr\"],\"materializedViewsToExclude\":[\"yklyhpluodpvruud\",\"gzibthostgktstv\",\"xeclzedqbcvhzlhp\",\"odqkdlwwqfb\"],\"functionsToInclude\":[\"kxtrq\"],\"functionsToExclude\":[\"mlmbtxhwgfwsrta\",\"coezbrhubskh\",\"dyg\",\"ookk\"]},\"databaseNameOverride\":\"qjbvleorfmlu\",\"databaseNamePrefix\":\"tqzfavyv\"}")
            .toObject(AttachedDatabaseConfigurationProperties.class);
        Assertions.assertEquals("ejd", model.databaseName());
        Assertions.assertEquals("nxcvds", model.clusterResourceId());
        Assertions.assertEquals(DefaultPrincipalsModificationKind.UNION, model.defaultPrincipalsModificationKind());
        Assertions.assertEquals("ucea", model.tableLevelSharingProperties().tablesToInclude().get(0));
        Assertions.assertEquals("kjprvk", model.tableLevelSharingProperties().tablesToExclude().get(0));
        Assertions.assertEquals("zqljyxgtczh", model.tableLevelSharingProperties().externalTablesToInclude().get(0));
        Assertions.assertEquals("bsdshmkxmaehvbbx",
            model.tableLevelSharingProperties().externalTablesToExclude().get(0));
        Assertions.assertEquals("baxk", model.tableLevelSharingProperties().materializedViewsToInclude().get(0));
        Assertions.assertEquals("yklyhpluodpvruud",
            model.tableLevelSharingProperties().materializedViewsToExclude().get(0));
        Assertions.assertEquals("kxtrq", model.tableLevelSharingProperties().functionsToInclude().get(0));
        Assertions.assertEquals("mlmbtxhwgfwsrta", model.tableLevelSharingProperties().functionsToExclude().get(0));
        Assertions.assertEquals("qjbvleorfmlu", model.databaseNameOverride());
        Assertions.assertEquals("tqzfavyv", model.databaseNamePrefix());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AttachedDatabaseConfigurationProperties model
            = new AttachedDatabaseConfigurationProperties().withDatabaseName("ejd")
                .withClusterResourceId("nxcvds")
                .withDefaultPrincipalsModificationKind(DefaultPrincipalsModificationKind.UNION)
                .withTableLevelSharingProperties(new TableLevelSharingProperties()
                    .withTablesToInclude(Arrays.asList("ucea", "tmczuomejwcwwqi", "knssxmojm"))
                    .withTablesToExclude(Arrays.asList("kjprvk"))
                    .withExternalTablesToInclude(Arrays.asList("zqljyxgtczh"))
                    .withExternalTablesToExclude(Arrays.asList("bsdshmkxmaehvbbx", "ripltf"))
                    .withMaterializedViewsToInclude(Arrays.asList("baxk", "xywr"))
                    .withMaterializedViewsToExclude(
                        Arrays.asList("yklyhpluodpvruud", "gzibthostgktstv", "xeclzedqbcvhzlhp", "odqkdlwwqfb"))
                    .withFunctionsToInclude(Arrays.asList("kxtrq"))
                    .withFunctionsToExclude(Arrays.asList("mlmbtxhwgfwsrta", "coezbrhubskh", "dyg", "ookk")))
                .withDatabaseNameOverride("qjbvleorfmlu")
                .withDatabaseNamePrefix("tqzfavyv");
        model = BinaryData.fromObject(model).toObject(AttachedDatabaseConfigurationProperties.class);
        Assertions.assertEquals("ejd", model.databaseName());
        Assertions.assertEquals("nxcvds", model.clusterResourceId());
        Assertions.assertEquals(DefaultPrincipalsModificationKind.UNION, model.defaultPrincipalsModificationKind());
        Assertions.assertEquals("ucea", model.tableLevelSharingProperties().tablesToInclude().get(0));
        Assertions.assertEquals("kjprvk", model.tableLevelSharingProperties().tablesToExclude().get(0));
        Assertions.assertEquals("zqljyxgtczh", model.tableLevelSharingProperties().externalTablesToInclude().get(0));
        Assertions.assertEquals("bsdshmkxmaehvbbx",
            model.tableLevelSharingProperties().externalTablesToExclude().get(0));
        Assertions.assertEquals("baxk", model.tableLevelSharingProperties().materializedViewsToInclude().get(0));
        Assertions.assertEquals("yklyhpluodpvruud",
            model.tableLevelSharingProperties().materializedViewsToExclude().get(0));
        Assertions.assertEquals("kxtrq", model.tableLevelSharingProperties().functionsToInclude().get(0));
        Assertions.assertEquals("mlmbtxhwgfwsrta", model.tableLevelSharingProperties().functionsToExclude().get(0));
        Assertions.assertEquals("qjbvleorfmlu", model.databaseNameOverride());
        Assertions.assertEquals("tqzfavyv", model.databaseNamePrefix());
    }
}
