// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kusto.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.kusto.fluent.models.AttachedDatabaseConfigurationProperties;
import com.azure.resourcemanager.kusto.models.DefaultPrincipalsModificationKind;
import com.azure.resourcemanager.kusto.models.TableLevelSharingProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AttachedDatabaseConfigurationPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AttachedDatabaseConfigurationProperties model =
            BinaryData
                .fromString(
                    "{\"provisioningState\":\"Moving\",\"databaseName\":\"wz\",\"clusterResourceId\":\"bnhlmc\",\"attachedDatabaseNames\":[\"dn\"],\"defaultPrincipalsModificationKind\":\"Replace\",\"tableLevelSharingProperties\":{\"tablesToInclude\":[\"bmhrixkwmyijejv\",\"grhbpn\",\"ixexcc\"],\"tablesToExclude\":[\"eaxhcexdrrvqahqk\",\"htpwij\",\"hyjsvfycx\"],\"externalTablesToInclude\":[\"voowvr\",\"mtg\"],\"externalTablesToExclude\":[\"pyostronzmyhgfi\",\"nsxkmcwaekrrjr\",\"afxtsgum\",\"jglikkxwslolb\"],\"materializedViewsToInclude\":[\"uzlm\",\"felfktg\"],\"materializedViewsToExclude\":[\"rpw\"],\"functionsToInclude\":[\"znoigbrn\",\"w\"],\"functionsToExclude\":[\"pn\"]},\"databaseNameOverride\":\"azej\",\"databaseNamePrefix\":\"qkagfhsxt\"}")
                .toObject(AttachedDatabaseConfigurationProperties.class);
        Assertions.assertEquals("wz", model.databaseName());
        Assertions.assertEquals("bnhlmc", model.clusterResourceId());
        Assertions.assertEquals(DefaultPrincipalsModificationKind.REPLACE, model.defaultPrincipalsModificationKind());
        Assertions.assertEquals("bmhrixkwmyijejv", model.tableLevelSharingProperties().tablesToInclude().get(0));
        Assertions.assertEquals("eaxhcexdrrvqahqk", model.tableLevelSharingProperties().tablesToExclude().get(0));
        Assertions.assertEquals("voowvr", model.tableLevelSharingProperties().externalTablesToInclude().get(0));
        Assertions
            .assertEquals("pyostronzmyhgfi", model.tableLevelSharingProperties().externalTablesToExclude().get(0));
        Assertions.assertEquals("uzlm", model.tableLevelSharingProperties().materializedViewsToInclude().get(0));
        Assertions.assertEquals("rpw", model.tableLevelSharingProperties().materializedViewsToExclude().get(0));
        Assertions.assertEquals("znoigbrn", model.tableLevelSharingProperties().functionsToInclude().get(0));
        Assertions.assertEquals("pn", model.tableLevelSharingProperties().functionsToExclude().get(0));
        Assertions.assertEquals("azej", model.databaseNameOverride());
        Assertions.assertEquals("qkagfhsxt", model.databaseNamePrefix());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AttachedDatabaseConfigurationProperties model =
            new AttachedDatabaseConfigurationProperties()
                .withDatabaseName("wz")
                .withClusterResourceId("bnhlmc")
                .withDefaultPrincipalsModificationKind(DefaultPrincipalsModificationKind.REPLACE)
                .withTableLevelSharingProperties(
                    new TableLevelSharingProperties()
                        .withTablesToInclude(Arrays.asList("bmhrixkwmyijejv", "grhbpn", "ixexcc"))
                        .withTablesToExclude(Arrays.asList("eaxhcexdrrvqahqk", "htpwij", "hyjsvfycx"))
                        .withExternalTablesToInclude(Arrays.asList("voowvr", "mtg"))
                        .withExternalTablesToExclude(
                            Arrays.asList("pyostronzmyhgfi", "nsxkmcwaekrrjr", "afxtsgum", "jglikkxwslolb"))
                        .withMaterializedViewsToInclude(Arrays.asList("uzlm", "felfktg"))
                        .withMaterializedViewsToExclude(Arrays.asList("rpw"))
                        .withFunctionsToInclude(Arrays.asList("znoigbrn", "w"))
                        .withFunctionsToExclude(Arrays.asList("pn")))
                .withDatabaseNameOverride("azej")
                .withDatabaseNamePrefix("qkagfhsxt");
        model = BinaryData.fromObject(model).toObject(AttachedDatabaseConfigurationProperties.class);
        Assertions.assertEquals("wz", model.databaseName());
        Assertions.assertEquals("bnhlmc", model.clusterResourceId());
        Assertions.assertEquals(DefaultPrincipalsModificationKind.REPLACE, model.defaultPrincipalsModificationKind());
        Assertions.assertEquals("bmhrixkwmyijejv", model.tableLevelSharingProperties().tablesToInclude().get(0));
        Assertions.assertEquals("eaxhcexdrrvqahqk", model.tableLevelSharingProperties().tablesToExclude().get(0));
        Assertions.assertEquals("voowvr", model.tableLevelSharingProperties().externalTablesToInclude().get(0));
        Assertions
            .assertEquals("pyostronzmyhgfi", model.tableLevelSharingProperties().externalTablesToExclude().get(0));
        Assertions.assertEquals("uzlm", model.tableLevelSharingProperties().materializedViewsToInclude().get(0));
        Assertions.assertEquals("rpw", model.tableLevelSharingProperties().materializedViewsToExclude().get(0));
        Assertions.assertEquals("znoigbrn", model.tableLevelSharingProperties().functionsToInclude().get(0));
        Assertions.assertEquals("pn", model.tableLevelSharingProperties().functionsToExclude().get(0));
        Assertions.assertEquals("azej", model.databaseNameOverride());
        Assertions.assertEquals("qkagfhsxt", model.databaseNamePrefix());
    }
}
