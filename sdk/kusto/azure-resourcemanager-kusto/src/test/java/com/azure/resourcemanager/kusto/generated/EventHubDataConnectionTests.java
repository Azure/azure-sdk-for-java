// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kusto.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.kusto.models.Compression;
import com.azure.resourcemanager.kusto.models.DatabaseRouting;
import com.azure.resourcemanager.kusto.models.EventHubDataConnection;
import com.azure.resourcemanager.kusto.models.EventHubDataFormat;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class EventHubDataConnectionTests {
    @Test
    public void testDeserialize() {
        EventHubDataConnection model =
            BinaryData
                .fromString(
                    "{\"kind\":\"EventHub\",\"properties\":{\"eventHubResourceId\":\"wccsnjvcdwxlpqek\",\"consumerGroup\":\"tn\",\"tableName\":\"tjsyin\",\"mappingRuleName\":\"fq\",\"dataFormat\":\"TSV\",\"eventSystemProperties\":[\"htmdvy\",\"gikdgsz\",\"w\"],\"compression\":\"GZip\",\"provisioningState\":\"Moving\",\"managedIdentityResourceId\":\"uzhlhkjoqrv\",\"managedIdentityObjectId\":\"aatjinrvgoupmfi\",\"databaseRouting\":\"Multi\",\"retrievalStartDate\":\"2021-11-16T12:04:42Z\"},\"location\":\"ioolvrwxkvtkkgll\",\"id\":\"wjygvjayvblmhvk\",\"name\":\"uhbxvvy\",\"type\":\"gsopbyrqufegxu\"}")
                .toObject(EventHubDataConnection.class);
        Assertions.assertEquals("ioolvrwxkvtkkgll", model.location());
        Assertions.assertEquals("wccsnjvcdwxlpqek", model.eventHubResourceId());
        Assertions.assertEquals("tn", model.consumerGroup());
        Assertions.assertEquals("tjsyin", model.tableName());
        Assertions.assertEquals("fq", model.mappingRuleName());
        Assertions.assertEquals(EventHubDataFormat.TSV, model.dataFormat());
        Assertions.assertEquals("htmdvy", model.eventSystemProperties().get(0));
        Assertions.assertEquals(Compression.GZIP, model.compression());
        Assertions.assertEquals("uzhlhkjoqrv", model.managedIdentityResourceId());
        Assertions.assertEquals(DatabaseRouting.MULTI, model.databaseRouting());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-16T12:04:42Z"), model.retrievalStartDate());
    }

    @Test
    public void testSerialize() {
        EventHubDataConnection model =
            new EventHubDataConnection()
                .withLocation("ioolvrwxkvtkkgll")
                .withEventHubResourceId("wccsnjvcdwxlpqek")
                .withConsumerGroup("tn")
                .withTableName("tjsyin")
                .withMappingRuleName("fq")
                .withDataFormat(EventHubDataFormat.TSV)
                .withEventSystemProperties(Arrays.asList("htmdvy", "gikdgsz", "w"))
                .withCompression(Compression.GZIP)
                .withManagedIdentityResourceId("uzhlhkjoqrv")
                .withDatabaseRouting(DatabaseRouting.MULTI)
                .withRetrievalStartDate(OffsetDateTime.parse("2021-11-16T12:04:42Z"));
        model = BinaryData.fromObject(model).toObject(EventHubDataConnection.class);
        Assertions.assertEquals("ioolvrwxkvtkkgll", model.location());
        Assertions.assertEquals("wccsnjvcdwxlpqek", model.eventHubResourceId());
        Assertions.assertEquals("tn", model.consumerGroup());
        Assertions.assertEquals("tjsyin", model.tableName());
        Assertions.assertEquals("fq", model.mappingRuleName());
        Assertions.assertEquals(EventHubDataFormat.TSV, model.dataFormat());
        Assertions.assertEquals("htmdvy", model.eventSystemProperties().get(0));
        Assertions.assertEquals(Compression.GZIP, model.compression());
        Assertions.assertEquals("uzhlhkjoqrv", model.managedIdentityResourceId());
        Assertions.assertEquals(DatabaseRouting.MULTI, model.databaseRouting());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-16T12:04:42Z"), model.retrievalStartDate());
    }
}
