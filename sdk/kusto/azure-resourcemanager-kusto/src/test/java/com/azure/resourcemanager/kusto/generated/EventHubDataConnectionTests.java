// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kusto.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.kusto.models.Compression;
import com.azure.resourcemanager.kusto.models.DatabaseRouting;
import com.azure.resourcemanager.kusto.models.EventHubDataConnection;
import com.azure.resourcemanager.kusto.models.EventHubDataFormat;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class EventHubDataConnectionTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        EventHubDataConnection model =
            BinaryData
                .fromString(
                    "{\"kind\":\"EventHub\",\"properties\":{\"eventHubResourceId\":\"u\",\"consumerGroup\":\"lcplc\",\"tableName\":\"hihihlhzdsqtzbsr\",\"mappingRuleName\":\"o\",\"dataFormat\":\"CSV\",\"eventSystemProperties\":[\"gmvecactxmw\",\"teyowclu\",\"ovekqvgqouwi\",\"zmpjwyiv\"],\"compression\":\"GZip\",\"provisioningState\":\"Moving\",\"managedIdentityResourceId\":\"vhrfsphuagrt\",\"managedIdentityObjectId\":\"kteusqczk\",\"databaseRouting\":\"Single\",\"retrievalStartDate\":\"2021-06-04T23:13:27Z\"},\"location\":\"byjaffmmf\",\"id\":\"lcqcuubgqibrt\",\"name\":\"lmetttwgdslqxi\",\"type\":\"hrmooi\"}")
                .toObject(EventHubDataConnection.class);
        Assertions.assertEquals("byjaffmmf", model.location());
        Assertions.assertEquals("u", model.eventHubResourceId());
        Assertions.assertEquals("lcplc", model.consumerGroup());
        Assertions.assertEquals("hihihlhzdsqtzbsr", model.tableName());
        Assertions.assertEquals("o", model.mappingRuleName());
        Assertions.assertEquals(EventHubDataFormat.CSV, model.dataFormat());
        Assertions.assertEquals("gmvecactxmw", model.eventSystemProperties().get(0));
        Assertions.assertEquals(Compression.GZIP, model.compression());
        Assertions.assertEquals("vhrfsphuagrt", model.managedIdentityResourceId());
        Assertions.assertEquals(DatabaseRouting.SINGLE, model.databaseRouting());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-04T23:13:27Z"), model.retrievalStartDate());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        EventHubDataConnection model =
            new EventHubDataConnection()
                .withLocation("byjaffmmf")
                .withEventHubResourceId("u")
                .withConsumerGroup("lcplc")
                .withTableName("hihihlhzdsqtzbsr")
                .withMappingRuleName("o")
                .withDataFormat(EventHubDataFormat.CSV)
                .withEventSystemProperties(Arrays.asList("gmvecactxmw", "teyowclu", "ovekqvgqouwi", "zmpjwyiv"))
                .withCompression(Compression.GZIP)
                .withManagedIdentityResourceId("vhrfsphuagrt")
                .withDatabaseRouting(DatabaseRouting.SINGLE)
                .withRetrievalStartDate(OffsetDateTime.parse("2021-06-04T23:13:27Z"));
        model = BinaryData.fromObject(model).toObject(EventHubDataConnection.class);
        Assertions.assertEquals("byjaffmmf", model.location());
        Assertions.assertEquals("u", model.eventHubResourceId());
        Assertions.assertEquals("lcplc", model.consumerGroup());
        Assertions.assertEquals("hihihlhzdsqtzbsr", model.tableName());
        Assertions.assertEquals("o", model.mappingRuleName());
        Assertions.assertEquals(EventHubDataFormat.CSV, model.dataFormat());
        Assertions.assertEquals("gmvecactxmw", model.eventSystemProperties().get(0));
        Assertions.assertEquals(Compression.GZIP, model.compression());
        Assertions.assertEquals("vhrfsphuagrt", model.managedIdentityResourceId());
        Assertions.assertEquals(DatabaseRouting.SINGLE, model.databaseRouting());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-04T23:13:27Z"), model.retrievalStartDate());
    }
}
