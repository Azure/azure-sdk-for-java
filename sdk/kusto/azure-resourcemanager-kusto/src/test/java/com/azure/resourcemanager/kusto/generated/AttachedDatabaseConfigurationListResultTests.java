// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kusto.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.kusto.fluent.models.AttachedDatabaseConfigurationInner;
import com.azure.resourcemanager.kusto.models.AttachedDatabaseConfigurationListResult;
import com.azure.resourcemanager.kusto.models.DefaultPrincipalsModificationKind;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class AttachedDatabaseConfigurationListResultTests {
    @Test
    public void testDeserialize() {
        AttachedDatabaseConfigurationListResult model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"location\":\"rhyrnxxmueed\",\"properties\":{\"provisioningState\":\"Moving\",\"databaseName\":\"v\",\"clusterResourceId\":\"tkwqqtchealm\",\"attachedDatabaseNames\":[],\"defaultPrincipalsModificationKind\":\"None\",\"databaseNameOverride\":\"aygdvwvgpioh\",\"databaseNamePrefix\":\"xrtfudxep\"},\"id\":\"gyqagvrvmnpkuk\",\"name\":\"himdbl\",\"type\":\"gwimfn\"},{\"location\":\"fjxwmsz\",\"properties\":{\"provisioningState\":\"Moving\",\"databaseName\":\"qreyfkzi\",\"clusterResourceId\":\"fjawneaivxwczel\",\"attachedDatabaseNames\":[],\"defaultPrincipalsModificationKind\":\"None\",\"databaseNameOverride\":\"lsfeaenwabfatkld\",\"databaseNamePrefix\":\"bjhwuaan\"},\"id\":\"zjosp\",\"name\":\"youlp\",\"type\":\"rvxaglrvimjwosy\"}]}")
                .toObject(AttachedDatabaseConfigurationListResult.class);
        Assertions.assertEquals("rhyrnxxmueed", model.value().get(0).location());
        Assertions.assertEquals("v", model.value().get(0).databaseName());
        Assertions.assertEquals("tkwqqtchealm", model.value().get(0).clusterResourceId());
        Assertions
            .assertEquals(
                DefaultPrincipalsModificationKind.NONE, model.value().get(0).defaultPrincipalsModificationKind());
        Assertions.assertEquals("aygdvwvgpioh", model.value().get(0).databaseNameOverride());
        Assertions.assertEquals("xrtfudxep", model.value().get(0).databaseNamePrefix());
    }

    @Test
    public void testSerialize() {
        AttachedDatabaseConfigurationListResult model =
            new AttachedDatabaseConfigurationListResult()
                .withValue(
                    Arrays
                        .asList(
                            new AttachedDatabaseConfigurationInner()
                                .withLocation("rhyrnxxmueed")
                                .withDatabaseName("v")
                                .withClusterResourceId("tkwqqtchealm")
                                .withDefaultPrincipalsModificationKind(DefaultPrincipalsModificationKind.NONE)
                                .withDatabaseNameOverride("aygdvwvgpioh")
                                .withDatabaseNamePrefix("xrtfudxep"),
                            new AttachedDatabaseConfigurationInner()
                                .withLocation("fjxwmsz")
                                .withDatabaseName("qreyfkzi")
                                .withClusterResourceId("fjawneaivxwczel")
                                .withDefaultPrincipalsModificationKind(DefaultPrincipalsModificationKind.NONE)
                                .withDatabaseNameOverride("lsfeaenwabfatkld")
                                .withDatabaseNamePrefix("bjhwuaan")));
        model = BinaryData.fromObject(model).toObject(AttachedDatabaseConfigurationListResult.class);
        Assertions.assertEquals("rhyrnxxmueed", model.value().get(0).location());
        Assertions.assertEquals("v", model.value().get(0).databaseName());
        Assertions.assertEquals("tkwqqtchealm", model.value().get(0).clusterResourceId());
        Assertions
            .assertEquals(
                DefaultPrincipalsModificationKind.NONE, model.value().get(0).defaultPrincipalsModificationKind());
        Assertions.assertEquals("aygdvwvgpioh", model.value().get(0).databaseNameOverride());
        Assertions.assertEquals("xrtfudxep", model.value().get(0).databaseNamePrefix());
    }
}
