// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.engagementfabric.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of Channels. */
public interface Channels {
    /**
     * Get the EngagementFabric channel.
     *
     * @param resourceGroupName Resource Group Name.
     * @param accountName Account Name.
     * @param channelName Channel Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the EngagementFabric channel.
     */
    Channel get(String resourceGroupName, String accountName, String channelName);

    /**
     * Get the EngagementFabric channel.
     *
     * @param resourceGroupName Resource Group Name.
     * @param accountName Account Name.
     * @param channelName Channel Name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the EngagementFabric channel.
     */
    Response<Channel> getWithResponse(
        String resourceGroupName, String accountName, String channelName, Context context);

    /**
     * Delete the EngagementFabric channel.
     *
     * @param resourceGroupName Resource Group Name.
     * @param accountName Account Name.
     * @param channelName The EngagementFabric channel name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String accountName, String channelName);

    /**
     * Delete the EngagementFabric channel.
     *
     * @param resourceGroupName Resource Group Name.
     * @param accountName Account Name.
     * @param channelName The EngagementFabric channel name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    Response<Void> deleteWithResponse(
        String resourceGroupName, String accountName, String channelName, Context context);

    /**
     * List the EngagementFabric channels.
     *
     * @param resourceGroupName Resource Group Name.
     * @param accountName Account Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of the EngagementFabric channels.
     */
    PagedIterable<Channel> listByAccount(String resourceGroupName, String accountName);

    /**
     * List the EngagementFabric channels.
     *
     * @param resourceGroupName Resource Group Name.
     * @param accountName Account Name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of the EngagementFabric channels.
     */
    PagedIterable<Channel> listByAccount(String resourceGroupName, String accountName, Context context);

    /**
     * Get the EngagementFabric channel.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the EngagementFabric channel.
     */
    Channel getById(String id);

    /**
     * Get the EngagementFabric channel.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the EngagementFabric channel.
     */
    Response<Channel> getByIdWithResponse(String id, Context context);

    /**
     * Delete the EngagementFabric channel.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete the EngagementFabric channel.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    Response<Void> deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new Channel resource.
     *
     * @param name resource name.
     * @return the first stage of the new Channel definition.
     */
    Channel.DefinitionStages.Blank define(String name);
}
