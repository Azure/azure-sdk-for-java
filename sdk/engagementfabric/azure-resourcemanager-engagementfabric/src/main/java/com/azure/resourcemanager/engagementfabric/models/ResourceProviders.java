// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.engagementfabric.models;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of ResourceProviders. */
public interface ResourceProviders {
    /**
     * Check availability of EngagementFabric resource.
     *
     * @param resourceGroupName Resource Group Name.
     * @param parameters Parameter describing the name to be checked.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the result of name availability check.
     */
    CheckNameAvailabilityResult checkNameAvailability(
        String resourceGroupName, CheckNameAvailabilityParameter parameters);

    /**
     * Check availability of EngagementFabric resource.
     *
     * @param resourceGroupName Resource Group Name.
     * @param parameters Parameter describing the name to be checked.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the result of name availability check.
     */
    Response<CheckNameAvailabilityResult> checkNameAvailabilityWithResponse(
        String resourceGroupName, CheckNameAvailabilityParameter parameters, Context context);
}
