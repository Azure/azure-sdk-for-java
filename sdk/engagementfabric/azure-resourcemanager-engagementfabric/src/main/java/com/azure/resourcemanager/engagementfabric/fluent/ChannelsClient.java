// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.engagementfabric.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.engagementfabric.fluent.models.ChannelInner;

/** An instance of this class provides access to all the operations defined in ChannelsClient. */
public interface ChannelsClient {
    /**
     * Get the EngagementFabric channel.
     *
     * @param resourceGroupName Resource Group Name.
     * @param accountName Account Name.
     * @param channelName Channel Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the EngagementFabric channel.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ChannelInner get(String resourceGroupName, String accountName, String channelName);

    /**
     * Get the EngagementFabric channel.
     *
     * @param resourceGroupName Resource Group Name.
     * @param accountName Account Name.
     * @param channelName Channel Name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the EngagementFabric channel.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ChannelInner> getWithResponse(
        String resourceGroupName, String accountName, String channelName, Context context);

    /**
     * Create or Update the EngagementFabric channel.
     *
     * @param resourceGroupName Resource Group Name.
     * @param accountName Account Name.
     * @param channelName Channel Name.
     * @param channel The EngagementFabric channel description.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the EngagementFabric channel.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ChannelInner createOrUpdate(String resourceGroupName, String accountName, String channelName, ChannelInner channel);

    /**
     * Create or Update the EngagementFabric channel.
     *
     * @param resourceGroupName Resource Group Name.
     * @param accountName Account Name.
     * @param channelName Channel Name.
     * @param channel The EngagementFabric channel description.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the EngagementFabric channel.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ChannelInner> createOrUpdateWithResponse(
        String resourceGroupName, String accountName, String channelName, ChannelInner channel, Context context);

    /**
     * Delete the EngagementFabric channel.
     *
     * @param resourceGroupName Resource Group Name.
     * @param accountName Account Name.
     * @param channelName The EngagementFabric channel name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String accountName, String channelName);

    /**
     * Delete the EngagementFabric channel.
     *
     * @param resourceGroupName Resource Group Name.
     * @param accountName Account Name.
     * @param channelName The EngagementFabric channel name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(
        String resourceGroupName, String accountName, String channelName, Context context);

    /**
     * List the EngagementFabric channels.
     *
     * @param resourceGroupName Resource Group Name.
     * @param accountName Account Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of the EngagementFabric channels.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ChannelInner> listByAccount(String resourceGroupName, String accountName);

    /**
     * List the EngagementFabric channels.
     *
     * @param resourceGroupName Resource Group Name.
     * @param accountName Account Name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of the EngagementFabric channels.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ChannelInner> listByAccount(String resourceGroupName, String accountName, Context context);
}
