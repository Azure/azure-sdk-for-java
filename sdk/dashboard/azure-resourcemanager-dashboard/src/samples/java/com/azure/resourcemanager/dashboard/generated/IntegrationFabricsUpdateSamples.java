// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.dashboard.generated;

import com.azure.resourcemanager.dashboard.models.IntegrationFabric;
import com.azure.resourcemanager.dashboard.models.IntegrationFabricPropertiesUpdateParameters;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for IntegrationFabrics Update.
 */
public final class IntegrationFabricsUpdateSamples {
    /*
     * x-ms-original-file: 2025-08-01/IntegrationFabrics_Update.json
     */
    /**
     * Sample code: IntegrationFabrics_Update.
     * 
     * @param manager Entry point to DashboardManager.
     */
    public static void integrationFabricsUpdate(com.azure.resourcemanager.dashboard.DashboardManager manager) {
        IntegrationFabric resource = manager.integrationFabrics()
            .getWithResponse("myResourceGroup", "myWorkspace", "sampleIntegration", com.azure.core.util.Context.NONE)
            .getValue();
        resource.update()
            .withTags(mapOf("Environment", "Dev 2"))
            .withProperties(new IntegrationFabricPropertiesUpdateParameters().withScenarios(Arrays.asList("scenario1")))
            .apply();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
