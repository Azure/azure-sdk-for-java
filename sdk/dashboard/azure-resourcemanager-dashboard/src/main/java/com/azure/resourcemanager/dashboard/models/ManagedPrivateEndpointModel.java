// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dashboard.models;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.dashboard.fluent.models.ManagedPrivateEndpointModelInner;
import java.util.List;
import java.util.Map;

/**
 * An immutable client-side representation of ManagedPrivateEndpointModel.
 */
public interface ManagedPrivateEndpointModel {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     * 
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     * 
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the provisioningState property: Provisioning state of the resource.
     * 
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the privateLinkResourceId property: The ARM resource ID of the resource for which the managed private
     * endpoint is pointing to.
     * 
     * @return the privateLinkResourceId value.
     */
    String privateLinkResourceId();

    /**
     * Gets the privateLinkResourceRegion property: The region of the resource to which the managed private endpoint is
     * pointing to.
     * 
     * @return the privateLinkResourceRegion value.
     */
    String privateLinkResourceRegion();

    /**
     * Gets the groupIds property: The group Ids of the managed private endpoint.
     * 
     * @return the groupIds value.
     */
    List<String> groupIds();

    /**
     * Gets the requestMessage property: User input request message of the managed private endpoint.
     * 
     * @return the requestMessage value.
     */
    String requestMessage();

    /**
     * Gets the connectionState property: The state of managed private endpoint connection.
     * 
     * @return the connectionState value.
     */
    ManagedPrivateEndpointConnectionState connectionState();

    /**
     * Gets the privateLinkServiceUrl property: The URL of the data store behind the private link service. It would be
     * the URL in the Grafana data source configuration page without the protocol and port.
     * 
     * @return the privateLinkServiceUrl value.
     */
    String privateLinkServiceUrl();

    /**
     * Gets the privateLinkServicePrivateIp property: The private IP of private endpoint after approval. This property
     * is empty before connection is approved.
     * 
     * @return the privateLinkServicePrivateIp value.
     */
    String privateLinkServicePrivateIp();

    /**
     * Gets the region of the resource.
     * 
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     * 
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.dashboard.fluent.models.ManagedPrivateEndpointModelInner object.
     * 
     * @return the inner object.
     */
    ManagedPrivateEndpointModelInner innerModel();

    /**
     * The entirety of the ManagedPrivateEndpointModel definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithLocation,
        DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }

    /**
     * The ManagedPrivateEndpointModel definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the ManagedPrivateEndpointModel definition.
         */
        interface Blank extends WithLocation {
        }

        /**
         * The stage of the ManagedPrivateEndpointModel definition allowing to specify location.
         */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(Region location);

            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(String location);
        }

        /**
         * The stage of the ManagedPrivateEndpointModel definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, workspaceName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param workspaceName The workspace name of Azure Managed Grafana.
             * @return the next definition stage.
             */
            WithCreate withExistingGrafana(String resourceGroupName, String workspaceName);
        }

        /**
         * The stage of the ManagedPrivateEndpointModel definition which contains all the minimum required properties
         * for the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithTags, DefinitionStages.WithPrivateLinkResourceId,
            DefinitionStages.WithPrivateLinkResourceRegion, DefinitionStages.WithGroupIds,
            DefinitionStages.WithRequestMessage, DefinitionStages.WithPrivateLinkServiceUrl {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            ManagedPrivateEndpointModel create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            ManagedPrivateEndpointModel create(Context context);
        }

        /**
         * The stage of the ManagedPrivateEndpointModel definition allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the ManagedPrivateEndpointModel definition allowing to specify privateLinkResourceId.
         */
        interface WithPrivateLinkResourceId {
            /**
             * Specifies the privateLinkResourceId property: The ARM resource ID of the resource for which the managed
             * private endpoint is pointing to..
             * 
             * @param privateLinkResourceId The ARM resource ID of the resource for which the managed private endpoint
             * is pointing to.
             * @return the next definition stage.
             */
            WithCreate withPrivateLinkResourceId(String privateLinkResourceId);
        }

        /**
         * The stage of the ManagedPrivateEndpointModel definition allowing to specify privateLinkResourceRegion.
         */
        interface WithPrivateLinkResourceRegion {
            /**
             * Specifies the privateLinkResourceRegion property: The region of the resource to which the managed private
             * endpoint is pointing to..
             * 
             * @param privateLinkResourceRegion The region of the resource to which the managed private endpoint is
             * pointing to.
             * @return the next definition stage.
             */
            WithCreate withPrivateLinkResourceRegion(String privateLinkResourceRegion);
        }

        /**
         * The stage of the ManagedPrivateEndpointModel definition allowing to specify groupIds.
         */
        interface WithGroupIds {
            /**
             * Specifies the groupIds property: The group Ids of the managed private endpoint..
             * 
             * @param groupIds The group Ids of the managed private endpoint.
             * @return the next definition stage.
             */
            WithCreate withGroupIds(List<String> groupIds);
        }

        /**
         * The stage of the ManagedPrivateEndpointModel definition allowing to specify requestMessage.
         */
        interface WithRequestMessage {
            /**
             * Specifies the requestMessage property: User input request message of the managed private endpoint..
             * 
             * @param requestMessage User input request message of the managed private endpoint.
             * @return the next definition stage.
             */
            WithCreate withRequestMessage(String requestMessage);
        }

        /**
         * The stage of the ManagedPrivateEndpointModel definition allowing to specify privateLinkServiceUrl.
         */
        interface WithPrivateLinkServiceUrl {
            /**
             * Specifies the privateLinkServiceUrl property: The URL of the data store behind the private link service.
             * It would be the URL in the Grafana data source configuration page without the protocol and port..
             * 
             * @param privateLinkServiceUrl The URL of the data store behind the private link service. It would be the
             * URL in the Grafana data source configuration page without the protocol and port.
             * @return the next definition stage.
             */
            WithCreate withPrivateLinkServiceUrl(String privateLinkServiceUrl);
        }
    }

    /**
     * Begins update for the ManagedPrivateEndpointModel resource.
     * 
     * @return the stage of resource update.
     */
    ManagedPrivateEndpointModel.Update update();

    /**
     * The template for ManagedPrivateEndpointModel update.
     */
    interface Update extends UpdateStages.WithTags {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        ManagedPrivateEndpointModel apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        ManagedPrivateEndpointModel apply(Context context);
    }

    /**
     * The ManagedPrivateEndpointModel update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the ManagedPrivateEndpointModel update allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: The new tags of the managed private endpoint..
             * 
             * @param tags The new tags of the managed private endpoint.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    ManagedPrivateEndpointModel refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    ManagedPrivateEndpointModel refresh(Context context);
}
