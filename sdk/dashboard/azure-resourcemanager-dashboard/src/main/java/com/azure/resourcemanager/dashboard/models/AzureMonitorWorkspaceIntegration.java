// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dashboard.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Integrations for Azure Monitor Workspace.
 */
@Fluent
public final class AzureMonitorWorkspaceIntegration implements JsonSerializable<AzureMonitorWorkspaceIntegration> {
    /*
     * The resource Id of the connected Azure Monitor Workspace.
     */
    private String azureMonitorWorkspaceResourceId;

    /**
     * Creates an instance of AzureMonitorWorkspaceIntegration class.
     */
    public AzureMonitorWorkspaceIntegration() {
    }

    /**
     * Get the azureMonitorWorkspaceResourceId property: The resource Id of the connected Azure Monitor Workspace.
     * 
     * @return the azureMonitorWorkspaceResourceId value.
     */
    public String azureMonitorWorkspaceResourceId() {
        return this.azureMonitorWorkspaceResourceId;
    }

    /**
     * Set the azureMonitorWorkspaceResourceId property: The resource Id of the connected Azure Monitor Workspace.
     * 
     * @param azureMonitorWorkspaceResourceId the azureMonitorWorkspaceResourceId value to set.
     * @return the AzureMonitorWorkspaceIntegration object itself.
     */
    public AzureMonitorWorkspaceIntegration
        withAzureMonitorWorkspaceResourceId(String azureMonitorWorkspaceResourceId) {
        this.azureMonitorWorkspaceResourceId = azureMonitorWorkspaceResourceId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("azureMonitorWorkspaceResourceId", this.azureMonitorWorkspaceResourceId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureMonitorWorkspaceIntegration from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureMonitorWorkspaceIntegration if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AzureMonitorWorkspaceIntegration.
     */
    public static AzureMonitorWorkspaceIntegration fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AzureMonitorWorkspaceIntegration deserializedAzureMonitorWorkspaceIntegration
                = new AzureMonitorWorkspaceIntegration();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("azureMonitorWorkspaceResourceId".equals(fieldName)) {
                    deserializedAzureMonitorWorkspaceIntegration.azureMonitorWorkspaceResourceId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAzureMonitorWorkspaceIntegration;
        });
    }
}
