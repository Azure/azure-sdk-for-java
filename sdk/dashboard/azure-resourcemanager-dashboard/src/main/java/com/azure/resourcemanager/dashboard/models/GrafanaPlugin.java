// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dashboard.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Plugin of Grafana.
 */
@Immutable
public final class GrafanaPlugin implements JsonSerializable<GrafanaPlugin> {
    /*
     * Grafana plugin id
     */
    private String pluginId;

    /**
     * Creates an instance of GrafanaPlugin class.
     */
    public GrafanaPlugin() {
    }

    /**
     * Get the pluginId property: Grafana plugin id.
     * 
     * @return the pluginId value.
     */
    public String pluginId() {
        return this.pluginId;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of GrafanaPlugin from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of GrafanaPlugin if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the GrafanaPlugin.
     */
    public static GrafanaPlugin fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            GrafanaPlugin deserializedGrafanaPlugin = new GrafanaPlugin();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("pluginId".equals(fieldName)) {
                    deserializedGrafanaPlugin.pluginId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedGrafanaPlugin;
        });
    }
}
