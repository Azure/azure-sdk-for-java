// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dashboard.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.dashboard.models.ManagedPrivateEndpointConnectionState;
import com.azure.resourcemanager.dashboard.models.ProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Properties specific to the managed private endpoint.
 */
@Fluent
public final class ManagedPrivateEndpointModelProperties {
    /*
     * Provisioning state of the resource.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /*
     * The ARM resource ID of the resource for which the managed private endpoint is pointing to.
     */
    @JsonProperty(value = "privateLinkResourceId")
    private String privateLinkResourceId;

    /*
     * The region of the resource to which the managed private endpoint is pointing to.
     */
    @JsonProperty(value = "privateLinkResourceRegion")
    private String privateLinkResourceRegion;

    /*
     * The group Ids of the managed private endpoint.
     */
    @JsonProperty(value = "groupIds")
    private List<String> groupIds;

    /*
     * User input request message of the managed private endpoint.
     */
    @JsonProperty(value = "requestMessage")
    private String requestMessage;

    /*
     * The state of managed private endpoint connection.
     */
    @JsonProperty(value = "connectionState", access = JsonProperty.Access.WRITE_ONLY)
    private ManagedPrivateEndpointConnectionState connectionState;

    /*
     * The URL of the data store behind the private link service. It would be the URL in the Grafana data source
     * configuration page without the protocol and port.
     */
    @JsonProperty(value = "privateLinkServiceUrl")
    private String privateLinkServiceUrl;

    /*
     * The private IP of private endpoint after approval. This property is empty before connection is approved.
     */
    @JsonProperty(value = "privateLinkServicePrivateIP", access = JsonProperty.Access.WRITE_ONLY)
    private String privateLinkServicePrivateIp;

    /**
     * Creates an instance of ManagedPrivateEndpointModelProperties class.
     */
    public ManagedPrivateEndpointModelProperties() {
    }

    /**
     * Get the provisioningState property: Provisioning state of the resource.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the privateLinkResourceId property: The ARM resource ID of the resource for which the managed private
     * endpoint is pointing to.
     * 
     * @return the privateLinkResourceId value.
     */
    public String privateLinkResourceId() {
        return this.privateLinkResourceId;
    }

    /**
     * Set the privateLinkResourceId property: The ARM resource ID of the resource for which the managed private
     * endpoint is pointing to.
     * 
     * @param privateLinkResourceId the privateLinkResourceId value to set.
     * @return the ManagedPrivateEndpointModelProperties object itself.
     */
    public ManagedPrivateEndpointModelProperties withPrivateLinkResourceId(String privateLinkResourceId) {
        this.privateLinkResourceId = privateLinkResourceId;
        return this;
    }

    /**
     * Get the privateLinkResourceRegion property: The region of the resource to which the managed private endpoint is
     * pointing to.
     * 
     * @return the privateLinkResourceRegion value.
     */
    public String privateLinkResourceRegion() {
        return this.privateLinkResourceRegion;
    }

    /**
     * Set the privateLinkResourceRegion property: The region of the resource to which the managed private endpoint is
     * pointing to.
     * 
     * @param privateLinkResourceRegion the privateLinkResourceRegion value to set.
     * @return the ManagedPrivateEndpointModelProperties object itself.
     */
    public ManagedPrivateEndpointModelProperties withPrivateLinkResourceRegion(String privateLinkResourceRegion) {
        this.privateLinkResourceRegion = privateLinkResourceRegion;
        return this;
    }

    /**
     * Get the groupIds property: The group Ids of the managed private endpoint.
     * 
     * @return the groupIds value.
     */
    public List<String> groupIds() {
        return this.groupIds;
    }

    /**
     * Set the groupIds property: The group Ids of the managed private endpoint.
     * 
     * @param groupIds the groupIds value to set.
     * @return the ManagedPrivateEndpointModelProperties object itself.
     */
    public ManagedPrivateEndpointModelProperties withGroupIds(List<String> groupIds) {
        this.groupIds = groupIds;
        return this;
    }

    /**
     * Get the requestMessage property: User input request message of the managed private endpoint.
     * 
     * @return the requestMessage value.
     */
    public String requestMessage() {
        return this.requestMessage;
    }

    /**
     * Set the requestMessage property: User input request message of the managed private endpoint.
     * 
     * @param requestMessage the requestMessage value to set.
     * @return the ManagedPrivateEndpointModelProperties object itself.
     */
    public ManagedPrivateEndpointModelProperties withRequestMessage(String requestMessage) {
        this.requestMessage = requestMessage;
        return this;
    }

    /**
     * Get the connectionState property: The state of managed private endpoint connection.
     * 
     * @return the connectionState value.
     */
    public ManagedPrivateEndpointConnectionState connectionState() {
        return this.connectionState;
    }

    /**
     * Get the privateLinkServiceUrl property: The URL of the data store behind the private link service. It would be
     * the URL in the Grafana data source configuration page without the protocol and port.
     * 
     * @return the privateLinkServiceUrl value.
     */
    public String privateLinkServiceUrl() {
        return this.privateLinkServiceUrl;
    }

    /**
     * Set the privateLinkServiceUrl property: The URL of the data store behind the private link service. It would be
     * the URL in the Grafana data source configuration page without the protocol and port.
     * 
     * @param privateLinkServiceUrl the privateLinkServiceUrl value to set.
     * @return the ManagedPrivateEndpointModelProperties object itself.
     */
    public ManagedPrivateEndpointModelProperties withPrivateLinkServiceUrl(String privateLinkServiceUrl) {
        this.privateLinkServiceUrl = privateLinkServiceUrl;
        return this;
    }

    /**
     * Get the privateLinkServicePrivateIp property: The private IP of private endpoint after approval. This property
     * is empty before connection is approved.
     * 
     * @return the privateLinkServicePrivateIp value.
     */
    public String privateLinkServicePrivateIp() {
        return this.privateLinkServicePrivateIp;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (connectionState() != null) {
            connectionState().validate();
        }
    }
}
