// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.dashboard.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Grafana Unified Alerting Screenshots settings.
 */
@Fluent
public final class UnifiedAlertingScreenshots implements JsonSerializable<UnifiedAlertingScreenshots> {
    /*
     * Set to false to disable capture screenshot in Unified Alert due to performance issue.
     */
    private Boolean captureEnabled;

    /**
     * Creates an instance of UnifiedAlertingScreenshots class.
     */
    public UnifiedAlertingScreenshots() {
    }

    /**
     * Get the captureEnabled property: Set to false to disable capture screenshot in Unified Alert due to performance
     * issue.
     * 
     * @return the captureEnabled value.
     */
    public Boolean captureEnabled() {
        return this.captureEnabled;
    }

    /**
     * Set the captureEnabled property: Set to false to disable capture screenshot in Unified Alert due to performance
     * issue.
     * 
     * @param captureEnabled the captureEnabled value to set.
     * @return the UnifiedAlertingScreenshots object itself.
     */
    public UnifiedAlertingScreenshots withCaptureEnabled(Boolean captureEnabled) {
        this.captureEnabled = captureEnabled;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("captureEnabled", this.captureEnabled);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of UnifiedAlertingScreenshots from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of UnifiedAlertingScreenshots if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the UnifiedAlertingScreenshots.
     */
    public static UnifiedAlertingScreenshots fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            UnifiedAlertingScreenshots deserializedUnifiedAlertingScreenshots = new UnifiedAlertingScreenshots();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("captureEnabled".equals(fieldName)) {
                    deserializedUnifiedAlertingScreenshots.captureEnabled = reader.getNullable(JsonReader::getBoolean);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedUnifiedAlertingScreenshots;
        });
    }
}
