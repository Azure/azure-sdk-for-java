// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dashboard.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.dashboard.models.MarketplaceTrialQuota;
import com.azure.resourcemanager.dashboard.models.SaasSubscriptionDetails;
import java.io.IOException;

/**
 * Enterprise details of a Grafana instance.
 */
@Fluent
public final class EnterpriseDetailsInner implements JsonSerializable<EnterpriseDetailsInner> {
    /*
     * SaaS subscription details of a Grafana instance
     */
    private SaasSubscriptionDetails saasSubscriptionDetails;

    /*
     * The allocation details of the per subscription free trial slot of the subscription.
     */
    private MarketplaceTrialQuota marketplaceTrialQuota;

    /**
     * Creates an instance of EnterpriseDetailsInner class.
     */
    public EnterpriseDetailsInner() {
    }

    /**
     * Get the saasSubscriptionDetails property: SaaS subscription details of a Grafana instance.
     * 
     * @return the saasSubscriptionDetails value.
     */
    public SaasSubscriptionDetails saasSubscriptionDetails() {
        return this.saasSubscriptionDetails;
    }

    /**
     * Set the saasSubscriptionDetails property: SaaS subscription details of a Grafana instance.
     * 
     * @param saasSubscriptionDetails the saasSubscriptionDetails value to set.
     * @return the EnterpriseDetailsInner object itself.
     */
    public EnterpriseDetailsInner withSaasSubscriptionDetails(SaasSubscriptionDetails saasSubscriptionDetails) {
        this.saasSubscriptionDetails = saasSubscriptionDetails;
        return this;
    }

    /**
     * Get the marketplaceTrialQuota property: The allocation details of the per subscription free trial slot of the
     * subscription.
     * 
     * @return the marketplaceTrialQuota value.
     */
    public MarketplaceTrialQuota marketplaceTrialQuota() {
        return this.marketplaceTrialQuota;
    }

    /**
     * Set the marketplaceTrialQuota property: The allocation details of the per subscription free trial slot of the
     * subscription.
     * 
     * @param marketplaceTrialQuota the marketplaceTrialQuota value to set.
     * @return the EnterpriseDetailsInner object itself.
     */
    public EnterpriseDetailsInner withMarketplaceTrialQuota(MarketplaceTrialQuota marketplaceTrialQuota) {
        this.marketplaceTrialQuota = marketplaceTrialQuota;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (saasSubscriptionDetails() != null) {
            saasSubscriptionDetails().validate();
        }
        if (marketplaceTrialQuota() != null) {
            marketplaceTrialQuota().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("saasSubscriptionDetails", this.saasSubscriptionDetails);
        jsonWriter.writeJsonField("marketplaceTrialQuota", this.marketplaceTrialQuota);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of EnterpriseDetailsInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of EnterpriseDetailsInner if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the EnterpriseDetailsInner.
     */
    public static EnterpriseDetailsInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            EnterpriseDetailsInner deserializedEnterpriseDetailsInner = new EnterpriseDetailsInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("saasSubscriptionDetails".equals(fieldName)) {
                    deserializedEnterpriseDetailsInner.saasSubscriptionDetails
                        = SaasSubscriptionDetails.fromJson(reader);
                } else if ("marketplaceTrialQuota".equals(fieldName)) {
                    deserializedEnterpriseDetailsInner.marketplaceTrialQuota = MarketplaceTrialQuota.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedEnterpriseDetailsInner;
        });
    }
}
