// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.dashboard.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.dashboard.DashboardManager;
import com.azure.resourcemanager.dashboard.models.AvailablePromotion;
import com.azure.resourcemanager.dashboard.models.EnterpriseDetails;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ManagedGrafanasCheckEnterpriseDetailsWithResponseMockTests {
    @Test
    public void testCheckEnterpriseDetailsWithResponse() throws Exception {
        String responseStr
            = "{\"saasSubscriptionDetails\":{\"planId\":\"wtctyqi\",\"offerId\":\"bbovplwzbhvgyugu\",\"publisherId\":\"vmkfssxqu\",\"term\":{\"termUnit\":\"plgmgsxnk\",\"startDate\":\"2021-07-28T04:14:11Z\",\"endDate\":\"2021-02-12T14:22:27Z\"}},\"marketplaceTrialQuota\":{\"availablePromotion\":\"FreeTrial\",\"grafanaResourceId\":\"lopwiyig\",\"trialStartAt\":\"2021-09-27T18:37:59Z\",\"trialEndAt\":\"2021-07-31T13:07:30Z\"}}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DashboardManager manager = DashboardManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        EnterpriseDetails response = manager.managedGrafanas()
            .checkEnterpriseDetailsWithResponse("nxytxh", "zxbzpfzabglc", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("wtctyqi", response.saasSubscriptionDetails().planId());
        Assertions.assertEquals("bbovplwzbhvgyugu", response.saasSubscriptionDetails().offerId());
        Assertions.assertEquals("vmkfssxqu", response.saasSubscriptionDetails().publisherId());
        Assertions.assertEquals("plgmgsxnk", response.saasSubscriptionDetails().term().termUnit());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-28T04:14:11Z"),
            response.saasSubscriptionDetails().term().startDate());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-12T14:22:27Z"),
            response.saasSubscriptionDetails().term().endDate());
        Assertions.assertEquals(AvailablePromotion.FREE_TRIAL, response.marketplaceTrialQuota().availablePromotion());
        Assertions.assertEquals("lopwiyig", response.marketplaceTrialQuota().grafanaResourceId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-27T18:37:59Z"),
            response.marketplaceTrialQuota().trialStartAt());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-31T13:07:30Z"),
            response.marketplaceTrialQuota().trialEndAt());
    }
}
