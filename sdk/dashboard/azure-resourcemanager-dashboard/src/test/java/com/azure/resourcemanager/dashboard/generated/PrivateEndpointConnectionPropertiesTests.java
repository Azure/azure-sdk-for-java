// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.dashboard.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dashboard.fluent.models.PrivateEndpointConnectionProperties;
import com.azure.resourcemanager.dashboard.models.PrivateEndpoint;
import com.azure.resourcemanager.dashboard.models.PrivateEndpointServiceConnectionStatus;
import com.azure.resourcemanager.dashboard.models.PrivateLinkServiceConnectionState;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PrivateEndpointConnectionPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateEndpointConnectionProperties model = BinaryData.fromString(
            "{\"privateEndpoint\":{\"id\":\"ybrk\"},\"privateLinkServiceConnectionState\":{\"status\":\"Approved\",\"description\":\"mjgr\",\"actionsRequired\":\"wvukx\"},\"groupIds\":[\"dcc\",\"nhsjcnyej\",\"kryhtnapczwlokj\"],\"provisioningState\":\"Creating\"}")
            .toObject(PrivateEndpointConnectionProperties.class);
        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.APPROVED,
            model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("mjgr", model.privateLinkServiceConnectionState().description());
        Assertions.assertEquals("wvukx", model.privateLinkServiceConnectionState().actionsRequired());
        Assertions.assertEquals("dcc", model.groupIds().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateEndpointConnectionProperties model
            = new PrivateEndpointConnectionProperties().withPrivateEndpoint(new PrivateEndpoint())
                .withPrivateLinkServiceConnectionState(
                    new PrivateLinkServiceConnectionState().withStatus(PrivateEndpointServiceConnectionStatus.APPROVED)
                        .withDescription("mjgr")
                        .withActionsRequired("wvukx"))
                .withGroupIds(Arrays.asList("dcc", "nhsjcnyej", "kryhtnapczwlokj"));
        model = BinaryData.fromObject(model).toObject(PrivateEndpointConnectionProperties.class);
        Assertions.assertEquals(PrivateEndpointServiceConnectionStatus.APPROVED,
            model.privateLinkServiceConnectionState().status());
        Assertions.assertEquals("mjgr", model.privateLinkServiceConnectionState().description());
        Assertions.assertEquals("wvukx", model.privateLinkServiceConnectionState().actionsRequired());
        Assertions.assertEquals("dcc", model.groupIds().get(0));
    }
}
