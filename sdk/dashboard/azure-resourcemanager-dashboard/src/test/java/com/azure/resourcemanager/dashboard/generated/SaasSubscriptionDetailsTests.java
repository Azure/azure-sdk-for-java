// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dashboard.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dashboard.models.SaasSubscriptionDetails;
import com.azure.resourcemanager.dashboard.models.SubscriptionTerm;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class SaasSubscriptionDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SaasSubscriptionDetails model = BinaryData.fromString(
            "{\"planId\":\"jnxqbzvddntwn\",\"offerId\":\"icbtwnpzao\",\"publisherId\":\"uhrhcffcyddgl\",\"term\":{\"termUnit\":\"hjq\",\"startDate\":\"2021-03-29T20:34:14Z\",\"endDate\":\"2021-11-24T17:43:24Z\"}}")
            .toObject(SaasSubscriptionDetails.class);
        Assertions.assertEquals("jnxqbzvddntwn", model.planId());
        Assertions.assertEquals("icbtwnpzao", model.offerId());
        Assertions.assertEquals("uhrhcffcyddgl", model.publisherId());
        Assertions.assertEquals("hjq", model.term().termUnit());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-29T20:34:14Z"), model.term().startDate());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-24T17:43:24Z"), model.term().endDate());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SaasSubscriptionDetails model = new SaasSubscriptionDetails().withPlanId("jnxqbzvddntwn")
            .withOfferId("icbtwnpzao").withPublisherId("uhrhcffcyddgl").withTerm(
                new SubscriptionTerm().withTermUnit("hjq").withStartDate(OffsetDateTime.parse("2021-03-29T20:34:14Z"))
                    .withEndDate(OffsetDateTime.parse("2021-11-24T17:43:24Z")));
        model = BinaryData.fromObject(model).toObject(SaasSubscriptionDetails.class);
        Assertions.assertEquals("jnxqbzvddntwn", model.planId());
        Assertions.assertEquals("icbtwnpzao", model.offerId());
        Assertions.assertEquals("uhrhcffcyddgl", model.publisherId());
        Assertions.assertEquals("hjq", model.term().termUnit());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-29T20:34:14Z"), model.term().startDate());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-24T17:43:24Z"), model.term().endDate());
    }
}
