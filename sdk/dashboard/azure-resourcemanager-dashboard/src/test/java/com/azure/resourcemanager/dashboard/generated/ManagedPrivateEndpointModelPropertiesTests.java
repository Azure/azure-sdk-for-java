// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dashboard.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dashboard.fluent.models.ManagedPrivateEndpointModelProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ManagedPrivateEndpointModelPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ManagedPrivateEndpointModelProperties model = BinaryData.fromString(
            "{\"provisioningState\":\"Updating\",\"privateLinkResourceId\":\"tehfiqscjeypvh\",\"privateLinkResourceRegion\":\"rkgqhcjrefo\",\"groupIds\":[\"kqsleyyvxy\",\"jpkcattpng\",\"cr\"],\"requestMessage\":\"zsqpjhvmdajvny\",\"connectionState\":{\"status\":\"Rejected\",\"description\":\"e\"},\"privateLinkServiceUrl\":\"noae\",\"privateLinkServicePrivateIP\":\"fhyhltrpmopjmcma\"}")
            .toObject(ManagedPrivateEndpointModelProperties.class);
        Assertions.assertEquals("tehfiqscjeypvh", model.privateLinkResourceId());
        Assertions.assertEquals("rkgqhcjrefo", model.privateLinkResourceRegion());
        Assertions.assertEquals("kqsleyyvxy", model.groupIds().get(0));
        Assertions.assertEquals("zsqpjhvmdajvny", model.requestMessage());
        Assertions.assertEquals("noae", model.privateLinkServiceUrl());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ManagedPrivateEndpointModelProperties model = new ManagedPrivateEndpointModelProperties()
            .withPrivateLinkResourceId("tehfiqscjeypvh").withPrivateLinkResourceRegion("rkgqhcjrefo")
            .withGroupIds(Arrays.asList("kqsleyyvxy", "jpkcattpng", "cr")).withRequestMessage("zsqpjhvmdajvny")
            .withPrivateLinkServiceUrl("noae");
        model = BinaryData.fromObject(model).toObject(ManagedPrivateEndpointModelProperties.class);
        Assertions.assertEquals("tehfiqscjeypvh", model.privateLinkResourceId());
        Assertions.assertEquals("rkgqhcjrefo", model.privateLinkResourceRegion());
        Assertions.assertEquals("kqsleyyvxy", model.groupIds().get(0));
        Assertions.assertEquals("zsqpjhvmdajvny", model.requestMessage());
        Assertions.assertEquals("noae", model.privateLinkServiceUrl());
    }
}
