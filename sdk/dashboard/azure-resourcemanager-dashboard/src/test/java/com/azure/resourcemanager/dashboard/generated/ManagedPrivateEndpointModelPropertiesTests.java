// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.dashboard.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dashboard.fluent.models.ManagedPrivateEndpointModelProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ManagedPrivateEndpointModelPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ManagedPrivateEndpointModelProperties model = BinaryData.fromString(
            "{\"provisioningState\":\"Accepted\",\"privateLinkResourceId\":\"vkd\",\"privateLinkResourceRegion\":\"sllr\",\"groupIds\":[\"d\",\"watkpnpulexxb\",\"zwtruwiqzbqjvsov\"],\"requestMessage\":\"okacspk\",\"connectionState\":{\"status\":\"Disconnected\",\"description\":\"obpxjmflbvvn\"},\"privateLinkServiceUrl\":\"rkcciwwzjuqk\",\"privateLinkServicePrivateIP\":\"sa\"}")
            .toObject(ManagedPrivateEndpointModelProperties.class);
        Assertions.assertEquals("vkd", model.privateLinkResourceId());
        Assertions.assertEquals("sllr", model.privateLinkResourceRegion());
        Assertions.assertEquals("d", model.groupIds().get(0));
        Assertions.assertEquals("okacspk", model.requestMessage());
        Assertions.assertEquals("rkcciwwzjuqk", model.privateLinkServiceUrl());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ManagedPrivateEndpointModelProperties model
            = new ManagedPrivateEndpointModelProperties().withPrivateLinkResourceId("vkd")
                .withPrivateLinkResourceRegion("sllr")
                .withGroupIds(Arrays.asList("d", "watkpnpulexxb", "zwtruwiqzbqjvsov"))
                .withRequestMessage("okacspk")
                .withPrivateLinkServiceUrl("rkcciwwzjuqk");
        model = BinaryData.fromObject(model).toObject(ManagedPrivateEndpointModelProperties.class);
        Assertions.assertEquals("vkd", model.privateLinkResourceId());
        Assertions.assertEquals("sllr", model.privateLinkResourceRegion());
        Assertions.assertEquals("d", model.groupIds().get(0));
        Assertions.assertEquals("okacspk", model.requestMessage());
        Assertions.assertEquals("rkcciwwzjuqk", model.privateLinkServiceUrl());
    }
}
