// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.dashboard.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.dashboard.fluent.models.ManagedPrivateEndpointModelProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ManagedPrivateEndpointModelPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ManagedPrivateEndpointModelProperties model = BinaryData.fromString(
            "{\"provisioningState\":\"Succeeded\",\"privateLinkResourceId\":\"shxmzsbbzoggigrx\",\"privateLinkResourceRegion\":\"ur\",\"groupIds\":[\"xjnspy\",\"ptkoenkoukn\",\"udwtiukbl\"],\"requestMessage\":\"gkpocipazyxoe\",\"connectionState\":{\"status\":\"Pending\",\"description\":\"npiucgygevqznty\"},\"privateLinkServiceUrl\":\"rbpizc\",\"privateLinkServicePrivateIP\":\"qjsdpydnfyhxdeo\"}")
            .toObject(ManagedPrivateEndpointModelProperties.class);
        Assertions.assertEquals("shxmzsbbzoggigrx", model.privateLinkResourceId());
        Assertions.assertEquals("ur", model.privateLinkResourceRegion());
        Assertions.assertEquals("xjnspy", model.groupIds().get(0));
        Assertions.assertEquals("gkpocipazyxoe", model.requestMessage());
        Assertions.assertEquals("rbpizc", model.privateLinkServiceUrl());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ManagedPrivateEndpointModelProperties model
            = new ManagedPrivateEndpointModelProperties().withPrivateLinkResourceId("shxmzsbbzoggigrx")
                .withPrivateLinkResourceRegion("ur")
                .withGroupIds(Arrays.asList("xjnspy", "ptkoenkoukn", "udwtiukbl"))
                .withRequestMessage("gkpocipazyxoe")
                .withPrivateLinkServiceUrl("rbpizc");
        model = BinaryData.fromObject(model).toObject(ManagedPrivateEndpointModelProperties.class);
        Assertions.assertEquals("shxmzsbbzoggigrx", model.privateLinkResourceId());
        Assertions.assertEquals("ur", model.privateLinkResourceRegion());
        Assertions.assertEquals("xjnspy", model.groupIds().get(0));
        Assertions.assertEquals("gkpocipazyxoe", model.requestMessage());
        Assertions.assertEquals("rbpizc", model.privateLinkServiceUrl());
    }
}
