// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.quota.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Properties.
 */
@Fluent
public final class GroupQuotasEntityProperties extends GroupQuotasEntityBase {
    /*
     * Provisioning state of the operation.
     */
    private RequestState provisioningState;

    /*
     * Type of the group.
     */
    private GroupType groupType;

    /**
     * Creates an instance of GroupQuotasEntityProperties class.
     */
    public GroupQuotasEntityProperties() {
    }

    /**
     * Get the provisioningState property: Provisioning state of the operation.
     * 
     * @return the provisioningState value.
     */
    @Override
    public RequestState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the groupType property: Type of the group.
     * 
     * @return the groupType value.
     */
    @Override
    public GroupType groupType() {
        return this.groupType;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GroupQuotasEntityProperties withDisplayName(String displayName) {
        super.withDisplayName(displayName);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("displayName", displayName());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of GroupQuotasEntityProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of GroupQuotasEntityProperties if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the GroupQuotasEntityProperties.
     */
    public static GroupQuotasEntityProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            GroupQuotasEntityProperties deserializedGroupQuotasEntityProperties = new GroupQuotasEntityProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("displayName".equals(fieldName)) {
                    deserializedGroupQuotasEntityProperties.withDisplayName(reader.getString());
                } else if ("groupType".equals(fieldName)) {
                    deserializedGroupQuotasEntityProperties.groupType = GroupType.fromString(reader.getString());
                } else if ("provisioningState".equals(fieldName)) {
                    deserializedGroupQuotasEntityProperties.provisioningState
                        = RequestState.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedGroupQuotasEntityProperties;
        });
    }
}
