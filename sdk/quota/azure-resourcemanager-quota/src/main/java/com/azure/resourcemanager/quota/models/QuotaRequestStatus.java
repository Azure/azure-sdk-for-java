// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.quota.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of QuotaRequestStatus. */
public interface QuotaRequestStatus {
    /**
     * Gets the quota request details and status by quota request ID for the resources of the resource provider at a
     * specific location. The quota request ID **id** is returned in the response of the PUT operation.
     *
     * @param id Quota request ID.
     * @param scope The target Azure resource URI. For example,
     *     `/subscriptions/9f6cce51-6baf-4de5-a3c4-6f58b85315b9/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.
     *     This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added after
     *     `/quotaLimits`, then it's the target Azure resource URI in the GET operation for the specific resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the quota request details and status by quota request ID for the resources of the resource provider at a
     *     specific location.
     */
    QuotaRequestDetails get(String id, String scope);

    /**
     * Gets the quota request details and status by quota request ID for the resources of the resource provider at a
     * specific location. The quota request ID **id** is returned in the response of the PUT operation.
     *
     * @param id Quota request ID.
     * @param scope The target Azure resource URI. For example,
     *     `/subscriptions/9f6cce51-6baf-4de5-a3c4-6f58b85315b9/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.
     *     This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added after
     *     `/quotaLimits`, then it's the target Azure resource URI in the GET operation for the specific resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the quota request details and status by quota request ID for the resources of the resource provider at a
     *     specific location.
     */
    Response<QuotaRequestDetails> getWithResponse(String id, String scope, Context context);

    /**
     * For the specified location and resource provider, gets the current quota requests under the subscription for a
     * one year period ending at the time is made. Use the **oData** filter can be used to select quota requests.
     *
     * @param scope The target Azure resource URI. For example,
     *     `/subscriptions/9f6cce51-6baf-4de5-a3c4-6f58b85315b9/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.
     *     This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added after
     *     `/quotaLimits`, then it's the target Azure resource URI in the GET operation for the specific resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return quota request information.
     */
    PagedIterable<QuotaRequestDetails> list(String scope);

    /**
     * For the specified location and resource provider, gets the current quota requests under the subscription for a
     * one year period ending at the time is made. Use the **oData** filter can be used to select quota requests.
     *
     * @param scope The target Azure resource URI. For example,
     *     `/subscriptions/9f6cce51-6baf-4de5-a3c4-6f58b85315b9/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.
     *     This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added after
     *     `/quotaLimits`, then it's the target Azure resource URI in the GET operation for the specific resource.
     * @param filter | Field | Supported operators |---------------------|------------------------
     *     <p>|requestSubmitTime | ge, le, eq, gt, lt |provisioningState eq {QuotaRequestState} |resourceName eq
     *     {resourceName}.
     * @param top Number of records to return.
     * @param skiptoken The **Skiptoken** parameter is used only if a previous operation returned a partial result. If a
     *     previous response contains a **nextLink** element, the value of the **nextLink** element includes a
     *     **skiptoken** parameter that specifies a starting point to use for subsequent calls.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return quota request information.
     */
    PagedIterable<QuotaRequestDetails> list(
        String scope, String filter, Integer top, String skiptoken, Context context);
}
