// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.quota.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of GroupQuotaLimits.
 */
public interface GroupQuotaLimits {
    /**
     * Gets the GroupQuotaLimits for the specific resource.
     * 
     * Gets the GroupQuotaLimits for the specific resource for a specific resource based on the resourceProviders,
     * resourceName and $filter passed.
     * The $filter=location eq {location} is required to location specific resources groupQuota.
     * 
     * @param managementGroupId Management Group Id.
     * @param groupQuotaName The GroupQuota name. The name should be unique for the provided context tenantId/MgId.
     * @param resourceProviderName The resource provider name, such as - Microsoft.Compute. Currently only
     * Microsoft.Compute resource provider supports this API.
     * @param resourceName Resource name.
     * @param filter | Field | Supported operators
     * |---------------------|------------------------
     * 
     * location eq {location}
     * Example: $filter=location eq eastus.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the GroupQuotaLimits for the specific resource for a specific resource based on the resourceProviders,
     * resourceName and $filter passed.
     * The $filter=location eq {location} is required to location specific resources groupQuota along with
     * {@link Response}.
     */
    Response<GroupQuotaLimit> getWithResponse(String managementGroupId, String groupQuotaName,
        String resourceProviderName, String resourceName, String filter, Context context);

    /**
     * Gets the GroupQuotaLimits for the specific resource.
     * 
     * Gets the GroupQuotaLimits for the specific resource for a specific resource based on the resourceProviders,
     * resourceName and $filter passed.
     * The $filter=location eq {location} is required to location specific resources groupQuota.
     * 
     * @param managementGroupId Management Group Id.
     * @param groupQuotaName The GroupQuota name. The name should be unique for the provided context tenantId/MgId.
     * @param resourceProviderName The resource provider name, such as - Microsoft.Compute. Currently only
     * Microsoft.Compute resource provider supports this API.
     * @param resourceName Resource name.
     * @param filter | Field | Supported operators
     * |---------------------|------------------------
     * 
     * location eq {location}
     * Example: $filter=location eq eastus.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the GroupQuotaLimits for the specific resource for a specific resource based on the resourceProviders,
     * resourceName and $filter passed.
     * The $filter=location eq {location} is required to location specific resources groupQuota.
     */
    GroupQuotaLimit get(String managementGroupId, String groupQuotaName, String resourceProviderName,
        String resourceName, String filter);

    /**
     * Gets the GroupQuotaLimits for all the resources for the specified location in $filter=location eq {location}.
     * 
     * Gets the GroupQuotaLimits for the all resource for a specific resourceProvider and $filter passed.
     * The $filter=location eq {location} is required to location specific resources groupQuota.
     * 
     * @param managementGroupId Management Group Id.
     * @param groupQuotaName The GroupQuota name. The name should be unique for the provided context tenantId/MgId.
     * @param resourceProviderName The resource provider name, such as - Microsoft.Compute. Currently only
     * Microsoft.Compute resource provider supports this API.
     * @param filter | Field | Supported operators
     * |---------------------|------------------------
     * 
     * location eq {location}
     * Example: $filter=location eq eastus.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the GroupQuotaLimits for the all resource for a specific resourceProvider and $filter passed.
     * The $filter=location eq {location} is required to location specific resources groupQuota as paginated response
     * with {@link PagedIterable}.
     */
    PagedIterable<GroupQuotaLimit> list(String managementGroupId, String groupQuotaName, String resourceProviderName,
        String filter);

    /**
     * Gets the GroupQuotaLimits for all the resources for the specified location in $filter=location eq {location}.
     * 
     * Gets the GroupQuotaLimits for the all resource for a specific resourceProvider and $filter passed.
     * The $filter=location eq {location} is required to location specific resources groupQuota.
     * 
     * @param managementGroupId Management Group Id.
     * @param groupQuotaName The GroupQuota name. The name should be unique for the provided context tenantId/MgId.
     * @param resourceProviderName The resource provider name, such as - Microsoft.Compute. Currently only
     * Microsoft.Compute resource provider supports this API.
     * @param filter | Field | Supported operators
     * |---------------------|------------------------
     * 
     * location eq {location}
     * Example: $filter=location eq eastus.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the GroupQuotaLimits for the all resource for a specific resourceProvider and $filter passed.
     * The $filter=location eq {location} is required to location specific resources groupQuota as paginated response
     * with {@link PagedIterable}.
     */
    PagedIterable<GroupQuotaLimit> list(String managementGroupId, String groupQuotaName, String resourceProviderName,
        String filter, Context context);
}
