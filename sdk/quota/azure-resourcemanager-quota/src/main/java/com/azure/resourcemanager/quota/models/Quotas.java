// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.quota.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of Quotas. */
public interface Quotas {
    /**
     * Gets the quota limit and current quota usage of a resource. The response can be used to determine the remaining
     * quota and calculate a new quota limit that can be submitted with a PUT request.
     *
     * @param resourceName Resource name for a given resource provider. For example: - SKU name for Microsoft.Compute -
     *     Sku or TotalLowPriorityCores for Microsoft.MachineLearningServices.
     * @param scope The target Azure resource URI. For example,
     *     `/subscriptions/9f6cce51-6baf-4de5-a3c4-6f58b85315b9/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.
     *     This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added after
     *     `/quotaLimits`, then it's the target Azure resource URI in the GET operation for the specific resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the quota limit and current quota usage of a resource.
     */
    CurrentQuotaLimitBase get(String resourceName, String scope);

    /**
     * Gets the quota limit and current quota usage of a resource. The response can be used to determine the remaining
     * quota and calculate a new quota limit that can be submitted with a PUT request.
     *
     * @param resourceName Resource name for a given resource provider. For example: - SKU name for Microsoft.Compute -
     *     Sku or TotalLowPriorityCores for Microsoft.MachineLearningServices.
     * @param scope The target Azure resource URI. For example,
     *     `/subscriptions/9f6cce51-6baf-4de5-a3c4-6f58b85315b9/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.
     *     This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added after
     *     `/quotaLimits`, then it's the target Azure resource URI in the GET operation for the specific resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the quota limit and current quota usage of a resource.
     */
    Response<CurrentQuotaLimitBase> getWithResponse(String resourceName, String scope, Context context);

    /**
     * Get a list of current quota limits and usages of all resources. The response from this GET operation can be
     * leveraged to submit requests to update a quota.
     *
     * @param scope The target Azure resource URI. For example,
     *     `/subscriptions/9f6cce51-6baf-4de5-a3c4-6f58b85315b9/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.
     *     This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added after
     *     `/quotaLimits`, then it's the target Azure resource URI in the GET operation for the specific resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of current quota limits and usages of all resources.
     */
    PagedIterable<CurrentQuotaLimitBase> list(String scope);

    /**
     * Get a list of current quota limits and usages of all resources. The response from this GET operation can be
     * leveraged to submit requests to update a quota.
     *
     * @param scope The target Azure resource URI. For example,
     *     `/subscriptions/9f6cce51-6baf-4de5-a3c4-6f58b85315b9/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.
     *     This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added after
     *     `/quotaLimits`, then it's the target Azure resource URI in the GET operation for the specific resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of current quota limits and usages of all resources.
     */
    PagedIterable<CurrentQuotaLimitBase> list(String scope, Context context);

    /**
     * Gets the quota limit and current quota usage of a resource. The response can be used to determine the remaining
     * quota and calculate a new quota limit that can be submitted with a PUT request.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the quota limit and current quota usage of a resource.
     */
    CurrentQuotaLimitBase getById(String id);

    /**
     * Gets the quota limit and current quota usage of a resource. The response can be used to determine the remaining
     * quota and calculate a new quota limit that can be submitted with a PUT request.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the quota limit and current quota usage of a resource.
     */
    Response<CurrentQuotaLimitBase> getByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new CurrentQuotaLimitBase resource.
     *
     * @param name resource name.
     * @return the first stage of the new CurrentQuotaLimitBase definition.
     */
    CurrentQuotaLimitBase.DefinitionStages.Blank define(String name);
}
