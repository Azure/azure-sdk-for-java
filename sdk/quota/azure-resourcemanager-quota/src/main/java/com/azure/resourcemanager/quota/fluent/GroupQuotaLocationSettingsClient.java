// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.quota.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.quota.fluent.models.GroupQuotasEnforcementStatusInner;

/**
 * An instance of this class provides access to all the operations defined in GroupQuotaLocationSettingsClient.
 */
public interface GroupQuotaLocationSettingsClient {
    /**
     * Gets the GroupQuotas enforcement settings for the ResourceProvider/location. The locations, where GroupQuota
     * enforcement is not enabled will return Not Found.
     * 
     * @param managementGroupId The management group ID.
     * @param groupQuotaName The GroupQuota name. The name should be unique for the provided context tenantId/MgId.
     * @param resourceProviderName The resource provider name, such as - Microsoft.Compute. Currently only
     * Microsoft.Compute resource provider supports this API.
     * @param location The name of the Azure region.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the GroupQuotas enforcement settings for the ResourceProvider/location along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<GroupQuotasEnforcementStatusInner> getWithResponse(String managementGroupId, String groupQuotaName,
        String resourceProviderName, String location, Context context);

    /**
     * Gets the GroupQuotas enforcement settings for the ResourceProvider/location. The locations, where GroupQuota
     * enforcement is not enabled will return Not Found.
     * 
     * @param managementGroupId The management group ID.
     * @param groupQuotaName The GroupQuota name. The name should be unique for the provided context tenantId/MgId.
     * @param resourceProviderName The resource provider name, such as - Microsoft.Compute. Currently only
     * Microsoft.Compute resource provider supports this API.
     * @param location The name of the Azure region.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the GroupQuotas enforcement settings for the ResourceProvider/location.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    GroupQuotasEnforcementStatusInner get(String managementGroupId, String groupQuotaName, String resourceProviderName,
        String location);

    /**
     * Enables the GroupQuotas enforcement for the resource provider and the location specified. The resource provider
     * will start using the group quotas as the overall quota for the subscriptions included in the GroupQuota. The
     * subscriptions cannot request quota at subscription level since it is now part of an enforced group.
     * The subscriptions share the GroupQuotaLimits assigned to the GroupQuota. If the GroupQuotaLimits is used, then
     * submit a groupQuotaLimit request for the specific resource - provider/location/resource.
     * Once the GroupQuota Enforcement is enabled then, it cannot be deleted or reverted back. To disable GroupQuota
     * Enforcement -
     * 1. Remove all the subscriptions from the groupQuota using the delete API for Subscriptions (Check the example -
     * GroupQuotaSubscriptions_Delete).
     * 2. Then delete the GroupQuota (Check the example - GroupQuotas_Delete).
     * 
     * @param managementGroupId The management group ID.
     * @param groupQuotaName The GroupQuota name. The name should be unique for the provided context tenantId/MgId.
     * @param resourceProviderName The resource provider name, such as - Microsoft.Compute. Currently only
     * Microsoft.Compute resource provider supports this API.
     * @param location The name of the Azure region.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the GroupQuota Enforcement status for a Azure Location/Region.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<GroupQuotasEnforcementStatusInner>, GroupQuotasEnforcementStatusInner> beginCreateOrUpdate(
        String managementGroupId, String groupQuotaName, String resourceProviderName, String location);

    /**
     * Enables the GroupQuotas enforcement for the resource provider and the location specified. The resource provider
     * will start using the group quotas as the overall quota for the subscriptions included in the GroupQuota. The
     * subscriptions cannot request quota at subscription level since it is now part of an enforced group.
     * The subscriptions share the GroupQuotaLimits assigned to the GroupQuota. If the GroupQuotaLimits is used, then
     * submit a groupQuotaLimit request for the specific resource - provider/location/resource.
     * Once the GroupQuota Enforcement is enabled then, it cannot be deleted or reverted back. To disable GroupQuota
     * Enforcement -
     * 1. Remove all the subscriptions from the groupQuota using the delete API for Subscriptions (Check the example -
     * GroupQuotaSubscriptions_Delete).
     * 2. Then delete the GroupQuota (Check the example - GroupQuotas_Delete).
     * 
     * @param managementGroupId The management group ID.
     * @param groupQuotaName The GroupQuota name. The name should be unique for the provided context tenantId/MgId.
     * @param resourceProviderName The resource provider name, such as - Microsoft.Compute. Currently only
     * Microsoft.Compute resource provider supports this API.
     * @param location The name of the Azure region.
     * @param locationSettings The GroupQuota body details for creation or update of a GroupQuota entity.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the GroupQuota Enforcement status for a Azure Location/Region.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<GroupQuotasEnforcementStatusInner>, GroupQuotasEnforcementStatusInner> beginCreateOrUpdate(
        String managementGroupId, String groupQuotaName, String resourceProviderName, String location,
        GroupQuotasEnforcementStatusInner locationSettings, Context context);

    /**
     * Enables the GroupQuotas enforcement for the resource provider and the location specified. The resource provider
     * will start using the group quotas as the overall quota for the subscriptions included in the GroupQuota. The
     * subscriptions cannot request quota at subscription level since it is now part of an enforced group.
     * The subscriptions share the GroupQuotaLimits assigned to the GroupQuota. If the GroupQuotaLimits is used, then
     * submit a groupQuotaLimit request for the specific resource - provider/location/resource.
     * Once the GroupQuota Enforcement is enabled then, it cannot be deleted or reverted back. To disable GroupQuota
     * Enforcement -
     * 1. Remove all the subscriptions from the groupQuota using the delete API for Subscriptions (Check the example -
     * GroupQuotaSubscriptions_Delete).
     * 2. Then delete the GroupQuota (Check the example - GroupQuotas_Delete).
     * 
     * @param managementGroupId The management group ID.
     * @param groupQuotaName The GroupQuota name. The name should be unique for the provided context tenantId/MgId.
     * @param resourceProviderName The resource provider name, such as - Microsoft.Compute. Currently only
     * Microsoft.Compute resource provider supports this API.
     * @param location The name of the Azure region.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the GroupQuota Enforcement status for a Azure Location/Region.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    GroupQuotasEnforcementStatusInner createOrUpdate(String managementGroupId, String groupQuotaName,
        String resourceProviderName, String location);

    /**
     * Enables the GroupQuotas enforcement for the resource provider and the location specified. The resource provider
     * will start using the group quotas as the overall quota for the subscriptions included in the GroupQuota. The
     * subscriptions cannot request quota at subscription level since it is now part of an enforced group.
     * The subscriptions share the GroupQuotaLimits assigned to the GroupQuota. If the GroupQuotaLimits is used, then
     * submit a groupQuotaLimit request for the specific resource - provider/location/resource.
     * Once the GroupQuota Enforcement is enabled then, it cannot be deleted or reverted back. To disable GroupQuota
     * Enforcement -
     * 1. Remove all the subscriptions from the groupQuota using the delete API for Subscriptions (Check the example -
     * GroupQuotaSubscriptions_Delete).
     * 2. Then delete the GroupQuota (Check the example - GroupQuotas_Delete).
     * 
     * @param managementGroupId The management group ID.
     * @param groupQuotaName The GroupQuota name. The name should be unique for the provided context tenantId/MgId.
     * @param resourceProviderName The resource provider name, such as - Microsoft.Compute. Currently only
     * Microsoft.Compute resource provider supports this API.
     * @param location The name of the Azure region.
     * @param locationSettings The GroupQuota body details for creation or update of a GroupQuota entity.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the GroupQuota Enforcement status for a Azure Location/Region.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    GroupQuotasEnforcementStatusInner createOrUpdate(String managementGroupId, String groupQuotaName,
        String resourceProviderName, String location, GroupQuotasEnforcementStatusInner locationSettings,
        Context context);

    /**
     * Enables the GroupQuotas enforcement for the resource provider and the location specified. The resource provider
     * will start using the group quotas as the overall quota for the subscriptions included in the GroupQuota. The
     * subscriptions cannot request quota at subscription level since it is now part of an enforced group.
     * The subscriptions share the GroupQuotaLimits assigned to the GroupQuota. If the GroupQuotaLimits is used, then
     * submit a groupQuotaLimit request for the specific resource - provider/location/resource.
     * Once the GroupQuota Enforcement is enabled then, it cannot be deleted or reverted back. To disable GroupQuota
     * Enforcement -
     * 1. Remove all the subscriptions from the groupQuota using the delete API for Subscriptions (Check the example -
     * GroupQuotaSubscriptions_Delete).
     * 2. Ten delete the GroupQuota (Check the example - GroupQuotas_Delete).
     * 
     * @param managementGroupId The management group ID.
     * @param groupQuotaName The GroupQuota name. The name should be unique for the provided context tenantId/MgId.
     * @param resourceProviderName The resource provider name, such as - Microsoft.Compute. Currently only
     * Microsoft.Compute resource provider supports this API.
     * @param location The name of the Azure region.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the GroupQuota Enforcement status for a Azure Location/Region.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<GroupQuotasEnforcementStatusInner>, GroupQuotasEnforcementStatusInner>
        beginUpdate(String managementGroupId, String groupQuotaName, String resourceProviderName, String location);

    /**
     * Enables the GroupQuotas enforcement for the resource provider and the location specified. The resource provider
     * will start using the group quotas as the overall quota for the subscriptions included in the GroupQuota. The
     * subscriptions cannot request quota at subscription level since it is now part of an enforced group.
     * The subscriptions share the GroupQuotaLimits assigned to the GroupQuota. If the GroupQuotaLimits is used, then
     * submit a groupQuotaLimit request for the specific resource - provider/location/resource.
     * Once the GroupQuota Enforcement is enabled then, it cannot be deleted or reverted back. To disable GroupQuota
     * Enforcement -
     * 1. Remove all the subscriptions from the groupQuota using the delete API for Subscriptions (Check the example -
     * GroupQuotaSubscriptions_Delete).
     * 2. Ten delete the GroupQuota (Check the example - GroupQuotas_Delete).
     * 
     * @param managementGroupId The management group ID.
     * @param groupQuotaName The GroupQuota name. The name should be unique for the provided context tenantId/MgId.
     * @param resourceProviderName The resource provider name, such as - Microsoft.Compute. Currently only
     * Microsoft.Compute resource provider supports this API.
     * @param location The name of the Azure region.
     * @param locationSettings The GroupQuota body details for creation or update of a GroupQuota entity.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the GroupQuota Enforcement status for a Azure Location/Region.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<GroupQuotasEnforcementStatusInner>, GroupQuotasEnforcementStatusInner> beginUpdate(
        String managementGroupId, String groupQuotaName, String resourceProviderName, String location,
        GroupQuotasEnforcementStatusInner locationSettings, Context context);

    /**
     * Enables the GroupQuotas enforcement for the resource provider and the location specified. The resource provider
     * will start using the group quotas as the overall quota for the subscriptions included in the GroupQuota. The
     * subscriptions cannot request quota at subscription level since it is now part of an enforced group.
     * The subscriptions share the GroupQuotaLimits assigned to the GroupQuota. If the GroupQuotaLimits is used, then
     * submit a groupQuotaLimit request for the specific resource - provider/location/resource.
     * Once the GroupQuota Enforcement is enabled then, it cannot be deleted or reverted back. To disable GroupQuota
     * Enforcement -
     * 1. Remove all the subscriptions from the groupQuota using the delete API for Subscriptions (Check the example -
     * GroupQuotaSubscriptions_Delete).
     * 2. Ten delete the GroupQuota (Check the example - GroupQuotas_Delete).
     * 
     * @param managementGroupId The management group ID.
     * @param groupQuotaName The GroupQuota name. The name should be unique for the provided context tenantId/MgId.
     * @param resourceProviderName The resource provider name, such as - Microsoft.Compute. Currently only
     * Microsoft.Compute resource provider supports this API.
     * @param location The name of the Azure region.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the GroupQuota Enforcement status for a Azure Location/Region.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    GroupQuotasEnforcementStatusInner update(String managementGroupId, String groupQuotaName,
        String resourceProviderName, String location);

    /**
     * Enables the GroupQuotas enforcement for the resource provider and the location specified. The resource provider
     * will start using the group quotas as the overall quota for the subscriptions included in the GroupQuota. The
     * subscriptions cannot request quota at subscription level since it is now part of an enforced group.
     * The subscriptions share the GroupQuotaLimits assigned to the GroupQuota. If the GroupQuotaLimits is used, then
     * submit a groupQuotaLimit request for the specific resource - provider/location/resource.
     * Once the GroupQuota Enforcement is enabled then, it cannot be deleted or reverted back. To disable GroupQuota
     * Enforcement -
     * 1. Remove all the subscriptions from the groupQuota using the delete API for Subscriptions (Check the example -
     * GroupQuotaSubscriptions_Delete).
     * 2. Ten delete the GroupQuota (Check the example - GroupQuotas_Delete).
     * 
     * @param managementGroupId The management group ID.
     * @param groupQuotaName The GroupQuota name. The name should be unique for the provided context tenantId/MgId.
     * @param resourceProviderName The resource provider name, such as - Microsoft.Compute. Currently only
     * Microsoft.Compute resource provider supports this API.
     * @param location The name of the Azure region.
     * @param locationSettings The GroupQuota body details for creation or update of a GroupQuota entity.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the GroupQuota Enforcement status for a Azure Location/Region.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    GroupQuotasEnforcementStatusInner update(String managementGroupId, String groupQuotaName,
        String resourceProviderName, String location, GroupQuotasEnforcementStatusInner locationSettings,
        Context context);
}
