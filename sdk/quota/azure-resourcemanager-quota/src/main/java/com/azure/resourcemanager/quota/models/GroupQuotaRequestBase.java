// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.quota.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.quota.fluent.models.GroupQuotaRequestBaseProperties;
import java.io.IOException;

/**
 * The new GroupQuota limit requested.
 */
@Immutable
public final class GroupQuotaRequestBase implements JsonSerializable<GroupQuotaRequestBase> {
    /*
     * The properties property.
     */
    private GroupQuotaRequestBaseProperties innerProperties;

    /**
     * Creates an instance of GroupQuotaRequestBase class.
     */
    private GroupQuotaRequestBase() {
    }

    /**
     * Get the innerProperties property: The properties property.
     * 
     * @return the innerProperties value.
     */
    private GroupQuotaRequestBaseProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the limit property: The new quota limit for the subscription. The incremental quota will be allocated from
     * pre-approved group quota.
     * 
     * @return the limit value.
     */
    public Long limit() {
        return this.innerProperties() == null ? null : this.innerProperties().limit();
    }

    /**
     * Get the region property: Location/Azure region for the quota requested for resource.
     * 
     * @return the region value.
     */
    public String region() {
        return this.innerProperties() == null ? null : this.innerProperties().region();
    }

    /**
     * Get the comments property: GroupQuota Request comments and details for request. This is optional paramter to
     * provide more details related to the requested resource.
     * 
     * @return the comments value.
     */
    public String comments() {
        return this.innerProperties() == null ? null : this.innerProperties().comments();
    }

    /**
     * Get the value property: Resource name.
     * 
     * @return the value value.
     */
    public String value() {
        return this.innerProperties() == null ? null : this.innerProperties().value();
    }

    /**
     * Get the localizedValue property: Resource display name.
     * 
     * @return the localizedValue value.
     */
    public String localizedValue() {
        return this.innerProperties() == null ? null : this.innerProperties().localizedValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("properties", this.innerProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of GroupQuotaRequestBase from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of GroupQuotaRequestBase if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the GroupQuotaRequestBase.
     */
    public static GroupQuotaRequestBase fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            GroupQuotaRequestBase deserializedGroupQuotaRequestBase = new GroupQuotaRequestBase();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("properties".equals(fieldName)) {
                    deserializedGroupQuotaRequestBase.innerProperties
                        = GroupQuotaRequestBaseProperties.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedGroupQuotaRequestBase;
        });
    }
}
