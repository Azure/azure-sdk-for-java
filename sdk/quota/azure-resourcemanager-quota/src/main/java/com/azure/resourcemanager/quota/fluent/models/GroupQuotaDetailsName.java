// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.quota.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Name of the resource provided by the resource provider. This property is already included in the request URI, so it
 * is a readonly property returned in the response.
 */
@Immutable
public final class GroupQuotaDetailsName implements JsonSerializable<GroupQuotaDetailsName> {
    /*
     * Resource name.
     */
    private String value;

    /*
     * Resource display name.
     */
    private String localizedValue;

    /**
     * Creates an instance of GroupQuotaDetailsName class.
     */
    public GroupQuotaDetailsName() {
    }

    /**
     * Get the value property: Resource name.
     * 
     * @return the value value.
     */
    public String value() {
        return this.value;
    }

    /**
     * Get the localizedValue property: Resource display name.
     * 
     * @return the localizedValue value.
     */
    public String localizedValue() {
        return this.localizedValue;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of GroupQuotaDetailsName from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of GroupQuotaDetailsName if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the GroupQuotaDetailsName.
     */
    public static GroupQuotaDetailsName fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            GroupQuotaDetailsName deserializedGroupQuotaDetailsName = new GroupQuotaDetailsName();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("value".equals(fieldName)) {
                    deserializedGroupQuotaDetailsName.value = reader.getString();
                } else if ("localizedValue".equals(fieldName)) {
                    deserializedGroupQuotaDetailsName.localizedValue = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedGroupQuotaDetailsName;
        });
    }
}
