// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.quota.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.quota.fluent.models.GroupQuotaDetailsName;
import java.io.IOException;

/**
 * Group Quota details.
 */
@Fluent
public class GroupQuotaDetails implements JsonSerializable<GroupQuotaDetails> {
    /*
     * The resource name, such as SKU name.
     */
    private String resourceName;

    /*
     * The current Group Quota Limit at the parentId level.
     */
    private Long limit;

    /*
     * Any comment related to quota request.
     */
    private String comment;

    /*
     * The usages units, such as Count and Bytes. When requesting quota, use the **unit** value returned in the GET
     * response in the request body of your PUT operation.
     */
    private String unit;

    /*
     * Name of the resource provided by the resource provider. This property is already included in the request URI, so
     * it is a readonly property returned in the response.
     */
    private GroupQuotaDetailsName innerName;

    /*
     * The available Group Quota Limit at the MG level. This Group quota can be allocated to subscription(s).
     */
    private Long availableLimit;

    /*
     * Quota allocated to subscriptions
     */
    private AllocatedQuotaToSubscriptionList allocatedToSubscriptions;

    /**
     * Creates an instance of GroupQuotaDetails class.
     */
    public GroupQuotaDetails() {
    }

    /**
     * Get the resourceName property: The resource name, such as SKU name.
     * 
     * @return the resourceName value.
     */
    public String resourceName() {
        return this.resourceName;
    }

    /**
     * Set the resourceName property: The resource name, such as SKU name.
     * 
     * @param resourceName the resourceName value to set.
     * @return the GroupQuotaDetails object itself.
     */
    public GroupQuotaDetails withResourceName(String resourceName) {
        this.resourceName = resourceName;
        return this;
    }

    /**
     * Get the limit property: The current Group Quota Limit at the parentId level.
     * 
     * @return the limit value.
     */
    public Long limit() {
        return this.limit;
    }

    /**
     * Set the limit property: The current Group Quota Limit at the parentId level.
     * 
     * @param limit the limit value to set.
     * @return the GroupQuotaDetails object itself.
     */
    public GroupQuotaDetails withLimit(Long limit) {
        this.limit = limit;
        return this;
    }

    /**
     * Get the comment property: Any comment related to quota request.
     * 
     * @return the comment value.
     */
    public String comment() {
        return this.comment;
    }

    /**
     * Set the comment property: Any comment related to quota request.
     * 
     * @param comment the comment value to set.
     * @return the GroupQuotaDetails object itself.
     */
    public GroupQuotaDetails withComment(String comment) {
        this.comment = comment;
        return this;
    }

    /**
     * Get the unit property: The usages units, such as Count and Bytes. When requesting quota, use the **unit** value
     * returned in the GET response in the request body of your PUT operation.
     * 
     * @return the unit value.
     */
    public String unit() {
        return this.unit;
    }

    /**
     * Set the unit property: The usages units, such as Count and Bytes. When requesting quota, use the **unit** value
     * returned in the GET response in the request body of your PUT operation.
     * 
     * @param unit the unit value to set.
     * @return the GroupQuotaDetails object itself.
     */
    GroupQuotaDetails withUnit(String unit) {
        this.unit = unit;
        return this;
    }

    /**
     * Get the innerName property: Name of the resource provided by the resource provider. This property is already
     * included in the request URI, so it is a readonly property returned in the response.
     * 
     * @return the innerName value.
     */
    private GroupQuotaDetailsName innerName() {
        return this.innerName;
    }

    /**
     * Set the innerName property: Name of the resource provided by the resource provider. This property is already
     * included in the request URI, so it is a readonly property returned in the response.
     * 
     * @param innerName the innerName value to set.
     * @return the GroupQuotaDetails object itself.
     */
    GroupQuotaDetails withInnerName(GroupQuotaDetailsName innerName) {
        this.innerName = innerName;
        return this;
    }

    /**
     * Get the availableLimit property: The available Group Quota Limit at the MG level. This Group quota can be
     * allocated to subscription(s).
     * 
     * @return the availableLimit value.
     */
    public Long availableLimit() {
        return this.availableLimit;
    }

    /**
     * Set the availableLimit property: The available Group Quota Limit at the MG level. This Group quota can be
     * allocated to subscription(s).
     * 
     * @param availableLimit the availableLimit value to set.
     * @return the GroupQuotaDetails object itself.
     */
    GroupQuotaDetails withAvailableLimit(Long availableLimit) {
        this.availableLimit = availableLimit;
        return this;
    }

    /**
     * Get the allocatedToSubscriptions property: Quota allocated to subscriptions.
     * 
     * @return the allocatedToSubscriptions value.
     */
    public AllocatedQuotaToSubscriptionList allocatedToSubscriptions() {
        return this.allocatedToSubscriptions;
    }

    /**
     * Set the allocatedToSubscriptions property: Quota allocated to subscriptions.
     * 
     * @param allocatedToSubscriptions the allocatedToSubscriptions value to set.
     * @return the GroupQuotaDetails object itself.
     */
    GroupQuotaDetails withAllocatedToSubscriptions(AllocatedQuotaToSubscriptionList allocatedToSubscriptions) {
        this.allocatedToSubscriptions = allocatedToSubscriptions;
        return this;
    }

    /**
     * Get the value property: Resource name.
     * 
     * @return the value value.
     */
    public String value() {
        return this.innerName() == null ? null : this.innerName().value();
    }

    /**
     * Get the localizedValue property: Resource display name.
     * 
     * @return the localizedValue value.
     */
    public String localizedValue() {
        return this.innerName() == null ? null : this.innerName().localizedValue();
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerName() != null) {
            innerName().validate();
        }
        if (allocatedToSubscriptions() != null) {
            allocatedToSubscriptions().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("resourceName", this.resourceName);
        jsonWriter.writeNumberField("limit", this.limit);
        jsonWriter.writeStringField("comment", this.comment);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of GroupQuotaDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of GroupQuotaDetails if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the GroupQuotaDetails.
     */
    public static GroupQuotaDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            GroupQuotaDetails deserializedGroupQuotaDetails = new GroupQuotaDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("resourceName".equals(fieldName)) {
                    deserializedGroupQuotaDetails.resourceName = reader.getString();
                } else if ("limit".equals(fieldName)) {
                    deserializedGroupQuotaDetails.limit = reader.getNullable(JsonReader::getLong);
                } else if ("comment".equals(fieldName)) {
                    deserializedGroupQuotaDetails.comment = reader.getString();
                } else if ("unit".equals(fieldName)) {
                    deserializedGroupQuotaDetails.unit = reader.getString();
                } else if ("name".equals(fieldName)) {
                    deserializedGroupQuotaDetails.innerName = GroupQuotaDetailsName.fromJson(reader);
                } else if ("availableLimit".equals(fieldName)) {
                    deserializedGroupQuotaDetails.availableLimit = reader.getNullable(JsonReader::getLong);
                } else if ("allocatedToSubscriptions".equals(fieldName)) {
                    deserializedGroupQuotaDetails.allocatedToSubscriptions
                        = AllocatedQuotaToSubscriptionList.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedGroupQuotaDetails;
        });
    }
}
