// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.quota.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.quota.fluent.models.GroupQuotaUsagesBaseName;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Resource details with usages and GroupQuota.
 */
@Fluent
public final class GroupQuotaUsagesBase {
    /*
     * Name of the resource provided by the resource provider. This property is already included in the request URI, so it is a readonly property returned in the response.
     */
    @JsonProperty(value = "name")
    private GroupQuotaUsagesBaseName innerName;

    /*
     * Quota/limits for the resource.
     */
    @JsonProperty(value = "limit")
    private Long limit;

    /*
     * Usages for the resource.
     */
    @JsonProperty(value = "usages")
    private Long usages;

    /*
     * Representing the units of the usage quota. Possible values are: Count, Bytes, Seconds, Percent, CountPerSecond, BytesPerSecond. Based on - https://armwiki.azurewebsites.net/api_contracts/UsagesAPIContract.html?q=usages . Different RPs may have different units, Count, type as int64 should work for most of the integer values.
     */
    @JsonProperty(value = "unit", access = JsonProperty.Access.WRITE_ONLY)
    private String unit;

    /**
     * Creates an instance of GroupQuotaUsagesBase class.
     */
    public GroupQuotaUsagesBase() {
    }

    /**
     * Get the innerName property: Name of the resource provided by the resource provider. This property is already
     * included in the request URI, so it is a readonly property returned in the response.
     * 
     * @return the innerName value.
     */
    private GroupQuotaUsagesBaseName innerName() {
        return this.innerName;
    }

    /**
     * Get the limit property: Quota/limits for the resource.
     * 
     * @return the limit value.
     */
    public Long limit() {
        return this.limit;
    }

    /**
     * Set the limit property: Quota/limits for the resource.
     * 
     * @param limit the limit value to set.
     * @return the GroupQuotaUsagesBase object itself.
     */
    public GroupQuotaUsagesBase withLimit(Long limit) {
        this.limit = limit;
        return this;
    }

    /**
     * Get the usages property: Usages for the resource.
     * 
     * @return the usages value.
     */
    public Long usages() {
        return this.usages;
    }

    /**
     * Set the usages property: Usages for the resource.
     * 
     * @param usages the usages value to set.
     * @return the GroupQuotaUsagesBase object itself.
     */
    public GroupQuotaUsagesBase withUsages(Long usages) {
        this.usages = usages;
        return this;
    }

    /**
     * Get the unit property: Representing the units of the usage quota. Possible values are: Count, Bytes, Seconds,
     * Percent, CountPerSecond, BytesPerSecond. Based on -
     * https://armwiki.azurewebsites.net/api_contracts/UsagesAPIContract.html?q=usages . Different RPs may have
     * different units, Count, type as int64 should work for most of the integer values.
     * 
     * @return the unit value.
     */
    public String unit() {
        return this.unit;
    }

    /**
     * Get the value property: Resource name.
     * 
     * @return the value value.
     */
    public String value() {
        return this.innerName() == null ? null : this.innerName().value();
    }

    /**
     * Set the value property: Resource name.
     * 
     * @param value the value value to set.
     * @return the GroupQuotaUsagesBase object itself.
     */
    public GroupQuotaUsagesBase withValue(String value) {
        if (this.innerName() == null) {
            this.innerName = new GroupQuotaUsagesBaseName();
        }
        this.innerName().withValue(value);
        return this;
    }

    /**
     * Get the localizedValue property: Resource display name.
     * 
     * @return the localizedValue value.
     */
    public String localizedValue() {
        return this.innerName() == null ? null : this.innerName().localizedValue();
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerName() != null) {
            innerName().validate();
        }
    }
}
