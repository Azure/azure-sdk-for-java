// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.quota.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Resource provider information. */
@JsonFlatten
@Fluent
public class ResourceProviderInformation {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ResourceProviderInformation.class);

    /*
     * Resource provider name.
     */
    @JsonProperty(value = "resourceProviderName")
    private String resourceProviderName;

    /*
     * The resource provider templates
     */
    @JsonProperty(value = "properties.value")
    private List<ResourceProviderTemplate> value;

    /**
     * Get the resourceProviderName property: Resource provider name.
     *
     * @return the resourceProviderName value.
     */
    public String resourceProviderName() {
        return this.resourceProviderName;
    }

    /**
     * Set the resourceProviderName property: Resource provider name.
     *
     * @param resourceProviderName the resourceProviderName value to set.
     * @return the ResourceProviderInformation object itself.
     */
    public ResourceProviderInformation withResourceProviderName(String resourceProviderName) {
        this.resourceProviderName = resourceProviderName;
        return this;
    }

    /**
     * Get the value property: The resource provider templates.
     *
     * @return the value value.
     */
    public List<ResourceProviderTemplate> value() {
        return this.value;
    }

    /**
     * Set the value property: The resource provider templates.
     *
     * @param value the value value to set.
     * @return the ResourceProviderInformation object itself.
     */
    public ResourceProviderInformation withValue(List<ResourceProviderTemplate> value) {
        this.value = value;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (value() != null) {
            value().forEach(e -> e.validate());
        }
    }
}
