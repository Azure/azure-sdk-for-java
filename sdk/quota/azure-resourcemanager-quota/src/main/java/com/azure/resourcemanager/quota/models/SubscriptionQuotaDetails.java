// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.quota.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.quota.fluent.models.SubscriptionQuotaDetailsName;
import java.io.IOException;

/**
 * Subscription Quota details.
 */
@Fluent
public class SubscriptionQuotaDetails implements JsonSerializable<SubscriptionQuotaDetails> {
    /*
     * The resource name, such as SKU name.
     */
    private String resourceName;

    /*
     * The total quota limit for the subscription.
     */
    private Long limit;

    /*
     * The shareable quota for the subscription.
     */
    private Long shareableQuota;

    /*
     * Name of the resource provided by the resource provider. This property is already included in the request URI, so
     * it is a readonly property returned in the response.
     */
    private SubscriptionQuotaDetailsName innerName;

    /**
     * Creates an instance of SubscriptionQuotaDetails class.
     */
    public SubscriptionQuotaDetails() {
    }

    /**
     * Get the resourceName property: The resource name, such as SKU name.
     * 
     * @return the resourceName value.
     */
    public String resourceName() {
        return this.resourceName;
    }

    /**
     * Set the resourceName property: The resource name, such as SKU name.
     * 
     * @param resourceName the resourceName value to set.
     * @return the SubscriptionQuotaDetails object itself.
     */
    public SubscriptionQuotaDetails withResourceName(String resourceName) {
        this.resourceName = resourceName;
        return this;
    }

    /**
     * Get the limit property: The total quota limit for the subscription.
     * 
     * @return the limit value.
     */
    public Long limit() {
        return this.limit;
    }

    /**
     * Set the limit property: The total quota limit for the subscription.
     * 
     * @param limit the limit value to set.
     * @return the SubscriptionQuotaDetails object itself.
     */
    public SubscriptionQuotaDetails withLimit(Long limit) {
        this.limit = limit;
        return this;
    }

    /**
     * Get the shareableQuota property: The shareable quota for the subscription.
     * 
     * @return the shareableQuota value.
     */
    public Long shareableQuota() {
        return this.shareableQuota;
    }

    /**
     * Set the shareableQuota property: The shareable quota for the subscription.
     * 
     * @param shareableQuota the shareableQuota value to set.
     * @return the SubscriptionQuotaDetails object itself.
     */
    SubscriptionQuotaDetails withShareableQuota(Long shareableQuota) {
        this.shareableQuota = shareableQuota;
        return this;
    }

    /**
     * Get the innerName property: Name of the resource provided by the resource provider. This property is already
     * included in the request URI, so it is a readonly property returned in the response.
     * 
     * @return the innerName value.
     */
    private SubscriptionQuotaDetailsName innerName() {
        return this.innerName;
    }

    /**
     * Set the innerName property: Name of the resource provided by the resource provider. This property is already
     * included in the request URI, so it is a readonly property returned in the response.
     * 
     * @param innerName the innerName value to set.
     * @return the SubscriptionQuotaDetails object itself.
     */
    SubscriptionQuotaDetails withInnerName(SubscriptionQuotaDetailsName innerName) {
        this.innerName = innerName;
        return this;
    }

    /**
     * Get the value property: Resource name.
     * 
     * @return the value value.
     */
    public String value() {
        return this.innerName() == null ? null : this.innerName().value();
    }

    /**
     * Get the localizedValue property: Resource display name.
     * 
     * @return the localizedValue value.
     */
    public String localizedValue() {
        return this.innerName() == null ? null : this.innerName().localizedValue();
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerName() != null) {
            innerName().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("resourceName", this.resourceName);
        jsonWriter.writeNumberField("limit", this.limit);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SubscriptionQuotaDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SubscriptionQuotaDetails if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SubscriptionQuotaDetails.
     */
    public static SubscriptionQuotaDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SubscriptionQuotaDetails deserializedSubscriptionQuotaDetails = new SubscriptionQuotaDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("resourceName".equals(fieldName)) {
                    deserializedSubscriptionQuotaDetails.resourceName = reader.getString();
                } else if ("limit".equals(fieldName)) {
                    deserializedSubscriptionQuotaDetails.limit = reader.getNullable(JsonReader::getLong);
                } else if ("shareableQuota".equals(fieldName)) {
                    deserializedSubscriptionQuotaDetails.shareableQuota = reader.getNullable(JsonReader::getLong);
                } else if ("name".equals(fieldName)) {
                    deserializedSubscriptionQuotaDetails.innerName = SubscriptionQuotaDetailsName.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSubscriptionQuotaDetails;
        });
    }
}
