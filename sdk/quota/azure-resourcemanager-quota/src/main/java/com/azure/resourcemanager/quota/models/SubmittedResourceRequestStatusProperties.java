// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.quota.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;

/**
 * The SubmittedResourceRequestStatusProperties model.
 */
@Fluent
public final class SubmittedResourceRequestStatusProperties
    implements JsonSerializable<SubmittedResourceRequestStatusProperties> {
    /*
     * Requested Resource.
     */
    private GroupQuotaRequestBase requestedResource;

    /*
     * The request submission time. The date conforms to the following format specified by the ISO 8601 standard:
     * yyyy-MM-ddTHH:mm:ssZ
     */
    private OffsetDateTime requestSubmitTime;

    /*
     * Request status.
     */
    private RequestState provisioningState;

    /*
     * Details of the failure.
     */
    private String faultCode;

    /**
     * Creates an instance of SubmittedResourceRequestStatusProperties class.
     */
    public SubmittedResourceRequestStatusProperties() {
    }

    /**
     * Get the requestedResource property: Requested Resource.
     * 
     * @return the requestedResource value.
     */
    public GroupQuotaRequestBase requestedResource() {
        return this.requestedResource;
    }

    /**
     * Set the requestedResource property: Requested Resource.
     * 
     * @param requestedResource the requestedResource value to set.
     * @return the SubmittedResourceRequestStatusProperties object itself.
     */
    public SubmittedResourceRequestStatusProperties withRequestedResource(GroupQuotaRequestBase requestedResource) {
        this.requestedResource = requestedResource;
        return this;
    }

    /**
     * Get the requestSubmitTime property: The request submission time. The date conforms to the following format
     * specified by the ISO 8601 standard: yyyy-MM-ddTHH:mm:ssZ.
     * 
     * @return the requestSubmitTime value.
     */
    public OffsetDateTime requestSubmitTime() {
        return this.requestSubmitTime;
    }

    /**
     * Get the provisioningState property: Request status.
     * 
     * @return the provisioningState value.
     */
    public RequestState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the faultCode property: Details of the failure.
     * 
     * @return the faultCode value.
     */
    public String faultCode() {
        return this.faultCode;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (requestedResource() != null) {
            requestedResource().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("requestedResource", this.requestedResource);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SubmittedResourceRequestStatusProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SubmittedResourceRequestStatusProperties if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SubmittedResourceRequestStatusProperties.
     */
    public static SubmittedResourceRequestStatusProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SubmittedResourceRequestStatusProperties deserializedSubmittedResourceRequestStatusProperties
                = new SubmittedResourceRequestStatusProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("requestedResource".equals(fieldName)) {
                    deserializedSubmittedResourceRequestStatusProperties.requestedResource
                        = GroupQuotaRequestBase.fromJson(reader);
                } else if ("requestSubmitTime".equals(fieldName)) {
                    deserializedSubmittedResourceRequestStatusProperties.requestSubmitTime = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("provisioningState".equals(fieldName)) {
                    deserializedSubmittedResourceRequestStatusProperties.provisioningState
                        = RequestState.fromString(reader.getString());
                } else if ("faultCode".equals(fieldName)) {
                    deserializedSubmittedResourceRequestStatusProperties.faultCode = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSubmittedResourceRequestStatusProperties;
        });
    }
}
