// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.quota.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.quota.fluent.GroupQuotaSubscriptionAllocationRequestsClient;
import com.azure.resourcemanager.quota.fluent.models.QuotaAllocationRequestStatusInner;
import com.azure.resourcemanager.quota.fluent.models.SubscriptionQuotaAllocationsListInner;
import com.azure.resourcemanager.quota.models.GroupQuotaSubscriptionAllocationRequests;
import com.azure.resourcemanager.quota.models.QuotaAllocationRequestStatus;
import com.azure.resourcemanager.quota.models.SubscriptionQuotaAllocationsList;

public final class GroupQuotaSubscriptionAllocationRequestsImpl implements GroupQuotaSubscriptionAllocationRequests {
    private static final ClientLogger LOGGER = new ClientLogger(GroupQuotaSubscriptionAllocationRequestsImpl.class);

    private final GroupQuotaSubscriptionAllocationRequestsClient innerClient;

    private final com.azure.resourcemanager.quota.QuotaManager serviceManager;

    public GroupQuotaSubscriptionAllocationRequestsImpl(GroupQuotaSubscriptionAllocationRequestsClient innerClient,
        com.azure.resourcemanager.quota.QuotaManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public SubscriptionQuotaAllocationsList update(String managementGroupId, String groupQuotaName,
        String resourceProviderName, String location, SubscriptionQuotaAllocationsListInner allocateQuotaRequest) {
        SubscriptionQuotaAllocationsListInner inner = this.serviceClient()
            .update(managementGroupId, groupQuotaName, resourceProviderName, location, allocateQuotaRequest);
        if (inner != null) {
            return new SubscriptionQuotaAllocationsListImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public SubscriptionQuotaAllocationsList update(String managementGroupId, String groupQuotaName,
        String resourceProviderName, String location, SubscriptionQuotaAllocationsListInner allocateQuotaRequest,
        Context context) {
        SubscriptionQuotaAllocationsListInner inner = this.serviceClient()
            .update(managementGroupId, groupQuotaName, resourceProviderName, location, allocateQuotaRequest, context);
        if (inner != null) {
            return new SubscriptionQuotaAllocationsListImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<QuotaAllocationRequestStatus> getWithResponse(String managementGroupId, String groupQuotaName,
        String resourceProviderName, String allocationId, Context context) {
        Response<QuotaAllocationRequestStatusInner> inner = this.serviceClient()
            .getWithResponse(managementGroupId, groupQuotaName, resourceProviderName, allocationId, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new QuotaAllocationRequestStatusImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public QuotaAllocationRequestStatus get(String managementGroupId, String groupQuotaName,
        String resourceProviderName, String allocationId) {
        QuotaAllocationRequestStatusInner inner
            = this.serviceClient().get(managementGroupId, groupQuotaName, resourceProviderName, allocationId);
        if (inner != null) {
            return new QuotaAllocationRequestStatusImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public PagedIterable<QuotaAllocationRequestStatus> list(String managementGroupId, String groupQuotaName,
        String resourceProviderName, String filter) {
        PagedIterable<QuotaAllocationRequestStatusInner> inner
            = this.serviceClient().list(managementGroupId, groupQuotaName, resourceProviderName, filter);
        return ResourceManagerUtils.mapPage(inner,
            inner1 -> new QuotaAllocationRequestStatusImpl(inner1, this.manager()));
    }

    public PagedIterable<QuotaAllocationRequestStatus> list(String managementGroupId, String groupQuotaName,
        String resourceProviderName, String filter, Context context) {
        PagedIterable<QuotaAllocationRequestStatusInner> inner
            = this.serviceClient().list(managementGroupId, groupQuotaName, resourceProviderName, filter, context);
        return ResourceManagerUtils.mapPage(inner,
            inner1 -> new QuotaAllocationRequestStatusImpl(inner1, this.manager()));
    }

    private GroupQuotaSubscriptionAllocationRequestsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.quota.QuotaManager manager() {
        return this.serviceManager;
    }
}
