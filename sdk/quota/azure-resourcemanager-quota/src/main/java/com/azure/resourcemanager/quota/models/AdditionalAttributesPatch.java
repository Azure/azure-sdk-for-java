// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.quota.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Additional attribute or filter to allow subscriptions meeting the requirements to be part of the GroupQuota.
 */
@Fluent
public final class AdditionalAttributesPatch implements JsonSerializable<AdditionalAttributesPatch> {
    /*
     * The grouping Id for the group quota. It can be Billing Id or ServiceTreeId if applicable.
     */
    private GroupingId groupId;

    /*
     * Environment name.
     */
    private EnvironmentType environment;

    /**
     * Creates an instance of AdditionalAttributesPatch class.
     */
    public AdditionalAttributesPatch() {
    }

    /**
     * Get the groupId property: The grouping Id for the group quota. It can be Billing Id or ServiceTreeId if
     * applicable.
     * 
     * @return the groupId value.
     */
    public GroupingId groupId() {
        return this.groupId;
    }

    /**
     * Set the groupId property: The grouping Id for the group quota. It can be Billing Id or ServiceTreeId if
     * applicable.
     * 
     * @param groupId the groupId value to set.
     * @return the AdditionalAttributesPatch object itself.
     */
    public AdditionalAttributesPatch withGroupId(GroupingId groupId) {
        this.groupId = groupId;
        return this;
    }

    /**
     * Get the environment property: Environment name.
     * 
     * @return the environment value.
     */
    public EnvironmentType environment() {
        return this.environment;
    }

    /**
     * Set the environment property: Environment name.
     * 
     * @param environment the environment value to set.
     * @return the AdditionalAttributesPatch object itself.
     */
    public AdditionalAttributesPatch withEnvironment(EnvironmentType environment) {
        this.environment = environment;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (groupId() != null) {
            groupId().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("groupId", this.groupId);
        jsonWriter.writeStringField("environment", this.environment == null ? null : this.environment.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AdditionalAttributesPatch from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AdditionalAttributesPatch if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AdditionalAttributesPatch.
     */
    public static AdditionalAttributesPatch fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AdditionalAttributesPatch deserializedAdditionalAttributesPatch = new AdditionalAttributesPatch();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("groupId".equals(fieldName)) {
                    deserializedAdditionalAttributesPatch.groupId = GroupingId.fromJson(reader);
                } else if ("environment".equals(fieldName)) {
                    deserializedAdditionalAttributesPatch.environment = EnvironmentType.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAdditionalAttributesPatch;
        });
    }
}
