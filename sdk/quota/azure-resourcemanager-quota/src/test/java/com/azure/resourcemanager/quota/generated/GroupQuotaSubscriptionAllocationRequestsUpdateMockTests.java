// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.quota.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.quota.QuotaManager;
import com.azure.resourcemanager.quota.fluent.models.SubscriptionQuotaAllocationsListInner;
import com.azure.resourcemanager.quota.models.SubscriptionQuotaAllocations;
import com.azure.resourcemanager.quota.models.SubscriptionQuotaAllocationsList;
import com.azure.resourcemanager.quota.models.SubscriptionQuotaAllocationsListProperties;
import com.azure.resourcemanager.quota.models.SubscriptionQuotaAllocationsProperties;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class GroupQuotaSubscriptionAllocationRequestsUpdateMockTests {
    @Test
    public void testUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Succeeded\",\"value\":[{\"properties\":{\"resourceName\":\"zrtuzq\",\"limit\":1189193758157462805,\"shareableQuota\":7533861003101149495,\"name\":{}}},{\"properties\":{\"resourceName\":\"nwnwme\",\"limit\":6186896239001555469,\"shareableQuota\":6866960913101862569,\"name\":{}}},{\"properties\":{\"resourceName\":\"oibjudpfrxtrthz\",\"limit\":4537388686790142089,\"shareableQuota\":7184151913556268269,\"name\":{}}}],\"nextLink\":\"rqubpaxhexiil\"},\"id\":\"pdtii\",\"name\":\"q\",\"type\":\"d\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        QuotaManager manager = QuotaManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        SubscriptionQuotaAllocationsList response = manager.groupQuotaSubscriptionAllocationRequests()
            .update("ag", "rvimjwosytxitcsk", "cktqumiekkezzi", "hlyfjhdgqgg",
                new SubscriptionQuotaAllocationsListInner()
                    .withProperties(new SubscriptionQuotaAllocationsListProperties().withValue(Arrays.asList(
                        new SubscriptionQuotaAllocations()
                            .withProperties(new SubscriptionQuotaAllocationsProperties().withResourceName("eqidbqfatpx")
                                .withLimit(206169158541368718L)),
                        new SubscriptionQuotaAllocations().withProperties(
                            new SubscriptionQuotaAllocationsProperties().withResourceName("dsuvarmywdmjsjqb")
                                .withLimit(7225316446060950851L)),
                        new SubscriptionQuotaAllocations()
                            .withProperties(new SubscriptionQuotaAllocationsProperties().withResourceName("co")
                                .withLimit(1636515357486481431L)),
                        new SubscriptionQuotaAllocations()
                            .withProperties(new SubscriptionQuotaAllocationsProperties().withResourceName("areqna")
                                .withLimit(2889589874455644460L))))),
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("zrtuzq", response.properties().value().get(0).properties().resourceName());
        Assertions.assertEquals(1189193758157462805L, response.properties().value().get(0).properties().limit());
    }
}
