// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.quota.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.quota.QuotaManager;
import com.azure.resourcemanager.quota.models.SubscriptionQuotaAllocations;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class GroupQuotaSubscriptionAllocationsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"region\":\"ywsuwsy\",\"limit\":859811408175724714,\"shareableQuota\":6260637349305399844,\"name\":{\"value\":\"dgvraeaeneq\",\"localizedValue\":\"arrwlquu\"}},\"id\":\"fqka\",\"name\":\"e\",\"type\":\"iipfpubj\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        QuotaManager manager = QuotaManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        SubscriptionQuotaAllocations response = manager.groupQuotaSubscriptionAllocations()
            .getWithResponse("joxafnndlpi", "hkoymkcdyhbp", "kpw", "reqnovvqfov", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("ywsuwsy", response.properties().region());
        Assertions.assertEquals(859811408175724714L, response.properties().limit());
    }
}
