// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.quota.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.quota.models.AdditionalAttributesPatch;
import com.azure.resourcemanager.quota.models.EnvironmentType;
import com.azure.resourcemanager.quota.models.GroupingId;
import com.azure.resourcemanager.quota.models.GroupingIdType;
import org.junit.jupiter.api.Assertions;

public final class AdditionalAttributesPatchTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AdditionalAttributesPatch model = BinaryData.fromString(
            "{\"groupId\":{\"groupingIdType\":\"BillingId\",\"value\":\"usarhmofc\"},\"environment\":\"NonProduction\"}")
            .toObject(AdditionalAttributesPatch.class);
        Assertions.assertEquals(GroupingIdType.BILLING_ID, model.groupId().groupingIdType());
        Assertions.assertEquals("usarhmofc", model.groupId().value());
        Assertions.assertEquals(EnvironmentType.NON_PRODUCTION, model.environment());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AdditionalAttributesPatch model = new AdditionalAttributesPatch()
            .withGroupId(new GroupingId().withGroupingIdType(GroupingIdType.BILLING_ID).withValue("usarhmofc"))
            .withEnvironment(EnvironmentType.NON_PRODUCTION);
        model = BinaryData.fromObject(model).toObject(AdditionalAttributesPatch.class);
        Assertions.assertEquals(GroupingIdType.BILLING_ID, model.groupId().groupingIdType());
        Assertions.assertEquals("usarhmofc", model.groupId().value());
        Assertions.assertEquals(EnvironmentType.NON_PRODUCTION, model.environment());
    }
}
