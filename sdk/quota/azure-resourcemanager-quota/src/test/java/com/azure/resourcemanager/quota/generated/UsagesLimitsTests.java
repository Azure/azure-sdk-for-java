// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.quota.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.quota.fluent.models.CurrentUsagesBaseInner;
import com.azure.resourcemanager.quota.models.ResourceName;
import com.azure.resourcemanager.quota.models.UsagesLimits;
import com.azure.resourcemanager.quota.models.UsagesObject;
import com.azure.resourcemanager.quota.models.UsagesProperties;
import com.azure.resourcemanager.quota.models.UsagesTypes;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class UsagesLimitsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UsagesLimits model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"usages\":{\"value\":682758161,\"usagesType\":\"Combined\"},\"unit\":\"zjuqkhrsaj\",\"name\":{\"value\":\"uo\",\"localizedValue\":\"skghsauuimj\"},\"resourceType\":\"xieduugidyjrr\",\"quotaPeriod\":\"y\",\"isQuotaApplicable\":true,\"properties\":\"datae\"},\"id\":\"csonpclhoco\",\"name\":\"slkevle\",\"type\":\"gz\"},{\"properties\":{\"usages\":{\"value\":635098272,\"usagesType\":\"Combined\"},\"unit\":\"faxkffeii\",\"name\":{\"value\":\"vmezy\",\"localizedValue\":\"hxmzsbbzoggig\"},\"resourceType\":\"wburvjxxjnspydpt\",\"quotaPeriod\":\"enkouknvudw\",\"isQuotaApplicable\":true,\"properties\":\"databldngkpoc\"},\"id\":\"pazyxoegukg\",\"name\":\"npiucgygevqznty\",\"type\":\"mrbpizcdrqj\"},{\"properties\":{\"usages\":{\"value\":1305658178,\"usagesType\":\"Individual\"},\"unit\":\"yhxdeoejzicwi\",\"name\":{\"value\":\"ttgzfbis\",\"localizedValue\":\"bkh\"},\"resourceType\":\"deyeamdphagalpbu\",\"quotaPeriod\":\"gipwhonowkg\",\"isQuotaApplicable\":true,\"properties\":\"datankixzbinj\"},\"id\":\"pu\",\"name\":\"tmryw\",\"type\":\"uzoqft\"}],\"nextLink\":\"qzrnkcqvyxlwhz\"}")
            .toObject(UsagesLimits.class);
        Assertions.assertEquals(682758161, model.value().get(0).properties().usages().value());
        Assertions.assertEquals(UsagesTypes.COMBINED, model.value().get(0).properties().usages().usagesType());
        Assertions.assertEquals("uo", model.value().get(0).properties().name().value());
        Assertions.assertEquals("xieduugidyjrr", model.value().get(0).properties().resourceType());
        Assertions.assertEquals("qzrnkcqvyxlwhz", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UsagesLimits model
            = new UsagesLimits()
                .withValue(
                    Arrays
                        .asList(
                            new CurrentUsagesBaseInner().withProperties(
                                new UsagesProperties()
                                    .withUsages(
                                        new UsagesObject().withValue(682758161).withUsagesType(UsagesTypes.COMBINED))
                                    .withName(new ResourceName().withValue("uo"))
                                    .withResourceType("xieduugidyjrr")
                                    .withProperties("datae")),
                            new CurrentUsagesBaseInner().withProperties(new UsagesProperties()
                                .withUsages(
                                    new UsagesObject().withValue(635098272).withUsagesType(UsagesTypes.COMBINED))
                                .withName(new ResourceName().withValue("vmezy"))
                                .withResourceType("wburvjxxjnspydpt")
                                .withProperties("databldngkpoc")),
                            new CurrentUsagesBaseInner().withProperties(new UsagesProperties()
                                .withUsages(
                                    new UsagesObject().withValue(1305658178).withUsagesType(UsagesTypes.INDIVIDUAL))
                                .withName(new ResourceName().withValue("ttgzfbis"))
                                .withResourceType("deyeamdphagalpbu")
                                .withProperties("datankixzbinj"))))
                .withNextLink("qzrnkcqvyxlwhz");
        model = BinaryData.fromObject(model).toObject(UsagesLimits.class);
        Assertions.assertEquals(682758161, model.value().get(0).properties().usages().value());
        Assertions.assertEquals(UsagesTypes.COMBINED, model.value().get(0).properties().usages().usagesType());
        Assertions.assertEquals("uo", model.value().get(0).properties().name().value());
        Assertions.assertEquals("xieduugidyjrr", model.value().get(0).properties().resourceType());
        Assertions.assertEquals("qzrnkcqvyxlwhz", model.nextLink());
    }
}
