// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.quota.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.quota.QuotaManager;
import com.azure.resourcemanager.quota.models.CurrentQuotaLimitBase;
import com.azure.resourcemanager.quota.models.LimitObject;
import com.azure.resourcemanager.quota.models.QuotaProperties;
import com.azure.resourcemanager.quota.models.ResourceName;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class QuotasCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"limit\":{\"limitObjectType\":\"LimitValue\"},\"unit\":\"nfd\",\"name\":{\"value\":\"akgtdlmkkzevdlh\",\"localizedValue\":\"pusdstt\"},\"resourceType\":\"ogvbbejdcngq\",\"quotaPeriod\":\"oakufgm\",\"isQuotaApplicable\":false,\"properties\":\"datardgrtw\"},\"id\":\"enuuzkopbm\",\"name\":\"nrfdw\",\"type\":\"yuhhziu\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        QuotaManager manager = QuotaManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        CurrentQuotaLimitBase response = manager.quotas()
            .define("qouicybxarzgsz")
            .withExistingScope("foxciq")
            .withProperties(new QuotaProperties().withLimit(new LimitObject())
                .withName(new ResourceName().withValue("nlwntoe"))
                .withResourceType("rvexztvb")
                .withProperties("dataguxawqaldsyuuxi"))
            .create();

        Assertions.assertEquals("akgtdlmkkzevdlh", response.properties().name().value());
        Assertions.assertEquals("ogvbbejdcngq", response.properties().resourceType());
    }
}
