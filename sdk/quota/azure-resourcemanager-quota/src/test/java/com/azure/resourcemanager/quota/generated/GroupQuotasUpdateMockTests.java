// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.quota.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.quota.QuotaManager;
import com.azure.resourcemanager.quota.models.AdditionalAttributesPatch;
import com.azure.resourcemanager.quota.models.EnvironmentType;
import com.azure.resourcemanager.quota.models.GroupQuotasEntity;
import com.azure.resourcemanager.quota.models.GroupQuotasEntityBasePatch;
import com.azure.resourcemanager.quota.models.GroupQuotasEntityPatch;
import com.azure.resourcemanager.quota.models.GroupingId;
import com.azure.resourcemanager.quota.models.GroupingIdType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class GroupQuotasUpdateMockTests {
    @Test
    public void testUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"displayName\":\"cqibycnojv\",\"additionalAttributes\":{\"groupId\":{\"groupingIdType\":\"ServiceTreeId\",\"value\":\"qsgzvahapj\"},\"environment\":\"NonProduction\"},\"provisioningState\":\"Succeeded\"},\"id\":\"qzcjrvxdj\",\"name\":\"lmwlxkvugfhzo\",\"type\":\"awjvzunluthnnp\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        QuotaManager manager = QuotaManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        GroupQuotasEntity response = manager.groupQuotas()
            .update("wxzvlvqhjkb", "gibtnm",
                new GroupQuotasEntityPatch().withProperties(new GroupQuotasEntityBasePatch().withDisplayName("bwwaloa")
                    .withAdditionalAttributes(new AdditionalAttributesPatch().withGroupId(
                        new GroupingId().withGroupingIdType(GroupingIdType.SERVICE_TREE_ID).withValue("tzjuzgwyzmhtxo"))
                        .withEnvironment(EnvironmentType.PRODUCTION))),
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("cqibycnojv", response.properties().displayName());
        Assertions.assertEquals(GroupingIdType.SERVICE_TREE_ID,
            response.properties().additionalAttributes().groupId().groupingIdType());
        Assertions.assertEquals("qsgzvahapj", response.properties().additionalAttributes().groupId().value());
        Assertions.assertEquals(EnvironmentType.NON_PRODUCTION,
            response.properties().additionalAttributes().environment());
    }
}
