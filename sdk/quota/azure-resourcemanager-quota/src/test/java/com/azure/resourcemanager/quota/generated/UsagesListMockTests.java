// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.quota.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.quota.QuotaManager;
import com.azure.resourcemanager.quota.models.CurrentUsagesBase;
import com.azure.resourcemanager.quota.models.UsagesTypes;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class UsagesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"usages\":{\"value\":542586349,\"usagesType\":\"Individual\"},\"unit\":\"szzcmrvexztv\",\"name\":{\"value\":\"gsfraoyzkoow\",\"localizedValue\":\"mnguxawqaldsyu\"},\"resourceType\":\"imerqfobwyznk\",\"quotaPeriod\":\"kutwpf\",\"isQuotaApplicable\":false,\"properties\":\"datam\"},\"id\":\"skdsnfdsdoakg\",\"name\":\"dlmkkzevdl\",\"type\":\"ewpusdsttwvogvb\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        QuotaManager manager = QuotaManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<CurrentUsagesBase> response = manager.usages().list("toego", com.azure.core.util.Context.NONE);

        Assertions.assertEquals(542586349, response.iterator().next().properties().usages().value());
        Assertions.assertEquals(UsagesTypes.INDIVIDUAL, response.iterator().next().properties().usages().usagesType());
        Assertions.assertEquals("gsfraoyzkoow", response.iterator().next().properties().name().value());
        Assertions.assertEquals("imerqfobwyznk", response.iterator().next().properties().resourceType());
    }
}
