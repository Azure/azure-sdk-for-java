// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.quota.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.quota.QuotaManager;
import com.azure.resourcemanager.quota.models.SubscriptionQuotaAllocationsList;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class GroupQuotaSubscriptionAllocationsListWithResponseMockTests {
    @Test
    public void testListWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Succeeded\",\"value\":[{\"properties\":{\"resourceName\":\"wmszkk\",\"limit\":9187970254260855901,\"shareableQuota\":6713909564686368420,\"name\":{}}},{\"properties\":{\"resourceName\":\"kf\",\"limit\":6566365320530486008,\"shareableQuota\":488040231209258224,\"name\":{}}}],\"nextLink\":\"wczelpci\"},\"id\":\"lsfeaenwabfatkld\",\"name\":\"xbjhwuaanozjosph\",\"type\":\"oulpjrv\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        QuotaManager manager = QuotaManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        SubscriptionQuotaAllocationsList response = manager.groupQuotaSubscriptionAllocations()
            .listWithResponse("vgpiohgwxrt", "udxepxgyqagv", "vmnpkukghimdblx", "wi", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("wmszkk", response.properties().value().get(0).properties().resourceName());
        Assertions.assertEquals(9187970254260855901L, response.properties().value().get(0).properties().limit());
    }
}
