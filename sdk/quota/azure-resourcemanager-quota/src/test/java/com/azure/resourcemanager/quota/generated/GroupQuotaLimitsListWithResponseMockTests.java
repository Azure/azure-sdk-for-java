// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.quota.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.quota.QuotaManager;
import com.azure.resourcemanager.quota.models.GroupQuotaLimitList;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class GroupQuotaLimitsListWithResponseMockTests {
    @Test
    public void testListWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Failed\",\"value\":[{\"properties\":{\"resourceName\":\"zyh\",\"limit\":3835671102059625578,\"comment\":\"ypyynpcdpumnzg\",\"unit\":\"z\",\"name\":{},\"availableLimit\":6753075814486696287,\"allocatedToSubscriptions\":{}}},{\"properties\":{\"resourceName\":\"orgjhxbldt\",\"limit\":8467924740961026044,\"comment\":\"kdmtncvokotll\",\"unit\":\"yhgsy\",\"name\":{},\"availableLimit\":4877471072225031792,\"allocatedToSubscriptions\":{}}},{\"properties\":{\"resourceName\":\"tbnnha\",\"limit\":723581934822095821,\"comment\":\"kvci\",\"unit\":\"nvpamq\",\"name\":{},\"availableLimit\":7776859938318021776,\"allocatedToSubscriptions\":{}}},{\"properties\":{\"resourceName\":\"kywggxkallatmel\",\"limit\":4889606083827449989,\"comment\":\"ccjzkzivgvv\",\"unit\":\"ayrhyrnx\",\"name\":{},\"availableLimit\":8141122622506603180,\"allocatedToSubscriptions\":{}}}],\"nextLink\":\"drd\"},\"id\":\"tkwqqtchealm\",\"name\":\"mtdaa\",\"type\":\"gdv\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        QuotaManager manager = QuotaManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        GroupQuotaLimitList response = manager.groupQuotaLimits()
            .listWithResponse("ntorzihleosjswsr", "slyzrpzbchckqq", "qioxi", "suiizynkedyat",
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("zyh", response.properties().value().get(0).properties().resourceName());
        Assertions.assertEquals(3835671102059625578L, response.properties().value().get(0).properties().limit());
        Assertions.assertEquals("ypyynpcdpumnzg", response.properties().value().get(0).properties().comment());
    }
}
