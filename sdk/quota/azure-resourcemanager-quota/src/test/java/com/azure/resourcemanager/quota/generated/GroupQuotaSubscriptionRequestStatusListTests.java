// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.quota.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.quota.fluent.models.GroupQuotaSubscriptionRequestStatusInner;
import com.azure.resourcemanager.quota.models.GroupQuotaSubscriptionRequestStatusList;
import com.azure.resourcemanager.quota.models.GroupQuotaSubscriptionRequestStatusProperties;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class GroupQuotaSubscriptionRequestStatusListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GroupQuotaSubscriptionRequestStatusList model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"subscriptionId\":\"yahux\",\"requestSubmitTime\":\"2021-07-08T12:15:19Z\",\"provisioningState\":\"InProgress\"},\"id\":\"jaqwixjsp\",\"name\":\"ozvcput\",\"type\":\"gjvw\"}],\"nextLink\":\"datscmd\"}")
            .toObject(GroupQuotaSubscriptionRequestStatusList.class);
        Assertions.assertEquals("yahux", model.value().get(0).properties().subscriptionId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-08T12:15:19Z"),
            model.value().get(0).properties().requestSubmitTime());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GroupQuotaSubscriptionRequestStatusList model = new GroupQuotaSubscriptionRequestStatusList()
            .withValue(Arrays.asList(new GroupQuotaSubscriptionRequestStatusInner()
                .withProperties(new GroupQuotaSubscriptionRequestStatusProperties().withSubscriptionId("yahux")
                    .withRequestSubmitTime(OffsetDateTime.parse("2021-07-08T12:15:19Z")))));
        model = BinaryData.fromObject(model).toObject(GroupQuotaSubscriptionRequestStatusList.class);
        Assertions.assertEquals("yahux", model.value().get(0).properties().subscriptionId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-08T12:15:19Z"),
            model.value().get(0).properties().requestSubmitTime());
    }
}
