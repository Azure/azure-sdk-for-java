// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.quota.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.quota.QuotaManager;
import com.azure.resourcemanager.quota.fluent.models.GroupQuotaLimitListInner;
import com.azure.resourcemanager.quota.models.GroupQuotaLimit;
import com.azure.resourcemanager.quota.models.GroupQuotaLimitList;
import com.azure.resourcemanager.quota.models.GroupQuotaLimitListProperties;
import com.azure.resourcemanager.quota.models.GroupQuotaLimitProperties;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class GroupQuotaLimitsRequestsUpdateMockTests {
    @Test
    public void testUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Succeeded\",\"value\":[{\"properties\":{\"resourceName\":\"xunkbebxmubyynt\",\"limit\":8620058010530474402,\"comment\":\"tkoievseotgq\",\"unit\":\"ltmuwlauwzizx\",\"name\":{},\"availableLimit\":2676034725139393325,\"allocatedToSubscriptions\":{}}},{\"properties\":{\"resourceName\":\"u\",\"limit\":4123846884146341556,\"comment\":\"bttdumorppxe\",\"unit\":\"nzbtbhj\",\"name\":{},\"availableLimit\":2177073592568993957,\"allocatedToSubscriptions\":{}}}],\"nextLink\":\"hdneuelfph\"},\"id\":\"yhtozfikdowwqu\",\"name\":\"v\",\"type\":\"zx\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        QuotaManager manager = QuotaManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        GroupQuotaLimitList response
            = manager.groupQuotaLimitsRequests()
                .update("mcwyhzdxssadb", "mnvdfzn", "daodvxzbncblyl", "stdbhhxsrzdzu", new GroupQuotaLimitListInner()
                    .withProperties(new GroupQuotaLimitListProperties().withValue(Arrays.asList(
                        new GroupQuotaLimit().withProperties(new GroupQuotaLimitProperties().withResourceName("nevf")
                            .withLimit(8847902145663699815L)
                            .withComment("gtdsslswt")),
                        new GroupQuotaLimit()
                            .withProperties(new GroupQuotaLimitProperties().withResourceName("shhszhedplvwiw")
                                .withLimit(5954256470924053465L)
                                .withComment("besldnkwwtppjflc"))))),
                    com.azure.core.util.Context.NONE);

        Assertions.assertEquals("xunkbebxmubyynt", response.properties().value().get(0).properties().resourceName());
        Assertions.assertEquals(8620058010530474402L, response.properties().value().get(0).properties().limit());
        Assertions.assertEquals("tkoievseotgq", response.properties().value().get(0).properties().comment());
    }
}
