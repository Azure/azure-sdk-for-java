// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.lambdatesthyperexecute.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.lambdatesthyperexecute.implementation.models.OrganizationResourceListResult;
import com.azure.resourcemanager.lambdatesthyperexecute.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.lambdatesthyperexecute.models.SingleSignOnStates;
import com.azure.resourcemanager.lambdatesthyperexecute.models.SingleSignOnType;
import org.junit.jupiter.api.Assertions;

public final class OrganizationResourceListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OrganizationResourceListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"marketplace\":{\"subscriptionId\":\"byxqabn\",\"subscriptionStatus\":\"PendingFulfillmentStart\",\"offerDetails\":{\"publisherId\":\"pcyshu\",\"offerId\":\"zafb\",\"planId\":\"jjgpb\",\"planName\":\"qcjm\",\"termUnit\":\"javbqidtqajz\",\"termId\":\"l\"}},\"user\":{\"firstName\":\"u\",\"lastName\":\"krlkhbzhfepg\",\"emailAddress\":\"qex\",\"upn\":\"ocxscpaierhhbcs\",\"phoneNumber\":\"ummajtjaod\"},\"provisioningState\":\"Succeeded\",\"partnerProperties\":{\"licensesSubscribed\":1341897858},\"singleSignOnProperties\":{\"type\":\"Saml\",\"state\":\"Initial\",\"enterpriseAppId\":\"pxokajionp\",\"url\":\"ex\",\"aadDomains\":[\"xgcp\",\"dg\",\"aajrm\",\"djwzrlov\"]}},\"identity\":{\"principalId\":\"whijcoejctbza\",\"tenantId\":\"qsycbkbfkgu\",\"type\":\"UserAssigned\",\"userAssignedIdentities\":{\"xhvpmoue\":{\"clientId\":\"xppofmxaxcfjp\",\"principalId\":\"dtocj\"},\"ndei\":{\"clientId\":\"dzxibqeojnxqbzvd\",\"principalId\":\"t\"},\"glmjth\":{\"clientId\":\"twnpzaoqvuhrhcf\",\"principalId\":\"yd\"},\"uigdtopbobjog\":{\"clientId\":\"kw\",\"principalId\":\"eicxmqciwqvhkhi\"}}},\"location\":\"e\",\"tags\":{\"uhrzayvvt\":\"m\"},\"id\":\"gvdfgiotkftutq\",\"name\":\"ln\",\"type\":\"xlefgugnxkrx\"}],\"nextLink\":\"mi\"}")
            .toObject(OrganizationResourceListResult.class);
        Assertions.assertEquals("e", model.value().get(0).location());
        Assertions.assertEquals("m", model.value().get(0).tags().get("uhrzayvvt"));
        Assertions.assertEquals("byxqabn", model.value().get(0).properties().marketplace().subscriptionId());
        Assertions.assertEquals("pcyshu", model.value().get(0).properties().marketplace().offerDetails().publisherId());
        Assertions.assertEquals("zafb", model.value().get(0).properties().marketplace().offerDetails().offerId());
        Assertions.assertEquals("jjgpb", model.value().get(0).properties().marketplace().offerDetails().planId());
        Assertions.assertEquals("qcjm", model.value().get(0).properties().marketplace().offerDetails().planName());
        Assertions.assertEquals("javbqidtqajz",
            model.value().get(0).properties().marketplace().offerDetails().termUnit());
        Assertions.assertEquals("l", model.value().get(0).properties().marketplace().offerDetails().termId());
        Assertions.assertEquals("u", model.value().get(0).properties().user().firstName());
        Assertions.assertEquals("krlkhbzhfepg", model.value().get(0).properties().user().lastName());
        Assertions.assertEquals("qex", model.value().get(0).properties().user().emailAddress());
        Assertions.assertEquals("ocxscpaierhhbcs", model.value().get(0).properties().user().upn());
        Assertions.assertEquals("ummajtjaod", model.value().get(0).properties().user().phoneNumber());
        Assertions.assertEquals(1341897858, model.value().get(0).properties().partnerProperties().licensesSubscribed());
        Assertions.assertEquals(SingleSignOnType.SAML,
            model.value().get(0).properties().singleSignOnProperties().type());
        Assertions.assertEquals(SingleSignOnStates.INITIAL,
            model.value().get(0).properties().singleSignOnProperties().state());
        Assertions.assertEquals("pxokajionp",
            model.value().get(0).properties().singleSignOnProperties().enterpriseAppId());
        Assertions.assertEquals("ex", model.value().get(0).properties().singleSignOnProperties().url());
        Assertions.assertEquals("xgcp", model.value().get(0).properties().singleSignOnProperties().aadDomains().get(0));
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, model.value().get(0).identity().type());
        Assertions.assertEquals("mi", model.nextLink());
    }
}
