// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.resources.deploymentstacks.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.resources.deploymentstacks.fluent.models.DeploymentStackInner;
import com.azure.resourcemanager.resources.deploymentstacks.models.DeploymentStack;
import com.azure.resourcemanager.resources.deploymentstacks.models.DeploymentStackProperties;
import com.azure.resourcemanager.resources.deploymentstacks.models.DeploymentStackTemplateDefinition;
import com.azure.resourcemanager.resources.deploymentstacks.models.DeploymentStackValidateResult;
import java.util.Collections;
import java.util.Map;

public final class DeploymentStackImpl implements DeploymentStack, DeploymentStack.Definition, DeploymentStack.Update {
    private DeploymentStackInner innerObject;

    private final com.azure.resourcemanager.resources.deploymentstacks.DeploymentStacksManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public DeploymentStackProperties properties() {
        return this.innerModel().properties();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public DeploymentStackInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.resources.deploymentstacks.DeploymentStacksManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String deploymentStackName;

    public DeploymentStackImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public DeploymentStack create() {
        this.innerObject = serviceManager.serviceClient()
            .getDeploymentStacks()
            .createOrUpdateAtResourceGroup(resourceGroupName, deploymentStackName, this.innerModel(), Context.NONE);
        return this;
    }

    public DeploymentStack create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getDeploymentStacks()
            .createOrUpdateAtResourceGroup(resourceGroupName, deploymentStackName, this.innerModel(), context);
        return this;
    }

    DeploymentStackImpl(String name,
        com.azure.resourcemanager.resources.deploymentstacks.DeploymentStacksManager serviceManager) {
        this.innerObject = new DeploymentStackInner();
        this.serviceManager = serviceManager;
        this.deploymentStackName = name;
    }

    public DeploymentStackImpl update() {
        return this;
    }

    public DeploymentStack apply() {
        this.innerObject = serviceManager.serviceClient()
            .getDeploymentStacks()
            .createOrUpdateAtResourceGroup(resourceGroupName, deploymentStackName, this.innerModel(), Context.NONE);
        return this;
    }

    public DeploymentStack apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getDeploymentStacks()
            .createOrUpdateAtResourceGroup(resourceGroupName, deploymentStackName, this.innerModel(), context);
        return this;
    }

    DeploymentStackImpl(DeploymentStackInner innerObject,
        com.azure.resourcemanager.resources.deploymentstacks.DeploymentStacksManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.deploymentStackName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "deploymentStacks");
    }

    public DeploymentStack refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getDeploymentStacks()
            .getByResourceGroupWithResponse(resourceGroupName, deploymentStackName, Context.NONE)
            .getValue();
        return this;
    }

    public DeploymentStack refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getDeploymentStacks()
            .getByResourceGroupWithResponse(resourceGroupName, deploymentStackName, context)
            .getValue();
        return this;
    }

    public Response<DeploymentStackTemplateDefinition> exportTemplateAtResourceGroupWithResponse(Context context) {
        return serviceManager.deploymentStacks()
            .exportTemplateAtResourceGroupWithResponse(resourceGroupName, deploymentStackName, context);
    }

    public DeploymentStackTemplateDefinition exportTemplateAtResourceGroup() {
        return serviceManager.deploymentStacks().exportTemplateAtResourceGroup(resourceGroupName, deploymentStackName);
    }

    public DeploymentStackValidateResult validateStackAtResourceGroup(DeploymentStackInner deploymentStack) {
        return serviceManager.deploymentStacks()
            .validateStackAtResourceGroup(resourceGroupName, deploymentStackName, deploymentStack);
    }

    public DeploymentStackValidateResult validateStackAtResourceGroup(DeploymentStackInner deploymentStack,
        Context context) {
        return serviceManager.deploymentStacks()
            .validateStackAtResourceGroup(resourceGroupName, deploymentStackName, deploymentStack, context);
    }

    public DeploymentStackImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public DeploymentStackImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public DeploymentStackImpl withTags(Map<String, String> tags) {
        this.innerModel().withTags(tags);
        return this;
    }

    public DeploymentStackImpl withProperties(DeploymentStackProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}
