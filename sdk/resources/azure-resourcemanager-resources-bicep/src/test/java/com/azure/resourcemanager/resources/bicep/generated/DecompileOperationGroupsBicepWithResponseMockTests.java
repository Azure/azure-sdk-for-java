// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.resources.bicep.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.resources.bicep.BicepProviderManager;
import com.azure.resourcemanager.resources.bicep.models.DecompileOperationRequest;
import com.azure.resourcemanager.resources.bicep.models.DecompileOperationSuccessResponse;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DecompileOperationGroupsBicepWithResponseMockTests {
    @Test
    public void testBicepWithResponse() throws Exception {
        String responseStr
            = "{\"files\":[{\"path\":\"bpazlobcufpdzn\",\"contents\":\"t\"},{\"path\":\"qjnqglhqgnufoooj\",\"contents\":\"ifsqesaagdfmg\"},{\"path\":\"lhjxr\",\"contents\":\"kwm\"},{\"path\":\"ktsizntocipaou\",\"contents\":\"psqucmpoyf\"}],\"entryPoint\":\"kfo\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        BicepProviderManager manager = BicepProviderManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        DecompileOperationSuccessResponse response = manager.decompileOperationGroups()
            .bicepWithResponse(new DecompileOperationRequest().withTemplate("bqsoqijg"),
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("bpazlobcufpdzn", response.files().get(0).path());
        Assertions.assertEquals("t", response.files().get(0).contents());
        Assertions.assertEquals("kfo", response.entryPoint());
    }
}
