// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.resources.generated.generated;

import com.azure.core.util.Context;
import com.azure.resourcemanager.resources.generated.fluent.models.TagsResourceInner;
import com.azure.resourcemanager.resources.generated.models.Tags;
import java.util.HashMap;
import java.util.Map;

/** Samples for TagOperations CreateOrUpdateAtScope. */
public final class TagOperationsCreateOrUpdateAtScopeSamples {
    /*
     * x-ms-original-file: specification/resources/resource-manager/Microsoft.Resources/stable/2021-04-01/examples/PutTagsResource.json
     */
    /**
     * Sample code: Update tags on a resource.
     *
     * @param manager Entry point to ResourceManager.
     */
    public static void updateTagsOnAResource(com.azure.resourcemanager.resources.generated.ResourceManager manager) {
        manager
            .tagOperations()
            .createOrUpdateAtScopeWithResponse(
                "subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/my-resource-group/providers/myPRNameSpace/VM/myVm",
                new TagsResourceInner()
                    .withProperties(new Tags().withTags(mapOf("tagKey1", "tag-value-1", "tagKey2", "tag-value-2"))),
                Context.NONE);
    }

    /*
     * x-ms-original-file: specification/resources/resource-manager/Microsoft.Resources/stable/2021-04-01/examples/PutTagsSubscription.json
     */
    /**
     * Sample code: Update tags on a subscription.
     *
     * @param manager Entry point to ResourceManager.
     */
    public static void updateTagsOnASubscription(
        com.azure.resourcemanager.resources.generated.ResourceManager manager) {
        manager
            .tagOperations()
            .createOrUpdateAtScopeWithResponse(
                "subscriptions/00000000-0000-0000-0000-000000000000",
                new TagsResourceInner()
                    .withProperties(new Tags().withTags(mapOf("tagKey1", "tag-value-1", "tagKey2", "tag-value-2"))),
                Context.NONE);
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
