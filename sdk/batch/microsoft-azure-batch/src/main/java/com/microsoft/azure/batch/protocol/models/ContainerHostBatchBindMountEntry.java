/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.batch.protocol.models;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The entry of path and mount mode you want to mount into task container.
 */
public class ContainerHostBatchBindMountEntry {
    /**
     * The path which be mounted to container customer can select.
     * Possible values include: 'Shared', 'Startup', 'VfsMounts', 'Task',
     * 'JobPrep', 'Applications'.
     */
    @JsonProperty(value = "source")
    private ContainerHostDataPath source;

    /**
     * Mount this source path as read-only mode or not. Default value is false
     * (read/write mode).
     * For Linux, if you mount this path as a read/write mode, this does not
     * mean that all users in container have the read/write access for the
     * path, it depends on the access in host VM. If this path is mounted
     * read-only, all users within the container will not be able to modify the
     * path.
     */
    @JsonProperty(value = "isReadOnly")
    private Boolean isReadOnly;

    /**
     * Get possible values include: 'Shared', 'Startup', 'VfsMounts', 'Task', 'JobPrep', 'Applications'.
     *
     * @return the source value
     */
    public ContainerHostDataPath source() {
        return this.source;
    }

    /**
     * Set possible values include: 'Shared', 'Startup', 'VfsMounts', 'Task', 'JobPrep', 'Applications'.
     *
     * @param source the source value to set
     * @return the ContainerHostBatchBindMountEntry object itself.
     */
    public ContainerHostBatchBindMountEntry withSource(ContainerHostDataPath source) {
        this.source = source;
        return this;
    }

    /**
     * Get for Linux, if you mount this path as a read/write mode, this does not mean that all users in container have the read/write access for the path, it depends on the access in host VM. If this path is mounted read-only, all users within the container will not be able to modify the path.
     *
     * @return the isReadOnly value
     */
    public Boolean isReadOnly() {
        return this.isReadOnly;
    }

    /**
     * Set for Linux, if you mount this path as a read/write mode, this does not mean that all users in container have the read/write access for the path, it depends on the access in host VM. If this path is mounted read-only, all users within the container will not be able to modify the path.
     *
     * @param isReadOnly the isReadOnly value to set
     * @return the ContainerHostBatchBindMountEntry object itself.
     */
    public ContainerHostBatchBindMountEntry withIsReadOnly(Boolean isReadOnly) {
        this.isReadOnly = isReadOnly;
        return this;
    }

}
