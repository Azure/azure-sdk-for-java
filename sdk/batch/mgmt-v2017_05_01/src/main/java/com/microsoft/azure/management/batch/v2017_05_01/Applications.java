/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.batch.v2017_05_01;

import rx.Completable;
import rx.Observable;
import com.microsoft.azure.management.batch.v2017_05_01.implementation.ApplicationsInner;
import com.microsoft.azure.arm.model.HasInner;

/**
 * Type representing Applications.
 */
public interface Applications extends HasInner<ApplicationsInner> {
    /**
     * Adds an application to the specified Batch account.
     *
     * @param resourceGroupName The name of the resource group that contains the Batch account.
     * @param accountName The name of the Batch account.
     * @param applicationId The ID of the application.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<Application> createAsync(String resourceGroupName, String accountName, String applicationId);

    /**
     * Updates settings for the specified application.
     *
     * @param resourceGroupName The name of the resource group that contains the Batch account.
     * @param accountName The name of the Batch account.
     * @param applicationId The ID of the application.
     * @param parameters The parameters for the request.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable updateAsync(String resourceGroupName, String accountName, String applicationId, ApplicationUpdateParameters parameters);

    /**
     * Gets information about the specified application.
     *
     * @param resourceGroupName The name of the resource group that contains the Batch account.
     * @param accountName The name of the Batch account.
     * @param applicationId The ID of the application.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<Application> getAsync(String resourceGroupName, String accountName, String applicationId);

    /**
     * Lists all of the applications in the specified account.
     *
     * @param resourceGroupName The name of the resource group that contains the Batch account.
     * @param accountName The name of the Batch account.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<Application> listAsync(final String resourceGroupName, final String accountName);

    /**
     * Deletes an application.
     *
     * @param resourceGroupName The name of the resource group that contains the Batch account.
     * @param accountName The name of the Batch account.
     * @param applicationId The ID of the application.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable deleteAsync(String resourceGroupName, String accountName, String applicationId);

}
