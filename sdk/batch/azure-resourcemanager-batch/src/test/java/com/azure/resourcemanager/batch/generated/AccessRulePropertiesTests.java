// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.batch.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.batch.models.AccessRuleDirection;
import com.azure.resourcemanager.batch.models.AccessRuleProperties;
import com.azure.resourcemanager.batch.models.AccessRulePropertiesSubscriptionsItem;
import com.azure.resourcemanager.batch.models.NetworkSecurityPerimeter;
import java.util.Arrays;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;

public final class AccessRulePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AccessRuleProperties model = BinaryData.fromString(
            "{\"direction\":\"Outbound\",\"addressPrefixes\":[\"fhjxakvvjgs\",\"ordilmywwtkgkxny\",\"dabg\",\"vudtjuewbcihx\"],\"subscriptions\":[{\"id\":\"c\"},{\"id\":\"xccybvpa\"}],\"networkSecurityPerimeters\":[{\"id\":\"udzpxgwjplmagstc\",\"perimeterGuid\":\"b722075a-1908-4073-b451-253007625fbb\",\"location\":\"pfkyrkdbdgiogsj\"},{\"id\":\"nwqjnoba\",\"perimeterGuid\":\"7e43d43a-c203-4d50-bf36-7542c82975ea\",\"location\":\"ddviacegfnmntfpm\"}],\"fullyQualifiedDomainNames\":[\"mfnczd\",\"vvbalx\",\"l\",\"chp\"],\"emailAddresses\":[\"zevwrdnhfukuv\",\"jcswsmys\"],\"phoneNumbers\":[\"uqypfcvle\",\"chpqbmfpjba\",\"widf\",\"xsspuunnoxyhk\"]}")
            .toObject(AccessRuleProperties.class);
        Assertions.assertEquals(AccessRuleDirection.OUTBOUND, model.direction());
        Assertions.assertEquals("fhjxakvvjgs", model.addressPrefixes().get(0));
        Assertions.assertEquals("c", model.subscriptions().get(0).id());
        Assertions.assertEquals("udzpxgwjplmagstc", model.networkSecurityPerimeters().get(0).id());
        Assertions.assertEquals(UUID.fromString("b722075a-1908-4073-b451-253007625fbb"),
            model.networkSecurityPerimeters().get(0).perimeterGuid());
        Assertions.assertEquals("pfkyrkdbdgiogsj", model.networkSecurityPerimeters().get(0).location());
        Assertions.assertEquals("mfnczd", model.fullyQualifiedDomainNames().get(0));
        Assertions.assertEquals("zevwrdnhfukuv", model.emailAddresses().get(0));
        Assertions.assertEquals("uqypfcvle", model.phoneNumbers().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AccessRuleProperties model = new AccessRuleProperties().withDirection(AccessRuleDirection.OUTBOUND)
            .withAddressPrefixes(Arrays.asList("fhjxakvvjgs", "ordilmywwtkgkxny", "dabg", "vudtjuewbcihx"))
            .withSubscriptions(Arrays.asList(new AccessRulePropertiesSubscriptionsItem().withId("c"),
                new AccessRulePropertiesSubscriptionsItem().withId("xccybvpa")))
            .withNetworkSecurityPerimeters(Arrays.asList(
                new NetworkSecurityPerimeter().withId("udzpxgwjplmagstc")
                    .withPerimeterGuid(UUID.fromString("b722075a-1908-4073-b451-253007625fbb"))
                    .withLocation("pfkyrkdbdgiogsj"),
                new NetworkSecurityPerimeter().withId("nwqjnoba")
                    .withPerimeterGuid(UUID.fromString("7e43d43a-c203-4d50-bf36-7542c82975ea"))
                    .withLocation("ddviacegfnmntfpm")))
            .withFullyQualifiedDomainNames(Arrays.asList("mfnczd", "vvbalx", "l", "chp"))
            .withEmailAddresses(Arrays.asList("zevwrdnhfukuv", "jcswsmys"))
            .withPhoneNumbers(Arrays.asList("uqypfcvle", "chpqbmfpjba", "widf", "xsspuunnoxyhk"));
        model = BinaryData.fromObject(model).toObject(AccessRuleProperties.class);
        Assertions.assertEquals(AccessRuleDirection.OUTBOUND, model.direction());
        Assertions.assertEquals("fhjxakvvjgs", model.addressPrefixes().get(0));
        Assertions.assertEquals("c", model.subscriptions().get(0).id());
        Assertions.assertEquals("udzpxgwjplmagstc", model.networkSecurityPerimeters().get(0).id());
        Assertions.assertEquals(UUID.fromString("b722075a-1908-4073-b451-253007625fbb"),
            model.networkSecurityPerimeters().get(0).perimeterGuid());
        Assertions.assertEquals("pfkyrkdbdgiogsj", model.networkSecurityPerimeters().get(0).location());
        Assertions.assertEquals("mfnczd", model.fullyQualifiedDomainNames().get(0));
        Assertions.assertEquals("zevwrdnhfukuv", model.emailAddresses().get(0));
        Assertions.assertEquals("uqypfcvle", model.phoneNumbers().get(0));
    }
}
