// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.batch.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.batch.models.AutoScaleSettings;
import com.azure.resourcemanager.batch.models.ComputeNodeDeallocationOption;
import com.azure.resourcemanager.batch.models.FixedScaleSettings;
import com.azure.resourcemanager.batch.models.ScaleSettings;
import java.time.Duration;
import org.junit.jupiter.api.Assertions;

public final class ScaleSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ScaleSettings model = BinaryData.fromString(
            "{\"fixedScale\":{\"resizeTimeout\":\"PT9H43M43S\",\"targetDedicatedNodes\":857733914,\"targetLowPriorityNodes\":967262152,\"nodeDeallocationOption\":\"TaskCompletion\"},\"autoScale\":{\"formula\":\"hxsrzdzucersc\",\"evaluationInterval\":\"PT151H26M9S\"}}")
            .toObject(ScaleSettings.class);
        Assertions.assertEquals(Duration.parse("PT9H43M43S"), model.fixedScale().resizeTimeout());
        Assertions.assertEquals(857733914, model.fixedScale().targetDedicatedNodes());
        Assertions.assertEquals(967262152, model.fixedScale().targetLowPriorityNodes());
        Assertions.assertEquals(ComputeNodeDeallocationOption.TASK_COMPLETION,
            model.fixedScale().nodeDeallocationOption());
        Assertions.assertEquals("hxsrzdzucersc", model.autoScale().formula());
        Assertions.assertEquals(Duration.parse("PT151H26M9S"), model.autoScale().evaluationInterval());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ScaleSettings model = new ScaleSettings()
            .withFixedScale(new FixedScaleSettings().withResizeTimeout(Duration.parse("PT9H43M43S"))
                .withTargetDedicatedNodes(857733914).withTargetLowPriorityNodes(967262152)
                .withNodeDeallocationOption(ComputeNodeDeallocationOption.TASK_COMPLETION))
            .withAutoScale(new AutoScaleSettings().withFormula("hxsrzdzucersc")
                .withEvaluationInterval(Duration.parse("PT151H26M9S")));
        model = BinaryData.fromObject(model).toObject(ScaleSettings.class);
        Assertions.assertEquals(Duration.parse("PT9H43M43S"), model.fixedScale().resizeTimeout());
        Assertions.assertEquals(857733914, model.fixedScale().targetDedicatedNodes());
        Assertions.assertEquals(967262152, model.fixedScale().targetLowPriorityNodes());
        Assertions.assertEquals(ComputeNodeDeallocationOption.TASK_COMPLETION,
            model.fixedScale().nodeDeallocationOption());
        Assertions.assertEquals("hxsrzdzucersc", model.autoScale().formula());
        Assertions.assertEquals(Duration.parse("PT151H26M9S"), model.autoScale().evaluationInterval());
    }
}
