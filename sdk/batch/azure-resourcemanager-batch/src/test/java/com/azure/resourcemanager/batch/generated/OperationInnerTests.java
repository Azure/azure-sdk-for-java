// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.batch.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.batch.fluent.models.OperationInner;
import com.azure.resourcemanager.batch.models.OperationDisplay;
import org.junit.jupiter.api.Assertions;

public final class OperationInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationInner model =
            BinaryData
                .fromString(
                    "{\"name\":\"dnvowg\",\"isDataAction\":true,\"display\":{\"provider\":\"wdkcglhsl\",\"operation\":\"jdyggdtji\",\"resource\":\"b\",\"description\":\"ofqweykhmenevfye\"},\"origin\":\"whybcib\",\"properties\":\"datavdcsitynn\"}")
                .toObject(OperationInner.class);
        Assertions.assertEquals("dnvowg", model.name());
        Assertions.assertEquals(true, model.isDataAction());
        Assertions.assertEquals("wdkcglhsl", model.display().provider());
        Assertions.assertEquals("jdyggdtji", model.display().operation());
        Assertions.assertEquals("b", model.display().resource());
        Assertions.assertEquals("ofqweykhmenevfye", model.display().description());
        Assertions.assertEquals("whybcib", model.origin());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationInner model =
            new OperationInner()
                .withName("dnvowg")
                .withIsDataAction(true)
                .withDisplay(
                    new OperationDisplay()
                        .withProvider("wdkcglhsl")
                        .withOperation("jdyggdtji")
                        .withResource("b")
                        .withDescription("ofqweykhmenevfye"))
                .withOrigin("whybcib")
                .withProperties("datavdcsitynn");
        model = BinaryData.fromObject(model).toObject(OperationInner.class);
        Assertions.assertEquals("dnvowg", model.name());
        Assertions.assertEquals(true, model.isDataAction());
        Assertions.assertEquals("wdkcglhsl", model.display().provider());
        Assertions.assertEquals("jdyggdtji", model.display().operation());
        Assertions.assertEquals("b", model.display().resource());
        Assertions.assertEquals("ofqweykhmenevfye", model.display().description());
        Assertions.assertEquals("whybcib", model.origin());
    }
}
