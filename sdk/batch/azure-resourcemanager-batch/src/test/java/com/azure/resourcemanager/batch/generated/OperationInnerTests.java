// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.batch.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.batch.fluent.models.OperationInner;
import com.azure.resourcemanager.batch.models.OperationDisplay;
import org.junit.jupiter.api.Assertions;

public final class OperationInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationInner model = BinaryData.fromString(
            "{\"name\":\"lnwsubisn\",\"isDataAction\":true,\"display\":{\"provider\":\"ngnzscxaqwoochc\",\"operation\":\"nqvpkvlrxnje\",\"resource\":\"eipheoflokeyy\",\"description\":\"nj\"},\"origin\":\"lwtgrhpdj\",\"properties\":\"dataumasxazjpq\"}")
            .toObject(OperationInner.class);
        Assertions.assertEquals("lnwsubisn", model.name());
        Assertions.assertEquals(true, model.isDataAction());
        Assertions.assertEquals("ngnzscxaqwoochc", model.display().provider());
        Assertions.assertEquals("nqvpkvlrxnje", model.display().operation());
        Assertions.assertEquals("eipheoflokeyy", model.display().resource());
        Assertions.assertEquals("nj", model.display().description());
        Assertions.assertEquals("lwtgrhpdj", model.origin());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationInner model = new OperationInner().withName("lnwsubisn").withIsDataAction(true)
            .withDisplay(new OperationDisplay().withProvider("ngnzscxaqwoochc").withOperation("nqvpkvlrxnje")
                .withResource("eipheoflokeyy").withDescription("nj"))
            .withOrigin("lwtgrhpdj").withProperties("dataumasxazjpq");
        model = BinaryData.fromObject(model).toObject(OperationInner.class);
        Assertions.assertEquals("lnwsubisn", model.name());
        Assertions.assertEquals(true, model.isDataAction());
        Assertions.assertEquals("ngnzscxaqwoochc", model.display().provider());
        Assertions.assertEquals("nqvpkvlrxnje", model.display().operation());
        Assertions.assertEquals("eipheoflokeyy", model.display().resource());
        Assertions.assertEquals("nj", model.display().description());
        Assertions.assertEquals("lwtgrhpdj", model.origin());
    }
}
