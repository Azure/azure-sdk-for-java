// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.batch.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.batch.BatchManager;
import com.azure.resourcemanager.batch.models.NetworkSecurityPerimeterConfiguration;
import com.azure.resourcemanager.batch.models.ResourceAssociationAccessMode;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class NetworkSecurityPerimetersListConfigurationsMockTests {
    @Test
    public void testListConfigurations() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Canceled\",\"provisioningIssues\":[{\"name\":\"wxhn\",\"properties\":{\"issueType\":\"MissingIdentityConfiguration\",\"severity\":\"Warning\",\"description\":\"sreurfqkfuare\",\"suggestedResourceIds\":[\"hhtklnvnafvvkyfe\",\"ev\",\"bo\"],\"suggestedAccessRules\":[{},{},{},{}]}},{\"name\":\"xypokkhmi\",\"properties\":{\"issueType\":\"Unknown\",\"severity\":\"Error\",\"description\":\"ngnbdxxew\",\"suggestedResourceIds\":[\"nvudbchaqdtvqecr\",\"ct\"],\"suggestedAccessRules\":[{},{},{},{}]}},{\"name\":\"tddmf\",\"properties\":{\"issueType\":\"MissingIdentityConfiguration\",\"severity\":\"Warning\",\"description\":\"vtzn\",\"suggestedResourceIds\":[\"bannovvoxczytp\",\"wnwvroevytlyokr\",\"rouuxvnsasbcry\"],\"suggestedAccessRules\":[{}]}},{\"name\":\"zrxklobd\",\"properties\":{\"issueType\":\"MissingPerimeterConfiguration\",\"severity\":\"Error\",\"description\":\"mlmvevfxzo\",\"suggestedResourceIds\":[\"bzxliohrdddtfgxq\",\"awpcbbnzqcykn\"],\"suggestedAccessRules\":[{},{},{},{}]}}],\"networkSecurityPerimeter\":{\"id\":\"yuicdhzbdy\",\"perimeterGuid\":\"ee2613fa-7a90-4890-b9ab-a577b4370aa1\",\"location\":\"gbdvibidmhmwff\"},\"resourceAssociation\":{\"name\":\"muvapc\",\"accessMode\":\"Enforced\"},\"profile\":{\"name\":\"vwe\",\"accessRulesVersion\":798651388,\"accessRules\":[{\"name\":\"ukphaimmoiroq\",\"properties\":{}},{\"name\":\"hbragapyyr\",\"properties\":{}},{\"name\":\"vbpavbopfppdbw\",\"properties\":{}}],\"diagnosticSettingsVersion\":1237918766,\"enabledLogCategories\":[\"xkumasjcaac\",\"dmmcpugmehqep\",\"u\",\"hbzehewho\"]}},\"id\":\"nlbqnbldxeaclg\",\"name\":\"chorimkrsr\",\"type\":\"moucsofldpuviyfc\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        BatchManager manager = BatchManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<NetworkSecurityPerimeterConfiguration> response = manager.networkSecurityPerimeters()
            .listConfigurations("cnpqwteht", "evrh", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("yuicdhzbdy", response.iterator().next().properties().networkSecurityPerimeter().id());
        Assertions.assertEquals(UUID.fromString("ee2613fa-7a90-4890-b9ab-a577b4370aa1"),
            response.iterator().next().properties().networkSecurityPerimeter().perimeterGuid());
        Assertions.assertEquals("gbdvibidmhmwff",
            response.iterator().next().properties().networkSecurityPerimeter().location());
        Assertions.assertEquals("muvapc", response.iterator().next().properties().resourceAssociation().name());
        Assertions.assertEquals(ResourceAssociationAccessMode.ENFORCED,
            response.iterator().next().properties().resourceAssociation().accessMode());
        Assertions.assertEquals("vwe", response.iterator().next().properties().profile().name());
        Assertions.assertEquals(798651388, response.iterator().next().properties().profile().accessRulesVersion());
        Assertions.assertEquals("ukphaimmoiroq",
            response.iterator().next().properties().profile().accessRules().get(0).name());
        Assertions.assertEquals(1237918766,
            response.iterator().next().properties().profile().diagnosticSettingsVersion());
        Assertions.assertEquals("xkumasjcaac",
            response.iterator().next().properties().profile().enabledLogCategories().get(0));
    }
}
