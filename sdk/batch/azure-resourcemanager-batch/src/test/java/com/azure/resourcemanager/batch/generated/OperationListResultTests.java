// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.batch.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.batch.fluent.models.OperationInner;
import com.azure.resourcemanager.batch.models.OperationDisplay;
import com.azure.resourcemanager.batch.models.OperationListResult;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class OperationListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationListResult model = BinaryData.fromString(
            "{\"value\":[{\"name\":\"ocpecfvmmco\",\"isDataAction\":true,\"display\":{\"provider\":\"zevgb\",\"operation\":\"jqabcypmivkwlzuv\",\"resource\":\"fwnfnb\",\"description\":\"fionl\"},\"origin\":\"x\",\"properties\":\"dataqgtz\"}],\"nextLink\":\"pnqbqqwxrjfe\"}")
            .toObject(OperationListResult.class);
        Assertions.assertEquals("ocpecfvmmco", model.value().get(0).name());
        Assertions.assertEquals(true, model.value().get(0).isDataAction());
        Assertions.assertEquals("zevgb", model.value().get(0).display().provider());
        Assertions.assertEquals("jqabcypmivkwlzuv", model.value().get(0).display().operation());
        Assertions.assertEquals("fwnfnb", model.value().get(0).display().resource());
        Assertions.assertEquals("fionl", model.value().get(0).display().description());
        Assertions.assertEquals("x", model.value().get(0).origin());
        Assertions.assertEquals("pnqbqqwxrjfe", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationListResult model = new OperationListResult()
            .withValue(Arrays.asList(new OperationInner().withName("ocpecfvmmco").withIsDataAction(true)
                .withDisplay(new OperationDisplay().withProvider("zevgb").withOperation("jqabcypmivkwlzuv")
                    .withResource("fwnfnb").withDescription("fionl"))
                .withOrigin("x").withProperties("dataqgtz")))
            .withNextLink("pnqbqqwxrjfe");
        model = BinaryData.fromObject(model).toObject(OperationListResult.class);
        Assertions.assertEquals("ocpecfvmmco", model.value().get(0).name());
        Assertions.assertEquals(true, model.value().get(0).isDataAction());
        Assertions.assertEquals("zevgb", model.value().get(0).display().provider());
        Assertions.assertEquals("jqabcypmivkwlzuv", model.value().get(0).display().operation());
        Assertions.assertEquals("fwnfnb", model.value().get(0).display().resource());
        Assertions.assertEquals("fionl", model.value().get(0).display().description());
        Assertions.assertEquals("x", model.value().get(0).origin());
        Assertions.assertEquals("pnqbqqwxrjfe", model.nextLink());
    }
}
