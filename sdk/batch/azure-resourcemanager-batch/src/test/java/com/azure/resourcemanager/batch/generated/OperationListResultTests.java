// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.batch.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.batch.fluent.models.OperationInner;
import com.azure.resourcemanager.batch.models.OperationDisplay;
import com.azure.resourcemanager.batch.models.OperationListResult;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class OperationListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationListResult model = BinaryData.fromString(
            "{\"value\":[{\"name\":\"okeyyienj\",\"isDataAction\":true,\"display\":{\"provider\":\"grhpdjpju\",\"operation\":\"sxazjpq\",\"resource\":\"gual\",\"description\":\"xxhejjzzvd\"},\"origin\":\"gwdslfhotwm\",\"properties\":\"datanpwlbjnpg\"}],\"nextLink\":\"ftadehxnltyfs\"}")
            .toObject(OperationListResult.class);
        Assertions.assertEquals("okeyyienj", model.value().get(0).name());
        Assertions.assertEquals(true, model.value().get(0).isDataAction());
        Assertions.assertEquals("grhpdjpju", model.value().get(0).display().provider());
        Assertions.assertEquals("sxazjpq", model.value().get(0).display().operation());
        Assertions.assertEquals("gual", model.value().get(0).display().resource());
        Assertions.assertEquals("xxhejjzzvd", model.value().get(0).display().description());
        Assertions.assertEquals("gwdslfhotwm", model.value().get(0).origin());
        Assertions.assertEquals("ftadehxnltyfs", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationListResult model
            = new OperationListResult().withValue(Arrays.asList(new OperationInner().withName("okeyyienj")
                .withIsDataAction(true)
                .withDisplay(new OperationDisplay().withProvider("grhpdjpju")
                    .withOperation("sxazjpq")
                    .withResource("gual")
                    .withDescription("xxhejjzzvd"))
                .withOrigin("gwdslfhotwm")
                .withProperties("datanpwlbjnpg"))).withNextLink("ftadehxnltyfs");
        model = BinaryData.fromObject(model).toObject(OperationListResult.class);
        Assertions.assertEquals("okeyyienj", model.value().get(0).name());
        Assertions.assertEquals(true, model.value().get(0).isDataAction());
        Assertions.assertEquals("grhpdjpju", model.value().get(0).display().provider());
        Assertions.assertEquals("sxazjpq", model.value().get(0).display().operation());
        Assertions.assertEquals("gual", model.value().get(0).display().resource());
        Assertions.assertEquals("xxhejjzzvd", model.value().get(0).display().description());
        Assertions.assertEquals("gwdslfhotwm", model.value().get(0).origin());
        Assertions.assertEquals("ftadehxnltyfs", model.nextLink());
    }
}
