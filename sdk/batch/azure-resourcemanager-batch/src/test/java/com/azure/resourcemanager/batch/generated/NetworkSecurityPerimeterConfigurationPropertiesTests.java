// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.batch.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.batch.models.AccessRule;
import com.azure.resourcemanager.batch.models.AccessRuleDirection;
import com.azure.resourcemanager.batch.models.AccessRuleProperties;
import com.azure.resourcemanager.batch.models.AccessRulePropertiesSubscriptionsItem;
import com.azure.resourcemanager.batch.models.NetworkSecurityPerimeter;
import com.azure.resourcemanager.batch.models.NetworkSecurityPerimeterConfigurationProperties;
import com.azure.resourcemanager.batch.models.NetworkSecurityProfile;
import com.azure.resourcemanager.batch.models.ResourceAssociation;
import com.azure.resourcemanager.batch.models.ResourceAssociationAccessMode;
import java.util.Arrays;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;

public final class NetworkSecurityPerimeterConfigurationPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkSecurityPerimeterConfigurationProperties model = BinaryData.fromString(
            "{\"provisioningState\":\"Accepted\",\"provisioningIssues\":[{\"name\":\"jchrdgoihxumw\",\"properties\":{\"issueType\":\"Unknown\",\"severity\":\"Warning\",\"description\":\"luudfdlwggytsb\",\"suggestedResourceIds\":[\"vvt\",\"seinqfiuf\",\"qknp\",\"rgnepttwqmsniffc\"],\"suggestedAccessRules\":[{\"name\":\"r\",\"properties\":{}},{\"name\":\"pij\",\"properties\":{}},{\"name\":\"xfrdd\",\"properties\":{}},{\"name\":\"atiz\",\"properties\":{}}]}},{\"name\":\"nasx\",\"properties\":{\"issueType\":\"ConfigurationPropagationFailure\",\"severity\":\"Warning\",\"description\":\"zh\",\"suggestedResourceIds\":[\"esgogc\",\"honnxkrlgnyhmos\",\"xkk\"],\"suggestedAccessRules\":[{\"name\":\"rghxjb\",\"properties\":{}}]}}],\"networkSecurityPerimeter\":{\"id\":\"vcxgfrpdsofbshr\",\"perimeterGuid\":\"7bf27913-21bf-4574-9f4c-ec6f69556a78\",\"location\":\"buswdvzyy\"},\"resourceAssociation\":{\"name\":\"nu\",\"accessMode\":\"Learning\"},\"profile\":{\"name\":\"tkfa\",\"accessRulesVersion\":1955812770,\"accessRules\":[{\"name\":\"ikyzirtxdy\",\"properties\":{\"direction\":\"Inbound\",\"addressPrefixes\":[\"tpsew\"],\"subscriptions\":[{}],\"networkSecurityPerimeters\":[{}],\"fullyQualifiedDomainNames\":[\"kr\"],\"emailAddresses\":[\"tqmieox\",\"rgguf\",\"yaomtb\"],\"phoneNumbers\":[\"avgrvkffovjz\",\"pjbi\"]}}],\"diagnosticSettingsVersion\":1956695064,\"enabledLogCategories\":[\"xumvfcluyovw\",\"nbkfezzxscy\"]}}")
            .toObject(NetworkSecurityPerimeterConfigurationProperties.class);
        Assertions.assertEquals("vcxgfrpdsofbshr", model.networkSecurityPerimeter().id());
        Assertions.assertEquals(UUID.fromString("7bf27913-21bf-4574-9f4c-ec6f69556a78"),
            model.networkSecurityPerimeter().perimeterGuid());
        Assertions.assertEquals("buswdvzyy", model.networkSecurityPerimeter().location());
        Assertions.assertEquals("nu", model.resourceAssociation().name());
        Assertions.assertEquals(ResourceAssociationAccessMode.LEARNING, model.resourceAssociation().accessMode());
        Assertions.assertEquals("tkfa", model.profile().name());
        Assertions.assertEquals(1955812770, model.profile().accessRulesVersion());
        Assertions.assertEquals("ikyzirtxdy", model.profile().accessRules().get(0).name());
        Assertions.assertEquals(AccessRuleDirection.INBOUND,
            model.profile().accessRules().get(0).properties().direction());
        Assertions.assertEquals("tpsew", model.profile().accessRules().get(0).properties().addressPrefixes().get(0));
        Assertions.assertEquals("kr",
            model.profile().accessRules().get(0).properties().fullyQualifiedDomainNames().get(0));
        Assertions.assertEquals("tqmieox", model.profile().accessRules().get(0).properties().emailAddresses().get(0));
        Assertions.assertEquals("avgrvkffovjz",
            model.profile().accessRules().get(0).properties().phoneNumbers().get(0));
        Assertions.assertEquals(1956695064, model.profile().diagnosticSettingsVersion());
        Assertions.assertEquals("xumvfcluyovw", model.profile().enabledLogCategories().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkSecurityPerimeterConfigurationProperties model = new NetworkSecurityPerimeterConfigurationProperties()
            .withNetworkSecurityPerimeter(new NetworkSecurityPerimeter().withId("vcxgfrpdsofbshr")
                .withPerimeterGuid(UUID.fromString("7bf27913-21bf-4574-9f4c-ec6f69556a78"))
                .withLocation("buswdvzyy"))
            .withResourceAssociation(
                new ResourceAssociation().withName("nu").withAccessMode(ResourceAssociationAccessMode.LEARNING))
            .withProfile(new NetworkSecurityProfile().withName("tkfa")
                .withAccessRulesVersion(1955812770)
                .withAccessRules(Arrays.asList(new AccessRule().withName("ikyzirtxdy")
                    .withProperties(new AccessRuleProperties().withDirection(AccessRuleDirection.INBOUND)
                        .withAddressPrefixes(Arrays.asList("tpsew"))
                        .withSubscriptions(Arrays.asList(new AccessRulePropertiesSubscriptionsItem()))
                        .withNetworkSecurityPerimeters(Arrays.asList(new NetworkSecurityPerimeter()))
                        .withFullyQualifiedDomainNames(Arrays.asList("kr"))
                        .withEmailAddresses(Arrays.asList("tqmieox", "rgguf", "yaomtb"))
                        .withPhoneNumbers(Arrays.asList("avgrvkffovjz", "pjbi")))))
                .withDiagnosticSettingsVersion(1956695064)
                .withEnabledLogCategories(Arrays.asList("xumvfcluyovw", "nbkfezzxscy")));
        model = BinaryData.fromObject(model).toObject(NetworkSecurityPerimeterConfigurationProperties.class);
        Assertions.assertEquals("vcxgfrpdsofbshr", model.networkSecurityPerimeter().id());
        Assertions.assertEquals(UUID.fromString("7bf27913-21bf-4574-9f4c-ec6f69556a78"),
            model.networkSecurityPerimeter().perimeterGuid());
        Assertions.assertEquals("buswdvzyy", model.networkSecurityPerimeter().location());
        Assertions.assertEquals("nu", model.resourceAssociation().name());
        Assertions.assertEquals(ResourceAssociationAccessMode.LEARNING, model.resourceAssociation().accessMode());
        Assertions.assertEquals("tkfa", model.profile().name());
        Assertions.assertEquals(1955812770, model.profile().accessRulesVersion());
        Assertions.assertEquals("ikyzirtxdy", model.profile().accessRules().get(0).name());
        Assertions.assertEquals(AccessRuleDirection.INBOUND,
            model.profile().accessRules().get(0).properties().direction());
        Assertions.assertEquals("tpsew", model.profile().accessRules().get(0).properties().addressPrefixes().get(0));
        Assertions.assertEquals("kr",
            model.profile().accessRules().get(0).properties().fullyQualifiedDomainNames().get(0));
        Assertions.assertEquals("tqmieox", model.profile().accessRules().get(0).properties().emailAddresses().get(0));
        Assertions.assertEquals("avgrvkffovjz",
            model.profile().accessRules().get(0).properties().phoneNumbers().get(0));
        Assertions.assertEquals(1956695064, model.profile().diagnosticSettingsVersion());
        Assertions.assertEquals("xumvfcluyovw", model.profile().enabledLogCategories().get(0));
    }
}
