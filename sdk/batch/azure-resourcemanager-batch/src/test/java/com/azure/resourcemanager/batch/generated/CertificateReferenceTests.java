// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.batch.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.batch.models.CertificateReference;
import com.azure.resourcemanager.batch.models.CertificateStoreLocation;
import com.azure.resourcemanager.batch.models.CertificateVisibility;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class CertificateReferenceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CertificateReference model =
            BinaryData
                .fromString(
                    "{\"id\":\"ooaojkniodkooebw\",\"storeLocation\":\"CurrentUser\",\"storeName\":\"emmsbvdkc\",\"visibility\":[\"Task\",\"RemoteUser\"]}")
                .toObject(CertificateReference.class);
        Assertions.assertEquals("ooaojkniodkooebw", model.id());
        Assertions.assertEquals(CertificateStoreLocation.CURRENT_USER, model.storeLocation());
        Assertions.assertEquals("emmsbvdkc", model.storeName());
        Assertions.assertEquals(CertificateVisibility.TASK, model.visibility().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CertificateReference model =
            new CertificateReference()
                .withId("ooaojkniodkooebw")
                .withStoreLocation(CertificateStoreLocation.CURRENT_USER)
                .withStoreName("emmsbvdkc")
                .withVisibility(Arrays.asList(CertificateVisibility.TASK, CertificateVisibility.REMOTE_USER));
        model = BinaryData.fromObject(model).toObject(CertificateReference.class);
        Assertions.assertEquals("ooaojkniodkooebw", model.id());
        Assertions.assertEquals(CertificateStoreLocation.CURRENT_USER, model.storeLocation());
        Assertions.assertEquals("emmsbvdkc", model.storeName());
        Assertions.assertEquals(CertificateVisibility.TASK, model.visibility().get(0));
    }
}
