// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.batch.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.batch.models.ComputeNodeIdentityReference;
import com.azure.resourcemanager.batch.models.ResourceFile;
import org.junit.jupiter.api.Assertions;

public final class ResourceFileTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ResourceFile model = BinaryData.fromString(
            "{\"autoStorageContainerName\":\"youlp\",\"storageContainerUrl\":\"v\",\"httpUrl\":\"glrvimjwosytxi\",\"blobPrefix\":\"skfc\",\"filePath\":\"qumiek\",\"fileMode\":\"zzikhlyfjhdg\",\"identityReference\":{\"resourceId\":\"ebdunyg\"}}")
            .toObject(ResourceFile.class);
        Assertions.assertEquals("youlp", model.autoStorageContainerName());
        Assertions.assertEquals("v", model.storageContainerUrl());
        Assertions.assertEquals("glrvimjwosytxi", model.httpUrl());
        Assertions.assertEquals("skfc", model.blobPrefix());
        Assertions.assertEquals("qumiek", model.filePath());
        Assertions.assertEquals("zzikhlyfjhdg", model.fileMode());
        Assertions.assertEquals("ebdunyg", model.identityReference().resourceId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ResourceFile model = new ResourceFile().withAutoStorageContainerName("youlp").withStorageContainerUrl("v")
            .withHttpUrl("glrvimjwosytxi").withBlobPrefix("skfc").withFilePath("qumiek").withFileMode("zzikhlyfjhdg")
            .withIdentityReference(new ComputeNodeIdentityReference().withResourceId("ebdunyg"));
        model = BinaryData.fromObject(model).toObject(ResourceFile.class);
        Assertions.assertEquals("youlp", model.autoStorageContainerName());
        Assertions.assertEquals("v", model.storageContainerUrl());
        Assertions.assertEquals("glrvimjwosytxi", model.httpUrl());
        Assertions.assertEquals("skfc", model.blobPrefix());
        Assertions.assertEquals("qumiek", model.filePath());
        Assertions.assertEquals("zzikhlyfjhdg", model.fileMode());
        Assertions.assertEquals("ebdunyg", model.identityReference().resourceId());
    }
}
