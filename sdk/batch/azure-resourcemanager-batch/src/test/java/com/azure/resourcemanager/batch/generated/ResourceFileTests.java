// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.batch.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.batch.models.ComputeNodeIdentityReference;
import com.azure.resourcemanager.batch.models.ResourceFile;
import org.junit.jupiter.api.Assertions;

public final class ResourceFileTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ResourceFile model =
            BinaryData
                .fromString(
                    "{\"autoStorageContainerName\":\"mnjijpxacqqudf\",\"storageContainerUrl\":\"yxbaaabjyvayf\",\"httpUrl\":\"m\",\"blobPrefix\":\"rtuzqogs\",\"filePath\":\"nevfdnw\",\"fileMode\":\"mewzsyyc\",\"identityReference\":{\"resourceId\":\"soibjudpfrx\"}}")
                .toObject(ResourceFile.class);
        Assertions.assertEquals("mnjijpxacqqudf", model.autoStorageContainerName());
        Assertions.assertEquals("yxbaaabjyvayf", model.storageContainerUrl());
        Assertions.assertEquals("m", model.httpUrl());
        Assertions.assertEquals("rtuzqogs", model.blobPrefix());
        Assertions.assertEquals("nevfdnw", model.filePath());
        Assertions.assertEquals("mewzsyyc", model.fileMode());
        Assertions.assertEquals("soibjudpfrx", model.identityReference().resourceId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ResourceFile model =
            new ResourceFile()
                .withAutoStorageContainerName("mnjijpxacqqudf")
                .withStorageContainerUrl("yxbaaabjyvayf")
                .withHttpUrl("m")
                .withBlobPrefix("rtuzqogs")
                .withFilePath("nevfdnw")
                .withFileMode("mewzsyyc")
                .withIdentityReference(new ComputeNodeIdentityReference().withResourceId("soibjudpfrx"));
        model = BinaryData.fromObject(model).toObject(ResourceFile.class);
        Assertions.assertEquals("mnjijpxacqqudf", model.autoStorageContainerName());
        Assertions.assertEquals("yxbaaabjyvayf", model.storageContainerUrl());
        Assertions.assertEquals("m", model.httpUrl());
        Assertions.assertEquals("rtuzqogs", model.blobPrefix());
        Assertions.assertEquals("nevfdnw", model.filePath());
        Assertions.assertEquals("mewzsyyc", model.fileMode());
        Assertions.assertEquals("soibjudpfrx", model.identityReference().resourceId());
    }
}
