// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.compute.batch.generated;

import com.azure.compute.batch.models.BatchNodeVMExtension;
import com.azure.compute.batch.models.InstanceViewStatus;
import com.azure.compute.batch.models.ListBatchNodeExtensionsOptions;
import com.azure.compute.batch.models.StatusLevelTypes;
import com.azure.compute.batch.models.VMExtension;
import com.azure.compute.batch.models.VMExtensionInstanceView;
import com.azure.core.http.rest.PagedIterable;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class ListComputeNodeExtensionsTests extends BatchClientTestBase {
    @Test
    @Disabled
    public void testListComputeNodeExtensionsTests() {
        // method invocation
        PagedIterable<BatchNodeVMExtension> response = batchClient.listNodeExtensions("poolId",
            "tvm-1695681911_2-20161122t193202z", new ListBatchNodeExtensionsOptions());

        // response assertion
        Assertions.assertEquals(200, response.iterableByPage().iterator().next().getStatusCode());
        BatchNodeVMExtension firstItem = response.iterator().next();
        Assertions.assertNotNull(firstItem);
        // verify property "vmExtension"
        VMExtension firstItemVmExtension = firstItem.getVmExtension();
        Assertions.assertNotNull(firstItemVmExtension);
        Assertions.assertEquals("batchNodeExtension", firstItemVmExtension.getName());
        Assertions.assertEquals("Microsoft.Azure.Extensions", firstItemVmExtension.getPublisher());
        Assertions.assertEquals("CustomScript", firstItemVmExtension.getType());
        Assertions.assertEquals("2.0", firstItemVmExtension.getTypeHandlerVersion());
        Assertions.assertEquals(true, firstItemVmExtension.isAutoUpgradeMinorVersion());
        // verify property "instanceView"
        VMExtensionInstanceView firstItemInstanceView = firstItem.getInstanceView();
        Assertions.assertNotNull(firstItemInstanceView);
        Assertions.assertEquals("batchNodeExtension", firstItemInstanceView.getName());
        List<InstanceViewStatus> firstItemInstanceViewStatuses = firstItemInstanceView.getStatuses();
        InstanceViewStatus firstItemInstanceViewStatusesFirstItem = firstItemInstanceViewStatuses.iterator().next();
        Assertions.assertNotNull(firstItemInstanceViewStatusesFirstItem);
        Assertions.assertEquals("ProvisioningState/succeeded", firstItemInstanceViewStatusesFirstItem.getCode());
        Assertions.assertEquals("Provisioning succeeded", firstItemInstanceViewStatusesFirstItem.getDisplayStatus());
        Assertions.assertEquals(StatusLevelTypes.INFO, firstItemInstanceViewStatusesFirstItem.getLevel());
        Assertions.assertEquals("Enable succeeded: Enabling and starting agent and controller",
            firstItemInstanceViewStatusesFirstItem.getMessage());
    }
}
