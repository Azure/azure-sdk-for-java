// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.compute.batch.generated;

import com.azure.compute.batch.models.BatchNodeCounts;
import com.azure.compute.batch.models.BatchPoolNodeCounts;
import com.azure.compute.batch.models.ListBatchPoolNodeCountsOptions;
import com.azure.core.http.rest.PagedIterable;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class NodeCountsPayloadTests extends BatchClientTestBase {
    @Test
    @Disabled
    public void testNodeCountsPayloadTests() {
        // method invocation
        PagedIterable<BatchPoolNodeCounts> response
            = batchClient.listPoolNodeCounts(new ListBatchPoolNodeCountsOptions());

        // response assertion
        Assertions.assertEquals(200, response.iterableByPage().iterator().next().getStatusCode());
        BatchPoolNodeCounts firstItem = response.iterator().next();
        Assertions.assertNotNull(firstItem);
        // verify property "poolId"
        Assertions.assertEquals("pool1", firstItem.getPoolId());
        // verify property "dedicated"
        BatchNodeCounts firstItemDedicated = firstItem.getDedicated();
        Assertions.assertNotNull(firstItemDedicated);
        Assertions.assertEquals(0, firstItemDedicated.getCreating());
        Assertions.assertEquals(0, firstItemDedicated.getIdle());
        Assertions.assertEquals(0, firstItemDedicated.getOffline());
        Assertions.assertEquals(0, firstItemDedicated.getPreempted());
        Assertions.assertEquals(0, firstItemDedicated.getRebooting());
        Assertions.assertEquals(0, firstItemDedicated.getReimaging());
        Assertions.assertEquals(0, firstItemDedicated.getRunning());
        Assertions.assertEquals(0, firstItemDedicated.getStarting());
        Assertions.assertEquals(0, firstItemDedicated.getStartTaskFailed());
        Assertions.assertEquals(0, firstItemDedicated.getLeavingPool());
        Assertions.assertEquals(0, firstItemDedicated.getUnknown());
        Assertions.assertEquals(0, firstItemDedicated.getUnusable());
        Assertions.assertEquals(0, firstItemDedicated.getWaitingForStartTask());
        Assertions.assertEquals(0, firstItemDedicated.getDeallocated());
        Assertions.assertEquals(0, firstItemDedicated.getDeallocating());
        Assertions.assertEquals(0, firstItemDedicated.getTotal());
        Assertions.assertEquals(0, firstItemDedicated.getUpgradingOs());
        // verify property "lowPriority"
        BatchNodeCounts firstItemLowPriority = firstItem.getLowPriority();
        Assertions.assertNotNull(firstItemLowPriority);
        Assertions.assertEquals(0, firstItemLowPriority.getCreating());
        Assertions.assertEquals(0, firstItemLowPriority.getIdle());
        Assertions.assertEquals(0, firstItemLowPriority.getOffline());
        Assertions.assertEquals(0, firstItemLowPriority.getPreempted());
        Assertions.assertEquals(0, firstItemLowPriority.getRebooting());
        Assertions.assertEquals(0, firstItemLowPriority.getReimaging());
        Assertions.assertEquals(2, firstItemLowPriority.getRunning());
        Assertions.assertEquals(1, firstItemLowPriority.getStarting());
        Assertions.assertEquals(0, firstItemLowPriority.getStartTaskFailed());
        Assertions.assertEquals(0, firstItemLowPriority.getLeavingPool());
        Assertions.assertEquals(0, firstItemLowPriority.getUnknown());
        Assertions.assertEquals(0, firstItemLowPriority.getUnusable());
        Assertions.assertEquals(0, firstItemLowPriority.getWaitingForStartTask());
        Assertions.assertEquals(0, firstItemLowPriority.getDeallocated());
        Assertions.assertEquals(0, firstItemLowPriority.getDeallocating());
        Assertions.assertEquals(3, firstItemLowPriority.getTotal());
        Assertions.assertEquals(0, firstItemLowPriority.getUpgradingOs());
    }
}
