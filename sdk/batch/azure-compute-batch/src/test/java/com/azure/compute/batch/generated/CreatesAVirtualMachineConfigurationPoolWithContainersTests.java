// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.compute.batch.generated;

import com.azure.compute.batch.models.BatchNodeFillType;
import com.azure.compute.batch.models.BatchPoolCreateContent;
import com.azure.compute.batch.models.BatchTaskSchedulingPolicy;
import com.azure.compute.batch.models.ContainerConfiguration;
import com.azure.compute.batch.models.ContainerType;
import com.azure.compute.batch.models.ImageReference;
import com.azure.compute.batch.models.VirtualMachineConfiguration;
import java.time.Duration;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class CreatesAVirtualMachineConfigurationPoolWithContainersTests extends BatchClientTestBase {
    @Test
    @Disabled
    public void testCreatesAVirtualMachineConfigurationPoolWithContainersTests() {
        // method invocation
        batchClient.createPool(new BatchPoolCreateContent("pool2", "standard_a1")
            .setVirtualMachineConfiguration(
                new VirtualMachineConfiguration(new ImageReference().setPublisher("Canonical")
                    .setOffer("0001-com-ubuntu-server-focal")
                    .setSku("120_04-lts"), "batch.node.ubuntu 20.04")
                        .setContainerConfiguration(new ContainerConfiguration(ContainerType.DOCKER_COMPATIBLE)
                            .setContainerImageNames(Arrays.asList("busybox"))))
            .setResizeTimeout(Duration.parse("PT15M"))
            .setTargetDedicatedNodes(5)
            .setTargetLowPriorityNodes(0)
            .setEnableAutoScale(false)
            .setTaskSlotsPerNode(3)
            .setTaskSchedulingPolicy(new BatchTaskSchedulingPolicy(BatchNodeFillType.SPREAD)), null);
    }
}
