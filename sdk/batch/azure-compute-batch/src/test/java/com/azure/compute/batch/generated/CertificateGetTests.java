// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.compute.batch.generated;

import com.azure.compute.batch.models.BatchCertificateState;
import com.azure.compute.batch.models.DeleteBatchCertificateError;
import com.azure.compute.batch.models.GetBatchCertificateOptions;
import com.azure.compute.batch.models.GetCertificateResponse;
import com.azure.compute.batch.models.NameValuePair;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class CertificateGetTests extends BatchClientTestBase {
    @Test
    @Disabled
    public void testCertificateGetTests() {
        // method invocation
        GetCertificateResponse response = batchClient.getCertificate("sha1", "0123456789abcdef0123456789abcdef01234567",
            new GetBatchCertificateOptions());

        // response assertion
        Assertions.assertNotNull(response);
        // verify property "thumbprint"
        Assertions.assertEquals("0123456789abcdef0123456789abcdef01234567", response.getThumbprint());
        // verify property "thumbprintAlgorithm"
        Assertions.assertEquals("sha1", response.getThumbprintAlgorithm());
        // verify property "url"
        Assertions.assertEquals(
            "https://account.region.batch.azure.com/certificates(thumbprintAlgorithm=sha1,thumbprint=0123456789abcdef0123456789abcdef01234567)",
            response.getUrl());
        // verify property "state"
        Assertions.assertEquals(BatchCertificateState.DELETE_FAILED, response.getState());
        // verify property "stateTransitionTime"
        Assertions.assertNotNull(response.getStateTransitionTime());
        // verify property "previousState"
        Assertions.assertEquals(BatchCertificateState.DELETING, response.getPreviousState());
        // verify property "previousStateTransitionTime"
        Assertions.assertNotNull(response.getPreviousStateTransitionTime());
        // verify property "publicData"
        Assertions.assertEquals("#####...", response.getPublicData());
        // verify property "deleteCertificateError"
        DeleteBatchCertificateError responseDeleteCertificateError = response.getDeleteCertificateError();
        Assertions.assertNotNull(responseDeleteCertificateError);
        Assertions.assertEquals("PoolsReferencingCertificate", responseDeleteCertificateError.getCode());
        Assertions.assertEquals("The specified certificate is being used by the below mentioned pool(s)",
            responseDeleteCertificateError.getMessage());
        List<NameValuePair> responseDeleteCertificateErrorValues = responseDeleteCertificateError.getValues();
        NameValuePair responseDeleteCertificateErrorValuesFirstItem
            = responseDeleteCertificateErrorValues.iterator().next();
        Assertions.assertNotNull(responseDeleteCertificateErrorValuesFirstItem);
        Assertions.assertEquals("Pools", responseDeleteCertificateErrorValuesFirstItem.getName());
        Assertions.assertEquals("mypool1", responseDeleteCertificateErrorValuesFirstItem.getValue());
    }
}
