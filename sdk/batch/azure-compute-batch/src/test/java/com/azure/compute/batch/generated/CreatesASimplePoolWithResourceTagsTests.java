// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.compute.batch.generated;

import com.azure.compute.batch.models.BatchPoolCreateContent;
import com.azure.compute.batch.models.ImageReference;
import com.azure.compute.batch.models.VirtualMachineConfiguration;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class CreatesASimplePoolWithResourceTagsTests extends BatchClientTestBase {
    @Test
    @Disabled
    public void testCreatesASimplePoolWithResourceTagsTests() {
        // method invocation
        batchClient.createPool(new BatchPoolCreateContent("mypool001", "STANDARD_DC2s_V2")
            .setVirtualMachineConfiguration(
                new VirtualMachineConfiguration(new ImageReference().setPublisher("Canonical")
                    .setOffer("UbuntuServer")
                    .setSku("18_04-lts-gen2")
                    .setVersion("latest"), "batch.node.ubuntu 18.04"))
            .setResourceTags(mapOf("TagName1", "TagValue1", "TagName2", "TagValue2"))
            .setTargetDedicatedNodes(1), null);
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
