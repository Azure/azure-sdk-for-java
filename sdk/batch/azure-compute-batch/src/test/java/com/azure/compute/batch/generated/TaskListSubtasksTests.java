// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.compute.batch.generated;

import com.azure.compute.batch.models.BatchNodeInfo;
import com.azure.compute.batch.models.BatchSubtask;
import com.azure.compute.batch.models.BatchSubtaskState;
import com.azure.compute.batch.models.ListBatchSubTasksOptions;
import com.azure.core.http.rest.PagedIterable;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class TaskListSubtasksTests extends BatchClientTestBase {
    @Test
    @Disabled
    public void testTaskListSubtasksTests() {
        // method invocation
        PagedIterable<BatchSubtask> response
            = batchClient.listSubTasks("jobId", "taskId", new ListBatchSubTasksOptions());

        // response assertion
        Assertions.assertEquals(200, response.iterableByPage().iterator().next().getStatusCode());
        BatchSubtask firstItem = response.iterator().next();
        Assertions.assertNotNull(firstItem);
        // verify property "id"
        Assertions.assertEquals(1, firstItem.getId());
        // verify property "nodeInfo"
        BatchNodeInfo firstItemNodeInfo = firstItem.getNodeInfo();
        Assertions.assertNotNull(firstItemNodeInfo);
        Assertions.assertEquals("TVM:tvm-2544493925_3-20160905t051718z", firstItemNodeInfo.getAffinityId());
        Assertions.assertEquals(
            "https://account.region.batch.azure.com/pools/poolId/nodes/tvm-2544493925_3-20160905t051718z",
            firstItemNodeInfo.getNodeUrl());
        Assertions.assertEquals("mpiPool", firstItemNodeInfo.getPoolId());
        Assertions.assertEquals("tvm-2544493925_3-20160905t051718z", firstItemNodeInfo.getNodeId());
        Assertions.assertEquals("\\workitems\\jobId\\job-1\\taskId\\1", firstItemNodeInfo.getTaskRootDirectory());
        Assertions.assertEquals(
            "https://account.region.batch.azure.com/pools/poolId/nodes/tvm-2544493925_3-20160905t051718z/files//workitems/jobId/job-1/taskId/1",
            firstItemNodeInfo.getTaskRootDirectoryUrl());
        // verify property "startTime"
        Assertions.assertNotNull(firstItem.getStartTime());
        // verify property "endTime"
        Assertions.assertNotNull(firstItem.getEndTime());
        // verify property "exitCode"
        Assertions.assertEquals(0, firstItem.getExitCode());
        // verify property "state"
        Assertions.assertEquals(BatchSubtaskState.COMPLETED, firstItem.getState());
        // verify property "stateTransitionTime"
        Assertions.assertNotNull(firstItem.getStateTransitionTime());
        // verify property "previousState"
        Assertions.assertEquals(BatchSubtaskState.RUNNING, firstItem.getPreviousState());
        // verify property "previousStateTransitionTime"
        Assertions.assertNotNull(firstItem.getPreviousStateTransitionTime());
    }
}
