// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.compute.batch.generated;

import com.azure.compute.batch.models.AffinityInfo;
import com.azure.compute.batch.models.BatchTaskAddCollectionResult;
import com.azure.compute.batch.models.BatchTaskAddResult;
import com.azure.compute.batch.models.BatchTaskAddStatus;
import com.azure.compute.batch.models.BatchTaskConstraints;
import com.azure.compute.batch.models.BatchTaskCreateContent;
import com.azure.compute.batch.models.BatchTaskGroup;
import com.azure.compute.batch.models.EnvironmentSetting;
import com.azure.compute.batch.models.MultiInstanceSettings;
import com.azure.compute.batch.models.ResourceFile;
import java.time.Duration;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class CreatesAComplexCollectionOfTasksTests extends BatchClientTestBase {
    @Test
    @Disabled
    public void testCreatesAComplexCollectionOfTasksTests() {
        // method invocation
        BatchTaskAddCollectionResult response
            = batchClient
                .createTaskCollection("jobId",
                    new BatchTaskGroup(
                        Arrays.asList(
                            new BatchTaskCreateContent("complex1", "cmd /c dir /s")
                                .setResourceFiles(
                                    Arrays.asList(new ResourceFile().setAutoStorageContainerName("containerName")
                                        .setFilePath("data")))
                                .setEnvironmentSettings(Arrays.asList(new EnvironmentSetting("env1").setValue("value1"),
                                    new EnvironmentSetting("env2").setValue("value2")))
                                .setAffinityInfo(new AffinityInfo("affinityId"))
                                .setConstraints(new BatchTaskConstraints().setMaxWallClockTime(Duration.parse("P1D"))
                                    .setRetentionTime(Duration.parse("P2D"))
                                    .setMaxTaskRetryCount(5))
                                .setRequiredSlots(2)
                                .setMultiInstanceSettings(
                                    new MultiInstanceSettings("cmd /c echo coordinating").setNumberOfInstances(3)
                                        .setCommonResourceFiles(Arrays.asList(
                                            new ResourceFile().setHttpUrl("https://common.blob.core.windows.net/")
                                                .setFilePath("common.exe")))),
                            new BatchTaskCreateContent("simple3", "cmd /c dir /s"))),
                    null);

        // response assertion
        Assertions.assertNotNull(response);
        // verify property "value"
        List<BatchTaskAddResult> responseValue = response.getValue();
        BatchTaskAddResult responseValueFirstItem = responseValue.iterator().next();
        Assertions.assertNotNull(responseValueFirstItem);
        Assertions.assertEquals(BatchTaskAddStatus.SUCCESS, responseValueFirstItem.getStatus());
        Assertions.assertEquals("simple3", responseValueFirstItem.getTaskId());
        Assertions.assertEquals("0x8D3D623CE295629", responseValueFirstItem.getETag());
        Assertions.assertNotNull(responseValueFirstItem.getLastModified());
        Assertions.assertEquals("https://account.region.batch.azure.com/jobs/jobId/tasks/simple3",
            responseValueFirstItem.getLocation());
    }
}
