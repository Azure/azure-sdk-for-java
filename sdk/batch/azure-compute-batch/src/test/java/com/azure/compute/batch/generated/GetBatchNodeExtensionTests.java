// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.compute.batch.generated;

import com.azure.compute.batch.models.BatchNodeVMExtension;
import com.azure.compute.batch.models.GetBatchNodeExtensionOptions;
import com.azure.compute.batch.models.InstanceViewStatus;
import com.azure.compute.batch.models.StatusLevelTypes;
import com.azure.compute.batch.models.VMExtension;
import com.azure.compute.batch.models.VMExtensionInstanceView;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class GetBatchNodeExtensionTests extends BatchClientTestBase {
    @Test
    @Disabled
    public void testGetBatchNodeExtensionTests() {
        // method invocation
        BatchNodeVMExtension response = batchClient.getNodeExtension("poolId", "tvm-1695681911_2-20161122t193202z",
            "batchNodeExtension", new GetBatchNodeExtensionOptions());

        // response assertion
        Assertions.assertNotNull(response);
        // verify property "vmExtension"
        VMExtension responseVmExtension = response.getVmExtension();
        Assertions.assertNotNull(responseVmExtension);
        Assertions.assertEquals("batchNodeExtension", responseVmExtension.getName());
        Assertions.assertEquals("Microsoft.Azure.Extensions", responseVmExtension.getPublisher());
        Assertions.assertEquals("CustomScript", responseVmExtension.getType());
        Assertions.assertEquals("2.0", responseVmExtension.getTypeHandlerVersion());
        Assertions.assertEquals(true, responseVmExtension.isAutoUpgradeMinorVersion());
        // verify property "instanceView"
        VMExtensionInstanceView responseInstanceView = response.getInstanceView();
        Assertions.assertNotNull(responseInstanceView);
        Assertions.assertEquals("batchNodeExtension", responseInstanceView.getName());
        List<InstanceViewStatus> responseInstanceViewStatuses = responseInstanceView.getStatuses();
        InstanceViewStatus responseInstanceViewStatusesFirstItem = responseInstanceViewStatuses.iterator().next();
        Assertions.assertNotNull(responseInstanceViewStatusesFirstItem);
        Assertions.assertEquals("ProvisioningState/succeeded", responseInstanceViewStatusesFirstItem.getCode());
        Assertions.assertEquals("Provisioning succeeded", responseInstanceViewStatusesFirstItem.getDisplayStatus());
        Assertions.assertEquals(StatusLevelTypes.INFO, responseInstanceViewStatusesFirstItem.getLevel());
        Assertions.assertEquals("Enable succeeded: Enabling and starting agent and controller",
            responseInstanceViewStatusesFirstItem.getMessage());
    }
}
