// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.compute.batch.generated;

import com.azure.compute.batch.models.BatchJobConstraints;
import com.azure.compute.batch.models.BatchJobSchedule;
import com.azure.compute.batch.models.BatchJobScheduleExecutionInfo;
import com.azure.compute.batch.models.BatchJobScheduleState;
import com.azure.compute.batch.models.BatchJobSpecification;
import com.azure.compute.batch.models.BatchPoolInfo;
import com.azure.compute.batch.models.ListBatchJobSchedulesOptions;
import com.azure.compute.batch.models.OnAllBatchTasksComplete;
import com.azure.compute.batch.models.OnBatchTaskFailure;
import com.azure.compute.batch.models.RecentBatchJob;
import com.azure.core.http.rest.PagedIterable;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class JobScheduleListTests extends BatchClientTestBase {
    @Test
    @Disabled
    public void testJobScheduleListTests() {
        // method invocation
        PagedIterable<BatchJobSchedule> response = batchClient.listJobSchedules(new ListBatchJobSchedulesOptions());

        // response assertion
        Assertions.assertEquals(200, response.iterableByPage().iterator().next().getStatusCode());
        BatchJobSchedule firstItem = response.iterator().next();
        Assertions.assertNotNull(firstItem);
        // verify property "id"
        Assertions.assertEquals("jobSchedule1", firstItem.getId());
        // verify property "url"
        Assertions.assertEquals("https://account.region.batch.azure.com/jobschedules/jobSchedule1", firstItem.getUrl());
        // verify property "eTag"
        Assertions.assertEquals("0x8D40FFD2E10996A", firstItem.getETag());
        // verify property "lastModified"
        Assertions.assertNotNull(firstItem.getLastModified());
        // verify property "creationTime"
        Assertions.assertNotNull(firstItem.getCreationTime());
        // verify property "state"
        Assertions.assertEquals(BatchJobScheduleState.ACTIVE, firstItem.getState());
        // verify property "stateTransitionTime"
        Assertions.assertNotNull(firstItem.getStateTransitionTime());
        // verify property "previousState"
        Assertions.assertEquals(BatchJobScheduleState.DISABLED, firstItem.getPreviousState());
        // verify property "previousStateTransitionTime"
        Assertions.assertNotNull(firstItem.getPreviousStateTransitionTime());
        // verify property "jobSpecification"
        BatchJobSpecification firstItemJobSpecification = firstItem.getJobSpecification();
        Assertions.assertNotNull(firstItemJobSpecification);
        Assertions.assertEquals(0, firstItemJobSpecification.getPriority());
        Assertions.assertEquals(false, firstItemJobSpecification.isAllowTaskPreemption());
        Assertions.assertEquals(-1, firstItemJobSpecification.getMaxParallelTasks());
        Assertions.assertEquals(false, firstItemJobSpecification.isUsesTaskDependencies());
        Assertions.assertEquals(OnAllBatchTasksComplete.NO_ACTION, firstItemJobSpecification.getOnAllTasksComplete());
        Assertions.assertEquals(OnBatchTaskFailure.NO_ACTION, firstItemJobSpecification.getOnTaskFailure());
        BatchJobConstraints firstItemJobSpecificationConstraints = firstItemJobSpecification.getConstraints();
        Assertions.assertNotNull(firstItemJobSpecificationConstraints);
        Assertions.assertNotNull(firstItemJobSpecificationConstraints.getMaxWallClockTime());
        Assertions.assertEquals(0, firstItemJobSpecificationConstraints.getMaxTaskRetryCount());
        BatchPoolInfo firstItemJobSpecificationPoolInfo = firstItemJobSpecification.getPoolInfo();
        Assertions.assertNotNull(firstItemJobSpecificationPoolInfo);
        Assertions.assertEquals("poolId", firstItemJobSpecificationPoolInfo.getPoolId());
        // verify property "executionInfo"
        BatchJobScheduleExecutionInfo firstItemExecutionInfo = firstItem.getExecutionInfo();
        Assertions.assertNotNull(firstItemExecutionInfo);
        RecentBatchJob firstItemExecutionInfoRecentJob = firstItemExecutionInfo.getRecentJob();
        Assertions.assertNotNull(firstItemExecutionInfoRecentJob);
        Assertions.assertEquals("jobSchedule1:job-1", firstItemExecutionInfoRecentJob.getId());
        Assertions.assertEquals("https://account.region.batch.azure.com/jobs/jobSchedule1:job-1",
            firstItemExecutionInfoRecentJob.getUrl());
    }
}
