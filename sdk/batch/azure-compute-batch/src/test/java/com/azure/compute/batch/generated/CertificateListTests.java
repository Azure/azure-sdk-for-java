// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.compute.batch.generated;

import com.azure.compute.batch.models.BatchCertificate;
import com.azure.compute.batch.models.BatchCertificateState;
import com.azure.compute.batch.models.DeleteBatchCertificateError;
import com.azure.compute.batch.models.ListBatchCertificatesOptions;
import com.azure.compute.batch.models.NameValuePair;
import com.azure.core.http.rest.PagedIterable;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class CertificateListTests extends BatchClientTestBase {
    @Test
    @Disabled
    public void testCertificateListTests() {
        // method invocation
        PagedIterable<BatchCertificate> response = batchClient.listCertificates(new ListBatchCertificatesOptions());

        // response assertion
        Assertions.assertEquals(200, response.iterableByPage().iterator().next().getStatusCode());
        BatchCertificate firstItem = response.iterator().next();
        Assertions.assertNotNull(firstItem);
        // verify property "thumbprint"
        Assertions.assertEquals("0123456789abcdef0123456789abcdef01234567", firstItem.getThumbprint());
        // verify property "thumbprintAlgorithm"
        Assertions.assertEquals("sha1", firstItem.getThumbprintAlgorithm());
        // verify property "url"
        Assertions.assertEquals(
            "https://account.region.batch.azure.com/certificates(thumbprintAlgorithm=sha1,thumbprint=0123456789abcdef0123456789abcdef01234567)",
            firstItem.getUrl());
        // verify property "state"
        Assertions.assertEquals(BatchCertificateState.DELETE_FAILED, firstItem.getState());
        // verify property "stateTransitionTime"
        Assertions.assertNotNull(firstItem.getStateTransitionTime());
        // verify property "previousState"
        Assertions.assertEquals(BatchCertificateState.DELETING, firstItem.getPreviousState());
        // verify property "previousStateTransitionTime"
        Assertions.assertNotNull(firstItem.getPreviousStateTransitionTime());
        // verify property "publicData"
        Assertions.assertEquals("#####...", firstItem.getPublicData());
        // verify property "deleteCertificateError"
        DeleteBatchCertificateError firstItemDeleteCertificateError = firstItem.getDeleteCertificateError();
        Assertions.assertNotNull(firstItemDeleteCertificateError);
        Assertions.assertEquals("PoolsReferencingCertificate", firstItemDeleteCertificateError.getCode());
        Assertions.assertEquals("The specified certificate is being used by the below mentioned pool(s)",
            firstItemDeleteCertificateError.getMessage());
        List<NameValuePair> firstItemDeleteCertificateErrorValues = firstItemDeleteCertificateError.getValues();
        NameValuePair firstItemDeleteCertificateErrorValuesFirstItem
            = firstItemDeleteCertificateErrorValues.iterator().next();
        Assertions.assertNotNull(firstItemDeleteCertificateErrorValuesFirstItem);
        Assertions.assertEquals("Pools", firstItemDeleteCertificateErrorValuesFirstItem.getName());
        Assertions.assertEquals("mypool1", firstItemDeleteCertificateErrorValuesFirstItem.getValue());
    }
}
