// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.compute.batch.generated;

import com.azure.compute.batch.models.BatchSupportedImage;
import com.azure.compute.batch.models.ImageReference;
import com.azure.compute.batch.models.ImageVerificationType;
import com.azure.compute.batch.models.ListSupportedBatchImagesOptions;
import com.azure.compute.batch.models.OSType;
import com.azure.core.http.rest.PagedIterable;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class AccountListNodeAgentSkusTests extends BatchClientTestBase {
    @Test
    @Disabled
    public void testAccountListNodeAgentSkusTests() {
        // method invocation
        PagedIterable<BatchSupportedImage> response
            = batchClient.listSupportedImages(new ListSupportedBatchImagesOptions());

        // response assertion
        Assertions.assertEquals(200, response.iterableByPage().iterator().next().getStatusCode());
        BatchSupportedImage firstItem = response.iterator().next();
        Assertions.assertNotNull(firstItem);
        // verify property "nodeAgentSkuId"
        Assertions.assertEquals("batch.node.centos 7", firstItem.getNodeAgentSkuId());
        // verify property "imageReference"
        ImageReference firstItemImageReference = firstItem.getImageReference();
        Assertions.assertNotNull(firstItemImageReference);
        Assertions.assertEquals("OpenLogic", firstItemImageReference.getPublisher());
        Assertions.assertEquals("CentOS", firstItemImageReference.getOffer());
        Assertions.assertEquals("7.2", firstItemImageReference.getSku());
        Assertions.assertEquals("latest", firstItemImageReference.getVersion());
        // verify property "osType"
        Assertions.assertEquals(OSType.LINUX, firstItem.getOsType());
        // verify property "capabilities"
        List<String> firstItemCapabilities = firstItem.getCapabilities();
        Assertions.assertEquals("DockerCompatible", firstItemCapabilities.iterator().next());
        // verify property "verificationType"
        Assertions.assertEquals(ImageVerificationType.VERIFIED, firstItem.getVerificationType());
    }
}
