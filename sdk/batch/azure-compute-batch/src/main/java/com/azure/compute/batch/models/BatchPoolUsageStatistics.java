// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.compute.batch.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.Duration;
import java.time.OffsetDateTime;

/**
 * Statistics related to Pool usage information.
 */
@Immutable
public final class BatchPoolUsageStatistics {

    /*
     * The start time of the time range covered by the statistics.
     */
    @Generated
    @JsonProperty(value = "startTime")
    private OffsetDateTime startTime;

    /*
     * The time at which the statistics were last updated. All statistics are limited to the range between startTime
     * and lastUpdateTime.
     */
    @Generated
    @JsonProperty(value = "lastUpdateTime")
    private OffsetDateTime lastUpdateTime;

    /*
     * The aggregated wall-clock time of the dedicated Compute Node cores being part of the Pool.
     */
    @Generated
    @JsonProperty(value = "dedicatedCoreTime")
    private Duration dedicatedCoreTime;

    /**
     * Creates an instance of BatchPoolUsageStatistics class.
     *
     * @param startTime the startTime value to set.
     * @param lastUpdateTime the lastUpdateTime value to set.
     * @param dedicatedCoreTime the dedicatedCoreTime value to set.
     */
    @Generated
    @JsonCreator
    private BatchPoolUsageStatistics(@JsonProperty(value = "startTime") OffsetDateTime startTime,
        @JsonProperty(value = "lastUpdateTime") OffsetDateTime lastUpdateTime,
        @JsonProperty(value = "dedicatedCoreTime") Duration dedicatedCoreTime) {
        this.startTime = startTime;
        this.lastUpdateTime = lastUpdateTime;
        this.dedicatedCoreTime = dedicatedCoreTime;
    }

    /**
     * Get the startTime property: The start time of the time range covered by the statistics.
     *
     * @return the startTime value.
     */
    @Generated
    public OffsetDateTime getStartTime() {
        return this.startTime;
    }

    /**
     * Get the lastUpdateTime property: The time at which the statistics were last updated. All statistics are limited
     * to the range between startTime and lastUpdateTime.
     *
     * @return the lastUpdateTime value.
     */
    @Generated
    public OffsetDateTime getLastUpdateTime() {
        return this.lastUpdateTime;
    }

    /**
     * Get the dedicatedCoreTime property: The aggregated wall-clock time of the dedicated Compute Node cores being
     * part of the Pool.
     *
     * @return the dedicatedCoreTime value.
     */
    @Generated
    public Duration getDedicatedCoreTime() {
        return this.dedicatedCoreTime;
    }
}
