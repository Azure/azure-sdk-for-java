// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.compute.batch.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;

/**
 * Optional parameters for Delete Task File operation.
 */
@Fluent
public final class DeleteBatchTaskFileOptions {

    private Boolean recursive;

    /**
     * Creates an instance of {@link DeleteBatchTaskFileOptions}.
     */
    public DeleteBatchTaskFileOptions() {
    }

    /**
     * Gets a value indicating whether to delete children of a directory. If the filePath parameter of deleteTaskFile
     * represents a directory
     * instead of a file, you can set recursive to true to delete the directory and all of the files and
     * subdirectories in it. If recursive is false then the directory must be empty or deletion will fail.
     *
     * @return A value indicating whether to delete children of a directory.
     */
    public Boolean isRecursive() {
        return recursive;
    }

    /**
     * Sets a value indicating whether to delete children of a directory. If the filePath parameter of deleteTaskFile
     * represents a directory
     * instead of a file, you can set recursive to true to delete the directory and all of the files and
     * subdirectories in it. If recursive is false then the directory must be empty or deletion will fail.
     *
     * @param recursive A value indicating whether to delete children of a directory.
     * @return The {@link DeleteBatchTaskFileOptions} object itself, allowing for method chaining.
     */
    public DeleteBatchTaskFileOptions setRecursive(Boolean recursive) {
        this.recursive = recursive;
        return this;
    }

    /*
     * The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the
     * value is larger than 30, the default will be used instead.".
     */
    @Generated
    private Integer timeOutInSeconds;

    /**
     * Get the timeOutInSeconds property: The maximum time that the server can spend processing the request, in seconds.
     * The default is 30 seconds. If the value is larger than 30, the default will be used instead.".
     *
     * @return the timeOutInSeconds value.
     */
    @Generated
    public Integer getTimeOutInSeconds() {
        return this.timeOutInSeconds;
    }

    /**
     * Set the timeOutInSeconds property: The maximum time that the server can spend processing the request, in seconds.
     * The default is 30 seconds. If the value is larger than 30, the default will be used instead.".
     *
     * @param timeOutInSeconds the timeOutInSeconds value to set.
     * @return the DeleteBatchTaskFileOptions object itself.
     */
    @Generated
    public DeleteBatchTaskFileOptions setTimeOutInSeconds(Integer timeOutInSeconds) {
        this.timeOutInSeconds = timeOutInSeconds;
        return this;
    }
}
