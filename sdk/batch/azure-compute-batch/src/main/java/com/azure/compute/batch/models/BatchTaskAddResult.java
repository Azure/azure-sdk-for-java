// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.compute.batch.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/**
 * Result for a single Task added as part of an add Task collection operation.
 */
@Immutable
public final class BatchTaskAddResult {

    /*
     * The status of the add Task request.
     */
    @Generated
    @JsonProperty(value = "status")
    private final BatchTaskAddStatus status;

    /*
     * The ID of the Task for which this is the result.
     */
    @Generated
    @JsonProperty(value = "taskId")
    private final String taskId;

    /*
     * The ETag of the Task, if the Task was successfully added. You can use this to detect whether the Task has changed between requests. In particular, you can be pass the ETag with an Update Task request to specify that your changes should take effect only if nobody else has modified the Job in the meantime.
     */
    @Generated
    @JsonProperty(value = "eTag")
    private String eTag;

    /*
     * The last modified time of the Task.
     */
    @Generated
    @JsonProperty(value = "lastModified")
    private OffsetDateTime lastModified;

    /*
     * The URL of the Task, if the Task was successfully added.
     */
    @Generated
    @JsonProperty(value = "location")
    private String location;

    /*
     * The error encountered while attempting to add the Task.
     */
    @Generated
    @JsonProperty(value = "error")
    private BatchError error;

    /**
     * Creates an instance of BatchTaskAddResult class.
     *
     * @param status the status value to set.
     * @param taskId the taskId value to set.
     */
    @Generated
    @JsonCreator
    private BatchTaskAddResult(@JsonProperty(value = "status") BatchTaskAddStatus status,
        @JsonProperty(value = "taskId") String taskId) {
        this.status = status;
        this.taskId = taskId;
    }

    /**
     * Get the status property: The status of the add Task request.
     *
     * @return the status value.
     */
    @Generated
    public BatchTaskAddStatus getStatus() {
        return this.status;
    }

    /**
     * Get the taskId property: The ID of the Task for which this is the result.
     *
     * @return the taskId value.
     */
    @Generated
    public String getTaskId() {
        return this.taskId;
    }

    /**
     * Get the eTag property: The ETag of the Task, if the Task was successfully added. You can use this to detect
     * whether the Task has changed between requests. In particular, you can be pass the ETag with an Update Task
     * request to specify that your changes should take effect only if nobody else has modified the Job in the meantime.
     *
     * @return the eTag value.
     */
    @Generated
    public String getETag() {
        return this.eTag;
    }

    /**
     * Get the lastModified property: The last modified time of the Task.
     *
     * @return the lastModified value.
     */
    @Generated
    public OffsetDateTime getLastModified() {
        return this.lastModified;
    }

    /**
     * Get the location property: The URL of the Task, if the Task was successfully added.
     *
     * @return the location value.
     */
    @Generated
    public String getLocation() {
        return this.location;
    }

    /**
     * Get the error property: The error encountered while attempting to add the Task.
     *
     * @return the error value.
     */
    @Generated
    public BatchError getError() {
        return this.error;
    }
}
