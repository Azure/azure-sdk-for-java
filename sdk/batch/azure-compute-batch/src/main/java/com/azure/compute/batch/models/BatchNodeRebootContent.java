// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.compute.batch.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Parameters for rebooting an Azure Batch Compute Node.
 */
@Fluent
public final class BatchNodeRebootContent implements JsonSerializable<BatchNodeRebootContent> {

    /**
     * Creates an instance of BatchNodeRebootContent class.
     */
    @Generated
    public BatchNodeRebootContent() {
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("nodeRebootOption",
            this.nodeRebootKind == null ? null : this.nodeRebootKind.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of BatchNodeRebootContent from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of BatchNodeRebootContent if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the BatchNodeRebootContent.
     */
    @Generated
    public static BatchNodeRebootContent fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            BatchNodeRebootContent deserializedBatchNodeRebootContent = new BatchNodeRebootContent();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("nodeRebootOption".equals(fieldName)) {
                    deserializedBatchNodeRebootContent.nodeRebootKind
                        = BatchNodeRebootKind.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }
            return deserializedBatchNodeRebootContent;
        });
    }

    /*
     * When to reboot the Compute Node and what to do with currently running Tasks. The default value is requeue.
     */
    @Generated
    private BatchNodeRebootKind nodeRebootKind;

    /**
     * Get the nodeRebootKind property: When to reboot the Compute Node and what to do with currently running Tasks. The
     * default value is requeue.
     *
     * @return the nodeRebootKind value.
     */
    @Generated
    public BatchNodeRebootKind getNodeRebootKind() {
        return this.nodeRebootKind;
    }

    /**
     * Set the nodeRebootKind property: When to reboot the Compute Node and what to do with currently running Tasks. The
     * default value is requeue.
     *
     * @param nodeRebootKind the nodeRebootKind value to set.
     * @return the BatchNodeRebootContent object itself.
     */
    @Generated
    public BatchNodeRebootContent setNodeRebootKind(BatchNodeRebootKind nodeRebootKind) {
        this.nodeRebootKind = nodeRebootKind;
        return this;
    }
}
