// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.compute.batch.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The settings for an authentication token that the Task can use to perform Batch
 * service operations.
 */
@Fluent
public final class AuthenticationTokenSettings implements JsonSerializable<AuthenticationTokenSettings> {

    /*
     * The Batch resources to which the token grants access. The authentication token grants access to a limited set of
     * Batch service operations. Currently the only supported value for the access property is 'job', which grants
     * access to all operations related to the Job which contains the Task.
     */
    @Generated
    private List<AccessScope> access;

    /**
     * Creates an instance of AuthenticationTokenSettings class.
     */
    @Generated
    public AuthenticationTokenSettings() {
    }

    /**
     * Get the access property: The Batch resources to which the token grants access. The authentication token grants
     * access to a limited set of Batch service operations. Currently the only supported value for the access property
     * is 'job', which grants access to all operations related to the Job which contains the Task.
     *
     * @return the access value.
     */
    @Generated
    public List<AccessScope> getAccess() {
        return this.access;
    }

    /**
     * Set the access property: The Batch resources to which the token grants access. The authentication token grants
     * access to a limited set of Batch service operations. Currently the only supported value for the access property
     * is 'job', which grants access to all operations related to the Job which contains the Task.
     *
     * @param access the access value to set.
     * @return the AuthenticationTokenSettings object itself.
     */
    @Generated
    public AuthenticationTokenSettings setAccess(List<AccessScope> access) {
        this.access = access;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("access", this.access,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AuthenticationTokenSettings from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of AuthenticationTokenSettings if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AuthenticationTokenSettings.
     */
    @Generated
    public static AuthenticationTokenSettings fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AuthenticationTokenSettings deserializedAuthenticationTokenSettings = new AuthenticationTokenSettings();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("access".equals(fieldName)) {
                    List<AccessScope> access = reader.readArray(reader1 -> AccessScope.fromString(reader1.getString()));
                    deserializedAuthenticationTokenSettings.access = access;
                } else {
                    reader.skipChildren();
                }
            }
            return deserializedAuthenticationTokenSettings;
        });
    }
}
