// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.compute.batch.models;

import com.azure.core.annotation.Generated;
import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * BatchNodeDeallocateOption enums.
 */
public final class BatchNodeDeallocateOption extends ExpandableStringEnum<BatchNodeDeallocateOption> {

    /**
     * Terminate running Task processes and requeue the Tasks. The Tasks will run again when a Compute Node is
     * available. Deallocate the Compute Node as soon as Tasks have been terminated.
     */
    @Generated
    public static final BatchNodeDeallocateOption REQUEUE = fromString("requeue");

    /**
     * Terminate running Tasks. The Tasks will be completed with failureInfo indicating that they were terminated, and
     * will not run again. Deallocate the Compute Node as soon as Tasks have been terminated.
     */
    @Generated
    public static final BatchNodeDeallocateOption TERMINATE = fromString("terminate");

    /**
     * Allow currently running Tasks to complete. Schedule no new Tasks while waiting. Deallocate the Compute Node when
     * all Tasks have completed.
     */
    @Generated
    public static final BatchNodeDeallocateOption TASK_COMPLETION = fromString("taskcompletion");

    /**
     * Allow currently running Tasks to complete, then wait for all Task data retention periods to expire. Schedule no
     * new Tasks while waiting. Deallocate the Compute Node when all Task retention periods have expired.
     */
    @Generated
    public static final BatchNodeDeallocateOption RETAINED_DATA = fromString("retaineddata");

    /**
     * Creates a new instance of BatchNodeDeallocateOption value.
     *
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Generated
    @Deprecated
    public BatchNodeDeallocateOption() {
    }

    /**
     * Creates or finds a BatchNodeDeallocateOption from its string representation.
     *
     * @param name a name to look for.
     * @return the corresponding BatchNodeDeallocateOption.
     */
    @Generated
    public static BatchNodeDeallocateOption fromString(String name) {
        return fromString(name, BatchNodeDeallocateOption.class);
    }

    /**
     * Gets known BatchNodeDeallocateOption values.
     *
     * @return known BatchNodeDeallocateOption values.
     */
    @Generated
    public static Collection<BatchNodeDeallocateOption> values() {
        return values(BatchNodeDeallocateOption.class);
    }
}
