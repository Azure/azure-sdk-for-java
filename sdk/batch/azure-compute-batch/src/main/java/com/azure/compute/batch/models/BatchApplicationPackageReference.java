// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.compute.batch.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * A reference to an Package to be deployed to Compute Nodes.
 */
@Fluent
public final class BatchApplicationPackageReference {

    /*
     * The ID of the application to deploy. When creating a pool, the package's application ID must be fully qualified
     * (/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{
     * accountName}/applications/{applicationName}).
     */
    @Generated
    @JsonProperty(value = "applicationId")
    private String applicationId;

    /*
     * The version of the application to deploy. If omitted, the default version is deployed. If this is omitted on a
     * Pool, and no default version is specified for this application, the request fails with the error code
     * InvalidApplicationPackageReferences and HTTP status code 409. If this is omitted on a Task, and no default
     * version is specified for this application, the Task fails with a pre-processing error.
     */
    @Generated
    @JsonProperty(value = "version")
    private String version;

    /**
     * Creates an instance of BatchApplicationPackageReference class.
     *
     * @param applicationId the applicationId value to set.
     */
    @Generated
    @JsonCreator
    public BatchApplicationPackageReference(@JsonProperty(value = "applicationId") String applicationId) {
        this.applicationId = applicationId;
    }

    /**
     * Get the applicationId property: The ID of the application to deploy. When creating a pool, the package's
     * application ID must be fully qualified
     * (/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/applications/{applicationName}).
     *
     * @return the applicationId value.
     */
    @Generated
    public String getApplicationId() {
        return this.applicationId;
    }

    /**
     * Get the version property: The version of the application to deploy. If omitted, the default version is deployed.
     * If this is omitted on a Pool, and no default version is specified for this application, the request fails with
     * the error code InvalidApplicationPackageReferences and HTTP status code 409. If this is omitted on a Task, and
     * no default version is specified for this application, the Task fails with a pre-processing error.
     *
     * @return the version value.
     */
    @Generated
    public String getVersion() {
        return this.version;
    }

    /**
     * Set the version property: The version of the application to deploy. If omitted, the default version is deployed.
     * If this is omitted on a Pool, and no default version is specified for this application, the request fails with
     * the error code InvalidApplicationPackageReferences and HTTP status code 409. If this is omitted on a Task, and
     * no default version is specified for this application, the Task fails with a pre-processing error.
     *
     * @param version the version value to set.
     * @return the BatchApplicationPackageReference object itself.
     */
    @Generated
    public BatchApplicationPackageReference setVersion(String version) {
        this.version = version;
        return this;
    }
}
