// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.compute.batch.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;

/**
 * Optional parameters for Delete Job operation.
 */
@Fluent
public final class BatchJobDeleteOptions {

    /*
     * The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. If the
     * value is larger than 30, the default will be used instead.".
     */
    @Generated
    private Integer timeOutInSeconds;

    /*
     * If true, the server will delete the Job even if the corresponding nodes have not fully processed the deletion.
     * The default value is false.
     */
    @Generated
    private Boolean force;

    /**
     * Creates an instance of BatchJobDeleteOptions class.
     */
    @Generated
    public BatchJobDeleteOptions() {
    }

    /**
     * Get the timeOutInSeconds property: The maximum time that the server can spend processing the request, in seconds.
     * The default is 30 seconds. If the value is larger than 30, the default will be used instead.".
     *
     * @return the timeOutInSeconds value.
     */
    @Generated
    public Integer getTimeOutInSeconds() {
        return this.timeOutInSeconds;
    }

    /**
     * Set the timeOutInSeconds property: The maximum time that the server can spend processing the request, in seconds.
     * The default is 30 seconds. If the value is larger than 30, the default will be used instead.".
     *
     * @param timeOutInSeconds the timeOutInSeconds value to set.
     * @return the BatchJobDeleteOptions object itself.
     */
    @Generated
    public BatchJobDeleteOptions setTimeOutInSeconds(Integer timeOutInSeconds) {
        this.timeOutInSeconds = timeOutInSeconds;
        return this;
    }

    /**
     * Get the force property: If true, the server will delete the Job even if the corresponding nodes have not fully
     * processed the deletion. The default value is false.
     *
     * @return the force value.
     */
    @Generated
    public Boolean isForce() {
        return this.force;
    }

    /**
     * Set the force property: If true, the server will delete the Job even if the corresponding nodes have not fully
     * processed the deletion. The default value is false.
     *
     * @param force the force value to set.
     * @return the BatchJobDeleteOptions object itself.
     */
    @Generated
    public BatchJobDeleteOptions setForce(Boolean force) {
        this.force = force;
        return this;
    }
}
