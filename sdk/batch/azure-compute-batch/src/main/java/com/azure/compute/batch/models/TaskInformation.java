// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.compute.batch.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Information about a Task running on a Compute Node. */
@Immutable
public final class TaskInformation {

    /*
     * The URL of the Task.
     */
    @Generated
    @JsonProperty(value = "taskUrl")
    private String taskUrl;

    /*
     * The ID of the Job to which the Task belongs.
     */
    @Generated
    @JsonProperty(value = "jobId")
    private String jobId;

    /*
     * The ID of the Task.
     */
    @Generated
    @JsonProperty(value = "taskId")
    private String taskId;

    /*
     * The ID of the subtask if the Task is a multi-instance Task.
     */
    @Generated
    @JsonProperty(value = "subtaskId")
    private Integer subtaskId;

    /*
     * The current state of the Task.
     */
    @Generated
    @JsonProperty(value = "taskState")
    private TaskState taskState;

    /*
     * Information about the execution of the Task.
     */
    @Generated
    @JsonProperty(value = "executionInfo")
    private TaskExecutionInformation executionInfo;

    /**
     * Creates an instance of TaskInformation class.
     *
     * @param taskState the taskState value to set.
     */
    @Generated
    @JsonCreator
    private TaskInformation(@JsonProperty(value = "taskState") TaskState taskState) {
        this.taskState = taskState;
    }

    /**
     * Get the taskUrl property: The URL of the Task.
     *
     * @return the taskUrl value.
     */
    @Generated
    public String getTaskUrl() {
        return this.taskUrl;
    }

    /**
     * Get the jobId property: The ID of the Job to which the Task belongs.
     *
     * @return the jobId value.
     */
    @Generated
    public String getJobId() {
        return this.jobId;
    }

    /**
     * Get the taskId property: The ID of the Task.
     *
     * @return the taskId value.
     */
    @Generated
    public String getTaskId() {
        return this.taskId;
    }

    /**
     * Get the subtaskId property: The ID of the subtask if the Task is a multi-instance Task.
     *
     * @return the subtaskId value.
     */
    @Generated
    public Integer getSubtaskId() {
        return this.subtaskId;
    }

    /**
     * Get the taskState property: The current state of the Task.
     *
     * @return the taskState value.
     */
    @Generated
    public TaskState getTaskState() {
        return this.taskState;
    }

    /**
     * Get the executionInfo property: Information about the execution of the Task.
     *
     * @return the executionInfo value.
     */
    @Generated
    public TaskExecutionInformation getExecutionInfo() {
        return this.executionInfo;
    }
}
