// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.compute.batch.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Info about the current state of the virtual machine.
 */
@Immutable
public final class VirtualMachineInfo implements JsonSerializable<VirtualMachineInfo> {

    /*
     * The reference to the Azure Virtual Machine's Marketplace Image.
     */
    @Generated
    private ImageReference imageReference;

    /**
     * Creates an instance of VirtualMachineInfo class.
     */
    @Generated
    private VirtualMachineInfo() {
    }

    /**
     * Get the imageReference property: The reference to the Azure Virtual Machine's Marketplace Image.
     *
     * @return the imageReference value.
     */
    @Generated
    public ImageReference getImageReference() {
        return this.imageReference;
    }

    /*
     * The resource ID of the Compute Node's current Virtual Machine Scale Set VM. Only defined if the Batch Account was
     * created with its poolAllocationMode property set to 'UserSubscription'.
     */
    @Generated
    private String scaleSetVmResourceId;

    /**
     * Get the scaleSetVmResourceId property: The resource ID of the Compute Node's current Virtual Machine Scale Set
     * VM. Only defined if the Batch Account was created with its poolAllocationMode property set to 'UserSubscription'.
     *
     * @return the scaleSetVmResourceId value.
     */
    @Generated
    public String getScaleSetVmResourceId() {
        return this.scaleSetVmResourceId;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("imageReference", this.imageReference);
        jsonWriter.writeStringField("scaleSetVmResourceId", this.scaleSetVmResourceId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of VirtualMachineInfo from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of VirtualMachineInfo if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the VirtualMachineInfo.
     */
    @Generated
    public static VirtualMachineInfo fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            VirtualMachineInfo deserializedVirtualMachineInfo = new VirtualMachineInfo();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("imageReference".equals(fieldName)) {
                    deserializedVirtualMachineInfo.imageReference = ImageReference.fromJson(reader);
                } else if ("scaleSetVmResourceId".equals(fieldName)) {
                    deserializedVirtualMachineInfo.scaleSetVmResourceId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            return deserializedVirtualMachineInfo;
        });
    }
}
