// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.compute.batch.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Contains information about an application in an Azure Batch Account.
 */
@Immutable
public final class BatchApplication implements JsonSerializable<BatchApplication> {

    /*
     * A string that uniquely identifies the application within the Account.
     */
    @Generated
    private final String id;

    /*
     * The display name for the application.
     */
    @Generated
    private final String displayName;

    /*
     * The list of available versions of the application.
     */
    @Generated
    private final List<String> versions;

    /**
     * Creates an instance of BatchApplication class.
     *
     * @param id the id value to set.
     * @param displayName the displayName value to set.
     * @param versions the versions value to set.
     */
    @Generated
    private BatchApplication(String id, String displayName, List<String> versions) {
        this.id = id;
        this.displayName = displayName;
        this.versions = versions;
    }

    /**
     * Get the id property: A string that uniquely identifies the application within the Account.
     *
     * @return the id value.
     */
    @Generated
    public String getId() {
        return this.id;
    }

    /**
     * Get the displayName property: The display name for the application.
     *
     * @return the displayName value.
     */
    @Generated
    public String getDisplayName() {
        return this.displayName;
    }

    /**
     * Get the versions property: The list of available versions of the application.
     *
     * @return the versions value.
     */
    @Generated
    public List<String> getVersions() {
        return this.versions;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("id", this.id);
        jsonWriter.writeStringField("displayName", this.displayName);
        jsonWriter.writeArrayField("versions", this.versions, (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of BatchApplication from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of BatchApplication if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the BatchApplication.
     */
    @Generated
    public static BatchApplication fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String id = null;
            String displayName = null;
            List<String> versions = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("id".equals(fieldName)) {
                    id = reader.getString();
                } else if ("displayName".equals(fieldName)) {
                    displayName = reader.getString();
                } else if ("versions".equals(fieldName)) {
                    versions = reader.readArray(reader1 -> reader1.getString());
                } else {
                    reader.skipChildren();
                }
            }
            return new BatchApplication(id, displayName, versions);
        });
    }
}
