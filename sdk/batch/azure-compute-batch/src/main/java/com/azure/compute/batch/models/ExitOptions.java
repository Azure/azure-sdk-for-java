// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.compute.batch.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Specifies how the Batch service responds to a particular exit condition. */
@Fluent
public final class ExitOptions {
    /*
     * The default is none for exit code 0 and terminate for all other exit
     * conditions. If the Job's onTaskFailed property is noaction, then specifying
     * this property returns an error and the add Task request fails with an invalid
     * property value error; if you are calling the REST API directly, the HTTP status
     * code is 400 (Bad Request).
     */
    @JsonProperty(value = "jobAction")
    private JobAction jobAction;

    /*
     * Possible values are 'satisfy' (allowing dependent tasks to progress) and
     * 'block' (dependent tasks continue to wait). Batch does not yet support
     * cancellation of dependent tasks.
     */
    @JsonProperty(value = "dependencyAction")
    private DependencyAction dependencyAction;

    /** Creates an instance of ExitOptions class. */
    public ExitOptions() {}

    /**
     * Get the jobAction property: The default is none for exit code 0 and terminate for all other exit conditions. If
     * the Job's onTaskFailed property is noaction, then specifying this property returns an error and the add Task
     * request fails with an invalid property value error; if you are calling the REST API directly, the HTTP status
     * code is 400 (Bad Request).
     *
     * @return the jobAction value.
     */
    public JobAction getJobAction() {
        return this.jobAction;
    }

    /**
     * Set the jobAction property: The default is none for exit code 0 and terminate for all other exit conditions. If
     * the Job's onTaskFailed property is noaction, then specifying this property returns an error and the add Task
     * request fails with an invalid property value error; if you are calling the REST API directly, the HTTP status
     * code is 400 (Bad Request).
     *
     * @param jobAction the jobAction value to set.
     * @return the ExitOptions object itself.
     */
    public ExitOptions setJobAction(JobAction jobAction) {
        this.jobAction = jobAction;
        return this;
    }

    /**
     * Get the dependencyAction property: Possible values are 'satisfy' (allowing dependent tasks to progress) and
     * 'block' (dependent tasks continue to wait). Batch does not yet support cancellation of dependent tasks.
     *
     * @return the dependencyAction value.
     */
    public DependencyAction getDependencyAction() {
        return this.dependencyAction;
    }

    /**
     * Set the dependencyAction property: Possible values are 'satisfy' (allowing dependent tasks to progress) and
     * 'block' (dependent tasks continue to wait). Batch does not yet support cancellation of dependent tasks.
     *
     * @param dependencyAction the dependencyAction value to set.
     * @return the ExitOptions object itself.
     */
    public ExitOptions setDependencyAction(DependencyAction dependencyAction) {
        this.dependencyAction = dependencyAction;
        return this;
    }
}
