// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.compute.batch.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Specifies a file upload destination within an Azure blob storage container. */
@Fluent
public final class OutputFileBlobContainerDestination {
    /*
     * If filePattern refers to a specific file (i.e. contains no wildcards), then
     * path is the name of the blob to which to upload that file. If filePattern
     * contains one or more wildcards (and therefore may match multiple files), then
     * path is the name of the blob virtual directory (which is prepended to each blob
     * name) to which to upload the file(s). If omitted, file(s) are uploaded to the
     * root of the container with a blob name matching their file name.
     */
    @JsonProperty(value = "path")
    private String path;

    /*
     * If not using a managed identity, the URL must include a Shared Access Signature
     * (SAS) granting write permissions to the container.
     */
    @JsonProperty(value = "containerUrl", required = true)
    private String containerUrl;

    /*
     * The identity must have write access to the Azure Blob Storage container
     */
    @JsonProperty(value = "identityReference")
    private ComputeNodeIdentityReference identityReference;

    /*
     * These headers will be specified when uploading files to Azure Storage. Official
     * document on allowed headers when uploading blobs:
     * https://docs.microsoft.com/en-us/rest/api/storageservices/put-blob#request-headers-all-blob-types
     */
    @JsonProperty(value = "uploadHeaders")
    private List<HttpHeader> uploadHeaders;

    /**
     * Creates an instance of OutputFileBlobContainerDestination class.
     *
     * @param containerUrl the containerUrl value to set.
     */
    @JsonCreator
    public OutputFileBlobContainerDestination(
            @JsonProperty(value = "containerUrl", required = true) String containerUrl) {
        this.containerUrl = containerUrl;
    }

    /**
     * Get the path property: If filePattern refers to a specific file (i.e. contains no wildcards), then path is the
     * name of the blob to which to upload that file. If filePattern contains one or more wildcards (and therefore may
     * match multiple files), then path is the name of the blob virtual directory (which is prepended to each blob name)
     * to which to upload the file(s). If omitted, file(s) are uploaded to the root of the container with a blob name
     * matching their file name.
     *
     * @return the path value.
     */
    public String getPath() {
        return this.path;
    }

    /**
     * Set the path property: If filePattern refers to a specific file (i.e. contains no wildcards), then path is the
     * name of the blob to which to upload that file. If filePattern contains one or more wildcards (and therefore may
     * match multiple files), then path is the name of the blob virtual directory (which is prepended to each blob name)
     * to which to upload the file(s). If omitted, file(s) are uploaded to the root of the container with a blob name
     * matching their file name.
     *
     * @param path the path value to set.
     * @return the OutputFileBlobContainerDestination object itself.
     */
    public OutputFileBlobContainerDestination setPath(String path) {
        this.path = path;
        return this;
    }

    /**
     * Get the containerUrl property: If not using a managed identity, the URL must include a Shared Access Signature
     * (SAS) granting write permissions to the container.
     *
     * @return the containerUrl value.
     */
    public String getContainerUrl() {
        return this.containerUrl;
    }

    /**
     * Get the identityReference property: The identity must have write access to the Azure Blob Storage container.
     *
     * @return the identityReference value.
     */
    public ComputeNodeIdentityReference getIdentityReference() {
        return this.identityReference;
    }

    /**
     * Set the identityReference property: The identity must have write access to the Azure Blob Storage container.
     *
     * @param identityReference the identityReference value to set.
     * @return the OutputFileBlobContainerDestination object itself.
     */
    public OutputFileBlobContainerDestination setIdentityReference(ComputeNodeIdentityReference identityReference) {
        this.identityReference = identityReference;
        return this;
    }

    /**
     * Get the uploadHeaders property: These headers will be specified when uploading files to Azure Storage. Official
     * document on allowed headers when uploading blobs:
     * https://docs.microsoft.com/en-us/rest/api/storageservices/put-blob#request-headers-all-blob-types.
     *
     * @return the uploadHeaders value.
     */
    public List<HttpHeader> getUploadHeaders() {
        return this.uploadHeaders;
    }

    /**
     * Set the uploadHeaders property: These headers will be specified when uploading files to Azure Storage. Official
     * document on allowed headers when uploading blobs:
     * https://docs.microsoft.com/en-us/rest/api/storageservices/put-blob#request-headers-all-blob-types.
     *
     * @param uploadHeaders the uploadHeaders value to set.
     * @return the OutputFileBlobContainerDestination object itself.
     */
    public OutputFileBlobContainerDestination setUploadHeaders(List<HttpHeader> uploadHeaders) {
        this.uploadHeaders = uploadHeaders;
        return this;
    }
}
