// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.compute.batch.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/**
 * The Azure Batch service log files upload parameters for a Compute Node.
 */
@Fluent
public final class UploadBatchServiceLogsParameters {

    /*
     * The URL of the container within Azure Blob Storage to which to upload the Batch Service log file(s). If a user
     * assigned managed identity is not being used, the URL must include a Shared Access Signature (SAS) granting write
     * permissions to the container. The SAS duration must allow enough time for the upload to finish. The start time
     * for SAS is optional and recommended to not be specified.
     */
    @Generated
    @JsonProperty(value = "containerUrl")
    private String containerUrl;

    /*
     * The start of the time range from which to upload Batch Service log file(s). Any log file containing a log
     * message in the time range will be uploaded. This means that the operation might retrieve more logs than have
     * been requested since the entire log file is always uploaded, but the operation should not retrieve fewer logs
     * than have been requested.
     */
    @Generated
    @JsonProperty(value = "startTime")
    private OffsetDateTime startTime;

    /*
     * The end of the time range from which to upload Batch Service log file(s). Any log file containing a log message
     * in the time range will be uploaded. This means that the operation might retrieve more logs than have been
     * requested since the entire log file is always uploaded, but the operation should not retrieve fewer logs than
     * have been requested. If omitted, the default is to upload all logs available after the startTime.
     */
    @Generated
    @JsonProperty(value = "endTime")
    private OffsetDateTime endTime;

    /*
     * The reference to the user assigned identity to use to access Azure Blob Storage specified by containerUrl. The
     * identity must have write access to the Azure Blob Storage container.
     */
    @Generated
    @JsonProperty(value = "identityReference")
    private BatchNodeIdentityReference identityReference;

    /**
     * Creates an instance of UploadBatchServiceLogsParameters class.
     *
     * @param containerUrl the containerUrl value to set.
     * @param startTime the startTime value to set.
     */
    @Generated
    @JsonCreator
    public UploadBatchServiceLogsParameters(@JsonProperty(value = "containerUrl") String containerUrl,
        @JsonProperty(value = "startTime") OffsetDateTime startTime) {
        this.containerUrl = containerUrl;
        this.startTime = startTime;
    }

    /**
     * Get the containerUrl property: The URL of the container within Azure Blob Storage to which to upload the Batch
     * Service log file(s). If a user assigned managed identity is not being used, the URL must include a Shared Access
     * Signature (SAS) granting write permissions to the container. The SAS duration must allow enough time for the
     * upload to finish. The start time for SAS is optional and recommended to not be specified.
     *
     * @return the containerUrl value.
     */
    @Generated
    public String getContainerUrl() {
        return this.containerUrl;
    }

    /**
     * Get the startTime property: The start of the time range from which to upload Batch Service log file(s). Any log
     * file containing a log message in the time range will be uploaded. This means that the operation might retrieve
     * more logs than have been requested since the entire log file is always uploaded, but the operation should not
     * retrieve fewer logs than have been requested.
     *
     * @return the startTime value.
     */
    @Generated
    public OffsetDateTime getStartTime() {
        return this.startTime;
    }

    /**
     * Get the endTime property: The end of the time range from which to upload Batch Service log file(s). Any log file
     * containing a log message in the time range will be uploaded. This means that the operation might retrieve more
     * logs than have been requested since the entire log file is always uploaded, but the operation should not
     * retrieve fewer logs than have been requested. If omitted, the default is to upload all logs available after the
     * startTime.
     *
     * @return the endTime value.
     */
    @Generated
    public OffsetDateTime getEndTime() {
        return this.endTime;
    }

    /**
     * Set the endTime property: The end of the time range from which to upload Batch Service log file(s). Any log file
     * containing a log message in the time range will be uploaded. This means that the operation might retrieve more
     * logs than have been requested since the entire log file is always uploaded, but the operation should not
     * retrieve fewer logs than have been requested. If omitted, the default is to upload all logs available after the
     * startTime.
     *
     * @param endTime the endTime value to set.
     * @return the UploadBatchServiceLogsParameters object itself.
     */
    @Generated
    public UploadBatchServiceLogsParameters setEndTime(OffsetDateTime endTime) {
        this.endTime = endTime;
        return this;
    }

    /**
     * Get the identityReference property: The reference to the user assigned identity to use to access Azure Blob
     * Storage specified by containerUrl. The identity must have write access to the Azure Blob Storage container.
     *
     * @return the identityReference value.
     */
    @Generated
    public BatchNodeIdentityReference getIdentityReference() {
        return this.identityReference;
    }

    /**
     * Set the identityReference property: The reference to the user assigned identity to use to access Azure Blob
     * Storage specified by containerUrl. The identity must have write access to the Azure Blob Storage container.
     *
     * @param identityReference the identityReference value to set.
     * @return the UploadBatchServiceLogsParameters object itself.
     */
    @Generated
    public UploadBatchServiceLogsParameters setIdentityReference(BatchNodeIdentityReference identityReference) {
        this.identityReference = identityReference;
        return this;
    }
}
