// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.compute.batch.models;

import com.azure.core.annotation.Generated;
import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * BatchJobState enums.
 */
public final class BatchJobState extends ExpandableStringEnum<BatchJobState> {

    /**
     * The Job is available to have Tasks scheduled.
     */
    @Generated
    public static final BatchJobState ACTIVE = fromString("active");

    /**
     * A user has requested that the Job be disabled, but the disable operation is still in progress (for example,
     * waiting for Tasks to terminate).
     */
    @Generated
    public static final BatchJobState DISABLING = fromString("disabling");

    /**
     * A user has disabled the Job. No Tasks are running, and no new Tasks will be scheduled.
     */
    @Generated
    public static final BatchJobState DISABLED = fromString("disabled");

    /**
     * A user has requested that the Job be enabled, but the enable operation is still in progress.
     */
    @Generated
    public static final BatchJobState ENABLING = fromString("enabling");

    /**
     * The Job is about to complete, either because a Job Manager Task has completed or because the user has terminated
     * the Job, but the terminate operation is still in progress (for example, because Job Release Tasks are running).
     */
    @Generated
    public static final BatchJobState TERMINATING = fromString("terminating");

    /**
     * All Tasks have terminated, and the system will not accept any more Tasks or any further changes to the Job.
     */
    @Generated
    public static final BatchJobState COMPLETED = fromString("completed");

    /**
     * A user has requested that the Job be deleted, but the delete operation is still in progress (for example, because
     * the system is still terminating running Tasks).
     */
    @Generated
    public static final BatchJobState DELETING = fromString("deleting");

    /**
     * Creates a new instance of BatchJobState value.
     *
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Generated
    @Deprecated
    public BatchJobState() {
    }

    /**
     * Creates or finds a BatchJobState from its string representation.
     *
     * @param name a name to look for.
     * @return the corresponding BatchJobState.
     */
    @Generated
    public static BatchJobState fromString(String name) {
        return fromString(name, BatchJobState.class);
    }

    /**
     * Gets known BatchJobState values.
     *
     * @return known BatchJobState values.
     */
    @Generated
    public static Collection<BatchJobState> values() {
        return values(BatchJobState.class);
    }
}
