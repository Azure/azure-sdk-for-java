// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.compute.batch.models;

import com.azure.core.util.ExpandableStringEnum;
import com.fasterxml.jackson.annotation.JsonCreator;
import java.util.Collection;

/** Defines values for ComputeNodeState. */
public final class ComputeNodeState extends ExpandableStringEnum<ComputeNodeState> {
    /** The Compute Node is not currently running a Task. */
    public static final ComputeNodeState IDLE = fromString("idle");

    /** The Compute Node is rebooting. */
    public static final ComputeNodeState REBOOTING = fromString("rebooting");

    /** The Compute Node is reimaging. */
    public static final ComputeNodeState REIMAGING = fromString("reimaging");

    /** The Compute Node is running one or more Tasks (other than a StartTask). */
    public static final ComputeNodeState RUNNING = fromString("running");

    /** The Compute Node cannot be used for Task execution due to errors. */
    public static final ComputeNodeState UNUSABLE = fromString("unusable");

    /**
     * The Batch service has obtained the underlying virtual machine from Azure Compute, but it has not yet started to
     * join the Pool.
     */
    public static final ComputeNodeState CREATING = fromString("creating");

    /** The Batch service is starting on the underlying virtual machine. */
    public static final ComputeNodeState STARTING = fromString("starting");

    /**
     * The StartTask has started running on the Compute Node, but waitForSuccess is set and the StartTask has not yet
     * completed.
     */
    public static final ComputeNodeState WAITING_FOR_START_TASK = fromString("waitingforstarttask");

    /**
     * The StartTask has failed on the Compute Node (and exhausted all retries), and waitForSuccess is set. The Compute
     * Node is not usable for running Tasks.
     */
    public static final ComputeNodeState START_TASK_FAILED = fromString("starttaskfailed");

    /** The Batch service has lost contact with the Compute Node, and does not know its true state. */
    public static final ComputeNodeState UNKNOWN = fromString("unknown");

    /**
     * The Compute Node is leaving the Pool, either because the user explicitly removed it or because the Pool is
     * resizing or autoscaling down.
     */
    public static final ComputeNodeState LEAVING_POOL = fromString("leavingpool");

    /**
     * The Compute Node is not currently running a Task, and scheduling of new Tasks to the Compute Node is disabled.
     */
    public static final ComputeNodeState OFFLINE = fromString("offline");

    /**
     * The Spot/Low-priority Compute Node has been preempted. Tasks which were running on the Compute Node when it was
     * preempted will be rescheduled when another Compute Node becomes available.
     */
    public static final ComputeNodeState PREEMPTED = fromString("preempted");

    /**
     * Creates a new instance of ComputeNodeState value.
     *
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public ComputeNodeState() {}

    /**
     * Creates or finds a ComputeNodeState from its string representation.
     *
     * @param name a name to look for.
     * @return the corresponding ComputeNodeState.
     */
    @JsonCreator
    public static ComputeNodeState fromString(String name) {
        return fromString(name, ComputeNodeState.class);
    }

    /**
     * Gets known ComputeNodeState values.
     *
     * @return known ComputeNodeState values.
     */
    public static Collection<ComputeNodeState> values() {
        return values(ComputeNodeState.class);
    }
}
