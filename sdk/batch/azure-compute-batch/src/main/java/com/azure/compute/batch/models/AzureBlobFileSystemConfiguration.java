// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.compute.batch.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Information used to connect to an Azure Storage Container using Blobfuse.
 */
@Fluent
public final class AzureBlobFileSystemConfiguration implements JsonSerializable<AzureBlobFileSystemConfiguration> {

    /*
     * The Azure Storage Account name.
     */
    @Generated
    private final String accountName;

    /*
     * The Azure Blob Storage Container name.
     */
    @Generated
    private final String containerName;

    /*
     * The Azure Storage Account key. This property is mutually exclusive with both sasKey and identity; exactly one
     * must be specified.
     */
    @Generated
    private String accountKey;

    /*
     * The Azure Storage SAS token. This property is mutually exclusive with both accountKey and identity; exactly one
     * must be specified.
     */
    @Generated
    private String sasKey;

    /*
     * Additional command line options to pass to the mount command. These are 'net use' options in Windows and 'mount'
     * options in Linux.
     */
    @Generated
    private String blobfuseOptions;

    /*
     * The relative path on the compute node where the file system will be mounted. All file systems are mounted
     * relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable.
     */
    @Generated
    private final String relativeMountPath;

    /*
     * The reference to the user assigned identity to use to access containerName. This property is mutually exclusive
     * with both accountKey and sasKey; exactly one must be specified.
     */
    @Generated
    private BatchNodeIdentityReference identityReference;

    /**
     * Creates an instance of AzureBlobFileSystemConfiguration class.
     *
     * @param accountName the accountName value to set.
     * @param containerName the containerName value to set.
     * @param relativeMountPath the relativeMountPath value to set.
     */
    @Generated
    public AzureBlobFileSystemConfiguration(String accountName, String containerName, String relativeMountPath) {
        this.accountName = accountName;
        this.containerName = containerName;
        this.relativeMountPath = relativeMountPath;
    }

    /**
     * Get the accountName property: The Azure Storage Account name.
     *
     * @return the accountName value.
     */
    @Generated
    public String getAccountName() {
        return this.accountName;
    }

    /**
     * Get the containerName property: The Azure Blob Storage Container name.
     *
     * @return the containerName value.
     */
    @Generated
    public String getContainerName() {
        return this.containerName;
    }

    /**
     * Get the accountKey property: The Azure Storage Account key. This property is mutually exclusive with both sasKey
     * and identity; exactly one must be specified.
     *
     * @return the accountKey value.
     */
    @Generated
    public String getAccountKey() {
        return this.accountKey;
    }

    /**
     * Set the accountKey property: The Azure Storage Account key. This property is mutually exclusive with both sasKey
     * and identity; exactly one must be specified.
     *
     * @param accountKey the accountKey value to set.
     * @return the AzureBlobFileSystemConfiguration object itself.
     */
    @Generated
    public AzureBlobFileSystemConfiguration setAccountKey(String accountKey) {
        this.accountKey = accountKey;
        return this;
    }

    /**
     * Get the sasKey property: The Azure Storage SAS token. This property is mutually exclusive with both accountKey
     * and identity; exactly one must be specified.
     *
     * @return the sasKey value.
     */
    @Generated
    public String getSasKey() {
        return this.sasKey;
    }

    /**
     * Set the sasKey property: The Azure Storage SAS token. This property is mutually exclusive with both accountKey
     * and identity; exactly one must be specified.
     *
     * @param sasKey the sasKey value to set.
     * @return the AzureBlobFileSystemConfiguration object itself.
     */
    @Generated
    public AzureBlobFileSystemConfiguration setSasKey(String sasKey) {
        this.sasKey = sasKey;
        return this;
    }

    /**
     * Get the blobfuseOptions property: Additional command line options to pass to the mount command. These are 'net
     * use' options in Windows and 'mount' options in Linux.
     *
     * @return the blobfuseOptions value.
     */
    @Generated
    public String getBlobfuseOptions() {
        return this.blobfuseOptions;
    }

    /**
     * Set the blobfuseOptions property: Additional command line options to pass to the mount command. These are 'net
     * use' options in Windows and 'mount' options in Linux.
     *
     * @param blobfuseOptions the blobfuseOptions value to set.
     * @return the AzureBlobFileSystemConfiguration object itself.
     */
    @Generated
    public AzureBlobFileSystemConfiguration setBlobfuseOptions(String blobfuseOptions) {
        this.blobfuseOptions = blobfuseOptions;
        return this;
    }

    /**
     * Get the relativeMountPath property: The relative path on the compute node where the file system will be mounted.
     * All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR
     * environment variable.
     *
     * @return the relativeMountPath value.
     */
    @Generated
    public String getRelativeMountPath() {
        return this.relativeMountPath;
    }

    /**
     * Get the identityReference property: The reference to the user assigned identity to use to access containerName.
     * This property is mutually exclusive with both accountKey and sasKey; exactly one must be specified.
     *
     * @return the identityReference value.
     */
    @Generated
    public BatchNodeIdentityReference getIdentityReference() {
        return this.identityReference;
    }

    /**
     * Set the identityReference property: The reference to the user assigned identity to use to access containerName.
     * This property is mutually exclusive with both accountKey and sasKey; exactly one must be specified.
     *
     * @param identityReference the identityReference value to set.
     * @return the AzureBlobFileSystemConfiguration object itself.
     */
    @Generated
    public AzureBlobFileSystemConfiguration setIdentityReference(BatchNodeIdentityReference identityReference) {
        this.identityReference = identityReference;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("accountName", this.accountName);
        jsonWriter.writeStringField("containerName", this.containerName);
        jsonWriter.writeStringField("relativeMountPath", this.relativeMountPath);
        jsonWriter.writeStringField("accountKey", this.accountKey);
        jsonWriter.writeStringField("sasKey", this.sasKey);
        jsonWriter.writeStringField("blobfuseOptions", this.blobfuseOptions);
        jsonWriter.writeJsonField("identityReference", this.identityReference);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureBlobFileSystemConfiguration from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureBlobFileSystemConfiguration if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AzureBlobFileSystemConfiguration.
     */
    @Generated
    public static AzureBlobFileSystemConfiguration fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String accountName = null;
            String containerName = null;
            String relativeMountPath = null;
            String accountKey = null;
            String sasKey = null;
            String blobfuseOptions = null;
            BatchNodeIdentityReference identityReference = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("accountName".equals(fieldName)) {
                    accountName = reader.getString();
                } else if ("containerName".equals(fieldName)) {
                    containerName = reader.getString();
                } else if ("relativeMountPath".equals(fieldName)) {
                    relativeMountPath = reader.getString();
                } else if ("accountKey".equals(fieldName)) {
                    accountKey = reader.getString();
                } else if ("sasKey".equals(fieldName)) {
                    sasKey = reader.getString();
                } else if ("blobfuseOptions".equals(fieldName)) {
                    blobfuseOptions = reader.getString();
                } else if ("identityReference".equals(fieldName)) {
                    identityReference = BatchNodeIdentityReference.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }
            AzureBlobFileSystemConfiguration deserializedAzureBlobFileSystemConfiguration
                = new AzureBlobFileSystemConfiguration(accountName, containerName, relativeMountPath);
            deserializedAzureBlobFileSystemConfiguration.accountKey = accountKey;
            deserializedAzureBlobFileSystemConfiguration.sasKey = sasKey;
            deserializedAzureBlobFileSystemConfiguration.blobfuseOptions = blobfuseOptions;
            deserializedAzureBlobFileSystemConfiguration.identityReference = identityReference;
            return deserializedAzureBlobFileSystemConfiguration;
        });
    }
}
