// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.compute.batch.implementation;

import com.azure.compute.batch.BatchServiceVersion;
import com.azure.core.http.HttpPipeline;
import com.azure.core.http.HttpPipelineBuilder;
import com.azure.core.http.policy.CookiePolicy;
import com.azure.core.http.policy.RetryPolicy;
import com.azure.core.http.policy.UserAgentPolicy;
import com.azure.core.util.serializer.JacksonAdapter;
import com.azure.core.util.serializer.SerializerAdapter;

/** Initializes a new instance of the BatchServiceClient type. */
public final class BatchServiceClientImpl {
    /** Server parameter. */
    private final String endpoint;

    /**
     * Gets Server parameter.
     *
     * @return the endpoint value.
     */
    public String getEndpoint() {
        return this.endpoint;
    }

    /** Service version. */
    private final BatchServiceVersion serviceVersion;

    /**
     * Gets Service version.
     *
     * @return the serviceVersion value.
     */
    public BatchServiceVersion getServiceVersion() {
        return this.serviceVersion;
    }

    /** The HTTP pipeline to send requests through. */
    private final HttpPipeline httpPipeline;

    /**
     * Gets The HTTP pipeline to send requests through.
     *
     * @return the httpPipeline value.
     */
    public HttpPipeline getHttpPipeline() {
        return this.httpPipeline;
    }

    /** The serializer to serialize an object into a string. */
    private final SerializerAdapter serializerAdapter;

    /**
     * Gets The serializer to serialize an object into a string.
     *
     * @return the serializerAdapter value.
     */
    public SerializerAdapter getSerializerAdapter() {
        return this.serializerAdapter;
    }

    /** The ApplicationsImpl object to access its operations. */
    private final ApplicationsImpl applications;

    /**
     * Gets the ApplicationsImpl object to access its operations.
     *
     * @return the ApplicationsImpl object.
     */
    public ApplicationsImpl getApplications() {
        return this.applications;
    }

    /** The PoolsImpl object to access its operations. */
    private final PoolsImpl pools;

    /**
     * Gets the PoolsImpl object to access its operations.
     *
     * @return the PoolsImpl object.
     */
    public PoolsImpl getPools() {
        return this.pools;
    }

    /** The AccountsImpl object to access its operations. */
    private final AccountsImpl accounts;

    /**
     * Gets the AccountsImpl object to access its operations.
     *
     * @return the AccountsImpl object.
     */
    public AccountsImpl getAccounts() {
        return this.accounts;
    }

    /** The JobsImpl object to access its operations. */
    private final JobsImpl jobs;

    /**
     * Gets the JobsImpl object to access its operations.
     *
     * @return the JobsImpl object.
     */
    public JobsImpl getJobs() {
        return this.jobs;
    }

    /** The CertificatesImpl object to access its operations. */
    private final CertificatesImpl certificates;

    /**
     * Gets the CertificatesImpl object to access its operations.
     *
     * @return the CertificatesImpl object.
     */
    public CertificatesImpl getCertificates() {
        return this.certificates;
    }

    /** The FilesImpl object to access its operations. */
    private final FilesImpl files;

    /**
     * Gets the FilesImpl object to access its operations.
     *
     * @return the FilesImpl object.
     */
    public FilesImpl getFiles() {
        return this.files;
    }

    /** The JobSchedulesImpl object to access its operations. */
    private final JobSchedulesImpl jobSchedules;

    /**
     * Gets the JobSchedulesImpl object to access its operations.
     *
     * @return the JobSchedulesImpl object.
     */
    public JobSchedulesImpl getJobSchedules() {
        return this.jobSchedules;
    }

    /** The TasksImpl object to access its operations. */
    private final TasksImpl tasks;

    /**
     * Gets the TasksImpl object to access its operations.
     *
     * @return the TasksImpl object.
     */
    public TasksImpl getTasks() {
        return this.tasks;
    }

    /** The ComputeNodesImpl object to access its operations. */
    private final ComputeNodesImpl computeNodes;

    /**
     * Gets the ComputeNodesImpl object to access its operations.
     *
     * @return the ComputeNodesImpl object.
     */
    public ComputeNodesImpl getComputeNodes() {
        return this.computeNodes;
    }

    /** The ComputeNodeExtensionsImpl object to access its operations. */
    private final ComputeNodeExtensionsImpl computeNodeExtensions;

    /**
     * Gets the ComputeNodeExtensionsImpl object to access its operations.
     *
     * @return the ComputeNodeExtensionsImpl object.
     */
    public ComputeNodeExtensionsImpl getComputeNodeExtensions() {
        return this.computeNodeExtensions;
    }

    /**
     * Initializes an instance of BatchServiceClient client.
     *
     * @param endpoint Server parameter.
     * @param serviceVersion Service version.
     */
    public BatchServiceClientImpl(String endpoint, BatchServiceVersion serviceVersion) {
        this(
                new HttpPipelineBuilder()
                        .policies(new UserAgentPolicy(), new RetryPolicy(), new CookiePolicy())
                        .build(),
                JacksonAdapter.createDefaultSerializerAdapter(),
                endpoint,
                serviceVersion);
    }

    /**
     * Initializes an instance of BatchServiceClient client.
     *
     * @param httpPipeline The HTTP pipeline to send requests through.
     * @param endpoint Server parameter.
     * @param serviceVersion Service version.
     */
    public BatchServiceClientImpl(HttpPipeline httpPipeline, String endpoint, BatchServiceVersion serviceVersion) {
        this(httpPipeline, JacksonAdapter.createDefaultSerializerAdapter(), endpoint, serviceVersion);
    }

    /**
     * Initializes an instance of BatchServiceClient client.
     *
     * @param httpPipeline The HTTP pipeline to send requests through.
     * @param serializerAdapter The serializer to serialize an object into a string.
     * @param endpoint Server parameter.
     * @param serviceVersion Service version.
     */
    public BatchServiceClientImpl(
            HttpPipeline httpPipeline,
            SerializerAdapter serializerAdapter,
            String endpoint,
            BatchServiceVersion serviceVersion) {
        this.httpPipeline = httpPipeline;
        this.serializerAdapter = serializerAdapter;
        this.endpoint = endpoint;
        this.serviceVersion = serviceVersion;
        this.applications = new ApplicationsImpl(this);
        this.pools = new PoolsImpl(this);
        this.accounts = new AccountsImpl(this);
        this.jobs = new JobsImpl(this);
        this.certificates = new CertificatesImpl(this);
        this.files = new FilesImpl(this);
        this.jobSchedules = new JobSchedulesImpl(this);
        this.tasks = new TasksImpl(this);
        this.computeNodes = new ComputeNodesImpl(this);
        this.computeNodeExtensions = new ComputeNodeExtensionsImpl(this);
    }
}
