// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.compute.batch.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Specifies the security profile settings for the managed disk. **Note**: It can only be set for Confidential VMs and
 * required when using Confidential VMs.
 */
@Fluent
public final class VmDiskSecurityProfile implements JsonSerializable<VmDiskSecurityProfile> {

    /*
     * Specifies the EncryptionType of the managed disk. It is set to VMGuestStateOnly for encryption of just the
     * VMGuestState blob, and NonPersistedTPM for not persisting firmware state in the VMGuestState blob. **Note**: It
     * can be set for only Confidential VMs and is required when using Confidential VMs.
     */
    @Generated
    private SecurityEncryptionTypes securityEncryptionType;

    /**
     * Get the securityEncryptionType property: Specifies the EncryptionType of the managed disk. It is set to
     * VMGuestStateOnly for encryption of just the VMGuestState blob, and NonPersistedTPM for not persisting firmware
     * state in the VMGuestState blob. **Note**: It can be set for only Confidential VMs and is required when using
     * Confidential VMs.
     *
     * @return the securityEncryptionType value.
     */
    @Generated
    public SecurityEncryptionTypes getSecurityEncryptionType() {
        return this.securityEncryptionType;
    }

    /**
     * Set the securityEncryptionType property: Specifies the EncryptionType of the managed disk. It is set to
     * VMGuestStateOnly for encryption of just the VMGuestState blob, and NonPersistedTPM for not persisting firmware
     * state in the VMGuestState blob. **Note**: It can be set for only Confidential VMs and is required when using
     * Confidential VMs.
     *
     * @param securityEncryptionType the securityEncryptionType value to set.
     * @return the VmDiskSecurityProfile object itself.
     */
    @Generated
    public VmDiskSecurityProfile setSecurityEncryptionType(SecurityEncryptionTypes securityEncryptionType) {
        this.securityEncryptionType = securityEncryptionType;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("securityEncryptionType",
            this.securityEncryptionType == null ? null : this.securityEncryptionType.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of VmDiskSecurityProfile from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of VmDiskSecurityProfile if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the VmDiskSecurityProfile.
     */
    @Generated
    public static VmDiskSecurityProfile fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            VmDiskSecurityProfile deserializedVmDiskSecurityProfile = new VmDiskSecurityProfile();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("securityEncryptionType".equals(fieldName)) {
                    deserializedVmDiskSecurityProfile.securityEncryptionType
                        = SecurityEncryptionTypes.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }
            return deserializedVmDiskSecurityProfile;
        });
    }

    /**
     * Creates an instance of VmDiskSecurityProfile class.
     */
    @Generated
    public VmDiskSecurityProfile() {
    }
}
