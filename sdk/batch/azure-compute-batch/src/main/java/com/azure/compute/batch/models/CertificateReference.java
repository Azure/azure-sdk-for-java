// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.
package com.azure.compute.batch.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** A reference to a Certificate to be installed on Compute Nodes in a Pool. */
@Fluent
public final class CertificateReference {

    /*
     * The thumbprint of the Certificate.
     */
    @Generated
    @JsonProperty(value = "thumbprint")
    private String thumbprint;

    /*
     * The algorithm with which the thumbprint is associated. This must be sha1.
     */
    @Generated
    @JsonProperty(value = "thumbprintAlgorithm")
    private String thumbprintAlgorithm;

    /*
     * The default value is currentuser. This property is applicable only for Pools
     * configured with Windows Compute Nodes (that is, created with
     * cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows
     * Image reference). For Linux Compute Nodes, the Certificates are stored in a
     * directory inside the Task working directory and an environment variable
     * AZ_BATCH_CERTIFICATES_DIR is supplied to the Task to query for this location.
     * For Certificates with visibility of 'remoteUser', a 'certs' directory is
     * created in the user's home directory (e.g., /home/{user-name}/certs) and
     * Certificates are placed in that directory.
     */
    @Generated
    @JsonProperty(value = "storeLocation")
    private CertificateStoreLocation storeLocation;

    /*
     * This property is applicable only for Pools configured with Windows Compute
     * Nodes (that is, created with cloudServiceConfiguration, or with
     * virtualMachineConfiguration using a Windows Image reference). Common store
     * names include: My, Root, CA, Trust, Disallowed, TrustedPeople,
     * TrustedPublisher, AuthRoot, AddressBook, but any custom store name can also be
     * used. The default value is My.
     */
    @Generated
    @JsonProperty(value = "storeName")
    private String storeName;

    /*
     * You can specify more than one visibility in this collection. The default is all
     * Accounts.
     */
    @Generated
    @JsonProperty(value = "visibility")
    private List<CertificateVisibility> visibility;

    /**
     * Creates an instance of CertificateReference class.
     *
     * @param thumbprint the thumbprint value to set.
     * @param thumbprintAlgorithm the thumbprintAlgorithm value to set.
     */
    @Generated
    @JsonCreator
    public CertificateReference(
            @JsonProperty(value = "thumbprint") String thumbprint,
            @JsonProperty(value = "thumbprintAlgorithm") String thumbprintAlgorithm) {
        this.thumbprint = thumbprint;
        this.thumbprintAlgorithm = thumbprintAlgorithm;
    }

    /**
     * Get the thumbprint property: The thumbprint of the Certificate.
     *
     * @return the thumbprint value.
     */
    @Generated
    public String getThumbprint() {
        return this.thumbprint;
    }

    /**
     * Get the thumbprintAlgorithm property: The algorithm with which the thumbprint is associated. This must be sha1.
     *
     * @return the thumbprintAlgorithm value.
     */
    @Generated
    public String getThumbprintAlgorithm() {
        return this.thumbprintAlgorithm;
    }

    /**
     * Get the storeLocation property: The default value is currentuser. This property is applicable only for Pools
     * configured with Windows Compute Nodes (that is, created with cloudServiceConfiguration, or with
     * virtualMachineConfiguration using a Windows Image reference). For Linux Compute Nodes, the Certificates are
     * stored in a directory inside the Task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is
     * supplied to the Task to query for this location. For Certificates with visibility of 'remoteUser', a 'certs'
     * directory is created in the user's home directory (e.g., /home/{user-name}/certs) and Certificates are placed in
     * that directory.
     *
     * @return the storeLocation value.
     */
    @Generated
    public CertificateStoreLocation getStoreLocation() {
        return this.storeLocation;
    }

    /**
     * Set the storeLocation property: The default value is currentuser. This property is applicable only for Pools
     * configured with Windows Compute Nodes (that is, created with cloudServiceConfiguration, or with
     * virtualMachineConfiguration using a Windows Image reference). For Linux Compute Nodes, the Certificates are
     * stored in a directory inside the Task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is
     * supplied to the Task to query for this location. For Certificates with visibility of 'remoteUser', a 'certs'
     * directory is created in the user's home directory (e.g., /home/{user-name}/certs) and Certificates are placed in
     * that directory.
     *
     * @param storeLocation the storeLocation value to set.
     * @return the CertificateReference object itself.
     */
    @Generated
    public CertificateReference setStoreLocation(CertificateStoreLocation storeLocation) {
        this.storeLocation = storeLocation;
        return this;
    }

    /**
     * Get the storeName property: This property is applicable only for Pools configured with Windows Compute Nodes
     * (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows Image
     * reference). Common store names include: My, Root, CA, Trust, Disallowed, TrustedPeople, TrustedPublisher,
     * AuthRoot, AddressBook, but any custom store name can also be used. The default value is My.
     *
     * @return the storeName value.
     */
    @Generated
    public String getStoreName() {
        return this.storeName;
    }

    /**
     * Set the storeName property: This property is applicable only for Pools configured with Windows Compute Nodes
     * (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows Image
     * reference). Common store names include: My, Root, CA, Trust, Disallowed, TrustedPeople, TrustedPublisher,
     * AuthRoot, AddressBook, but any custom store name can also be used. The default value is My.
     *
     * @param storeName the storeName value to set.
     * @return the CertificateReference object itself.
     */
    @Generated
    public CertificateReference setStoreName(String storeName) {
        this.storeName = storeName;
        return this;
    }

    /**
     * Get the visibility property: You can specify more than one visibility in this collection. The default is all
     * Accounts.
     *
     * @return the visibility value.
     */
    @Generated
    public List<CertificateVisibility> getVisibility() {
        return this.visibility;
    }

    /**
     * Set the visibility property: You can specify more than one visibility in this collection. The default is all
     * Accounts.
     *
     * @param visibility the visibility value to set.
     * @return the CertificateReference object itself.
     */
    @Generated
    public CertificateReference setVisibility(List<CertificateVisibility> visibility) {
        this.visibility = visibility;
        return this;
    }
}
