// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.compute.batch.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The network configuration for a Pool. */
@Fluent
public final class NetworkConfiguration {
    /*
     * The virtual network must be in the same region and subscription as the Azure Batch Account. The specified subnet
     * should have enough free IP addresses to
     * accommodate the number of Compute Nodes in the Pool. If the subnet doesn't have enough free IP addresses, the
     * Pool will partially allocate Nodes and a resize
     * error will occur. The 'MicrosoftAzureBatch' service principal must have the 'Classic Virtual Machine
     * Contributor' Role-Based Access Control (RBAC) role for
     * the specified VNet. The specified subnet must allow communication from the Azure Batch service to be able to
     * schedule Tasks on the Nodes. This can be
     * verified by checking if the specified VNet has any associated Network Security Groups (NSG). If communication to
     * the Nodes in the specified subnet is denied
     * by an NSG, then the Batch service will set the state of the Compute Nodes to unusable. For Pools created with
     * virtualMachineConfiguration only ARM virtual
     * networks ('Microsoft.Network/virtualNetworks') are supported, but for Pools created with
     * cloudServiceConfiguration both ARM and classic virtual networks
     * are supported. If the specified VNet has any associated Network Security Groups (NSG), then a few reserved
     * system ports must be enabled for inbound
     * communication. For Pools created with a virtual machine configuration, enable ports 29876 and 29877, as well as
     * port 22 for Linux and port 3389 for Windows.
     * For Pools created with a cloud service configuration, enable ports 10100, 20100, and 30100. Also enable outbound
     * connections to Azure Storage on port
     * 443. For more details see:
     * https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration
     */
    @JsonProperty(value = "subnetId")
    private String subnetId;

    /*
     * The scope of dynamic vnet assignment.
     */
    @JsonProperty(value = "dynamicVNetAssignmentScope")
    private DynamicVNetAssignmentScope dynamicVNetAssignmentScope;

    /*
     * Pool endpoint configuration is only supported on Pools with the
     * virtualMachineConfiguration property.
     */
    @JsonProperty(value = "endpointConfiguration")
    private PoolEndpointConfiguration endpointConfiguration;

    /*
     * Public IP configuration property is only supported on Pools with the
     * virtualMachineConfiguration property.
     */
    @JsonProperty(value = "publicIPAddressConfiguration")
    private PublicIPAddressConfiguration publicIPAddressConfiguration;

    /** Creates an instance of NetworkConfiguration class. */
    public NetworkConfiguration() {}

    /**
     * Get the subnetId property: The virtual network must be in the same region and subscription as the Azure Batch
     * Account. The specified subnet should have enough free IP addresses to accommodate the number of Compute Nodes in
     * the Pool. If the subnet doesn't have enough free IP addresses, the Pool will partially allocate Nodes and a
     * resize error will occur. The 'MicrosoftAzureBatch' service principal must have the 'Classic Virtual Machine
     * Contributor' Role-Based Access Control (RBAC) role for the specified VNet. The specified subnet must allow
     * communication from the Azure Batch service to be able to schedule Tasks on the Nodes. This can be verified by
     * checking if the specified VNet has any associated Network Security Groups (NSG). If communication to the Nodes in
     * the specified subnet is denied by an NSG, then the Batch service will set the state of the Compute Nodes to
     * unusable. For Pools created with virtualMachineConfiguration only ARM virtual networks
     * ('Microsoft.Network/virtualNetworks') are supported, but for Pools created with cloudServiceConfiguration both
     * ARM and classic virtual networks are supported. If the specified VNet has any associated Network Security Groups
     * (NSG), then a few reserved system ports must be enabled for inbound communication. For Pools created with a
     * virtual machine configuration, enable ports 29876 and 29877, as well as port 22 for Linux and port 3389 for
     * Windows. For Pools created with a cloud service configuration, enable ports 10100, 20100, and 30100. Also enable
     * outbound connections to Azure Storage on port 443. For more details see:
     * https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration.
     *
     * @return the subnetId value.
     */
    public String getSubnetId() {
        return this.subnetId;
    }

    /**
     * Set the subnetId property: The virtual network must be in the same region and subscription as the Azure Batch
     * Account. The specified subnet should have enough free IP addresses to accommodate the number of Compute Nodes in
     * the Pool. If the subnet doesn't have enough free IP addresses, the Pool will partially allocate Nodes and a
     * resize error will occur. The 'MicrosoftAzureBatch' service principal must have the 'Classic Virtual Machine
     * Contributor' Role-Based Access Control (RBAC) role for the specified VNet. The specified subnet must allow
     * communication from the Azure Batch service to be able to schedule Tasks on the Nodes. This can be verified by
     * checking if the specified VNet has any associated Network Security Groups (NSG). If communication to the Nodes in
     * the specified subnet is denied by an NSG, then the Batch service will set the state of the Compute Nodes to
     * unusable. For Pools created with virtualMachineConfiguration only ARM virtual networks
     * ('Microsoft.Network/virtualNetworks') are supported, but for Pools created with cloudServiceConfiguration both
     * ARM and classic virtual networks are supported. If the specified VNet has any associated Network Security Groups
     * (NSG), then a few reserved system ports must be enabled for inbound communication. For Pools created with a
     * virtual machine configuration, enable ports 29876 and 29877, as well as port 22 for Linux and port 3389 for
     * Windows. For Pools created with a cloud service configuration, enable ports 10100, 20100, and 30100. Also enable
     * outbound connections to Azure Storage on port 443. For more details see:
     * https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration.
     *
     * @param subnetId the subnetId value to set.
     * @return the NetworkConfiguration object itself.
     */
    public NetworkConfiguration setSubnetId(String subnetId) {
        this.subnetId = subnetId;
        return this;
    }

    /**
     * Get the dynamicVNetAssignmentScope property: The scope of dynamic vnet assignment.
     *
     * @return the dynamicVNetAssignmentScope value.
     */
    public DynamicVNetAssignmentScope getDynamicVNetAssignmentScope() {
        return this.dynamicVNetAssignmentScope;
    }

    /**
     * Set the dynamicVNetAssignmentScope property: The scope of dynamic vnet assignment.
     *
     * @param dynamicVNetAssignmentScope the dynamicVNetAssignmentScope value to set.
     * @return the NetworkConfiguration object itself.
     */
    public NetworkConfiguration setDynamicVNetAssignmentScope(DynamicVNetAssignmentScope dynamicVNetAssignmentScope) {
        this.dynamicVNetAssignmentScope = dynamicVNetAssignmentScope;
        return this;
    }

    /**
     * Get the endpointConfiguration property: Pool endpoint configuration is only supported on Pools with the
     * virtualMachineConfiguration property.
     *
     * @return the endpointConfiguration value.
     */
    public PoolEndpointConfiguration getEndpointConfiguration() {
        return this.endpointConfiguration;
    }

    /**
     * Set the endpointConfiguration property: Pool endpoint configuration is only supported on Pools with the
     * virtualMachineConfiguration property.
     *
     * @param endpointConfiguration the endpointConfiguration value to set.
     * @return the NetworkConfiguration object itself.
     */
    public NetworkConfiguration setEndpointConfiguration(PoolEndpointConfiguration endpointConfiguration) {
        this.endpointConfiguration = endpointConfiguration;
        return this;
    }

    /**
     * Get the publicIPAddressConfiguration property: Public IP configuration property is only supported on Pools with
     * the virtualMachineConfiguration property.
     *
     * @return the publicIPAddressConfiguration value.
     */
    public PublicIPAddressConfiguration getPublicIPAddressConfiguration() {
        return this.publicIPAddressConfiguration;
    }

    /**
     * Set the publicIPAddressConfiguration property: Public IP configuration property is only supported on Pools with
     * the virtualMachineConfiguration property.
     *
     * @param publicIPAddressConfiguration the publicIPAddressConfiguration value to set.
     * @return the NetworkConfiguration object itself.
     */
    public NetworkConfiguration setPublicIPAddressConfiguration(
            PublicIPAddressConfiguration publicIPAddressConfiguration) {
        this.publicIPAddressConfiguration = publicIPAddressConfiguration;
        return this;
    }
}
