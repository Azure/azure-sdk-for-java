// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.compute.batch.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * A reference to an Azure Virtual Machines Marketplace Image or a Azure Compute Gallery Image.
 * To get the list of all Azure Marketplace Image references verified by Azure Batch, see the
 * ' List Supported Images ' operation.
 */
@Fluent
public final class ImageReference implements JsonSerializable<ImageReference> {

    /*
     * The publisher of the Azure Virtual Machines Marketplace Image. For example, Canonical or MicrosoftWindowsServer.
     */
    @Generated
    private String publisher;

    /*
     * The offer type of the Azure Virtual Machines Marketplace Image. For example, UbuntuServer or WindowsServer.
     */
    @Generated
    private String offer;

    /*
     * The SKU of the Azure Virtual Machines Marketplace Image. For example, 18.04-LTS or 2019-Datacenter.
     */
    @Generated
    private String sku;

    /*
     * The version of the Azure Virtual Machines Marketplace Image. A value of 'latest' can be specified to select the
     * latest version of an Image. If omitted, the default is 'latest'.
     */
    @Generated
    private String version;

    /*
     * The ARM resource identifier of the Azure Compute Gallery Image. Compute Nodes in the Pool will be created using
     * this Image Id. This is of the form
     * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{galleryName
     * }/images/{imageDefinitionName}/versions/{VersionId} or
     * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{galleryName
     * }/images/{imageDefinitionName} for always defaulting to the latest image version. This property is mutually
     * exclusive with other ImageReference properties. The Azure Compute Gallery Image must have replicas in the same
     * region and must be in the same subscription as the Azure Batch account. If the image version is not specified in
     * the imageId, the latest version will be used. For information about the firewall settings for the Batch Compute
     * Node agent to communicate with the Batch service see
     * https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration.
     */
    @Generated
    private String virtualMachineImageId;

    /*
     * The specific version of the platform image or marketplace image used to create the node. This read-only field
     * differs from 'version' only if the value specified for 'version' when the pool was created was 'latest'.
     */
    @Generated
    private String exactVersion;

    /**
     * Creates an instance of ImageReference class.
     */
    @Generated
    public ImageReference() {
    }

    /**
     * Get the publisher property: The publisher of the Azure Virtual Machines Marketplace Image. For example, Canonical
     * or MicrosoftWindowsServer.
     *
     * @return the publisher value.
     */
    @Generated
    public String getPublisher() {
        return this.publisher;
    }

    /**
     * Set the publisher property: The publisher of the Azure Virtual Machines Marketplace Image. For example, Canonical
     * or MicrosoftWindowsServer.
     *
     * @param publisher the publisher value to set.
     * @return the ImageReference object itself.
     */
    @Generated
    public ImageReference setPublisher(String publisher) {
        this.publisher = publisher;
        return this;
    }

    /**
     * Get the offer property: The offer type of the Azure Virtual Machines Marketplace Image. For example, UbuntuServer
     * or WindowsServer.
     *
     * @return the offer value.
     */
    @Generated
    public String getOffer() {
        return this.offer;
    }

    /**
     * Set the offer property: The offer type of the Azure Virtual Machines Marketplace Image. For example, UbuntuServer
     * or WindowsServer.
     *
     * @param offer the offer value to set.
     * @return the ImageReference object itself.
     */
    @Generated
    public ImageReference setOffer(String offer) {
        this.offer = offer;
        return this;
    }

    /**
     * Get the sku property: The SKU of the Azure Virtual Machines Marketplace Image. For example, 18.04-LTS or
     * 2019-Datacenter.
     *
     * @return the sku value.
     */
    @Generated
    public String getSku() {
        return this.sku;
    }

    /**
     * Set the sku property: The SKU of the Azure Virtual Machines Marketplace Image. For example, 18.04-LTS or
     * 2019-Datacenter.
     *
     * @param sku the sku value to set.
     * @return the ImageReference object itself.
     */
    @Generated
    public ImageReference setSku(String sku) {
        this.sku = sku;
        return this;
    }

    /**
     * Get the version property: The version of the Azure Virtual Machines Marketplace Image. A value of 'latest' can be
     * specified to select the latest version of an Image. If omitted, the default is 'latest'.
     *
     * @return the version value.
     */
    @Generated
    public String getVersion() {
        return this.version;
    }

    /**
     * Set the version property: The version of the Azure Virtual Machines Marketplace Image. A value of 'latest' can be
     * specified to select the latest version of an Image. If omitted, the default is 'latest'.
     *
     * @param version the version value to set.
     * @return the ImageReference object itself.
     */
    @Generated
    public ImageReference setVersion(String version) {
        this.version = version;
        return this;
    }

    /**
     * Get the virtualMachineImageId property: The ARM resource identifier of the Azure Compute Gallery Image. Compute
     * Nodes in the Pool will be created using this Image Id. This is of the form
     * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageDefinitionName}/versions/{VersionId}
     * or
     * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageDefinitionName}
     * for always defaulting to the latest image version. This property is mutually exclusive with other ImageReference
     * properties. The Azure Compute Gallery Image must have replicas in the same region and must be in the same
     * subscription as the Azure Batch account. If the image version is not specified in the imageId, the latest version
     * will be used. For information about the firewall settings for the Batch Compute Node agent to communicate with
     * the Batch service see
     * https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration.
     *
     * @return the virtualMachineImageId value.
     */
    @Generated
    public String getVirtualMachineImageId() {
        return this.virtualMachineImageId;
    }

    /**
     * Set the virtualMachineImageId property: The ARM resource identifier of the Azure Compute Gallery Image. Compute
     * Nodes in the Pool will be created using this Image Id. This is of the form
     * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageDefinitionName}/versions/{VersionId}
     * or
     * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageDefinitionName}
     * for always defaulting to the latest image version. This property is mutually exclusive with other ImageReference
     * properties. The Azure Compute Gallery Image must have replicas in the same region and must be in the same
     * subscription as the Azure Batch account. If the image version is not specified in the imageId, the latest version
     * will be used. For information about the firewall settings for the Batch Compute Node agent to communicate with
     * the Batch service see
     * https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration.
     *
     * @param virtualMachineImageId the virtualMachineImageId value to set.
     * @return the ImageReference object itself.
     */
    @Generated
    public ImageReference setVirtualMachineImageId(String virtualMachineImageId) {
        this.virtualMachineImageId = virtualMachineImageId;
        return this;
    }

    /**
     * Get the exactVersion property: The specific version of the platform image or marketplace image used to create the
     * node. This read-only field differs from 'version' only if the value specified for 'version' when the pool was
     * created was 'latest'.
     *
     * @return the exactVersion value.
     */
    @Generated
    public String getExactVersion() {
        return this.exactVersion;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("publisher", this.publisher);
        jsonWriter.writeStringField("offer", this.offer);
        jsonWriter.writeStringField("sku", this.sku);
        jsonWriter.writeStringField("version", this.version);
        jsonWriter.writeStringField("virtualMachineImageId", this.virtualMachineImageId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ImageReference from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of ImageReference if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the ImageReference.
     */
    @Generated
    public static ImageReference fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ImageReference deserializedImageReference = new ImageReference();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("publisher".equals(fieldName)) {
                    deserializedImageReference.publisher = reader.getString();
                } else if ("offer".equals(fieldName)) {
                    deserializedImageReference.offer = reader.getString();
                } else if ("sku".equals(fieldName)) {
                    deserializedImageReference.sku = reader.getString();
                } else if ("version".equals(fieldName)) {
                    deserializedImageReference.version = reader.getString();
                } else if ("virtualMachineImageId".equals(fieldName)) {
                    deserializedImageReference.virtualMachineImageId = reader.getString();
                } else if ("exactVersion".equals(fieldName)) {
                    deserializedImageReference.exactVersion = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            return deserializedImageReference;
        });
    }
}
