// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.compute.batch.models;

import com.azure.core.annotation.Generated;
import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * AllocationState enums.
 */
public final class AllocationState extends ExpandableStringEnum<AllocationState> {

    /**
     * The Pool is not resizing. There are no changes to the number of Compute Nodes in the Pool in progress. A Pool
     * enters this state when it is created and when no operations are being performed on the Pool to change the number
     * of Compute Nodes.
     */
    @Generated
    public static final AllocationState STEADY = fromString("steady");

    /**
     * The Pool is resizing; that is, Compute Nodes are being added to or removed from the Pool.
     */
    @Generated
    public static final AllocationState RESIZING = fromString("resizing");

    /**
     * The Pool was resizing, but the user has requested that the resize be stopped, but the stop request has not yet
     * been completed.
     */
    @Generated
    public static final AllocationState STOPPING = fromString("stopping");

    /**
     * Creates a new instance of AllocationState value.
     *
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Generated
    @Deprecated
    public AllocationState() {
    }

    /**
     * Creates or finds a AllocationState from its string representation.
     *
     * @param name a name to look for.
     * @return the corresponding AllocationState.
     */
    @Generated
    public static AllocationState fromString(String name) {
        return fromString(name, AllocationState.class);
    }

    /**
     * Gets known AllocationState values.
     *
     * @return known AllocationState values.
     */
    @Generated
    public static Collection<AllocationState> values() {
        return values(AllocationState.class);
    }
}
