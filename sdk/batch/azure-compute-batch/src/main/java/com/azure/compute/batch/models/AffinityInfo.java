// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.compute.batch.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;

/** A locality hint that can be used by the Batch service to select a Compute Node on which to start a Task. */
@Immutable
public final class AffinityInfo {

    /*
     * An opaque string representing the location of a Compute Node or a Task that has run previously. You can pass the
     * affinityId of a Node to indicate that this Task needs to run on that Compute Node. Note that this is just a soft
     * affinity. If the target Compute Node is busy or unavailable at the time the Task is scheduled, then the Task
     * will be scheduled elsewhere.
     */
    @Generated
    @JsonProperty(value = "affinityId")
    private String affinityId;

    /**
     * Creates an instance of AffinityInfo class.
     *
     * @param affinityId the affinityId value to set.
     */
    @Generated
    @JsonCreator
    public AffinityInfo(@JsonProperty(value = "affinityId") String affinityId) {
        this.affinityId = affinityId;
    }

    /**
     * Get the affinityId property: An opaque string representing the location of a Compute Node or a Task that has run
     * previously. You can pass the affinityId of a Node to indicate that this Task needs to run on that Compute Node.
     * Note that this is just a soft affinity. If the target Compute Node is busy or unavailable at the time the Task is
     * scheduled, then the Task will be scheduled elsewhere.
     *
     * @return the affinityId value.
     */
    @Generated
    public String getAffinityId() {
        return this.affinityId;
    }
}
