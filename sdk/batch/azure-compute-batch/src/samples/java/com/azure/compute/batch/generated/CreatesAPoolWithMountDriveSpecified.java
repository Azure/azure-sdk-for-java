// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.compute.batch.generated;

import com.azure.compute.batch.BatchClient;
import com.azure.compute.batch.BatchClientBuilder;
import com.azure.compute.batch.models.AzureBlobFileSystemConfiguration;
import com.azure.compute.batch.models.AzureFileShareConfiguration;
import com.azure.compute.batch.models.BatchNodeFillType;
import com.azure.compute.batch.models.BatchPoolCreateContent;
import com.azure.compute.batch.models.BatchTaskSchedulingPolicy;
import com.azure.compute.batch.models.CifsMountConfiguration;
import com.azure.compute.batch.models.ImageReference;
import com.azure.compute.batch.models.MountConfiguration;
import com.azure.compute.batch.models.NfsMountConfiguration;
import com.azure.compute.batch.models.VirtualMachineConfiguration;
import com.azure.core.util.Configuration;
import com.azure.identity.DefaultAzureCredentialBuilder;
import java.time.Duration;
import java.util.Arrays;

public class CreatesAPoolWithMountDriveSpecified {
    public static void main(String[] args) {
        BatchClient batchClient = new BatchClientBuilder().credential(new DefaultAzureCredentialBuilder().build())
            .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT"))
            .buildClient();
        // BEGIN:com.azure.compute.batch.generated.createpool.createsapoolwithmountdrivespecified
        batchClient.createPool(new BatchPoolCreateContent("pool2", "standard_a1")
            .setVirtualMachineConfiguration(new VirtualMachineConfiguration(
                new ImageReference().setPublisher("Canonical").setOffer("UbuntuServer").setSku("20_04-lts"),
                "batch.node.ubuntu 20.04"))
            .setResizeTimeout(Duration.parse("PT15M"))
            .setTargetDedicatedNodes(5)
            .setTargetLowPriorityNodes(0)
            .setEnableAutoScale(false)
            .setTaskSlotsPerNode(3)
            .setTaskSchedulingPolicy(new BatchTaskSchedulingPolicy(BatchNodeFillType.SPREAD))
            .setMountConfiguration(Arrays.asList(
                new MountConfiguration().setAzureBlobFileSystemConfiguration(
                    new AzureBlobFileSystemConfiguration("accountName", "blobContainerName", "bfusepath")
                        .setAccountKey("fakeTokenPlaceholder")),
                new MountConfiguration().setAzureFileShareConfiguration(
                    new AzureFileShareConfiguration("accountName", "https://myaccount.file.core.windows.net/fileshare",
                        "fakeTokenPlaceholder", "filesharepath").setMountOptions("mount options ver=1.0")),
                new MountConfiguration()
                    .setNfsMountConfiguration(new NfsMountConfiguration("somesource nfs url", "mountpath")
                        .setMountOptions("mount options ver=1.0")),
                new MountConfiguration().setCifsMountConfiguration(
                    new CifsMountConfiguration("accountName", "//myaccount.file.core.windows.net/file", "mountpath",
                        "fakeTokenPlaceholder").setMountOptions("mount options ver=1.0")))),
            null);
        // END:com.azure.compute.batch.generated.createpool.createsapoolwithmountdrivespecified
    }
}
