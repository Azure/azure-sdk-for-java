// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.openai.assistants.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.Instant;
import java.time.OffsetDateTime;
import java.time.ZoneOffset;
import java.util.List;
import java.util.Map;

/**
 * Represents an assistant that can call the model and use tools.
 */
@Immutable
public final class Assistant {

    /*
     * The identifier, which can be referenced in API endpoints.
     */
    @Generated
    @JsonProperty(value = "id")
    private String id;

    /*
     * The object type, which is always assistant.
     */
    @Generated
    @JsonProperty(value = "object")
    private String object = "assistant";

    /*
     * The Unix timestamp, in seconds, representing when this object was created.
     */
    @Generated
    @JsonProperty(value = "created_at")
    private long createdAt;

    /*
     * The name of the assistant.
     */
    @Generated
    @JsonProperty(value = "name")
    private String name;

    /*
     * The description of the assistant.
     */
    @Generated
    @JsonProperty(value = "description")
    private String description;

    /*
     * The ID of the model to use.
     */
    @Generated
    @JsonProperty(value = "model")
    private String model;

    /*
     * The system instructions for the assistant to use.
     */
    @Generated
    @JsonProperty(value = "instructions")
    private String instructions;

    /*
     * The collection of tools enabled for the assistant.
     */
    @Generated
    @JsonProperty(value = "tools")
    private List<ToolDefinition> tools;

    /*
     * A list of attached file IDs, ordered by creation date in ascending order.
     */
    @Generated
    @JsonProperty(value = "file_ids")
    private List<String> fileIds;

    /*
     * A set of up to 16 key/value pairs that can be attached to an object, used for storing additional information
     * about that object in a structured format. Keys may be up to 64 characters in length and values may be up to 512
     * characters in length.
     */
    @Generated
    @JsonProperty(value = "metadata")
    private Map<String, String> metadata;

    /**
     * Get the id property: The identifier, which can be referenced in API endpoints.
     *
     * @return the id value.
     */
    @Generated
    public String getId() {
        return this.id;
    }

    /**
     * Get the object property: The object type, which is always assistant.
     *
     * @return the object value.
     */
    @Generated
    public String getObject() {
        return this.object;
    }

    /**
     * Get the createdAt property: The Unix timestamp, in seconds, representing when this object was created.
     *
     * @return the createdAt value.
     */
    @Generated
    public OffsetDateTime getCreatedAt() {
        return OffsetDateTime.ofInstant(Instant.ofEpochSecond(this.createdAt), ZoneOffset.UTC);
    }

    /**
     * Get the name property: The name of the assistant.
     *
     * @return the name value.
     */
    @Generated
    public String getName() {
        return this.name;
    }

    /**
     * Get the description property: The description of the assistant.
     *
     * @return the description value.
     */
    @Generated
    public String getDescription() {
        return this.description;
    }

    /**
     * Get the model property: The ID of the model to use.
     *
     * @return the model value.
     */
    @Generated
    public String getModel() {
        return this.model;
    }

    /**
     * Get the instructions property: The system instructions for the assistant to use.
     *
     * @return the instructions value.
     */
    @Generated
    public String getInstructions() {
        return this.instructions;
    }

    /**
     * Get the tools property: The collection of tools enabled for the assistant.
     *
     * @return the tools value.
     */
    @Generated
    public List<ToolDefinition> getTools() {
        return this.tools;
    }

    /**
     * Get the fileIds property: A list of attached file IDs, ordered by creation date in ascending order.
     *
     * @return the fileIds value.
     */
    @Generated
    public List<String> getFileIds() {
        return this.fileIds;
    }

    /**
     * Get the metadata property: A set of up to 16 key/value pairs that can be attached to an object, used for storing
     * additional information about that object in a structured format. Keys may be up to 64 characters in length and
     * values may be up to 512 characters in length.
     *
     * @return the metadata value.
     */
    @Generated
    public Map<String, String> getMetadata() {
        return this.metadata;
    }

    /**
     * Creates an instance of Assistant class.
     *
     * @param id the id value to set.
     * @param createdAt the createdAt value to set.
     * @param name the name value to set.
     * @param description the description value to set.
     * @param model the model value to set.
     * @param instructions the instructions value to set.
     * @param tools the tools value to set.
     * @param fileIds the fileIds value to set.
     * @param metadata the metadata value to set.
     */
    @Generated
    private Assistant(String id, OffsetDateTime createdAt, String name, String description, String model,
        String instructions, List<ToolDefinition> tools, List<String> fileIds, Map<String, String> metadata) {
        this.id = id;
        this.createdAt = createdAt.toEpochSecond();
        this.name = name;
        this.description = description;
        this.model = model;
        this.instructions = instructions;
        this.tools = tools;
        this.fileIds = fileIds;
        this.metadata = metadata;
    }

    @Generated
    @JsonCreator
    private Assistant(@JsonProperty(value = "id") String id, @JsonProperty(value = "created_at") long createdAt,
        @JsonProperty(value = "name") String name, @JsonProperty(value = "description") String description,
        @JsonProperty(value = "model") String model, @JsonProperty(value = "instructions") String instructions,
        @JsonProperty(value = "tools") List<ToolDefinition> tools,
        @JsonProperty(value = "file_ids") List<String> fileIds,
        @JsonProperty(value = "metadata") Map<String, String> metadata) {
        this(id, OffsetDateTime.ofInstant(Instant.ofEpochSecond(createdAt), ZoneOffset.UTC), name, description, model,
            instructions, tools, fileIds, metadata);
    }
}
