// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.openai.assistants.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/**
 * A single message within an assistant thread, as provided during that thread's creation for its initial state.
 */
@Fluent
public final class ThreadInitializationMessage {

    /*
     * The role associated with the assistant thread message. Currently, only 'user' is supported when providing
     * initial messages to a new thread.
     */
    @Generated
    @JsonProperty(value = "role")
    private MessageRole role;

    /*
     * The textual content of the initial message. Currently, robust input including images and annotated text may only
     * be provided via a separate call to the create message API.
     */
    @Generated
    @JsonProperty(value = "content")
    private String content;

    /*
     * A list of file IDs that the assistant should use. Useful for tools like retrieval and code_interpreter that can
     * access files.
     */
    @Generated
    @JsonProperty(value = "file_ids")
    private List<String> fileIds;

    /*
     * A set of up to 16 key/value pairs that can be attached to an object, used for storing additional information
     * about that object in a structured format. Keys may be up to 64 characters in length and values may be up to 512
     * characters in length.
     */
    @Generated
    @JsonProperty(value = "metadata")
    private Map<String, String> metadata;

    /**
     * Creates an instance of ThreadInitializationMessage class.
     *
     * @param role the role value to set.
     * @param content the content value to set.
     */
    @Generated
    @JsonCreator
    public ThreadInitializationMessage(@JsonProperty(value = "role") MessageRole role,
        @JsonProperty(value = "content") String content) {
        this.role = role;
        this.content = content;
    }

    /**
     * Get the role property: The role associated with the assistant thread message. Currently, only 'user' is
     * supported when providing initial messages to a new thread.
     *
     * @return the role value.
     */
    @Generated
    public MessageRole getRole() {
        return this.role;
    }

    /**
     * Get the content property: The textual content of the initial message. Currently, robust input including images
     * and annotated text may only be provided via a separate call to the create message API.
     *
     * @return the content value.
     */
    @Generated
    public String getContent() {
        return this.content;
    }

    /**
     * Get the fileIds property: A list of file IDs that the assistant should use. Useful for tools like retrieval and
     * code_interpreter that can
     * access files.
     *
     * @return the fileIds value.
     */
    @Generated
    public List<String> getFileIds() {
        return this.fileIds;
    }

    /**
     * Set the fileIds property: A list of file IDs that the assistant should use. Useful for tools like retrieval and
     * code_interpreter that can
     * access files.
     *
     * @param fileIds the fileIds value to set.
     * @return the ThreadInitializationMessage object itself.
     */
    @Generated
    public ThreadInitializationMessage setFileIds(List<String> fileIds) {
        this.fileIds = fileIds;
        return this;
    }

    /**
     * Get the metadata property: A set of up to 16 key/value pairs that can be attached to an object, used for storing
     * additional information about that object in a structured format. Keys may be up to 64 characters in length and
     * values may be up to 512 characters in length.
     *
     * @return the metadata value.
     */
    @Generated
    public Map<String, String> getMetadata() {
        return this.metadata;
    }

    /**
     * Set the metadata property: A set of up to 16 key/value pairs that can be attached to an object, used for storing
     * additional information about that object in a structured format. Keys may be up to 64 characters in length and
     * values may be up to 512 characters in length.
     *
     * @param metadata the metadata value to set.
     * @return the ThreadInitializationMessage object itself.
     */
    @Generated
    public ThreadInitializationMessage setMetadata(Map<String, String> metadata) {
        this.metadata = metadata;
        return this;
    }
}
