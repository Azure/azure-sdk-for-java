// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.openai.assistants.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Request object to update `file_search` tool resources.
 */
@Fluent
public final class UpdateFileSearchToolResourceOptions
    implements JsonSerializable<UpdateFileSearchToolResourceOptions> {

    /*
     * A list of vector store IDs to override the current list of the assistant.
     */
    @Generated
    private List<String> vectorStoreIds;

    /**
     * Creates an instance of UpdateFileSearchToolResourceOptions class.
     */
    @Generated
    public UpdateFileSearchToolResourceOptions() {
    }

    /**
     * Get the vectorStoreIds property: A list of vector store IDs to override the current list of the assistant.
     *
     * @return the vectorStoreIds value.
     */
    @Generated
    public List<String> getVectorStoreIds() {
        return this.vectorStoreIds;
    }

    /**
     * Set the vectorStoreIds property: A list of vector store IDs to override the current list of the assistant.
     *
     * @param vectorStoreIds the vectorStoreIds value to set.
     * @return the UpdateFileSearchToolResourceOptions object itself.
     */
    @Generated
    public UpdateFileSearchToolResourceOptions setVectorStoreIds(List<String> vectorStoreIds) {
        this.vectorStoreIds = vectorStoreIds;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("vector_store_ids", this.vectorStoreIds,
            (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of UpdateFileSearchToolResourceOptions from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of UpdateFileSearchToolResourceOptions if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the UpdateFileSearchToolResourceOptions.
     */
    @Generated
    public static UpdateFileSearchToolResourceOptions fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            UpdateFileSearchToolResourceOptions deserializedUpdateFileSearchToolResourceOptions
                = new UpdateFileSearchToolResourceOptions();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("vector_store_ids".equals(fieldName)) {
                    List<String> vectorStoreIds = reader.readArray(reader1 -> reader1.getString());
                    deserializedUpdateFileSearchToolResourceOptions.vectorStoreIds = vectorStoreIds;
                } else {
                    reader.skipChildren();
                }
            }
            return deserializedUpdateFileSearchToolResourceOptions;
        });
    }
}
