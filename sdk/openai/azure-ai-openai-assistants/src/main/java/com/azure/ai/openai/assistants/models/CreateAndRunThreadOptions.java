// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.openai.assistants.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/**
 * The details used when creating and immediately running a new assistant thread.
 */
@Fluent
public final class CreateAndRunThreadOptions {

    /*
     * The ID of the assistant for which the thread should be created.
     */
    @Generated
    @JsonProperty(value = "assistant_id")
    private String assistantId;

    /*
     * The details used to create the new thread.
     */
    @Generated
    @JsonProperty(value = "thread")
    private AssistantThreadCreationOptions thread;

    /*
     * The overridden model that the assistant should use to run the thread.
     */
    @Generated
    @JsonProperty(value = "model")
    private String model;

    /*
     * The overridden system instructions the assistant should use to run the thread.
     */
    @Generated
    @JsonProperty(value = "instructions")
    private String instructions;

    /*
     * The overridden list of enabled tools the assistant should use to run the thread.
     */
    @Generated
    @JsonProperty(value = "tools")
    private List<ToolDefinition> tools;

    /*
     * A set of up to 16 key/value pairs that can be attached to an object, used for storing additional information
     * about that object in a structured format. Keys may be up to 64 characters in length and values may be up to 512
     * characters in length.
     */
    @Generated
    @JsonProperty(value = "metadata")
    private Map<String, String> metadata;

    /**
     * Creates an instance of CreateAndRunThreadOptions class.
     *
     * @param assistantId the assistantId value to set.
     */
    @Generated
    @JsonCreator
    public CreateAndRunThreadOptions(@JsonProperty(value = "assistant_id") String assistantId) {
        this.assistantId = assistantId;
    }

    /**
     * Get the assistantId property: The ID of the assistant for which the thread should be created.
     *
     * @return the assistantId value.
     */
    @Generated
    public String getAssistantId() {
        return this.assistantId;
    }

    /**
     * Get the thread property: The details used to create the new thread.
     *
     * @return the thread value.
     */
    @Generated
    public AssistantThreadCreationOptions getThread() {
        return this.thread;
    }

    /**
     * Set the thread property: The details used to create the new thread.
     *
     * @param thread the thread value to set.
     * @return the CreateAndRunThreadOptions object itself.
     */
    @Generated
    public CreateAndRunThreadOptions setThread(AssistantThreadCreationOptions thread) {
        this.thread = thread;
        return this;
    }

    /**
     * Get the model property: The overridden model that the assistant should use to run the thread.
     *
     * @return the model value.
     */
    @Generated
    public String getModel() {
        return this.model;
    }

    /**
     * Set the model property: The overridden model that the assistant should use to run the thread.
     *
     * @param model the model value to set.
     * @return the CreateAndRunThreadOptions object itself.
     */
    @Generated
    public CreateAndRunThreadOptions setModel(String model) {
        this.model = model;
        return this;
    }

    /**
     * Get the instructions property: The overridden system instructions the assistant should use to run the thread.
     *
     * @return the instructions value.
     */
    @Generated
    public String getInstructions() {
        return this.instructions;
    }

    /**
     * Set the instructions property: The overridden system instructions the assistant should use to run the thread.
     *
     * @param instructions the instructions value to set.
     * @return the CreateAndRunThreadOptions object itself.
     */
    @Generated
    public CreateAndRunThreadOptions setInstructions(String instructions) {
        this.instructions = instructions;
        return this;
    }

    /**
     * Get the tools property: The overridden list of enabled tools the assistant should use to run the thread.
     *
     * @return the tools value.
     */
    @Generated
    public List<ToolDefinition> getTools() {
        return this.tools;
    }

    /**
     * Set the tools property: The overridden list of enabled tools the assistant should use to run the thread.
     *
     * @param tools the tools value to set.
     * @return the CreateAndRunThreadOptions object itself.
     */
    @Generated
    public CreateAndRunThreadOptions setTools(List<ToolDefinition> tools) {
        this.tools = tools;
        return this;
    }

    /**
     * Get the metadata property: A set of up to 16 key/value pairs that can be attached to an object, used for storing
     * additional information about that object in a structured format. Keys may be up to 64 characters in length and
     * values may be up to 512 characters in length.
     *
     * @return the metadata value.
     */
    @Generated
    public Map<String, String> getMetadata() {
        return this.metadata;
    }

    /**
     * Set the metadata property: A set of up to 16 key/value pairs that can be attached to an object, used for storing
     * additional information about that object in a structured format. Keys may be up to 64 characters in length and
     * values may be up to 512 characters in length.
     *
     * @param metadata the metadata value to set.
     * @return the CreateAndRunThreadOptions object itself.
     */
    @Generated
    public CreateAndRunThreadOptions setMetadata(Map<String, String> metadata) {
        this.metadata = metadata;
        return this;
    }
}
