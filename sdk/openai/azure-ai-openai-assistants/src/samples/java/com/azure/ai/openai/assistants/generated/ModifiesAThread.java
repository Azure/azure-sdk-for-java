// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.openai.assistants.generated;

import com.azure.ai.openai.assistants.AssistantsClient;
import com.azure.ai.openai.assistants.AssistantsClientBuilder;
import com.azure.ai.openai.assistants.models.AssistantThread;
import com.azure.ai.openai.assistants.models.UpdateAssistantThreadOptions;
import com.azure.identity.DefaultAzureCredentialBuilder;
import java.util.HashMap;
import java.util.Map;

public class ModifiesAThread {
    public static void main(String[] args) {
        AssistantsClient assistantsClient
            = new AssistantsClientBuilder().credential(new DefaultAzureCredentialBuilder().build())
                .endpoint("{endpoint}")
                .buildClient();
        // BEGIN:com.azure.ai.openai.assistants.generated.updatethread.modifiesathread
        AssistantThread response = assistantsClient.updateThread("thread_v7V4csrNOxtNmgcwGg496Smx",
            new UpdateAssistantThreadOptions().setMetadata(mapOf("modified", "true", "user", "abc123")));
        // END:com.azure.ai.openai.assistants.generated.updatethread.modifiesathread
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
