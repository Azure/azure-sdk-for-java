// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.openai.realtime.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The RealtimeAudioInputTranscriptionSettings model.
 */
@Fluent
public final class RealtimeAudioInputTranscriptionSettings
    implements JsonSerializable<RealtimeAudioInputTranscriptionSettings> {

    /*
     * The model property.
     */
    @Generated
    private RealtimeAudioInputTranscriptionModel model;

    /**
     * Creates an instance of RealtimeAudioInputTranscriptionSettings class.
     */
    @Generated
    public RealtimeAudioInputTranscriptionSettings() {
    }

    /**
     * Creates an instance of RealtimeAudioInputTranscriptionSettings class.
     *
     * @param model The model property.
     */
    public RealtimeAudioInputTranscriptionSettings(RealtimeAudioInputTranscriptionModel model) {
        this.model = model;
    }

    /**
     * Get the model property: The model property.
     *
     * @return the model value.
     */
    @Generated
    public RealtimeAudioInputTranscriptionModel getModel() {
        return this.model;
    }

    /**
     * Set the model property: The model property.
     *
     * @param model the model value to set.
     * @return the RealtimeAudioInputTranscriptionSettings object itself.
     */
    @Generated
    public RealtimeAudioInputTranscriptionSettings setModel(RealtimeAudioInputTranscriptionModel model) {
        this.model = model;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("model", this.model == null ? null : this.model.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RealtimeAudioInputTranscriptionSettings from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of RealtimeAudioInputTranscriptionSettings if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the RealtimeAudioInputTranscriptionSettings.
     */
    @Generated
    public static RealtimeAudioInputTranscriptionSettings fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RealtimeAudioInputTranscriptionSettings deserializedRealtimeAudioInputTranscriptionSettings
                = new RealtimeAudioInputTranscriptionSettings();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("model".equals(fieldName)) {
                    deserializedRealtimeAudioInputTranscriptionSettings.model
                        = RealtimeAudioInputTranscriptionModel.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }
            return deserializedRealtimeAudioInputTranscriptionSettings;
        });
    }
}
