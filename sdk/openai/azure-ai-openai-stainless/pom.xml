<!--
 ~ Copyright (c) Microsoft Corporation. All rights reserved.
 ~ Licensed under the MIT License.
 ~ Code generated by Microsoft (R) AutoRest Code Generator.
 -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.azure</groupId>
    <artifactId>azure-client-sdk-parent</artifactId>
    <version>1.7.0</version> <!-- {x-version-update;com.azure:azure-client-sdk-parent;current} -->
    <relativePath>../../parents/azure-client-sdk-parent</relativePath>
  </parent>

  <groupId>com.azure</groupId>
  <artifactId>azure-ai-openai-stainless</artifactId>
  <version>1.0.0-beta.1</version> <!-- {x-version-update;com.azure:azure-ai-openai-stainless;current} -->

  <name>Microsoft Azure Client Library For OpenAI</name>
  <description>This package contains Microsoft Azure OpenAI client library.</description>
  <url>https://github.com/Azure/azure-sdk-for-java</url>

  <distributionManagement>
    <site>
      <id>azure-java-build-docs</id>
      <url>${site.url}/site/${project.artifactId}</url>
    </site>
  </distributionManagement>

  <scm>
    <url>https://github.com/Azure/azure-sdk-for-java</url>
    <connection>scm:git:git@github.com:Azure/azure-sdk-for-java.git</connection>
    <developerConnection>scm:git:git@github.com:Azure/azure-sdk-for-java.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <developers>
    <developer>
      <id>microsoft</id>
      <name>Microsoft</name>
    </developer>
  </developers>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <jacoco.min.linecoverage>0.30</jacoco.min.linecoverage>
    <jacoco.min.branchcoverage>0.30</jacoco.min.branchcoverage>
    <!-- Configures the Java 9+ run to perform the required module exports, opens, and reads that are necessary for testing but shouldn't be part of the module-info. -->
    <javaModulesSurefireArgLine>
      --add-exports com.azure.core/com.azure.core.implementation.http=ALL-UNNAMED
      --add-exports com.azure.core/com.azure.core.implementation.util=ALL-UNNAMED
      --add-opens com.azure.ai.openai/com.azure.ai.openai=ALL-UNNAMED
    </javaModulesSurefireArgLine>
  </properties>

  <dependencies>
    <!-- compile scope -->
    <dependency>
      <groupId>com.openai</groupId>
      <artifactId>openai-java</artifactId>
      <version>1.3.1</version> <!-- {x-version-update;com.openai:openai-java;external_dependency} -->
    </dependency>

    <!-- provided scope -->

    <dependency>
      <groupId>com.azure</groupId>
      <artifactId>azure-identity</artifactId>
      <version>1.16.1</version> <!-- {x-version-update;com.azure:azure-identity;dependency} -->
      <exclusions>
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-annotations</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-databind</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.fasterxml.jackson.datatype</groupId>
          <artifactId>jackson-datatype-jsr310</artifactId>
        </exclusion>
      </exclusions>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
      <version>3.0.2</version> <!-- {x-version-update;com.google.code.findbugs:jsr305;external_dependency} -->
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.azure</groupId>
      <artifactId>azure-core-test</artifactId>
      <version>1.27.0-beta.9</version> <!-- {x-version-update;com.azure:azure-core-test;dependency} -->
      <scope>test</scope>
    </dependency>

    <!-- JUnit -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>5.11.2</version> <!-- {x-version-update;org.junit.jupiter:junit-jupiter-api;external_dependency} -->
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>5.11.2</version> <!-- {x-version-update;org.junit.jupiter:junit-jupiter-engine;external_dependency} -->
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>5.11.2</version> <!-- {x-version-update;org.junit.jupiter:junit-jupiter-params;external_dependency} -->
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.5.0</version> <!-- {x-version-update;org.apache.maven.plugins:maven-enforcer-plugin;external_dependency} -->
        <configuration>
          <rules>
            <bannedDependencies>
              <includes>
                <include>com.openai:openai-java:[1.3.1]</include> <!-- {x-include-update;com.openai:openai-java;external_dependency} -->
              </includes>
            </bannedDependencies>
            <requireReleaseDeps>
              <excludes>
                <exclude>com.openai:*</exclude>
              </excludes>
            </requireReleaseDeps>
          </rules>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>java9plus</id>
      <activation>
        <jdk>[9,)</jdk>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.13.0</version> <!-- {x-version-update;org.apache.maven.plugins:maven-compiler-plugin;external_dependency} -->
            <configuration>
              <compilerArgs combine.children="append">
                <arg>-Xlint:-module</arg> <!-- FIXME: this is required for now as it introduces a build failure -->
                <arg>-Xlint:removal</arg>
                <arg>-Xlint:-requires-transitive-automatic</arg> <!-- FIXME: this is required for now as it introduces a build failure -->
              </compilerArgs>
            </configuration>
            <executions>
              <!-- compile first with VM's default Java version -->
              <!-- this will generate module-info with major class version based on the Java version being used, in CI this should be 61 (i.e Java 17) -->
              <execution>
                <id>default-compile</id>
                <goals>
                  <goal>compile</goal>
                </goals>
                <configuration>
                  <release>${java.vm.specification.version}</release>
                </configuration>
              </execution>

              <!-- then compile with Java 11 as the base version that supports module-info -->
              <!-- this is the Azure SDK baseline for jars that are released to Maven and should only be updated
              when the Azure SDK policy is changed -->
              <!-- executing this after default-compile will generate module-info with major class version 55 (i.e Java 11) -->
              <execution>
                <id>base-modules-compile</id>
                <goals>
                  <goal>compile</goal>
                </goals>
                <configuration>
                  <release>11</release>
                  <includes>
                    <include>module-info.java</include>
                  </includes>
                </configuration>
              </execution>

              <!-- then compile without module-info for Java 8 -->
              <execution>
                <id>base-compile</id>
                <goals>
                  <goal>compile</goal>
                </goals>
                <configuration>
                  <compilerArgs combine.children="append">
                    <arg>-Xlint:-options</arg> <!-- Needed to compile with Java 20+ -->
                  </compilerArgs>
                  <release>8</release>
                  <excludes>
                    <exclude>module-info.java</exclude>
                  </excludes>
                </configuration>
              </execution>

              <!-- test compile with the current VM's default Java version -->
              <execution>
                <id>default-testCompile</id>
                <goals>
                  <goal>testCompile</goal>
                </goals>
                <configuration>
                  <release>${java.vm.specification.version}</release>
                  <testRelease>${java.vm.specification.version}</testRelease>
                  <useModulePath>false</useModulePath>
                </configuration>
              </execution>

              <!-- then compile with Java 8 -->
              <execution>
                <id>base-testCompile</id>
                <goals>
                  <goal>testCompile</goal>
                </goals>
                <configuration>
                  <compilerArgs combine.children="append">
                    <arg>-Xlint:-options</arg> <!-- Needed to compile with Java 20+ -->
                  </compilerArgs>
                  <release>8</release>
                  <testRelease>8</testRelease>
                  <testExcludes>
                    <testExclude>module-info.java</testExclude>
                  </testExcludes>
                  <useModulePath>false</useModulePath>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
