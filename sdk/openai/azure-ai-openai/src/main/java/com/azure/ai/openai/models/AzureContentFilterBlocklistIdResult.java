// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.openai.models;

import io.clientcore.core.annotation.Metadata;
import io.clientcore.core.annotation.TypeConditions;
import io.clientcore.core.serialization.json.JsonReader;
import io.clientcore.core.serialization.json.JsonSerializable;
import io.clientcore.core.serialization.json.JsonToken;
import io.clientcore.core.serialization.json.JsonWriter;
import java.io.IOException;

/**
 * A content filter result item that associates an existing custom blocklist ID with a value indicating whether or not
 * the corresponding blocklist resulted in content being filtered.
 */
@Metadata(conditions = { TypeConditions.IMMUTABLE })
public final class AzureContentFilterBlocklistIdResult
    implements JsonSerializable<AzureContentFilterBlocklistIdResult> {
    /*
     * The ID of the custom blocklist associated with the filtered status.
     */
    @Metadata(generated = true)
    private final String id;

    /*
     * Whether the associated blocklist resulted in the content being filtered.
     */
    @Metadata(generated = true)
    private final boolean filtered;

    /**
     * Creates an instance of AzureContentFilterBlocklistIdResult class.
     * 
     * @param id the id value to set.
     * @param filtered the filtered value to set.
     */
    @Metadata(generated = true)
    private AzureContentFilterBlocklistIdResult(String id, boolean filtered) {
        this.id = id;
        this.filtered = filtered;
    }

    /**
     * Get the id property: The ID of the custom blocklist associated with the filtered status.
     * 
     * @return the id value.
     */
    @Metadata(generated = true)
    public String getId() {
        return this.id;
    }

    /**
     * Get the filtered property: Whether the associated blocklist resulted in the content being filtered.
     * 
     * @return the filtered value.
     */
    @Metadata(generated = true)
    public boolean isFiltered() {
        return this.filtered;
    }

    /**
     * {@inheritDoc}
     */
    @Metadata(generated = true)
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("id", this.id);
        jsonWriter.writeBooleanField("filtered", this.filtered);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureContentFilterBlocklistIdResult from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureContentFilterBlocklistIdResult if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AzureContentFilterBlocklistIdResult.
     */
    @Metadata(generated = true)
    public static AzureContentFilterBlocklistIdResult fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String id = null;
            boolean filtered = false;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    id = reader.getString();
                } else if ("filtered".equals(fieldName)) {
                    filtered = reader.getBoolean();
                } else {
                    reader.skipChildren();
                }
            }
            return new AzureContentFilterBlocklistIdResult(id, filtered);
        });
    }
}
