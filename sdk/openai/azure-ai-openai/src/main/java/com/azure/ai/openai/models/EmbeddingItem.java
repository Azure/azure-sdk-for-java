// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.openai.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import java.util.ArrayList;
import java.util.Base64;
import java.util.List;

/**
 * Representation of a single embeddings relatedness comparison.
 */
@Immutable
public final class EmbeddingItem {

    /*
     * embeddings value for the input prompt in base64 encoded format. These represent a measurement of the
     * vector-based relatedness of the provided input.
     */
    @Generated
    @JsonProperty(value = "embedding")
    private String embedding;

    private List<Float> embeddingAsFloat;

    /**
     * Get the embedding property: embeddings value for the input prompt in base64 encoded format. These represent a
     * measurement of the
     * vector-based relatedness of the provided input.
     *
     * @return the embedding value.
     */
    @Generated
    public String getEmbedding() {
        return this.embedding;
    }

    /**
     * Get the embeddingAsFloat property: embeddings value for the input prompt in float format. These represent a
     * measurement of the vector-based relatedness of the provided input.
     *
     * @return the embeddingAsFloat value.
     */
    public List<Float> getEmbeddingAsFloat() {
        return embeddingAsFloat;
    }

    /*
     * Index of the prompt to which the EmbeddingItem corresponds.
     */
    @Generated
    @JsonProperty(value = "index")
    private int promptIndex;

    /**
     * Get the promptIndex property: Index of the prompt to which the EmbeddingItem corresponds.
     *
     * @return the promptIndex value.
     */
    @Generated
    public int getPromptIndex() {
        return this.promptIndex;
    }

    /**
     * Creates an instance of EmbeddingItem class.
     *
     * @param embedding the embedding value to set.
     * @param promptIndex the promptIndex value to set.
     */
    @JsonCreator
    private EmbeddingItem(@JsonProperty(value = "embedding") String embedding,
        @JsonProperty(value = "index") int promptIndex) {
        this.embedding = embedding;
        this.promptIndex = promptIndex;
        this.embeddingAsFloat = convertToFloatList(this.embedding);
    }

    private List<Float> convertToFloatList(String embedding) {
        byte[] bytes = Base64.getDecoder().decode(embedding);

        // View the raw binary data as floats (IEEE 754 binary32).
        ByteBuffer byteBuffer = ByteBuffer.wrap(bytes);
        byteBuffer.order(ByteOrder.LITTLE_ENDIAN);
        FloatBuffer floatBuffer = byteBuffer.asFloatBuffer();

        // Copy the floats in the buffer to a List representing an embedding.
        List<Float> flaotList = new ArrayList<>(floatBuffer.remaining());
        while (floatBuffer.hasRemaining()) {
            flaotList.add(floatBuffer.get());
        }

        return flaotList;
    }
}
