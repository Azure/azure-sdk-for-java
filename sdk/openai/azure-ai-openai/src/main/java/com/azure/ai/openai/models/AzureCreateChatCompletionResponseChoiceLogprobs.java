// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.openai.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The AzureCreateChatCompletionResponseChoiceLogprobs model.
 */
@Immutable
public final class AzureCreateChatCompletionResponseChoiceLogprobs
    implements JsonSerializable<AzureCreateChatCompletionResponseChoiceLogprobs> {

    /*
     * A list of message content tokens with log probability information.
     */
    @Generated
    private List<ChatCompletionTokenLogprob> content;

    /*
     * A list of message refusal tokens with log probability information.
     */
    @Generated
    private List<ChatCompletionTokenLogprob> refusal;

    /**
     * Creates an instance of AzureCreateChatCompletionResponseChoiceLogprobs class.
     */
    @Generated
    private AzureCreateChatCompletionResponseChoiceLogprobs() {
    }

    /**
     * Get the content property: A list of message content tokens with log probability information.
     *
     * @return the content value.
     */
    @Generated
    public List<ChatCompletionTokenLogprob> getContent() {
        return this.content;
    }

    /**
     * Get the refusal property: A list of message refusal tokens with log probability information.
     *
     * @return the refusal value.
     */
    @Generated
    public List<ChatCompletionTokenLogprob> getRefusal() {
        return this.refusal;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureCreateChatCompletionResponseChoiceLogprobs from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureCreateChatCompletionResponseChoiceLogprobs if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AzureCreateChatCompletionResponseChoiceLogprobs.
     */
    @Generated
    public static AzureCreateChatCompletionResponseChoiceLogprobs fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AzureCreateChatCompletionResponseChoiceLogprobs deserializedAzureCreateChatCompletionResponseChoiceLogprobs
                = new AzureCreateChatCompletionResponseChoiceLogprobs();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("content".equals(fieldName)) {
                    List<ChatCompletionTokenLogprob> content
                        = reader.readArray(reader1 -> ChatCompletionTokenLogprob.fromJson(reader1));
                    deserializedAzureCreateChatCompletionResponseChoiceLogprobs.content = content;
                } else if ("refusal".equals(fieldName)) {
                    List<ChatCompletionTokenLogprob> refusal
                        = reader.readArray(reader1 -> ChatCompletionTokenLogprob.fromJson(reader1));
                    deserializedAzureCreateChatCompletionResponseChoiceLogprobs.refusal = refusal;
                } else {
                    reader.skipChildren();
                }
            }
            return deserializedAzureCreateChatCompletionResponseChoiceLogprobs;
        });
    }
}
