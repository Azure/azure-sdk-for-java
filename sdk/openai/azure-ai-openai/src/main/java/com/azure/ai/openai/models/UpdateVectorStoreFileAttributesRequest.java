// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.openai.models;

import io.clientcore.core.annotation.Metadata;
import io.clientcore.core.annotation.TypeConditions;
import io.clientcore.core.serialization.json.JsonReader;
import io.clientcore.core.serialization.json.JsonSerializable;
import io.clientcore.core.serialization.json.JsonToken;
import io.clientcore.core.serialization.json.JsonWriter;
import java.io.IOException;

/**
 * The UpdateVectorStoreFileAttributesRequest model.
 */
@Metadata(conditions = { TypeConditions.IMMUTABLE })
public final class UpdateVectorStoreFileAttributesRequest
    implements JsonSerializable<UpdateVectorStoreFileAttributesRequest> {
    /*
     * The attributes property.
     */
    @Metadata(generated = true)
    private final VectorStoreFileAttributes attributes;

    /**
     * Creates an instance of UpdateVectorStoreFileAttributesRequest class.
     * 
     * @param attributes the attributes value to set.
     */
    @Metadata(generated = true)
    public UpdateVectorStoreFileAttributesRequest(VectorStoreFileAttributes attributes) {
        this.attributes = attributes;
    }

    /**
     * Get the attributes property: The attributes property.
     * 
     * @return the attributes value.
     */
    @Metadata(generated = true)
    public VectorStoreFileAttributes getAttributes() {
        return this.attributes;
    }

    /**
     * {@inheritDoc}
     */
    @Metadata(generated = true)
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("attributes", this.attributes);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of UpdateVectorStoreFileAttributesRequest from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of UpdateVectorStoreFileAttributesRequest if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the UpdateVectorStoreFileAttributesRequest.
     */
    @Metadata(generated = true)
    public static UpdateVectorStoreFileAttributesRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            VectorStoreFileAttributes attributes = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("attributes".equals(fieldName)) {
                    attributes = VectorStoreFileAttributes.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }
            return new UpdateVectorStoreFileAttributesRequest(attributes);
        });
    }
}
