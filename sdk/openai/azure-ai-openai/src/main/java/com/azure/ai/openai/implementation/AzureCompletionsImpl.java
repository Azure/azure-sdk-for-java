// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.openai.implementation;

import com.azure.ai.openai.AzureOpenAIServiceVersion;
import com.azure.ai.openai.models.AzureOpenAICompletionErrorResponse;
import io.clientcore.core.annotation.ServiceInterface;
import io.clientcore.core.http.RestProxy;
import io.clientcore.core.http.annotation.BodyParam;
import io.clientcore.core.http.annotation.HeaderParam;
import io.clientcore.core.http.annotation.HostParam;
import io.clientcore.core.http.annotation.HttpRequestInformation;
import io.clientcore.core.http.annotation.PathParam;
import io.clientcore.core.http.annotation.QueryParam;
import io.clientcore.core.http.annotation.UnexpectedResponseExceptionDetail;
import io.clientcore.core.http.exception.HttpResponseException;
import io.clientcore.core.http.models.HttpMethod;
import io.clientcore.core.http.models.RequestOptions;
import io.clientcore.core.http.models.Response;
import io.clientcore.core.util.binarydata.BinaryData;

/**
 * An instance of this class provides access to all the operations defined in AzureCompletions.
 */
public final class AzureCompletionsImpl {
    /**
     * The proxy service used to perform REST calls.
     */
    private final AzureCompletionsService service;

    /**
     * The service client containing this operation class.
     */
    private final AzureOpenAIClientImpl client;

    /**
     * Initializes an instance of AzureCompletionsImpl.
     * 
     * @param client the instance of the service client containing this operation class.
     */
    AzureCompletionsImpl(AzureOpenAIClientImpl client) {
        this.service = RestProxy.create(AzureCompletionsService.class, client.getHttpPipeline());
        this.client = client;
    }

    /**
     * Gets Service version.
     * 
     * @return the serviceVersion value.
     */
    public AzureOpenAIServiceVersion getServiceVersion() {
        return client.getServiceVersion();
    }

    /**
     * The interface defining all the services for AzureOpenAIClientAzureCompletions to be used by the proxy service to
     * perform REST calls.
     */
    @ServiceInterface(name = "AzureOpenAIClientAzu", host = "{endpoint}/openai")
    public interface AzureCompletionsService {
        @HttpRequestInformation(
            method = HttpMethod.POST,
            path = "/deployments/{deployment_id}/completions",
            expectedStatusCodes = { 200 })
        @UnexpectedResponseExceptionDetail
        Response<AzureOpenAICompletionErrorResponse> completionsCreateSync(@HostParam("endpoint") String endpoint,
            @PathParam("deployment_id") String deploymentId, @QueryParam("api-version") String apiVersion,
            @HeaderParam("Content-Type") String contentType, @HeaderParam("Accept") String accept,
            @BodyParam("application/json") BinaryData request, RequestOptions requestOptions);
    }

    /**
     * Creates a completion for the provided prompt, parameters and chosen model.
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     prompt: BinaryData (Optional)
     *     best_of: Integer (Optional)
     *     echo: Boolean (Optional)
     *     frequency_penalty: Double (Optional)
     *     logit_bias (Optional): {
     *         String: int (Required)
     *     }
     *     logprobs: Integer (Optional)
     *     max_tokens: Integer (Optional)
     *     n: Integer (Optional)
     *     presence_penalty: Double (Optional)
     *     seed: Long (Optional)
     *     stop: BinaryData (Optional)
     *     stream: Boolean (Optional)
     *     stream_options (Optional): {
     *         include_usage: Boolean (Optional)
     *     }
     *     suffix: String (Optional)
     *     temperature: Double (Optional)
     *     top_p: Double (Optional)
     *     user: String (Optional)
     * }
     * }
     * </pre>
     * 
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     error (Optional): {
     *         code: String (Optional)
     *         message: String (Optional)
     *         param: String (Optional)
     *         type: String (Optional)
     *         inner_error (Optional): {
     *             code: String(ResponsibleAIPolicyViolation) (Optional)
     *             revised_prompt: String (Optional)
     *             content_filter_results (Optional): {
     *                 sexual (Optional): {
     *                     filtered: boolean (Required)
     *                     severity: String(safe/low/medium/high) (Required)
     *                 }
     *                 hate (Optional): (recursive schema, see hate above)
     *                 violence (Optional): (recursive schema, see violence above)
     *                 self_harm (Optional): (recursive schema, see self_harm above)
     *                 profanity (Optional): {
     *                     filtered: boolean (Required)
     *                     detected: boolean (Required)
     *                 }
     *                 custom_blocklists (Optional): {
     *                     filtered: boolean (Required)
     *                     details (Optional): [
     *                          (Optional){
     *                             filtered: boolean (Required)
     *                             id: String (Required)
     *                         }
     *                     ]
     *                 }
     *                 error (Optional): {
     *                     code: int (Required)
     *                     message: String (Required)
     *                 }
     *                 protected_material_text (Optional): (recursive schema, see protected_material_text above)
     *                 protected_material_code (Optional): {
     *                     filtered: boolean (Required)
     *                     detected: boolean (Required)
     *                     citation (Optional): {
     *                         license: String (Optional)
     *                         URL: String (Optional)
     *                     }
     *                 }
     *                 ungrounded_material (Optional): {
     *                     filtered: boolean (Required)
     *                     detected: boolean (Required)
     *                     details (Required): [
     *                          (Required){
     *                             completion_start_offset: int (Required)
     *                             completion_end_offset: int (Required)
     *                         }
     *                     ]
     *                 }
     *             }
     *         }
     *     }
     * }
     * }
     * </pre>
     * 
     * @param deploymentId Deployment ID of the model to use with this operation.
     * @param accept The accept parameter.
     * @param request The request parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the service returns an error.
     * @return a structured representation of an error on an Azure OpenAI request.
     */
    public Response<AzureOpenAICompletionErrorResponse> completionsCreateWithResponse(String deploymentId,
        String accept, BinaryData request, RequestOptions requestOptions) {
        final String contentType = "application/json";
        return service.completionsCreateSync(this.client.getEndpoint(), deploymentId,
            this.client.getServiceVersion().getVersion(), contentType, accept, request, requestOptions);
    }
}
