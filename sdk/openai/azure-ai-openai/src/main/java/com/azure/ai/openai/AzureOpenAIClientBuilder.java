// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.openai;

import com.azure.ai.openai.implementation.AzureOpenAIClientImpl;
import com.azure.core.annotation.Generated;
import com.azure.core.annotation.ServiceClientBuilder;
import com.azure.core.client.traits.ConfigurationTrait;
import com.azure.core.client.traits.EndpointTrait;
import com.azure.core.client.traits.HttpTrait;
import com.azure.core.client.traits.KeyCredentialTrait;
import com.azure.core.client.traits.TokenCredentialTrait;
import com.azure.core.credential.KeyCredential;
import com.azure.core.credential.TokenCredential;
import com.azure.core.http.HttpClient;
import com.azure.core.http.HttpHeaders;
import com.azure.core.http.HttpPipeline;
import com.azure.core.http.HttpPipelineBuilder;
import com.azure.core.http.HttpPipelinePosition;
import com.azure.core.http.policy.AddDatePolicy;
import com.azure.core.http.policy.AddHeadersFromContextPolicy;
import com.azure.core.http.policy.AddHeadersPolicy;
import com.azure.core.http.policy.BearerTokenAuthenticationPolicy;
import com.azure.core.http.policy.HttpLogOptions;
import com.azure.core.http.policy.HttpLoggingPolicy;
import com.azure.core.http.policy.HttpPipelinePolicy;
import com.azure.core.http.policy.HttpPolicyProviders;
import com.azure.core.http.policy.KeyCredentialPolicy;
import com.azure.core.http.policy.RequestIdPolicy;
import com.azure.core.http.policy.RetryOptions;
import com.azure.core.http.policy.RetryPolicy;
import com.azure.core.http.policy.UserAgentPolicy;
import com.azure.core.util.ClientOptions;
import com.azure.core.util.Configuration;
import com.azure.core.util.CoreUtils;
import com.azure.core.util.builder.ClientBuilderUtil;
import com.azure.core.util.logging.ClientLogger;
import com.azure.core.util.serializer.JacksonAdapter;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Objects;

/**
 * A builder for creating a new instance of the AzureOpenAIClient type.
 */
@ServiceClientBuilder(
    serviceClients = {
        AzureAudioSpeechClient.class,
        AzureAudioTranscriptionClient.class,
        AzureAudioTranslationClient.class,
        AzureChatClient.class,
        AzureCompletionsClient.class,
        AzureFilesClient.class,
        AzureImagesClient.class,
        AzureMessagesClient.class,
        AzureVectorStoresClient.class,
        AzureAudioSpeechAsyncClient.class,
        AzureAudioTranscriptionAsyncClient.class,
        AzureAudioTranslationAsyncClient.class,
        AzureChatAsyncClient.class,
        AzureCompletionsAsyncClient.class,
        AzureFilesAsyncClient.class,
        AzureImagesAsyncClient.class,
        AzureMessagesAsyncClient.class,
        AzureVectorStoresAsyncClient.class })
public final class AzureOpenAIClientBuilder implements HttpTrait<AzureOpenAIClientBuilder>,
    ConfigurationTrait<AzureOpenAIClientBuilder>, TokenCredentialTrait<AzureOpenAIClientBuilder>,
    KeyCredentialTrait<AzureOpenAIClientBuilder>, EndpointTrait<AzureOpenAIClientBuilder> {
    @Generated
    private static final String SDK_NAME = "name";

    @Generated
    private static final String SDK_VERSION = "version";

    @Generated
    private static final String[] DEFAULT_SCOPES = new String[] { "https://cognitiveservices.azure.com/.default" };

    @Generated
    private static final Map<String, String> PROPERTIES = CoreUtils.getProperties("azure-ai-openai.properties");

    @Generated
    private final List<HttpPipelinePolicy> pipelinePolicies;

    /**
     * Create an instance of the AzureOpenAIClientBuilder.
     */
    @Generated
    public AzureOpenAIClientBuilder() {
        this.pipelinePolicies = new ArrayList<>();
    }

    /*
     * The HTTP pipeline to send requests through.
     */
    @Generated
    private HttpPipeline pipeline;

    /**
     * {@inheritDoc}.
     */
    @Generated
    @Override
    public AzureOpenAIClientBuilder pipeline(HttpPipeline pipeline) {
        if (this.pipeline != null && pipeline == null) {
            LOGGER.atInfo().log("HttpPipeline is being set to 'null' when it was previously configured.");
        }
        this.pipeline = pipeline;
        return this;
    }

    /*
     * The HTTP client used to send the request.
     */
    @Generated
    private HttpClient httpClient;

    /**
     * {@inheritDoc}.
     */
    @Generated
    @Override
    public AzureOpenAIClientBuilder httpClient(HttpClient httpClient) {
        this.httpClient = httpClient;
        return this;
    }

    /*
     * The logging configuration for HTTP requests and responses.
     */
    @Generated
    private HttpLogOptions httpLogOptions;

    /**
     * {@inheritDoc}.
     */
    @Generated
    @Override
    public AzureOpenAIClientBuilder httpLogOptions(HttpLogOptions httpLogOptions) {
        this.httpLogOptions = httpLogOptions;
        return this;
    }

    /*
     * The client options such as application ID and custom headers to set on a request.
     */
    @Generated
    private ClientOptions clientOptions;

    /**
     * {@inheritDoc}.
     */
    @Generated
    @Override
    public AzureOpenAIClientBuilder clientOptions(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        return this;
    }

    /*
     * The retry options to configure retry policy for failed requests.
     */
    @Generated
    private RetryOptions retryOptions;

    /**
     * {@inheritDoc}.
     */
    @Generated
    @Override
    public AzureOpenAIClientBuilder retryOptions(RetryOptions retryOptions) {
        this.retryOptions = retryOptions;
        return this;
    }

    /**
     * {@inheritDoc}.
     */
    @Generated
    @Override
    public AzureOpenAIClientBuilder addPolicy(HttpPipelinePolicy customPolicy) {
        Objects.requireNonNull(customPolicy, "'customPolicy' cannot be null.");
        pipelinePolicies.add(customPolicy);
        return this;
    }

    /*
     * The configuration store that is used during construction of the service client.
     */
    @Generated
    private Configuration configuration;

    /**
     * {@inheritDoc}.
     */
    @Generated
    @Override
    public AzureOpenAIClientBuilder configuration(Configuration configuration) {
        this.configuration = configuration;
        return this;
    }

    /*
     * The TokenCredential used for authentication.
     */
    @Generated
    private TokenCredential tokenCredential;

    /**
     * {@inheritDoc}.
     */
    @Generated
    @Override
    public AzureOpenAIClientBuilder credential(TokenCredential tokenCredential) {
        this.tokenCredential = tokenCredential;
        return this;
    }

    /*
     * The KeyCredential used for authentication.
     */
    @Generated
    private KeyCredential keyCredential;

    /**
     * {@inheritDoc}.
     */
    @Generated
    @Override
    public AzureOpenAIClientBuilder credential(KeyCredential keyCredential) {
        this.keyCredential = keyCredential;
        return this;
    }

    /*
     * The service endpoint
     */
    @Generated
    private String endpoint;

    /**
     * {@inheritDoc}.
     */
    @Generated
    @Override
    public AzureOpenAIClientBuilder endpoint(String endpoint) {
        this.endpoint = endpoint;
        return this;
    }

    /*
     * Service version
     */
    @Generated
    private AzureOpenAIServiceVersion serviceVersion;

    /**
     * Sets Service version.
     * 
     * @param serviceVersion the serviceVersion value.
     * @return the AzureOpenAIClientBuilder.
     */
    @Generated
    public AzureOpenAIClientBuilder serviceVersion(AzureOpenAIServiceVersion serviceVersion) {
        this.serviceVersion = serviceVersion;
        return this;
    }

    /*
     * The retry policy that will attempt to retry failed requests, if applicable.
     */
    @Generated
    private RetryPolicy retryPolicy;

    /**
     * Sets The retry policy that will attempt to retry failed requests, if applicable.
     * 
     * @param retryPolicy the retryPolicy value.
     * @return the AzureOpenAIClientBuilder.
     */
    @Generated
    public AzureOpenAIClientBuilder retryPolicy(RetryPolicy retryPolicy) {
        this.retryPolicy = retryPolicy;
        return this;
    }

    /**
     * Builds an instance of AzureOpenAIClientImpl with the provided parameters.
     * 
     * @return an instance of AzureOpenAIClientImpl.
     */
    @Generated
    private AzureOpenAIClientImpl buildInnerClient() {
        this.validateClient();
        HttpPipeline localPipeline = (pipeline != null) ? pipeline : createHttpPipeline();
        AzureOpenAIServiceVersion localServiceVersion
            = (serviceVersion != null) ? serviceVersion : AzureOpenAIServiceVersion.getLatest();
        AzureOpenAIClientImpl client = new AzureOpenAIClientImpl(localPipeline,
            JacksonAdapter.createDefaultSerializerAdapter(), this.endpoint, localServiceVersion);
        return client;
    }

    @Generated
    private void validateClient() {
        // This method is invoked from 'buildInnerClient'/'buildClient' method.
        // Developer can customize this method, to validate that the necessary conditions are met for the new client.
        Objects.requireNonNull(endpoint, "'endpoint' cannot be null.");
    }

    @Generated
    private HttpPipeline createHttpPipeline() {
        Configuration buildConfiguration
            = (configuration == null) ? Configuration.getGlobalConfiguration() : configuration;
        HttpLogOptions localHttpLogOptions = this.httpLogOptions == null ? new HttpLogOptions() : this.httpLogOptions;
        ClientOptions localClientOptions = this.clientOptions == null ? new ClientOptions() : this.clientOptions;
        List<HttpPipelinePolicy> policies = new ArrayList<>();
        String clientName = PROPERTIES.getOrDefault(SDK_NAME, "UnknownName");
        String clientVersion = PROPERTIES.getOrDefault(SDK_VERSION, "UnknownVersion");
        String applicationId = CoreUtils.getApplicationId(localClientOptions, localHttpLogOptions);
        policies.add(new UserAgentPolicy(applicationId, clientName, clientVersion, buildConfiguration));
        policies.add(new RequestIdPolicy());
        policies.add(new AddHeadersFromContextPolicy());
        HttpHeaders headers = CoreUtils.createHttpHeadersFromClientOptions(localClientOptions);
        if (headers != null) {
            policies.add(new AddHeadersPolicy(headers));
        }
        this.pipelinePolicies.stream()
            .filter(p -> p.getPipelinePosition() == HttpPipelinePosition.PER_CALL)
            .forEach(p -> policies.add(p));
        HttpPolicyProviders.addBeforeRetryPolicies(policies);
        policies.add(ClientBuilderUtil.validateAndGetRetryPolicy(retryPolicy, retryOptions, new RetryPolicy()));
        policies.add(new AddDatePolicy());
        if (keyCredential != null) {
            policies.add(new KeyCredentialPolicy("api-key", keyCredential));
        }
        if (tokenCredential != null) {
            policies.add(new BearerTokenAuthenticationPolicy(tokenCredential, DEFAULT_SCOPES));
        }
        this.pipelinePolicies.stream()
            .filter(p -> p.getPipelinePosition() == HttpPipelinePosition.PER_RETRY)
            .forEach(p -> policies.add(p));
        HttpPolicyProviders.addAfterRetryPolicies(policies);
        policies.add(new HttpLoggingPolicy(localHttpLogOptions));
        HttpPipeline httpPipeline = new HttpPipelineBuilder().policies(policies.toArray(new HttpPipelinePolicy[0]))
            .httpClient(httpClient)
            .clientOptions(localClientOptions)
            .build();
        return httpPipeline;
    }

    /**
     * Builds an instance of AzureAudioSpeechAsyncClient class.
     * 
     * @return an instance of AzureAudioSpeechAsyncClient.
     */
    @Generated
    public AzureAudioSpeechAsyncClient buildAzureAudioSpeechAsyncClient() {
        return new AzureAudioSpeechAsyncClient(buildInnerClient().getAzureAudioSpeeches());
    }

    /**
     * Builds an instance of AzureAudioTranscriptionAsyncClient class.
     * 
     * @return an instance of AzureAudioTranscriptionAsyncClient.
     */
    @Generated
    public AzureAudioTranscriptionAsyncClient buildAzureAudioTranscriptionAsyncClient() {
        return new AzureAudioTranscriptionAsyncClient(buildInnerClient().getAzureAudioTranscriptions());
    }

    /**
     * Builds an instance of AzureAudioTranslationAsyncClient class.
     * 
     * @return an instance of AzureAudioTranslationAsyncClient.
     */
    @Generated
    public AzureAudioTranslationAsyncClient buildAzureAudioTranslationAsyncClient() {
        return new AzureAudioTranslationAsyncClient(buildInnerClient().getAzureAudioTranslations());
    }

    /**
     * Builds an instance of AzureChatAsyncClient class.
     * 
     * @return an instance of AzureChatAsyncClient.
     */
    @Generated
    public AzureChatAsyncClient buildAzureChatAsyncClient() {
        return new AzureChatAsyncClient(buildInnerClient().getAzureChats());
    }

    /**
     * Builds an instance of AzureCompletionsAsyncClient class.
     * 
     * @return an instance of AzureCompletionsAsyncClient.
     */
    @Generated
    public AzureCompletionsAsyncClient buildAzureCompletionsAsyncClient() {
        return new AzureCompletionsAsyncClient(buildInnerClient().getAzureCompletions());
    }

    /**
     * Builds an instance of AzureFilesAsyncClient class.
     * 
     * @return an instance of AzureFilesAsyncClient.
     */
    @Generated
    public AzureFilesAsyncClient buildAzureFilesAsyncClient() {
        return new AzureFilesAsyncClient(buildInnerClient().getAzureFiles());
    }

    /**
     * Builds an instance of AzureImagesAsyncClient class.
     * 
     * @return an instance of AzureImagesAsyncClient.
     */
    @Generated
    public AzureImagesAsyncClient buildAzureImagesAsyncClient() {
        return new AzureImagesAsyncClient(buildInnerClient().getAzureImages());
    }

    /**
     * Builds an instance of AzureMessagesAsyncClient class.
     * 
     * @return an instance of AzureMessagesAsyncClient.
     */
    @Generated
    public AzureMessagesAsyncClient buildAzureMessagesAsyncClient() {
        return new AzureMessagesAsyncClient(buildInnerClient().getAzureMessages());
    }

    /**
     * Builds an instance of AzureVectorStoresAsyncClient class.
     * 
     * @return an instance of AzureVectorStoresAsyncClient.
     */
    @Generated
    public AzureVectorStoresAsyncClient buildAzureVectorStoresAsyncClient() {
        return new AzureVectorStoresAsyncClient(buildInnerClient().getAzureVectorStores());
    }

    /**
     * Builds an instance of AzureAudioSpeechClient class.
     * 
     * @return an instance of AzureAudioSpeechClient.
     */
    @Generated
    public AzureAudioSpeechClient buildAzureAudioSpeechClient() {
        return new AzureAudioSpeechClient(buildInnerClient().getAzureAudioSpeeches());
    }

    /**
     * Builds an instance of AzureAudioTranscriptionClient class.
     * 
     * @return an instance of AzureAudioTranscriptionClient.
     */
    @Generated
    public AzureAudioTranscriptionClient buildAzureAudioTranscriptionClient() {
        return new AzureAudioTranscriptionClient(buildInnerClient().getAzureAudioTranscriptions());
    }

    /**
     * Builds an instance of AzureAudioTranslationClient class.
     * 
     * @return an instance of AzureAudioTranslationClient.
     */
    @Generated
    public AzureAudioTranslationClient buildAzureAudioTranslationClient() {
        return new AzureAudioTranslationClient(buildInnerClient().getAzureAudioTranslations());
    }

    /**
     * Builds an instance of AzureChatClient class.
     * 
     * @return an instance of AzureChatClient.
     */
    @Generated
    public AzureChatClient buildAzureChatClient() {
        return new AzureChatClient(buildInnerClient().getAzureChats());
    }

    /**
     * Builds an instance of AzureCompletionsClient class.
     * 
     * @return an instance of AzureCompletionsClient.
     */
    @Generated
    public AzureCompletionsClient buildAzureCompletionsClient() {
        return new AzureCompletionsClient(buildInnerClient().getAzureCompletions());
    }

    /**
     * Builds an instance of AzureFilesClient class.
     * 
     * @return an instance of AzureFilesClient.
     */
    @Generated
    public AzureFilesClient buildAzureFilesClient() {
        return new AzureFilesClient(buildInnerClient().getAzureFiles());
    }

    /**
     * Builds an instance of AzureImagesClient class.
     * 
     * @return an instance of AzureImagesClient.
     */
    @Generated
    public AzureImagesClient buildAzureImagesClient() {
        return new AzureImagesClient(buildInnerClient().getAzureImages());
    }

    /**
     * Builds an instance of AzureMessagesClient class.
     * 
     * @return an instance of AzureMessagesClient.
     */
    @Generated
    public AzureMessagesClient buildAzureMessagesClient() {
        return new AzureMessagesClient(buildInnerClient().getAzureMessages());
    }

    /**
     * Builds an instance of AzureVectorStoresClient class.
     * 
     * @return an instance of AzureVectorStoresClient.
     */
    @Generated
    public AzureVectorStoresClient buildAzureVectorStoresClient() {
        return new AzureVectorStoresClient(buildInnerClient().getAzureVectorStores());
    }

    private static final ClientLogger LOGGER = new ClientLogger(AzureOpenAIClientBuilder.class);
}
