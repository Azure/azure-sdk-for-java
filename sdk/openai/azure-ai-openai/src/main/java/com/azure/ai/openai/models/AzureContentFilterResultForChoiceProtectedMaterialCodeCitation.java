// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.openai.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The AzureContentFilterResultForChoiceProtectedMaterialCodeCitation model.
 */
@Immutable
public final class AzureContentFilterResultForChoiceProtectedMaterialCodeCitation
    implements JsonSerializable<AzureContentFilterResultForChoiceProtectedMaterialCodeCitation> {
    /*
     * The name or identifier of the license associated with the detection.
     */
    @Generated
    private String license;

    /*
     * The URL associated with the license.
     */
    @Generated
    private String uRL;

    /**
     * Creates an instance of AzureContentFilterResultForChoiceProtectedMaterialCodeCitation class.
     */
    @Generated
    private AzureContentFilterResultForChoiceProtectedMaterialCodeCitation() {
    }

    /**
     * Get the license property: The name or identifier of the license associated with the detection.
     * 
     * @return the license value.
     */
    @Generated
    public String getLicense() {
        return this.license;
    }

    /**
     * Get the uRL property: The URL associated with the license.
     * 
     * @return the uRL value.
     */
    @Generated
    public String getURL() {
        return this.uRL;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("license", this.license);
        jsonWriter.writeStringField("URL", this.uRL);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureContentFilterResultForChoiceProtectedMaterialCodeCitation from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureContentFilterResultForChoiceProtectedMaterialCodeCitation if the JsonReader was
     * pointing to an instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the
     * AzureContentFilterResultForChoiceProtectedMaterialCodeCitation.
     */
    @Generated
    public static AzureContentFilterResultForChoiceProtectedMaterialCodeCitation fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            AzureContentFilterResultForChoiceProtectedMaterialCodeCitation deserializedAzureContentFilterResultForChoiceProtectedMaterialCodeCitation
                = new AzureContentFilterResultForChoiceProtectedMaterialCodeCitation();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("license".equals(fieldName)) {
                    deserializedAzureContentFilterResultForChoiceProtectedMaterialCodeCitation.license
                        = reader.getString();
                } else if ("URL".equals(fieldName)) {
                    deserializedAzureContentFilterResultForChoiceProtectedMaterialCodeCitation.uRL = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAzureContentFilterResultForChoiceProtectedMaterialCodeCitation;
        });
    }
}
