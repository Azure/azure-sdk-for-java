// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.openai;

import com.azure.ai.openai.implementation.AzureAudioTranslationsImpl;
import com.azure.ai.openai.implementation.MultipartFormDataHelper;
import com.azure.ai.openai.models.AzureCreateTranslationRequest;
import com.azure.core.annotation.Generated;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;
import java.util.Objects;

/**
 * Initializes a new instance of the synchronous AzureOpenAIClient type.
 */
@ServiceClient(builder = AzureOpenAIClientBuilder.class)
public final class AzureAudioTranslationClient {
    @Generated
    private final AzureAudioTranslationsImpl serviceClient;

    /**
     * Initializes an instance of AzureAudioTranslationClient class.
     * 
     * @param serviceClient the service client implementation.
     */
    @Generated
    AzureAudioTranslationClient(AzureAudioTranslationsImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * Gets English language transcribed text and associated metadata from provided spoken audio data.
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * String
     * }
     * </pre>
     * 
     * @param deploymentId Deployment ID of the model to use with this operation.
     * @param accept The accept parameter.
     * @param request The request parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return english language transcribed text and associated metadata from provided spoken audio data along with
     * {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<BinaryData> translationsCreateWithResponse(String deploymentId, String accept, BinaryData request,
        RequestOptions requestOptions) {
        // Protocol API requires serialization of parts with content-disposition and data, as operation
        // 'Translations_Create' is 'multipart/form-data'
        return this.serviceClient.translationsCreateWithResponse(deploymentId, accept, request, requestOptions);
    }

    /**
     * Gets English language transcribed text and associated metadata from provided spoken audio data.
     * 
     * @param deploymentId Deployment ID of the model to use with this operation.
     * @param accept The accept parameter.
     * @param request The request parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return english language transcribed text and associated metadata from provided spoken audio data.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public String translationsCreate(String deploymentId, String accept, AzureCreateTranslationRequest request) {
        // Generated convenience method for translationsCreateWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return translationsCreateWithResponse(deploymentId, accept,
            new MultipartFormDataHelper(requestOptions)
                .serializeFileField("file", request.getFile().getContent(), request.getFile().getContentType(),
                    request.getFile().getFilename())
                .serializeTextField("prompt", request.getPrompt())
                .serializeTextField("response_format", Objects.toString(request.getResponseFormat()))
                .serializeTextField("temperature", Objects.toString(request.getTemperature()))
                .serializeTextField("filename", request.getFilename())
                .serializeTextField("model", request.getModel())
                .end()
                .getRequestBody(),
            requestOptions).getValue().toObject(String.class);
    }
}
