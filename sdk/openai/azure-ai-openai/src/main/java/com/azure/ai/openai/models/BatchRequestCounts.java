// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.openai.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The BatchRequestCounts model.
 */
@Immutable
public final class BatchRequestCounts implements JsonSerializable<BatchRequestCounts> {

    /*
     * Total number of requests in the batch.
     */
    @Generated
    private final int total;

    /*
     * Number of requests that have been completed successfully.
     */
    @Generated
    private final int completed;

    /*
     * Number of requests that have failed.
     */
    @Generated
    private final int failed;

    /**
     * Creates an instance of BatchRequestCounts class.
     *
     * @param total the total value to set.
     * @param completed the completed value to set.
     * @param failed the failed value to set.
     */
    @Generated
    private BatchRequestCounts(int total, int completed, int failed) {
        this.total = total;
        this.completed = completed;
        this.failed = failed;
    }

    /**
     * Get the total property: Total number of requests in the batch.
     *
     * @return the total value.
     */
    @Generated
    public int getTotal() {
        return this.total;
    }

    /**
     * Get the completed property: Number of requests that have been completed successfully.
     *
     * @return the completed value.
     */
    @Generated
    public int getCompleted() {
        return this.completed;
    }

    /**
     * Get the failed property: Number of requests that have failed.
     *
     * @return the failed value.
     */
    @Generated
    public int getFailed() {
        return this.failed;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeIntField("total", this.total);
        jsonWriter.writeIntField("completed", this.completed);
        jsonWriter.writeIntField("failed", this.failed);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of BatchRequestCounts from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of BatchRequestCounts if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the BatchRequestCounts.
     */
    @Generated
    public static BatchRequestCounts fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            int total = 0;
            int completed = 0;
            int failed = 0;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("total".equals(fieldName)) {
                    total = reader.getInt();
                } else if ("completed".equals(fieldName)) {
                    completed = reader.getInt();
                } else if ("failed".equals(fieldName)) {
                    failed = reader.getInt();
                } else {
                    reader.skipChildren();
                }
            }
            return new BatchRequestCounts(total, completed, failed);
        });
    }
}
