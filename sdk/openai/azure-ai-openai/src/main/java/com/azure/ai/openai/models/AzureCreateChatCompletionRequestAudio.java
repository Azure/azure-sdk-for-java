// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.openai.models;

import io.clientcore.core.annotation.Metadata;
import io.clientcore.core.annotation.TypeConditions;
import io.clientcore.core.serialization.json.JsonReader;
import io.clientcore.core.serialization.json.JsonSerializable;
import io.clientcore.core.serialization.json.JsonToken;
import io.clientcore.core.serialization.json.JsonWriter;
import java.io.IOException;

/**
 * The AzureCreateChatCompletionRequestAudio model.
 */
@Metadata(conditions = { TypeConditions.IMMUTABLE })
public final class AzureCreateChatCompletionRequestAudio
    implements JsonSerializable<AzureCreateChatCompletionRequestAudio> {
    /*
     * The voice the model uses to respond. Supported voices are
     * `alloy`, `ash`, `ballad`, `coral`, `echo`, `sage`, and `shimmer`.
     */
    @Metadata(generated = true)
    private final AzureCreateChatCompletionRequestAudioVoice voice;

    /*
     * Specifies the output audio format. Must be one of `wav`, `mp3`, `flac`,
     * `opus`, or `pcm16`.
     */
    @Metadata(generated = true)
    private final AzureCreateChatCompletionRequestAudioFormat format;

    /**
     * Creates an instance of AzureCreateChatCompletionRequestAudio class.
     * 
     * @param voice the voice value to set.
     * @param format the format value to set.
     */
    @Metadata(generated = true)
    public AzureCreateChatCompletionRequestAudio(AzureCreateChatCompletionRequestAudioVoice voice,
        AzureCreateChatCompletionRequestAudioFormat format) {
        this.voice = voice;
        this.format = format;
    }

    /**
     * Get the voice property: The voice the model uses to respond. Supported voices are
     * `alloy`, `ash`, `ballad`, `coral`, `echo`, `sage`, and `shimmer`.
     * 
     * @return the voice value.
     */
    @Metadata(generated = true)
    public AzureCreateChatCompletionRequestAudioVoice getVoice() {
        return this.voice;
    }

    /**
     * Get the format property: Specifies the output audio format. Must be one of `wav`, `mp3`, `flac`,
     * `opus`, or `pcm16`.
     * 
     * @return the format value.
     */
    @Metadata(generated = true)
    public AzureCreateChatCompletionRequestAudioFormat getFormat() {
        return this.format;
    }

    /**
     * {@inheritDoc}
     */
    @Metadata(generated = true)
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("voice", this.voice == null ? null : this.voice.toString());
        jsonWriter.writeStringField("format", this.format == null ? null : this.format.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureCreateChatCompletionRequestAudio from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureCreateChatCompletionRequestAudio if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AzureCreateChatCompletionRequestAudio.
     */
    @Metadata(generated = true)
    public static AzureCreateChatCompletionRequestAudio fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AzureCreateChatCompletionRequestAudioVoice voice = null;
            AzureCreateChatCompletionRequestAudioFormat format = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("voice".equals(fieldName)) {
                    voice = AzureCreateChatCompletionRequestAudioVoice.fromString(reader.getString());
                } else if ("format".equals(fieldName)) {
                    format = AzureCreateChatCompletionRequestAudioFormat.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }
            return new AzureCreateChatCompletionRequestAudio(voice, format);
        });
    }
}
