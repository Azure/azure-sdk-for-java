// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.openai.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * A content filter result associated with a single input prompt item into a generative AI system.
 */
@Immutable
public final class AzureContentFilterResultForPrompt implements JsonSerializable<AzureContentFilterResultForPrompt> {
    /*
     * The index of the input prompt associated with the accompanying content filter result categories.
     */
    @Generated
    private Integer promptIndex;

    /*
     * The content filter category details for the result.
     */
    @Generated
    private AzureContentFilterResultForPromptContentFilterResults contentFilterResults;

    /**
     * Creates an instance of AzureContentFilterResultForPrompt class.
     */
    @Generated
    private AzureContentFilterResultForPrompt() {
    }

    /**
     * Get the promptIndex property: The index of the input prompt associated with the accompanying content filter
     * result categories.
     * 
     * @return the promptIndex value.
     */
    @Generated
    public Integer getPromptIndex() {
        return this.promptIndex;
    }

    /**
     * Get the contentFilterResults property: The content filter category details for the result.
     * 
     * @return the contentFilterResults value.
     */
    @Generated
    public AzureContentFilterResultForPromptContentFilterResults getContentFilterResults() {
        return this.contentFilterResults;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("prompt_index", this.promptIndex);
        jsonWriter.writeJsonField("content_filter_results", this.contentFilterResults);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureContentFilterResultForPrompt from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureContentFilterResultForPrompt if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AzureContentFilterResultForPrompt.
     */
    @Generated
    public static AzureContentFilterResultForPrompt fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AzureContentFilterResultForPrompt deserializedAzureContentFilterResultForPrompt
                = new AzureContentFilterResultForPrompt();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("prompt_index".equals(fieldName)) {
                    deserializedAzureContentFilterResultForPrompt.promptIndex = reader.getNullable(JsonReader::getInt);
                } else if ("content_filter_results".equals(fieldName)) {
                    deserializedAzureContentFilterResultForPrompt.contentFilterResults
                        = AzureContentFilterResultForPromptContentFilterResults.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAzureContentFilterResultForPrompt;
        });
    }
}
