// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.openai.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.core.util.CoreUtils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.Instant;
import java.time.OffsetDateTime;
import java.time.ZoneOffset;

/**
 * The ChatCompletionResponseMessageAudio model.
 */
@Immutable
public final class ChatCompletionResponseMessageAudio {
    /*
     * Unique identifier for this audio response.
     */
    @Generated
    @JsonProperty(value = "id")
    private final String id;

    /*
     * The Unix timestamp (in seconds) for when this audio response will
     * no longer be accessible on the server for use in multi-turn
     * conversations.
     */
    @Generated
    @JsonProperty(value = "expires_at")
    private final long expiresAt;

    /*
     * Base64 encoded audio bytes generated by the model, in the format
     * specified in the request.
     */
    @Generated
    @JsonProperty(value = "data")
    private final byte[] data;

    /*
     * Transcript of the audio generated by the model.
     */
    @Generated
    @JsonProperty(value = "transcript")
    private final String transcript;

    /**
     * Creates an instance of ChatCompletionResponseMessageAudio class.
     * 
     * @param id the id value to set.
     * @param expiresAt the expiresAt value to set.
     * @param data the data value to set.
     * @param transcript the transcript value to set.
     */
    @Generated
    private ChatCompletionResponseMessageAudio(String id, OffsetDateTime expiresAt, byte[] data, String transcript) {
        this.id = id;
        if (expiresAt == null) {
            this.expiresAt = 0L;
        } else {
            this.expiresAt = expiresAt.toEpochSecond();
        }
        this.data = data;
        this.transcript = transcript;
    }

    @Generated
    @JsonCreator
    private ChatCompletionResponseMessageAudio(@JsonProperty(value = "id") String id,
        @JsonProperty(value = "expires_at") long expiresAt, @JsonProperty(value = "data") byte[] data,
        @JsonProperty(value = "transcript") String transcript) {
        this(id, OffsetDateTime.ofInstant(Instant.ofEpochSecond(expiresAt), ZoneOffset.UTC), data, transcript);
    }

    /**
     * Get the id property: Unique identifier for this audio response.
     * 
     * @return the id value.
     */
    @Generated
    public String getId() {
        return this.id;
    }

    /**
     * Get the expiresAt property: The Unix timestamp (in seconds) for when this audio response will
     * no longer be accessible on the server for use in multi-turn
     * conversations.
     * 
     * @return the expiresAt value.
     */
    @Generated
    public OffsetDateTime getExpiresAt() {
        return OffsetDateTime.ofInstant(Instant.ofEpochSecond(this.expiresAt), ZoneOffset.UTC);
    }

    /**
     * Get the data property: Base64 encoded audio bytes generated by the model, in the format
     * specified in the request.
     * 
     * @return the data value.
     */
    @Generated
    public byte[] getData() {
        return CoreUtils.clone(this.data);
    }

    /**
     * Get the transcript property: Transcript of the audio generated by the model.
     * 
     * @return the transcript value.
     */
    @Generated
    public String getTranscript() {
        return this.transcript;
    }
}
