// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.openai.models;

import com.azure.core.annotation.Generated;
import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * A representation of configuration data for a single Azure OpenAI chat extension. This will be used by a chat
 * completions request that should use Azure OpenAI chat extensions to augment the response behavior.
 * The use of this configuration is compatible only with Azure OpenAI.
 */
public final class AzureChatExtensionType extends ExpandableStringEnum<AzureChatExtensionType> {

    /**
     * Represents the use of Azure AI Search as an Azure OpenAI chat extension.
     */
    @Generated
    public static final AzureChatExtensionType AZURE_SEARCH = fromString("azure_search");

    /**
     * Represents the use of Azure Machine Learning index as an Azure OpenAI chat extension.
     */
    @Generated
    public static final AzureChatExtensionType AZURE_MACHINE_LEARNING_INDEX = fromString("azure_ml_index");

    /**
     * Represents the use of Azure Cosmos DB as an Azure OpenAI chat extension.
     */
    @Generated
    public static final AzureChatExtensionType AZURE_COSMOS_DB = fromString("azure_cosmos_db");

    /**
     * Represents the use of ElasticsearchÂ® index as an Azure OpenAI chat extension.
     */
    @Generated
    public static final AzureChatExtensionType ELASTICSEARCH = fromString("elasticsearch");

    /**
     * Represents the use of Pinecone index as an Azure OpenAI chat extension.
     */
    @Generated
    public static final AzureChatExtensionType PINECONE = fromString("pinecone");

    /**
     * Creates a new instance of AzureChatExtensionType value.
     *
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Generated
    @Deprecated
    public AzureChatExtensionType() {
    }

    /**
     * Creates or finds a AzureChatExtensionType from its string representation.
     *
     * @param name a name to look for.
     * @return the corresponding AzureChatExtensionType.
     */
    @Generated
    public static AzureChatExtensionType fromString(String name) {
        return fromString(name, AzureChatExtensionType.class);
    }

    /**
     * Gets known AzureChatExtensionType values.
     *
     * @return known AzureChatExtensionType values.
     */
    @Generated
    public static Collection<AzureChatExtensionType> values() {
        return values(AzureChatExtensionType.class);
    }
}
