// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.openai.responses.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The ResponsesResponseStreamEventResponseCodeInterpreterCallCodeDone model.
 */
@Immutable
public final class ResponsesResponseStreamEventResponseCodeInterpreterCallCodeDone
    extends ResponsesResponseStreamEvent {
    /*
     * The type property.
     */
    @Generated
    private ResponsesResponseStreamEventType type
        = ResponsesResponseStreamEventType.RESPONSE_CODE_INTERPRETER_CALL_CODE_DONE;

    /*
     * The output_index property.
     */
    @Generated
    private final int outputIndex;

    /*
     * The code.
     */
    @Generated
    private final String code;

    /**
     * Creates an instance of ResponsesResponseStreamEventResponseCodeInterpreterCallCodeDone class.
     * 
     * @param outputIndex the outputIndex value to set.
     * @param code the code value to set.
     */
    @Generated
    private ResponsesResponseStreamEventResponseCodeInterpreterCallCodeDone(int outputIndex, String code) {
        this.outputIndex = outputIndex;
        this.code = code;
    }

    /**
     * Get the type property: The type property.
     * 
     * @return the type value.
     */
    @Generated
    @Override
    public ResponsesResponseStreamEventType getType() {
        return this.type;
    }

    /**
     * Get the outputIndex property: The output_index property.
     * 
     * @return the outputIndex value.
     */
    @Generated
    public int getOutputIndex() {
        return this.outputIndex;
    }

    /**
     * Get the code property: The code.
     * 
     * @return the code value.
     */
    @Generated
    public String getCode() {
        return this.code;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeIntField("output_index", this.outputIndex);
        jsonWriter.writeStringField("code", this.code);
        jsonWriter.writeStringField("type", this.type == null ? null : this.type.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ResponsesResponseStreamEventResponseCodeInterpreterCallCodeDone from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ResponsesResponseStreamEventResponseCodeInterpreterCallCodeDone if the JsonReader was
     * pointing to an instance of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the
     * ResponsesResponseStreamEventResponseCodeInterpreterCallCodeDone.
     */
    @Generated
    public static ResponsesResponseStreamEventResponseCodeInterpreterCallCodeDone fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            int outputIndex = 0;
            String code = null;
            ResponsesResponseStreamEventType type
                = ResponsesResponseStreamEventType.RESPONSE_CODE_INTERPRETER_CALL_CODE_DONE;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("output_index".equals(fieldName)) {
                    outputIndex = reader.getInt();
                } else if ("code".equals(fieldName)) {
                    code = reader.getString();
                } else if ("type".equals(fieldName)) {
                    type = ResponsesResponseStreamEventType.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }
            ResponsesResponseStreamEventResponseCodeInterpreterCallCodeDone deserializedResponsesResponseStreamEventResponseCodeInterpreterCallCodeDone
                = new ResponsesResponseStreamEventResponseCodeInterpreterCallCodeDone(outputIndex, code);
            deserializedResponsesResponseStreamEventResponseCodeInterpreterCallCodeDone.type = type;

            return deserializedResponsesResponseStreamEventResponseCodeInterpreterCallCodeDone;
        });
    }
}
