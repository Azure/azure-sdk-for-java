// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.openai.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.core.util.BinaryData;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Represents a vectorization source that makes public service calls against an Azure OpenAI embedding model deployment.
 */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    property = "type",
    defaultImpl = AzureChatDataSourceEndpointVectorizationSource.class,
    visible = true)
@JsonTypeName("endpoint")
@Fluent
public final class AzureChatDataSourceEndpointVectorizationSource extends AzureChatDataSourceVectorizationSource {
    /*
     * The differentiating identifier for the concrete vectorization source.
     */
    @Generated
    @JsonTypeId
    @JsonProperty(value = "type")
    private String type = "endpoint";

    /*
     * Specifies the resource endpoint URL from which embeddings should be retrieved.
     * It should be in the format of:
     * https://YOUR_RESOURCE_NAME.openai.azure.com/openai/deployments/YOUR_DEPLOYMENT_NAME/embeddings.
     * The api-version query parameter is not allowed.
     */
    @Generated
    @JsonProperty(value = "endpoint")
    private final String endpoint;

    /*
     * The authentication mechanism to use with the endpoint-based vectorization source.
     * Endpoint authentication supports API key and access token mechanisms.
     */
    @Generated
    @JsonProperty(value = "authentication")
    private final BinaryData authentication;

    /*
     * The number of dimensions to request on embeddings.
     * Only supported in 'text-embedding-3' and later models.
     */
    @Generated
    @JsonProperty(value = "dimensions")
    private Integer dimensions;

    /**
     * Creates an instance of AzureChatDataSourceEndpointVectorizationSource class.
     * 
     * @param endpoint the endpoint value to set.
     * @param authentication the authentication value to set.
     */
    @Generated
    @JsonCreator
    public AzureChatDataSourceEndpointVectorizationSource(@JsonProperty(value = "endpoint") String endpoint,
        @JsonProperty(value = "authentication") BinaryData authentication) {
        this.endpoint = endpoint;
        this.authentication = authentication;
    }

    /**
     * Get the type property: The differentiating identifier for the concrete vectorization source.
     * 
     * @return the type value.
     */
    @Generated
    @Override
    public String getType() {
        return this.type;
    }

    /**
     * Get the endpoint property: Specifies the resource endpoint URL from which embeddings should be retrieved.
     * It should be in the format of:
     * https://YOUR_RESOURCE_NAME.openai.azure.com/openai/deployments/YOUR_DEPLOYMENT_NAME/embeddings.
     * The api-version query parameter is not allowed.
     * 
     * @return the endpoint value.
     */
    @Generated
    public String getEndpoint() {
        return this.endpoint;
    }

    /**
     * Get the authentication property: The authentication mechanism to use with the endpoint-based vectorization
     * source.
     * Endpoint authentication supports API key and access token mechanisms.
     * 
     * @return the authentication value.
     */
    @Generated
    public BinaryData getAuthentication() {
        return this.authentication;
    }

    /**
     * Get the dimensions property: The number of dimensions to request on embeddings.
     * Only supported in 'text-embedding-3' and later models.
     * 
     * @return the dimensions value.
     */
    @Generated
    public Integer getDimensions() {
        return this.dimensions;
    }

    /**
     * Set the dimensions property: The number of dimensions to request on embeddings.
     * Only supported in 'text-embedding-3' and later models.
     * 
     * @param dimensions the dimensions value to set.
     * @return the AzureChatDataSourceEndpointVectorizationSource object itself.
     */
    @Generated
    public AzureChatDataSourceEndpointVectorizationSource setDimensions(Integer dimensions) {
        this.dimensions = dimensions;
        return this;
    }
}
