// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.openai.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.Instant;
import java.time.OffsetDateTime;
import java.time.ZoneOffset;

/**
 * The AzureOpenAIFile model.
 */
@Immutable
public final class AzureOpenAIFile {
    /*
     * The file identifier, which can be referenced in the API endpoints.
     */
    @Generated
    @JsonProperty(value = "id")
    private final String id;

    /*
     * The size of the file, in bytes.
     */
    @Generated
    @JsonProperty(value = "bytes")
    private final Integer bytes;

    /*
     * The Unix timestamp (in seconds) for when the file was created.
     */
    @Generated
    @JsonProperty(value = "created_at")
    private final long createdAt;

    /*
     * The Unix timestamp (in seconds) for when the file will expire.
     */
    @Generated
    @JsonProperty(value = "expires_at")
    private Long expiresAt;

    /*
     * The name of the file.
     */
    @Generated
    @JsonProperty(value = "filename")
    private final String filename;

    /*
     * The object type, which is always `file`.
     */
    @Generated
    @JsonProperty(value = "object")
    private final String object = "file";

    /*
     * The intended purpose of the file. Supported values are `assistants`, `assistants_output`, `batch`,
     * `batch_output`, `fine-tune`, `fine-tune-results` and `vision`.
     */
    @Generated
    @JsonProperty(value = "purpose")
    private final OpenAIFileWithOmittedPropertiesPurpose purpose;

    /*
     * Deprecated. For details on why a fine-tuning training file failed validation, see the `error` field on
     * `fine_tuning.job`.
     */
    @Generated
    @JsonProperty(value = "status_details")
    private String statusDetails;

    /*
     * The status property.
     */
    @Generated
    @JsonProperty(value = "status")
    private final AzureOpenAIFileStatus status;

    /**
     * Creates an instance of AzureOpenAIFile class.
     * 
     * @param id the id value to set.
     * @param bytes the bytes value to set.
     * @param createdAt the createdAt value to set.
     * @param filename the filename value to set.
     * @param purpose the purpose value to set.
     * @param status the status value to set.
     */
    @Generated
    private AzureOpenAIFile(String id, Integer bytes, OffsetDateTime createdAt, String filename,
        OpenAIFileWithOmittedPropertiesPurpose purpose, AzureOpenAIFileStatus status) {
        this.id = id;
        this.bytes = bytes;
        if (createdAt == null) {
            this.createdAt = 0L;
        } else {
            this.createdAt = createdAt.toEpochSecond();
        }
        this.filename = filename;
        this.purpose = purpose;
        this.status = status;
    }

    @Generated
    @JsonCreator
    private AzureOpenAIFile(@JsonProperty(value = "id") String id, @JsonProperty(value = "bytes") Integer bytes,
        @JsonProperty(value = "created_at") long createdAt, @JsonProperty(value = "filename") String filename,
        @JsonProperty(value = "purpose") OpenAIFileWithOmittedPropertiesPurpose purpose,
        @JsonProperty(value = "status") AzureOpenAIFileStatus status) {
        this(id, bytes, OffsetDateTime.ofInstant(Instant.ofEpochSecond(createdAt), ZoneOffset.UTC), filename, purpose,
            status);
    }

    /**
     * Get the id property: The file identifier, which can be referenced in the API endpoints.
     * 
     * @return the id value.
     */
    @Generated
    public String getId() {
        return this.id;
    }

    /**
     * Get the bytes property: The size of the file, in bytes.
     * 
     * @return the bytes value.
     */
    @Generated
    public Integer getBytes() {
        return this.bytes;
    }

    /**
     * Get the createdAt property: The Unix timestamp (in seconds) for when the file was created.
     * 
     * @return the createdAt value.
     */
    @Generated
    public OffsetDateTime getCreatedAt() {
        return OffsetDateTime.ofInstant(Instant.ofEpochSecond(this.createdAt), ZoneOffset.UTC);
    }

    /**
     * Get the expiresAt property: The Unix timestamp (in seconds) for when the file will expire.
     * 
     * @return the expiresAt value.
     */
    @Generated
    public OffsetDateTime getExpiresAt() {
        if (this.expiresAt == null) {
            return null;
        }
        return OffsetDateTime.ofInstant(Instant.ofEpochSecond(this.expiresAt), ZoneOffset.UTC);
    }

    /**
     * Get the filename property: The name of the file.
     * 
     * @return the filename value.
     */
    @Generated
    public String getFilename() {
        return this.filename;
    }

    /**
     * Get the object property: The object type, which is always `file`.
     * 
     * @return the object value.
     */
    @Generated
    public String getObject() {
        return this.object;
    }

    /**
     * Get the purpose property: The intended purpose of the file. Supported values are `assistants`,
     * `assistants_output`, `batch`, `batch_output`, `fine-tune`, `fine-tune-results` and `vision`.
     * 
     * @return the purpose value.
     */
    @Generated
    public OpenAIFileWithOmittedPropertiesPurpose getPurpose() {
        return this.purpose;
    }

    /**
     * Get the statusDetails property: Deprecated. For details on why a fine-tuning training file failed validation, see
     * the `error` field on `fine_tuning.job`.
     * 
     * @return the statusDetails value.
     */
    @Generated
    public String getStatusDetails() {
        return this.statusDetails;
    }

    /**
     * Get the status property: The status property.
     * 
     * @return the status value.
     */
    @Generated
    public AzureOpenAIFileStatus getStatus() {
        return this.status;
    }
}
