// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.openai.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The AzureContentFilterResultForPromptContentFilterResultsError model.
 */
@Immutable
public final class AzureContentFilterResultForPromptContentFilterResultsError
    implements JsonSerializable<AzureContentFilterResultForPromptContentFilterResultsError> {

    /*
     * A distinct, machine-readable code associated with the error.
     */
    @Generated
    private final int code;

    /*
     * A human-readable message associated with the error.
     */
    @Generated
    private final String message;

    /**
     * Creates an instance of AzureContentFilterResultForPromptContentFilterResultsError class.
     *
     * @param code the code value to set.
     * @param message the message value to set.
     */
    @Generated
    private AzureContentFilterResultForPromptContentFilterResultsError(int code, String message) {
        this.code = code;
        this.message = message;
    }

    /**
     * Get the code property: A distinct, machine-readable code associated with the error.
     *
     * @return the code value.
     */
    @Generated
    public int getCode() {
        return this.code;
    }

    /**
     * Get the message property: A human-readable message associated with the error.
     *
     * @return the message value.
     */
    @Generated
    public String getMessage() {
        return this.message;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeIntField("code", this.code);
        jsonWriter.writeStringField("message", this.message);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureContentFilterResultForPromptContentFilterResultsError from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureContentFilterResultForPromptContentFilterResultsError if the JsonReader was pointing
     * to an instance of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the
     * AzureContentFilterResultForPromptContentFilterResultsError.
     */
    @Generated
    public static AzureContentFilterResultForPromptContentFilterResultsError fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            int code = 0;
            String message = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("code".equals(fieldName)) {
                    code = reader.getInt();
                } else if ("message".equals(fieldName)) {
                    message = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            return new AzureContentFilterResultForPromptContentFilterResultsError(code, message);
        });
    }
}
