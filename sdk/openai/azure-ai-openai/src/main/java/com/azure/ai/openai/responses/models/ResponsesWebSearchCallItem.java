// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.openai.responses.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The ResponsesWebSearchCallItem model.
 */
@Immutable
public final class ResponsesWebSearchCallItem extends ResponsesItem {

    /*
     * The type property.
     */
    @Generated
    private ResponsesItemType type = ResponsesItemType.WEB_SEARCH_CALL;

    /*
     * The status property.
     */
    @Generated
    private final ResponsesWebSearchCallItemStatus status;

    /*
     * The queries property.
     */
    @Generated
    private final List<String> queries;

    /*
     * The search_results property.
     */
    @Generated
    private final List<ResponsesWebSearchCallItemResult> searchResults;

    /**
     * Creates an instance of ResponsesWebSearchCallItem class.
     *
     * @param id the id value to set.
     * @param status the status value to set.
     * @param queries the queries value to set.
     * @param searchResults the searchResults value to set.
     */
    @Generated
    public ResponsesWebSearchCallItem(String id, ResponsesWebSearchCallItemStatus status, List<String> queries,
        List<ResponsesWebSearchCallItemResult> searchResults) {
        super(id);
        this.status = status;
        this.queries = queries;
        this.searchResults = searchResults;
    }

    /**
     * Get the type property: The type property.
     *
     * @return the type value.
     */
    @Generated
    @Override
    public ResponsesItemType getType() {
        return this.type;
    }

    /**
     * Get the status property: The status property.
     *
     * @return the status value.
     */
    @Generated
    public ResponsesWebSearchCallItemStatus getStatus() {
        return this.status;
    }

    /**
     * Get the queries property: The queries property.
     *
     * @return the queries value.
     */
    @Generated
    public List<String> getQueries() {
        return this.queries;
    }

    /**
     * Get the searchResults property: The search_results property.
     *
     * @return the searchResults value.
     */
    @Generated
    public List<ResponsesWebSearchCallItemResult> getSearchResults() {
        return this.searchResults;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("id", getId());
        jsonWriter.writeStringField("status", this.status == null ? null : this.status.toString());
        jsonWriter.writeArrayField("queries", this.queries, (writer, element) -> writer.writeString(element));
        jsonWriter.writeArrayField("search_results", this.searchResults,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("type", this.type == null ? null : this.type.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ResponsesWebSearchCallItem from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of ResponsesWebSearchCallItem if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the ResponsesWebSearchCallItem.
     */
    @Generated
    public static ResponsesWebSearchCallItem fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String id = null;
            ResponsesWebSearchCallItemStatus status = null;
            List<String> queries = null;
            List<ResponsesWebSearchCallItemResult> searchResults = null;
            ResponsesItemType type = ResponsesItemType.WEB_SEARCH_CALL;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("id".equals(fieldName)) {
                    id = reader.getString();
                } else if ("status".equals(fieldName)) {
                    status = ResponsesWebSearchCallItemStatus.fromString(reader.getString());
                } else if ("queries".equals(fieldName)) {
                    queries = reader.readArray(reader1 -> reader1.getString());
                } else if ("search_results".equals(fieldName)) {
                    searchResults = reader.readArray(reader1 -> ResponsesWebSearchCallItemResult.fromJson(reader1));
                } else if ("type".equals(fieldName)) {
                    type = ResponsesItemType.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }
            ResponsesWebSearchCallItem deserializedResponsesWebSearchCallItem
                = new ResponsesWebSearchCallItem(id, status, queries, searchResults);
            deserializedResponsesWebSearchCallItem.type = type;
            return deserializedResponsesWebSearchCallItem;
        });
    }
}
