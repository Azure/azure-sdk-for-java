// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.openai.responses.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The CreateResponsesRequestAudio1 model.
 */
@Immutable
public final class CreateResponsesRequestAudio1 implements JsonSerializable<CreateResponsesRequestAudio1> {
    /*
     * The voice the model uses to respond. Supported voices are `ash`, `ballad`, `coral`, `sage`, and `verse` (also
     * supported but not recommended are `alloy`, `echo`, and `shimmer`; these voices are less expressive).
     */
    @Generated
    private final CreateResponsesRequestAudioVoice voice;

    /*
     * Specifies the output audio format. Must be one of `wav`, `mp3`, `flac`,
     * `opus`, or `pcm16`.
     */
    @Generated
    private final CreateResponsesRequestAudioFormat format;

    /**
     * Creates an instance of CreateResponsesRequestAudio1 class.
     * 
     * @param voice the voice value to set.
     * @param format the format value to set.
     */
    @Generated
    public CreateResponsesRequestAudio1(CreateResponsesRequestAudioVoice voice,
        CreateResponsesRequestAudioFormat format) {
        this.voice = voice;
        this.format = format;
    }

    /**
     * Get the voice property: The voice the model uses to respond. Supported voices are `ash`, `ballad`, `coral`,
     * `sage`, and `verse` (also supported but not recommended are `alloy`, `echo`, and `shimmer`; these voices are less
     * expressive).
     * 
     * @return the voice value.
     */
    @Generated
    public CreateResponsesRequestAudioVoice getVoice() {
        return this.voice;
    }

    /**
     * Get the format property: Specifies the output audio format. Must be one of `wav`, `mp3`, `flac`,
     * `opus`, or `pcm16`.
     * 
     * @return the format value.
     */
    @Generated
    public CreateResponsesRequestAudioFormat getFormat() {
        return this.format;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("voice", this.voice == null ? null : this.voice.toString());
        jsonWriter.writeStringField("format", this.format == null ? null : this.format.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CreateResponsesRequestAudio1 from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CreateResponsesRequestAudio1 if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the CreateResponsesRequestAudio1.
     */
    @Generated
    public static CreateResponsesRequestAudio1 fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CreateResponsesRequestAudioVoice voice = null;
            CreateResponsesRequestAudioFormat format = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("voice".equals(fieldName)) {
                    voice = CreateResponsesRequestAudioVoice.fromString(reader.getString());
                } else if ("format".equals(fieldName)) {
                    format = CreateResponsesRequestAudioFormat.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }
            return new CreateResponsesRequestAudio1(voice, format);
        });
    }
}
