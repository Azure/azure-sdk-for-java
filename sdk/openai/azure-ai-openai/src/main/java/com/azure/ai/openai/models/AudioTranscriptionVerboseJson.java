// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.ai.openai.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.Duration;
import java.util.List;

/** Transcription response. */
@Immutable
public final class AudioTranscriptionVerboseJson extends AudioTranscriptionSimpleJson {
    /*
     * Audio transcription task.
     */
    @Generated
    @JsonProperty(value = "task")
    private AudioTranscriptionTask task;

    /*
     * Language detected in the source audio file.
     */
    @Generated
    @JsonProperty(value = "language")
    private String language;

    /*
     * Duration.
     */
    @Generated
    @JsonProperty(value = "duration")
    private double duration;

    /*
     * Segments.
     */
    @Generated
    @JsonProperty(value = "segments")
    private List<AudioTranscriptionSegment> segments;

    /**
     * Creates an instance of AudioTranscriptionVerboseJson class.
     *
     * @param text the text value to set.
     * @param task the task value to set.
     * @param language the language value to set.
     * @param duration the duration value to set.
     * @param segments the segments value to set.
     */
    @Generated
    private AudioTranscriptionVerboseJson(
            String text,
            AudioTranscriptionTask task,
            String language,
            Duration duration,
            List<AudioTranscriptionSegment> segments) {
        super(text);
        this.task = task;
        this.language = language;
        this.duration = (double) duration.toNanos() / 1000_000_000L;
        this.segments = segments;
    }

    @Generated
    @JsonCreator
    private AudioTranscriptionVerboseJson(
            @JsonProperty(value = "text") String text,
            @JsonProperty(value = "task") AudioTranscriptionTask task,
            @JsonProperty(value = "language") String language,
            @JsonProperty(value = "duration") double duration,
            @JsonProperty(value = "segments") List<AudioTranscriptionSegment> segments) {
        this(text, task, language, Duration.ofNanos((long) (duration * 1000_000_000L)), segments);
    }

    /**
     * Get the task property: Audio transcription task.
     *
     * @return the task value.
     */
    @Generated
    public AudioTranscriptionTask getTask() {
        return this.task;
    }

    /**
     * Get the language property: Language detected in the source audio file.
     *
     * @return the language value.
     */
    @Generated
    public String getLanguage() {
        return this.language;
    }

    /**
     * Get the duration property: Duration.
     *
     * @return the duration value.
     */
    @Generated
    public Duration getDuration() {
        return Duration.ofNanos((long) (this.duration * 1000_000_000L));
    }

    /**
     * Get the segments property: Segments.
     *
     * @return the segments value.
     */
    @Generated
    public List<AudioTranscriptionSegment> getSegments() {
        return this.segments;
    }
}
