// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.openai.implementation;

import com.azure.ai.openai.AzureOpenAIServiceVersion;
import com.azure.core.annotation.BodyParam;
import com.azure.core.annotation.ExpectedResponses;
import com.azure.core.annotation.HeaderParam;
import com.azure.core.annotation.Host;
import com.azure.core.annotation.HostParam;
import com.azure.core.annotation.PathParam;
import com.azure.core.annotation.Post;
import com.azure.core.annotation.QueryParam;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceInterface;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.annotation.UnexpectedResponseExceptionType;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.HttpPipeline;
import com.azure.core.http.HttpPipelineBuilder;
import com.azure.core.http.policy.RetryPolicy;
import com.azure.core.http.policy.UserAgentPolicy;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.RestProxy;
import com.azure.core.util.BinaryData;
import com.azure.core.util.Context;
import com.azure.core.util.FluxUtil;
import com.azure.core.util.serializer.JacksonAdapter;
import com.azure.core.util.serializer.SerializerAdapter;
import reactor.core.publisher.Mono;

/**
 * Initializes a new instance of the AzureCompanionClient type.
 */
public final class AzureCompanionClientImpl {
    /**
     * The proxy service used to perform REST calls.
     */
    private final AzureCompanionClientService service;

    /**
     * Supported Cognitive Services endpoints (protocol and hostname, for example:
     * https://westus.api.cognitive.microsoft.com).
     */
    private final String endpoint;

    /**
     * Gets Supported Cognitive Services endpoints (protocol and hostname, for example:
     * https://westus.api.cognitive.microsoft.com).
     * 
     * @return the endpoint value.
     */
    public String getEndpoint() {
        return this.endpoint;
    }

    /**
     * Service version.
     */
    private final AzureOpenAIServiceVersion serviceVersion;

    /**
     * Gets Service version.
     * 
     * @return the serviceVersion value.
     */
    public AzureOpenAIServiceVersion getServiceVersion() {
        return this.serviceVersion;
    }

    /**
     * The HTTP pipeline to send requests through.
     */
    private final HttpPipeline httpPipeline;

    /**
     * Gets The HTTP pipeline to send requests through.
     * 
     * @return the httpPipeline value.
     */
    public HttpPipeline getHttpPipeline() {
        return this.httpPipeline;
    }

    /**
     * The serializer to serialize an object into a string.
     */
    private final SerializerAdapter serializerAdapter;

    /**
     * Gets The serializer to serialize an object into a string.
     * 
     * @return the serializerAdapter value.
     */
    public SerializerAdapter getSerializerAdapter() {
        return this.serializerAdapter;
    }

    /**
     * Initializes an instance of AzureCompanionClient client.
     * 
     * @param endpoint Supported Cognitive Services endpoints (protocol and hostname, for example:
     * https://westus.api.cognitive.microsoft.com).
     * @param serviceVersion Service version.
     */
    public AzureCompanionClientImpl(String endpoint, AzureOpenAIServiceVersion serviceVersion) {
        this(new HttpPipelineBuilder().policies(new UserAgentPolicy(), new RetryPolicy()).build(),
            JacksonAdapter.createDefaultSerializerAdapter(), endpoint, serviceVersion);
    }

    /**
     * Initializes an instance of AzureCompanionClient client.
     * 
     * @param httpPipeline The HTTP pipeline to send requests through.
     * @param endpoint Supported Cognitive Services endpoints (protocol and hostname, for example:
     * https://westus.api.cognitive.microsoft.com).
     * @param serviceVersion Service version.
     */
    public AzureCompanionClientImpl(HttpPipeline httpPipeline, String endpoint,
        AzureOpenAIServiceVersion serviceVersion) {
        this(httpPipeline, JacksonAdapter.createDefaultSerializerAdapter(), endpoint, serviceVersion);
    }

    /**
     * Initializes an instance of AzureCompanionClient client.
     * 
     * @param httpPipeline The HTTP pipeline to send requests through.
     * @param serializerAdapter The serializer to serialize an object into a string.
     * @param endpoint Supported Cognitive Services endpoints (protocol and hostname, for example:
     * https://westus.api.cognitive.microsoft.com).
     * @param serviceVersion Service version.
     */
    public AzureCompanionClientImpl(HttpPipeline httpPipeline, SerializerAdapter serializerAdapter, String endpoint,
        AzureOpenAIServiceVersion serviceVersion) {
        this.httpPipeline = httpPipeline;
        this.serializerAdapter = serializerAdapter;
        this.endpoint = endpoint;
        this.serviceVersion = serviceVersion;
        this.service
            = RestProxy.create(AzureCompanionClientService.class, this.httpPipeline, this.getSerializerAdapter());
    }

    /**
     * The interface defining all the services for AzureCompanionClient to be used by the proxy service to perform REST
     * calls.
     */
    @Host("{endpoint}/openai")
    @ServiceInterface(name = "AzureCompanionClient")
    public interface AzureCompanionClientService {
        @Post("/deployments/{deployment_id}/chat")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> createResponse(@HostParam("endpoint") String endpoint,
            @PathParam("deployment_id") String deploymentId, @QueryParam("api-version") String apiVersion,
            @HeaderParam("Content-Type") String contentType, @HeaderParam("Accept") String accept,
            @BodyParam("application/json") BinaryData request, RequestOptions requestOptions, Context context);

        @Post("/deployments/{deployment_id}/chat")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Response<BinaryData> createResponseSync(@HostParam("endpoint") String endpoint,
            @PathParam("deployment_id") String deploymentId, @QueryParam("api-version") String apiVersion,
            @HeaderParam("Content-Type") String contentType, @HeaderParam("Accept") String accept,
            @BodyParam("application/json") BinaryData request, RequestOptions requestOptions, Context context);
    }

    /**
     * Creates a completion for the chat message.
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     metadata (Optional): {
     *         String: String (Required)
     *     }
     *     temperature: Double (Optional)
     *     top_p: Double (Optional)
     *     user: String (Optional)
     *     messages (Required): [
     *          (Required){
     *             role: String (Required)
     *         }
     *     ]
     *     modalities (Optional): [
     *         String(text/audio) (Optional)
     *     ]
     *     reasoning_effort: String(low/medium/high) (Optional)
     *     max_completion_tokens: Integer (Optional)
     *     frequency_penalty: Double (Optional)
     *     presence_penalty: Double (Optional)
     *     web_search_options (Optional): {
     *         user_location (Optional): {
     *             type: String (Required)
     *             approximate (Required): {
     *                 country: String (Optional)
     *                 region: String (Optional)
     *                 city: String (Optional)
     *                 timezone: String (Optional)
     *             }
     *         }
     *         search_context_size: String(low/medium/high) (Optional)
     *     }
     *     top_logprobs: Integer (Optional)
     *     response_format (Optional): {
     *         type: String (Required)
     *     }
     *     audio (Optional): {
     *         voice: String(alloy/ash/ballad/coral/echo/sage/shimmer/verse) (Required)
     *         format: String(wav/mp3/flac/opus/pcm16) (Required)
     *     }
     *     store: Boolean (Optional)
     *     stream: Boolean (Optional)
     *     stop: BinaryData (Optional)
     *     logit_bias (Optional): {
     *         String: int (Required)
     *     }
     *     logprobs: Boolean (Optional)
     *     max_tokens: Integer (Optional)
     *     n: Integer (Optional)
     *     prediction (Optional): {
     *         type: String(content) (Required)
     *     }
     *     seed: Long (Optional)
     *     stream_options (Optional): {
     *         include_usage: Boolean (Optional)
     *     }
     *     tools (Optional): [
     *          (Optional){
     *             type: String (Required)
     *             function (Required): {
     *                 description: String (Optional)
     *                 name: String (Required)
     *                 parameters: BinaryData (Optional)
     *                 strict: Boolean (Optional)
     *             }
     *         }
     *     ]
     *     tool_choice: BinaryData (Optional)
     *     parallel_tool_calls: Boolean (Optional)
     *     function_call: BinaryData (Optional)
     *     functions (Optional): [
     *          (Optional){
     *             description: String (Optional)
     *             name: String (Required)
     *             parameters: BinaryData (Optional)
     *         }
     *     ]
     *     data_sources (Optional): [
     *          (Optional){
     *             type: String (Required)
     *         }
     *     ]
     *     user_security_context (Optional): {
     *         application_name: String (Optional)
     *         end_user_id: String (Optional)
     *         end_user_tenant_id: String (Optional)
     *         source_ip: String (Optional)
     *     }
     * }
     * }
     * </pre>
     * 
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     error (Optional): {
     *         code: String (Optional)
     *         message: String (Optional)
     *         param: String (Optional)
     *         type: String (Optional)
     *         inner_error (Optional): {
     *             code: String(ResponsibleAIPolicyViolation) (Optional)
     *             revised_prompt: String (Optional)
     *             content_filter_results (Optional): {
     *                 prompt_index: Integer (Optional)
     *                 content_filter_results (Optional): {
     *                     sexual (Optional): {
     *                         filtered: boolean (Required)
     *                         severity: String(safe/low/medium/high) (Required)
     *                     }
     *                     hate (Optional): (recursive schema, see hate above)
     *                     violence (Optional): (recursive schema, see violence above)
     *                     self_harm (Optional): (recursive schema, see self_harm above)
     *                     profanity (Optional): {
     *                         filtered: boolean (Required)
     *                         detected: boolean (Required)
     *                     }
     *                     custom_blocklists (Optional): {
     *                         filtered: boolean (Required)
     *                         details (Optional): [
     *                              (Optional){
     *                                 filtered: boolean (Required)
     *                                 id: String (Required)
     *                             }
     *                         ]
     *                     }
     *                     error (Optional): {
     *                         code: int (Required)
     *                         message: String (Required)
     *                     }
     *                     jailbreak (Required): (recursive schema, see jailbreak above)
     *                     indirect_attack (Required): (recursive schema, see indirect_attack above)
     *                 }
     *             }
     *         }
     *     }
     * }
     * }
     * </pre>
     * 
     * @param deploymentId Deployment ID of the model to use with this operation.
     * @param accept The accept parameter.
     * @param request The request parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return a structured representation of an error on an Azure OpenAI request along with {@link Response} on
     * successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> createResponseWithResponseAsync(String deploymentId, String accept,
        BinaryData request, RequestOptions requestOptions) {
        final String contentType = "application/json";
        return FluxUtil.withContext(context -> service.createResponse(this.getEndpoint(), deploymentId,
            this.getServiceVersion().getVersion(), contentType, accept, request, requestOptions, context));
    }

    /**
     * Creates a completion for the chat message.
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     metadata (Optional): {
     *         String: String (Required)
     *     }
     *     temperature: Double (Optional)
     *     top_p: Double (Optional)
     *     user: String (Optional)
     *     messages (Required): [
     *          (Required){
     *             role: String (Required)
     *         }
     *     ]
     *     modalities (Optional): [
     *         String(text/audio) (Optional)
     *     ]
     *     reasoning_effort: String(low/medium/high) (Optional)
     *     max_completion_tokens: Integer (Optional)
     *     frequency_penalty: Double (Optional)
     *     presence_penalty: Double (Optional)
     *     web_search_options (Optional): {
     *         user_location (Optional): {
     *             type: String (Required)
     *             approximate (Required): {
     *                 country: String (Optional)
     *                 region: String (Optional)
     *                 city: String (Optional)
     *                 timezone: String (Optional)
     *             }
     *         }
     *         search_context_size: String(low/medium/high) (Optional)
     *     }
     *     top_logprobs: Integer (Optional)
     *     response_format (Optional): {
     *         type: String (Required)
     *     }
     *     audio (Optional): {
     *         voice: String(alloy/ash/ballad/coral/echo/sage/shimmer/verse) (Required)
     *         format: String(wav/mp3/flac/opus/pcm16) (Required)
     *     }
     *     store: Boolean (Optional)
     *     stream: Boolean (Optional)
     *     stop: BinaryData (Optional)
     *     logit_bias (Optional): {
     *         String: int (Required)
     *     }
     *     logprobs: Boolean (Optional)
     *     max_tokens: Integer (Optional)
     *     n: Integer (Optional)
     *     prediction (Optional): {
     *         type: String(content) (Required)
     *     }
     *     seed: Long (Optional)
     *     stream_options (Optional): {
     *         include_usage: Boolean (Optional)
     *     }
     *     tools (Optional): [
     *          (Optional){
     *             type: String (Required)
     *             function (Required): {
     *                 description: String (Optional)
     *                 name: String (Required)
     *                 parameters: BinaryData (Optional)
     *                 strict: Boolean (Optional)
     *             }
     *         }
     *     ]
     *     tool_choice: BinaryData (Optional)
     *     parallel_tool_calls: Boolean (Optional)
     *     function_call: BinaryData (Optional)
     *     functions (Optional): [
     *          (Optional){
     *             description: String (Optional)
     *             name: String (Required)
     *             parameters: BinaryData (Optional)
     *         }
     *     ]
     *     data_sources (Optional): [
     *          (Optional){
     *             type: String (Required)
     *         }
     *     ]
     *     user_security_context (Optional): {
     *         application_name: String (Optional)
     *         end_user_id: String (Optional)
     *         end_user_tenant_id: String (Optional)
     *         source_ip: String (Optional)
     *     }
     * }
     * }
     * </pre>
     * 
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     error (Optional): {
     *         code: String (Optional)
     *         message: String (Optional)
     *         param: String (Optional)
     *         type: String (Optional)
     *         inner_error (Optional): {
     *             code: String(ResponsibleAIPolicyViolation) (Optional)
     *             revised_prompt: String (Optional)
     *             content_filter_results (Optional): {
     *                 prompt_index: Integer (Optional)
     *                 content_filter_results (Optional): {
     *                     sexual (Optional): {
     *                         filtered: boolean (Required)
     *                         severity: String(safe/low/medium/high) (Required)
     *                     }
     *                     hate (Optional): (recursive schema, see hate above)
     *                     violence (Optional): (recursive schema, see violence above)
     *                     self_harm (Optional): (recursive schema, see self_harm above)
     *                     profanity (Optional): {
     *                         filtered: boolean (Required)
     *                         detected: boolean (Required)
     *                     }
     *                     custom_blocklists (Optional): {
     *                         filtered: boolean (Required)
     *                         details (Optional): [
     *                              (Optional){
     *                                 filtered: boolean (Required)
     *                                 id: String (Required)
     *                             }
     *                         ]
     *                     }
     *                     error (Optional): {
     *                         code: int (Required)
     *                         message: String (Required)
     *                     }
     *                     jailbreak (Required): (recursive schema, see jailbreak above)
     *                     indirect_attack (Required): (recursive schema, see indirect_attack above)
     *                 }
     *             }
     *         }
     *     }
     * }
     * }
     * </pre>
     * 
     * @param deploymentId Deployment ID of the model to use with this operation.
     * @param accept The accept parameter.
     * @param request The request parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return a structured representation of an error on an Azure OpenAI request along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> createResponseWithResponse(String deploymentId, String accept, BinaryData request,
        RequestOptions requestOptions) {
        final String contentType = "application/json";
        return service.createResponseSync(this.getEndpoint(), deploymentId, this.getServiceVersion().getVersion(),
            contentType, accept, request, requestOptions, Context.NONE);
    }
}
