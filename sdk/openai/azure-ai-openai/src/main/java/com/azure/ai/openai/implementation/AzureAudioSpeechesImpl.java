// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.openai.implementation;

import com.azure.ai.openai.AzureOpenAIServiceVersion;
import io.clientcore.core.annotation.ServiceInterface;
import io.clientcore.core.http.RestProxy;
import io.clientcore.core.http.annotation.BodyParam;
import io.clientcore.core.http.annotation.HeaderParam;
import io.clientcore.core.http.annotation.HostParam;
import io.clientcore.core.http.annotation.HttpRequestInformation;
import io.clientcore.core.http.annotation.PathParam;
import io.clientcore.core.http.annotation.QueryParam;
import io.clientcore.core.http.annotation.UnexpectedResponseExceptionDetail;
import io.clientcore.core.http.exception.HttpResponseException;
import io.clientcore.core.http.models.HttpMethod;
import io.clientcore.core.http.models.RequestOptions;
import io.clientcore.core.http.models.Response;
import io.clientcore.core.util.binarydata.BinaryData;

/**
 * An instance of this class provides access to all the operations defined in AzureAudioSpeeches.
 */
public final class AzureAudioSpeechesImpl {
    /**
     * The proxy service used to perform REST calls.
     */
    private final AzureAudioSpeechesService service;

    /**
     * The service client containing this operation class.
     */
    private final AzureOpenAIClientImpl client;

    /**
     * Initializes an instance of AzureAudioSpeechesImpl.
     * 
     * @param client the instance of the service client containing this operation class.
     */
    AzureAudioSpeechesImpl(AzureOpenAIClientImpl client) {
        this.service = RestProxy.create(AzureAudioSpeechesService.class, client.getHttpPipeline());
        this.client = client;
    }

    /**
     * Gets Service version.
     * 
     * @return the serviceVersion value.
     */
    public AzureOpenAIServiceVersion getServiceVersion() {
        return client.getServiceVersion();
    }

    /**
     * The interface defining all the services for AzureOpenAIClientAzureAudioSpeeches to be used by the proxy service
     * to perform REST calls.
     */
    @ServiceInterface(name = "AzureOpenAIClientAzu", host = "{endpoint}/openai")
    public interface AzureAudioSpeechesService {
        // @Multipart not supported by RestProxy
        @HttpRequestInformation(
            method = HttpMethod.POST,
            path = "/deployments/{deployment_id}/audio/speech",
            expectedStatusCodes = { 200 })
        @UnexpectedResponseExceptionDetail
        Response<BinaryData> speechCreateSync(@HostParam("endpoint") String endpoint,
            @PathParam("deployment_id") String deploymentId, @QueryParam("api-version") String apiVersion,
            @HeaderParam("content-type") String contentType, @HeaderParam("Accept") String accept,
            @BodyParam("multipart/form-data") BinaryData request, RequestOptions requestOptions);
    }

    /**
     * Generates text-to-speech audio from the input text.
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * BinaryData
     * }
     * </pre>
     * 
     * @param deploymentId Deployment ID of the model to use with this operation.
     * @param request The request parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the service returns an error.
     * @return the response.
     */
    public Response<BinaryData> speechCreateWithResponse(String deploymentId, BinaryData request,
        RequestOptions requestOptions) {
        final String contentType = "multipart/form-data";
        final String accept = "application/octet-stream";
        return service.speechCreateSync(this.client.getEndpoint(), deploymentId,
            this.client.getServiceVersion().getVersion(), contentType, accept, request, requestOptions);
    }
}
