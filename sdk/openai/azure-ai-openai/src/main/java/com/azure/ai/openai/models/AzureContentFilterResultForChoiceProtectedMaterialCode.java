// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.openai.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The AzureContentFilterResultForChoiceProtectedMaterialCode model.
 */
@Immutable
public final class AzureContentFilterResultForChoiceProtectedMaterialCode
    implements JsonSerializable<AzureContentFilterResultForChoiceProtectedMaterialCode> {
    /*
     * Whether the content detection resulted in a content filtering action.
     */
    @Generated
    private final boolean filtered;

    /*
     * Whether the labeled content category was detected in the content.
     */
    @Generated
    private final boolean detected;

    /*
     * If available, the citation details describing the associated license and its location.
     */
    @Generated
    private AzureContentFilterResultForChoiceProtectedMaterialCodeCitation citation;

    /**
     * Creates an instance of AzureContentFilterResultForChoiceProtectedMaterialCode class.
     * 
     * @param filtered the filtered value to set.
     * @param detected the detected value to set.
     */
    @Generated
    private AzureContentFilterResultForChoiceProtectedMaterialCode(boolean filtered, boolean detected) {
        this.filtered = filtered;
        this.detected = detected;
    }

    /**
     * Get the filtered property: Whether the content detection resulted in a content filtering action.
     * 
     * @return the filtered value.
     */
    @Generated
    public boolean isFiltered() {
        return this.filtered;
    }

    /**
     * Get the detected property: Whether the labeled content category was detected in the content.
     * 
     * @return the detected value.
     */
    @Generated
    public boolean isDetected() {
        return this.detected;
    }

    /**
     * Get the citation property: If available, the citation details describing the associated license and its location.
     * 
     * @return the citation value.
     */
    @Generated
    public AzureContentFilterResultForChoiceProtectedMaterialCodeCitation getCitation() {
        return this.citation;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("filtered", this.filtered);
        jsonWriter.writeBooleanField("detected", this.detected);
        jsonWriter.writeJsonField("citation", this.citation);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureContentFilterResultForChoiceProtectedMaterialCode from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureContentFilterResultForChoiceProtectedMaterialCode if the JsonReader was pointing to
     * an instance of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AzureContentFilterResultForChoiceProtectedMaterialCode.
     */
    @Generated
    public static AzureContentFilterResultForChoiceProtectedMaterialCode fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            boolean filtered = false;
            boolean detected = false;
            AzureContentFilterResultForChoiceProtectedMaterialCodeCitation citation = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("filtered".equals(fieldName)) {
                    filtered = reader.getBoolean();
                } else if ("detected".equals(fieldName)) {
                    detected = reader.getBoolean();
                } else if ("citation".equals(fieldName)) {
                    citation = AzureContentFilterResultForChoiceProtectedMaterialCodeCitation.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }
            AzureContentFilterResultForChoiceProtectedMaterialCode deserializedAzureContentFilterResultForChoiceProtectedMaterialCode
                = new AzureContentFilterResultForChoiceProtectedMaterialCode(filtered, detected);
            deserializedAzureContentFilterResultForChoiceProtectedMaterialCode.citation = citation;

            return deserializedAzureContentFilterResultForChoiceProtectedMaterialCode;
        });
    }
}
