// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.openai.responses.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Emitted when code snippet output is finalized by the code interpreter.
 */
@Immutable
public final class ResponsesStreamEventCodeInterpreterCallCodeDone extends ResponsesStreamEvent {
    /*
     * The type property.
     */
    @Generated
    private ResponsesStreamEventType type = ResponsesStreamEventType.RESPONSE_CODE_INTERPRETER_CALL_CODE_DONE;

    /*
     * The ID of the response that this stream event is associated with.
     */
    @Generated
    private final String responseId;

    /*
     * The index of the output item within the response that this stream event applies to.
     */
    @Generated
    private final int outputIndex;

    /*
     * The final code snippet output by the code interpreter.
     */
    @Generated
    private final String code;

    /**
     * Creates an instance of ResponsesStreamEventCodeInterpreterCallCodeDone class.
     * 
     * @param responseId the responseId value to set.
     * @param outputIndex the outputIndex value to set.
     * @param code the code value to set.
     */
    @Generated
    private ResponsesStreamEventCodeInterpreterCallCodeDone(String responseId, int outputIndex, String code) {
        this.responseId = responseId;
        this.outputIndex = outputIndex;
        this.code = code;
    }

    /**
     * Get the type property: The type property.
     * 
     * @return the type value.
     */
    @Generated
    @Override
    public ResponsesStreamEventType getType() {
        return this.type;
    }

    /**
     * Get the responseId property: The ID of the response that this stream event is associated with.
     * 
     * @return the responseId value.
     */
    @Generated
    public String getResponseId() {
        return this.responseId;
    }

    /**
     * Get the outputIndex property: The index of the output item within the response that this stream event applies to.
     * 
     * @return the outputIndex value.
     */
    @Generated
    public int getOutputIndex() {
        return this.outputIndex;
    }

    /**
     * Get the code property: The final code snippet output by the code interpreter.
     * 
     * @return the code value.
     */
    @Generated
    public String getCode() {
        return this.code;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("response_id", this.responseId);
        jsonWriter.writeIntField("output_index", this.outputIndex);
        jsonWriter.writeStringField("code", this.code);
        jsonWriter.writeStringField("type", this.type == null ? null : this.type.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ResponsesStreamEventCodeInterpreterCallCodeDone from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ResponsesStreamEventCodeInterpreterCallCodeDone if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the ResponsesStreamEventCodeInterpreterCallCodeDone.
     */
    @Generated
    public static ResponsesStreamEventCodeInterpreterCallCodeDone fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String responseId = null;
            int outputIndex = 0;
            String code = null;
            ResponsesStreamEventType type = ResponsesStreamEventType.RESPONSE_CODE_INTERPRETER_CALL_CODE_DONE;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("response_id".equals(fieldName)) {
                    responseId = reader.getString();
                } else if ("output_index".equals(fieldName)) {
                    outputIndex = reader.getInt();
                } else if ("code".equals(fieldName)) {
                    code = reader.getString();
                } else if ("type".equals(fieldName)) {
                    type = ResponsesStreamEventType.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }
            ResponsesStreamEventCodeInterpreterCallCodeDone deserializedResponsesStreamEventCodeInterpreterCallCodeDone
                = new ResponsesStreamEventCodeInterpreterCallCodeDone(responseId, outputIndex, code);
            deserializedResponsesStreamEventCodeInterpreterCallCodeDone.type = type;

            return deserializedResponsesStreamEventCodeInterpreterCallCodeDone;
        });
    }
}
