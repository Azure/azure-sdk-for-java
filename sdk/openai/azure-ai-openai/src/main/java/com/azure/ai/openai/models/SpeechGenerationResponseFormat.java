// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.openai.models;

import io.clientcore.core.annotation.Metadata;
import io.clientcore.core.util.ExpandableEnum;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Map;
import java.util.Objects;
import java.util.concurrent.ConcurrentHashMap;
import java.util.function.Function;

/**
 * The supported audio output formats for text-to-speech.
 */
public final class SpeechGenerationResponseFormat implements ExpandableEnum<String> {
    private static final Map<String, SpeechGenerationResponseFormat> VALUES = new ConcurrentHashMap<>();

    private static final Function<String, SpeechGenerationResponseFormat> NEW_INSTANCE
        = SpeechGenerationResponseFormat::new;

    /**
     * Use MP3 as the audio output format. MP3 is the default, general-purpose format.
     */
    @Metadata(generated = true)
    public static final SpeechGenerationResponseFormat MP3 = fromValue("mp3");

    /**
     * Use Opus as the audio output format. Opus is optimized for internet streaming and low latency.
     */
    @Metadata(generated = true)
    public static final SpeechGenerationResponseFormat OPUS = fromValue("opus");

    /**
     * Use AAC as the audio output format. AAC is optimized for digital audio compression and is preferred by YouTube,
     * Android, and iOS.
     */
    @Metadata(generated = true)
    public static final SpeechGenerationResponseFormat AAC = fromValue("aac");

    /**
     * Use FLAC as the audio output format. FLAC is a fully lossless format optimized for maximum quality at the expense
     * of size.
     */
    @Metadata(generated = true)
    public static final SpeechGenerationResponseFormat FLAC = fromValue("flac");

    /**
     * Use uncompressed WAV as the audio output format, suitable for low-latency applications to avoid decoding
     * overhead.
     */
    @Metadata(generated = true)
    public static final SpeechGenerationResponseFormat WAV = fromValue("wav");

    /**
     * Use uncompressed PCM as the audio output format, which is similar to WAV but contains raw samples in 24kHz
     * (16-bit signed, low-endian), without the header.
     */
    @Metadata(generated = true)
    public static final SpeechGenerationResponseFormat PCM = fromValue("pcm");

    private final String value;

    private SpeechGenerationResponseFormat(String value) {
        this.value = value;
    }

    /**
     * Creates or finds a SpeechGenerationResponseFormat.
     * 
     * @param value a value to look for.
     * @return the corresponding SpeechGenerationResponseFormat.
     * @throws IllegalArgumentException if value is null.
     */
    @Metadata(generated = true)
    public static SpeechGenerationResponseFormat fromValue(String value) {
        if (value == null) {
            throw new IllegalArgumentException("'value' cannot be null.");
        }
        return VALUES.computeIfAbsent(value, NEW_INSTANCE);
    }

    /**
     * Gets known SpeechGenerationResponseFormat values.
     * 
     * @return Known SpeechGenerationResponseFormat values.
     */
    @Metadata(generated = true)
    public static Collection<SpeechGenerationResponseFormat> values() {
        return new ArrayList<>(VALUES.values());
    }

    /**
     * Gets the value of the SpeechGenerationResponseFormat instance.
     * 
     * @return the value of the SpeechGenerationResponseFormat instance.
     */
    @Metadata(generated = true)
    @Override
    public String getValue() {
        return this.value;
    }

    @Metadata(generated = true)
    @Override
    public String toString() {
        return Objects.toString(this.value);
    }

    @Metadata(generated = true)
    @Override
    public boolean equals(Object obj) {
        return this == obj;
    }

    @Metadata(generated = true)
    @Override
    public int hashCode() {
        return Objects.hashCode(this.value);
    }
}
