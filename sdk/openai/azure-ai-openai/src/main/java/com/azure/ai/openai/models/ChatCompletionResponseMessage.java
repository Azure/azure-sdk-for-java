// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.openai.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * If the audio output modality is requested, this object contains data
 * about the audio response from the model.
 */
@Immutable
public final class ChatCompletionResponseMessage implements JsonSerializable<ChatCompletionResponseMessage> {

    /*
     * The contents of the message.
     */
    @Generated
    private final String content;

    /*
     * The refusal message generated by the model.
     */
    @Generated
    private final String refusal;

    /*
     * The tool_calls property.
     */
    @Generated
    private List<ChatCompletionMessageToolCall> toolCalls;

    /*
     * Annotations for the message, when applicable, as when using the
     * [web search tool](/docs/guides/tools-web-search?api-mode=chat).
     */
    @Generated
    private List<ChatCompletionResponseMessageAnnotation> annotations;

    /*
     * The role of the author of this message.
     */
    @Generated
    private final String role = "assistant";

    /*
     * Deprecated and replaced by `tool_calls`. The name and arguments of a function that should be called, as generated
     * by the model.
     */
    @Generated
    private ChatCompletionResponseMessageFunctionCall functionCall;

    /*
     * If the audio output modality is requested, this object contains data
     * about the audio response from the model. [Learn more](/docs/guides/audio).
     */
    @Generated
    private ChatCompletionResponseMessageAudio audio;

    /**
     * Creates an instance of ChatCompletionResponseMessage class.
     *
     * @param content the content value to set.
     * @param refusal the refusal value to set.
     */
    @Generated
    private ChatCompletionResponseMessage(String content, String refusal) {
        this.content = content;
        this.refusal = refusal;
    }

    /**
     * Get the content property: The contents of the message.
     *
     * @return the content value.
     */
    @Generated
    public String getContent() {
        return this.content;
    }

    /**
     * Get the refusal property: The refusal message generated by the model.
     *
     * @return the refusal value.
     */
    @Generated
    public String getRefusal() {
        return this.refusal;
    }

    /**
     * Get the toolCalls property: The tool_calls property.
     *
     * @return the toolCalls value.
     */
    @Generated
    public List<ChatCompletionMessageToolCall> getToolCalls() {
        return this.toolCalls;
    }

    /**
     * Get the annotations property: Annotations for the message, when applicable, as when using the
     * [web search tool](/docs/guides/tools-web-search?api-mode=chat).
     *
     * @return the annotations value.
     */
    @Generated
    public List<ChatCompletionResponseMessageAnnotation> getAnnotations() {
        return this.annotations;
    }

    /**
     * Get the role property: The role of the author of this message.
     *
     * @return the role value.
     */
    @Generated
    public String getRole() {
        return this.role;
    }

    /**
     * Get the functionCall property: Deprecated and replaced by `tool_calls`. The name and arguments of a function that
     * should be called, as generated by the model.
     *
     * @return the functionCall value.
     */
    @Generated
    public ChatCompletionResponseMessageFunctionCall getFunctionCall() {
        return this.functionCall;
    }

    /**
     * Get the audio property: If the audio output modality is requested, this object contains data
     * about the audio response from the model. [Learn more](/docs/guides/audio).
     *
     * @return the audio value.
     */
    @Generated
    public ChatCompletionResponseMessageAudio getAudio() {
        return this.audio;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("content", this.content);
        jsonWriter.writeStringField("refusal", this.refusal);
        jsonWriter.writeStringField("role", this.role);
        jsonWriter.writeArrayField("tool_calls", this.toolCalls, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeArrayField("annotations", this.annotations, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeJsonField("function_call", this.functionCall);
        jsonWriter.writeJsonField("audio", this.audio);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ChatCompletionResponseMessage from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of ChatCompletionResponseMessage if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the ChatCompletionResponseMessage.
     */
    @Generated
    public static ChatCompletionResponseMessage fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String content = null;
            String refusal = null;
            List<ChatCompletionMessageToolCall> toolCalls = null;
            List<ChatCompletionResponseMessageAnnotation> annotations = null;
            ChatCompletionResponseMessageFunctionCall functionCall = null;
            ChatCompletionResponseMessageAudio audio = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("content".equals(fieldName)) {
                    content = reader.getString();
                } else if ("refusal".equals(fieldName)) {
                    refusal = reader.getString();
                } else if ("tool_calls".equals(fieldName)) {
                    toolCalls = reader.readArray(reader1 -> ChatCompletionMessageToolCall.fromJson(reader1));
                } else if ("annotations".equals(fieldName)) {
                    annotations
                        = reader.readArray(reader1 -> ChatCompletionResponseMessageAnnotation.fromJson(reader1));
                } else if ("function_call".equals(fieldName)) {
                    functionCall = ChatCompletionResponseMessageFunctionCall.fromJson(reader);
                } else if ("audio".equals(fieldName)) {
                    audio = ChatCompletionResponseMessageAudio.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }
            ChatCompletionResponseMessage deserializedChatCompletionResponseMessage
                = new ChatCompletionResponseMessage(content, refusal);
            deserializedChatCompletionResponseMessage.toolCalls = toolCalls;
            deserializedChatCompletionResponseMessage.annotations = annotations;
            deserializedChatCompletionResponseMessage.functionCall = functionCall;
            deserializedChatCompletionResponseMessage.audio = audio;
            return deserializedChatCompletionResponseMessage;
        });
    }
}
