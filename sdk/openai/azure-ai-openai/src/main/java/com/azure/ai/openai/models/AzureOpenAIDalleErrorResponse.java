// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.openai.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * A structured representation of an error on an Azure OpenAI request.
 */
@Immutable
public final class AzureOpenAIDalleErrorResponse implements JsonSerializable<AzureOpenAIDalleErrorResponse> {
    /*
     * The error property.
     */
    @Generated
    private AzureOpenAIDalleError error;

    /**
     * Creates an instance of AzureOpenAIDalleErrorResponse class.
     */
    @Generated
    private AzureOpenAIDalleErrorResponse() {
    }

    /**
     * Get the error property: The error property.
     * 
     * @return the error value.
     */
    @Generated
    public AzureOpenAIDalleError getError() {
        return this.error;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("error", this.error);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureOpenAIDalleErrorResponse from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureOpenAIDalleErrorResponse if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AzureOpenAIDalleErrorResponse.
     */
    @Generated
    public static AzureOpenAIDalleErrorResponse fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AzureOpenAIDalleErrorResponse deserializedAzureOpenAIDalleErrorResponse
                = new AzureOpenAIDalleErrorResponse();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("error".equals(fieldName)) {
                    deserializedAzureOpenAIDalleErrorResponse.error = AzureOpenAIDalleError.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAzureOpenAIDalleErrorResponse;
        });
    }
}
