// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.openai.models;

import io.clientcore.core.annotation.Metadata;
import io.clientcore.core.annotation.TypeConditions;
import io.clientcore.core.serialization.json.JsonReader;
import io.clientcore.core.serialization.json.JsonSerializable;
import io.clientcore.core.serialization.json.JsonToken;
import io.clientcore.core.serialization.json.JsonWriter;
import java.io.IOException;

/**
 * A labeled content filter result item that indicates whether the content was detected and whether the content was
 * filtered.
 */
@Metadata(conditions = { TypeConditions.IMMUTABLE })
public final class AzureContentFilterDetectionResult implements JsonSerializable<AzureContentFilterDetectionResult> {
    /*
     * Whether the content detection resulted in a content filtering action.
     */
    @Metadata(generated = true)
    private final boolean filtered;

    /*
     * Whether the labeled content category was detected in the content.
     */
    @Metadata(generated = true)
    private final boolean detected;

    /**
     * Creates an instance of AzureContentFilterDetectionResult class.
     * 
     * @param filtered the filtered value to set.
     * @param detected the detected value to set.
     */
    @Metadata(generated = true)
    private AzureContentFilterDetectionResult(boolean filtered, boolean detected) {
        this.filtered = filtered;
        this.detected = detected;
    }

    /**
     * Get the filtered property: Whether the content detection resulted in a content filtering action.
     * 
     * @return the filtered value.
     */
    @Metadata(generated = true)
    public boolean isFiltered() {
        return this.filtered;
    }

    /**
     * Get the detected property: Whether the labeled content category was detected in the content.
     * 
     * @return the detected value.
     */
    @Metadata(generated = true)
    public boolean isDetected() {
        return this.detected;
    }

    /**
     * {@inheritDoc}
     */
    @Metadata(generated = true)
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("filtered", this.filtered);
        jsonWriter.writeBooleanField("detected", this.detected);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureContentFilterDetectionResult from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureContentFilterDetectionResult if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AzureContentFilterDetectionResult.
     */
    @Metadata(generated = true)
    public static AzureContentFilterDetectionResult fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            boolean filtered = false;
            boolean detected = false;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("filtered".equals(fieldName)) {
                    filtered = reader.getBoolean();
                } else if ("detected".equals(fieldName)) {
                    detected = reader.getBoolean();
                } else {
                    reader.skipChildren();
                }
            }
            return new AzureContentFilterDetectionResult(filtered, detected);
        });
    }
}
