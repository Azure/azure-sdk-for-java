// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.
package com.azure.ai.openai.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Transcription segment. */
@Immutable
public final class AudioTranscriptionSegment {

    /*
     * Segment identifier.
     */
    @Generated
    @JsonProperty(value = "id")
    private int id;

    /*
     * Segment start offset.
     */
    @Generated
    @JsonProperty(value = "start")
    private double start;

    /*
     * Segment end offset.
     */
    @Generated
    @JsonProperty(value = "end")
    private double end;

    /*
     * Segment text.
     */
    @Generated
    @JsonProperty(value = "text")
    private String text;

    /*
     * Temperature.
     */
    @Generated
    @JsonProperty(value = "temperature")
    private double temperature;

    /*
     * Average log probability.
     */
    @Generated
    @JsonProperty(value = "avg_logprob")
    private double averageLogProb;

    /*
     * Compression ratio.
     */
    @Generated
    @JsonProperty(value = "compression_ratio")
    private double compressionRatio;

    /*
     * Probability of 'no speech'.
     */
    @Generated
    @JsonProperty(value = "no_speech_prob")
    private double noSpeechProb;

    /*
     * Tokens in this segment
     */
    @Generated
    @JsonProperty(value = "tokens")
    private List<Integer> tokens;

    /*
     * TODO
     */
    @Generated
    @JsonProperty(value = "seek")
    private int seek;

    /**
     * Get the id property: Segment identifier.
     *
     * @return the id value.
     */
    @Generated
    public int getId() {
        return this.id;
    }

    /**
     * Get the start property: Segment start offset.
     *
     * @return the start value.
     */
    @Generated
    public double getStart() {
        return this.start;
    }

    /**
     * Get the end property: Segment end offset.
     *
     * @return the end value.
     */
    @Generated
    public double getEnd() {
        return this.end;
    }

    /**
     * Get the text property: Segment text.
     *
     * @return the text value.
     */
    @Generated
    public String getText() {
        return this.text;
    }

    /**
     * Get the temperature property: Temperature.
     *
     * @return the temperature value.
     */
    @Generated
    public double getTemperature() {
        return this.temperature;
    }

    /**
     * Get the averageLogProb property: Average log probability.
     *
     * @return the averageLogProb value.
     */
    @Generated
    public double getAverageLogProb() {
        return this.averageLogProb;
    }

    /**
     * Get the compressionRatio property: Compression ratio.
     *
     * @return the compressionRatio value.
     */
    @Generated
    public double getCompressionRatio() {
        return this.compressionRatio;
    }

    /**
     * Get the noSpeechProb property: Probability of 'no speech'.
     *
     * @return the noSpeechProb value.
     */
    @Generated
    public double getNoSpeechProb() {
        return this.noSpeechProb;
    }

    /**
     * Get the tokens property: Tokens in this segment.
     *
     * @return the tokens value.
     */
    @Generated
    public List<Integer> getTokens() {
        return this.tokens;
    }

    /**
     * Get the seek property: TODO.
     *
     * @return the seek value.
     */
    @Generated
    public int getSeek() {
        return this.seek;
    }

    /**
     * Creates an instance of AudioTranscriptionSegment class.
     *
     * @param id the id value to set.
     * @param start the start value to set.
     * @param end the end value to set.
     * @param text the text value to set.
     * @param temperature the temperature value to set.
     * @param averageLogProb the averageLogProb value to set.
     * @param compressionRatio the compressionRatio value to set.
     * @param noSpeechProb the noSpeechProb value to set.
     * @param tokens the tokens value to set.
     * @param seek the seek value to set.
     */
    @Generated
    @JsonCreator
    private AudioTranscriptionSegment(
            @JsonProperty(value = "id") int id,
            @JsonProperty(value = "start") double start,
            @JsonProperty(value = "end") double end,
            @JsonProperty(value = "text") String text,
            @JsonProperty(value = "temperature") double temperature,
            @JsonProperty(value = "avg_logprob") double averageLogProb,
            @JsonProperty(value = "compression_ratio") double compressionRatio,
            @JsonProperty(value = "no_speech_prob") double noSpeechProb,
            @JsonProperty(value = "tokens") List<Integer> tokens,
            @JsonProperty(value = "seek") int seek) {
        this.id = id;
        this.start = start;
        this.end = end;
        this.text = text;
        this.temperature = temperature;
        this.averageLogProb = averageLogProb;
        this.compressionRatio = compressionRatio;
        this.noSpeechProb = noSpeechProb;
        this.tokens = tokens;
        this.seek = seek;
    }
}
