// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.openai.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * A representation of configuration data for a single Azure OpenAI chat data source.
 * This will be used by a chat completions request that should use Azure OpenAI chat extensions to augment the
 * response behavior.
 * The use of this configuration is compatible only with Azure OpenAI.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = "type", defaultImpl = AzureChatDataSource.class, visible = true)
@JsonTypeName("AzureChatDataSource")
@JsonSubTypes({
    @JsonSubTypes.Type(name = "azure_search", value = AzureSearchChatDataSource.class),
    @JsonSubTypes.Type(name = "azure_cosmos_db", value = AzureCosmosDBChatDataSource.class),
    @JsonSubTypes.Type(name = "elasticsearch", value = ElasticsearchChatDataSource.class),
    @JsonSubTypes.Type(name = "pinecone", value = PineconeChatDataSource.class),
    @JsonSubTypes.Type(name = "mongo_db", value = MongoDBChatDataSource.class) })
@Immutable
public class AzureChatDataSource {
    /*
     * The differentiating type identifier for the data source.
     */
    @Generated
    @JsonTypeId
    @JsonProperty(value = "type")
    private String type = "AzureChatDataSource";

    /**
     * Creates an instance of AzureChatDataSource class.
     */
    @Generated
    public AzureChatDataSource() {
    }

    /**
     * Get the type property: The differentiating type identifier for the data source.
     * 
     * @return the type value.
     */
    @Generated
    public String getType() {
        return this.type;
    }
}
