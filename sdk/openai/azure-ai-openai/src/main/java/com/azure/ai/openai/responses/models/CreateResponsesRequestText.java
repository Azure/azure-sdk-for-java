// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.openai.responses.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.core.util.BinaryData;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The CreateResponsesRequestText model.
 */
@Fluent
public final class CreateResponsesRequestText implements JsonSerializable<CreateResponsesRequestText> {
    /*
     * The format property.
     */
    @Generated
    private ResponsesTextFormat format;

    /*
     * The stop property.
     */
    @Generated
    private BinaryData stop;

    /**
     * Creates an instance of CreateResponsesRequestText class.
     */
    @Generated
    public CreateResponsesRequestText() {
    }

    /**
     * Get the format property: The format property.
     * 
     * @return the format value.
     */
    @Generated
    public ResponsesTextFormat getFormat() {
        return this.format;
    }

    /**
     * Set the format property: The format property.
     * 
     * @param format the format value to set.
     * @return the CreateResponsesRequestText object itself.
     */
    @Generated
    public CreateResponsesRequestText setFormat(ResponsesTextFormat format) {
        this.format = format;
        return this;
    }

    /**
     * Get the stop property: The stop property.
     * 
     * @return the stop value.
     */
    @Generated
    public BinaryData getStop() {
        return this.stop;
    }

    /**
     * Set the stop property: The stop property.
     * 
     * @param stop the stop value to set.
     * @return the CreateResponsesRequestText object itself.
     */
    @Generated
    public CreateResponsesRequestText setStop(BinaryData stop) {
        this.stop = stop;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("format", this.format);
        if (this.stop != null) {
            jsonWriter.writeFieldName("stop");
            this.stop.writeTo(jsonWriter);
        }
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CreateResponsesRequestText from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CreateResponsesRequestText if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the CreateResponsesRequestText.
     */
    @Generated
    public static CreateResponsesRequestText fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CreateResponsesRequestText deserializedCreateResponsesRequestText = new CreateResponsesRequestText();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("format".equals(fieldName)) {
                    deserializedCreateResponsesRequestText.format = ResponsesTextFormat.fromJson(reader);
                } else if ("stop".equals(fieldName)) {
                    deserializedCreateResponsesRequestText.stop
                        = reader.getNullable(nonNullReader -> BinaryData.fromObject(nonNullReader.readUntyped()));
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCreateResponsesRequestText;
        });
    }
}
