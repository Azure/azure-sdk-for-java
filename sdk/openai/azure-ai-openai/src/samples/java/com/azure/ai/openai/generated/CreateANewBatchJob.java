// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.openai.generated;

import com.azure.ai.openai.OpenAIClient;
import com.azure.ai.openai.OpenAIClientBuilder;
import com.azure.ai.openai.models.Batch;
import com.azure.ai.openai.models.BatchCreateRequest;
import com.azure.identity.DefaultAzureCredentialBuilder;
import java.util.HashMap;
import java.util.Map;

public class CreateANewBatchJob {
    public static void main(String[] args) {
        OpenAIClient openAIClient = new OpenAIClientBuilder().credential(new DefaultAzureCredentialBuilder().build())
            .endpoint("https://aoairesource.openai.azure.com")
            .buildClient();
        // BEGIN:com.azure.ai.openai.generated.createbatch.createanewbatchjob
        Batch response = openAIClient
            .createBatch(new BatchCreateRequest("/chat/completions", "file-b4fa7277f3eb4722ac18b90f46102c3f", "24h")
                .setMetadata(mapOf("batch_description", "Evaluation job")));
        // END:com.azure.ai.openai.generated.createbatch.createanewbatchjob
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
