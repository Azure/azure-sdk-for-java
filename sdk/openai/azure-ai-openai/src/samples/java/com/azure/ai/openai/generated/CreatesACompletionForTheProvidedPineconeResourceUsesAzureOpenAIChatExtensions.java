// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.openai.generated;

import com.azure.ai.openai.OpenAIClient;
import com.azure.ai.openai.OpenAIClientBuilder;
import com.azure.ai.openai.models.ChatCompletions;
import com.azure.ai.openai.models.ChatCompletionsOptions;
import com.azure.ai.openai.models.ChatRequestUserMessage;
import com.azure.ai.openai.models.OnYourDataApiKeyAuthenticationOptions;
import com.azure.ai.openai.models.OnYourDataDeploymentNameVectorizationSource;
import com.azure.ai.openai.models.PineconeChatExtensionConfiguration;
import com.azure.ai.openai.models.PineconeChatExtensionParameters;
import com.azure.ai.openai.models.PineconeFieldMappingOptions;
import com.azure.identity.DefaultAzureCredentialBuilder;

import java.util.Arrays;

public class CreatesACompletionForTheProvidedPineconeResourceUsesAzureOpenAIChatExtensions {
    public static void main(String[] args) {
        OpenAIClient openAIClient = new OpenAIClientBuilder().credential(new DefaultAzureCredentialBuilder().build())
            .endpoint("{endpoint}")
            .buildClient();
        // BEGIN:com.azure.ai.openai.generated.getchatcompletions.createsacompletionfortheprovidedpineconeresourceusesazureopenaichatextensions
        ChatCompletions response = openAIClient.getChatCompletions("<deployment-id>",
            new ChatCompletionsOptions(Arrays.asList(new ChatRequestUserMessage("can you tell me how to care for a parrot?")))
                .setDataSources(Arrays.asList(new PineconeChatExtensionConfiguration(
                    new PineconeChatExtensionParameters("{environment name}", "{index name}",
                        new PineconeFieldMappingOptions(Arrays.asList("content")).setTitleField("title")
                            .setUrlField("url")
                            .setFilepathField("filepath")
                            .setContentFieldsSeparator("\n"),
                        new OnYourDataDeploymentNameVectorizationSource("{embedding deployment name}"))
                        .setAuthentication(new OnYourDataApiKeyAuthenticationOptions("fakeTokenPlaceholder"))))));
        // END:com.azure.ai.openai.generated.getchatcompletions.createsacompletionfortheprovidedpineconeresourceusesazureopenaichatextensions
    }
}
