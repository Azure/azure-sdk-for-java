// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.openai.generated;

import com.azure.ai.openai.OpenAIClient;
import com.azure.ai.openai.OpenAIClientBuilder;
import com.azure.ai.openai.models.ChatCompletions;
import com.azure.ai.openai.models.ChatCompletionsOptions;
import com.azure.ai.openai.models.ChatRequestUserMessage;
import com.azure.ai.openai.models.ElasticsearchChatExtensionConfiguration;
import com.azure.ai.openai.models.ElasticsearchChatExtensionParameters;
import com.azure.ai.openai.models.OnYourDataKeyAndKeyIdAuthenticationOptions;
import com.azure.identity.DefaultAzureCredentialBuilder;

import java.util.Arrays;

public class CreatesACompletionForTheProvidedElasticsearchUsesAzureOpenAIChatExtensions {
    public static void main(String[] args) {
        OpenAIClient openAIClient = new OpenAIClientBuilder().credential(new DefaultAzureCredentialBuilder().build())
            .endpoint("{endpoint}")
            .buildClient();
        // BEGIN:com.azure.ai.openai.generated.getchatcompletions.createsacompletionfortheprovidedelasticsearchusesazureopenaichatextensions
        ChatCompletions response = openAIClient.getChatCompletions("<deployment-id>",
            new ChatCompletionsOptions(Arrays.asList(new ChatRequestUserMessage("can you tell me how to care for a parrot?")))
                .setDataSources(
                    Arrays.asList(new ElasticsearchChatExtensionConfiguration(new ElasticsearchChatExtensionParameters(
                        "https://your-elasticsearch-endpoint.eastus.azurecontainer.io", "{index name}")
                        .setAuthentication(new OnYourDataKeyAndKeyIdAuthenticationOptions("fakeTokenPlaceholder",
                            "fakeTokenPlaceholder"))))));
        // END:com.azure.ai.openai.generated.getchatcompletions.createsacompletionfortheprovidedelasticsearchusesazureopenaichatextensions
    }
}
