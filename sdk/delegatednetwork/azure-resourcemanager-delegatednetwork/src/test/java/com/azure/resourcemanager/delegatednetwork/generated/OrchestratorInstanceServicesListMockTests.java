// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.delegatednetwork.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.delegatednetwork.DelegatedNetworkManager;
import com.azure.resourcemanager.delegatednetwork.models.Orchestrator;
import com.azure.resourcemanager.delegatednetwork.models.OrchestratorKind;
import com.azure.resourcemanager.delegatednetwork.models.ResourceIdentityType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class OrchestratorInstanceServicesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"resourceGuid\":\"mclfplphoxuscr\",\"provisioningState\":\"Succeeded\",\"orchestratorAppId\":\"ye\",\"orchestratorTenantId\":\"bjtazqugxywpmu\",\"clusterRootCA\":\"fjz\",\"apiServerEndpoint\":\"qkqujidsu\",\"privateLinkResourceId\":\"nobglaocq\",\"controllerDetails\":{\"id\":\"ccm\"}},\"kind\":\"Kubernetes\",\"identity\":{\"principalId\":\"xy\",\"tenantId\":\"moyrxvwfudwpz\",\"type\":\"None\"},\"location\":\"hdzhlrqj\",\"tags\":{\"pycanuzbpz\":\"kfrlhrxsbky\"},\"id\":\"afkuwb\",\"name\":\"rnwb\",\"type\":\"ehhseyvjusrts\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DelegatedNetworkManager manager = DelegatedNetworkManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Orchestrator> response
            = manager.orchestratorInstanceServices().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("hdzhlrqj", response.iterator().next().location());
        Assertions.assertEquals("kfrlhrxsbky", response.iterator().next().tags().get("pycanuzbpz"));
        Assertions.assertEquals(OrchestratorKind.KUBERNETES, response.iterator().next().kind());
        Assertions.assertEquals(ResourceIdentityType.NONE, response.iterator().next().identity().type());
        Assertions.assertEquals("ye", response.iterator().next().properties().orchestratorAppId());
        Assertions.assertEquals("bjtazqugxywpmu", response.iterator().next().properties().orchestratorTenantId());
        Assertions.assertEquals("fjz", response.iterator().next().properties().clusterRootCA());
        Assertions.assertEquals("qkqujidsu", response.iterator().next().properties().apiServerEndpoint());
        Assertions.assertEquals("nobglaocq", response.iterator().next().properties().privateLinkResourceId());
        Assertions.assertEquals("ccm", response.iterator().next().properties().controllerDetails().id());
    }
}
