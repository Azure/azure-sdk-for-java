// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.delegatednetwork.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.delegatednetwork.DelegatedNetworkManager;
import com.azure.resourcemanager.delegatednetwork.models.DelegatedSubnet;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DelegatedSubnetServicesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"resourceGuid\":\"fxoblytkb\",\"provisioningState\":\"Deleting\",\"subnetDetails\":{\"id\":\"wwfbkrvrnsvshq\"},\"controllerDetails\":{\"id\":\"xc\"}},\"location\":\"sbfov\",\"tags\":{\"hsqfsubcgjbirxbp\":\"ruvw\",\"dtws\":\"bsrfbj\",\"nfqqnvwp\":\"otftpvjzbexilz\"},\"id\":\"qtaruoujmkcjhwq\",\"name\":\"tjrybnwjewgdr\",\"type\":\"ervnaenqpehi\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DelegatedNetworkManager manager = DelegatedNetworkManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<DelegatedSubnet> response
            = manager.delegatedSubnetServices().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("sbfov", response.iterator().next().location());
        Assertions.assertEquals("ruvw", response.iterator().next().tags().get("hsqfsubcgjbirxbp"));
        Assertions.assertEquals("wwfbkrvrnsvshq", response.iterator().next().subnetDetails().id());
        Assertions.assertEquals("xc", response.iterator().next().controllerDetails().id());
    }
}
