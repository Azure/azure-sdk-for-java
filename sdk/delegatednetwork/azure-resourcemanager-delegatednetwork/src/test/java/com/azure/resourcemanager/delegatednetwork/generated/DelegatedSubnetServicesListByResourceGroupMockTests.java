// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.delegatednetwork.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.delegatednetwork.DelegatedNetworkManager;
import com.azure.resourcemanager.delegatednetwork.models.DelegatedSubnet;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DelegatedSubnetServicesListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"resourceGuid\":\"fthnzdn\",\"provisioningState\":\"Deleting\",\"subnetDetails\":{\"id\":\"ayqigynduhav\"},\"controllerDetails\":{\"id\":\"kthumaqolbgycdui\"}},\"location\":\"r\",\"tags\":{\"aolps\":\"cym\",\"dnbbglzps\":\"lqlfm\",\"adbzmnvdfznud\":\"iydmcwyhzdxs\",\"xzb\":\"od\"},\"id\":\"cblylpstdbhhxsr\",\"name\":\"dzu\",\"type\":\"erscdntne\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DelegatedNetworkManager manager = DelegatedNetworkManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<DelegatedSubnet> response
            = manager.delegatedSubnetServices().listByResourceGroup("doy", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("r", response.iterator().next().location());
        Assertions.assertEquals("cym", response.iterator().next().tags().get("aolps"));
        Assertions.assertEquals("ayqigynduhav", response.iterator().next().subnetDetails().id());
        Assertions.assertEquals("kthumaqolbgycdui", response.iterator().next().controllerDetails().id());
    }
}
