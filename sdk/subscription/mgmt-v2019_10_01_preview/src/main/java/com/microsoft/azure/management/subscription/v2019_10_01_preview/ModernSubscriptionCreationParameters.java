/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.subscription.v2019_10_01_preview;

import java.util.Map;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The parameters required to create a new subscription.
 */
public class ModernSubscriptionCreationParameters {
    /**
     * The friendly name of the subscription.
     */
    @JsonProperty(value = "displayName", required = true)
    private String displayName;

    /**
     * The SKU ID of the Azure plan. Azure plan determines the pricing and
     * service-level agreement of the subscription.  Use 001 for Microsoft
     * Azure Plan and 002 for Microsoft Azure Plan for DevTest.
     */
    @JsonProperty(value = "skuId", required = true)
    private String skuId;

    /**
     * If set, the cost center will show up on the Azure usage and charges
     * file.
     */
    @JsonProperty(value = "costCenter")
    private String costCenter;

    /**
     * If specified, the AD principal will get owner access to the
     * subscription, along with the user who is performing the create
     * subscription operation.
     */
    @JsonProperty(value = "owner")
    private AdPrincipal owner;

    /**
     * The identifier of the management group to which this subscription will
     * be associated.
     */
    @JsonProperty(value = "managementGroupId")
    private String managementGroupId;

    /**
     * Additional, untyped parameters to support custom subscription creation
     * scenarios.
     */
    @JsonProperty(value = "additionalParameters")
    private Map<String, Object> additionalParameters;

    /**
     * Get the friendly name of the subscription.
     *
     * @return the displayName value
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set the friendly name of the subscription.
     *
     * @param displayName the displayName value to set
     * @return the ModernSubscriptionCreationParameters object itself.
     */
    public ModernSubscriptionCreationParameters withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the SKU ID of the Azure plan. Azure plan determines the pricing and service-level agreement of the subscription.  Use 001 for Microsoft Azure Plan and 002 for Microsoft Azure Plan for DevTest.
     *
     * @return the skuId value
     */
    public String skuId() {
        return this.skuId;
    }

    /**
     * Set the SKU ID of the Azure plan. Azure plan determines the pricing and service-level agreement of the subscription.  Use 001 for Microsoft Azure Plan and 002 for Microsoft Azure Plan for DevTest.
     *
     * @param skuId the skuId value to set
     * @return the ModernSubscriptionCreationParameters object itself.
     */
    public ModernSubscriptionCreationParameters withSkuId(String skuId) {
        this.skuId = skuId;
        return this;
    }

    /**
     * Get if set, the cost center will show up on the Azure usage and charges file.
     *
     * @return the costCenter value
     */
    public String costCenter() {
        return this.costCenter;
    }

    /**
     * Set if set, the cost center will show up on the Azure usage and charges file.
     *
     * @param costCenter the costCenter value to set
     * @return the ModernSubscriptionCreationParameters object itself.
     */
    public ModernSubscriptionCreationParameters withCostCenter(String costCenter) {
        this.costCenter = costCenter;
        return this;
    }

    /**
     * Get if specified, the AD principal will get owner access to the subscription, along with the user who is performing the create subscription operation.
     *
     * @return the owner value
     */
    public AdPrincipal owner() {
        return this.owner;
    }

    /**
     * Set if specified, the AD principal will get owner access to the subscription, along with the user who is performing the create subscription operation.
     *
     * @param owner the owner value to set
     * @return the ModernSubscriptionCreationParameters object itself.
     */
    public ModernSubscriptionCreationParameters withOwner(AdPrincipal owner) {
        this.owner = owner;
        return this;
    }

    /**
     * Get the identifier of the management group to which this subscription will be associated.
     *
     * @return the managementGroupId value
     */
    public String managementGroupId() {
        return this.managementGroupId;
    }

    /**
     * Set the identifier of the management group to which this subscription will be associated.
     *
     * @param managementGroupId the managementGroupId value to set
     * @return the ModernSubscriptionCreationParameters object itself.
     */
    public ModernSubscriptionCreationParameters withManagementGroupId(String managementGroupId) {
        this.managementGroupId = managementGroupId;
        return this;
    }

    /**
     * Get additional, untyped parameters to support custom subscription creation scenarios.
     *
     * @return the additionalParameters value
     */
    public Map<String, Object> additionalParameters() {
        return this.additionalParameters;
    }

    /**
     * Set additional, untyped parameters to support custom subscription creation scenarios.
     *
     * @param additionalParameters the additionalParameters value to set
     * @return the ModernSubscriptionCreationParameters object itself.
     */
    public ModernSubscriptionCreationParameters withAdditionalParameters(Map<String, Object> additionalParameters) {
        this.additionalParameters = additionalParameters;
        return this;
    }

}
