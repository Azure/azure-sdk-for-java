/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.subscription.v2019_10_01_preview;

import rx.Observable;

/**
 * Type representing Subscriptions.
 */
public interface Subscriptions {
    /**
     * Creates an Azure subscription.
     *
     * @param enrollmentAccountName The name of the enrollment account to which the subscription will be billed.
     * @param body The subscription creation parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<SubscriptionCreationResult> createSubscriptionInEnrollmentAccountAsync(String enrollmentAccountName, SubscriptionCreationParameters body);

    /**
     * The operation to create a new WebDirect or EA Azure subscription.
     *
     * @param billingAccountName The name of the Microsoft Customer Agreement billing account for which you want to create the subscription.
     * @param billingProfileName The name of the billing profile in the billing account for which you want to create the subscription.
     * @param invoiceSectionName The name of the invoice section in the billing account for which you want to create the subscription.
     * @param body The subscription creation parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<SubscriptionCreationResult> createSubscriptionAsync(String billingAccountName, String billingProfileName, String invoiceSectionName, ModernSubscriptionCreationParameters body);

    /**
     * The operation to create a new CSP subscription.
     *
     * @param billingAccountName The name of the Microsoft Customer Agreement billing account for which you want to create the subscription.
     * @param customerName The name of the customer.
     * @param body The subscription creation parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<SubscriptionCreationResult> createCspSubscriptionAsync(String billingAccountName, String customerName, ModernCspSubscriptionCreationParameters body);

    /**
     * The operation to cancel a subscription.
     *
     * @param subscriptionId Subscription Id.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<CanceledSubscriptionId> cancelAsync(String subscriptionId);

    /**
     * The operation to rename a subscription.
     *
     * @param subscriptionId Subscription Id.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<RenamedSubscriptionId> renameAsync(String subscriptionId);

    /**
     * The operation to enable a subscription.
     *
     * @param subscriptionId Subscription Id.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<EnabledSubscriptionId> enableAsync(String subscriptionId);

}
