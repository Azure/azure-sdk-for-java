// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.subscription.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.subscription.models.PutAliasRequest;
import com.azure.resourcemanager.subscription.models.PutAliasRequestProperties;
import com.azure.resourcemanager.subscription.models.Workload;
import org.junit.jupiter.api.Assertions;

public final class PutAliasRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PutAliasRequest model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"wckbasyypnd\",\"workload\":\"Production\",\"billingScope\":\"cbacphejkotynqg\",\"subscriptionId\":\"l\",\"resellerId\":\"dlikwyqkgfgibma\"}}")
            .toObject(PutAliasRequest.class);
        Assertions.assertEquals("wckbasyypnd", model.properties().displayName());
        Assertions.assertEquals(Workload.PRODUCTION, model.properties().workload());
        Assertions.assertEquals("cbacphejkotynqg", model.properties().billingScope());
        Assertions.assertEquals("l", model.properties().subscriptionId());
        Assertions.assertEquals("dlikwyqkgfgibma", model.properties().resellerId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PutAliasRequest model
            = new PutAliasRequest().withProperties(new PutAliasRequestProperties().withDisplayName("wckbasyypnd")
                .withWorkload(Workload.PRODUCTION)
                .withBillingScope("cbacphejkotynqg")
                .withSubscriptionId("l")
                .withResellerId("dlikwyqkgfgibma"));
        model = BinaryData.fromObject(model).toObject(PutAliasRequest.class);
        Assertions.assertEquals("wckbasyypnd", model.properties().displayName());
        Assertions.assertEquals(Workload.PRODUCTION, model.properties().workload());
        Assertions.assertEquals("cbacphejkotynqg", model.properties().billingScope());
        Assertions.assertEquals("l", model.properties().subscriptionId());
        Assertions.assertEquals("dlikwyqkgfgibma", model.properties().resellerId());
    }
}
