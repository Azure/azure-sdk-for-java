// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.subscription.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Put subscription properties.
 */
@Fluent
public final class PutAliasRequestProperties implements JsonSerializable<PutAliasRequestProperties> {
    /*
     * The friendly name of the subscription.
     */
    private String displayName;

    /*
     * The workload type of the subscription. It can be either Production or DevTest.
     */
    private Workload workload;

    /*
     * Determines whether subscription is fieldLed, partnerLed or LegacyEA
     */
    private String billingScope;

    /*
     * This parameter can be used to create alias for existing subscription Id
     */
    private String subscriptionId;

    /*
     * Reseller ID, basically MPN Id
     */
    private String resellerId;

    /**
     * Creates an instance of PutAliasRequestProperties class.
     */
    public PutAliasRequestProperties() {
    }

    /**
     * Get the displayName property: The friendly name of the subscription.
     * 
     * @return the displayName value.
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set the displayName property: The friendly name of the subscription.
     * 
     * @param displayName the displayName value to set.
     * @return the PutAliasRequestProperties object itself.
     */
    public PutAliasRequestProperties withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the workload property: The workload type of the subscription. It can be either Production or DevTest.
     * 
     * @return the workload value.
     */
    public Workload workload() {
        return this.workload;
    }

    /**
     * Set the workload property: The workload type of the subscription. It can be either Production or DevTest.
     * 
     * @param workload the workload value to set.
     * @return the PutAliasRequestProperties object itself.
     */
    public PutAliasRequestProperties withWorkload(Workload workload) {
        this.workload = workload;
        return this;
    }

    /**
     * Get the billingScope property: Determines whether subscription is fieldLed, partnerLed or LegacyEA.
     * 
     * @return the billingScope value.
     */
    public String billingScope() {
        return this.billingScope;
    }

    /**
     * Set the billingScope property: Determines whether subscription is fieldLed, partnerLed or LegacyEA.
     * 
     * @param billingScope the billingScope value to set.
     * @return the PutAliasRequestProperties object itself.
     */
    public PutAliasRequestProperties withBillingScope(String billingScope) {
        this.billingScope = billingScope;
        return this;
    }

    /**
     * Get the subscriptionId property: This parameter can be used to create alias for existing subscription Id.
     * 
     * @return the subscriptionId value.
     */
    public String subscriptionId() {
        return this.subscriptionId;
    }

    /**
     * Set the subscriptionId property: This parameter can be used to create alias for existing subscription Id.
     * 
     * @param subscriptionId the subscriptionId value to set.
     * @return the PutAliasRequestProperties object itself.
     */
    public PutAliasRequestProperties withSubscriptionId(String subscriptionId) {
        this.subscriptionId = subscriptionId;
        return this;
    }

    /**
     * Get the resellerId property: Reseller ID, basically MPN Id.
     * 
     * @return the resellerId value.
     */
    public String resellerId() {
        return this.resellerId;
    }

    /**
     * Set the resellerId property: Reseller ID, basically MPN Id.
     * 
     * @param resellerId the resellerId value to set.
     * @return the PutAliasRequestProperties object itself.
     */
    public PutAliasRequestProperties withResellerId(String resellerId) {
        this.resellerId = resellerId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("displayName", this.displayName);
        jsonWriter.writeStringField("workload", this.workload == null ? null : this.workload.toString());
        jsonWriter.writeStringField("billingScope", this.billingScope);
        jsonWriter.writeStringField("subscriptionId", this.subscriptionId);
        jsonWriter.writeStringField("resellerId", this.resellerId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of PutAliasRequestProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of PutAliasRequestProperties if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the PutAliasRequestProperties.
     */
    public static PutAliasRequestProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            PutAliasRequestProperties deserializedPutAliasRequestProperties = new PutAliasRequestProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("displayName".equals(fieldName)) {
                    deserializedPutAliasRequestProperties.displayName = reader.getString();
                } else if ("workload".equals(fieldName)) {
                    deserializedPutAliasRequestProperties.workload = Workload.fromString(reader.getString());
                } else if ("billingScope".equals(fieldName)) {
                    deserializedPutAliasRequestProperties.billingScope = reader.getString();
                } else if ("subscriptionId".equals(fieldName)) {
                    deserializedPutAliasRequestProperties.subscriptionId = reader.getString();
                } else if ("resellerId".equals(fieldName)) {
                    deserializedPutAliasRequestProperties.resellerId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedPutAliasRequestProperties;
        });
    }
}
