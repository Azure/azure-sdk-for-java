/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.subscription.v2020_09_01;

import rx.Observable;
import com.microsoft.azure.management.subscription.v2020_09_01.implementation.SubscriptionServicesInner;
import com.microsoft.azure.arm.model.HasInner;

/**
 * Type representing SubscriptionServices.
 */
public interface SubscriptionServices extends HasInner<SubscriptionServicesInner> {
    /**
     * The operation to cancel a subscription.
     *
     * @param subscriptionId Subscription Id.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<CanceledSubscriptionId> cancelAsync(String subscriptionId);

    /**
     * The operation to rename a subscription.
     *
     * @param subscriptionId Subscription Id.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<RenamedSubscriptionId> renameAsync(String subscriptionId);

    /**
     * The operation to enable a subscription.
     *
     * @param subscriptionId Subscription Id.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<EnabledSubscriptionId> enableAsync(String subscriptionId);

}
