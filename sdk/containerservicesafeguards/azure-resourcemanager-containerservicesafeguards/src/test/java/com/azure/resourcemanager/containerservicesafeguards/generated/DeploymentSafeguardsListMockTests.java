// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.containerservicesafeguards.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.containerservicesafeguards.ContainerServiceSafeguardsManager;
import com.azure.resourcemanager.containerservicesafeguards.models.DeploymentSafeguard;
import com.azure.resourcemanager.containerservicesafeguards.models.DeploymentSafeguardsLevel;
import com.azure.resourcemanager.containerservicesafeguards.models.PodSecurityStandardsLevel;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DeploymentSafeguardsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Updating\",\"level\":\"Enforce\",\"excludedNamespaces\":[\"ugjzzdatqxhocdge\",\"blgphuticn\",\"vkaozwyiftyhxhur\",\"k\"],\"systemExcludedNamespaces\":[\"yxolniwp\",\"cukjf\",\"giawx\"],\"podSecurityStandardsLevel\":\"Privileged\"},\"eTag\":\"plwckbas\",\"id\":\"pnddhsgcbacphejk\",\"name\":\"tynqgoul\",\"type\":\"ndlik\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerServiceSafeguardsManager manager = ContainerServiceSafeguardsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<DeploymentSafeguard> response
            = manager.deploymentSafeguards().list("je", com.azure.core.util.Context.NONE);

        Assertions.assertEquals(DeploymentSafeguardsLevel.ENFORCE, response.iterator().next().properties().level());
        Assertions.assertEquals("ugjzzdatqxhocdge",
            response.iterator().next().properties().excludedNamespaces().get(0));
        Assertions.assertEquals(PodSecurityStandardsLevel.POD_SECURITY_STANDARDS_PRIVILEGED,
            response.iterator().next().properties().podSecurityStandardsLevel());
    }
}
