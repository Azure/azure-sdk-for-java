// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.containerservicesafeguards.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * DeploymentSafeguards Properties.
 */
@Fluent
public final class DeploymentSafeguardsProperties implements JsonSerializable<DeploymentSafeguardsProperties> {
    /*
     * Provisioning State
     */
    private ProvisioningState provisioningState;

    /*
     * The deployment safeguards level. Possible values are Warn and Enforce
     */
    private DeploymentSafeguardsLevel level;

    /*
     * User defined list of namespaces to exclude from Deployment Safeguards. Deployments in these namespaces will not
     * be checked against any safeguards
     */
    private List<String> excludedNamespaces;

    /*
     * System defined list of namespaces excluded from Deployment Safeguards. These are determined by the underlying
     * provider (such as AKS), and cannot be changed. Deployments in these namespaces will not be checked
     */
    private List<String> systemExcludedNamespaces;

    /*
     * The pod security standards level
     */
    private PodSecurityStandardsLevel podSecurityStandardsLevel;

    /**
     * Creates an instance of DeploymentSafeguardsProperties class.
     */
    public DeploymentSafeguardsProperties() {
    }

    /**
     * Get the provisioningState property: Provisioning State.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the level property: The deployment safeguards level. Possible values are Warn and Enforce.
     * 
     * @return the level value.
     */
    public DeploymentSafeguardsLevel level() {
        return this.level;
    }

    /**
     * Set the level property: The deployment safeguards level. Possible values are Warn and Enforce.
     * 
     * @param level the level value to set.
     * @return the DeploymentSafeguardsProperties object itself.
     */
    public DeploymentSafeguardsProperties withLevel(DeploymentSafeguardsLevel level) {
        this.level = level;
        return this;
    }

    /**
     * Get the excludedNamespaces property: User defined list of namespaces to exclude from Deployment Safeguards.
     * Deployments in these namespaces will not be checked against any safeguards.
     * 
     * @return the excludedNamespaces value.
     */
    public List<String> excludedNamespaces() {
        return this.excludedNamespaces;
    }

    /**
     * Set the excludedNamespaces property: User defined list of namespaces to exclude from Deployment Safeguards.
     * Deployments in these namespaces will not be checked against any safeguards.
     * 
     * @param excludedNamespaces the excludedNamespaces value to set.
     * @return the DeploymentSafeguardsProperties object itself.
     */
    public DeploymentSafeguardsProperties withExcludedNamespaces(List<String> excludedNamespaces) {
        this.excludedNamespaces = excludedNamespaces;
        return this;
    }

    /**
     * Get the systemExcludedNamespaces property: System defined list of namespaces excluded from Deployment Safeguards.
     * These are determined by the underlying provider (such as AKS), and cannot be changed. Deployments in these
     * namespaces will not be checked.
     * 
     * @return the systemExcludedNamespaces value.
     */
    public List<String> systemExcludedNamespaces() {
        return this.systemExcludedNamespaces;
    }

    /**
     * Get the podSecurityStandardsLevel property: The pod security standards level.
     * 
     * @return the podSecurityStandardsLevel value.
     */
    public PodSecurityStandardsLevel podSecurityStandardsLevel() {
        return this.podSecurityStandardsLevel;
    }

    /**
     * Set the podSecurityStandardsLevel property: The pod security standards level.
     * 
     * @param podSecurityStandardsLevel the podSecurityStandardsLevel value to set.
     * @return the DeploymentSafeguardsProperties object itself.
     */
    public DeploymentSafeguardsProperties
        withPodSecurityStandardsLevel(PodSecurityStandardsLevel podSecurityStandardsLevel) {
        this.podSecurityStandardsLevel = podSecurityStandardsLevel;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (level() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property level in model DeploymentSafeguardsProperties"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(DeploymentSafeguardsProperties.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("level", this.level == null ? null : this.level.toString());
        jsonWriter.writeArrayField("excludedNamespaces", this.excludedNamespaces,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeStringField("podSecurityStandardsLevel",
            this.podSecurityStandardsLevel == null ? null : this.podSecurityStandardsLevel.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DeploymentSafeguardsProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DeploymentSafeguardsProperties if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the DeploymentSafeguardsProperties.
     */
    public static DeploymentSafeguardsProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            DeploymentSafeguardsProperties deserializedDeploymentSafeguardsProperties
                = new DeploymentSafeguardsProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("level".equals(fieldName)) {
                    deserializedDeploymentSafeguardsProperties.level
                        = DeploymentSafeguardsLevel.fromString(reader.getString());
                } else if ("systemExcludedNamespaces".equals(fieldName)) {
                    List<String> systemExcludedNamespaces = reader.readArray(reader1 -> reader1.getString());
                    deserializedDeploymentSafeguardsProperties.systemExcludedNamespaces = systemExcludedNamespaces;
                } else if ("provisioningState".equals(fieldName)) {
                    deserializedDeploymentSafeguardsProperties.provisioningState
                        = ProvisioningState.fromString(reader.getString());
                } else if ("excludedNamespaces".equals(fieldName)) {
                    List<String> excludedNamespaces = reader.readArray(reader1 -> reader1.getString());
                    deserializedDeploymentSafeguardsProperties.excludedNamespaces = excludedNamespaces;
                } else if ("podSecurityStandardsLevel".equals(fieldName)) {
                    deserializedDeploymentSafeguardsProperties.podSecurityStandardsLevel
                        = PodSecurityStandardsLevel.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedDeploymentSafeguardsProperties;
        });
    }
}
