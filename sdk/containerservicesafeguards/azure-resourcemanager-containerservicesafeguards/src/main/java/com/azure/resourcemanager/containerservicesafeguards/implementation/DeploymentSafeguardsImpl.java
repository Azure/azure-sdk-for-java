// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.containerservicesafeguards.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.containerservicesafeguards.fluent.DeploymentSafeguardsClient;
import com.azure.resourcemanager.containerservicesafeguards.fluent.models.DeploymentSafeguardInner;
import com.azure.resourcemanager.containerservicesafeguards.models.DeploymentSafeguard;
import com.azure.resourcemanager.containerservicesafeguards.models.DeploymentSafeguards;

public final class DeploymentSafeguardsImpl implements DeploymentSafeguards {
    private static final ClientLogger LOGGER = new ClientLogger(DeploymentSafeguardsImpl.class);

    private final DeploymentSafeguardsClient innerClient;

    private final com.azure.resourcemanager.containerservicesafeguards.ContainerServiceSafeguardsManager serviceManager;

    public DeploymentSafeguardsImpl(DeploymentSafeguardsClient innerClient,
        com.azure.resourcemanager.containerservicesafeguards.ContainerServiceSafeguardsManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<DeploymentSafeguard> getWithResponse(String resourceUri, Context context) {
        Response<DeploymentSafeguardInner> inner = this.serviceClient().getWithResponse(resourceUri, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new DeploymentSafeguardImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public DeploymentSafeguard get(String resourceUri) {
        DeploymentSafeguardInner inner = this.serviceClient().get(resourceUri);
        if (inner != null) {
            return new DeploymentSafeguardImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public DeploymentSafeguard create(String resourceUri, DeploymentSafeguardInner resource) {
        DeploymentSafeguardInner inner = this.serviceClient().create(resourceUri, resource);
        if (inner != null) {
            return new DeploymentSafeguardImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public DeploymentSafeguard create(String resourceUri, DeploymentSafeguardInner resource, Context context) {
        DeploymentSafeguardInner inner = this.serviceClient().create(resourceUri, resource, context);
        if (inner != null) {
            return new DeploymentSafeguardImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public void delete(String resourceUri) {
        this.serviceClient().delete(resourceUri);
    }

    public void delete(String resourceUri, Context context) {
        this.serviceClient().delete(resourceUri, context);
    }

    public PagedIterable<DeploymentSafeguard> list(String resourceUri) {
        PagedIterable<DeploymentSafeguardInner> inner = this.serviceClient().list(resourceUri);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new DeploymentSafeguardImpl(inner1, this.manager()));
    }

    public PagedIterable<DeploymentSafeguard> list(String resourceUri, Context context) {
        PagedIterable<DeploymentSafeguardInner> inner = this.serviceClient().list(resourceUri, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new DeploymentSafeguardImpl(inner1, this.manager()));
    }

    private DeploymentSafeguardsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.containerservicesafeguards.ContainerServiceSafeguardsManager manager() {
        return this.serviceManager;
    }
}
