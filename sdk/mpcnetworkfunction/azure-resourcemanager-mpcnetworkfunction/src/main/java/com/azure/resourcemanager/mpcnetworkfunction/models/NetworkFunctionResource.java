// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mpcnetworkfunction.models;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.mpcnetworkfunction.fluent.models.NetworkFunctionResourceInner;
import java.util.Map;

/** An immutable client-side representation of NetworkFunctionResource. */
public interface NetworkFunctionResource {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the sku property: Provisioned SKU Value.
     *
     * @return the sku value.
     */
    SkuDefinitions sku();

    /**
     * Gets the networkFunctionType property: Type of network function.
     *
     * @return the networkFunctionType value.
     */
    NetworkFunctionType networkFunctionType();

    /**
     * Gets the networkFunctionAdministrativeState property: Administrative state of the network function.
     *
     * @return the networkFunctionAdministrativeState value.
     */
    NetworkFunctionAdministrativeState networkFunctionAdministrativeState();

    /**
     * Gets the networkFunctionOperationalStatus property: Operational state of the network function.
     *
     * @return the networkFunctionOperationalStatus value.
     */
    NetworkFunctionOperationalStatus networkFunctionOperationalStatus();

    /**
     * Gets the infrastructureElementCount property: Count of infrastructure elements used by this network function
     * (vCPUs, in units of 8).
     *
     * @return the infrastructureElementCount value.
     */
    Integer infrastructureElementCount();

    /**
     * Gets the capacity property: Capacity of the network function in units of 10000. This represents the session count
     * or the Simultaneously Attached Users (SAU) count as applicable.
     *
     * @return the capacity value.
     */
    Integer capacity();

    /**
     * Gets the userDescription property: User provided description.
     *
     * @return the userDescription value.
     */
    String userDescription();

    /**
     * Gets the deploymentNotes property: User provided deployment notes. This is used to optionally provide details
     * about the NF deployment.
     *
     * @return the deploymentNotes value.
     */
    String deploymentNotes();

    /**
     * Gets the provisioningState property: The status of the last operation.
     *
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     *
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.mpcnetworkfunction.fluent.models.NetworkFunctionResourceInner object.
     *
     * @return the inner object.
     */
    NetworkFunctionResourceInner innerModel();

    /** The entirety of the NetworkFunctionResource definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithResourceGroup,
            DefinitionStages.WithCreate {
    }

    /** The NetworkFunctionResource definition stages. */
    interface DefinitionStages {
        /** The first stage of the NetworkFunctionResource definition. */
        interface Blank extends WithLocation {
        }

        /** The stage of the NetworkFunctionResource definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }

        /** The stage of the NetworkFunctionResource definition allowing to specify parent resource. */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             *
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }

        /**
         * The stage of the NetworkFunctionResource definition which contains all the minimum required properties for
         * the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithSku,
                DefinitionStages.WithNetworkFunctionType,
                DefinitionStages.WithNetworkFunctionAdministrativeState,
                DefinitionStages.WithCapacity,
                DefinitionStages.WithUserDescription,
                DefinitionStages.WithDeploymentNotes {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            NetworkFunctionResource create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            NetworkFunctionResource create(Context context);
        }

        /** The stage of the NetworkFunctionResource definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /** The stage of the NetworkFunctionResource definition allowing to specify sku. */
        interface WithSku {
            /**
             * Specifies the sku property: Provisioned SKU Value..
             *
             * @param sku Provisioned SKU Value.
             * @return the next definition stage.
             */
            WithCreate withSku(SkuDefinitions sku);
        }

        /** The stage of the NetworkFunctionResource definition allowing to specify networkFunctionType. */
        interface WithNetworkFunctionType {
            /**
             * Specifies the networkFunctionType property: Type of network function.
             *
             * @param networkFunctionType Type of network function.
             * @return the next definition stage.
             */
            WithCreate withNetworkFunctionType(NetworkFunctionType networkFunctionType);
        }

        /**
         * The stage of the NetworkFunctionResource definition allowing to specify networkFunctionAdministrativeState.
         */
        interface WithNetworkFunctionAdministrativeState {
            /**
             * Specifies the networkFunctionAdministrativeState property: Administrative state of the network function.
             *
             * @param networkFunctionAdministrativeState Administrative state of the network function.
             * @return the next definition stage.
             */
            WithCreate withNetworkFunctionAdministrativeState(
                NetworkFunctionAdministrativeState networkFunctionAdministrativeState);
        }

        /** The stage of the NetworkFunctionResource definition allowing to specify capacity. */
        interface WithCapacity {
            /**
             * Specifies the capacity property: Capacity of the network function in units of 10000. This represents the
             * session count or the Simultaneously Attached Users (SAU) count as applicable.
             *
             * @param capacity Capacity of the network function in units of 10000. This represents the session count or
             *     the Simultaneously Attached Users (SAU) count as applicable.
             * @return the next definition stage.
             */
            WithCreate withCapacity(Integer capacity);
        }

        /** The stage of the NetworkFunctionResource definition allowing to specify userDescription. */
        interface WithUserDescription {
            /**
             * Specifies the userDescription property: User provided description.
             *
             * @param userDescription User provided description.
             * @return the next definition stage.
             */
            WithCreate withUserDescription(String userDescription);
        }

        /** The stage of the NetworkFunctionResource definition allowing to specify deploymentNotes. */
        interface WithDeploymentNotes {
            /**
             * Specifies the deploymentNotes property: User provided deployment notes. This is used to optionally
             * provide details about the NF deployment.
             *
             * @param deploymentNotes User provided deployment notes. This is used to optionally provide details about
             *     the NF deployment.
             * @return the next definition stage.
             */
            WithCreate withDeploymentNotes(String deploymentNotes);
        }
    }

    /**
     * Begins update for the NetworkFunctionResource resource.
     *
     * @return the stage of resource update.
     */
    NetworkFunctionResource.Update update();

    /** The template for NetworkFunctionResource update. */
    interface Update extends UpdateStages.WithTags {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        NetworkFunctionResource apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        NetworkFunctionResource apply(Context context);
    }

    /** The NetworkFunctionResource update stages. */
    interface UpdateStages {
        /** The stage of the NetworkFunctionResource update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    NetworkFunctionResource refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    NetworkFunctionResource refresh(Context context);
}
