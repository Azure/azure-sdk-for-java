// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mpcnetworkfunction.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.Resource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.mpcnetworkfunction.models.NetworkFunctionAdministrativeState;
import com.azure.resourcemanager.mpcnetworkfunction.models.NetworkFunctionOperationalStatus;
import com.azure.resourcemanager.mpcnetworkfunction.models.NetworkFunctionType;
import com.azure.resourcemanager.mpcnetworkfunction.models.ProvisioningState;
import com.azure.resourcemanager.mpcnetworkfunction.models.SkuDefinitions;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** AO5GC Network Function Resource. */
@Fluent
public final class NetworkFunctionResourceInner extends Resource {
    /*
     * The resource-specific properties for this resource.
     */
    @JsonProperty(value = "properties")
    private NetworkFunctionResourceProperties innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /** Creates an instance of NetworkFunctionResourceInner class. */
    public NetworkFunctionResourceInner() {
    }

    /**
     * Get the innerProperties property: The resource-specific properties for this resource.
     *
     * @return the innerProperties value.
     */
    private NetworkFunctionResourceProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /** {@inheritDoc} */
    @Override
    public NetworkFunctionResourceInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public NetworkFunctionResourceInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Get the sku property: Provisioned SKU Value.
     *
     * @return the sku value.
     */
    public SkuDefinitions sku() {
        return this.innerProperties() == null ? null : this.innerProperties().sku();
    }

    /**
     * Set the sku property: Provisioned SKU Value.
     *
     * @param sku the sku value to set.
     * @return the NetworkFunctionResourceInner object itself.
     */
    public NetworkFunctionResourceInner withSku(SkuDefinitions sku) {
        if (this.innerProperties() == null) {
            this.innerProperties = new NetworkFunctionResourceProperties();
        }
        this.innerProperties().withSku(sku);
        return this;
    }

    /**
     * Get the networkFunctionType property: Type of network function.
     *
     * @return the networkFunctionType value.
     */
    public NetworkFunctionType networkFunctionType() {
        return this.innerProperties() == null ? null : this.innerProperties().networkFunctionType();
    }

    /**
     * Set the networkFunctionType property: Type of network function.
     *
     * @param networkFunctionType the networkFunctionType value to set.
     * @return the NetworkFunctionResourceInner object itself.
     */
    public NetworkFunctionResourceInner withNetworkFunctionType(NetworkFunctionType networkFunctionType) {
        if (this.innerProperties() == null) {
            this.innerProperties = new NetworkFunctionResourceProperties();
        }
        this.innerProperties().withNetworkFunctionType(networkFunctionType);
        return this;
    }

    /**
     * Get the networkFunctionAdministrativeState property: Administrative state of the network function.
     *
     * @return the networkFunctionAdministrativeState value.
     */
    public NetworkFunctionAdministrativeState networkFunctionAdministrativeState() {
        return this.innerProperties() == null ? null : this.innerProperties().networkFunctionAdministrativeState();
    }

    /**
     * Set the networkFunctionAdministrativeState property: Administrative state of the network function.
     *
     * @param networkFunctionAdministrativeState the networkFunctionAdministrativeState value to set.
     * @return the NetworkFunctionResourceInner object itself.
     */
    public NetworkFunctionResourceInner withNetworkFunctionAdministrativeState(
        NetworkFunctionAdministrativeState networkFunctionAdministrativeState) {
        if (this.innerProperties() == null) {
            this.innerProperties = new NetworkFunctionResourceProperties();
        }
        this.innerProperties().withNetworkFunctionAdministrativeState(networkFunctionAdministrativeState);
        return this;
    }

    /**
     * Get the networkFunctionOperationalStatus property: Operational state of the network function.
     *
     * @return the networkFunctionOperationalStatus value.
     */
    public NetworkFunctionOperationalStatus networkFunctionOperationalStatus() {
        return this.innerProperties() == null ? null : this.innerProperties().networkFunctionOperationalStatus();
    }

    /**
     * Get the infrastructureElementCount property: Count of infrastructure elements used by this network function
     * (vCPUs, in units of 8).
     *
     * @return the infrastructureElementCount value.
     */
    public Integer infrastructureElementCount() {
        return this.innerProperties() == null ? null : this.innerProperties().infrastructureElementCount();
    }

    /**
     * Get the capacity property: Capacity of the network function in units of 10000. This represents the session count
     * or the Simultaneously Attached Users (SAU) count as applicable.
     *
     * @return the capacity value.
     */
    public Integer capacity() {
        return this.innerProperties() == null ? null : this.innerProperties().capacity();
    }

    /**
     * Set the capacity property: Capacity of the network function in units of 10000. This represents the session count
     * or the Simultaneously Attached Users (SAU) count as applicable.
     *
     * @param capacity the capacity value to set.
     * @return the NetworkFunctionResourceInner object itself.
     */
    public NetworkFunctionResourceInner withCapacity(Integer capacity) {
        if (this.innerProperties() == null) {
            this.innerProperties = new NetworkFunctionResourceProperties();
        }
        this.innerProperties().withCapacity(capacity);
        return this;
    }

    /**
     * Get the userDescription property: User provided description.
     *
     * @return the userDescription value.
     */
    public String userDescription() {
        return this.innerProperties() == null ? null : this.innerProperties().userDescription();
    }

    /**
     * Set the userDescription property: User provided description.
     *
     * @param userDescription the userDescription value to set.
     * @return the NetworkFunctionResourceInner object itself.
     */
    public NetworkFunctionResourceInner withUserDescription(String userDescription) {
        if (this.innerProperties() == null) {
            this.innerProperties = new NetworkFunctionResourceProperties();
        }
        this.innerProperties().withUserDescription(userDescription);
        return this;
    }

    /**
     * Get the deploymentNotes property: User provided deployment notes. This is used to optionally provide details
     * about the NF deployment.
     *
     * @return the deploymentNotes value.
     */
    public String deploymentNotes() {
        return this.innerProperties() == null ? null : this.innerProperties().deploymentNotes();
    }

    /**
     * Set the deploymentNotes property: User provided deployment notes. This is used to optionally provide details
     * about the NF deployment.
     *
     * @param deploymentNotes the deploymentNotes value to set.
     * @return the NetworkFunctionResourceInner object itself.
     */
    public NetworkFunctionResourceInner withDeploymentNotes(String deploymentNotes) {
        if (this.innerProperties() == null) {
            this.innerProperties = new NetworkFunctionResourceProperties();
        }
        this.innerProperties().withDeploymentNotes(deploymentNotes);
        return this;
    }

    /**
     * Get the provisioningState property: The status of the last operation.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
