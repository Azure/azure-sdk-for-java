// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mpcnetworkfunction.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.mpcnetworkfunction.fluent.models.NetworkFunctionResourceInner;
import com.azure.resourcemanager.mpcnetworkfunction.models.NetworkFunctionResourceTagsUpdate;

/** An instance of this class provides access to all the operations defined in NetworkFunctionsClient. */
public interface NetworkFunctionsClient {
    /**
     * List NetworkFunctionResource resources by subscription ID.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a NetworkFunctionResource list operation as paginated response with {@link
     *     PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<NetworkFunctionResourceInner> list();

    /**
     * List NetworkFunctionResource resources by subscription ID.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a NetworkFunctionResource list operation as paginated response with {@link
     *     PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<NetworkFunctionResourceInner> list(Context context);

    /**
     * List NetworkFunctionResource resources by resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a NetworkFunctionResource list operation as paginated response with {@link
     *     PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<NetworkFunctionResourceInner> listByResourceGroup(String resourceGroupName);

    /**
     * List NetworkFunctionResource resources by resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a NetworkFunctionResource list operation as paginated response with {@link
     *     PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<NetworkFunctionResourceInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Get a NetworkFunctionResource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkFunctionName The name of the network function.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a NetworkFunctionResource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<NetworkFunctionResourceInner> getByResourceGroupWithResponse(
        String resourceGroupName, String networkFunctionName, Context context);

    /**
     * Get a NetworkFunctionResource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkFunctionName The name of the network function.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a NetworkFunctionResource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    NetworkFunctionResourceInner getByResourceGroup(String resourceGroupName, String networkFunctionName);

    /**
     * Create a NetworkFunctionResource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkFunctionName The name of the network function.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of aO5GC Network Function Resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<NetworkFunctionResourceInner>, NetworkFunctionResourceInner> beginCreateOrUpdate(
        String resourceGroupName, String networkFunctionName, NetworkFunctionResourceInner resource);

    /**
     * Create a NetworkFunctionResource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkFunctionName The name of the network function.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of aO5GC Network Function Resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<NetworkFunctionResourceInner>, NetworkFunctionResourceInner> beginCreateOrUpdate(
        String resourceGroupName, String networkFunctionName, NetworkFunctionResourceInner resource, Context context);

    /**
     * Create a NetworkFunctionResource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkFunctionName The name of the network function.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return aO5GC Network Function Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    NetworkFunctionResourceInner createOrUpdate(
        String resourceGroupName, String networkFunctionName, NetworkFunctionResourceInner resource);

    /**
     * Create a NetworkFunctionResource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkFunctionName The name of the network function.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return aO5GC Network Function Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    NetworkFunctionResourceInner createOrUpdate(
        String resourceGroupName, String networkFunctionName, NetworkFunctionResourceInner resource, Context context);

    /**
     * Update a NetworkFunctionResource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkFunctionName The name of the network function.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return aO5GC Network Function Resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<NetworkFunctionResourceInner> updateTagsWithResponse(
        String resourceGroupName,
        String networkFunctionName,
        NetworkFunctionResourceTagsUpdate properties,
        Context context);

    /**
     * Update a NetworkFunctionResource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkFunctionName The name of the network function.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return aO5GC Network Function Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    NetworkFunctionResourceInner updateTags(
        String resourceGroupName, String networkFunctionName, NetworkFunctionResourceTagsUpdate properties);

    /**
     * Delete a NetworkFunctionResource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkFunctionName The name of the network function.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String resourceGroupName, String networkFunctionName, Context context);

    /**
     * Delete a NetworkFunctionResource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkFunctionName The name of the network function.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String networkFunctionName);
}
