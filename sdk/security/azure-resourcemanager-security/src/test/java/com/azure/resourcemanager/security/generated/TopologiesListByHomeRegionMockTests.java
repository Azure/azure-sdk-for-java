// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.TopologyResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class TopologiesListByHomeRegionMockTests {
    @Test
    public void testListByHomeRegion() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"calculatedDateTime\":\"2021-07-02T20:19:53Z\",\"topologyResources\":[{\"resourceId\":\"gkqyjkotypcj\",\"severity\":\"yzzl\",\"recommendationsExist\":false,\"networkZones\":\"zppdbrbmcxb\",\"topologyScore\":1205264723,\"location\":\"smivapes\",\"parents\":[{},{},{},{}],\"children\":[{},{},{}]},{\"resourceId\":\"jr\",\"severity\":\"sfv\",\"recommendationsExist\":false,\"networkZones\":\"xtmblm\",\"topologyScore\":893281173,\"location\":\"u\",\"parents\":[{},{},{}],\"children\":[{}]},{\"resourceId\":\"prbxjtezujtou\",\"severity\":\"de\",\"recommendationsExist\":false,\"networkZones\":\"ssrjciex\",\"topologyScore\":772565033,\"location\":\"tgtg\",\"parents\":[{},{},{}],\"children\":[{},{}]},{\"resourceId\":\"gsks\",\"severity\":\"sxehaxi\",\"recommendationsExist\":true,\"networkZones\":\"xolknshgwakptb\",\"topologyScore\":3201872,\"location\":\"lmnlbnatl\",\"parents\":[{},{},{},{}],\"children\":[{},{}]}]},\"location\":\"dkxo\",\"id\":\"tdzzvhbujkah\",\"name\":\"p\",\"type\":\"qwojdz\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<TopologyResource> response
            = manager.topologies().listByHomeRegion("einvzsodm", com.azure.core.util.Context.NONE);

    }
}
