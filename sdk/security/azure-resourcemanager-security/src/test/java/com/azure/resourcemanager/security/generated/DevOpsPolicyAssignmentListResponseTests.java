// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.DevOpsPolicyAssignmentInner;
import com.azure.resourcemanager.security.models.DescendantBehavior;
import com.azure.resourcemanager.security.models.DevOpsPolicyAssignmentListResponse;
import com.azure.resourcemanager.security.models.DevOpsPolicyAssignmentProperties;
import com.azure.resourcemanager.security.models.DevOpsPolicyDescriptor;
import com.azure.resourcemanager.security.models.DevOpsPolicyType;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DevOpsPolicyAssignmentListResponseTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DevOpsPolicyAssignmentListResponse model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"provisioningStatusMessage\":\"ibuz\",\"provisioningStatusUpdateTimeUtc\":\"2021-03-05T09:53:37Z\",\"provisioningState\":\"Failed\",\"resourceId\":\"eiknpgo\",\"descendantBehavior\":\"FallBack\",\"policy\":{\"policyName\":\"qhibtozipqwjedm\",\"policyId\":\"r\",\"policyVersion\":\"g\",\"policyType\":\"Unknown\"},\"assignedAt\":\"2021-06-22T20:24:57Z\"},\"id\":\"qylkmqpzoyhlf\",\"name\":\"cgwgcloxoebqinji\",\"type\":\"nwjfu\"},{\"properties\":{\"provisioningStatusMessage\":\"fcbahhp\",\"provisioningStatusUpdateTimeUtc\":\"2021-09-03T01:26:59Z\",\"provisioningState\":\"PendingDeletion\",\"resourceId\":\"yjwpfilkmkkh\",\"descendantBehavior\":\"Unknown\",\"policy\":{\"policyName\":\"dviauogp\",\"policyId\":\"artvti\",\"policyVersion\":\"yefchnm\",\"policyType\":\"Pipeline\"},\"assignedAt\":\"2021-10-24T02:34:44Z\"},\"id\":\"xhk\",\"name\":\"jqirwrw\",\"type\":\"ooxf\"}],\"nextLink\":\"fhxwrsne\"}")
            .toObject(DevOpsPolicyAssignmentListResponse.class);
        Assertions.assertEquals("eiknpgo", model.value().get(0).properties().resourceId());
        Assertions.assertEquals(DescendantBehavior.FALL_BACK, model.value().get(0).properties().descendantBehavior());
        Assertions.assertEquals("qhibtozipqwjedm", model.value().get(0).properties().policy().policyName());
        Assertions.assertEquals("r", model.value().get(0).properties().policy().policyId());
        Assertions.assertEquals("g", model.value().get(0).properties().policy().policyVersion());
        Assertions.assertEquals(DevOpsPolicyType.UNKNOWN, model.value().get(0).properties().policy().policyType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-22T20:24:57Z"),
            model.value().get(0).properties().assignedAt());
        Assertions.assertEquals("fhxwrsne", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DevOpsPolicyAssignmentListResponse model = new DevOpsPolicyAssignmentListResponse().withValue(Arrays.asList(
            new DevOpsPolicyAssignmentInner()
                .withProperties(new DevOpsPolicyAssignmentProperties().withResourceId("eiknpgo")
                    .withDescendantBehavior(DescendantBehavior.FALL_BACK)
                    .withPolicy(new DevOpsPolicyDescriptor().withPolicyName("qhibtozipqwjedm")
                        .withPolicyId("r")
                        .withPolicyVersion("g")
                        .withPolicyType(DevOpsPolicyType.UNKNOWN))
                    .withAssignedAt(OffsetDateTime.parse("2021-06-22T20:24:57Z"))),
            new DevOpsPolicyAssignmentInner()
                .withProperties(new DevOpsPolicyAssignmentProperties().withResourceId("yjwpfilkmkkh")
                    .withDescendantBehavior(DescendantBehavior.UNKNOWN)
                    .withPolicy(new DevOpsPolicyDescriptor().withPolicyName("dviauogp")
                        .withPolicyId("artvti")
                        .withPolicyVersion("yefchnm")
                        .withPolicyType(DevOpsPolicyType.PIPELINE))
                    .withAssignedAt(OffsetDateTime.parse("2021-10-24T02:34:44Z")))))
            .withNextLink("fhxwrsne");
        model = BinaryData.fromObject(model).toObject(DevOpsPolicyAssignmentListResponse.class);
        Assertions.assertEquals("eiknpgo", model.value().get(0).properties().resourceId());
        Assertions.assertEquals(DescendantBehavior.FALL_BACK, model.value().get(0).properties().descendantBehavior());
        Assertions.assertEquals("qhibtozipqwjedm", model.value().get(0).properties().policy().policyName());
        Assertions.assertEquals("r", model.value().get(0).properties().policy().policyId());
        Assertions.assertEquals("g", model.value().get(0).properties().policy().policyVersion());
        Assertions.assertEquals(DevOpsPolicyType.UNKNOWN, model.value().get(0).properties().policy().policyType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-22T20:24:57Z"),
            model.value().get(0).properties().assignedAt());
        Assertions.assertEquals("fhxwrsne", model.nextLink());
    }
}
