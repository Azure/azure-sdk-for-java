// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.DevOpsPolicyAssignmentInner;
import com.azure.resourcemanager.security.models.DescendantBehavior;
import com.azure.resourcemanager.security.models.DevOpsPolicyAssignmentListResponse;
import com.azure.resourcemanager.security.models.DevOpsPolicyAssignmentProperties;
import com.azure.resourcemanager.security.models.DevOpsPolicyDescriptor;
import com.azure.resourcemanager.security.models.DevOpsPolicyType;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DevOpsPolicyAssignmentListResponseTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DevOpsPolicyAssignmentListResponse model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"provisioningStatusMessage\":\"prwnwvroevytlyo\",\"provisioningStatusUpdateTimeUtc\":\"2021-02-26T08:49:17Z\",\"provisioningState\":\"PendingDeletion\",\"resourceId\":\"uxvnsasbcrymodi\",\"descendantBehavior\":\"FallBack\",\"policy\":{\"policyName\":\"obdxnazpmkmlm\",\"policyId\":\"vfxzopjh\",\"policyVersion\":\"xliohrdddt\",\"policyType\":\"Unknown\"},\"assignedAt\":\"2021-09-20T01:56:50Z\"},\"id\":\"awpcbbnzqcykn\",\"name\":\"p\",\"type\":\"ofyuicd\"},{\"properties\":{\"provisioningStatusMessage\":\"ybww\",\"provisioningStatusUpdateTimeUtc\":\"2021-11-26T17:52:15Z\",\"provisioningState\":\"Pending\",\"resourceId\":\"idmhmwf\",\"descendantBehavior\":\"FallBack\",\"policy\":{\"policyName\":\"u\",\"policyId\":\"pckc\",\"policyVersion\":\"rv\",\"policyType\":\"Unknown\"},\"assignedAt\":\"2021-12-04T19:48:14Z\"},\"id\":\"oy\",\"name\":\"ukphaimmoiroq\",\"type\":\"oshbragapyy\"}],\"nextLink\":\"fsv\"}")
            .toObject(DevOpsPolicyAssignmentListResponse.class);
        Assertions.assertEquals("uxvnsasbcrymodi", model.value().get(0).properties().resourceId());
        Assertions.assertEquals(DescendantBehavior.FALL_BACK, model.value().get(0).properties().descendantBehavior());
        Assertions.assertEquals("obdxnazpmkmlm", model.value().get(0).properties().policy().policyName());
        Assertions.assertEquals("vfxzopjh", model.value().get(0).properties().policy().policyId());
        Assertions.assertEquals("xliohrdddt", model.value().get(0).properties().policy().policyVersion());
        Assertions.assertEquals(DevOpsPolicyType.UNKNOWN, model.value().get(0).properties().policy().policyType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-20T01:56:50Z"),
            model.value().get(0).properties().assignedAt());
        Assertions.assertEquals("fsv", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DevOpsPolicyAssignmentListResponse model = new DevOpsPolicyAssignmentListResponse().withValue(Arrays.asList(
            new DevOpsPolicyAssignmentInner()
                .withProperties(new DevOpsPolicyAssignmentProperties().withResourceId("uxvnsasbcrymodi")
                    .withDescendantBehavior(DescendantBehavior.FALL_BACK)
                    .withPolicy(new DevOpsPolicyDescriptor().withPolicyName("obdxnazpmkmlm")
                        .withPolicyId("vfxzopjh")
                        .withPolicyVersion("xliohrdddt")
                        .withPolicyType(DevOpsPolicyType.UNKNOWN))
                    .withAssignedAt(OffsetDateTime.parse("2021-09-20T01:56:50Z"))),
            new DevOpsPolicyAssignmentInner()
                .withProperties(new DevOpsPolicyAssignmentProperties().withResourceId("idmhmwf")
                    .withDescendantBehavior(DescendantBehavior.FALL_BACK)
                    .withPolicy(new DevOpsPolicyDescriptor().withPolicyName("u")
                        .withPolicyId("pckc")
                        .withPolicyVersion("rv")
                        .withPolicyType(DevOpsPolicyType.UNKNOWN))
                    .withAssignedAt(OffsetDateTime.parse("2021-12-04T19:48:14Z")))))
            .withNextLink("fsv");
        model = BinaryData.fromObject(model).toObject(DevOpsPolicyAssignmentListResponse.class);
        Assertions.assertEquals("uxvnsasbcrymodi", model.value().get(0).properties().resourceId());
        Assertions.assertEquals(DescendantBehavior.FALL_BACK, model.value().get(0).properties().descendantBehavior());
        Assertions.assertEquals("obdxnazpmkmlm", model.value().get(0).properties().policy().policyName());
        Assertions.assertEquals("vfxzopjh", model.value().get(0).properties().policy().policyId());
        Assertions.assertEquals("xliohrdddt", model.value().get(0).properties().policy().policyVersion());
        Assertions.assertEquals(DevOpsPolicyType.UNKNOWN, model.value().get(0).properties().policy().policyType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-20T01:56:50Z"),
            model.value().get(0).properties().assignedAt());
        Assertions.assertEquals("fsv", model.nextLink());
    }
}
