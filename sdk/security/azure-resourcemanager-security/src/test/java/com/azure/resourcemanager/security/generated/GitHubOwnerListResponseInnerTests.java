// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.GitHubOwnerInner;
import com.azure.resourcemanager.security.fluent.models.GitHubOwnerListResponseInner;
import com.azure.resourcemanager.security.models.GitHubOwnerProperties;
import com.azure.resourcemanager.security.models.OnboardingState;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class GitHubOwnerListResponseInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GitHubOwnerListResponseInner model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"provisioningStatusMessage\":\"rtmjfj\",\"provisioningStatusUpdateTimeUtc\":\"2021-11-29T13:11:30Z\",\"provisioningState\":\"PendingDeletion\",\"ownerUrl\":\"zhcoxovnekhe\",\"gitHubInternalId\":\"usfnr\",\"onboardingState\":\"OnboardedByOtherConnector\"},\"id\":\"xtxrdcqtjvidt\",\"name\":\"gepuslvyjtc\",\"type\":\"uwkasiz\"},{\"properties\":{\"provisioningStatusMessage\":\"uughtuqfecjxeyg\",\"provisioningStatusUpdateTimeUtc\":\"2021-04-02T18:49:38Z\",\"provisioningState\":\"DeletionSuccess\",\"ownerUrl\":\"cbuewmrswnjlxuz\",\"gitHubInternalId\":\"wpusxjbaqehg\",\"onboardingState\":\"NotOnboarded\"},\"id\":\"hzjqatucoige\",\"name\":\"xncnwfe\",\"type\":\"bnwgfmxj\"}],\"nextLink\":\"g\"}")
            .toObject(GitHubOwnerListResponseInner.class);
        Assertions.assertEquals(OnboardingState.ONBOARDED_BY_OTHER_CONNECTOR,
            model.value().get(0).properties().onboardingState());
        Assertions.assertEquals("g", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GitHubOwnerListResponseInner model = new GitHubOwnerListResponseInner()
            .withValue(Arrays.asList(
                new GitHubOwnerInner().withProperties(
                    new GitHubOwnerProperties().withOnboardingState(OnboardingState.ONBOARDED_BY_OTHER_CONNECTOR)),
                new GitHubOwnerInner()
                    .withProperties(new GitHubOwnerProperties().withOnboardingState(OnboardingState.NOT_ONBOARDED))))
            .withNextLink("g");
        model = BinaryData.fromObject(model).toObject(GitHubOwnerListResponseInner.class);
        Assertions.assertEquals(OnboardingState.ONBOARDED_BY_OTHER_CONNECTOR,
            model.value().get(0).properties().onboardingState());
        Assertions.assertEquals("g", model.nextLink());
    }
}
