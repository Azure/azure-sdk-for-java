// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.AdaptiveNetworkHardeningProperties;
import com.azure.resourcemanager.security.models.Direction;
import com.azure.resourcemanager.security.models.EffectiveNetworkSecurityGroups;
import com.azure.resourcemanager.security.models.Rule;
import com.azure.resourcemanager.security.models.TransportProtocol;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AdaptiveNetworkHardeningPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AdaptiveNetworkHardeningProperties model = BinaryData.fromString(
            "{\"rules\":[{\"name\":\"mjnlexwhcb\",\"direction\":\"Inbound\",\"destinationPort\":175625790,\"protocols\":[\"TCP\",\"TCP\",\"UDP\"],\"ipAddresses\":[\"rctat\",\"yintqpbrlcy\",\"duczkgof\"]}],\"rulesCalculationTime\":\"2021-10-26T00:39:38Z\",\"effectiveNetworkSecurityGroups\":[{\"networkInterface\":\"cvcrrp\",\"networkSecurityGroups\":[\"tbstvjeaqnrmv\",\"fkoxmlghktuidvr\"]},{\"networkInterface\":\"zlpdwwex\",\"networkSecurityGroups\":[\"vlazipbhpwvqsgny\",\"uuzivensrpmeyyvp\",\"patlbijp\",\"gsksrfhf\"]},{\"networkInterface\":\"lmknbnxwcdom\",\"networkSecurityGroups\":[\"fqawzfgbrttui\",\"clkiexhajl\",\"n\",\"hiqfyuttdiy\"]},{\"networkInterface\":\"pvn\",\"networkSecurityGroups\":[\"mtx\",\"yctww\",\"zwxjlm\"]}]}")
            .toObject(AdaptiveNetworkHardeningProperties.class);
        Assertions.assertEquals("mjnlexwhcb", model.rules().get(0).name());
        Assertions.assertEquals(Direction.INBOUND, model.rules().get(0).direction());
        Assertions.assertEquals(175625790, model.rules().get(0).destinationPort());
        Assertions.assertEquals(TransportProtocol.TCP, model.rules().get(0).protocols().get(0));
        Assertions.assertEquals("rctat", model.rules().get(0).ipAddresses().get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-26T00:39:38Z"), model.rulesCalculationTime());
        Assertions.assertEquals("cvcrrp", model.effectiveNetworkSecurityGroups().get(0).networkInterface());
        Assertions.assertEquals("tbstvjeaqnrmv",
            model.effectiveNetworkSecurityGroups().get(0).networkSecurityGroups().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AdaptiveNetworkHardeningProperties model = new AdaptiveNetworkHardeningProperties()
            .withRules(Arrays.asList(new Rule().withName("mjnlexwhcb")
                .withDirection(Direction.INBOUND)
                .withDestinationPort(175625790)
                .withProtocols(Arrays.asList(TransportProtocol.TCP, TransportProtocol.TCP, TransportProtocol.UDP))
                .withIpAddresses(Arrays.asList("rctat", "yintqpbrlcy", "duczkgof"))))
            .withRulesCalculationTime(OffsetDateTime.parse("2021-10-26T00:39:38Z"))
            .withEffectiveNetworkSecurityGroups(Arrays.asList(
                new EffectiveNetworkSecurityGroups().withNetworkInterface("cvcrrp")
                    .withNetworkSecurityGroups(Arrays.asList("tbstvjeaqnrmv", "fkoxmlghktuidvr")),
                new EffectiveNetworkSecurityGroups().withNetworkInterface("zlpdwwex")
                    .withNetworkSecurityGroups(
                        Arrays.asList("vlazipbhpwvqsgny", "uuzivensrpmeyyvp", "patlbijp", "gsksrfhf")),
                new EffectiveNetworkSecurityGroups().withNetworkInterface("lmknbnxwcdom")
                    .withNetworkSecurityGroups(Arrays.asList("fqawzfgbrttui", "clkiexhajl", "n", "hiqfyuttdiy")),
                new EffectiveNetworkSecurityGroups().withNetworkInterface("pvn")
                    .withNetworkSecurityGroups(Arrays.asList("mtx", "yctww", "zwxjlm"))));
        model = BinaryData.fromObject(model).toObject(AdaptiveNetworkHardeningProperties.class);
        Assertions.assertEquals("mjnlexwhcb", model.rules().get(0).name());
        Assertions.assertEquals(Direction.INBOUND, model.rules().get(0).direction());
        Assertions.assertEquals(175625790, model.rules().get(0).destinationPort());
        Assertions.assertEquals(TransportProtocol.TCP, model.rules().get(0).protocols().get(0));
        Assertions.assertEquals("rctat", model.rules().get(0).ipAddresses().get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-26T00:39:38Z"), model.rulesCalculationTime());
        Assertions.assertEquals("cvcrrp", model.effectiveNetworkSecurityGroups().get(0).networkInterface());
        Assertions.assertEquals("tbstvjeaqnrmv",
            model.effectiveNetworkSecurityGroups().get(0).networkSecurityGroups().get(0));
    }
}
