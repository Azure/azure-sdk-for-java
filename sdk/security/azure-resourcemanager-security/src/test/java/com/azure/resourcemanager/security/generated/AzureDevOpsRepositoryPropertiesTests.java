// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.models.ActionableRemediation;
import com.azure.resourcemanager.security.models.ActionableRemediationState;
import com.azure.resourcemanager.security.models.AnnotateDefaultBranchState;
import com.azure.resourcemanager.security.models.AzureDevOpsRepositoryProperties;
import com.azure.resourcemanager.security.models.CategoryConfiguration;
import com.azure.resourcemanager.security.models.InheritFromParentState;
import com.azure.resourcemanager.security.models.OnboardingState;
import com.azure.resourcemanager.security.models.RuleCategory;
import com.azure.resourcemanager.security.models.TargetBranchConfiguration;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AzureDevOpsRepositoryPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureDevOpsRepositoryProperties model = BinaryData.fromString(
            "{\"provisioningStatusMessage\":\"l\",\"provisioningStatusUpdateTimeUtc\":\"2021-05-04T10:50:30Z\",\"provisioningState\":\"DeletionFailure\",\"parentOrgName\":\"fmjnnawtqa\",\"parentProjectName\":\"xuckpggqoweyir\",\"repoId\":\"lisn\",\"repoUrl\":\"fl\",\"visibility\":\"mpizru\",\"onboardingState\":\"OnboardedByOtherConnector\",\"actionableRemediation\":{\"state\":\"Disabled\",\"categoryConfigurations\":[{\"minimumSeverityLevel\":\"fcngjsa\",\"category\":\"Dependencies\"},{\"minimumSeverityLevel\":\"xtmkzjvkviir\",\"category\":\"Code\"},{\"minimumSeverityLevel\":\"rwsdp\",\"category\":\"Secrets\"}],\"branchConfiguration\":{\"branchNames\":[\"zb\",\"lbyvictctbrxkjzw\",\"gxffmshkwf\"],\"annotateDefaultBranch\":\"Disabled\"},\"inheritFromParentState\":\"Enabled\"}}")
            .toObject(AzureDevOpsRepositoryProperties.class);
        Assertions.assertEquals("fmjnnawtqa", model.parentOrgName());
        Assertions.assertEquals("xuckpggqoweyir", model.parentProjectName());
        Assertions.assertEquals(OnboardingState.ONBOARDED_BY_OTHER_CONNECTOR, model.onboardingState());
        Assertions.assertEquals(ActionableRemediationState.DISABLED, model.actionableRemediation().state());
        Assertions.assertEquals("fcngjsa",
            model.actionableRemediation().categoryConfigurations().get(0).minimumSeverityLevel());
        Assertions.assertEquals(RuleCategory.DEPENDENCIES,
            model.actionableRemediation().categoryConfigurations().get(0).category());
        Assertions.assertEquals("zb", model.actionableRemediation().branchConfiguration().branchNames().get(0));
        Assertions.assertEquals(AnnotateDefaultBranchState.DISABLED,
            model.actionableRemediation().branchConfiguration().annotateDefaultBranch());
        Assertions.assertEquals(InheritFromParentState.ENABLED, model.actionableRemediation().inheritFromParentState());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureDevOpsRepositoryProperties model = new AzureDevOpsRepositoryProperties().withParentOrgName("fmjnnawtqa")
            .withParentProjectName("xuckpggqoweyir")
            .withOnboardingState(OnboardingState.ONBOARDED_BY_OTHER_CONNECTOR)
            .withActionableRemediation(new ActionableRemediation().withState(ActionableRemediationState.DISABLED)
                .withCategoryConfigurations(Arrays.asList(
                    new CategoryConfiguration().withMinimumSeverityLevel("fcngjsa")
                        .withCategory(RuleCategory.DEPENDENCIES),
                    new CategoryConfiguration().withMinimumSeverityLevel("xtmkzjvkviir")
                        .withCategory(RuleCategory.CODE),
                    new CategoryConfiguration().withMinimumSeverityLevel("rwsdp").withCategory(RuleCategory.SECRETS)))
                .withBranchConfiguration(new TargetBranchConfiguration()
                    .withBranchNames(Arrays.asList("zb", "lbyvictctbrxkjzw", "gxffmshkwf"))
                    .withAnnotateDefaultBranch(AnnotateDefaultBranchState.DISABLED))
                .withInheritFromParentState(InheritFromParentState.ENABLED));
        model = BinaryData.fromObject(model).toObject(AzureDevOpsRepositoryProperties.class);
        Assertions.assertEquals("fmjnnawtqa", model.parentOrgName());
        Assertions.assertEquals("xuckpggqoweyir", model.parentProjectName());
        Assertions.assertEquals(OnboardingState.ONBOARDED_BY_OTHER_CONNECTOR, model.onboardingState());
        Assertions.assertEquals(ActionableRemediationState.DISABLED, model.actionableRemediation().state());
        Assertions.assertEquals("fcngjsa",
            model.actionableRemediation().categoryConfigurations().get(0).minimumSeverityLevel());
        Assertions.assertEquals(RuleCategory.DEPENDENCIES,
            model.actionableRemediation().categoryConfigurations().get(0).category());
        Assertions.assertEquals("zb", model.actionableRemediation().branchConfiguration().branchNames().get(0));
        Assertions.assertEquals(AnnotateDefaultBranchState.DISABLED,
            model.actionableRemediation().branchConfiguration().annotateDefaultBranch());
        Assertions.assertEquals(InheritFromParentState.ENABLED, model.actionableRemediation().inheritFromParentState());
    }
}
