// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.models.TimeWindowCustomAlertRule;
import java.time.Duration;
import org.junit.jupiter.api.Assertions;

public final class TimeWindowCustomAlertRuleTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TimeWindowCustomAlertRule model = BinaryData.fromString(
            "{\"ruleType\":\"TimeWindowCustomAlertRule\",\"timeWindowSize\":\"PT65H45M11S\",\"minThreshold\":500448783,\"maxThreshold\":676639191,\"displayName\":\"exxbczwtr\",\"description\":\"iqzbq\",\"isEnabled\":true}")
            .toObject(TimeWindowCustomAlertRule.class);
        Assertions.assertEquals(true, model.isEnabled());
        Assertions.assertEquals(500448783, model.minThreshold());
        Assertions.assertEquals(676639191, model.maxThreshold());
        Assertions.assertEquals(Duration.parse("PT65H45M11S"), model.timeWindowSize());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TimeWindowCustomAlertRule model = new TimeWindowCustomAlertRule().withIsEnabled(true)
            .withMinThreshold(500448783)
            .withMaxThreshold(676639191)
            .withTimeWindowSize(Duration.parse("PT65H45M11S"));
        model = BinaryData.fromObject(model).toObject(TimeWindowCustomAlertRule.class);
        Assertions.assertEquals(true, model.isEnabled());
        Assertions.assertEquals(500448783, model.minThreshold());
        Assertions.assertEquals(676639191, model.maxThreshold());
        Assertions.assertEquals(Duration.parse("PT65H45M11S"), model.timeWindowSize());
    }
}
