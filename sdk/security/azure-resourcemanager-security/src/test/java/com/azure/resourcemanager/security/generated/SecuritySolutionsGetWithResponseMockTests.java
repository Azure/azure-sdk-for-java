// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.ProvisioningState;
import com.azure.resourcemanager.security.models.SecurityFamily;
import com.azure.resourcemanager.security.models.SecuritySolution;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SecuritySolutionsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"securityFamily\":\"SaasWaf\",\"provisioningState\":\"Succeeded\",\"template\":\"ctrzjwnzwckzebm\",\"protectionStatus\":\"vwdxgyypmxqzlm\"},\"location\":\"x\",\"id\":\"catkuhs\",\"name\":\"e\",\"type\":\"dkvviilyes\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        SecuritySolution response = manager.securitySolutions()
            .getWithResponse("bjxnnnoztn", "vdtuoamqobqeh", "pshtisy", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(SecurityFamily.SAAS_WAF, response.securityFamily());
        Assertions.assertEquals(ProvisioningState.SUCCEEDED, response.provisioningState());
        Assertions.assertEquals("ctrzjwnzwckzebm", response.template());
        Assertions.assertEquals("vwdxgyypmxqzlm", response.protectionStatus());
    }
}
