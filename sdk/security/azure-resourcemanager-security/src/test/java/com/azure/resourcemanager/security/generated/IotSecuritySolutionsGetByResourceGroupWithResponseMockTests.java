// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.AdditionalWorkspaceDataType;
import com.azure.resourcemanager.security.models.AdditionalWorkspaceType;
import com.azure.resourcemanager.security.models.DataSource;
import com.azure.resourcemanager.security.models.ExportData;
import com.azure.resourcemanager.security.models.IoTSecuritySolutionModel;
import com.azure.resourcemanager.security.models.RecommendationConfigStatus;
import com.azure.resourcemanager.security.models.RecommendationType;
import com.azure.resourcemanager.security.models.SecuritySolutionStatus;
import com.azure.resourcemanager.security.models.UnmaskedIpLoggingStatus;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class IotSecuritySolutionsGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"location\":\"gx\",\"properties\":{\"workspace\":\"ioqhcmcgml\",\"displayName\":\"pnvqxuyiarznhdq\",\"status\":\"Enabled\",\"export\":[\"RawEvents\",\"RawEvents\",\"RawEvents\"],\"disabledDataSources\":[\"TwinData\"],\"iotHubs\":[\"xo\",\"f\"],\"userDefinedResources\":{\"query\":\"zgccyn\",\"querySubscriptions\":[\"vmsiehedm\",\"voneey\"]},\"autoDiscoveredResources\":[\"a\",\"xtzayqwddig\",\"blsplzdss\"],\"recommendationsConfiguration\":[{\"recommendationType\":\"IoT_Baseline\",\"name\":\"eozbj\",\"status\":\"Disabled\"},{\"recommendationType\":\"IoT_PermissiveFirewallPolicy\",\"name\":\"izdnuehx\",\"status\":\"Enabled\"},{\"recommendationType\":\"IoT_EdgeLoggingOptions\",\"name\":\"sjdywb\",\"status\":\"Enabled\"}],\"unmaskedIpLoggingStatus\":\"Disabled\",\"additionalWorkspaces\":[{\"workspace\":\"actsawvxcimpthjr\",\"type\":\"Sentinel\",\"dataTypes\":[\"RawEvents\",\"RawEvents\"]},{\"workspace\":\"bnknyfuysj\",\"type\":\"Sentinel\",\"dataTypes\":[\"RawEvents\",\"RawEvents\",\"RawEvents\",\"Alerts\"]},{\"workspace\":\"rmybwmrotgeysyqn\",\"type\":\"Sentinel\",\"dataTypes\":[\"RawEvents\",\"RawEvents\"]},{\"workspace\":\"bf\",\"type\":\"Sentinel\",\"dataTypes\":[\"RawEvents\",\"RawEvents\",\"Alerts\"]}]},\"tags\":{\"osfzlnraxnfyzgua\":\"ji\",\"vjixgofqdqwsjm\":\"f\",\"ntlydprpensbmzj\":\"huvrqpbxdoicqp\",\"hbfexmizz\":\"itukoy\"},\"id\":\"xwjoqfzwand\",\"name\":\"hduwdvolxtqmr\",\"type\":\"c\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        IoTSecuritySolutionModel response = manager.iotSecuritySolutions()
            .getByResourceGroupWithResponse("vsms", "tluwozfvzasupc", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("gx", response.location());
        Assertions.assertEquals("ji", response.tags().get("osfzlnraxnfyzgua"));
        Assertions.assertEquals("ioqhcmcgml", response.workspace());
        Assertions.assertEquals("pnvqxuyiarznhdq", response.displayName());
        Assertions.assertEquals(SecuritySolutionStatus.ENABLED, response.status());
        Assertions.assertEquals(ExportData.RAW_EVENTS, response.export().get(0));
        Assertions.assertEquals(DataSource.TWIN_DATA, response.disabledDataSources().get(0));
        Assertions.assertEquals("xo", response.iotHubs().get(0));
        Assertions.assertEquals("zgccyn", response.userDefinedResources().query());
        Assertions.assertEquals("vmsiehedm", response.userDefinedResources().querySubscriptions().get(0));
        Assertions.assertEquals(RecommendationType.IO_T_BASELINE,
            response.recommendationsConfiguration().get(0).recommendationType());
        Assertions.assertEquals(RecommendationConfigStatus.DISABLED,
            response.recommendationsConfiguration().get(0).status());
        Assertions.assertEquals(UnmaskedIpLoggingStatus.DISABLED, response.unmaskedIpLoggingStatus());
        Assertions.assertEquals("actsawvxcimpthjr", response.additionalWorkspaces().get(0).workspace());
        Assertions.assertEquals(AdditionalWorkspaceType.SENTINEL, response.additionalWorkspaces().get(0).type());
        Assertions.assertEquals(AdditionalWorkspaceDataType.RAW_EVENTS,
            response.additionalWorkspaces().get(0).dataTypes().get(0));
    }
}
