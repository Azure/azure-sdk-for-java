// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.JitNetworkAccessPolicy;
import com.azure.resourcemanager.security.models.Protocol;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class JitNetworkAccessPoliciesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"virtualMachines\":[{\"id\":\"kzb\",\"ports\":[{\"number\":668220729,\"protocol\":\"*\",\"maxRequestAccessDuration\":\"athxoyxuu\"},{\"number\":1925509697,\"protocol\":\"TCP\",\"maxRequestAccessDuration\":\"usyrux\"}],\"publicIpAddress\":\"hhlhrvmgs\"},{\"id\":\"pgmncrvtp\",\"ports\":[{\"number\":1348509331,\"protocol\":\"*\",\"maxRequestAccessDuration\":\"omppz\"},{\"number\":118494776,\"protocol\":\"TCP\",\"maxRequestAccessDuration\":\"qmeu\"}],\"publicIpAddress\":\"lfcmpuaiugoceqtl\"}],\"requests\":[{\"virtualMachines\":[{\"id\":\"ymwic\",\"ports\":[]},{\"id\":\"urnc\",\"ports\":[]}],\"startTimeUtc\":\"2021-05-20T00:46:55Z\",\"requestor\":\"nla\",\"justification\":\"ixhqjqhgqw\"}],\"provisioningState\":\"xiwtwf\"},\"kind\":\"clalvemnnzugabky\",\"location\":\"syweohlmtsnvon\",\"id\":\"bftswcd\",\"name\":\"pnseptvdticca\",\"type\":\"lgzwkopxdkb\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        JitNetworkAccessPolicy response = manager.jitNetworkAccessPolicies()
            .getWithResponse("tgngwnxjftecg", "rzsqm", "dq", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("clalvemnnzugabky", response.kind());
        Assertions.assertEquals("kzb", response.virtualMachines().get(0).id());
        Assertions.assertEquals(668220729, response.virtualMachines().get(0).ports().get(0).number());
        Assertions.assertEquals(Protocol.ASTERISK, response.virtualMachines().get(0).ports().get(0).protocol());
        Assertions.assertEquals("athxoyxuu",
            response.virtualMachines().get(0).ports().get(0).maxRequestAccessDuration());
        Assertions.assertEquals("hhlhrvmgs", response.virtualMachines().get(0).publicIpAddress());
        Assertions.assertEquals("ymwic", response.requests().get(0).virtualMachines().get(0).id());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-20T00:46:55Z"),
            response.requests().get(0).startTimeUtc());
        Assertions.assertEquals("nla", response.requests().get(0).requestor());
        Assertions.assertEquals("ixhqjqhgqw", response.requests().get(0).justification());
    }
}
