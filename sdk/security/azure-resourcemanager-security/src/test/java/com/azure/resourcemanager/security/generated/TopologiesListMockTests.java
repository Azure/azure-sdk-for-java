// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.TopologyResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class TopologiesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"calculatedDateTime\":\"2021-10-18T05:20Z\",\"topologyResources\":[{\"resourceId\":\"hhasa\",\"severity\":\"auz\",\"recommendationsExist\":true,\"networkZones\":\"mkbp\",\"topologyScore\":1673901613,\"location\":\"bwtpwbjlpfwuq\",\"parents\":[{},{},{}],\"children\":[{},{},{},{}]},{\"resourceId\":\"tenyukslizm\",\"severity\":\"xghamrplanchqot\",\"recommendationsExist\":true,\"networkZones\":\"mxejwy\",\"topologyScore\":217448938,\"location\":\"jwvtuekbbypqsm\",\"parents\":[{},{},{}],\"children\":[{},{}]},{\"resourceId\":\"ei\",\"severity\":\"hjuwndalnjjhrgkj\",\"recommendationsExist\":true,\"networkZones\":\"ihl\",\"topologyScore\":341355481,\"location\":\"tajfjatoidn\",\"parents\":[{},{}],\"children\":[{},{}]},{\"resourceId\":\"cpzanaqv\",\"severity\":\"gnpuelrnanbrpkoc\",\"recommendationsExist\":false,\"networkZones\":\"a\",\"topologyScore\":2123976228,\"location\":\"t\",\"parents\":[{},{},{}],\"children\":[{}]}]},\"location\":\"wxggfagijxmdbo\",\"id\":\"fn\",\"name\":\"xha\",\"type\":\"u\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<TopologyResource> response = manager.topologies().list(com.azure.core.util.Context.NONE);

    }
}
