// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.GitLabGroupInner;
import com.azure.resourcemanager.security.models.DevOpsProvisioningState;
import com.azure.resourcemanager.security.models.GitLabGroupProperties;
import com.azure.resourcemanager.security.models.OnboardingState;
import org.junit.jupiter.api.Assertions;

public final class GitLabGroupInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GitLabGroupInner model = BinaryData.fromString(
            "{\"properties\":{\"provisioningStatusMessage\":\"ihehcecybmr\",\"provisioningStatusUpdateTimeUtc\":\"2021-10-27T04:01:09Z\",\"provisioningState\":\"DeletionFailure\",\"fullyQualifiedName\":\"mpxdlvy\",\"fullyQualifiedFriendlyName\":\"rexcrseqwjksghu\",\"url\":\"zhxogjggsvo\",\"onboardingState\":\"OnboardedByOtherConnector\"},\"id\":\"xibdafhrkmdyo\",\"name\":\"kxfbvfbhdyirhp\",\"type\":\"pgddeimawz\"}")
            .toObject(GitLabGroupInner.class);
        Assertions.assertEquals(DevOpsProvisioningState.DELETION_FAILURE, model.properties().provisioningState());
        Assertions.assertEquals(OnboardingState.ONBOARDED_BY_OTHER_CONNECTOR, model.properties().onboardingState());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GitLabGroupInner model = new GitLabGroupInner()
            .withProperties(new GitLabGroupProperties().withProvisioningState(DevOpsProvisioningState.DELETION_FAILURE)
                .withOnboardingState(OnboardingState.ONBOARDED_BY_OTHER_CONNECTOR));
        model = BinaryData.fromObject(model).toObject(GitLabGroupInner.class);
        Assertions.assertEquals(DevOpsProvisioningState.DELETION_FAILURE, model.properties().provisioningState());
        Assertions.assertEquals(OnboardingState.ONBOARDED_BY_OTHER_CONNECTOR, model.properties().onboardingState());
    }
}
