// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.models.JitNetworkAccessPolicyInitiatePort;
import com.azure.resourcemanager.security.models.JitNetworkAccessPolicyInitiateRequest;
import com.azure.resourcemanager.security.models.JitNetworkAccessPolicyInitiateVirtualMachine;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class JitNetworkAccessPolicyInitiateRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        JitNetworkAccessPolicyInitiateRequest model = BinaryData.fromString(
            "{\"virtualMachines\":[{\"id\":\"xrxc\",\"ports\":[{\"number\":2074998294,\"allowedSourceAddressPrefix\":\"savokqdzf\",\"endTimeUtc\":\"2021-02-04T21:35:57Z\"},{\"number\":1042869569,\"allowedSourceAddressPrefix\":\"vjlfrqtt\",\"endTimeUtc\":\"2021-10-27T10:22:37Z\"},{\"number\":213163160,\"allowedSourceAddressPrefix\":\"katnwxyi\",\"endTimeUtc\":\"2021-10-08T07:32:22Z\"}]}],\"justification\":\"dkqqfkuvscxkd\"}")
            .toObject(JitNetworkAccessPolicyInitiateRequest.class);
        Assertions.assertEquals("xrxc", model.virtualMachines().get(0).id());
        Assertions.assertEquals(2074998294, model.virtualMachines().get(0).ports().get(0).number());
        Assertions.assertEquals("savokqdzf",
            model.virtualMachines().get(0).ports().get(0).allowedSourceAddressPrefix());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-04T21:35:57Z"),
            model.virtualMachines().get(0).ports().get(0).endTimeUtc());
        Assertions.assertEquals("dkqqfkuvscxkd", model.justification());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        JitNetworkAccessPolicyInitiateRequest model = new JitNetworkAccessPolicyInitiateRequest()
            .withVirtualMachines(Arrays.asList(new JitNetworkAccessPolicyInitiateVirtualMachine().withId("xrxc")
                .withPorts(Arrays.asList(
                    new JitNetworkAccessPolicyInitiatePort().withNumber(2074998294)
                        .withAllowedSourceAddressPrefix("savokqdzf")
                        .withEndTimeUtc(OffsetDateTime.parse("2021-02-04T21:35:57Z")),
                    new JitNetworkAccessPolicyInitiatePort().withNumber(1042869569)
                        .withAllowedSourceAddressPrefix("vjlfrqtt")
                        .withEndTimeUtc(OffsetDateTime.parse("2021-10-27T10:22:37Z")),
                    new JitNetworkAccessPolicyInitiatePort().withNumber(213163160)
                        .withAllowedSourceAddressPrefix("katnwxyi")
                        .withEndTimeUtc(OffsetDateTime.parse("2021-10-08T07:32:22Z"))))))
            .withJustification("dkqqfkuvscxkd");
        model = BinaryData.fromObject(model).toObject(JitNetworkAccessPolicyInitiateRequest.class);
        Assertions.assertEquals("xrxc", model.virtualMachines().get(0).id());
        Assertions.assertEquals(2074998294, model.virtualMachines().get(0).ports().get(0).number());
        Assertions.assertEquals("savokqdzf",
            model.virtualMachines().get(0).ports().get(0).allowedSourceAddressPrefix());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-04T21:35:57Z"),
            model.virtualMachines().get(0).ports().get(0).endTimeUtc());
        Assertions.assertEquals("dkqqfkuvscxkd", model.justification());
    }
}
