// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.ActionableRemediationState;
import com.azure.resourcemanager.security.models.AnnotateDefaultBranchState;
import com.azure.resourcemanager.security.models.AzureDevOpsProject;
import com.azure.resourcemanager.security.models.InheritFromParentState;
import com.azure.resourcemanager.security.models.OnboardingState;
import com.azure.resourcemanager.security.models.RuleCategory;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AzureDevOpsProjectsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningStatusMessage\":\"x\",\"provisioningStatusUpdateTimeUtc\":\"2021-10-04T16:13:19Z\",\"provisioningState\":\"Pending\",\"parentOrgName\":\"wrrlccklyf\",\"projectId\":\"ms\",\"onboardingState\":\"NotApplicable\",\"actionableRemediation\":{\"state\":\"None\",\"categoryConfigurations\":[{\"minimumSeverityLevel\":\"o\",\"category\":\"Artifacts\"}],\"branchConfiguration\":{\"branchNames\":[\"apvibzi\",\"yvichcap\",\"khjxnrkbn\"],\"annotateDefaultBranch\":\"Disabled\"},\"inheritFromParentState\":\"Disabled\"}},\"id\":\"lzhznfgvlxyx\",\"name\":\"nctigpksywi\",\"type\":\"k\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        AzureDevOpsProject response = manager.azureDevOpsProjects()
            .getWithResponse("tkqrfbgyn", "fwvzdteqjm", "qxu", "gkaxnypr", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("wrrlccklyf", response.properties().parentOrgName());
        Assertions.assertEquals(OnboardingState.NOT_APPLICABLE, response.properties().onboardingState());
        Assertions.assertEquals(ActionableRemediationState.NONE, response.properties().actionableRemediation().state());
        Assertions.assertEquals("o",
            response.properties().actionableRemediation().categoryConfigurations().get(0).minimumSeverityLevel());
        Assertions.assertEquals(RuleCategory.ARTIFACTS,
            response.properties().actionableRemediation().categoryConfigurations().get(0).category());
        Assertions.assertEquals("apvibzi",
            response.properties().actionableRemediation().branchConfiguration().branchNames().get(0));
        Assertions.assertEquals(AnnotateDefaultBranchState.DISABLED,
            response.properties().actionableRemediation().branchConfiguration().annotateDefaultBranch());
        Assertions.assertEquals(InheritFromParentState.DISABLED,
            response.properties().actionableRemediation().inheritFromParentState());
    }
}
