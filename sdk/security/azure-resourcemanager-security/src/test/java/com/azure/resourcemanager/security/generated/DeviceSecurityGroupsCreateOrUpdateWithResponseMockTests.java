// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.AllowlistCustomAlertRule;
import com.azure.resourcemanager.security.models.DenylistCustomAlertRule;
import com.azure.resourcemanager.security.models.DeviceSecurityGroup;
import com.azure.resourcemanager.security.models.ThresholdCustomAlertRule;
import com.azure.resourcemanager.security.models.TimeWindowCustomAlertRule;
import java.nio.charset.StandardCharsets;
import java.time.Duration;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DeviceSecurityGroupsCreateOrUpdateWithResponseMockTests {
    @Test
    public void testCreateOrUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"thresholdRules\":[{\"ruleType\":\"ThresholdCustomAlertRule\",\"minThreshold\":293542338,\"maxThreshold\":296875571,\"displayName\":\"zccouh\",\"description\":\"vkdf\",\"isEnabled\":false},{\"ruleType\":\"ThresholdCustomAlertRule\",\"minThreshold\":971808807,\"maxThreshold\":130210353,\"displayName\":\"rb\",\"description\":\"epir\",\"isEnabled\":false}],\"timeWindowRules\":[{\"ruleType\":\"TimeWindowCustomAlertRule\",\"timeWindowSize\":\"PT87H59M9S\",\"minThreshold\":69542401,\"maxThreshold\":1312108596,\"displayName\":\"bvxqtolpwb\",\"description\":\"vhcbtzap\",\"isEnabled\":true},{\"ruleType\":\"TimeWindowCustomAlertRule\",\"timeWindowSize\":\"PT190H38M17S\",\"minThreshold\":820151066,\"maxThreshold\":1825727544,\"displayName\":\"tickfkith\",\"description\":\"oc\",\"isEnabled\":true},{\"ruleType\":\"TimeWindowCustomAlertRule\",\"timeWindowSize\":\"PT183H46M\",\"minThreshold\":1139586778,\"maxThreshold\":1502072665,\"displayName\":\"gbjwvrudmpw\",\"description\":\"pmi\",\"isEnabled\":true}],\"allowlistRules\":[{\"ruleType\":\"AllowlistCustomAlertRule\",\"allowlistValues\":[\"abes\",\"yzwphbjks\",\"ecmbaaj\"],\"valueType\":\"String\",\"displayName\":\"dkqlvzkf\",\"description\":\"des\",\"isEnabled\":true}],\"denylistRules\":[{\"ruleType\":\"DenylistCustomAlertRule\",\"denylistValues\":[\"llbhjjpduib\",\"rrrqnneqrypyurv\",\"hhovtue\"],\"valueType\":\"IpCidr\",\"displayName\":\"hbwcxybtdzycx\",\"description\":\"oegjzgpljb\",\"isEnabled\":true},{\"ruleType\":\"DenylistCustomAlertRule\",\"denylistValues\":[\"zsrazcbybic\",\"hxh\",\"pua\",\"asizzfmugykwuyc\"],\"valueType\":\"IpCidr\",\"displayName\":\"nndzg\",\"description\":\"dzitjzffpher\",\"isEnabled\":false},{\"ruleType\":\"DenylistCustomAlertRule\",\"denylistValues\":[\"vswtwonadezm\",\"xvfybxmmr\",\"nuvqkrrsguog\",\"c\"],\"valueType\":\"String\",\"displayName\":\"p\",\"description\":\"bensjflwpft\",\"isEnabled\":true},{\"ruleType\":\"DenylistCustomAlertRule\",\"denylistValues\":[\"tmvifgcv\",\"im\"],\"valueType\":\"String\",\"displayName\":\"t\",\"description\":\"xgosnxa\",\"isEnabled\":false}]},\"id\":\"tcdf\",\"name\":\"zxaoxlhmvjcnnls\",\"type\":\"nucqxhpaqo\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        DeviceSecurityGroup response = manager.deviceSecurityGroups()
            .define("rqnnmju")
            .withExistingResourceId("axxfdlypkcpw")
            .withThresholdRules(Arrays.asList(
                new ThresholdCustomAlertRule().withIsEnabled(false)
                    .withMinThreshold(1103501330)
                    .withMaxThreshold(917795343),
                new ThresholdCustomAlertRule().withIsEnabled(true)
                    .withMinThreshold(871763262)
                    .withMaxThreshold(1155694719),
                new ThresholdCustomAlertRule().withIsEnabled(false)
                    .withMinThreshold(1818690115)
                    .withMaxThreshold(773330116)))
            .withTimeWindowRules(Arrays.asList(
                new TimeWindowCustomAlertRule().withIsEnabled(false)
                    .withMinThreshold(929762648)
                    .withMaxThreshold(22328362)
                    .withTimeWindowSize(Duration.parse("PT51H24M15S")),
                new TimeWindowCustomAlertRule().withIsEnabled(false)
                    .withMinThreshold(1199654899)
                    .withMaxThreshold(1403959067)
                    .withTimeWindowSize(Duration.parse("PT117H27M12S")),
                new TimeWindowCustomAlertRule().withIsEnabled(true)
                    .withMinThreshold(1576102556)
                    .withMaxThreshold(260630937)
                    .withTimeWindowSize(Duration.parse("PT87H13M31S"))))
            .withAllowlistRules(Arrays.asList(
                new AllowlistCustomAlertRule().withIsEnabled(false)
                    .withAllowlistValues(Arrays.asList("m", "gftshfgmuxuqiags", "oikuqirhsk", "paowkgvnlfueyxfz")),
                new AllowlistCustomAlertRule().withIsEnabled(true)
                    .withAllowlistValues(Arrays.asList("l", "fknb", "zwi")),
                new AllowlistCustomAlertRule().withIsEnabled(false)
                    .withAllowlistValues(Arrays.asList("tpfxxgjahyxfwf", "t", "veyfbkqynlzxeme", "upjckiehdm")),
                new AllowlistCustomAlertRule().withIsEnabled(true)
                    .withAllowlistValues(Arrays.asList("sapvbcqpfu", "ekijhminen", "bivpyrkvor"))))
            .withDenylistRules(Arrays.asList(
                new DenylistCustomAlertRule().withIsEnabled(false).withDenylistValues(Arrays.asList("m")),
                new DenylistCustomAlertRule().withIsEnabled(true).withDenylistValues(Arrays.asList("xutcbvriuvnfazx")),
                new DenylistCustomAlertRule().withIsEnabled(true)
                    .withDenylistValues(Arrays.asList("etx", "dqiuspguzljvgji", "zq", "hl")),
                new DenylistCustomAlertRule().withIsEnabled(true)
                    .withDenylistValues(Arrays.asList("rpnjygllfkchhgsj", "zzcajl"))))
            .create();

        Assertions.assertEquals(false, response.thresholdRules().get(0).isEnabled());
        Assertions.assertEquals(293542338, response.thresholdRules().get(0).minThreshold());
        Assertions.assertEquals(296875571, response.thresholdRules().get(0).maxThreshold());
        Assertions.assertEquals(true, response.timeWindowRules().get(0).isEnabled());
        Assertions.assertEquals(69542401, response.timeWindowRules().get(0).minThreshold());
        Assertions.assertEquals(1312108596, response.timeWindowRules().get(0).maxThreshold());
        Assertions.assertEquals(Duration.parse("PT87H59M9S"), response.timeWindowRules().get(0).timeWindowSize());
        Assertions.assertEquals(true, response.allowlistRules().get(0).isEnabled());
        Assertions.assertEquals("abes", response.allowlistRules().get(0).allowlistValues().get(0));
        Assertions.assertEquals(true, response.denylistRules().get(0).isEnabled());
        Assertions.assertEquals("llbhjjpduib", response.denylistRules().get(0).denylistValues().get(0));
    }
}
