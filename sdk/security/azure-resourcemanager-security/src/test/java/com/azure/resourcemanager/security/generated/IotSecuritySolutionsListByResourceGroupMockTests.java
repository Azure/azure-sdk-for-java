// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.AdditionalWorkspaceDataType;
import com.azure.resourcemanager.security.models.AdditionalWorkspaceType;
import com.azure.resourcemanager.security.models.DataSource;
import com.azure.resourcemanager.security.models.ExportData;
import com.azure.resourcemanager.security.models.IoTSecuritySolutionModel;
import com.azure.resourcemanager.security.models.RecommendationConfigStatus;
import com.azure.resourcemanager.security.models.RecommendationType;
import com.azure.resourcemanager.security.models.SecuritySolutionStatus;
import com.azure.resourcemanager.security.models.UnmaskedIpLoggingStatus;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class IotSecuritySolutionsListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"location\":\"btxjeaoqaqbzg\",\"properties\":{\"workspace\":\"w\",\"displayName\":\"v\",\"status\":\"Disabled\",\"export\":[\"RawEvents\",\"RawEvents\",\"RawEvents\"],\"disabledDataSources\":[\"TwinData\",\"TwinData\"],\"iotHubs\":[\"iyslpkcvmwfaux\"],\"userDefinedResources\":{\"query\":\"pmywbormcq\",\"querySubscriptions\":[\"ciijqpkzfbojxj\",\"cs\",\"yqwixvcpwnkwywzw\",\"falickduoiqtamty\"]},\"autoDiscoveredResources\":[\"nxrwzawnvs\"],\"recommendationsConfiguration\":[{\"recommendationType\":\"IoT_SharedCredentials\",\"name\":\"agxnvhycvdimw\",\"status\":\"Enabled\"},{\"recommendationType\":\"IoT_VulnerableTLSCipherSuite\",\"name\":\"gzgy\",\"status\":\"Enabled\"}],\"unmaskedIpLoggingStatus\":\"Disabled\",\"additionalWorkspaces\":[{\"workspace\":\"weryekzk\",\"type\":\"Sentinel\",\"dataTypes\":[\"Alerts\",\"Alerts\"]},{\"workspace\":\"w\",\"type\":\"Sentinel\",\"dataTypes\":[\"RawEvents\",\"Alerts\"]}]},\"tags\":{\"ynudqllzsa\":\"jtfvpndpmiljpn\"},\"id\":\"zp\",\"name\":\"lxeehuxiq\",\"type\":\"zlrayme\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<IoTSecuritySolutionModel> response
            = manager.iotSecuritySolutions().listByResourceGroup("zjd", "r", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("btxjeaoqaqbzg", response.iterator().next().location());
        Assertions.assertEquals("jtfvpndpmiljpn", response.iterator().next().tags().get("ynudqllzsa"));
        Assertions.assertEquals("w", response.iterator().next().workspace());
        Assertions.assertEquals("v", response.iterator().next().displayName());
        Assertions.assertEquals(SecuritySolutionStatus.DISABLED, response.iterator().next().status());
        Assertions.assertEquals(ExportData.RAW_EVENTS, response.iterator().next().export().get(0));
        Assertions.assertEquals(DataSource.TWIN_DATA, response.iterator().next().disabledDataSources().get(0));
        Assertions.assertEquals("iyslpkcvmwfaux", response.iterator().next().iotHubs().get(0));
        Assertions.assertEquals("pmywbormcq", response.iterator().next().userDefinedResources().query());
        Assertions.assertEquals("ciijqpkzfbojxj",
            response.iterator().next().userDefinedResources().querySubscriptions().get(0));
        Assertions.assertEquals(RecommendationType.IO_T_SHARED_CREDENTIALS,
            response.iterator().next().recommendationsConfiguration().get(0).recommendationType());
        Assertions.assertEquals(RecommendationConfigStatus.ENABLED,
            response.iterator().next().recommendationsConfiguration().get(0).status());
        Assertions.assertEquals(UnmaskedIpLoggingStatus.DISABLED, response.iterator().next().unmaskedIpLoggingStatus());
        Assertions.assertEquals("weryekzk", response.iterator().next().additionalWorkspaces().get(0).workspace());
        Assertions.assertEquals(AdditionalWorkspaceType.SENTINEL,
            response.iterator().next().additionalWorkspaces().get(0).type());
        Assertions.assertEquals(AdditionalWorkspaceDataType.ALERTS,
            response.iterator().next().additionalWorkspaces().get(0).dataTypes().get(0));
    }
}
