// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.GovernanceAssignment;
import com.azure.resourcemanager.security.models.GovernanceAssignmentAdditionalData;
import com.azure.resourcemanager.security.models.GovernanceEmailNotification;
import com.azure.resourcemanager.security.models.RemediationEta;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class GovernanceAssignmentsCreateOrUpdateWithResponseMockTests {
    @Test
    public void testCreateOrUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"owner\":\"haz\",\"remediationDueDate\":\"2021-08-02T09:52:45Z\",\"remediationEta\":{\"eta\":\"2021-11-01T14:52:31Z\",\"justification\":\"ivz\"},\"isGracePeriod\":true,\"governanceEmailNotification\":{\"disableManagerEmailNotification\":false,\"disableOwnerEmailNotification\":true},\"additionalData\":{\"ticketNumber\":837382876,\"ticketLink\":\"iosiqsy\",\"ticketStatus\":\"f\"}},\"id\":\"qwdr\",\"name\":\"xtfdag\",\"type\":\"mrcokzzertkounz\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        GovernanceAssignment response = manager.governanceAssignments()
            .define("xynofxlttxoqxtd")
            .withExistingAssessment("cnginxdvm", "oyqxfvgyxz")
            .withOwner("jsji")
            .withRemediationDueDate(OffsetDateTime.parse("2021-10-29T23:59:47Z"))
            .withRemediationEta(new RemediationEta().withEta(OffsetDateTime.parse("2021-06-10T19:34:55Z"))
                .withJustification("skcjhmmofb"))
            .withIsGracePeriod(true)
            .withGovernanceEmailNotification(new GovernanceEmailNotification().withDisableManagerEmailNotification(true)
                .withDisableOwnerEmailNotification(true))
            .withAdditionalData(new GovernanceAssignmentAdditionalData().withTicketNumber(934153123)
                .withTicketLink("nlsfgnyscac")
                .withTicketStatus("tbzetxyg"))
            .create();

        Assertions.assertEquals("haz", response.owner());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-02T09:52:45Z"), response.remediationDueDate());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-01T14:52:31Z"), response.remediationEta().eta());
        Assertions.assertEquals("ivz", response.remediationEta().justification());
        Assertions.assertEquals(true, response.isGracePeriod());
        Assertions.assertEquals(false, response.governanceEmailNotification().disableManagerEmailNotification());
        Assertions.assertEquals(true, response.governanceEmailNotification().disableOwnerEmailNotification());
        Assertions.assertEquals(837382876, response.additionalData().ticketNumber());
        Assertions.assertEquals("iosiqsy", response.additionalData().ticketLink());
        Assertions.assertEquals("f", response.additionalData().ticketStatus());
    }
}
