// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.GitLabProjectInner;
import com.azure.resourcemanager.security.models.DevOpsProvisioningState;
import com.azure.resourcemanager.security.models.GitLabProjectListResponse;
import com.azure.resourcemanager.security.models.GitLabProjectProperties;
import com.azure.resourcemanager.security.models.OnboardingState;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class GitLabProjectListResponseTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GitLabProjectListResponse model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"provisioningStatusMessage\":\"xt\",\"provisioningStatusUpdateTimeUtc\":\"2021-07-12T03:57:31Z\",\"provisioningState\":\"Canceled\",\"fullyQualifiedName\":\"hehnmnaoya\",\"fullyQualifiedFriendlyName\":\"coeqswankltytm\",\"fullyQualifiedParentGroupName\":\"roznnhdrlktgj\",\"url\":\"gguxhemlwyw\",\"onboardingState\":\"OnboardedByOtherConnector\"},\"id\":\"czg\",\"name\":\"bukklels\",\"type\":\"xblycsxzuj\"},{\"properties\":{\"provisioningStatusMessage\":\"smdesqplpvmjcd\",\"provisioningStatusUpdateTimeUtc\":\"2020-12-26T11:47:38Z\",\"provisioningState\":\"Failed\",\"fullyQualifiedName\":\"yvteowxvgpiudeu\",\"fullyQualifiedFriendlyName\":\"sxze\",\"fullyQualifiedParentGroupName\":\"axwk\",\"url\":\"ykhv\",\"onboardingState\":\"OnboardedByOtherConnector\"},\"id\":\"epmrut\",\"name\":\"nabaobnslujd\",\"type\":\"ltymkmvguihywart\"},{\"properties\":{\"provisioningStatusMessage\":\"kixkykxdssjpemm\",\"provisioningStatusUpdateTimeUtc\":\"2021-06-01T15:16:26Z\",\"provisioningState\":\"Failed\",\"fullyQualifiedName\":\"kkflrmymyincqlhr\",\"fullyQualifiedFriendlyName\":\"wslmiiiovgqcg\",\"fullyQualifiedParentGroupName\":\"ugqkctotiowlxteq\",\"url\":\"tjgwdtguk\",\"onboardingState\":\"Onboarded\"},\"id\":\"b\",\"name\":\"wphqlkccuzgygqw\",\"type\":\"hoi\"}],\"nextLink\":\"wgniipr\"}")
            .toObject(GitLabProjectListResponse.class);
        Assertions.assertEquals(DevOpsProvisioningState.CANCELED,
            model.value().get(0).properties().provisioningState());
        Assertions.assertEquals(OnboardingState.ONBOARDED_BY_OTHER_CONNECTOR,
            model.value().get(0).properties().onboardingState());
        Assertions.assertEquals("wgniipr", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GitLabProjectListResponse model = new GitLabProjectListResponse()
            .withValue(Arrays.asList(
                new GitLabProjectInner().withProperties(
                    new GitLabProjectProperties().withProvisioningState(DevOpsProvisioningState.CANCELED)
                        .withOnboardingState(OnboardingState.ONBOARDED_BY_OTHER_CONNECTOR)),
                new GitLabProjectInner()
                    .withProperties(new GitLabProjectProperties().withProvisioningState(DevOpsProvisioningState.FAILED)
                        .withOnboardingState(OnboardingState.ONBOARDED_BY_OTHER_CONNECTOR)),
                new GitLabProjectInner()
                    .withProperties(new GitLabProjectProperties().withProvisioningState(DevOpsProvisioningState.FAILED)
                        .withOnboardingState(OnboardingState.ONBOARDED))))
            .withNextLink("wgniipr");
        model = BinaryData.fromObject(model).toObject(GitLabProjectListResponse.class);
        Assertions.assertEquals(DevOpsProvisioningState.CANCELED,
            model.value().get(0).properties().provisioningState());
        Assertions.assertEquals(OnboardingState.ONBOARDED_BY_OTHER_CONNECTOR,
            model.value().get(0).properties().onboardingState());
        Assertions.assertEquals("wgniipr", model.nextLink());
    }
}
