// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.models.MqttD2CMessagesNotInAllowedRange;
import java.time.Duration;
import org.junit.jupiter.api.Assertions;

public final class MqttD2CMessagesNotInAllowedRangeTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MqttD2CMessagesNotInAllowedRange model = BinaryData.fromString(
            "{\"ruleType\":\"MqttD2CMessagesNotInAllowedRange\",\"timeWindowSize\":\"PT140H45M42S\",\"minThreshold\":2011044694,\"maxThreshold\":384792107,\"displayName\":\"syx\",\"description\":\"cbmtredscnnst\",\"isEnabled\":true}")
            .toObject(MqttD2CMessagesNotInAllowedRange.class);
        Assertions.assertEquals(true, model.isEnabled());
        Assertions.assertEquals(2011044694, model.minThreshold());
        Assertions.assertEquals(384792107, model.maxThreshold());
        Assertions.assertEquals(Duration.parse("PT140H45M42S"), model.timeWindowSize());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MqttD2CMessagesNotInAllowedRange model
            = new MqttD2CMessagesNotInAllowedRange().withIsEnabled(true).withMinThreshold(2011044694)
                .withMaxThreshold(384792107).withTimeWindowSize(Duration.parse("PT140H45M42S"));
        model = BinaryData.fromObject(model).toObject(MqttD2CMessagesNotInAllowedRange.class);
        Assertions.assertEquals(true, model.isEnabled());
        Assertions.assertEquals(2011044694, model.minThreshold());
        Assertions.assertEquals(384792107, model.maxThreshold());
        Assertions.assertEquals(Duration.parse("PT140H45M42S"), model.timeWindowSize());
    }
}
