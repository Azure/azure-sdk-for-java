// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.DevOpsPolicy;
import com.azure.resourcemanager.security.models.DevOpsPolicySource;
import com.azure.resourcemanager.security.models.DevOpsPolicyType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DevOpsPoliciesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningStatusMessage\":\"spmjvailfauyv\",\"provisioningStatusUpdateTimeUtc\":\"2021-07-09T16:08:59Z\",\"provisioningState\":\"Pending\",\"source\":\"BuiltIn\",\"policyId\":\"a4fcfc93-41f7-4b2d-8aa6-40d874234bb1\",\"webUrl\":\"wbztrt\",\"version\":\"dwvog\",\"type\":\"Pipeline\",\"content\":\"dhg\"},\"id\":\"lor\",\"name\":\"hbtofc\",\"type\":\"xk\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<DevOpsPolicy> response = manager.devOpsPolicies()
            .list("fuxnvkdslcofuvtf", "ehoui", "aklhjfddxqfuss", com.azure.core.util.Context.NONE);

        Assertions.assertEquals(DevOpsPolicySource.BUILT_IN, response.iterator().next().properties().source());
        Assertions.assertEquals("dwvog", response.iterator().next().properties().version());
        Assertions.assertEquals(DevOpsPolicyType.PIPELINE, response.iterator().next().properties().type());
        Assertions.assertEquals("dhg", response.iterator().next().properties().content());
    }
}
