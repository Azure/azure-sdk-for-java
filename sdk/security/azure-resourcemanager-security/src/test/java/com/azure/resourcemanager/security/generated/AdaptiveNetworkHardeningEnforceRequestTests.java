// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.models.AdaptiveNetworkHardeningEnforceRequest;
import com.azure.resourcemanager.security.models.Direction;
import com.azure.resourcemanager.security.models.Rule;
import com.azure.resourcemanager.security.models.TransportProtocol;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AdaptiveNetworkHardeningEnforceRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AdaptiveNetworkHardeningEnforceRequest model = BinaryData.fromString(
            "{\"rules\":[{\"name\":\"ah\",\"direction\":\"Inbound\",\"destinationPort\":829874658,\"protocols\":[\"UDP\",\"TCP\"],\"ipAddresses\":[\"gwzsf\"]},{\"name\":\"edous\",\"direction\":\"Outbound\",\"destinationPort\":417418918,\"protocols\":[\"UDP\",\"UDP\"],\"ipAddresses\":[\"ogfkbebauzlqb\",\"xxw\",\"f\",\"njzudr\"]},{\"name\":\"zkg\",\"direction\":\"Inbound\",\"destinationPort\":1612164141,\"protocols\":[\"UDP\",\"UDP\"],\"ipAddresses\":[\"rhmngqbedy\"]}],\"networkSecurityGroups\":[\"s\"]}")
            .toObject(AdaptiveNetworkHardeningEnforceRequest.class);
        Assertions.assertEquals("ah", model.rules().get(0).name());
        Assertions.assertEquals(Direction.INBOUND, model.rules().get(0).direction());
        Assertions.assertEquals(829874658, model.rules().get(0).destinationPort());
        Assertions.assertEquals(TransportProtocol.UDP, model.rules().get(0).protocols().get(0));
        Assertions.assertEquals("gwzsf", model.rules().get(0).ipAddresses().get(0));
        Assertions.assertEquals("s", model.networkSecurityGroups().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AdaptiveNetworkHardeningEnforceRequest model
            = new AdaptiveNetworkHardeningEnforceRequest().withRules(Arrays.asList(
                new Rule().withName("ah").withDirection(Direction.INBOUND).withDestinationPort(829874658)
                    .withProtocols(Arrays.asList(TransportProtocol.UDP, TransportProtocol.TCP))
                    .withIpAddresses(Arrays.asList("gwzsf")),
                new Rule().withName("edous").withDirection(Direction.OUTBOUND).withDestinationPort(417418918)
                    .withProtocols(Arrays.asList(TransportProtocol.UDP, TransportProtocol.UDP))
                    .withIpAddresses(Arrays.asList("ogfkbebauzlqb", "xxw", "f", "njzudr")),
                new Rule().withName("zkg").withDirection(Direction.INBOUND).withDestinationPort(1612164141)
                    .withProtocols(Arrays.asList(TransportProtocol.UDP, TransportProtocol.UDP))
                    .withIpAddresses(Arrays.asList("rhmngqbedy"))))
                .withNetworkSecurityGroups(Arrays.asList("s"));
        model = BinaryData.fromObject(model).toObject(AdaptiveNetworkHardeningEnforceRequest.class);
        Assertions.assertEquals("ah", model.rules().get(0).name());
        Assertions.assertEquals(Direction.INBOUND, model.rules().get(0).direction());
        Assertions.assertEquals(829874658, model.rules().get(0).destinationPort());
        Assertions.assertEquals(TransportProtocol.UDP, model.rules().get(0).protocols().get(0));
        Assertions.assertEquals("gwzsf", model.rules().get(0).ipAddresses().get(0));
        Assertions.assertEquals("s", model.networkSecurityGroups().get(0));
    }
}
