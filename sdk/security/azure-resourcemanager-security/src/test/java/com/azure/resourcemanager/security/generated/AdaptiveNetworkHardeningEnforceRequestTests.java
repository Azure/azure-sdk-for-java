// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.models.AdaptiveNetworkHardeningEnforceRequest;
import com.azure.resourcemanager.security.models.Direction;
import com.azure.resourcemanager.security.models.Rule;
import com.azure.resourcemanager.security.models.TransportProtocol;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AdaptiveNetworkHardeningEnforceRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AdaptiveNetworkHardeningEnforceRequest model = BinaryData.fromString(
            "{\"rules\":[{\"name\":\"n\",\"direction\":\"Outbound\",\"destinationPort\":1742516041,\"protocols\":[\"UDP\",\"TCP\",\"UDP\",\"UDP\"],\"ipAddresses\":[\"maonurj\",\"umghihpvecmsl\",\"lbl\"]},{\"name\":\"xltbsjuscvsf\",\"direction\":\"Outbound\",\"destinationPort\":1272812040,\"protocols\":[\"TCP\",\"TCP\",\"UDP\",\"UDP\"],\"ipAddresses\":[\"zqccydrtce\"]},{\"name\":\"d\",\"direction\":\"Inbound\",\"destinationPort\":1889239533,\"protocols\":[\"TCP\",\"UDP\",\"TCP\",\"TCP\"],\"ipAddresses\":[\"qzgwldoychil\",\"cecfehuwaoaguh\",\"cqlliz\",\"tac\"]}],\"networkSecurityGroups\":[\"vhrweftkwqejpmv\",\"s\"]}")
            .toObject(AdaptiveNetworkHardeningEnforceRequest.class);
        Assertions.assertEquals("n", model.rules().get(0).name());
        Assertions.assertEquals(Direction.OUTBOUND, model.rules().get(0).direction());
        Assertions.assertEquals(1742516041, model.rules().get(0).destinationPort());
        Assertions.assertEquals(TransportProtocol.UDP, model.rules().get(0).protocols().get(0));
        Assertions.assertEquals("maonurj", model.rules().get(0).ipAddresses().get(0));
        Assertions.assertEquals("vhrweftkwqejpmv", model.networkSecurityGroups().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AdaptiveNetworkHardeningEnforceRequest model = new AdaptiveNetworkHardeningEnforceRequest()
            .withRules(Arrays.asList(
                new Rule().withName("n")
                    .withDirection(Direction.OUTBOUND)
                    .withDestinationPort(1742516041)
                    .withProtocols(Arrays.asList(TransportProtocol.UDP, TransportProtocol.TCP, TransportProtocol.UDP,
                        TransportProtocol.UDP))
                    .withIpAddresses(Arrays.asList("maonurj", "umghihpvecmsl", "lbl")),
                new Rule().withName("xltbsjuscvsf")
                    .withDirection(Direction.OUTBOUND)
                    .withDestinationPort(1272812040)
                    .withProtocols(Arrays.asList(TransportProtocol.TCP, TransportProtocol.TCP, TransportProtocol.UDP,
                        TransportProtocol.UDP))
                    .withIpAddresses(Arrays.asList("zqccydrtce")),
                new Rule().withName("d")
                    .withDirection(Direction.INBOUND)
                    .withDestinationPort(1889239533)
                    .withProtocols(Arrays.asList(TransportProtocol.TCP, TransportProtocol.UDP, TransportProtocol.TCP,
                        TransportProtocol.TCP))
                    .withIpAddresses(Arrays.asList("qzgwldoychil", "cecfehuwaoaguh", "cqlliz", "tac"))))
            .withNetworkSecurityGroups(Arrays.asList("vhrweftkwqejpmv", "s"));
        model = BinaryData.fromObject(model).toObject(AdaptiveNetworkHardeningEnforceRequest.class);
        Assertions.assertEquals("n", model.rules().get(0).name());
        Assertions.assertEquals(Direction.OUTBOUND, model.rules().get(0).direction());
        Assertions.assertEquals(1742516041, model.rules().get(0).destinationPort());
        Assertions.assertEquals(TransportProtocol.UDP, model.rules().get(0).protocols().get(0));
        Assertions.assertEquals("maonurj", model.rules().get(0).ipAddresses().get(0));
        Assertions.assertEquals("vhrweftkwqejpmv", model.networkSecurityGroups().get(0));
    }
}
