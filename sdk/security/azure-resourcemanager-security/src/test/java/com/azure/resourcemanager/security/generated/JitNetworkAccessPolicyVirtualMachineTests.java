// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.models.JitNetworkAccessPolicyVirtualMachine;
import com.azure.resourcemanager.security.models.JitNetworkAccessPortRule;
import com.azure.resourcemanager.security.models.Protocol;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class JitNetworkAccessPolicyVirtualMachineTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        JitNetworkAccessPolicyVirtualMachine model = BinaryData.fromString(
            "{\"id\":\"xzfsnggytexvzilm\",\"ports\":[{\"number\":785031408,\"protocol\":\"TCP\",\"allowedSourceAddressPrefix\":\"wwwncknr\",\"allowedSourceAddressPrefixes\":[\"jlskzptjxulweu\",\"yrth\",\"qlehmcgcjeinu\"],\"maxRequestAccessDuration\":\"hokamvfej\"}],\"publicIpAddress\":\"nttmbq\"}")
            .toObject(JitNetworkAccessPolicyVirtualMachine.class);
        Assertions.assertEquals("xzfsnggytexvzilm", model.id());
        Assertions.assertEquals(785031408, model.ports().get(0).number());
        Assertions.assertEquals(Protocol.TCP, model.ports().get(0).protocol());
        Assertions.assertEquals("wwwncknr", model.ports().get(0).allowedSourceAddressPrefix());
        Assertions.assertEquals("jlskzptjxulweu", model.ports().get(0).allowedSourceAddressPrefixes().get(0));
        Assertions.assertEquals("hokamvfej", model.ports().get(0).maxRequestAccessDuration());
        Assertions.assertEquals("nttmbq", model.publicIpAddress());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        JitNetworkAccessPolicyVirtualMachine model
            = new JitNetworkAccessPolicyVirtualMachine().withId("xzfsnggytexvzilm")
                .withPorts(Arrays.asList(new JitNetworkAccessPortRule().withNumber(785031408)
                    .withProtocol(Protocol.TCP)
                    .withAllowedSourceAddressPrefix("wwwncknr")
                    .withAllowedSourceAddressPrefixes(Arrays.asList("jlskzptjxulweu", "yrth", "qlehmcgcjeinu"))
                    .withMaxRequestAccessDuration("hokamvfej")))
                .withPublicIpAddress("nttmbq");
        model = BinaryData.fromObject(model).toObject(JitNetworkAccessPolicyVirtualMachine.class);
        Assertions.assertEquals("xzfsnggytexvzilm", model.id());
        Assertions.assertEquals(785031408, model.ports().get(0).number());
        Assertions.assertEquals(Protocol.TCP, model.ports().get(0).protocol());
        Assertions.assertEquals("wwwncknr", model.ports().get(0).allowedSourceAddressPrefix());
        Assertions.assertEquals("jlskzptjxulweu", model.ports().get(0).allowedSourceAddressPrefixes().get(0));
        Assertions.assertEquals("hokamvfej", model.ports().get(0).maxRequestAccessDuration());
        Assertions.assertEquals("nttmbq", model.publicIpAddress());
    }
}
