// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.models.ActionableRemediation;
import com.azure.resourcemanager.security.models.ActionableRemediationState;
import com.azure.resourcemanager.security.models.AnnotateDefaultBranchState;
import com.azure.resourcemanager.security.models.AzureDevOpsProjectProperties;
import com.azure.resourcemanager.security.models.CategoryConfiguration;
import com.azure.resourcemanager.security.models.InheritFromParentState;
import com.azure.resourcemanager.security.models.OnboardingState;
import com.azure.resourcemanager.security.models.RuleCategory;
import com.azure.resourcemanager.security.models.TargetBranchConfiguration;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AzureDevOpsProjectPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureDevOpsProjectProperties model = BinaryData.fromString(
            "{\"provisioningStatusMessage\":\"ousxauzlwvsgmw\",\"provisioningStatusUpdateTimeUtc\":\"2021-09-07T06:03:05Z\",\"provisioningState\":\"Succeeded\",\"parentOrgName\":\"zvuxm\",\"projectId\":\"jsvthnwpzteko\",\"onboardingState\":\"NotApplicable\",\"actionableRemediation\":{\"state\":\"Disabled\",\"categoryConfigurations\":[{\"minimumSeverityLevel\":\"gplucfotangcfhny\",\"category\":\"Containers\"},{\"minimumSeverityLevel\":\"gswvxwlmzqwm\",\"category\":\"Secrets\"},{\"minimumSeverityLevel\":\"jmxmcuqud\",\"category\":\"Code\"},{\"minimumSeverityLevel\":\"lxynpdkvgf\",\"category\":\"Secrets\"}],\"branchConfiguration\":{\"branchNames\":[\"ibuz\",\"hdugneiknpg\",\"xgjiuqh\"],\"annotateDefaultBranch\":\"Disabled\"},\"inheritFromParentState\":\"Disabled\"}}")
            .toObject(AzureDevOpsProjectProperties.class);
        Assertions.assertEquals("zvuxm", model.parentOrgName());
        Assertions.assertEquals(OnboardingState.NOT_APPLICABLE, model.onboardingState());
        Assertions.assertEquals(ActionableRemediationState.DISABLED, model.actionableRemediation().state());
        Assertions.assertEquals("gplucfotangcfhny",
            model.actionableRemediation().categoryConfigurations().get(0).minimumSeverityLevel());
        Assertions.assertEquals(RuleCategory.CONTAINERS,
            model.actionableRemediation().categoryConfigurations().get(0).category());
        Assertions.assertEquals("ibuz", model.actionableRemediation().branchConfiguration().branchNames().get(0));
        Assertions.assertEquals(AnnotateDefaultBranchState.DISABLED,
            model.actionableRemediation().branchConfiguration().annotateDefaultBranch());
        Assertions.assertEquals(InheritFromParentState.DISABLED,
            model.actionableRemediation().inheritFromParentState());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureDevOpsProjectProperties model = new AzureDevOpsProjectProperties().withParentOrgName("zvuxm")
            .withOnboardingState(OnboardingState.NOT_APPLICABLE)
            .withActionableRemediation(new ActionableRemediation().withState(ActionableRemediationState.DISABLED)
                .withCategoryConfigurations(Arrays.asList(
                    new CategoryConfiguration().withMinimumSeverityLevel("gplucfotangcfhny")
                        .withCategory(RuleCategory.CONTAINERS),
                    new CategoryConfiguration().withMinimumSeverityLevel("gswvxwlmzqwm")
                        .withCategory(RuleCategory.SECRETS),
                    new CategoryConfiguration().withMinimumSeverityLevel("jmxmcuqud").withCategory(RuleCategory.CODE),
                    new CategoryConfiguration().withMinimumSeverityLevel("lxynpdkvgf")
                        .withCategory(RuleCategory.SECRETS)))
                .withBranchConfiguration(
                    new TargetBranchConfiguration().withBranchNames(Arrays.asList("ibuz", "hdugneiknpg", "xgjiuqh"))
                        .withAnnotateDefaultBranch(AnnotateDefaultBranchState.DISABLED))
                .withInheritFromParentState(InheritFromParentState.DISABLED));
        model = BinaryData.fromObject(model).toObject(AzureDevOpsProjectProperties.class);
        Assertions.assertEquals("zvuxm", model.parentOrgName());
        Assertions.assertEquals(OnboardingState.NOT_APPLICABLE, model.onboardingState());
        Assertions.assertEquals(ActionableRemediationState.DISABLED, model.actionableRemediation().state());
        Assertions.assertEquals("gplucfotangcfhny",
            model.actionableRemediation().categoryConfigurations().get(0).minimumSeverityLevel());
        Assertions.assertEquals(RuleCategory.CONTAINERS,
            model.actionableRemediation().categoryConfigurations().get(0).category());
        Assertions.assertEquals("ibuz", model.actionableRemediation().branchConfiguration().branchNames().get(0));
        Assertions.assertEquals(AnnotateDefaultBranchState.DISABLED,
            model.actionableRemediation().branchConfiguration().annotateDefaultBranch());
        Assertions.assertEquals(InheritFromParentState.DISABLED,
            model.actionableRemediation().inheritFromParentState());
    }
}
