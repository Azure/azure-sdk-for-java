// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.models.ActionableRemediation;
import com.azure.resourcemanager.security.models.ActionableRemediationState;
import com.azure.resourcemanager.security.models.AnnotateDefaultBranchState;
import com.azure.resourcemanager.security.models.AzureDevOpsProjectProperties;
import com.azure.resourcemanager.security.models.CategoryConfiguration;
import com.azure.resourcemanager.security.models.InheritFromParentState;
import com.azure.resourcemanager.security.models.OnboardingState;
import com.azure.resourcemanager.security.models.RuleCategory;
import com.azure.resourcemanager.security.models.TargetBranchConfiguration;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AzureDevOpsProjectPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureDevOpsProjectProperties model = BinaryData.fromString(
            "{\"provisioningStatusMessage\":\"axfe\",\"provisioningStatusUpdateTimeUtc\":\"2021-10-14T19:19:57Z\",\"provisioningState\":\"Canceled\",\"parentOrgName\":\"xfdeqvhpsyl\",\"projectId\":\"shk\",\"onboardingState\":\"NotApplicable\",\"actionableRemediation\":{\"state\":\"Enabled\",\"categoryConfigurations\":[{\"minimumSeverityLevel\":\"rgywwp\",\"category\":\"Secrets\"},{\"minimumSeverityLevel\":\"nptfujgi\",\"category\":\"IaC\"}],\"branchConfiguration\":{\"branchNames\":[\"pttaqutd\",\"wemxswvruunzz\"],\"annotateDefaultBranch\":\"Enabled\"},\"inheritFromParentState\":\"Enabled\"}}")
            .toObject(AzureDevOpsProjectProperties.class);
        Assertions.assertEquals("xfdeqvhpsyl", model.parentOrgName());
        Assertions.assertEquals(OnboardingState.NOT_APPLICABLE, model.onboardingState());
        Assertions.assertEquals(ActionableRemediationState.ENABLED, model.actionableRemediation().state());
        Assertions.assertEquals("rgywwp",
            model.actionableRemediation().categoryConfigurations().get(0).minimumSeverityLevel());
        Assertions.assertEquals(RuleCategory.SECRETS,
            model.actionableRemediation().categoryConfigurations().get(0).category());
        Assertions.assertEquals("pttaqutd", model.actionableRemediation().branchConfiguration().branchNames().get(0));
        Assertions.assertEquals(AnnotateDefaultBranchState.ENABLED,
            model.actionableRemediation().branchConfiguration().annotateDefaultBranch());
        Assertions.assertEquals(InheritFromParentState.ENABLED, model.actionableRemediation().inheritFromParentState());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureDevOpsProjectProperties model = new AzureDevOpsProjectProperties().withParentOrgName("xfdeqvhpsyl")
            .withOnboardingState(OnboardingState.NOT_APPLICABLE)
            .withActionableRemediation(new ActionableRemediation().withState(ActionableRemediationState.ENABLED)
                .withCategoryConfigurations(Arrays.asList(
                    new CategoryConfiguration().withMinimumSeverityLevel("rgywwp").withCategory(RuleCategory.SECRETS),
                    new CategoryConfiguration().withMinimumSeverityLevel("nptfujgi").withCategory(RuleCategory.IAC)))
                .withBranchConfiguration(
                    new TargetBranchConfiguration().withBranchNames(Arrays.asList("pttaqutd", "wemxswvruunzz"))
                        .withAnnotateDefaultBranch(AnnotateDefaultBranchState.ENABLED))
                .withInheritFromParentState(InheritFromParentState.ENABLED));
        model = BinaryData.fromObject(model).toObject(AzureDevOpsProjectProperties.class);
        Assertions.assertEquals("xfdeqvhpsyl", model.parentOrgName());
        Assertions.assertEquals(OnboardingState.NOT_APPLICABLE, model.onboardingState());
        Assertions.assertEquals(ActionableRemediationState.ENABLED, model.actionableRemediation().state());
        Assertions.assertEquals("rgywwp",
            model.actionableRemediation().categoryConfigurations().get(0).minimumSeverityLevel());
        Assertions.assertEquals(RuleCategory.SECRETS,
            model.actionableRemediation().categoryConfigurations().get(0).category());
        Assertions.assertEquals("pttaqutd", model.actionableRemediation().branchConfiguration().branchNames().get(0));
        Assertions.assertEquals(AnnotateDefaultBranchState.ENABLED,
            model.actionableRemediation().branchConfiguration().annotateDefaultBranch());
        Assertions.assertEquals(InheritFromParentState.ENABLED, model.actionableRemediation().inheritFromParentState());
    }
}
