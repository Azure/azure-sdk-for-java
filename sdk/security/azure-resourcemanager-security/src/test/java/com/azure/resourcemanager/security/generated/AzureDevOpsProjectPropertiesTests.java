// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.models.ActionableRemediation;
import com.azure.resourcemanager.security.models.ActionableRemediationState;
import com.azure.resourcemanager.security.models.AnnotateDefaultBranchState;
import com.azure.resourcemanager.security.models.AzureDevOpsProjectProperties;
import com.azure.resourcemanager.security.models.CategoryConfiguration;
import com.azure.resourcemanager.security.models.DevOpsProvisioningState;
import com.azure.resourcemanager.security.models.InheritFromParentState;
import com.azure.resourcemanager.security.models.OnboardingState;
import com.azure.resourcemanager.security.models.RuleCategory;
import com.azure.resourcemanager.security.models.TargetBranchConfiguration;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AzureDevOpsProjectPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureDevOpsProjectProperties model = BinaryData.fromString(
            "{\"provisioningStatusMessage\":\"sdetjygowifcqpol\",\"provisioningStatusUpdateTimeUtc\":\"2021-05-16T09:20:14Z\",\"provisioningState\":\"DeletionFailure\",\"parentOrgName\":\"gzyy\",\"projectId\":\"oxlvocptvdxxheig\",\"onboardingState\":\"OnboardedByOtherConnector\",\"actionableRemediation\":{\"state\":\"Disabled\",\"categoryConfigurations\":[{\"minimumSeverityLevel\":\"hjvmabzzbwaybfm\",\"category\":\"Code\"},{\"minimumSeverityLevel\":\"gymqtnapreoj\",\"category\":\"Artifacts\"}],\"branchConfiguration\":{\"branchNames\":[\"conxavi\",\"neychbjizq\",\"sgnwdxzedpq\"],\"annotateDefaultBranch\":\"Disabled\"},\"inheritFromParentState\":\"Enabled\"}}")
            .toObject(AzureDevOpsProjectProperties.class);
        Assertions.assertEquals(DevOpsProvisioningState.DELETION_FAILURE, model.provisioningState());
        Assertions.assertEquals("gzyy", model.parentOrgName());
        Assertions.assertEquals(OnboardingState.ONBOARDED_BY_OTHER_CONNECTOR, model.onboardingState());
        Assertions.assertEquals(ActionableRemediationState.DISABLED, model.actionableRemediation().state());
        Assertions.assertEquals("hjvmabzzbwaybfm",
            model.actionableRemediation().categoryConfigurations().get(0).minimumSeverityLevel());
        Assertions.assertEquals(RuleCategory.CODE,
            model.actionableRemediation().categoryConfigurations().get(0).category());
        Assertions.assertEquals("conxavi", model.actionableRemediation().branchConfiguration().branchNames().get(0));
        Assertions.assertEquals(AnnotateDefaultBranchState.DISABLED,
            model.actionableRemediation().branchConfiguration().annotateDefaultBranch());
        Assertions.assertEquals(InheritFromParentState.ENABLED, model.actionableRemediation().inheritFromParentState());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureDevOpsProjectProperties model
            = new AzureDevOpsProjectProperties().withProvisioningState(DevOpsProvisioningState.DELETION_FAILURE)
                .withParentOrgName("gzyy")
                .withOnboardingState(OnboardingState.ONBOARDED_BY_OTHER_CONNECTOR)
                .withActionableRemediation(new ActionableRemediation().withState(ActionableRemediationState.DISABLED)
                    .withCategoryConfigurations(Arrays.asList(
                        new CategoryConfiguration().withMinimumSeverityLevel("hjvmabzzbwaybfm")
                            .withCategory(RuleCategory.CODE),
                        new CategoryConfiguration().withMinimumSeverityLevel("gymqtnapreoj")
                            .withCategory(RuleCategory.ARTIFACTS)))
                    .withBranchConfiguration(new TargetBranchConfiguration()
                        .withBranchNames(Arrays.asList("conxavi", "neychbjizq", "sgnwdxzedpq"))
                        .withAnnotateDefaultBranch(AnnotateDefaultBranchState.DISABLED))
                    .withInheritFromParentState(InheritFromParentState.ENABLED));
        model = BinaryData.fromObject(model).toObject(AzureDevOpsProjectProperties.class);
        Assertions.assertEquals(DevOpsProvisioningState.DELETION_FAILURE, model.provisioningState());
        Assertions.assertEquals("gzyy", model.parentOrgName());
        Assertions.assertEquals(OnboardingState.ONBOARDED_BY_OTHER_CONNECTOR, model.onboardingState());
        Assertions.assertEquals(ActionableRemediationState.DISABLED, model.actionableRemediation().state());
        Assertions.assertEquals("hjvmabzzbwaybfm",
            model.actionableRemediation().categoryConfigurations().get(0).minimumSeverityLevel());
        Assertions.assertEquals(RuleCategory.CODE,
            model.actionableRemediation().categoryConfigurations().get(0).category());
        Assertions.assertEquals("conxavi", model.actionableRemediation().branchConfiguration().branchNames().get(0));
        Assertions.assertEquals(AnnotateDefaultBranchState.DISABLED,
            model.actionableRemediation().branchConfiguration().annotateDefaultBranch());
        Assertions.assertEquals(InheritFromParentState.ENABLED, model.actionableRemediation().inheritFromParentState());
    }
}
