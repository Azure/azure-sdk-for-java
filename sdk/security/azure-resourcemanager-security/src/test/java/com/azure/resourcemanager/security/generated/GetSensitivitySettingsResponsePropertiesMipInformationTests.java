// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.models.BuiltInInfoType;
import com.azure.resourcemanager.security.models.GetSensitivitySettingsResponsePropertiesMipInformation;
import com.azure.resourcemanager.security.models.InfoType;
import com.azure.resourcemanager.security.models.Label;
import com.azure.resourcemanager.security.models.MipIntegrationStatus;
import java.util.Arrays;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;

public final class GetSensitivitySettingsResponsePropertiesMipInformationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GetSensitivitySettingsResponsePropertiesMipInformation model = BinaryData.fromString(
            "{\"mipIntegrationStatus\":\"noMipLabels\",\"labels\":[{\"name\":\"dmflv\",\"id\":\"61f1b0cd-fd9a-4f90-bb28-262aba615792\",\"order\":95.2019},{\"name\":\"lx\",\"id\":\"9d335946-d4ca-475f-adea-af6622f6e8ea\",\"order\":85.26994}],\"customInfoTypes\":[{\"name\":\"peewchpxlkt\",\"id\":\"3fcac895-64a4-4658-a57b-3f9e8fb35878\",\"description\":\"ziycslevufuztck\"},{\"name\":\"h\",\"id\":\"7a186cf0-1513-4301-aaa3-b57141e4d398\",\"description\":\"edcg\"},{\"name\":\"lwmmrqzzrrjv\",\"id\":\"98aafd33-069f-4424-b445-032abbd4b3d7\",\"description\":\"ydzgkrvqeevtoe\"}],\"builtInInfoTypes\":[{\"name\":\"t\",\"id\":\"e12447e0-5e8e-493c-9a7e-66d2acf48215\",\"type\":\"tpzdmovzvfvaawzq\"},{\"name\":\"f\",\"id\":\"a4d7df5f-2aa8-4436-a0ae-677d3304c094\",\"type\":\"ur\"},{\"name\":\"laecxndticok\",\"id\":\"fda468ab-44f5-4444-b7c4-0fc0719ef010\",\"type\":\"mlqtmldgxob\"},{\"name\":\"rclnpkc\",\"id\":\"ece8b0d4-effc-4f9f-9ac1-751907ccc75b\",\"type\":\"zriykhy\"}]}")
            .toObject(GetSensitivitySettingsResponsePropertiesMipInformation.class);
        Assertions.assertEquals(MipIntegrationStatus.NO_MIP_LABELS, model.mipIntegrationStatus());
        Assertions.assertEquals("dmflv", model.labels().get(0).name());
        Assertions.assertEquals(UUID.fromString("61f1b0cd-fd9a-4f90-bb28-262aba615792"), model.labels().get(0).id());
        Assertions.assertEquals(95.2019F, model.labels().get(0).order());
        Assertions.assertEquals("peewchpxlkt", model.customInfoTypes().get(0).name());
        Assertions.assertEquals(UUID.fromString("3fcac895-64a4-4658-a57b-3f9e8fb35878"),
            model.customInfoTypes().get(0).id());
        Assertions.assertEquals("ziycslevufuztck", model.customInfoTypes().get(0).description());
        Assertions.assertEquals("t", model.builtInInfoTypes().get(0).name());
        Assertions.assertEquals(UUID.fromString("e12447e0-5e8e-493c-9a7e-66d2acf48215"),
            model.builtInInfoTypes().get(0).id());
        Assertions.assertEquals("tpzdmovzvfvaawzq", model.builtInInfoTypes().get(0).type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GetSensitivitySettingsResponsePropertiesMipInformation model
            = new GetSensitivitySettingsResponsePropertiesMipInformation()
                .withMipIntegrationStatus(MipIntegrationStatus.NO_MIP_LABELS)
                .withLabels(Arrays.asList(
                    new Label().withName("dmflv")
                        .withId(UUID.fromString("61f1b0cd-fd9a-4f90-bb28-262aba615792"))
                        .withOrder(95.2019F),
                    new Label().withName("lx")
                        .withId(UUID.fromString("9d335946-d4ca-475f-adea-af6622f6e8ea"))
                        .withOrder(85.26994F)))
                .withCustomInfoTypes(Arrays.asList(
                    new InfoType().withName("peewchpxlkt")
                        .withId(UUID.fromString("3fcac895-64a4-4658-a57b-3f9e8fb35878"))
                        .withDescription("ziycslevufuztck"),
                    new InfoType().withName("h")
                        .withId(UUID.fromString("7a186cf0-1513-4301-aaa3-b57141e4d398"))
                        .withDescription("edcg"),
                    new InfoType().withName("lwmmrqzzrrjv")
                        .withId(UUID.fromString("98aafd33-069f-4424-b445-032abbd4b3d7"))
                        .withDescription("ydzgkrvqeevtoe")))
                .withBuiltInInfoTypes(Arrays.asList(
                    new BuiltInInfoType().withName("t")
                        .withId(UUID.fromString("e12447e0-5e8e-493c-9a7e-66d2acf48215"))
                        .withType("tpzdmovzvfvaawzq"),
                    new BuiltInInfoType().withName("f")
                        .withId(UUID.fromString("a4d7df5f-2aa8-4436-a0ae-677d3304c094"))
                        .withType("ur"),
                    new BuiltInInfoType().withName("laecxndticok")
                        .withId(UUID.fromString("fda468ab-44f5-4444-b7c4-0fc0719ef010"))
                        .withType("mlqtmldgxob"),
                    new BuiltInInfoType().withName("rclnpkc")
                        .withId(UUID.fromString("ece8b0d4-effc-4f9f-9ac1-751907ccc75b"))
                        .withType("zriykhy")));
        model = BinaryData.fromObject(model).toObject(GetSensitivitySettingsResponsePropertiesMipInformation.class);
        Assertions.assertEquals(MipIntegrationStatus.NO_MIP_LABELS, model.mipIntegrationStatus());
        Assertions.assertEquals("dmflv", model.labels().get(0).name());
        Assertions.assertEquals(UUID.fromString("61f1b0cd-fd9a-4f90-bb28-262aba615792"), model.labels().get(0).id());
        Assertions.assertEquals(95.2019F, model.labels().get(0).order());
        Assertions.assertEquals("peewchpxlkt", model.customInfoTypes().get(0).name());
        Assertions.assertEquals(UUID.fromString("3fcac895-64a4-4658-a57b-3f9e8fb35878"),
            model.customInfoTypes().get(0).id());
        Assertions.assertEquals("ziycslevufuztck", model.customInfoTypes().get(0).description());
        Assertions.assertEquals("t", model.builtInInfoTypes().get(0).name());
        Assertions.assertEquals(UUID.fromString("e12447e0-5e8e-493c-9a7e-66d2acf48215"),
            model.builtInInfoTypes().get(0).id());
        Assertions.assertEquals("tpzdmovzvfvaawzq", model.builtInInfoTypes().get(0).type());
    }
}
