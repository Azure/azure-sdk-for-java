// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.HttpHeaders;
import com.azure.core.http.HttpRequest;
import com.azure.core.http.HttpResponse;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.OperationStatusResult;
import java.nio.ByteBuffer;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.mockito.ArgumentCaptor;
import org.mockito.Mockito;
import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;

public final class DevOpsOperationResultsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        HttpClient httpClient = Mockito.mock(HttpClient.class);
        HttpResponse httpResponse = Mockito.mock(HttpResponse.class);
        ArgumentCaptor<HttpRequest> httpRequest = ArgumentCaptor.forClass(HttpRequest.class);

        String responseStr
            = "{\"id\":\"k\",\"name\":\"vzkfekd\",\"status\":\"sbpjqtllbhjjpd\",\"percentComplete\":39.703125,\"startTime\":\"2021-10-15T06:39:02Z\",\"endTime\":\"2021-10-22T10:04:17Z\",\"operations\":[{\"id\":\"eqrypyurvshhovtu\",\"name\":\"cp\",\"status\":\"hbwcxybtdzycx\",\"percentComplete\":60.918396,\"startTime\":\"2021-01-04T11:58:36Z\",\"endTime\":\"2021-04-21T04:39:59Z\",\"operations\":[{\"id\":\"jbnwc\",\"name\":\"razcbybic\",\"status\":\"hxh\",\"percentComplete\":89.474556,\"startTime\":\"2021-11-11T19:32:48Z\",\"endTime\":\"2020-12-27T01:46:24Z\",\"operations\":[{\"status\":\"z\"},{\"status\":\"mu\"},{\"status\":\"ykwu\"}]},{\"id\":\"otennd\",\"name\":\"thdzitjzffph\",\"status\":\"rwjqvswtwonad\",\"percentComplete\":99.14527,\"startTime\":\"2021-02-25T04:04:59Z\",\"endTime\":\"2021-02-06T14:01:13Z\",\"operations\":[{\"status\":\"xmmrvnuvqkrrsg\"},{\"status\":\"o\"},{\"status\":\"kcbrotpy\"},{\"status\":\"bensjflwpft\"}]}]},{\"id\":\"mvifgcv\",\"name\":\"mal\",\"status\":\"mticxgo\",\"percentComplete\":80.525215,\"startTime\":\"2021-10-04T21:43:22Z\",\"endTime\":\"2021-05-04T09:07:23Z\",\"operations\":[{\"id\":\"mzxaoxlhmvj\",\"name\":\"nlsbnucqxhpaqo\",\"status\":\"bvejo\",\"percentComplete\":35.569054,\"startTime\":\"2021-09-01T17:34:35Z\",\"endTime\":\"2021-10-06T14:52:43Z\",\"operations\":[{\"status\":\"kleldkqdlqqhnt\"},{\"status\":\"rykkxakruuptiicg\"}]},{\"id\":\"gyxccn\",\"name\":\"iemacmztje\",\"status\":\"xsnnbrysgktf\",\"percentComplete\":43.504818,\"startTime\":\"2021-05-15T16:12:11Z\",\"endTime\":\"2021-11-10T16:14:53Z\",\"operations\":[{\"status\":\"tbofzghfuifw\"}]}]},{\"id\":\"noh\",\"name\":\"qx\",\"status\":\"gjxugdcrrfb\",\"percentComplete\":53.07247,\"startTime\":\"2021-01-18T21:46:01Z\",\"endTime\":\"2021-07-24T15:13:09Z\",\"operations\":[{\"id\":\"djlz\",\"name\":\"m\",\"status\":\"dghq\",\"percentComplete\":5.55954,\"startTime\":\"2021-02-08T14:29:32Z\",\"endTime\":\"2021-04-18T01:49:33Z\",\"operations\":[{\"status\":\"vp\"},{\"status\":\"eso\"},{\"status\":\"sbegclmexafjq\"}]},{\"id\":\"zydyvtuqvir\",\"name\":\"nsskydigt\",\"status\":\"jx\",\"percentComplete\":62.25374,\"startTime\":\"2021-05-27T18:13:36Z\",\"endTime\":\"2021-05-02T03:54:47Z\",\"operations\":[{\"status\":\"jchxzjdc\"},{\"status\":\"uzscyfyi\"},{\"status\":\"ecmasjnfgngxaoje\"}]}]},{\"id\":\"xbfckmoal\",\"name\":\"x\",\"status\":\"wxtxuzhvojyf\",\"percentComplete\":48.505444,\"startTime\":\"2021-06-25T05:43:41Z\",\"endTime\":\"2021-09-12T12:37:44Z\",\"operations\":[{\"id\":\"uiygtcyzcjefpub\",\"name\":\"djcgldry\",\"status\":\"lrlkbh\",\"percentComplete\":31.0261,\"startTime\":\"2021-01-15T07:19:20Z\",\"endTime\":\"2020-12-21T19:38:20Z\",\"operations\":[{\"status\":\"bfomfbozp\"},{\"status\":\"yxefp\"},{\"status\":\"qcwd\"},{\"status\":\"njjthpsnxebycym\"}]},{\"id\":\"xubnn\",\"name\":\"sebcxno\",\"status\":\"spdyzssj\",\"percentComplete\":55.343544,\"startTime\":\"2021-09-29T18:07:24Z\",\"endTime\":\"2021-01-31T04:55:12Z\",\"operations\":[{\"status\":\"gspjlf\"},{\"status\":\"h\"},{\"status\":\"ngwqxcrbcrgyoim\"},{\"status\":\"s\"}]},{\"id\":\"cctvkog\",\"name\":\"tvagwnnw\",\"status\":\"nv\",\"percentComplete\":74.96132,\"startTime\":\"2021-05-30T19:34:19Z\",\"endTime\":\"2021-03-17T23:49:41Z\",\"operations\":[{\"status\":\"vdryknkx\"},{\"status\":\"oxh\"}]},{\"id\":\"lqdoqe\",\"name\":\"xfdlhuhdkubgywad\",\"status\":\"klpdyehjrwcflvx\",\"percentComplete\":74.84598,\"startTime\":\"2021-01-10T22:00:14Z\",\"endTime\":\"2021-03-05T22:17:02Z\",\"operations\":[{\"status\":\"uhzmolhveolng\"},{\"status\":\"fm\"},{\"status\":\"wdxqupymlhkl\"},{\"status\":\"njqzmq\"}]}]}]}";

        Mockito.when(httpResponse.getStatusCode()).thenReturn(200);
        Mockito.when(httpResponse.getHeaders()).thenReturn(new HttpHeaders());
        Mockito.when(httpResponse.getBody())
            .thenReturn(Flux.just(ByteBuffer.wrap(responseStr.getBytes(StandardCharsets.UTF_8))));
        Mockito.when(httpResponse.getBodyAsByteArray())
            .thenReturn(Mono.just(responseStr.getBytes(StandardCharsets.UTF_8)));
        Mockito.when(httpClient.send(httpRequest.capture(), Mockito.any())).thenReturn(Mono.defer(() -> {
            Mockito.when(httpResponse.getRequest()).thenReturn(httpRequest.getValue());
            return Mono.just(httpResponse);
        }));

        SecurityManager manager = SecurityManager.configure().withHttpClient(httpClient).authenticate(
            tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
            new AzureProfile("", "", AzureEnvironment.AZURE));

        OperationStatusResult response = manager.devOpsOperationResults()
            .getWithResponse("ewpmioleaja", "esgyzwph", "jkscecmbaajdfw", com.azure.core.util.Context.NONE).getValue();

        Assertions.assertEquals("k", response.id());
        Assertions.assertEquals("vzkfekd", response.name());
        Assertions.assertEquals("sbpjqtllbhjjpd", response.status());
        Assertions.assertEquals(39.703125F, response.percentComplete());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-15T06:39:02Z"), response.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-22T10:04:17Z"), response.endTime());
        Assertions.assertEquals("eqrypyurvshhovtu", response.operations().get(0).id());
        Assertions.assertEquals("cp", response.operations().get(0).name());
        Assertions.assertEquals("hbwcxybtdzycx", response.operations().get(0).status());
        Assertions.assertEquals(60.918396F, response.operations().get(0).percentComplete());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-04T11:58:36Z"), response.operations().get(0).startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-21T04:39:59Z"), response.operations().get(0).endTime());
        Assertions.assertEquals("jbnwc", response.operations().get(0).operations().get(0).id());
        Assertions.assertEquals("razcbybic", response.operations().get(0).operations().get(0).name());
        Assertions.assertEquals("hxh", response.operations().get(0).operations().get(0).status());
        Assertions.assertEquals(89.474556F, response.operations().get(0).operations().get(0).percentComplete());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-11T19:32:48Z"),
            response.operations().get(0).operations().get(0).startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-27T01:46:24Z"),
            response.operations().get(0).operations().get(0).endTime());
        Assertions.assertEquals("z", response.operations().get(0).operations().get(0).operations().get(0).status());
    }
}
