// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.IoTSecurityAggregatedAlertInner;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class IoTSecurityAggregatedAlertInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IoTSecurityAggregatedAlertInner model = BinaryData.fromString(
            "{\"properties\":{\"alertType\":\"vezcrcssbzhdd\",\"alertDisplayName\":\"bnqfblhk\",\"vendorName\":\"hpavawu\",\"reportedSeverity\":\"Medium\",\"remediationSteps\":\"tiogqgdmini\",\"description\":\"teajohiyg\",\"count\":1077297875489107910,\"effectedResourceType\":\"n\",\"systemSource\":\"czykmktpvw\",\"actionTaken\":\"csehchkhufm\",\"logAnalyticsQuery\":\"umqy\",\"topDevicesList\":[{\"deviceId\":\"zulo\",\"alertsCount\":7616443426836547844,\"lastOccurrence\":\"zanhsfnhsenwphpz\"},{\"deviceId\":\"gqjclidftujwj\",\"alertsCount\":2606303749496147171,\"lastOccurrence\":\"eqrkuorhtss\"},{\"deviceId\":\"qnmdvhazcvjy\",\"alertsCount\":1304349903472369225,\"lastOccurrence\":\"bqerzwx\"},{\"deviceId\":\"txtd\",\"alertsCount\":7281432315557786940,\"lastOccurrence\":\"bpktgd\"}]},\"tags\":{\"wmowegmmute\":\"ouambewre\",\"qigijiitnspxlzde\":\"xeyg\",\"jwaiuf\":\"ygr\"},\"id\":\"n\",\"name\":\"aybfu\",\"type\":\"qfrojsydgrhyd\"}")
            .toObject(IoTSecurityAggregatedAlertInner.class);
        Assertions.assertEquals("ouambewre", model.tags().get("wmowegmmute"));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IoTSecurityAggregatedAlertInner model = new IoTSecurityAggregatedAlertInner()
            .withTags(mapOf("wmowegmmute", "ouambewre", "qigijiitnspxlzde", "xeyg", "jwaiuf", "ygr"));
        model = BinaryData.fromObject(model).toObject(IoTSecurityAggregatedAlertInner.class);
        Assertions.assertEquals("ouambewre", model.tags().get("wmowegmmute"));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
