// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.GitHubRepositoryInner;
import com.azure.resourcemanager.security.models.GitHubRepositoryListResponse;
import com.azure.resourcemanager.security.models.GitHubRepositoryProperties;
import com.azure.resourcemanager.security.models.OnboardingState;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class GitHubRepositoryListResponseTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GitHubRepositoryListResponse model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"provisioningStatusMessage\":\"jmjsmwrokcdxf\",\"provisioningStatusUpdateTimeUtc\":\"2020-12-22T09:51:03Z\",\"provisioningState\":\"DeletionFailure\",\"repoId\":\"afitlhguynuchlg\",\"repoName\":\"txd\",\"repoFullName\":\"mozusgzvlnsnnjz\",\"onboardingState\":\"NotOnboarded\",\"repoUrl\":\"olpy\",\"parentOwnerName\":\"amxqzragpgdphtv\"},\"id\":\"ulajvlejchc\",\"name\":\"rlzk\",\"type\":\"mzlanru\"},{\"properties\":{\"provisioningStatusMessage\":\"nphcnzqtpjhmqrh\",\"provisioningStatusUpdateTimeUtc\":\"2021-05-11T22:21:51Z\",\"provisioningState\":\"DeletionSuccess\",\"repoId\":\"wdcxsmlzzhz\",\"repoName\":\"xetlgydlhqv\",\"repoFullName\":\"npxybafiq\",\"onboardingState\":\"Onboarded\",\"repoUrl\":\"rbgjekglkl\",\"parentOwnerName\":\"ulidwc\"},\"id\":\"vmzegj\",\"name\":\"nfhjirwgdnqzbr\",\"type\":\"kspzhzmtksjcit\"},{\"properties\":{\"provisioningStatusMessage\":\"xcdglj\",\"provisioningStatusUpdateTimeUtc\":\"2021-04-10T15:56:09Z\",\"provisioningState\":\"Canceled\",\"repoId\":\"chtomflrytsw\",\"repoName\":\"fmdgycxnms\",\"repoFullName\":\"hqjjys\",\"onboardingState\":\"OnboardedByOtherConnector\",\"repoUrl\":\"pshhkvpedwqslsr\",\"parentOwnerName\":\"pq\"},\"id\":\"wwsko\",\"name\":\"dcbrwimuvq\",\"type\":\"josovyrrl\"},{\"properties\":{\"provisioningStatusMessage\":\"inuqtljq\",\"provisioningStatusUpdateTimeUtc\":\"2021-01-31T13:57:23Z\",\"provisioningState\":\"DeletionFailure\",\"repoId\":\"ehcecyb\",\"repoName\":\"qbr\",\"repoFullName\":\"bmpxdlvykfrexc\",\"onboardingState\":\"OnboardedByOtherConnector\",\"repoUrl\":\"wjksghudgzhxo\",\"parentOwnerName\":\"ggsvoujkxibdaf\"},\"id\":\"rkmdyom\",\"name\":\"xfbvfb\",\"type\":\"dy\"}],\"nextLink\":\"hpwpgddeimawzovg\"}")
            .toObject(GitHubRepositoryListResponse.class);
        Assertions.assertEquals(OnboardingState.NOT_ONBOARDED, model.value().get(0).properties().onboardingState());
        Assertions.assertEquals("amxqzragpgdphtv", model.value().get(0).properties().parentOwnerName());
        Assertions.assertEquals("hpwpgddeimawzovg", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GitHubRepositoryListResponse model = new GitHubRepositoryListResponse().withValue(Arrays.asList(
            new GitHubRepositoryInner()
                .withProperties(new GitHubRepositoryProperties().withOnboardingState(OnboardingState.NOT_ONBOARDED)
                    .withParentOwnerName("amxqzragpgdphtv")),
            new GitHubRepositoryInner()
                .withProperties(new GitHubRepositoryProperties().withOnboardingState(OnboardingState.ONBOARDED)
                    .withParentOwnerName("ulidwc")),
            new GitHubRepositoryInner().withProperties(
                new GitHubRepositoryProperties().withOnboardingState(OnboardingState.ONBOARDED_BY_OTHER_CONNECTOR)
                    .withParentOwnerName("pq")),
            new GitHubRepositoryInner().withProperties(
                new GitHubRepositoryProperties().withOnboardingState(OnboardingState.ONBOARDED_BY_OTHER_CONNECTOR)
                    .withParentOwnerName("ggsvoujkxibdaf"))))
            .withNextLink("hpwpgddeimawzovg");
        model = BinaryData.fromObject(model).toObject(GitHubRepositoryListResponse.class);
        Assertions.assertEquals(OnboardingState.NOT_ONBOARDED, model.value().get(0).properties().onboardingState());
        Assertions.assertEquals("amxqzragpgdphtv", model.value().get(0).properties().parentOwnerName());
        Assertions.assertEquals("hpwpgddeimawzovg", model.nextLink());
    }
}
