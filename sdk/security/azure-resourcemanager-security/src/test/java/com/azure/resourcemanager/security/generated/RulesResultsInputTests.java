// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.models.RulesResultsInput;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class RulesResultsInputTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RulesResultsInput model =
            BinaryData
                .fromString(
                    "{\"latestScan\":false,\"results\":{\"ufhfcbjysa\":[[\"obmtukk\",\"ryrtihfxtijbpzv\"],[\"wzsymglzufcy\",\"kohdbiha\"]],\"cs\":[[\"hxqh\"],[\"ifpikxwczby\",\"cnpqxuhivyqniwby\",\"rkxvdum\"],[\"rtfw\",\"ukxgaud\"]],\"j\":[[\"jcny\"]]}}")
                .toObject(RulesResultsInput.class);
        Assertions.assertEquals(false, model.latestScan());
        Assertions.assertEquals("obmtukk", model.results().get("ufhfcbjysa").get(0).get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RulesResultsInput model =
            new RulesResultsInput()
                .withLatestScan(false)
                .withResults(
                    mapOf(
                        "ufhfcbjysa",
                        Arrays
                            .asList(
                                Arrays.asList("obmtukk", "ryrtihfxtijbpzv"), Arrays.asList("wzsymglzufcy", "kohdbiha")),
                        "cs",
                        Arrays
                            .asList(
                                Arrays.asList("hxqh"),
                                Arrays.asList("ifpikxwczby", "cnpqxuhivyqniwby", "rkxvdum"),
                                Arrays.asList("rtfw", "ukxgaud")),
                        "j",
                        Arrays.asList(Arrays.asList("jcny"))));
        model = BinaryData.fromObject(model).toObject(RulesResultsInput.class);
        Assertions.assertEquals(false, model.latestScan());
        Assertions.assertEquals("obmtukk", model.results().get("ufhfcbjysa").get(0).get(0));
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
