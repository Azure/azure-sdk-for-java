// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.IoTSecurityAggregatedAlert;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class IotSecuritySolutionsAnalyticsAggregatedAlertsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"alertType\":\"flotumbmwgfts\",\"alertDisplayName\":\"gmuxu\",\"vendorName\":\"gskoikuqirhskxpa\",\"reportedSeverity\":\"Low\",\"remediationSteps\":\"vnlfueyxfzibrlr\",\"description\":\"gcfe\",\"count\":4000084884456348117,\"effectedResourceType\":\"enbvrllldfknb\",\"systemSource\":\"wi\",\"actionTaken\":\"x\",\"logAnalyticsQuery\":\"i\",\"topDevicesList\":[{\"deviceId\":\"wrduxntpfxxgja\",\"alertsCount\":3502633960495086782,\"lastOccurrence\":\"fc\"},{\"deviceId\":\"veyfbkqynlzxeme\",\"alertsCount\":8323879016645440210,\"lastOccurrence\":\"kiehdmv\"},{\"deviceId\":\"yrxxxffgmcua\",\"alertsCount\":6255570029384240970,\"lastOccurrence\":\"rvgc\"},{\"deviceId\":\"sapvbcqpfu\",\"alertsCount\":8186147593560267484,\"lastOccurrence\":\"hminenkbiv\"}]},\"tags\":{\"j\":\"kvorlfqm\",\"vurkmjufavvln\":\"wynbfvvc\",\"vrkkfcwxizkstxne\":\"bsotmynklnmrznm\",\"vriuvnfazxtvs\":\"keipxutc\"},\"id\":\"yyaeiivj\",\"name\":\"kqtjwrv\",\"type\":\"wojoqf\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        IoTSecurityAggregatedAlert response = manager.iotSecuritySolutionsAnalyticsAggregatedAlerts()
            .getWithResponse("zblkc", "fldfljwt", "b", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("kvorlfqm", response.tags().get("j"));
    }
}
