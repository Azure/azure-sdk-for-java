// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.RuleSeverity;
import com.azure.resourcemanager.security.models.RuleStatus;
import com.azure.resourcemanager.security.models.RuleType;
import com.azure.resourcemanager.security.models.ScanResults;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SqlVulnerabilityAssessmentScanResultsListWithResponseMockTests {
    @Test
    public void testListWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"ruleId\":\"kdi\",\"status\":\"Finding\",\"isTrimmed\":false,\"queryResults\":[[\"wjg\",\"ahcrxofgrutv\"]],\"remediation\":{\"description\":\"cxzivxpmhz\",\"scripts\":[\"hkvnnj\",\"tujqzvhnjvpmxnh\",\"mzs\",\"qlfxolrwv\"],\"automated\":true,\"portalLink\":\"yfjswequf\"},\"baselineAdjustedResult\":{\"baseline\":{},\"status\":\"Finding\",\"resultsNotInBaseline\":[[],[],[]],\"resultsOnlyInBaseline\":[[]]},\"ruleMetadata\":{\"ruleId\":\"wgwqubot\",\"severity\":\"High\",\"category\":\"rkwjiemimdtnpowe\",\"ruleType\":\"NegativeList\",\"title\":\"reeedddrftfquul\",\"description\":\"lhs\",\"rationale\":\"geeuwbrnq\",\"queryCheck\":{},\"benchmarkReferences\":[{},{},{},{}]}},\"id\":\"dqnetdqwynx\",\"name\":\"qgvbzpggpwm\",\"type\":\"y\"},{\"properties\":{\"ruleId\":\"ajejirvavrvkgpo\",\"status\":\"InternalError\",\"isTrimmed\":true,\"queryResults\":[[\"nhxnrnjhinaegesb\",\"nepqmjmop\",\"ukfyk\"],[\"hsovadkrmj\",\"mwqpdkesjqbzkqm\",\"vporiwbwggi\",\"tspzjnrr\"]],\"remediation\":{\"description\":\"wsbzrhdugquhtr\",\"scripts\":[\"ru\",\"jfhrjhiycbause\"],\"automated\":true,\"portalLink\":\"kv\"},\"baselineAdjustedResult\":{\"baseline\":{},\"status\":\"NonFinding\",\"resultsNotInBaseline\":[[]],\"resultsOnlyInBaseline\":[[],[],[],[]]},\"ruleMetadata\":{\"ruleId\":\"zszoszjgzunkfnys\",\"severity\":\"Low\",\"category\":\"nqh\",\"ruleType\":\"Binary\",\"title\":\"ojmslhip\",\"description\":\"kvbljpxprrv\",\"rationale\":\"yluqalpc\",\"queryCheck\":{},\"benchmarkReferences\":[{}]}},\"id\":\"f\",\"name\":\"tiztqds\",\"type\":\"ahhhsaaxxsritr\"},{\"properties\":{\"ruleId\":\"aaesyyefmxwoqot\",\"status\":\"NonFinding\",\"isTrimmed\":true,\"queryResults\":[[\"rv\"],[\"tistyikjhorlx\",\"pypkennycntrq\",\"xwtdmbqjtsuhqh\"],[\"xtdyqavfxbqmzxsy\",\"ksinpa\",\"m\"]],\"remediation\":{\"description\":\"bgh\",\"scripts\":[\"gpbgchcgsfzhbj\",\"iys\"],\"automated\":false,\"portalLink\":\"djpgxeysgwkcffe\"},\"baselineAdjustedResult\":{\"baseline\":{},\"status\":\"Finding\",\"resultsNotInBaseline\":[[],[],[],[]],\"resultsOnlyInBaseline\":[[],[]]},\"ruleMetadata\":{\"ruleId\":\"om\",\"severity\":\"Low\",\"category\":\"qcooplfpohimgcky\",\"ruleType\":\"Binary\",\"title\":\"ebznbznxsulout\",\"description\":\"bmxooq\",\"rationale\":\"gpncdmwkhupfhsl\",\"queryCheck\":{},\"benchmarkReferences\":[{}]}},\"id\":\"a\",\"name\":\"iunyevdyzdsytc\",\"type\":\"kswhcamwuynfxk\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ScanResults response = manager.sqlVulnerabilityAssessmentScanResults()
            .listWithResponse("xvjeazrah", "lhbimyii", "qamcthtpqgfz", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("kdi", response.value().get(0).properties().ruleId());
        Assertions.assertEquals(RuleStatus.FINDING, response.value().get(0).properties().status());
        Assertions.assertEquals(false, response.value().get(0).properties().isTrimmed());
        Assertions.assertEquals("wjg", response.value().get(0).properties().queryResults().get(0).get(0));
        Assertions.assertEquals("cxzivxpmhz", response.value().get(0).properties().remediation().description());
        Assertions.assertEquals("hkvnnj", response.value().get(0).properties().remediation().scripts().get(0));
        Assertions.assertEquals(true, response.value().get(0).properties().remediation().automated());
        Assertions.assertEquals("yfjswequf", response.value().get(0).properties().remediation().portalLink());
        Assertions.assertEquals(RuleStatus.FINDING,
            response.value().get(0).properties().baselineAdjustedResult().status());
        Assertions.assertEquals("wgwqubot", response.value().get(0).properties().ruleMetadata().ruleId());
        Assertions.assertEquals(RuleSeverity.HIGH, response.value().get(0).properties().ruleMetadata().severity());
        Assertions.assertEquals("rkwjiemimdtnpowe", response.value().get(0).properties().ruleMetadata().category());
        Assertions.assertEquals(RuleType.NEGATIVE_LIST, response.value().get(0).properties().ruleMetadata().ruleType());
        Assertions.assertEquals("reeedddrftfquul", response.value().get(0).properties().ruleMetadata().title());
        Assertions.assertEquals("lhs", response.value().get(0).properties().ruleMetadata().description());
        Assertions.assertEquals("geeuwbrnq", response.value().get(0).properties().ruleMetadata().rationale());
    }
}
