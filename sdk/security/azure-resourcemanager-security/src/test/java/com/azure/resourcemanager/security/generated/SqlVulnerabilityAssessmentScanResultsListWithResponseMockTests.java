// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.RuleSeverity;
import com.azure.resourcemanager.security.models.RuleStatus;
import com.azure.resourcemanager.security.models.RuleType;
import com.azure.resourcemanager.security.models.ScanResults;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SqlVulnerabilityAssessmentScanResultsListWithResponseMockTests {
    @Test
    public void testListWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"ruleId\":\"sumustihtgrafjaj\",\"status\":\"NonFinding\",\"isTrimmed\":false,\"queryResults\":[[\"zvogtde\",\"j\"],[\"nmkvaeu\",\"qdwxhhlbmyphfxn\"],[\"dhewokyqsfkx\",\"sy\",\"b\"],[\"qbtodjfy\",\"bvkvwzdmvdd\",\"wcrugyozzz\",\"wnjdvvlrh\"]],\"remediation\":{\"description\":\"kkvxu\",\"scripts\":[\"zbvb\",\"suvqhxtozfgdkwb\",\"urklp\",\"igf\"],\"automated\":true,\"portalLink\":\"utui\"},\"baselineAdjustedResult\":{\"baseline\":{},\"status\":\"Finding\",\"resultsNotInBaseline\":[[],[],[],[]],\"resultsOnlyInBaseline\":[[]]},\"ruleMetadata\":{\"ruleId\":\"qydewuwxyllz\",\"severity\":\"High\",\"category\":\"tzqwcz\",\"ruleType\":\"PositiveList\",\"title\":\"bek\",\"description\":\"ynfpkyvnhiysdho\",\"rationale\":\"slhraqkiwlwkff\",\"queryCheck\":{},\"benchmarkReferences\":[{},{},{}]}},\"id\":\"mwqoguflteatnege\",\"name\":\"zjxnjtqbgysibt\",\"type\":\"nvxwtdqtcbjdbtqy\"},{\"properties\":{\"ruleId\":\"unsaujqgbbjvo\",\"status\":\"Finding\",\"isTrimmed\":true,\"queryResults\":[[\"mbcsloygsabdgd\",\"e\",\"onsdunr\"]],\"remediation\":{\"description\":\"zuatqhgzuyxt\",\"scripts\":[\"dbqskgqjbvitptp\",\"sffavdhpiwrmuwk\",\"jwbyfdwfbw\",\"yldqtmggcpd\"],\"automated\":true,\"portalLink\":\"ajrzctwymzskwqk\"},\"baselineAdjustedResult\":{\"baseline\":{},\"status\":\"NonFinding\",\"resultsNotInBaseline\":[[],[],[],[]],\"resultsOnlyInBaseline\":[[],[],[]]},\"ruleMetadata\":{\"ruleId\":\"upqscoobkjlcax\",\"severity\":\"High\",\"category\":\"mjiqiince\",\"ruleType\":\"BaselineExpected\",\"title\":\"devpximziizmeq\",\"description\":\"uvtvodqxxp\",\"rationale\":\"ml\",\"queryCheck\":{},\"benchmarkReferences\":[{}]}},\"id\":\"blmcvrjaznotdof\",\"name\":\"vpbqsdqkpsbqs\",\"type\":\"bmitaftazgcxsvq\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ScanResults response = manager.sqlVulnerabilityAssessmentScanResults()
            .listWithResponse("qxtoiyygktsrjyxx", "xwfzbkvecnxfxph", "owbebsnbwut", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("sumustihtgrafjaj", response.value().get(0).properties().ruleId());
        Assertions.assertEquals(RuleStatus.NON_FINDING, response.value().get(0).properties().status());
        Assertions.assertEquals(false, response.value().get(0).properties().isTrimmed());
        Assertions.assertEquals("zvogtde", response.value().get(0).properties().queryResults().get(0).get(0));
        Assertions.assertEquals("kkvxu", response.value().get(0).properties().remediation().description());
        Assertions.assertEquals("zbvb", response.value().get(0).properties().remediation().scripts().get(0));
        Assertions.assertEquals(true, response.value().get(0).properties().remediation().automated());
        Assertions.assertEquals("utui", response.value().get(0).properties().remediation().portalLink());
        Assertions.assertEquals(RuleStatus.FINDING,
            response.value().get(0).properties().baselineAdjustedResult().status());
        Assertions.assertEquals("qydewuwxyllz", response.value().get(0).properties().ruleMetadata().ruleId());
        Assertions.assertEquals(RuleSeverity.HIGH, response.value().get(0).properties().ruleMetadata().severity());
        Assertions.assertEquals("tzqwcz", response.value().get(0).properties().ruleMetadata().category());
        Assertions.assertEquals(RuleType.POSITIVE_LIST, response.value().get(0).properties().ruleMetadata().ruleType());
        Assertions.assertEquals("bek", response.value().get(0).properties().ruleMetadata().title());
        Assertions.assertEquals("ynfpkyvnhiysdho", response.value().get(0).properties().ruleMetadata().description());
        Assertions.assertEquals("slhraqkiwlwkff", response.value().get(0).properties().ruleMetadata().rationale());
    }
}
