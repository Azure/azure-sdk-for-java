// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.DescendantBehavior;
import com.azure.resourcemanager.security.models.DevOpsPolicyAssignment;
import com.azure.resourcemanager.security.models.DevOpsPolicyAssignmentProperties;
import com.azure.resourcemanager.security.models.DevOpsPolicyDescriptor;
import com.azure.resourcemanager.security.models.DevOpsPolicyType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DevOpsPolicyAssignmentsCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningStatusMessage\":\"bskiwrj\",\"provisioningStatusUpdateTimeUtc\":\"2021-01-30T21:19:27Z\",\"provisioningState\":\"Succeeded\",\"resourceId\":\"eesacuicnvqiqsu\",\"descendantBehavior\":\"Unknown\",\"policy\":{\"policyName\":\"aptndrmmnlhnk\",\"policyId\":\"rqkekcdaviiebeqr\",\"policyVersion\":\"avqymcwt\",\"policyType\":\"Pipeline\"},\"assignedAt\":\"2021-05-30T19:59Z\"},\"id\":\"plbrzgkuorwpqbst\",\"name\":\"e\",\"type\":\"b\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        DevOpsPolicyAssignment response = manager.devOpsPolicyAssignments()
            .define("tjsjzelsriemvu")
            .withExistingSecurityConnector("lrcygotohzwto", "dhbxitrapwzhl")
            .withProperties(new DevOpsPolicyAssignmentProperties().withResourceId("vldeehcbsaip")
                .withDescendantBehavior(DescendantBehavior.OVERRIDE)
                .withPolicy(new DevOpsPolicyDescriptor().withPolicyName("kegbvbbdledf")
                    .withPolicyId("zvsluazzxfjve")
                    .withPolicyVersion("pxzee")
                    .withPolicyType(DevOpsPolicyType.PIPELINE))
                .withAssignedAt(OffsetDateTime.parse("2021-07-28T00:34:57Z")))
            .create();

        Assertions.assertEquals("eesacuicnvqiqsu", response.properties().resourceId());
        Assertions.assertEquals(DescendantBehavior.UNKNOWN, response.properties().descendantBehavior());
        Assertions.assertEquals("aptndrmmnlhnk", response.properties().policy().policyName());
        Assertions.assertEquals("rqkekcdaviiebeqr", response.properties().policy().policyId());
        Assertions.assertEquals("avqymcwt", response.properties().policy().policyVersion());
        Assertions.assertEquals(DevOpsPolicyType.PIPELINE, response.properties().policy().policyType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-30T19:59Z"), response.properties().assignedAt());
    }
}
