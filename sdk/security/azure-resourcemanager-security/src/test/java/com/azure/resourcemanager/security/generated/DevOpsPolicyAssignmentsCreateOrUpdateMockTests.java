// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.DescendantBehavior;
import com.azure.resourcemanager.security.models.DevOpsPolicyAssignment;
import com.azure.resourcemanager.security.models.DevOpsPolicyAssignmentProperties;
import com.azure.resourcemanager.security.models.DevOpsPolicyDescriptor;
import com.azure.resourcemanager.security.models.DevOpsPolicyType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DevOpsPolicyAssignmentsCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningStatusMessage\":\"zdcrolrzesbomphz\",\"provisioningStatusUpdateTimeUtc\":\"2021-05-02T21:10:04Z\",\"provisioningState\":\"Succeeded\",\"resourceId\":\"jivtb\",\"descendantBehavior\":\"Unknown\",\"policy\":{\"policyName\":\"j\",\"policyId\":\"feujywda\",\"policyVersion\":\"sdeqngcaydzinlo\",\"policyType\":\"Pipeline\"},\"assignedAt\":\"2021-06-20T23:46:03Z\"},\"id\":\"zmdahyclxrs\",\"name\":\"doebldpoiaffj\",\"type\":\"rtnhrevimxmax\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        DevOpsPolicyAssignment response = manager.devOpsPolicyAssignments()
            .define("dyuxurxrltqmm")
            .withExistingSecurityConnector("tc", "zjfjtvpey")
            .withProperties(new DevOpsPolicyAssignmentProperties().withResourceId("qnyumz")
                .withDescendantBehavior(DescendantBehavior.OVERRIDE)
                .withPolicy(new DevOpsPolicyDescriptor().withPolicyName("ezv")
                    .withPolicyId("zk")
                    .withPolicyVersion("zqnzbflbqm")
                    .withPolicyType(DevOpsPolicyType.UNKNOWN))
                .withAssignedAt(OffsetDateTime.parse("2021-02-16T22:01:12Z")))
            .create();

        Assertions.assertEquals("jivtb", response.properties().resourceId());
        Assertions.assertEquals(DescendantBehavior.UNKNOWN, response.properties().descendantBehavior());
        Assertions.assertEquals("j", response.properties().policy().policyName());
        Assertions.assertEquals("feujywda", response.properties().policy().policyId());
        Assertions.assertEquals("sdeqngcaydzinlo", response.properties().policy().policyVersion());
        Assertions.assertEquals(DevOpsPolicyType.PIPELINE, response.properties().policy().policyType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-20T23:46:03Z"), response.properties().assignedAt());
    }
}
