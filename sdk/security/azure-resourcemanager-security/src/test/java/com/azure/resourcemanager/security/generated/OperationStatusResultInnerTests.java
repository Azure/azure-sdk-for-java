// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.OperationStatusResultInner;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class OperationStatusResultInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationStatusResultInner model = BinaryData.fromString(
            "{\"id\":\"upibaqzizxzpzwe\",\"name\":\"lwwbo\",\"status\":\"vgfklqiyndveqe\",\"percentComplete\":3.4752905,\"startTime\":\"2021-09-07T18:26:07Z\",\"endTime\":\"2021-10-03T09:48:21Z\",\"operations\":[{\"id\":\"zxsgtznsv\",\"name\":\"dsmovpimy\",\"status\":\"dnox\",\"percentComplete\":19.855219,\"startTime\":\"2021-02-12T05:31:33Z\",\"endTime\":\"2021-10-07T04:08:26Z\",\"operations\":[{\"id\":\"ndxol\",\"name\":\"sdvr\",\"status\":\"ptqmawzjdrpiz\",\"percentComplete\":2.5345922,\"startTime\":\"2021-11-04T23:11:12Z\",\"endTime\":\"2021-08-29T08:53:42Z\",\"operations\":[{\"status\":\"btqgkujdsoox\"},{\"status\":\"qwoeurbtigapd\"},{\"status\":\"arikeejdpdfhtwmm\"}]},{\"id\":\"bri\",\"name\":\"lwwtr\",\"status\":\"meqkvy\",\"percentComplete\":45.53458,\"startTime\":\"2021-12-04T10:14:32Z\",\"endTime\":\"2021-09-30T22:37:56Z\",\"operations\":[{\"status\":\"h\"},{\"status\":\"ensnaa\"}]},{\"id\":\"mpoejnglpwsada\",\"name\":\"sumxpezcoioyj\",\"status\":\"mfqzwqdnx\",\"percentComplete\":5.18406,\"startTime\":\"2021-07-12T19:05:09Z\",\"endTime\":\"2021-11-07T09:34:45Z\",\"operations\":[{\"status\":\"wxf\"}]},{\"id\":\"vemyzdpc\",\"name\":\"qpqifdbmptrwtxz\",\"status\":\"isamonatniz\",\"percentComplete\":0.20298958,\"startTime\":\"2021-03-13T00:42:38Z\",\"endTime\":\"2021-10-22T22:18:16Z\",\"operations\":[{\"status\":\"rmthsplwst\"}]}]}]}")
            .toObject(OperationStatusResultInner.class);
        Assertions.assertEquals("upibaqzizxzpzwe", model.id());
        Assertions.assertEquals("lwwbo", model.name());
        Assertions.assertEquals("vgfklqiyndveqe", model.status());
        Assertions.assertEquals(3.4752905F, model.percentComplete());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-07T18:26:07Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-03T09:48:21Z"), model.endTime());
        Assertions.assertEquals("zxsgtznsv", model.operations().get(0).id());
        Assertions.assertEquals("dsmovpimy", model.operations().get(0).name());
        Assertions.assertEquals("dnox", model.operations().get(0).status());
        Assertions.assertEquals(19.855219F, model.operations().get(0).percentComplete());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-12T05:31:33Z"), model.operations().get(0).startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-07T04:08:26Z"), model.operations().get(0).endTime());
        Assertions.assertEquals("ndxol", model.operations().get(0).operations().get(0).id());
        Assertions.assertEquals("sdvr", model.operations().get(0).operations().get(0).name());
        Assertions.assertEquals("ptqmawzjdrpiz", model.operations().get(0).operations().get(0).status());
        Assertions.assertEquals(2.5345922F, model.operations().get(0).operations().get(0).percentComplete());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-04T23:11:12Z"),
            model.operations().get(0).operations().get(0).startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-29T08:53:42Z"),
            model.operations().get(0).operations().get(0).endTime());
        Assertions.assertEquals("btqgkujdsoox",
            model.operations().get(0).operations().get(0).operations().get(0).status());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationStatusResultInner model = new OperationStatusResultInner().withId("upibaqzizxzpzwe")
            .withName("lwwbo")
            .withStatus("vgfklqiyndveqe")
            .withPercentComplete(3.4752905F)
            .withStartTime(OffsetDateTime.parse("2021-09-07T18:26:07Z"))
            .withEndTime(OffsetDateTime.parse("2021-10-03T09:48:21Z"))
            .withOperations(Arrays.asList(new OperationStatusResultInner().withId("zxsgtznsv")
                .withName("dsmovpimy")
                .withStatus("dnox")
                .withPercentComplete(19.855219F)
                .withStartTime(OffsetDateTime.parse("2021-02-12T05:31:33Z"))
                .withEndTime(OffsetDateTime.parse("2021-10-07T04:08:26Z"))
                .withOperations(Arrays.asList(
                    new OperationStatusResultInner().withId("ndxol")
                        .withName("sdvr")
                        .withStatus("ptqmawzjdrpiz")
                        .withPercentComplete(2.5345922F)
                        .withStartTime(OffsetDateTime.parse("2021-11-04T23:11:12Z"))
                        .withEndTime(OffsetDateTime.parse("2021-08-29T08:53:42Z"))
                        .withOperations(Arrays.asList(new OperationStatusResultInner().withStatus("btqgkujdsoox"),
                            new OperationStatusResultInner().withStatus("qwoeurbtigapd"),
                            new OperationStatusResultInner().withStatus("arikeejdpdfhtwmm"))),
                    new OperationStatusResultInner().withId("bri")
                        .withName("lwwtr")
                        .withStatus("meqkvy")
                        .withPercentComplete(45.53458F)
                        .withStartTime(OffsetDateTime.parse("2021-12-04T10:14:32Z"))
                        .withEndTime(OffsetDateTime.parse("2021-09-30T22:37:56Z"))
                        .withOperations(Arrays.asList(new OperationStatusResultInner().withStatus("h"),
                            new OperationStatusResultInner().withStatus("ensnaa"))),
                    new OperationStatusResultInner().withId("mpoejnglpwsada")
                        .withName("sumxpezcoioyj")
                        .withStatus("mfqzwqdnx")
                        .withPercentComplete(5.18406F)
                        .withStartTime(OffsetDateTime.parse("2021-07-12T19:05:09Z"))
                        .withEndTime(OffsetDateTime.parse("2021-11-07T09:34:45Z"))
                        .withOperations(Arrays.asList(new OperationStatusResultInner().withStatus("wxf"))),
                    new OperationStatusResultInner().withId("vemyzdpc")
                        .withName("qpqifdbmptrwtxz")
                        .withStatus("isamonatniz")
                        .withPercentComplete(0.20298958F)
                        .withStartTime(OffsetDateTime.parse("2021-03-13T00:42:38Z"))
                        .withEndTime(OffsetDateTime.parse("2021-10-22T22:18:16Z"))
                        .withOperations(Arrays.asList(new OperationStatusResultInner().withStatus("rmthsplwst")))))));
        model = BinaryData.fromObject(model).toObject(OperationStatusResultInner.class);
        Assertions.assertEquals("upibaqzizxzpzwe", model.id());
        Assertions.assertEquals("lwwbo", model.name());
        Assertions.assertEquals("vgfklqiyndveqe", model.status());
        Assertions.assertEquals(3.4752905F, model.percentComplete());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-07T18:26:07Z"), model.startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-03T09:48:21Z"), model.endTime());
        Assertions.assertEquals("zxsgtznsv", model.operations().get(0).id());
        Assertions.assertEquals("dsmovpimy", model.operations().get(0).name());
        Assertions.assertEquals("dnox", model.operations().get(0).status());
        Assertions.assertEquals(19.855219F, model.operations().get(0).percentComplete());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-12T05:31:33Z"), model.operations().get(0).startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-07T04:08:26Z"), model.operations().get(0).endTime());
        Assertions.assertEquals("ndxol", model.operations().get(0).operations().get(0).id());
        Assertions.assertEquals("sdvr", model.operations().get(0).operations().get(0).name());
        Assertions.assertEquals("ptqmawzjdrpiz", model.operations().get(0).operations().get(0).status());
        Assertions.assertEquals(2.5345922F, model.operations().get(0).operations().get(0).percentComplete());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-04T23:11:12Z"),
            model.operations().get(0).operations().get(0).startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-29T08:53:42Z"),
            model.operations().get(0).operations().get(0).endTime());
        Assertions.assertEquals("btqgkujdsoox",
            model.operations().get(0).operations().get(0).operations().get(0).status());
    }
}
