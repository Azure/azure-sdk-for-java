// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.GovernanceRuleProperties;
import com.azure.resourcemanager.security.models.GovernanceRuleEmailNotification;
import com.azure.resourcemanager.security.models.GovernanceRuleMetadata;
import com.azure.resourcemanager.security.models.GovernanceRuleOwnerSource;
import com.azure.resourcemanager.security.models.GovernanceRuleOwnerSourceType;
import com.azure.resourcemanager.security.models.GovernanceRuleSourceResourceType;
import com.azure.resourcemanager.security.models.GovernanceRuleType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class GovernanceRulePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GovernanceRuleProperties model = BinaryData.fromString(
            "{\"tenantId\":\"hyxxrwlycoduhpk\",\"displayName\":\"kgymareqnajxqug\",\"description\":\"ky\",\"remediationTimeframe\":\"beddgssofw\",\"isGracePeriod\":true,\"rulePriority\":761384571,\"isDisabled\":false,\"ruleType\":\"ServiceNow\",\"sourceResourceType\":\"Assessments\",\"excludedScopes\":[\"jijpxac\",\"qudf\",\"byxbaaabjy\",\"ayffim\"],\"conditionSets\":[\"datartuzqogs\",\"dataxnevfdnwn\"],\"includeMemberScopes\":true,\"ownerSource\":{\"type\":\"Manually\",\"value\":\"yyceuzsoi\"},\"governanceEmailNotification\":{\"disableManagerEmailNotification\":true,\"disableOwnerEmailNotification\":true},\"metadata\":{\"createdBy\":\"trthzvaytdwkqbr\",\"createdOn\":\"2021-11-25T23:16:06Z\",\"updatedBy\":\"axhexiilivp\",\"updatedOn\":\"2020-12-31T16:12:57Z\"}}")
            .toObject(GovernanceRuleProperties.class);
        Assertions.assertEquals("kgymareqnajxqug", model.displayName());
        Assertions.assertEquals("ky", model.description());
        Assertions.assertEquals("beddgssofw", model.remediationTimeframe());
        Assertions.assertEquals(true, model.isGracePeriod());
        Assertions.assertEquals(761384571, model.rulePriority());
        Assertions.assertEquals(false, model.isDisabled());
        Assertions.assertEquals(GovernanceRuleType.SERVICE_NOW, model.ruleType());
        Assertions.assertEquals(GovernanceRuleSourceResourceType.ASSESSMENTS, model.sourceResourceType());
        Assertions.assertEquals("jijpxac", model.excludedScopes().get(0));
        Assertions.assertEquals(true, model.includeMemberScopes());
        Assertions.assertEquals(GovernanceRuleOwnerSourceType.MANUALLY, model.ownerSource().type());
        Assertions.assertEquals("yyceuzsoi", model.ownerSource().value());
        Assertions.assertEquals(true, model.governanceEmailNotification().disableManagerEmailNotification());
        Assertions.assertEquals(true, model.governanceEmailNotification().disableOwnerEmailNotification());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GovernanceRuleProperties model = new GovernanceRuleProperties().withDisplayName("kgymareqnajxqug")
            .withDescription("ky")
            .withRemediationTimeframe("beddgssofw")
            .withIsGracePeriod(true)
            .withRulePriority(761384571)
            .withIsDisabled(false)
            .withRuleType(GovernanceRuleType.SERVICE_NOW)
            .withSourceResourceType(GovernanceRuleSourceResourceType.ASSESSMENTS)
            .withExcludedScopes(Arrays.asList("jijpxac", "qudf", "byxbaaabjy", "ayffim"))
            .withConditionSets(Arrays.asList("datartuzqogs", "dataxnevfdnwn"))
            .withIncludeMemberScopes(true)
            .withOwnerSource(
                new GovernanceRuleOwnerSource().withType(GovernanceRuleOwnerSourceType.MANUALLY).withValue("yyceuzsoi"))
            .withGovernanceEmailNotification(
                new GovernanceRuleEmailNotification().withDisableManagerEmailNotification(true)
                    .withDisableOwnerEmailNotification(true))
            .withMetadata(new GovernanceRuleMetadata());
        model = BinaryData.fromObject(model).toObject(GovernanceRuleProperties.class);
        Assertions.assertEquals("kgymareqnajxqug", model.displayName());
        Assertions.assertEquals("ky", model.description());
        Assertions.assertEquals("beddgssofw", model.remediationTimeframe());
        Assertions.assertEquals(true, model.isGracePeriod());
        Assertions.assertEquals(761384571, model.rulePriority());
        Assertions.assertEquals(false, model.isDisabled());
        Assertions.assertEquals(GovernanceRuleType.SERVICE_NOW, model.ruleType());
        Assertions.assertEquals(GovernanceRuleSourceResourceType.ASSESSMENTS, model.sourceResourceType());
        Assertions.assertEquals("jijpxac", model.excludedScopes().get(0));
        Assertions.assertEquals(true, model.includeMemberScopes());
        Assertions.assertEquals(GovernanceRuleOwnerSourceType.MANUALLY, model.ownerSource().type());
        Assertions.assertEquals("yyceuzsoi", model.ownerSource().value());
        Assertions.assertEquals(true, model.governanceEmailNotification().disableManagerEmailNotification());
        Assertions.assertEquals(true, model.governanceEmailNotification().disableOwnerEmailNotification());
    }
}
