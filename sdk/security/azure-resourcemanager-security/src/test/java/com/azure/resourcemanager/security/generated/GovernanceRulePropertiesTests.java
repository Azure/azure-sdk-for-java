// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.GovernanceRuleProperties;
import com.azure.resourcemanager.security.models.GovernanceRuleEmailNotification;
import com.azure.resourcemanager.security.models.GovernanceRuleMetadata;
import com.azure.resourcemanager.security.models.GovernanceRuleOwnerSource;
import com.azure.resourcemanager.security.models.GovernanceRuleOwnerSourceType;
import com.azure.resourcemanager.security.models.GovernanceRuleSourceResourceType;
import com.azure.resourcemanager.security.models.GovernanceRuleType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class GovernanceRulePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GovernanceRuleProperties model =
            BinaryData
                .fromString(
                    "{\"tenantId\":\"czkgofxyfsrucvcr\",\"displayName\":\"pcjttbstvjeaqn\",\"description\":\"vvf\",\"remediationTimeframe\":\"xmlghkt\",\"isGracePeriod\":true,\"rulePriority\":2137769434,\"isDisabled\":false,\"ruleType\":\"Integrated\",\"sourceResourceType\":\"Assessments\",\"excludedScopes\":[\"dwwexymz\",\"lazipbhpwvq\",\"gnyyuuzivens\",\"pmeyyvpkpatlbijp\"],\"conditionSets\":[\"datasksrfhfvolmknbn\",\"datawcdommpvfqaw\"],\"includeMemberScopes\":false,\"ownerSource\":{\"type\":\"Manually\",\"value\":\"tuiaclkiexhajlfn\"},\"governanceEmailNotification\":{\"disableManagerEmailNotification\":false,\"disableOwnerEmailNotification\":true},\"metadata\":{\"createdBy\":\"t\",\"createdOn\":\"2021-07-20T02:29:06Z\",\"updatedBy\":\"b\",\"updatedOn\":\"2021-05-24T19:47:23Z\"}}")
                .toObject(GovernanceRuleProperties.class);
        Assertions.assertEquals("pcjttbstvjeaqn", model.displayName());
        Assertions.assertEquals("vvf", model.description());
        Assertions.assertEquals("xmlghkt", model.remediationTimeframe());
        Assertions.assertEquals(true, model.isGracePeriod());
        Assertions.assertEquals(2137769434, model.rulePriority());
        Assertions.assertEquals(false, model.isDisabled());
        Assertions.assertEquals(GovernanceRuleType.INTEGRATED, model.ruleType());
        Assertions.assertEquals(GovernanceRuleSourceResourceType.ASSESSMENTS, model.sourceResourceType());
        Assertions.assertEquals("dwwexymz", model.excludedScopes().get(0));
        Assertions.assertEquals(false, model.includeMemberScopes());
        Assertions.assertEquals(GovernanceRuleOwnerSourceType.MANUALLY, model.ownerSource().type());
        Assertions.assertEquals("tuiaclkiexhajlfn", model.ownerSource().value());
        Assertions.assertEquals(false, model.governanceEmailNotification().disableManagerEmailNotification());
        Assertions.assertEquals(true, model.governanceEmailNotification().disableOwnerEmailNotification());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GovernanceRuleProperties model =
            new GovernanceRuleProperties()
                .withDisplayName("pcjttbstvjeaqn")
                .withDescription("vvf")
                .withRemediationTimeframe("xmlghkt")
                .withIsGracePeriod(true)
                .withRulePriority(2137769434)
                .withIsDisabled(false)
                .withRuleType(GovernanceRuleType.INTEGRATED)
                .withSourceResourceType(GovernanceRuleSourceResourceType.ASSESSMENTS)
                .withExcludedScopes(Arrays.asList("dwwexymz", "lazipbhpwvq", "gnyyuuzivens", "pmeyyvpkpatlbijp"))
                .withConditionSets(Arrays.asList("datasksrfhfvolmknbn", "datawcdommpvfqaw"))
                .withIncludeMemberScopes(false)
                .withOwnerSource(
                    new GovernanceRuleOwnerSource()
                        .withType(GovernanceRuleOwnerSourceType.MANUALLY)
                        .withValue("tuiaclkiexhajlfn"))
                .withGovernanceEmailNotification(
                    new GovernanceRuleEmailNotification()
                        .withDisableManagerEmailNotification(false)
                        .withDisableOwnerEmailNotification(true))
                .withMetadata(new GovernanceRuleMetadata());
        model = BinaryData.fromObject(model).toObject(GovernanceRuleProperties.class);
        Assertions.assertEquals("pcjttbstvjeaqn", model.displayName());
        Assertions.assertEquals("vvf", model.description());
        Assertions.assertEquals("xmlghkt", model.remediationTimeframe());
        Assertions.assertEquals(true, model.isGracePeriod());
        Assertions.assertEquals(2137769434, model.rulePriority());
        Assertions.assertEquals(false, model.isDisabled());
        Assertions.assertEquals(GovernanceRuleType.INTEGRATED, model.ruleType());
        Assertions.assertEquals(GovernanceRuleSourceResourceType.ASSESSMENTS, model.sourceResourceType());
        Assertions.assertEquals("dwwexymz", model.excludedScopes().get(0));
        Assertions.assertEquals(false, model.includeMemberScopes());
        Assertions.assertEquals(GovernanceRuleOwnerSourceType.MANUALLY, model.ownerSource().type());
        Assertions.assertEquals("tuiaclkiexhajlfn", model.ownerSource().value());
        Assertions.assertEquals(false, model.governanceEmailNotification().disableManagerEmailNotification());
        Assertions.assertEquals(true, model.governanceEmailNotification().disableOwnerEmailNotification());
    }
}
