// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.RuleSeverity;
import com.azure.resourcemanager.security.models.RuleStatus;
import com.azure.resourcemanager.security.models.RuleType;
import com.azure.resourcemanager.security.models.ScanResult;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SqlVulnerabilityAssessmentScanResultsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"ruleId\":\"ba\",\"status\":\"InternalError\",\"isTrimmed\":true,\"queryResults\":[[\"ajvmvvlooubsfxip\",\"eopsk\",\"ocjomlup\",\"azusjcd\"],[\"slgdwz\",\"gdqyxajc\",\"grcavqc\",\"yzoqzkmqcwwsjnk\"],[\"xepbntqq\",\"w\",\"fgsqxile\"],[\"jsewrz\"]],\"remediation\":{\"description\":\"uqynttwk\",\"scripts\":[\"jksb\",\"yogjmqjh\"],\"automated\":false,\"portalLink\":\"ijnmcvjbssfcr\"},\"baselineAdjustedResult\":{\"baseline\":{\"expectedResults\":[[\"tdlxwmvcdkucp\",\"py\",\"frwrgorogeuvmkr\",\"pnr\"],[\"semlzofrsnq\",\"ljpetexutikelpmw\"]],\"updatedTime\":\"2021-07-26T22:51:45Z\"},\"status\":\"InternalError\",\"resultsNotInBaseline\":[[\"hvo\",\"gjzscueza\"],[\"vdfwgqjhewcffrx\",\"gezkhzpriqisse\",\"errusyzaiv\"]],\"resultsOnlyInBaseline\":[[\"n\"],[\"kplujyduon\",\"dawsaoplvvmnbk\",\"jarsbbdddwok\",\"xailx\"],[\"dyqjvzvcgrdspzes\",\"kqqxuhvzf\"]]},\"ruleMetadata\":{\"ruleId\":\"ousz\",\"severity\":\"Medium\",\"category\":\"wukokgoojj\",\"ruleType\":\"PositiveList\",\"title\":\"ubcmun\",\"description\":\"btzvxxv\",\"rationale\":\"cuufkrfn\",\"queryCheck\":{\"query\":\"ih\",\"expectedResult\":[[\"mfurqmwmwwp\",\"t\",\"motahbqsvnk\",\"mytzuaedrlh\"],[\"cqmyrhkvxzz\"]],\"columnNames\":[\"mqyftgpqoswgf\",\"vjmghpakbqyhl\",\"ornfbm\",\"qagkncjmybn\"]},\"benchmarkReferences\":[{\"benchmark\":\"tnjawrhulemmqmbw\",\"reference\":\"xirx\"},{\"benchmark\":\"itzmnhitaxj\",\"reference\":\"l\"},{\"benchmark\":\"lxsgcemegdz\",\"reference\":\"y\"},{\"benchmark\":\"u\",\"reference\":\"f\"}]}},\"id\":\"yzufldifnivlutgg\",\"name\":\"aacxauhvc\",\"type\":\"zxhkl\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ScanResult response = manager.sqlVulnerabilityAssessmentScanResults()
            .getWithResponse("wpsibxovuqoq", "rkblndyclw", "ycvtqnzjcy", "qzhembtbw", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("ba", response.properties().ruleId());
        Assertions.assertEquals(RuleStatus.INTERNAL_ERROR, response.properties().status());
        Assertions.assertEquals(true, response.properties().isTrimmed());
        Assertions.assertEquals("ajvmvvlooubsfxip", response.properties().queryResults().get(0).get(0));
        Assertions.assertEquals("uqynttwk", response.properties().remediation().description());
        Assertions.assertEquals("jksb", response.properties().remediation().scripts().get(0));
        Assertions.assertEquals(false, response.properties().remediation().automated());
        Assertions.assertEquals("ijnmcvjbssfcr", response.properties().remediation().portalLink());
        Assertions.assertEquals("tdlxwmvcdkucp",
            response.properties().baselineAdjustedResult().baseline().expectedResults().get(0).get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-26T22:51:45Z"),
            response.properties().baselineAdjustedResult().baseline().updatedTime());
        Assertions.assertEquals(RuleStatus.INTERNAL_ERROR, response.properties().baselineAdjustedResult().status());
        Assertions.assertEquals("hvo",
            response.properties().baselineAdjustedResult().resultsNotInBaseline().get(0).get(0));
        Assertions.assertEquals("n",
            response.properties().baselineAdjustedResult().resultsOnlyInBaseline().get(0).get(0));
        Assertions.assertEquals("ousz", response.properties().ruleMetadata().ruleId());
        Assertions.assertEquals(RuleSeverity.MEDIUM, response.properties().ruleMetadata().severity());
        Assertions.assertEquals("wukokgoojj", response.properties().ruleMetadata().category());
        Assertions.assertEquals(RuleType.POSITIVE_LIST, response.properties().ruleMetadata().ruleType());
        Assertions.assertEquals("ubcmun", response.properties().ruleMetadata().title());
        Assertions.assertEquals("btzvxxv", response.properties().ruleMetadata().description());
        Assertions.assertEquals("cuufkrfn", response.properties().ruleMetadata().rationale());
        Assertions.assertEquals("ih", response.properties().ruleMetadata().queryCheck().query());
        Assertions.assertEquals("mfurqmwmwwp",
            response.properties().ruleMetadata().queryCheck().expectedResult().get(0).get(0));
        Assertions.assertEquals("mqyftgpqoswgf",
            response.properties().ruleMetadata().queryCheck().columnNames().get(0));
        Assertions.assertEquals("tnjawrhulemmqmbw",
            response.properties().ruleMetadata().benchmarkReferences().get(0).benchmark());
        Assertions.assertEquals("xirx", response.properties().ruleMetadata().benchmarkReferences().get(0).reference());
    }
}
