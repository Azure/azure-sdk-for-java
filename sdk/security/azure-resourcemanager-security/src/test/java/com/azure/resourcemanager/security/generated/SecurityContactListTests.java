// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.SecurityContactInner;
import com.azure.resourcemanager.security.models.NotificationsSource;
import com.azure.resourcemanager.security.models.SecurityContactList;
import com.azure.resourcemanager.security.models.SecurityContactPropertiesNotificationsByRole;
import com.azure.resourcemanager.security.models.SecurityContactRole;
import com.azure.resourcemanager.security.models.State;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SecurityContactListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SecurityContactList model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"emails\":\"kzq\",\"phone\":\"jeokbzefezrxccz\",\"isEnabled\":true,\"notificationsSources\":[{\"sourceType\":\"NotificationsSource\"}],\"notificationsByRole\":{\"state\":\"Passed\",\"roles\":[\"AccountAdmin\",\"AccountAdmin\"]}},\"id\":\"vz\",\"name\":\"nzvdfbzdixzmq\",\"type\":\"noda\"},{\"properties\":{\"emails\":\"qhewj\",\"phone\":\"mcgsbostzelnd\",\"isEnabled\":false,\"notificationsSources\":[{\"sourceType\":\"NotificationsSource\"},{\"sourceType\":\"NotificationsSource\"},{\"sourceType\":\"NotificationsSource\"}],\"notificationsByRole\":{\"state\":\"Skipped\",\"roles\":[\"Contributor\",\"Contributor\",\"ServiceAdmin\"]}},\"id\":\"vfhrbbpneqvc\",\"name\":\"wyyu\",\"type\":\"mochpprprsnmok\"},{\"properties\":{\"emails\":\"ejnhlbkpb\",\"phone\":\"cpilj\",\"isEnabled\":true,\"notificationsSources\":[{\"sourceType\":\"NotificationsSource\"},{\"sourceType\":\"NotificationsSource\"},{\"sourceType\":\"NotificationsSource\"},{\"sourceType\":\"NotificationsSource\"}],\"notificationsByRole\":{\"state\":\"Passed\",\"roles\":[\"Owner\"]}},\"id\":\"nwieholewjw\",\"name\":\"uubw\",\"type\":\"fqsfa\"}],\"nextLink\":\"qtferrqwexjkmf\"}")
            .toObject(SecurityContactList.class);
        Assertions.assertEquals("kzq", model.value().get(0).emails());
        Assertions.assertEquals("jeokbzefezrxccz", model.value().get(0).phone());
        Assertions.assertEquals(true, model.value().get(0).isEnabled());
        Assertions.assertEquals(State.PASSED, model.value().get(0).notificationsByRole().state());
        Assertions.assertEquals(SecurityContactRole.ACCOUNT_ADMIN,
            model.value().get(0).notificationsByRole().roles().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SecurityContactList model = new SecurityContactList().withValue(Arrays.asList(
            new SecurityContactInner().withEmails("kzq")
                .withPhone("jeokbzefezrxccz")
                .withIsEnabled(true)
                .withNotificationsSources(Arrays.asList(new NotificationsSource()))
                .withNotificationsByRole(new SecurityContactPropertiesNotificationsByRole().withState(State.PASSED)
                    .withRoles(Arrays.asList(SecurityContactRole.ACCOUNT_ADMIN, SecurityContactRole.ACCOUNT_ADMIN))),
            new SecurityContactInner().withEmails("qhewj")
                .withPhone("mcgsbostzelnd")
                .withIsEnabled(false)
                .withNotificationsSources(
                    Arrays.asList(new NotificationsSource(), new NotificationsSource(), new NotificationsSource()))
                .withNotificationsByRole(new SecurityContactPropertiesNotificationsByRole().withState(State.SKIPPED)
                    .withRoles(Arrays.asList(SecurityContactRole.CONTRIBUTOR, SecurityContactRole.CONTRIBUTOR,
                        SecurityContactRole.SERVICE_ADMIN))),
            new SecurityContactInner().withEmails("ejnhlbkpb")
                .withPhone("cpilj")
                .withIsEnabled(true)
                .withNotificationsSources(Arrays.asList(new NotificationsSource(), new NotificationsSource(),
                    new NotificationsSource(), new NotificationsSource()))
                .withNotificationsByRole(new SecurityContactPropertiesNotificationsByRole().withState(State.PASSED)
                    .withRoles(Arrays.asList(SecurityContactRole.OWNER)))));
        model = BinaryData.fromObject(model).toObject(SecurityContactList.class);
        Assertions.assertEquals("kzq", model.value().get(0).emails());
        Assertions.assertEquals("jeokbzefezrxccz", model.value().get(0).phone());
        Assertions.assertEquals(true, model.value().get(0).isEnabled());
        Assertions.assertEquals(State.PASSED, model.value().get(0).notificationsByRole().state());
        Assertions.assertEquals(SecurityContactRole.ACCOUNT_ADMIN,
            model.value().get(0).notificationsByRole().roles().get(0));
    }
}
