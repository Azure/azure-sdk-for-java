// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.models.ActionableRemediation;
import com.azure.resourcemanager.security.models.ActionableRemediationState;
import com.azure.resourcemanager.security.models.AnnotateDefaultBranchState;
import com.azure.resourcemanager.security.models.CategoryConfiguration;
import com.azure.resourcemanager.security.models.InheritFromParentState;
import com.azure.resourcemanager.security.models.RuleCategory;
import com.azure.resourcemanager.security.models.TargetBranchConfiguration;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ActionableRemediationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ActionableRemediation model = BinaryData.fromString(
            "{\"state\":\"Enabled\",\"categoryConfigurations\":[{\"minimumSeverityLevel\":\"mjnnawtq\",\"category\":\"Artifacts\"},{\"minimumSeverityLevel\":\"uckpggqoweyir\",\"category\":\"Containers\"}],\"branchConfiguration\":{\"branchNames\":[\"gwflq\",\"mpizru\",\"n\",\"qxpxiwfcngjsaa\"],\"annotateDefaultBranch\":\"Enabled\"},\"inheritFromParentState\":\"Enabled\"}")
            .toObject(ActionableRemediation.class);
        Assertions.assertEquals(ActionableRemediationState.ENABLED, model.state());
        Assertions.assertEquals("mjnnawtq", model.categoryConfigurations().get(0).minimumSeverityLevel());
        Assertions.assertEquals(RuleCategory.ARTIFACTS, model.categoryConfigurations().get(0).category());
        Assertions.assertEquals("gwflq", model.branchConfiguration().branchNames().get(0));
        Assertions.assertEquals(AnnotateDefaultBranchState.ENABLED,
            model.branchConfiguration().annotateDefaultBranch());
        Assertions.assertEquals(InheritFromParentState.ENABLED, model.inheritFromParentState());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ActionableRemediation model = new ActionableRemediation().withState(ActionableRemediationState.ENABLED)
            .withCategoryConfigurations(Arrays.asList(
                new CategoryConfiguration().withMinimumSeverityLevel("mjnnawtq").withCategory(RuleCategory.ARTIFACTS),
                new CategoryConfiguration().withMinimumSeverityLevel("uckpggqoweyir")
                    .withCategory(RuleCategory.CONTAINERS)))
            .withBranchConfiguration(
                new TargetBranchConfiguration().withBranchNames(Arrays.asList("gwflq", "mpizru", "n", "qxpxiwfcngjsaa"))
                    .withAnnotateDefaultBranch(AnnotateDefaultBranchState.ENABLED))
            .withInheritFromParentState(InheritFromParentState.ENABLED);
        model = BinaryData.fromObject(model).toObject(ActionableRemediation.class);
        Assertions.assertEquals(ActionableRemediationState.ENABLED, model.state());
        Assertions.assertEquals("mjnnawtq", model.categoryConfigurations().get(0).minimumSeverityLevel());
        Assertions.assertEquals(RuleCategory.ARTIFACTS, model.categoryConfigurations().get(0).category());
        Assertions.assertEquals("gwflq", model.branchConfiguration().branchNames().get(0));
        Assertions.assertEquals(AnnotateDefaultBranchState.ENABLED,
            model.branchConfiguration().annotateDefaultBranch());
        Assertions.assertEquals(InheritFromParentState.ENABLED, model.inheritFromParentState());
    }
}
