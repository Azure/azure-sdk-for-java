// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.models.BenchmarkReference;
import com.azure.resourcemanager.security.models.QueryCheck;
import com.azure.resourcemanager.security.models.RuleSeverity;
import com.azure.resourcemanager.security.models.RuleType;
import com.azure.resourcemanager.security.models.VaRule;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class VaRuleTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VaRule model = BinaryData.fromString(
            "{\"ruleId\":\"cpwpg\",\"severity\":\"Obsolete\",\"category\":\"ivtsoxfrkenxpm\",\"ruleType\":\"Binary\",\"title\":\"rpmpdnqqskaw\",\"description\":\"qvmmbn\",\"rationale\":\"fr\",\"queryCheck\":{\"query\":\"kzmegnitgvkxlz\",\"expectedResult\":[[\"fegcea\"]],\"columnNames\":[\"whcans\"]},\"benchmarkReferences\":[{\"benchmark\":\"qhlwigdivbkbxgo\",\"reference\":\"ajuwas\"},{\"benchmark\":\"daeyygux\",\"reference\":\"jsqzhzbezk\"}]}")
            .toObject(VaRule.class);
        Assertions.assertEquals("cpwpg", model.ruleId());
        Assertions.assertEquals(RuleSeverity.OBSOLETE, model.severity());
        Assertions.assertEquals("ivtsoxfrkenxpm", model.category());
        Assertions.assertEquals(RuleType.BINARY, model.ruleType());
        Assertions.assertEquals("rpmpdnqqskaw", model.title());
        Assertions.assertEquals("qvmmbn", model.description());
        Assertions.assertEquals("fr", model.rationale());
        Assertions.assertEquals("kzmegnitgvkxlz", model.queryCheck().query());
        Assertions.assertEquals("fegcea", model.queryCheck().expectedResult().get(0).get(0));
        Assertions.assertEquals("whcans", model.queryCheck().columnNames().get(0));
        Assertions.assertEquals("qhlwigdivbkbxgo", model.benchmarkReferences().get(0).benchmark());
        Assertions.assertEquals("ajuwas", model.benchmarkReferences().get(0).reference());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VaRule model = new VaRule().withRuleId("cpwpg").withSeverity(RuleSeverity.OBSOLETE)
            .withCategory("ivtsoxfrkenxpm").withRuleType(RuleType.BINARY).withTitle("rpmpdnqqskaw")
            .withDescription("qvmmbn").withRationale("fr")
            .withQueryCheck(new QueryCheck().withQuery("kzmegnitgvkxlz")
                .withExpectedResult(Arrays.asList(Arrays.asList("fegcea"))).withColumnNames(Arrays.asList("whcans")))
            .withBenchmarkReferences(
                Arrays.asList(new BenchmarkReference().withBenchmark("qhlwigdivbkbxgo").withReference("ajuwas"),
                    new BenchmarkReference().withBenchmark("daeyygux").withReference("jsqzhzbezk")));
        model = BinaryData.fromObject(model).toObject(VaRule.class);
        Assertions.assertEquals("cpwpg", model.ruleId());
        Assertions.assertEquals(RuleSeverity.OBSOLETE, model.severity());
        Assertions.assertEquals("ivtsoxfrkenxpm", model.category());
        Assertions.assertEquals(RuleType.BINARY, model.ruleType());
        Assertions.assertEquals("rpmpdnqqskaw", model.title());
        Assertions.assertEquals("qvmmbn", model.description());
        Assertions.assertEquals("fr", model.rationale());
        Assertions.assertEquals("kzmegnitgvkxlz", model.queryCheck().query());
        Assertions.assertEquals("fegcea", model.queryCheck().expectedResult().get(0).get(0));
        Assertions.assertEquals("whcans", model.queryCheck().columnNames().get(0));
        Assertions.assertEquals("qhlwigdivbkbxgo", model.benchmarkReferences().get(0).benchmark());
        Assertions.assertEquals("ajuwas", model.benchmarkReferences().get(0).reference());
    }
}
