// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.models.BlobsScanSummary;
import com.azure.resourcemanager.security.models.ScanSummary;
import org.junit.jupiter.api.Assertions;

public final class ScanSummaryTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ScanSummary model = BinaryData.fromString(
            "{\"blobs\":{\"totalBlobsScanned\":1315211378748066172,\"maliciousBlobsCount\":8390359388948965260,\"skippedBlobsCount\":7832172772591390775,\"scannedBlobsInGB\":97.70570168349758},\"estimatedScanCostUSD\":83.52595083428946}")
            .toObject(ScanSummary.class);
        Assertions.assertEquals(1315211378748066172L, model.blobs().totalBlobsScanned());
        Assertions.assertEquals(8390359388948965260L, model.blobs().maliciousBlobsCount());
        Assertions.assertEquals(7832172772591390775L, model.blobs().skippedBlobsCount());
        Assertions.assertEquals(97.70570168349758D, model.blobs().scannedBlobsInGB());
        Assertions.assertEquals(83.52595083428946D, model.estimatedScanCostUsd());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ScanSummary model
            = new ScanSummary().withBlobs(new BlobsScanSummary().withTotalBlobsScanned(1315211378748066172L)
                .withMaliciousBlobsCount(8390359388948965260L)
                .withSkippedBlobsCount(7832172772591390775L)
                .withScannedBlobsInGB(97.70570168349758D)).withEstimatedScanCostUsd(83.52595083428946D);
        model = BinaryData.fromObject(model).toObject(ScanSummary.class);
        Assertions.assertEquals(1315211378748066172L, model.blobs().totalBlobsScanned());
        Assertions.assertEquals(8390359388948965260L, model.blobs().maliciousBlobsCount());
        Assertions.assertEquals(7832172772591390775L, model.blobs().skippedBlobsCount());
        Assertions.assertEquals(97.70570168349758D, model.blobs().scannedBlobsInGB());
        Assertions.assertEquals(83.52595083428946D, model.estimatedScanCostUsd());
    }
}
