// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.models.DefenderCspmAwsOffering;
import com.azure.resourcemanager.security.models.DefenderCspmAwsOfferingVmScanners;
import com.azure.resourcemanager.security.models.DefenderCspmAwsOfferingVmScannersConfiguration;
import com.azure.resourcemanager.security.models.ScanningMode;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class DefenderCspmAwsOfferingTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DefenderCspmAwsOffering model =
            BinaryData
                .fromString(
                    "{\"offeringType\":\"DefenderCspmAws\",\"vmScanners\":{\"enabled\":true,\"configuration\":{\"cloudRoleArn\":\"sivmfogdrtbfcmk\",\"scanningMode\":\"Default\",\"exclusionTags\":{\"xkecifhocj\":\"cwjjxsgmbawvif\",\"txvcm\":\"wkloozr\",\"yeyng\":\"funlcpxxvi\",\"rquv\":\"g\"}}},\"description\":\"gglpmcrdcuelj\"}")
                .toObject(DefenderCspmAwsOffering.class);
        Assertions.assertEquals(true, model.vmScanners().enabled());
        Assertions.assertEquals("sivmfogdrtbfcmk", model.vmScanners().configuration().cloudRoleArn());
        Assertions.assertEquals(ScanningMode.DEFAULT, model.vmScanners().configuration().scanningMode());
        Assertions.assertEquals("cwjjxsgmbawvif", model.vmScanners().configuration().exclusionTags().get("xkecifhocj"));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DefenderCspmAwsOffering model =
            new DefenderCspmAwsOffering()
                .withVmScanners(
                    new DefenderCspmAwsOfferingVmScanners()
                        .withEnabled(true)
                        .withConfiguration(
                            new DefenderCspmAwsOfferingVmScannersConfiguration()
                                .withCloudRoleArn("sivmfogdrtbfcmk")
                                .withScanningMode(ScanningMode.DEFAULT)
                                .withExclusionTags(
                                    mapOf(
                                        "xkecifhocj",
                                        "cwjjxsgmbawvif",
                                        "txvcm",
                                        "wkloozr",
                                        "yeyng",
                                        "funlcpxxvi",
                                        "rquv",
                                        "g"))));
        model = BinaryData.fromObject(model).toObject(DefenderCspmAwsOffering.class);
        Assertions.assertEquals(true, model.vmScanners().enabled());
        Assertions.assertEquals("sivmfogdrtbfcmk", model.vmScanners().configuration().cloudRoleArn());
        Assertions.assertEquals(ScanningMode.DEFAULT, model.vmScanners().configuration().scanningMode());
        Assertions.assertEquals("cwjjxsgmbawvif", model.vmScanners().configuration().exclusionTags().get("xkecifhocj"));
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
