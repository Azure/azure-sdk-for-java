// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.JitNetworkAccessPolicyInner;
import com.azure.resourcemanager.security.fluent.models.JitNetworkAccessRequestInner;
import com.azure.resourcemanager.security.models.JitNetworkAccessPoliciesList;
import com.azure.resourcemanager.security.models.JitNetworkAccessPolicyVirtualMachine;
import com.azure.resourcemanager.security.models.JitNetworkAccessPortRule;
import com.azure.resourcemanager.security.models.JitNetworkAccessRequestVirtualMachine;
import com.azure.resourcemanager.security.models.Protocol;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class JitNetworkAccessPoliciesListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        JitNetworkAccessPoliciesList model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"virtualMachines\":[{\"id\":\"mjtgblioskkfmkm\",\"ports\":[{\"number\":1359982578,\"protocol\":\"*\",\"maxRequestAccessDuration\":\"yxgbkkqvjcteoedl\"},{\"number\":1465620035,\"protocol\":\"TCP\",\"maxRequestAccessDuration\":\"skkzpxvjnzdpvo\"},{\"number\":1196425288,\"protocol\":\"TCP\",\"maxRequestAccessDuration\":\"hpcnabxzfsn\"},{\"number\":983101769,\"protocol\":\"TCP\",\"maxRequestAccessDuration\":\"texvzilmhivzk\"}],\"publicIpAddress\":\"wncknr\"},{\"id\":\"dajlskzpt\",\"ports\":[{\"number\":297979523,\"protocol\":\"UDP\",\"maxRequestAccessDuration\":\"weucyrth\"},{\"number\":1176399507,\"protocol\":\"*\",\"maxRequestAccessDuration\":\"ehmcgcje\"},{\"number\":236134565,\"protocol\":\"TCP\",\"maxRequestAccessDuration\":\"ehokamvfej\"},{\"number\":1623155135,\"protocol\":\"TCP\",\"maxRequestAccessDuration\":\"ttmbqdabzfiv\"}],\"publicIpAddress\":\"kpysthhzagjf\"}],\"requests\":[{\"virtualMachines\":[{\"id\":\"lhgenuzejgvkv\",\"ports\":[]},{\"id\":\"baqszllrzlsmmd\",\"ports\":[]},{\"id\":\"gmihzpimcqr\",\"ports\":[]}],\"startTimeUtc\":\"2021-06-28T23:51:15Z\",\"requestor\":\"xtminklogxsvtzar\",\"justification\":\"vqnsqk\"}],\"provisioningState\":\"mbjwzzoslpkyb\"},\"kind\":\"lwkzpgajsqjcem\",\"location\":\"mfuvqarwzxuqr\",\"id\":\"bluimmbw\",\"name\":\"sfgtdmbvxekra\",\"type\":\"k\"}],\"nextLink\":\"budbt\"}")
            .toObject(JitNetworkAccessPoliciesList.class);
        Assertions.assertEquals("lwkzpgajsqjcem", model.value().get(0).kind());
        Assertions.assertEquals("mjtgblioskkfmkm", model.value().get(0).virtualMachines().get(0).id());
        Assertions.assertEquals(1359982578, model.value().get(0).virtualMachines().get(0).ports().get(0).number());
        Assertions.assertEquals(Protocol.ASTERISK,
            model.value().get(0).virtualMachines().get(0).ports().get(0).protocol());
        Assertions.assertEquals("yxgbkkqvjcteoedl",
            model.value().get(0).virtualMachines().get(0).ports().get(0).maxRequestAccessDuration());
        Assertions.assertEquals("wncknr", model.value().get(0).virtualMachines().get(0).publicIpAddress());
        Assertions.assertEquals("lhgenuzejgvkv", model.value().get(0).requests().get(0).virtualMachines().get(0).id());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-28T23:51:15Z"),
            model.value().get(0).requests().get(0).startTimeUtc());
        Assertions.assertEquals("xtminklogxsvtzar", model.value().get(0).requests().get(0).requestor());
        Assertions.assertEquals("vqnsqk", model.value().get(0).requests().get(0).justification());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        JitNetworkAccessPoliciesList model = new JitNetworkAccessPoliciesList()
            .withValue(Arrays.asList(new JitNetworkAccessPolicyInner().withKind("lwkzpgajsqjcem")
                .withVirtualMachines(Arrays.asList(
                    new JitNetworkAccessPolicyVirtualMachine().withId("mjtgblioskkfmkm")
                        .withPorts(Arrays.asList(
                            new JitNetworkAccessPortRule().withNumber(1359982578)
                                .withProtocol(Protocol.ASTERISK)
                                .withMaxRequestAccessDuration("yxgbkkqvjcteoedl"),
                            new JitNetworkAccessPortRule().withNumber(1465620035)
                                .withProtocol(Protocol.TCP)
                                .withMaxRequestAccessDuration("skkzpxvjnzdpvo"),
                            new JitNetworkAccessPortRule().withNumber(1196425288)
                                .withProtocol(Protocol.TCP)
                                .withMaxRequestAccessDuration("hpcnabxzfsn"),
                            new JitNetworkAccessPortRule().withNumber(983101769)
                                .withProtocol(Protocol.TCP)
                                .withMaxRequestAccessDuration("texvzilmhivzk")))
                        .withPublicIpAddress("wncknr"),
                    new JitNetworkAccessPolicyVirtualMachine().withId("dajlskzpt")
                        .withPorts(Arrays.asList(
                            new JitNetworkAccessPortRule().withNumber(297979523)
                                .withProtocol(Protocol.UDP)
                                .withMaxRequestAccessDuration("weucyrth"),
                            new JitNetworkAccessPortRule().withNumber(1176399507)
                                .withProtocol(Protocol.ASTERISK)
                                .withMaxRequestAccessDuration("ehmcgcje"),
                            new JitNetworkAccessPortRule().withNumber(236134565)
                                .withProtocol(Protocol.TCP)
                                .withMaxRequestAccessDuration("ehokamvfej"),
                            new JitNetworkAccessPortRule().withNumber(1623155135)
                                .withProtocol(Protocol.TCP)
                                .withMaxRequestAccessDuration("ttmbqdabzfiv")))
                        .withPublicIpAddress("kpysthhzagjf")))
                .withRequests(Arrays.asList(new JitNetworkAccessRequestInner()
                    .withVirtualMachines(Arrays.asList(
                        new JitNetworkAccessRequestVirtualMachine().withId("lhgenuzejgvkv").withPorts(Arrays.asList()),
                        new JitNetworkAccessRequestVirtualMachine().withId("baqszllrzlsmmd").withPorts(Arrays.asList()),
                        new JitNetworkAccessRequestVirtualMachine().withId("gmihzpimcqr").withPorts(Arrays.asList())))
                    .withStartTimeUtc(OffsetDateTime.parse("2021-06-28T23:51:15Z"))
                    .withRequestor("xtminklogxsvtzar")
                    .withJustification("vqnsqk")))));
        model = BinaryData.fromObject(model).toObject(JitNetworkAccessPoliciesList.class);
        Assertions.assertEquals("lwkzpgajsqjcem", model.value().get(0).kind());
        Assertions.assertEquals("mjtgblioskkfmkm", model.value().get(0).virtualMachines().get(0).id());
        Assertions.assertEquals(1359982578, model.value().get(0).virtualMachines().get(0).ports().get(0).number());
        Assertions.assertEquals(Protocol.ASTERISK,
            model.value().get(0).virtualMachines().get(0).ports().get(0).protocol());
        Assertions.assertEquals("yxgbkkqvjcteoedl",
            model.value().get(0).virtualMachines().get(0).ports().get(0).maxRequestAccessDuration());
        Assertions.assertEquals("wncknr", model.value().get(0).virtualMachines().get(0).publicIpAddress());
        Assertions.assertEquals("lhgenuzejgvkv", model.value().get(0).requests().get(0).virtualMachines().get(0).id());
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-28T23:51:15Z"),
            model.value().get(0).requests().get(0).startTimeUtc());
        Assertions.assertEquals("xtminklogxsvtzar", model.value().get(0).requests().get(0).requestor());
        Assertions.assertEquals("vqnsqk", model.value().get(0).requests().get(0).justification());
    }
}
