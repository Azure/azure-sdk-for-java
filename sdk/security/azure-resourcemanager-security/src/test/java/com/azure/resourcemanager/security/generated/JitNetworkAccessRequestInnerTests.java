// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.JitNetworkAccessRequestInner;
import com.azure.resourcemanager.security.models.JitNetworkAccessRequestPort;
import com.azure.resourcemanager.security.models.JitNetworkAccessRequestVirtualMachine;
import com.azure.resourcemanager.security.models.Status;
import com.azure.resourcemanager.security.models.StatusReason;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class JitNetworkAccessRequestInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        JitNetworkAccessRequestInner model = BinaryData.fromString(
            "{\"virtualMachines\":[{\"id\":\"kwseivmakxhyso\",\"ports\":[{\"number\":1528346714,\"allowedSourceAddressPrefix\":\"x\",\"allowedSourceAddressPrefixes\":[\"ect\",\"tfjmskdchmaiub\",\"vlzw\",\"vgmfalkzazmgok\"],\"endTimeUtc\":\"2021-09-06T15:08:44Z\",\"status\":\"Initiated\",\"statusReason\":\"UserRequested\",\"mappedPort\":1435238748},{\"number\":1899187524,\"allowedSourceAddressPrefix\":\"mk\",\"allowedSourceAddressPrefixes\":[\"zrthqet\"],\"endTimeUtc\":\"2021-05-02T21:02:12Z\",\"status\":\"Initiated\",\"statusReason\":\"NewerRequestInitiated\",\"mappedPort\":1255560215}]}],\"startTimeUtc\":\"2021-08-14T13:19:17Z\",\"requestor\":\"oznqnixiezea\",\"justification\":\"ceituuge\"}")
            .toObject(JitNetworkAccessRequestInner.class);
        Assertions.assertEquals("kwseivmakxhyso", model.virtualMachines().get(0).id());
        Assertions.assertEquals(1528346714, model.virtualMachines().get(0).ports().get(0).number());
        Assertions.assertEquals("x", model.virtualMachines().get(0).ports().get(0).allowedSourceAddressPrefix());
        Assertions.assertEquals("ect",
            model.virtualMachines().get(0).ports().get(0).allowedSourceAddressPrefixes().get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-06T15:08:44Z"),
            model.virtualMachines().get(0).ports().get(0).endTimeUtc());
        Assertions.assertEquals(Status.INITIATED, model.virtualMachines().get(0).ports().get(0).status());
        Assertions.assertEquals(StatusReason.USER_REQUESTED,
            model.virtualMachines().get(0).ports().get(0).statusReason());
        Assertions.assertEquals(1435238748, model.virtualMachines().get(0).ports().get(0).mappedPort());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-14T13:19:17Z"), model.startTimeUtc());
        Assertions.assertEquals("oznqnixiezea", model.requestor());
        Assertions.assertEquals("ceituuge", model.justification());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        JitNetworkAccessRequestInner model = new JitNetworkAccessRequestInner()
            .withVirtualMachines(Arrays.asList(new JitNetworkAccessRequestVirtualMachine().withId("kwseivmakxhyso")
                .withPorts(Arrays.asList(
                    new JitNetworkAccessRequestPort().withNumber(1528346714)
                        .withAllowedSourceAddressPrefix("x")
                        .withAllowedSourceAddressPrefixes(
                            Arrays.asList("ect", "tfjmskdchmaiub", "vlzw", "vgmfalkzazmgok"))
                        .withEndTimeUtc(OffsetDateTime.parse("2021-09-06T15:08:44Z"))
                        .withStatus(Status.INITIATED)
                        .withStatusReason(StatusReason.USER_REQUESTED)
                        .withMappedPort(1435238748),
                    new JitNetworkAccessRequestPort().withNumber(1899187524)
                        .withAllowedSourceAddressPrefix("mk")
                        .withAllowedSourceAddressPrefixes(Arrays.asList("zrthqet"))
                        .withEndTimeUtc(OffsetDateTime.parse("2021-05-02T21:02:12Z"))
                        .withStatus(Status.INITIATED)
                        .withStatusReason(StatusReason.NEWER_REQUEST_INITIATED)
                        .withMappedPort(1255560215)))))
            .withStartTimeUtc(OffsetDateTime.parse("2021-08-14T13:19:17Z"))
            .withRequestor("oznqnixiezea")
            .withJustification("ceituuge");
        model = BinaryData.fromObject(model).toObject(JitNetworkAccessRequestInner.class);
        Assertions.assertEquals("kwseivmakxhyso", model.virtualMachines().get(0).id());
        Assertions.assertEquals(1528346714, model.virtualMachines().get(0).ports().get(0).number());
        Assertions.assertEquals("x", model.virtualMachines().get(0).ports().get(0).allowedSourceAddressPrefix());
        Assertions.assertEquals("ect",
            model.virtualMachines().get(0).ports().get(0).allowedSourceAddressPrefixes().get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-06T15:08:44Z"),
            model.virtualMachines().get(0).ports().get(0).endTimeUtc());
        Assertions.assertEquals(Status.INITIATED, model.virtualMachines().get(0).ports().get(0).status());
        Assertions.assertEquals(StatusReason.USER_REQUESTED,
            model.virtualMachines().get(0).ports().get(0).statusReason());
        Assertions.assertEquals(1435238748, model.virtualMachines().get(0).ports().get(0).mappedPort());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-14T13:19:17Z"), model.startTimeUtc());
        Assertions.assertEquals("oznqnixiezea", model.requestor());
        Assertions.assertEquals("ceituuge", model.justification());
    }
}
