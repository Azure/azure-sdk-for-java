// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.GitLabProjectInner;
import com.azure.resourcemanager.security.models.DevOpsProvisioningState;
import com.azure.resourcemanager.security.models.GitLabProjectProperties;
import com.azure.resourcemanager.security.models.OnboardingState;
import org.junit.jupiter.api.Assertions;

public final class GitLabProjectInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GitLabProjectInner model = BinaryData.fromString(
            "{\"properties\":{\"provisioningStatusMessage\":\"kejcgwfsgqksty\",\"provisioningStatusUpdateTimeUtc\":\"2021-01-04T11:34Z\",\"provisioningState\":\"Failed\",\"fullyQualifiedName\":\"ijpardavsjcf\",\"fullyQualifiedFriendlyName\":\"zpzdqwuzvcmcokx\",\"fullyQualifiedParentGroupName\":\"ekuvfrjwuca\",\"url\":\"zvajbvbnkrdem\",\"onboardingState\":\"NotApplicable\"},\"id\":\"ackzidgzw\",\"name\":\"ydamisvpztdivykp\",\"type\":\"kqejtpjfojiunr\"}")
            .toObject(GitLabProjectInner.class);
        Assertions.assertEquals(DevOpsProvisioningState.FAILED, model.properties().provisioningState());
        Assertions.assertEquals(OnboardingState.NOT_APPLICABLE, model.properties().onboardingState());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GitLabProjectInner model = new GitLabProjectInner()
            .withProperties(new GitLabProjectProperties().withProvisioningState(DevOpsProvisioningState.FAILED)
                .withOnboardingState(OnboardingState.NOT_APPLICABLE));
        model = BinaryData.fromObject(model).toObject(GitLabProjectInner.class);
        Assertions.assertEquals(DevOpsProvisioningState.FAILED, model.properties().provisioningState());
        Assertions.assertEquals(OnboardingState.NOT_APPLICABLE, model.properties().onboardingState());
    }
}
