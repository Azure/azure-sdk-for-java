// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.GitLabProjectInner;
import com.azure.resourcemanager.security.models.DevOpsProvisioningState;
import com.azure.resourcemanager.security.models.GitLabProjectProperties;
import com.azure.resourcemanager.security.models.OnboardingState;
import org.junit.jupiter.api.Assertions;

public final class GitLabProjectInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GitLabProjectInner model = BinaryData.fromString(
            "{\"properties\":{\"provisioningStatusMessage\":\"w\",\"provisioningStatusUpdateTimeUtc\":\"2021-07-24T11:19:34Z\",\"provisioningState\":\"PendingDeletion\",\"fullyQualifiedName\":\"ypivlsbb\",\"fullyQualifiedFriendlyName\":\"mcub\",\"fullyQualifiedParentGroupName\":\"ifoxxkubvphav\",\"url\":\"h\",\"onboardingState\":\"NotOnboarded\"},\"id\":\"qgvgovpbbtt\",\"name\":\"fjoknss\",\"type\":\"yzqedikdfrd\"}")
            .toObject(GitLabProjectInner.class);
        Assertions.assertEquals(DevOpsProvisioningState.PENDING_DELETION, model.properties().provisioningState());
        Assertions.assertEquals(OnboardingState.NOT_ONBOARDED, model.properties().onboardingState());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GitLabProjectInner model = new GitLabProjectInner().withProperties(
            new GitLabProjectProperties().withProvisioningState(DevOpsProvisioningState.PENDING_DELETION)
                .withOnboardingState(OnboardingState.NOT_ONBOARDED));
        model = BinaryData.fromObject(model).toObject(GitLabProjectInner.class);
        Assertions.assertEquals(DevOpsProvisioningState.PENDING_DELETION, model.properties().provisioningState());
        Assertions.assertEquals(OnboardingState.NOT_ONBOARDED, model.properties().onboardingState());
    }
}
