// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.models.UnauthorizedOperationsNotInAllowedRange;
import java.time.Duration;
import org.junit.jupiter.api.Assertions;

public final class UnauthorizedOperationsNotInAllowedRangeTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UnauthorizedOperationsNotInAllowedRange model =
            BinaryData
                .fromString(
                    "{\"ruleType\":\"UnauthorizedOperationsNotInAllowedRange\",\"timeWindowSize\":\"PT32H9M39S\",\"minThreshold\":493367816,\"maxThreshold\":1060575254,\"displayName\":\"fnjyix\",\"description\":\"fratqxmbjroumzz\",\"isEnabled\":true}")
                .toObject(UnauthorizedOperationsNotInAllowedRange.class);
        Assertions.assertEquals(true, model.isEnabled());
        Assertions.assertEquals(493367816, model.minThreshold());
        Assertions.assertEquals(1060575254, model.maxThreshold());
        Assertions.assertEquals(Duration.parse("PT32H9M39S"), model.timeWindowSize());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UnauthorizedOperationsNotInAllowedRange model =
            new UnauthorizedOperationsNotInAllowedRange()
                .withIsEnabled(true)
                .withMinThreshold(493367816)
                .withMaxThreshold(1060575254)
                .withTimeWindowSize(Duration.parse("PT32H9M39S"));
        model = BinaryData.fromObject(model).toObject(UnauthorizedOperationsNotInAllowedRange.class);
        Assertions.assertEquals(true, model.isEnabled());
        Assertions.assertEquals(493367816, model.minThreshold());
        Assertions.assertEquals(1060575254, model.maxThreshold());
        Assertions.assertEquals(Duration.parse("PT32H9M39S"), model.timeWindowSize());
    }
}
