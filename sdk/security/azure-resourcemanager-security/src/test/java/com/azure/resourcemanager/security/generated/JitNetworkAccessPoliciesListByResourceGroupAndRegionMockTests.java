// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.JitNetworkAccessPolicy;
import com.azure.resourcemanager.security.models.Protocol;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class JitNetworkAccessPoliciesListByResourceGroupAndRegionMockTests {
    @Test
    public void testListByResourceGroupAndRegion() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"virtualMachines\":[{\"id\":\"akckywym\",\"ports\":[{\"number\":1308483372,\"protocol\":\"UDP\",\"maxRequestAccessDuration\":\"bjkdtfohf\"},{\"number\":1240250337,\"protocol\":\"TCP\",\"maxRequestAccessDuration\":\"zvkiwrsiwdy\"},{\"number\":1132634691,\"protocol\":\"TCP\",\"maxRequestAccessDuration\":\"rykcrraueekcsue\"}],\"publicIpAddress\":\"gdda\"}],\"requests\":[{\"virtualMachines\":[{\"id\":\"gydlqidywm\",\"ports\":[]},{\"id\":\"mptyrilkfbnrqqxv\",\"ports\":[]},{\"id\":\"tpbnfnqtxjtoma\",\"ports\":[]}],\"startTimeUtc\":\"2021-11-19T14:40:41Z\",\"requestor\":\"wbnfddepl\",\"justification\":\"qjn\"},{\"virtualMachines\":[{\"id\":\"zygleexahvm\",\"ports\":[]}],\"startTimeUtc\":\"2021-09-17T20:33:22Z\",\"requestor\":\"hsbrcary\",\"justification\":\"jjzyvoaqajuve\"}],\"provisioningState\":\"ptdmkrrbhmpful\"},\"kind\":\"efgybpmfbfununmp\",\"location\":\"rvfyifkdsch\",\"id\":\"zvfictnk\",\"name\":\"jwg\",\"type\":\"wnphbkgfyrto\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<JitNetworkAccessPolicy> response = manager.jitNetworkAccessPolicies()
            .listByResourceGroupAndRegion("dyz", "yckzex", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("efgybpmfbfununmp", response.iterator().next().kind());
        Assertions.assertEquals("akckywym", response.iterator().next().virtualMachines().get(0).id());
        Assertions.assertEquals(1308483372,
            response.iterator().next().virtualMachines().get(0).ports().get(0).number());
        Assertions.assertEquals(Protocol.UDP,
            response.iterator().next().virtualMachines().get(0).ports().get(0).protocol());
        Assertions.assertEquals("bjkdtfohf",
            response.iterator().next().virtualMachines().get(0).ports().get(0).maxRequestAccessDuration());
        Assertions.assertEquals("gdda", response.iterator().next().virtualMachines().get(0).publicIpAddress());
        Assertions.assertEquals("gydlqidywm",
            response.iterator().next().requests().get(0).virtualMachines().get(0).id());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-19T14:40:41Z"),
            response.iterator().next().requests().get(0).startTimeUtc());
        Assertions.assertEquals("wbnfddepl", response.iterator().next().requests().get(0).requestor());
        Assertions.assertEquals("qjn", response.iterator().next().requests().get(0).justification());
    }
}
