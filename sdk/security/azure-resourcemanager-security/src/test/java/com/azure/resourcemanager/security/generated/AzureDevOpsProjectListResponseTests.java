// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.AzureDevOpsProjectInner;
import com.azure.resourcemanager.security.models.ActionableRemediation;
import com.azure.resourcemanager.security.models.ActionableRemediationState;
import com.azure.resourcemanager.security.models.AnnotateDefaultBranchState;
import com.azure.resourcemanager.security.models.AzureDevOpsProjectListResponse;
import com.azure.resourcemanager.security.models.AzureDevOpsProjectProperties;
import com.azure.resourcemanager.security.models.CategoryConfiguration;
import com.azure.resourcemanager.security.models.DevOpsProvisioningState;
import com.azure.resourcemanager.security.models.InheritFromParentState;
import com.azure.resourcemanager.security.models.OnboardingState;
import com.azure.resourcemanager.security.models.TargetBranchConfiguration;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AzureDevOpsProjectListResponseTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureDevOpsProjectListResponse model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"provisioningStatusMessage\":\"spshckfkyjp\",\"provisioningStatusUpdateTimeUtc\":\"2021-03-24T00:52:58Z\",\"provisioningState\":\"Succeeded\",\"parentOrgName\":\"sdfppyogtie\",\"projectId\":\"jtvczkcnyxrxmun\",\"onboardingState\":\"Onboarded\",\"actionableRemediation\":{\"state\":\"Enabled\",\"categoryConfigurations\":[{},{}],\"branchConfiguration\":{\"branchNames\":[\"xpaglqivbgkc\",\"khpzvuqdflv\",\"niypfpubcpzg\",\"xtiv\"],\"annotateDefaultBranch\":\"Disabled\"},\"inheritFromParentState\":\"Enabled\"}},\"id\":\"dibgqjxgpnrhgov\",\"name\":\"gpikqmh\",\"type\":\"ao\"},{\"properties\":{\"provisioningStatusMessage\":\"zvuporqzdfuydz\",\"provisioningStatusUpdateTimeUtc\":\"2021-03-31T13:08:16Z\",\"provisioningState\":\"Canceled\",\"parentOrgName\":\"nq\",\"projectId\":\"qpswokmvkhlggdhb\",\"onboardingState\":\"Onboarded\",\"actionableRemediation\":{\"state\":\"None\",\"categoryConfigurations\":[{}],\"branchConfiguration\":{\"branchNames\":[\"wtglxx\",\"ljfp\",\"picrmnzhrgmqgjsx\",\"pqcbfrmbodthsq\"],\"annotateDefaultBranch\":\"Enabled\"},\"inheritFromParentState\":\"Disabled\"}},\"id\":\"i\",\"name\":\"a\",\"type\":\"c\"},{\"properties\":{\"provisioningStatusMessage\":\"fr\",\"provisioningStatusUpdateTimeUtc\":\"2021-12-02T11:03:59Z\",\"provisioningState\":\"Succeeded\",\"parentOrgName\":\"au\",\"projectId\":\"wvsgmwohqfzizvu\",\"onboardingState\":\"NotApplicable\",\"actionableRemediation\":{\"state\":\"Enabled\",\"categoryConfigurations\":[{},{}],\"branchConfiguration\":{\"branchNames\":[\"pz\",\"ekov\",\"ribi\",\"ttgplucfotangcf\"],\"annotateDefaultBranch\":\"Enabled\"},\"inheritFromParentState\":\"Enabled\"}},\"id\":\"cugswvxwlmzqw\",\"name\":\"vtxnjmxmcuqud\",\"type\":\"cvclxynpdk\"}],\"nextLink\":\"fabuiyjibu\"}")
            .toObject(AzureDevOpsProjectListResponse.class);
        Assertions.assertEquals(DevOpsProvisioningState.SUCCEEDED,
            model.value().get(0).properties().provisioningState());
        Assertions.assertEquals("sdfppyogtie", model.value().get(0).properties().parentOrgName());
        Assertions.assertEquals(OnboardingState.ONBOARDED, model.value().get(0).properties().onboardingState());
        Assertions.assertEquals(ActionableRemediationState.ENABLED,
            model.value().get(0).properties().actionableRemediation().state());
        Assertions.assertEquals("xpaglqivbgkc",
            model.value().get(0).properties().actionableRemediation().branchConfiguration().branchNames().get(0));
        Assertions.assertEquals(AnnotateDefaultBranchState.DISABLED,
            model.value().get(0).properties().actionableRemediation().branchConfiguration().annotateDefaultBranch());
        Assertions.assertEquals(InheritFromParentState.ENABLED,
            model.value().get(0).properties().actionableRemediation().inheritFromParentState());
        Assertions.assertEquals("fabuiyjibu", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureDevOpsProjectListResponse model
            = new AzureDevOpsProjectListResponse()
                .withValue(
                    Arrays.asList(
                        new AzureDevOpsProjectInner().withProperties(
                            new AzureDevOpsProjectProperties().withProvisioningState(DevOpsProvisioningState.SUCCEEDED)
                                .withParentOrgName("sdfppyogtie").withOnboardingState(OnboardingState.ONBOARDED)
                                .withActionableRemediation(
                                    new ActionableRemediation()
                                        .withState(ActionableRemediationState.ENABLED)
                                        .withCategoryConfigurations(
                                            Arrays.asList(new CategoryConfiguration(), new CategoryConfiguration()))
                                        .withBranchConfiguration(new TargetBranchConfiguration()
                                            .withBranchNames(
                                                Arrays.asList("xpaglqivbgkc", "khpzvuqdflv", "niypfpubcpzg", "xtiv"))
                                            .withAnnotateDefaultBranch(AnnotateDefaultBranchState.DISABLED))
                                        .withInheritFromParentState(InheritFromParentState.ENABLED))),
                        new AzureDevOpsProjectInner().withProperties(
                            new AzureDevOpsProjectProperties().withProvisioningState(DevOpsProvisioningState.CANCELED)
                                .withParentOrgName("nq").withOnboardingState(OnboardingState.ONBOARDED)
                                .withActionableRemediation(new ActionableRemediation()
                                    .withState(ActionableRemediationState.NONE)
                                    .withCategoryConfigurations(Arrays.asList(new CategoryConfiguration()))
                                    .withBranchConfiguration(new TargetBranchConfiguration()
                                        .withBranchNames(
                                            Arrays.asList("wtglxx", "ljfp", "picrmnzhrgmqgjsx", "pqcbfrmbodthsq"))
                                        .withAnnotateDefaultBranch(AnnotateDefaultBranchState.ENABLED))
                                    .withInheritFromParentState(InheritFromParentState.DISABLED))),
                        new AzureDevOpsProjectInner().withProperties(new AzureDevOpsProjectProperties()
                            .withProvisioningState(DevOpsProvisioningState.SUCCEEDED).withParentOrgName("au")
                            .withOnboardingState(OnboardingState.NOT_APPLICABLE).withActionableRemediation(
                                new ActionableRemediation().withState(ActionableRemediationState.ENABLED)
                                    .withCategoryConfigurations(
                                        Arrays.asList(new CategoryConfiguration(), new CategoryConfiguration()))
                                    .withBranchConfiguration(new TargetBranchConfiguration()
                                        .withBranchNames(Arrays.asList("pz", "ekov", "ribi", "ttgplucfotangcf"))
                                        .withAnnotateDefaultBranch(AnnotateDefaultBranchState.ENABLED))
                                    .withInheritFromParentState(InheritFromParentState.ENABLED)))))
                .withNextLink("fabuiyjibu");
        model = BinaryData.fromObject(model).toObject(AzureDevOpsProjectListResponse.class);
        Assertions.assertEquals(DevOpsProvisioningState.SUCCEEDED,
            model.value().get(0).properties().provisioningState());
        Assertions.assertEquals("sdfppyogtie", model.value().get(0).properties().parentOrgName());
        Assertions.assertEquals(OnboardingState.ONBOARDED, model.value().get(0).properties().onboardingState());
        Assertions.assertEquals(ActionableRemediationState.ENABLED,
            model.value().get(0).properties().actionableRemediation().state());
        Assertions.assertEquals("xpaglqivbgkc",
            model.value().get(0).properties().actionableRemediation().branchConfiguration().branchNames().get(0));
        Assertions.assertEquals(AnnotateDefaultBranchState.DISABLED,
            model.value().get(0).properties().actionableRemediation().branchConfiguration().annotateDefaultBranch());
        Assertions.assertEquals(InheritFromParentState.ENABLED,
            model.value().get(0).properties().actionableRemediation().inheritFromParentState());
        Assertions.assertEquals("fabuiyjibu", model.nextLink());
    }
}
