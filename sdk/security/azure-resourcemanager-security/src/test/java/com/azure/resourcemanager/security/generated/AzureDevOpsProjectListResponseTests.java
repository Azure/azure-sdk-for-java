// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.AzureDevOpsProjectInner;
import com.azure.resourcemanager.security.models.ActionableRemediation;
import com.azure.resourcemanager.security.models.ActionableRemediationState;
import com.azure.resourcemanager.security.models.AnnotateDefaultBranchState;
import com.azure.resourcemanager.security.models.AzureDevOpsProjectListResponse;
import com.azure.resourcemanager.security.models.AzureDevOpsProjectProperties;
import com.azure.resourcemanager.security.models.CategoryConfiguration;
import com.azure.resourcemanager.security.models.DevOpsProvisioningState;
import com.azure.resourcemanager.security.models.InheritFromParentState;
import com.azure.resourcemanager.security.models.OnboardingState;
import com.azure.resourcemanager.security.models.TargetBranchConfiguration;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AzureDevOpsProjectListResponseTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureDevOpsProjectListResponse model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"provisioningStatusMessage\":\"u\",\"provisioningStatusUpdateTimeUtc\":\"2021-05-08T13:08:25Z\",\"provisioningState\":\"Succeeded\",\"parentOrgName\":\"oilunwemhdee\",\"projectId\":\"slkyozd\",\"onboardingState\":\"OnboardedByOtherConnector\",\"actionableRemediation\":{\"state\":\"None\",\"categoryConfigurations\":[{},{}],\"branchConfiguration\":{\"branchNames\":[\"tsl\",\"jtv\",\"j\"],\"annotateDefaultBranch\":\"Disabled\"},\"inheritFromParentState\":\"Enabled\"}},\"id\":\"bfiobpnjodfc\",\"name\":\"jqqwmtqsmoxsazu\",\"type\":\"ejgwe\"},{\"properties\":{\"provisioningStatusMessage\":\"fyszzaczsinqbdnd\",\"provisioningStatusUpdateTimeUtc\":\"2020-12-29T23:30:03Z\",\"provisioningState\":\"Failed\",\"parentOrgName\":\"yvrmkjm\",\"projectId\":\"trchwudlxe\",\"onboardingState\":\"Onboarded\",\"actionableRemediation\":{\"state\":\"None\",\"categoryConfigurations\":[{}],\"branchConfiguration\":{\"branchNames\":[\"qlfm\",\"ibzoyrfgxky\"],\"annotateDefaultBranch\":\"Enabled\"},\"inheritFromParentState\":\"Enabled\"}},\"id\":\"gfqvmtywhlakx\",\"name\":\"ejpewpyjlfxampqc\",\"type\":\"zgeuqxbpiat\"},{\"properties\":{\"provisioningStatusMessage\":\"je\",\"provisioningStatusUpdateTimeUtc\":\"2021-09-08T00:28:38Z\",\"provisioningState\":\"Failed\",\"parentOrgName\":\"r\",\"projectId\":\"gddhjkrukizyhgs\",\"onboardingState\":\"OnboardedByOtherConnector\",\"actionableRemediation\":{\"state\":\"Disabled\",\"categoryConfigurations\":[{},{}],\"branchConfiguration\":{\"branchNames\":[\"jbqggweeiwdhdm\"],\"annotateDefaultBranch\":\"Disabled\"},\"inheritFromParentState\":\"Enabled\"}},\"id\":\"zuscstunmlh\",\"name\":\"dfb\",\"type\":\"lciichgjs\"},{\"properties\":{\"provisioningStatusMessage\":\"xodgw\",\"provisioningStatusUpdateTimeUtc\":\"2021-05-12T18:30:37Z\",\"provisioningState\":\"DeletionSuccess\",\"parentOrgName\":\"fcuvbdujgcwx\",\"projectId\":\"cbbwjtrdxriz\",\"onboardingState\":\"NotOnboarded\",\"actionableRemediation\":{\"state\":\"Enabled\",\"categoryConfigurations\":[{},{}],\"branchConfiguration\":{\"branchNames\":[\"kpgdqxwabzrwiq\",\"xhaclcdosqkptjq\"],\"annotateDefaultBranch\":\"Enabled\"},\"inheritFromParentState\":\"Disabled\"}},\"id\":\"mainwhed\",\"name\":\"kp\",\"type\":\"qwuntob\"}],\"nextLink\":\"z\"}")
            .toObject(AzureDevOpsProjectListResponse.class);
        Assertions.assertEquals(DevOpsProvisioningState.SUCCEEDED,
            model.value().get(0).properties().provisioningState());
        Assertions.assertEquals("oilunwemhdee", model.value().get(0).properties().parentOrgName());
        Assertions.assertEquals(OnboardingState.ONBOARDED_BY_OTHER_CONNECTOR,
            model.value().get(0).properties().onboardingState());
        Assertions.assertEquals(ActionableRemediationState.NONE,
            model.value().get(0).properties().actionableRemediation().state());
        Assertions.assertEquals("tsl",
            model.value().get(0).properties().actionableRemediation().branchConfiguration().branchNames().get(0));
        Assertions.assertEquals(AnnotateDefaultBranchState.DISABLED,
            model.value().get(0).properties().actionableRemediation().branchConfiguration().annotateDefaultBranch());
        Assertions.assertEquals(InheritFromParentState.ENABLED,
            model.value().get(0).properties().actionableRemediation().inheritFromParentState());
        Assertions.assertEquals("z", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureDevOpsProjectListResponse model = new AzureDevOpsProjectListResponse().withValue(Arrays.asList(
            new AzureDevOpsProjectInner().withProperties(new AzureDevOpsProjectProperties()
                .withProvisioningState(DevOpsProvisioningState.SUCCEEDED)
                .withParentOrgName("oilunwemhdee")
                .withOnboardingState(OnboardingState.ONBOARDED_BY_OTHER_CONNECTOR)
                .withActionableRemediation(new ActionableRemediation().withState(ActionableRemediationState.NONE)
                    .withCategoryConfigurations(Arrays.asList(new CategoryConfiguration(), new CategoryConfiguration()))
                    .withBranchConfiguration(
                        new TargetBranchConfiguration().withBranchNames(Arrays.asList("tsl", "jtv", "j"))
                            .withAnnotateDefaultBranch(AnnotateDefaultBranchState.DISABLED))
                    .withInheritFromParentState(InheritFromParentState.ENABLED))),
            new AzureDevOpsProjectInner()
                .withProperties(new AzureDevOpsProjectProperties().withProvisioningState(DevOpsProvisioningState.FAILED)
                    .withParentOrgName("yvrmkjm")
                    .withOnboardingState(OnboardingState.ONBOARDED)
                    .withActionableRemediation(new ActionableRemediation().withState(ActionableRemediationState.NONE)
                        .withCategoryConfigurations(Arrays.asList(new CategoryConfiguration()))
                        .withBranchConfiguration(
                            new TargetBranchConfiguration().withBranchNames(Arrays.asList("qlfm", "ibzoyrfgxky"))
                                .withAnnotateDefaultBranch(AnnotateDefaultBranchState.ENABLED))
                        .withInheritFromParentState(InheritFromParentState.ENABLED))),
            new AzureDevOpsProjectInner().withProperties(new AzureDevOpsProjectProperties()
                .withProvisioningState(DevOpsProvisioningState.FAILED)
                .withParentOrgName("r")
                .withOnboardingState(OnboardingState.ONBOARDED_BY_OTHER_CONNECTOR)
                .withActionableRemediation(new ActionableRemediation().withState(ActionableRemediationState.DISABLED)
                    .withCategoryConfigurations(Arrays.asList(new CategoryConfiguration(), new CategoryConfiguration()))
                    .withBranchConfiguration(
                        new TargetBranchConfiguration().withBranchNames(Arrays.asList("jbqggweeiwdhdm"))
                            .withAnnotateDefaultBranch(AnnotateDefaultBranchState.DISABLED))
                    .withInheritFromParentState(InheritFromParentState.ENABLED))),
            new AzureDevOpsProjectInner().withProperties(new AzureDevOpsProjectProperties()
                .withProvisioningState(DevOpsProvisioningState.DELETION_SUCCESS)
                .withParentOrgName("fcuvbdujgcwx")
                .withOnboardingState(OnboardingState.NOT_ONBOARDED)
                .withActionableRemediation(new ActionableRemediation().withState(ActionableRemediationState.ENABLED)
                    .withCategoryConfigurations(Arrays.asList(new CategoryConfiguration(), new CategoryConfiguration()))
                    .withBranchConfiguration(new TargetBranchConfiguration()
                        .withBranchNames(Arrays.asList("kpgdqxwabzrwiq", "xhaclcdosqkptjq"))
                        .withAnnotateDefaultBranch(AnnotateDefaultBranchState.ENABLED))
                    .withInheritFromParentState(InheritFromParentState.DISABLED)))))
            .withNextLink("z");
        model = BinaryData.fromObject(model).toObject(AzureDevOpsProjectListResponse.class);
        Assertions.assertEquals(DevOpsProvisioningState.SUCCEEDED,
            model.value().get(0).properties().provisioningState());
        Assertions.assertEquals("oilunwemhdee", model.value().get(0).properties().parentOrgName());
        Assertions.assertEquals(OnboardingState.ONBOARDED_BY_OTHER_CONNECTOR,
            model.value().get(0).properties().onboardingState());
        Assertions.assertEquals(ActionableRemediationState.NONE,
            model.value().get(0).properties().actionableRemediation().state());
        Assertions.assertEquals("tsl",
            model.value().get(0).properties().actionableRemediation().branchConfiguration().branchNames().get(0));
        Assertions.assertEquals(AnnotateDefaultBranchState.DISABLED,
            model.value().get(0).properties().actionableRemediation().branchConfiguration().annotateDefaultBranch());
        Assertions.assertEquals(InheritFromParentState.ENABLED,
            model.value().get(0).properties().actionableRemediation().inheritFromParentState());
        Assertions.assertEquals("z", model.nextLink());
    }
}
