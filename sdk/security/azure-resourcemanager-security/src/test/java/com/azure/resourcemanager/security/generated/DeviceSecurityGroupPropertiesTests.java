// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.DeviceSecurityGroupProperties;
import com.azure.resourcemanager.security.models.AllowlistCustomAlertRule;
import com.azure.resourcemanager.security.models.DenylistCustomAlertRule;
import com.azure.resourcemanager.security.models.ThresholdCustomAlertRule;
import com.azure.resourcemanager.security.models.TimeWindowCustomAlertRule;
import java.time.Duration;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DeviceSecurityGroupPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DeviceSecurityGroupProperties model = BinaryData.fromString(
            "{\"thresholdRules\":[{\"ruleType\":\"ThresholdCustomAlertRule\",\"minThreshold\":1849890944,\"maxThreshold\":1584832044,\"displayName\":\"skukjtasbv\",\"description\":\"spkxkdt\",\"isEnabled\":false},{\"ruleType\":\"ThresholdCustomAlertRule\",\"minThreshold\":908846418,\"maxThreshold\":1626711785,\"displayName\":\"lq\",\"description\":\"w\",\"isEnabled\":true},{\"ruleType\":\"ThresholdCustomAlertRule\",\"minThreshold\":288893491,\"maxThreshold\":1151337399,\"displayName\":\"mb\",\"description\":\"tywatmqaq\",\"isEnabled\":false},{\"ruleType\":\"ThresholdCustomAlertRule\",\"minThreshold\":783807092,\"maxThreshold\":1015275933,\"displayName\":\"groeshoyg\",\"description\":\"byfqxkfaoy\",\"isEnabled\":true}],\"timeWindowRules\":[{\"ruleType\":\"TimeWindowCustomAlertRule\",\"timeWindowSize\":\"PT139H38M16S\",\"minThreshold\":1142162195,\"maxThreshold\":1536135813,\"displayName\":\"mvqmtdwckygroej\",\"description\":\"dljdjuskb\",\"isEnabled\":false},{\"ruleType\":\"TimeWindowCustomAlertRule\",\"timeWindowSize\":\"PT86H10M55S\",\"minThreshold\":636387917,\"maxThreshold\":1365280393,\"displayName\":\"kceysfaqegplw\",\"description\":\"shwddkvbxgk\",\"isEnabled\":true}],\"allowlistRules\":[{\"ruleType\":\"AllowlistCustomAlertRule\",\"allowlistValues\":[\"w\",\"tdacarvvlfn\",\"ymtpo\",\"wenaz\"],\"valueType\":\"String\",\"displayName\":\"zrsq\",\"description\":\"sxkdnwqapfgsdpc\",\"isEnabled\":true},{\"ruleType\":\"AllowlistCustomAlertRule\",\"allowlistValues\":[\"smzhhkuuipldqqct\",\"kva\",\"blhtjq\"],\"valueType\":\"String\",\"displayName\":\"wehtaemxh\",\"description\":\"ysev\",\"isEnabled\":true}],\"denylistRules\":[{\"ruleType\":\"DenylistCustomAlertRule\",\"denylistValues\":[\"zrrryv\",\"imipskdyzatvfuz\",\"aftjvvruxwigsy\"],\"valueType\":\"IpCidr\",\"displayName\":\"dsmjtgr\",\"description\":\"dgkkile\",\"isEnabled\":true},{\"ruleType\":\"DenylistCustomAlertRule\",\"denylistValues\":[\"csmknhwt\",\"baedorvvmqfl\"],\"valueType\":\"IpCidr\",\"displayName\":\"dgwumgxdgdhp\",\"description\":\"gdexjd\",\"isEnabled\":true},{\"ruleType\":\"DenylistCustomAlertRule\",\"denylistValues\":[\"saq\",\"otmmw\",\"lcol\",\"rsxaptefh\"],\"valueType\":\"String\",\"displayName\":\"jokjl\",\"description\":\"hv\",\"isEnabled\":false},{\"ruleType\":\"DenylistCustomAlertRule\",\"denylistValues\":[\"bekpeeksnbksdqhj\",\"yklxe\",\"lkhhu\",\"tcpoqma\"],\"valueType\":\"IpCidr\",\"displayName\":\"jwgo\",\"description\":\"lejjjkxy\",\"isEnabled\":false}]}")
            .toObject(DeviceSecurityGroupProperties.class);
        Assertions.assertEquals(false, model.thresholdRules().get(0).isEnabled());
        Assertions.assertEquals(1849890944, model.thresholdRules().get(0).minThreshold());
        Assertions.assertEquals(1584832044, model.thresholdRules().get(0).maxThreshold());
        Assertions.assertEquals(false, model.timeWindowRules().get(0).isEnabled());
        Assertions.assertEquals(1142162195, model.timeWindowRules().get(0).minThreshold());
        Assertions.assertEquals(1536135813, model.timeWindowRules().get(0).maxThreshold());
        Assertions.assertEquals(Duration.parse("PT139H38M16S"), model.timeWindowRules().get(0).timeWindowSize());
        Assertions.assertEquals(true, model.allowlistRules().get(0).isEnabled());
        Assertions.assertEquals("w", model.allowlistRules().get(0).allowlistValues().get(0));
        Assertions.assertEquals(true, model.denylistRules().get(0).isEnabled());
        Assertions.assertEquals("zrrryv", model.denylistRules().get(0).denylistValues().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DeviceSecurityGroupProperties model = new DeviceSecurityGroupProperties().withThresholdRules(Arrays.asList(
            new ThresholdCustomAlertRule().withIsEnabled(false)
                .withMinThreshold(1849890944)
                .withMaxThreshold(1584832044),
            new ThresholdCustomAlertRule().withIsEnabled(true).withMinThreshold(908846418).withMaxThreshold(1626711785),
            new ThresholdCustomAlertRule().withIsEnabled(false)
                .withMinThreshold(288893491)
                .withMaxThreshold(1151337399),
            new ThresholdCustomAlertRule().withIsEnabled(true)
                .withMinThreshold(783807092)
                .withMaxThreshold(1015275933)))
            .withTimeWindowRules(Arrays.asList(
                new TimeWindowCustomAlertRule().withIsEnabled(false)
                    .withMinThreshold(1142162195)
                    .withMaxThreshold(1536135813)
                    .withTimeWindowSize(Duration.parse("PT139H38M16S")),
                new TimeWindowCustomAlertRule().withIsEnabled(true)
                    .withMinThreshold(636387917)
                    .withMaxThreshold(1365280393)
                    .withTimeWindowSize(Duration.parse("PT86H10M55S"))))
            .withAllowlistRules(Arrays.asList(
                new AllowlistCustomAlertRule().withIsEnabled(true)
                    .withAllowlistValues(Arrays.asList("w", "tdacarvvlfn", "ymtpo", "wenaz")),
                new AllowlistCustomAlertRule().withIsEnabled(true)
                    .withAllowlistValues(Arrays.asList("smzhhkuuipldqqct", "kva", "blhtjq"))))
            .withDenylistRules(Arrays.asList(
                new DenylistCustomAlertRule().withIsEnabled(true)
                    .withDenylistValues(Arrays.asList("zrrryv", "imipskdyzatvfuz", "aftjvvruxwigsy")),
                new DenylistCustomAlertRule().withIsEnabled(true)
                    .withDenylistValues(Arrays.asList("csmknhwt", "baedorvvmqfl")),
                new DenylistCustomAlertRule().withIsEnabled(false)
                    .withDenylistValues(Arrays.asList("saq", "otmmw", "lcol", "rsxaptefh")),
                new DenylistCustomAlertRule().withIsEnabled(false)
                    .withDenylistValues(Arrays.asList("bekpeeksnbksdqhj", "yklxe", "lkhhu", "tcpoqma"))));
        model = BinaryData.fromObject(model).toObject(DeviceSecurityGroupProperties.class);
        Assertions.assertEquals(false, model.thresholdRules().get(0).isEnabled());
        Assertions.assertEquals(1849890944, model.thresholdRules().get(0).minThreshold());
        Assertions.assertEquals(1584832044, model.thresholdRules().get(0).maxThreshold());
        Assertions.assertEquals(false, model.timeWindowRules().get(0).isEnabled());
        Assertions.assertEquals(1142162195, model.timeWindowRules().get(0).minThreshold());
        Assertions.assertEquals(1536135813, model.timeWindowRules().get(0).maxThreshold());
        Assertions.assertEquals(Duration.parse("PT139H38M16S"), model.timeWindowRules().get(0).timeWindowSize());
        Assertions.assertEquals(true, model.allowlistRules().get(0).isEnabled());
        Assertions.assertEquals("w", model.allowlistRules().get(0).allowlistValues().get(0));
        Assertions.assertEquals(true, model.denylistRules().get(0).isEnabled());
        Assertions.assertEquals("zrrryv", model.denylistRules().get(0).denylistValues().get(0));
    }
}
