// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.models.JitNetworkAccessRequestPort;
import com.azure.resourcemanager.security.models.Status;
import com.azure.resourcemanager.security.models.StatusReason;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class JitNetworkAccessRequestPortTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        JitNetworkAccessRequestPort model = BinaryData.fromString(
            "{\"number\":86519488,\"allowedSourceAddressPrefix\":\"hamfowgwbtmk\",\"allowedSourceAddressPrefixes\":[\"pkzwa\"],\"endTimeUtc\":\"2021-03-09T09:38:44Z\",\"status\":\"Initiated\",\"statusReason\":\"UserRequested\",\"mappedPort\":1256995489}")
            .toObject(JitNetworkAccessRequestPort.class);
        Assertions.assertEquals(86519488, model.number());
        Assertions.assertEquals("hamfowgwbtmk", model.allowedSourceAddressPrefix());
        Assertions.assertEquals("pkzwa", model.allowedSourceAddressPrefixes().get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-09T09:38:44Z"), model.endTimeUtc());
        Assertions.assertEquals(Status.INITIATED, model.status());
        Assertions.assertEquals(StatusReason.USER_REQUESTED, model.statusReason());
        Assertions.assertEquals(1256995489, model.mappedPort());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        JitNetworkAccessRequestPort model = new JitNetworkAccessRequestPort().withNumber(86519488)
            .withAllowedSourceAddressPrefix("hamfowgwbtmk")
            .withAllowedSourceAddressPrefixes(Arrays.asList("pkzwa"))
            .withEndTimeUtc(OffsetDateTime.parse("2021-03-09T09:38:44Z"))
            .withStatus(Status.INITIATED)
            .withStatusReason(StatusReason.USER_REQUESTED)
            .withMappedPort(1256995489);
        model = BinaryData.fromObject(model).toObject(JitNetworkAccessRequestPort.class);
        Assertions.assertEquals(86519488, model.number());
        Assertions.assertEquals("hamfowgwbtmk", model.allowedSourceAddressPrefix());
        Assertions.assertEquals("pkzwa", model.allowedSourceAddressPrefixes().get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-09T09:38:44Z"), model.endTimeUtc());
        Assertions.assertEquals(Status.INITIATED, model.status());
        Assertions.assertEquals(StatusReason.USER_REQUESTED, model.statusReason());
        Assertions.assertEquals(1256995489, model.mappedPort());
    }
}
