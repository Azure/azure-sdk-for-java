// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.models.JitNetworkAccessRequestPort;
import com.azure.resourcemanager.security.models.Status;
import com.azure.resourcemanager.security.models.StatusReason;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class JitNetworkAccessRequestPortTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        JitNetworkAccessRequestPort model = BinaryData.fromString(
            "{\"number\":1790365883,\"allowedSourceAddressPrefix\":\"zfivfokpysthhzag\",\"allowedSourceAddressPrefixes\":[\"yyrlhgenu\"],\"endTimeUtc\":\"2021-08-26T14:57:53Z\",\"status\":\"Initiated\",\"statusReason\":\"NewerRequestInitiated\",\"mappedPort\":459835083}")
            .toObject(JitNetworkAccessRequestPort.class);
        Assertions.assertEquals(1790365883, model.number());
        Assertions.assertEquals("zfivfokpysthhzag", model.allowedSourceAddressPrefix());
        Assertions.assertEquals("yyrlhgenu", model.allowedSourceAddressPrefixes().get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-26T14:57:53Z"), model.endTimeUtc());
        Assertions.assertEquals(Status.INITIATED, model.status());
        Assertions.assertEquals(StatusReason.NEWER_REQUEST_INITIATED, model.statusReason());
        Assertions.assertEquals(459835083, model.mappedPort());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        JitNetworkAccessRequestPort model = new JitNetworkAccessRequestPort().withNumber(1790365883)
            .withAllowedSourceAddressPrefix("zfivfokpysthhzag")
            .withAllowedSourceAddressPrefixes(Arrays.asList("yyrlhgenu"))
            .withEndTimeUtc(OffsetDateTime.parse("2021-08-26T14:57:53Z"))
            .withStatus(Status.INITIATED)
            .withStatusReason(StatusReason.NEWER_REQUEST_INITIATED)
            .withMappedPort(459835083);
        model = BinaryData.fromObject(model).toObject(JitNetworkAccessRequestPort.class);
        Assertions.assertEquals(1790365883, model.number());
        Assertions.assertEquals("zfivfokpysthhzag", model.allowedSourceAddressPrefix());
        Assertions.assertEquals("yyrlhgenu", model.allowedSourceAddressPrefixes().get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-26T14:57:53Z"), model.endTimeUtc());
        Assertions.assertEquals(Status.INITIATED, model.status());
        Assertions.assertEquals(StatusReason.NEWER_REQUEST_INITIATED, model.statusReason());
        Assertions.assertEquals(459835083, model.mappedPort());
    }
}
