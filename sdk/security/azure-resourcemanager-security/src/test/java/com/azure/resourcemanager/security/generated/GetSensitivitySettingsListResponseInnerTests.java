// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.GetSensitivitySettingsListResponseInner;
import com.azure.resourcemanager.security.fluent.models.GetSensitivitySettingsResponseInner;
import com.azure.resourcemanager.security.models.BuiltInInfoType;
import com.azure.resourcemanager.security.models.GetSensitivitySettingsResponseProperties;
import com.azure.resourcemanager.security.models.GetSensitivitySettingsResponsePropertiesMipInformation;
import com.azure.resourcemanager.security.models.InfoType;
import com.azure.resourcemanager.security.models.Label;
import com.azure.resourcemanager.security.models.MipIntegrationStatus;
import java.util.Arrays;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;

public final class GetSensitivitySettingsListResponseInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GetSensitivitySettingsListResponseInner model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"sensitiveInfoTypesIds\":[\"21ca1064-19cb-476f-8bdb-8911f10f16d4\",\"467c76cb-71c8-40b7-8835-99df8003087f\",\"8b990805-66c3-45a9-8f97-2d6c2f2602df\",\"15ab9994-bb24-40de-a295-25be05f88b5d\"],\"sensitivityThresholdLabelOrder\":83.27361,\"sensitivityThresholdLabelId\":\"93fe8918-fce8-4355-a98d-880da84a515a\",\"mipInformation\":{\"mipIntegrationStatus\":\"Ok\",\"labels\":[{},{},{},{}],\"customInfoTypes\":[{},{},{},{}],\"builtInInfoTypes\":[{},{}]}},\"id\":\"zuawxtzxpuamwa\",\"name\":\"zxrvxcus\",\"type\":\"sphaivmxyasflvg\"},{\"properties\":{\"sensitiveInfoTypesIds\":[\"35f529f0-0190-4218-a4f0-1ab2f8e0812c\"],\"sensitivityThresholdLabelOrder\":44.707447,\"sensitivityThresholdLabelId\":\"0d8b1566-ab4e-4bd0-8f57-90702967e05f\",\"mipInformation\":{\"mipIntegrationStatus\":\"noAutoLabelingRules\",\"labels\":[{},{},{},{}],\"customInfoTypes\":[{},{},{},{}],\"builtInInfoTypes\":[{},{},{}]}},\"id\":\"blmljh\",\"name\":\"nymzotqyr\",\"type\":\"uzcbmqq\"}]}")
            .toObject(GetSensitivitySettingsListResponseInner.class);
        Assertions.assertEquals(UUID.fromString("21ca1064-19cb-476f-8bdb-8911f10f16d4"),
            model.value().get(0).properties().sensitiveInfoTypesIds().get(0));
        Assertions.assertEquals(83.27361F, model.value().get(0).properties().sensitivityThresholdLabelOrder());
        Assertions.assertEquals(UUID.fromString("93fe8918-fce8-4355-a98d-880da84a515a"),
            model.value().get(0).properties().sensitivityThresholdLabelId());
        Assertions.assertEquals(MipIntegrationStatus.OK,
            model.value().get(0).properties().mipInformation().mipIntegrationStatus());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GetSensitivitySettingsListResponseInner model
            = new GetSensitivitySettingsListResponseInner().withValue(Arrays.asList(
                new GetSensitivitySettingsResponseInner().withProperties(new GetSensitivitySettingsResponseProperties()
                    .withSensitiveInfoTypesIds(Arrays.asList(UUID.fromString("21ca1064-19cb-476f-8bdb-8911f10f16d4"),
                        UUID.fromString("467c76cb-71c8-40b7-8835-99df8003087f"),
                        UUID.fromString("8b990805-66c3-45a9-8f97-2d6c2f2602df"),
                        UUID.fromString("15ab9994-bb24-40de-a295-25be05f88b5d")))
                    .withSensitivityThresholdLabelOrder(83.27361F)
                    .withSensitivityThresholdLabelId(UUID.fromString("93fe8918-fce8-4355-a98d-880da84a515a"))
                    .withMipInformation(new GetSensitivitySettingsResponsePropertiesMipInformation()
                        .withMipIntegrationStatus(MipIntegrationStatus.OK)
                        .withLabels(Arrays.asList(new Label(), new Label(), new Label(), new Label()))
                        .withCustomInfoTypes(
                            Arrays.asList(new InfoType(), new InfoType(), new InfoType(), new InfoType()))
                        .withBuiltInInfoTypes(Arrays.asList(new BuiltInInfoType(), new BuiltInInfoType())))),
                new GetSensitivitySettingsResponseInner().withProperties(new GetSensitivitySettingsResponseProperties()
                    .withSensitiveInfoTypesIds(Arrays.asList(UUID.fromString("35f529f0-0190-4218-a4f0-1ab2f8e0812c")))
                    .withSensitivityThresholdLabelOrder(44.707447F)
                    .withSensitivityThresholdLabelId(UUID.fromString("0d8b1566-ab4e-4bd0-8f57-90702967e05f"))
                    .withMipInformation(new GetSensitivitySettingsResponsePropertiesMipInformation()
                        .withMipIntegrationStatus(MipIntegrationStatus.NO_AUTO_LABELING_RULES)
                        .withLabels(Arrays.asList(new Label(), new Label(), new Label(), new Label()))
                        .withCustomInfoTypes(
                            Arrays.asList(new InfoType(), new InfoType(), new InfoType(), new InfoType()))
                        .withBuiltInInfoTypes(
                            Arrays.asList(new BuiltInInfoType(), new BuiltInInfoType(), new BuiltInInfoType()))))));
        model = BinaryData.fromObject(model).toObject(GetSensitivitySettingsListResponseInner.class);
        Assertions.assertEquals(UUID.fromString("21ca1064-19cb-476f-8bdb-8911f10f16d4"),
            model.value().get(0).properties().sensitiveInfoTypesIds().get(0));
        Assertions.assertEquals(83.27361F, model.value().get(0).properties().sensitivityThresholdLabelOrder());
        Assertions.assertEquals(UUID.fromString("93fe8918-fce8-4355-a98d-880da84a515a"),
            model.value().get(0).properties().sensitivityThresholdLabelId());
        Assertions.assertEquals(MipIntegrationStatus.OK,
            model.value().get(0).properties().mipInformation().mipIntegrationStatus());
    }
}
