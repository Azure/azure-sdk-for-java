// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.models.TwinUpdatesNotInAllowedRange;
import java.time.Duration;
import org.junit.jupiter.api.Assertions;

public final class TwinUpdatesNotInAllowedRangeTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        TwinUpdatesNotInAllowedRange model = BinaryData.fromString(
            "{\"ruleType\":\"TwinUpdatesNotInAllowedRange\",\"timeWindowSize\":\"PT76H30M37S\",\"minThreshold\":1040724454,\"maxThreshold\":1058012238,\"displayName\":\"eooifqdywjf\",\"description\":\"bhahqmom\",\"isEnabled\":false}")
            .toObject(TwinUpdatesNotInAllowedRange.class);
        Assertions.assertEquals(false, model.isEnabled());
        Assertions.assertEquals(1040724454, model.minThreshold());
        Assertions.assertEquals(1058012238, model.maxThreshold());
        Assertions.assertEquals(Duration.parse("PT76H30M37S"), model.timeWindowSize());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        TwinUpdatesNotInAllowedRange model
            = new TwinUpdatesNotInAllowedRange().withIsEnabled(false).withMinThreshold(1040724454)
                .withMaxThreshold(1058012238).withTimeWindowSize(Duration.parse("PT76H30M37S"));
        model = BinaryData.fromObject(model).toObject(TwinUpdatesNotInAllowedRange.class);
        Assertions.assertEquals(false, model.isEnabled());
        Assertions.assertEquals(1040724454, model.minThreshold());
        Assertions.assertEquals(1058012238, model.maxThreshold());
        Assertions.assertEquals(Duration.parse("PT76H30M37S"), model.timeWindowSize());
    }
}
