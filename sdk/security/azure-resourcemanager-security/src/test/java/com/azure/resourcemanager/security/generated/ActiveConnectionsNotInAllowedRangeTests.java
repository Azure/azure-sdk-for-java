// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.models.ActiveConnectionsNotInAllowedRange;
import java.time.Duration;
import org.junit.jupiter.api.Assertions;

public final class ActiveConnectionsNotInAllowedRangeTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ActiveConnectionsNotInAllowedRange model = BinaryData.fromString(
            "{\"ruleType\":\"ActiveConnectionsNotInAllowedRange\",\"timeWindowSize\":\"PT149H12M58S\",\"minThreshold\":512224949,\"maxThreshold\":1662553266,\"displayName\":\"ozfvualjt\",\"description\":\"ivsdw\",\"isEnabled\":false}")
            .toObject(ActiveConnectionsNotInAllowedRange.class);
        Assertions.assertEquals(false, model.isEnabled());
        Assertions.assertEquals(512224949, model.minThreshold());
        Assertions.assertEquals(1662553266, model.maxThreshold());
        Assertions.assertEquals(Duration.parse("PT149H12M58S"), model.timeWindowSize());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ActiveConnectionsNotInAllowedRange model
            = new ActiveConnectionsNotInAllowedRange().withIsEnabled(false).withMinThreshold(512224949)
                .withMaxThreshold(1662553266).withTimeWindowSize(Duration.parse("PT149H12M58S"));
        model = BinaryData.fromObject(model).toObject(ActiveConnectionsNotInAllowedRange.class);
        Assertions.assertEquals(false, model.isEnabled());
        Assertions.assertEquals(512224949, model.minThreshold());
        Assertions.assertEquals(1662553266, model.maxThreshold());
        Assertions.assertEquals(Duration.parse("PT149H12M58S"), model.timeWindowSize());
    }
}
