// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.NotificationsSource;
import com.azure.resourcemanager.security.models.SecurityContact;
import com.azure.resourcemanager.security.models.SecurityContactName;
import com.azure.resourcemanager.security.models.SecurityContactPropertiesNotificationsByRole;
import com.azure.resourcemanager.security.models.SecurityContactRole;
import com.azure.resourcemanager.security.models.State;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SecurityContactsCreateWithResponseMockTests {
    @Test
    public void testCreateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"emails\":\"ikm\",\"phone\":\"hqsxjbjkewrig\",\"isEnabled\":false,\"notificationsSources\":[{\"sourceType\":\"NotificationsSource\"},{\"sourceType\":\"NotificationsSource\"},{\"sourceType\":\"NotificationsSource\"}],\"notificationsByRole\":{\"state\":\"Skipped\",\"roles\":[\"Contributor\"]}},\"id\":\"lxcjffzwncv\",\"name\":\"efx\",\"type\":\"n\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        SecurityContact response = manager.securityContacts()
            .define(SecurityContactName.DEFAULT)
            .withEmails("ndcbs")
            .withPhone("ludzjkk")
            .withIsEnabled(false)
            .withNotificationsSources(Arrays.asList(new NotificationsSource(), new NotificationsSource()))
            .withNotificationsByRole(new SecurityContactPropertiesNotificationsByRole().withState(State.PASSED)
                .withRoles(Arrays.asList(SecurityContactRole.ACCOUNT_ADMIN, SecurityContactRole.ACCOUNT_ADMIN,
                    SecurityContactRole.CONTRIBUTOR)))
            .create();

        Assertions.assertEquals("ikm", response.emails());
        Assertions.assertEquals("hqsxjbjkewrig", response.phone());
        Assertions.assertEquals(false, response.isEnabled());
        Assertions.assertEquals(State.SKIPPED, response.notificationsByRole().state());
        Assertions.assertEquals(SecurityContactRole.CONTRIBUTOR, response.notificationsByRole().roles().get(0));
    }
}
