// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.Enforce;
import com.azure.resourcemanager.security.models.IsEnabled;
import com.azure.resourcemanager.security.models.PricingList;
import com.azure.resourcemanager.security.models.PricingTier;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PricingsListWithResponseMockTests {
    @Test
    public void testListWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"pricingTier\":\"Free\",\"subPlan\":\"xauphzefineyy\",\"freeTrialRemainingTime\":\"PT6H36M49S\",\"enablementTime\":\"2021-04-24T07:19:38Z\",\"enforce\":\"False\",\"inherited\":\"False\",\"inheritedFrom\":\"deexccw\",\"resourcesCoverageStatus\":\"PartiallyCovered\",\"extensions\":[{\"name\":\"uywmwtacr\",\"isEnabled\":\"True\"},{\"name\":\"fcncrvjcullmfw\",\"isEnabled\":\"True\"},{\"name\":\"oeowoszzwncsjgf\",\"isEnabled\":\"True\"},{\"name\":\"chmubyguqhgnmsvj\",\"isEnabled\":\"True\"}],\"deprecated\":false,\"replacedBy\":[\"yircba\",\"xjrbv\",\"rkbuatxkznl\",\"lmbx\"]},\"id\":\"gkev\",\"name\":\"ay\",\"type\":\"x\"},{\"properties\":{\"pricingTier\":\"Free\",\"subPlan\":\"ymzgrgkja\",\"freeTrialRemainingTime\":\"PT219H50M51S\",\"enablementTime\":\"2021-12-08T09:47:04Z\",\"enforce\":\"False\",\"inherited\":\"False\",\"inheritedFrom\":\"bspsbo\",\"resourcesCoverageStatus\":\"PartiallyCovered\",\"extensions\":[{\"name\":\"zimfcf\",\"isEnabled\":\"False\"}],\"deprecated\":true,\"replacedBy\":[\"pasckpgb\",\"lyxbwslxg\",\"mxtoejtqvq\"]},\"id\":\"tmlidk\",\"name\":\"zxoluzntbpca\",\"type\":\"d\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PricingList response = manager.pricings()
            .listWithResponse("qy", "clwbjgiynqryoisw", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(PricingTier.FREE, response.value().get(0).pricingTier());
        Assertions.assertEquals("xauphzefineyy", response.value().get(0).subPlan());
        Assertions.assertEquals(Enforce.FALSE, response.value().get(0).enforce());
        Assertions.assertEquals("uywmwtacr", response.value().get(0).extensions().get(0).name());
        Assertions.assertEquals(IsEnabled.TRUE, response.value().get(0).extensions().get(0).isEnabled());
    }
}
