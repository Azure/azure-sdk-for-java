// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.models.JitNetworkAccessPortRule;
import com.azure.resourcemanager.security.models.Protocol;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class JitNetworkAccessPortRuleTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        JitNetworkAccessPortRule model = BinaryData.fromString(
            "{\"number\":1105000832,\"protocol\":\"*\",\"allowedSourceAddressPrefix\":\"u\",\"allowedSourceAddressPrefixes\":[\"mdwmf\"],\"maxRequestAccessDuration\":\"hpycvjqdvdwkq\"}")
            .toObject(JitNetworkAccessPortRule.class);
        Assertions.assertEquals(1105000832, model.number());
        Assertions.assertEquals(Protocol.ASTERISK, model.protocol());
        Assertions.assertEquals("u", model.allowedSourceAddressPrefix());
        Assertions.assertEquals("mdwmf", model.allowedSourceAddressPrefixes().get(0));
        Assertions.assertEquals("hpycvjqdvdwkq", model.maxRequestAccessDuration());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        JitNetworkAccessPortRule model = new JitNetworkAccessPortRule().withNumber(1105000832)
            .withProtocol(Protocol.ASTERISK)
            .withAllowedSourceAddressPrefix("u")
            .withAllowedSourceAddressPrefixes(Arrays.asList("mdwmf"))
            .withMaxRequestAccessDuration("hpycvjqdvdwkq");
        model = BinaryData.fromObject(model).toObject(JitNetworkAccessPortRule.class);
        Assertions.assertEquals(1105000832, model.number());
        Assertions.assertEquals(Protocol.ASTERISK, model.protocol());
        Assertions.assertEquals("u", model.allowedSourceAddressPrefix());
        Assertions.assertEquals("mdwmf", model.allowedSourceAddressPrefixes().get(0));
        Assertions.assertEquals("hpycvjqdvdwkq", model.maxRequestAccessDuration());
    }
}
