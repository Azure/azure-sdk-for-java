// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.models.JitNetworkAccessPortRule;
import com.azure.resourcemanager.security.models.Protocol;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class JitNetworkAccessPortRuleTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        JitNetworkAccessPortRule model = BinaryData.fromString(
            "{\"number\":1474020309,\"protocol\":\"TCP\",\"allowedSourceAddressPrefix\":\"iwvjaqupbyyn\",\"allowedSourceAddressPrefixes\":[\"pajbmgeumexmjbx\",\"bccwkqmtxapeqi\",\"crpilgftrq\"],\"maxRequestAccessDuration\":\"ejdaahuqimld\"}")
            .toObject(JitNetworkAccessPortRule.class);
        Assertions.assertEquals(1474020309, model.number());
        Assertions.assertEquals(Protocol.TCP, model.protocol());
        Assertions.assertEquals("iwvjaqupbyyn", model.allowedSourceAddressPrefix());
        Assertions.assertEquals("pajbmgeumexmjbx", model.allowedSourceAddressPrefixes().get(0));
        Assertions.assertEquals("ejdaahuqimld", model.maxRequestAccessDuration());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        JitNetworkAccessPortRule model = new JitNetworkAccessPortRule().withNumber(1474020309)
            .withProtocol(Protocol.TCP).withAllowedSourceAddressPrefix("iwvjaqupbyyn")
            .withAllowedSourceAddressPrefixes(Arrays.asList("pajbmgeumexmjbx", "bccwkqmtxapeqi", "crpilgftrq"))
            .withMaxRequestAccessDuration("ejdaahuqimld");
        model = BinaryData.fromObject(model).toObject(JitNetworkAccessPortRule.class);
        Assertions.assertEquals(1474020309, model.number());
        Assertions.assertEquals(Protocol.TCP, model.protocol());
        Assertions.assertEquals("iwvjaqupbyyn", model.allowedSourceAddressPrefix());
        Assertions.assertEquals("pajbmgeumexmjbx", model.allowedSourceAddressPrefixes().get(0));
        Assertions.assertEquals("ejdaahuqimld", model.maxRequestAccessDuration());
    }
}
