// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.IoTSecurityAggregatedAlert;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class IotSecuritySolutionsAnalyticsAggregatedAlertsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"alertType\":\"iekkiskyyyaekn\",\"alertDisplayName\":\"fys\",\"vendorName\":\"wjlmlcufbbjiutfo\",\"reportedSeverity\":\"Low\",\"remediationSteps\":\"jjylsyqyj\",\"description\":\"fzvlqquyhbce\",\"count\":7737483875231160457,\"effectedResourceType\":\"rrp\",\"systemSource\":\"qtvuxeujmdssijua\",\"actionTaken\":\"fdlypk\",\"logAnalyticsQuery\":\"wsrqnnmjundtlxcl\",\"topDevicesList\":[{\"deviceId\":\"cycg\",\"alertsCount\":730429371573339373,\"lastOccurrence\":\"ihxv\"},{\"deviceId\":\"cwwfopxp\",\"alertsCount\":2500613286227288086,\"lastOccurrence\":\"bubwhzq\"},{\"deviceId\":\"u\",\"alertsCount\":8139964851872364158,\"lastOccurrence\":\"ahtqmmk\"},{\"deviceId\":\"wqcqwe\",\"alertsCount\":8077357459108512497,\"lastOccurrence\":\"pkephujeucosvkke\"}]},\"tags\":{\"lgnuee\":\"vypaxpjpyi\",\"cgmbg\":\"fpffbuqxknv\"},\"id\":\"yojfchicpare\",\"name\":\"zoksgqhb\",\"type\":\"ojuxil\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<IoTSecurityAggregatedAlert> response = manager.iotSecuritySolutionsAnalyticsAggregatedAlerts()
            .list("joezvw", "ryzgavpln", 1229403610, com.azure.core.util.Context.NONE);

        Assertions.assertEquals("vypaxpjpyi", response.iterator().next().tags().get("lgnuee"));
    }
}
