// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.IoTSecurityAggregatedAlert;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class IotSecuritySolutionsAnalyticsAggregatedAlertsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"alertType\":\"z\",\"alertDisplayName\":\"yovqmqcudptoqwr\",\"vendorName\":\"kjthl\",\"reportedSeverity\":\"Informational\",\"remediationSteps\":\"wawfu\",\"description\":\"ngejjxumowynjmoo\",\"count\":8742565226811425459,\"effectedResourceType\":\"tdrsjtmnkxjou\",\"systemSource\":\"zcfdtstiaxtyrnu\",\"actionTaken\":\"fhepis\",\"logAnalyticsQuery\":\"cmlroiommemso\",\"topDevicesList\":[{\"deviceId\":\"cyeqd\",\"alertsCount\":4380794604325601453,\"lastOccurrence\":\"qcabebck\"},{\"deviceId\":\"srsixwn\",\"alertsCount\":505938771822321914,\"lastOccurrence\":\"bjgfmyqyy\"},{\"deviceId\":\"ridzfpsfyakid\",\"alertsCount\":183154782545041181,\"lastOccurrence\":\"rqke\"},{\"deviceId\":\"umkq\",\"alertsCount\":43365760248026067,\"lastOccurrence\":\"triysjrgtruwpuq\"}]},\"tags\":{\"gclvbwa\":\"cekdvvoydwedgg\"},\"id\":\"zadrjbjngoar\",\"name\":\"rdrwiem\",\"type\":\"cyniapy\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<IoTSecurityAggregatedAlert> response = manager.iotSecuritySolutionsAnalyticsAggregatedAlerts()
            .list("liqwzutiyelrnhh", "t", 263278670, com.azure.core.util.Context.NONE);

        Assertions.assertEquals("cekdvvoydwedgg", response.iterator().next().tags().get("gclvbwa"));
    }
}
