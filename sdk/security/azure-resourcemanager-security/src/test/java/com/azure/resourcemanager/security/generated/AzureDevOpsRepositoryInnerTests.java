// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.AzureDevOpsRepositoryInner;
import com.azure.resourcemanager.security.models.ActionableRemediation;
import com.azure.resourcemanager.security.models.ActionableRemediationState;
import com.azure.resourcemanager.security.models.AnnotateDefaultBranchState;
import com.azure.resourcemanager.security.models.AzureDevOpsRepositoryProperties;
import com.azure.resourcemanager.security.models.CategoryConfiguration;
import com.azure.resourcemanager.security.models.DevOpsProvisioningState;
import com.azure.resourcemanager.security.models.InheritFromParentState;
import com.azure.resourcemanager.security.models.OnboardingState;
import com.azure.resourcemanager.security.models.RuleCategory;
import com.azure.resourcemanager.security.models.TargetBranchConfiguration;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AzureDevOpsRepositoryInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureDevOpsRepositoryInner model = BinaryData.fromString(
            "{\"properties\":{\"provisioningStatusMessage\":\"gm\",\"provisioningStatusUpdateTimeUtc\":\"2021-09-02T16:53:39Z\",\"provisioningState\":\"DeletionFailure\",\"parentOrgName\":\"p\",\"parentProjectName\":\"mfoeajogs\",\"repoId\":\"wetamfddrvlk\",\"repoUrl\":\"wbhnrecchdidrmuh\",\"visibility\":\"hmjedbiuc\",\"onboardingState\":\"NotOnboarded\",\"actionableRemediation\":{\"state\":\"Disabled\",\"categoryConfigurations\":[{\"minimumSeverityLevel\":\"bweunxc\",\"category\":\"Artifacts\"},{\"minimumSeverityLevel\":\"hu\",\"category\":\"Code\"},{\"minimumSeverityLevel\":\"ppiybxv\",\"category\":\"Secrets\"}],\"branchConfiguration\":{\"branchNames\":[\"bgk\"],\"annotateDefaultBranch\":\"Disabled\"},\"inheritFromParentState\":\"Disabled\"}},\"id\":\"iuzvkunhdimju\",\"name\":\"ti\",\"type\":\"zkaugpucdocfqpl\"}")
            .toObject(AzureDevOpsRepositoryInner.class);
        Assertions.assertEquals(DevOpsProvisioningState.DELETION_FAILURE, model.properties().provisioningState());
        Assertions.assertEquals("p", model.properties().parentOrgName());
        Assertions.assertEquals("mfoeajogs", model.properties().parentProjectName());
        Assertions.assertEquals(OnboardingState.NOT_ONBOARDED, model.properties().onboardingState());
        Assertions.assertEquals(ActionableRemediationState.DISABLED,
            model.properties().actionableRemediation().state());
        Assertions.assertEquals("bweunxc",
            model.properties().actionableRemediation().categoryConfigurations().get(0).minimumSeverityLevel());
        Assertions.assertEquals(RuleCategory.ARTIFACTS,
            model.properties().actionableRemediation().categoryConfigurations().get(0).category());
        Assertions.assertEquals("bgk",
            model.properties().actionableRemediation().branchConfiguration().branchNames().get(0));
        Assertions.assertEquals(AnnotateDefaultBranchState.DISABLED,
            model.properties().actionableRemediation().branchConfiguration().annotateDefaultBranch());
        Assertions.assertEquals(InheritFromParentState.DISABLED,
            model.properties().actionableRemediation().inheritFromParentState());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureDevOpsRepositoryInner model = new AzureDevOpsRepositoryInner().withProperties(
            new AzureDevOpsRepositoryProperties().withProvisioningState(DevOpsProvisioningState.DELETION_FAILURE)
                .withParentOrgName("p")
                .withParentProjectName("mfoeajogs")
                .withOnboardingState(OnboardingState.NOT_ONBOARDED)
                .withActionableRemediation(new ActionableRemediation().withState(ActionableRemediationState.DISABLED)
                    .withCategoryConfigurations(Arrays.asList(
                        new CategoryConfiguration().withMinimumSeverityLevel("bweunxc")
                            .withCategory(RuleCategory.ARTIFACTS),
                        new CategoryConfiguration().withMinimumSeverityLevel("hu").withCategory(RuleCategory.CODE),
                        new CategoryConfiguration().withMinimumSeverityLevel("ppiybxv")
                            .withCategory(RuleCategory.SECRETS)))
                    .withBranchConfiguration(new TargetBranchConfiguration().withBranchNames(Arrays.asList("bgk"))
                        .withAnnotateDefaultBranch(AnnotateDefaultBranchState.DISABLED))
                    .withInheritFromParentState(InheritFromParentState.DISABLED)));
        model = BinaryData.fromObject(model).toObject(AzureDevOpsRepositoryInner.class);
        Assertions.assertEquals(DevOpsProvisioningState.DELETION_FAILURE, model.properties().provisioningState());
        Assertions.assertEquals("p", model.properties().parentOrgName());
        Assertions.assertEquals("mfoeajogs", model.properties().parentProjectName());
        Assertions.assertEquals(OnboardingState.NOT_ONBOARDED, model.properties().onboardingState());
        Assertions.assertEquals(ActionableRemediationState.DISABLED,
            model.properties().actionableRemediation().state());
        Assertions.assertEquals("bweunxc",
            model.properties().actionableRemediation().categoryConfigurations().get(0).minimumSeverityLevel());
        Assertions.assertEquals(RuleCategory.ARTIFACTS,
            model.properties().actionableRemediation().categoryConfigurations().get(0).category());
        Assertions.assertEquals("bgk",
            model.properties().actionableRemediation().branchConfiguration().branchNames().get(0));
        Assertions.assertEquals(AnnotateDefaultBranchState.DISABLED,
            model.properties().actionableRemediation().branchConfiguration().annotateDefaultBranch());
        Assertions.assertEquals(InheritFromParentState.DISABLED,
            model.properties().actionableRemediation().inheritFromParentState());
    }
}
