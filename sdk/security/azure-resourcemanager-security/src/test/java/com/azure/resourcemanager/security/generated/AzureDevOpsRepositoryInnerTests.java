// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.AzureDevOpsRepositoryInner;
import com.azure.resourcemanager.security.models.ActionableRemediation;
import com.azure.resourcemanager.security.models.ActionableRemediationState;
import com.azure.resourcemanager.security.models.AnnotateDefaultBranchState;
import com.azure.resourcemanager.security.models.AzureDevOpsRepositoryProperties;
import com.azure.resourcemanager.security.models.CategoryConfiguration;
import com.azure.resourcemanager.security.models.InheritFromParentState;
import com.azure.resourcemanager.security.models.OnboardingState;
import com.azure.resourcemanager.security.models.RuleCategory;
import com.azure.resourcemanager.security.models.TargetBranchConfiguration;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AzureDevOpsRepositoryInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureDevOpsRepositoryInner model = BinaryData.fromString(
            "{\"properties\":{\"provisioningStatusMessage\":\"muowolbauiro\",\"provisioningStatusUpdateTimeUtc\":\"2021-07-21T06:19:54Z\",\"provisioningState\":\"Pending\",\"parentOrgName\":\"onwpnga\",\"parentProjectName\":\"n\",\"repoId\":\"xjawrt\",\"repoUrl\":\"fjmyccxlzhco\",\"visibility\":\"vnekhenlusfnrdtj\",\"onboardingState\":\"OnboardedByOtherConnector\",\"actionableRemediation\":{\"state\":\"Disabled\",\"categoryConfigurations\":[{\"minimumSeverityLevel\":\"vidttgepuslvyjt\",\"category\":\"Containers\"},{\"minimumSeverityLevel\":\"kasizie\",\"category\":\"Containers\"}],\"branchConfiguration\":{\"branchNames\":[\"tuqfecjxeygtu\",\"xu\",\"cbuewmrswnjlxuz\"],\"annotateDefaultBranch\":\"Enabled\"},\"inheritFromParentState\":\"Enabled\"}},\"id\":\"sxjb\",\"name\":\"qehgpd\",\"type\":\"hzjqatucoige\"}")
            .toObject(AzureDevOpsRepositoryInner.class);
        Assertions.assertEquals("onwpnga", model.properties().parentOrgName());
        Assertions.assertEquals("n", model.properties().parentProjectName());
        Assertions.assertEquals(OnboardingState.ONBOARDED_BY_OTHER_CONNECTOR, model.properties().onboardingState());
        Assertions.assertEquals(ActionableRemediationState.DISABLED,
            model.properties().actionableRemediation().state());
        Assertions.assertEquals("vidttgepuslvyjt",
            model.properties().actionableRemediation().categoryConfigurations().get(0).minimumSeverityLevel());
        Assertions.assertEquals(RuleCategory.CONTAINERS,
            model.properties().actionableRemediation().categoryConfigurations().get(0).category());
        Assertions.assertEquals("tuqfecjxeygtu",
            model.properties().actionableRemediation().branchConfiguration().branchNames().get(0));
        Assertions.assertEquals(AnnotateDefaultBranchState.ENABLED,
            model.properties().actionableRemediation().branchConfiguration().annotateDefaultBranch());
        Assertions.assertEquals(InheritFromParentState.ENABLED,
            model.properties().actionableRemediation().inheritFromParentState());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureDevOpsRepositoryInner model = new AzureDevOpsRepositoryInner()
            .withProperties(new AzureDevOpsRepositoryProperties().withParentOrgName("onwpnga")
                .withParentProjectName("n")
                .withOnboardingState(OnboardingState.ONBOARDED_BY_OTHER_CONNECTOR)
                .withActionableRemediation(new ActionableRemediation().withState(ActionableRemediationState.DISABLED)
                    .withCategoryConfigurations(Arrays.asList(
                        new CategoryConfiguration().withMinimumSeverityLevel("vidttgepuslvyjt")
                            .withCategory(RuleCategory.CONTAINERS),
                        new CategoryConfiguration().withMinimumSeverityLevel("kasizie")
                            .withCategory(RuleCategory.CONTAINERS)))
                    .withBranchConfiguration(new TargetBranchConfiguration()
                        .withBranchNames(Arrays.asList("tuqfecjxeygtu", "xu", "cbuewmrswnjlxuz"))
                        .withAnnotateDefaultBranch(AnnotateDefaultBranchState.ENABLED))
                    .withInheritFromParentState(InheritFromParentState.ENABLED)));
        model = BinaryData.fromObject(model).toObject(AzureDevOpsRepositoryInner.class);
        Assertions.assertEquals("onwpnga", model.properties().parentOrgName());
        Assertions.assertEquals("n", model.properties().parentProjectName());
        Assertions.assertEquals(OnboardingState.ONBOARDED_BY_OTHER_CONNECTOR, model.properties().onboardingState());
        Assertions.assertEquals(ActionableRemediationState.DISABLED,
            model.properties().actionableRemediation().state());
        Assertions.assertEquals("vidttgepuslvyjt",
            model.properties().actionableRemediation().categoryConfigurations().get(0).minimumSeverityLevel());
        Assertions.assertEquals(RuleCategory.CONTAINERS,
            model.properties().actionableRemediation().categoryConfigurations().get(0).category());
        Assertions.assertEquals("tuqfecjxeygtu",
            model.properties().actionableRemediation().branchConfiguration().branchNames().get(0));
        Assertions.assertEquals(AnnotateDefaultBranchState.ENABLED,
            model.properties().actionableRemediation().branchConfiguration().annotateDefaultBranch());
        Assertions.assertEquals(InheritFromParentState.ENABLED,
            model.properties().actionableRemediation().inheritFromParentState());
    }
}
