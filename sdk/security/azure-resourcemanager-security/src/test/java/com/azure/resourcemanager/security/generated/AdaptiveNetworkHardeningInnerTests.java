// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.AdaptiveNetworkHardeningInner;
import com.azure.resourcemanager.security.models.Direction;
import com.azure.resourcemanager.security.models.EffectiveNetworkSecurityGroups;
import com.azure.resourcemanager.security.models.Rule;
import com.azure.resourcemanager.security.models.TransportProtocol;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AdaptiveNetworkHardeningInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AdaptiveNetworkHardeningInner model = BinaryData.fromString(
            "{\"properties\":{\"rules\":[{\"name\":\"j\",\"direction\":\"Inbound\",\"destinationPort\":1760944585,\"protocols\":[\"TCP\"],\"ipAddresses\":[\"nvzmlnkoywsx\"]},{\"name\":\"abjqqaxuyvymcnud\",\"direction\":\"Outbound\",\"destinationPort\":1838740828,\"protocols\":[\"TCP\",\"UDP\",\"TCP\",\"TCP\"],\"ipAddresses\":[\"uipmpvks\",\"itnsqxtltc\",\"krdpqgfhyrfr\",\"kkld\"]}],\"rulesCalculationTime\":\"2021-06-13T02:48:03Z\",\"effectiveNetworkSecurityGroups\":[{\"networkInterface\":\"mfcnrjajqmatxj\",\"networkSecurityGroups\":[\"ln\",\"qgxxgfbb\",\"tlpqagynoi\",\"rnzcalinc\"]},{\"networkInterface\":\"qxzxaqz\",\"networkSecurityGroups\":[\"qimiymqr\",\"qguhfupetasvvo\",\"sbpkf\"]}]},\"id\":\"anfkgxsyaowuzow\",\"name\":\"uohdkcprgukxr\",\"type\":\"tiochlutixmqr\"}")
            .toObject(AdaptiveNetworkHardeningInner.class);
        Assertions.assertEquals("j", model.rules().get(0).name());
        Assertions.assertEquals(Direction.INBOUND, model.rules().get(0).direction());
        Assertions.assertEquals(1760944585, model.rules().get(0).destinationPort());
        Assertions.assertEquals(TransportProtocol.TCP, model.rules().get(0).protocols().get(0));
        Assertions.assertEquals("nvzmlnkoywsx", model.rules().get(0).ipAddresses().get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-13T02:48:03Z"), model.rulesCalculationTime());
        Assertions.assertEquals("mfcnrjajqmatxj", model.effectiveNetworkSecurityGroups().get(0).networkInterface());
        Assertions.assertEquals("ln", model.effectiveNetworkSecurityGroups().get(0).networkSecurityGroups().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AdaptiveNetworkHardeningInner model = new AdaptiveNetworkHardeningInner()
            .withRules(Arrays.asList(
                new Rule().withName("j").withDirection(Direction.INBOUND).withDestinationPort(1760944585)
                    .withProtocols(Arrays.asList(TransportProtocol.TCP)).withIpAddresses(Arrays.asList("nvzmlnkoywsx")),
                new Rule().withName("abjqqaxuyvymcnud").withDirection(Direction.OUTBOUND)
                    .withDestinationPort(1838740828)
                    .withProtocols(Arrays.asList(TransportProtocol.TCP, TransportProtocol.UDP, TransportProtocol.TCP,
                        TransportProtocol.TCP))
                    .withIpAddresses(Arrays.asList("uipmpvks", "itnsqxtltc", "krdpqgfhyrfr", "kkld"))))
            .withRulesCalculationTime(OffsetDateTime.parse("2021-06-13T02:48:03Z"))
            .withEffectiveNetworkSecurityGroups(Arrays.asList(
                new EffectiveNetworkSecurityGroups().withNetworkInterface("mfcnrjajqmatxj")
                    .withNetworkSecurityGroups(Arrays.asList("ln", "qgxxgfbb", "tlpqagynoi", "rnzcalinc")),
                new EffectiveNetworkSecurityGroups().withNetworkInterface("qxzxaqz")
                    .withNetworkSecurityGroups(Arrays.asList("qimiymqr", "qguhfupetasvvo", "sbpkf"))));
        model = BinaryData.fromObject(model).toObject(AdaptiveNetworkHardeningInner.class);
        Assertions.assertEquals("j", model.rules().get(0).name());
        Assertions.assertEquals(Direction.INBOUND, model.rules().get(0).direction());
        Assertions.assertEquals(1760944585, model.rules().get(0).destinationPort());
        Assertions.assertEquals(TransportProtocol.TCP, model.rules().get(0).protocols().get(0));
        Assertions.assertEquals("nvzmlnkoywsx", model.rules().get(0).ipAddresses().get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-13T02:48:03Z"), model.rulesCalculationTime());
        Assertions.assertEquals("mfcnrjajqmatxj", model.effectiveNetworkSecurityGroups().get(0).networkInterface());
        Assertions.assertEquals("ln", model.effectiveNetworkSecurityGroups().get(0).networkSecurityGroups().get(0));
    }
}
