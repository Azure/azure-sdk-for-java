// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.AdaptiveNetworkHardeningInner;
import com.azure.resourcemanager.security.models.Direction;
import com.azure.resourcemanager.security.models.EffectiveNetworkSecurityGroups;
import com.azure.resourcemanager.security.models.Rule;
import com.azure.resourcemanager.security.models.TransportProtocol;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AdaptiveNetworkHardeningInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AdaptiveNetworkHardeningInner model = BinaryData.fromString(
            "{\"properties\":{\"rules\":[{\"name\":\"qpqojxcxzrzd\",\"direction\":\"Inbound\",\"destinationPort\":1128546614,\"protocols\":[\"UDP\"],\"ipAddresses\":[\"cawetzqddt\",\"wflj\"]},{\"name\":\"namtuatmzw\",\"direction\":\"Outbound\",\"destinationPort\":1651064350,\"protocols\":[\"TCP\",\"TCP\"],\"ipAddresses\":[\"zvgbgat\"]},{\"name\":\"uvbxngr\",\"direction\":\"Outbound\",\"destinationPort\":1023022300,\"protocols\":[\"UDP\",\"TCP\",\"UDP\",\"TCP\"],\"ipAddresses\":[\"v\",\"jqfutlxj\"]},{\"name\":\"zasunwqrjzfrgq\",\"direction\":\"Inbound\",\"destinationPort\":1623468487,\"protocols\":[\"UDP\",\"TCP\"],\"ipAddresses\":[\"jrohmbpyryxameb\",\"ydyvkfkmro\",\"xne\"]}],\"rulesCalculationTime\":\"2021-06-21T09:21:47Z\",\"effectiveNetworkSecurityGroups\":[{\"networkInterface\":\"dlfp\",\"networkSecurityGroups\":[\"ucygvo\",\"vyuns\",\"xlghieegj\",\"gvvpasek\"]}]},\"id\":\"gbuxantuygdh\",\"name\":\"aq\",\"type\":\"pirpiwrqof\"}")
            .toObject(AdaptiveNetworkHardeningInner.class);
        Assertions.assertEquals("qpqojxcxzrzd", model.rules().get(0).name());
        Assertions.assertEquals(Direction.INBOUND, model.rules().get(0).direction());
        Assertions.assertEquals(1128546614, model.rules().get(0).destinationPort());
        Assertions.assertEquals(TransportProtocol.UDP, model.rules().get(0).protocols().get(0));
        Assertions.assertEquals("cawetzqddt", model.rules().get(0).ipAddresses().get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-21T09:21:47Z"), model.rulesCalculationTime());
        Assertions.assertEquals("dlfp", model.effectiveNetworkSecurityGroups().get(0).networkInterface());
        Assertions.assertEquals("ucygvo", model.effectiveNetworkSecurityGroups().get(0).networkSecurityGroups().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AdaptiveNetworkHardeningInner model = new AdaptiveNetworkHardeningInner()
            .withRules(Arrays.asList(
                new Rule().withName("qpqojxcxzrzd")
                    .withDirection(Direction.INBOUND)
                    .withDestinationPort(1128546614)
                    .withProtocols(Arrays.asList(TransportProtocol.UDP))
                    .withIpAddresses(Arrays.asList("cawetzqddt", "wflj")),
                new Rule().withName("namtuatmzw")
                    .withDirection(Direction.OUTBOUND)
                    .withDestinationPort(1651064350)
                    .withProtocols(Arrays.asList(TransportProtocol.TCP, TransportProtocol.TCP))
                    .withIpAddresses(Arrays.asList("zvgbgat")),
                new Rule().withName("uvbxngr")
                    .withDirection(Direction.OUTBOUND)
                    .withDestinationPort(1023022300)
                    .withProtocols(Arrays.asList(TransportProtocol.UDP, TransportProtocol.TCP, TransportProtocol.UDP,
                        TransportProtocol.TCP))
                    .withIpAddresses(Arrays.asList("v", "jqfutlxj")),
                new Rule().withName("zasunwqrjzfrgq")
                    .withDirection(Direction.INBOUND)
                    .withDestinationPort(1623468487)
                    .withProtocols(Arrays.asList(TransportProtocol.UDP, TransportProtocol.TCP))
                    .withIpAddresses(Arrays.asList("jrohmbpyryxameb", "ydyvkfkmro", "xne"))))
            .withRulesCalculationTime(OffsetDateTime.parse("2021-06-21T09:21:47Z"))
            .withEffectiveNetworkSecurityGroups(
                Arrays.asList(new EffectiveNetworkSecurityGroups().withNetworkInterface("dlfp")
                    .withNetworkSecurityGroups(Arrays.asList("ucygvo", "vyuns", "xlghieegj", "gvvpasek"))));
        model = BinaryData.fromObject(model).toObject(AdaptiveNetworkHardeningInner.class);
        Assertions.assertEquals("qpqojxcxzrzd", model.rules().get(0).name());
        Assertions.assertEquals(Direction.INBOUND, model.rules().get(0).direction());
        Assertions.assertEquals(1128546614, model.rules().get(0).destinationPort());
        Assertions.assertEquals(TransportProtocol.UDP, model.rules().get(0).protocols().get(0));
        Assertions.assertEquals("cawetzqddt", model.rules().get(0).ipAddresses().get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-21T09:21:47Z"), model.rulesCalculationTime());
        Assertions.assertEquals("dlfp", model.effectiveNetworkSecurityGroups().get(0).networkInterface());
        Assertions.assertEquals("ucygvo", model.effectiveNetworkSecurityGroups().get(0).networkSecurityGroups().get(0));
    }
}
