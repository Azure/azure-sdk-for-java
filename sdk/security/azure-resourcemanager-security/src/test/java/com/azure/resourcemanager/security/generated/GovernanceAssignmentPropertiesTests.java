// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.GovernanceAssignmentProperties;
import com.azure.resourcemanager.security.models.GovernanceAssignmentAdditionalData;
import com.azure.resourcemanager.security.models.GovernanceEmailNotification;
import com.azure.resourcemanager.security.models.RemediationEta;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class GovernanceAssignmentPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GovernanceAssignmentProperties model = BinaryData.fromString(
            "{\"owner\":\"s\",\"remediationDueDate\":\"2021-11-22T09:18:13Z\",\"remediationEta\":{\"eta\":\"2021-07-23T03:32:16Z\",\"justification\":\"tgadgvraeaen\"},\"isGracePeriod\":false,\"governanceEmailNotification\":{\"disableManagerEmailNotification\":true,\"disableOwnerEmailNotification\":true},\"additionalData\":{\"ticketNumber\":333965716,\"ticketLink\":\"ijfqkacewiipfp\",\"ticketStatus\":\"ji\"}}")
            .toObject(GovernanceAssignmentProperties.class);
        Assertions.assertEquals("s", model.owner());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-22T09:18:13Z"), model.remediationDueDate());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-23T03:32:16Z"), model.remediationEta().eta());
        Assertions.assertEquals("tgadgvraeaen", model.remediationEta().justification());
        Assertions.assertEquals(false, model.isGracePeriod());
        Assertions.assertEquals(true, model.governanceEmailNotification().disableManagerEmailNotification());
        Assertions.assertEquals(true, model.governanceEmailNotification().disableOwnerEmailNotification());
        Assertions.assertEquals(333965716, model.additionalData().ticketNumber());
        Assertions.assertEquals("ijfqkacewiipfp", model.additionalData().ticketLink());
        Assertions.assertEquals("ji", model.additionalData().ticketStatus());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GovernanceAssignmentProperties model = new GovernanceAssignmentProperties().withOwner("s")
            .withRemediationDueDate(OffsetDateTime.parse("2021-11-22T09:18:13Z"))
            .withRemediationEta(new RemediationEta().withEta(OffsetDateTime.parse("2021-07-23T03:32:16Z"))
                .withJustification("tgadgvraeaen"))
            .withIsGracePeriod(false)
            .withGovernanceEmailNotification(new GovernanceEmailNotification().withDisableManagerEmailNotification(true)
                .withDisableOwnerEmailNotification(true))
            .withAdditionalData(new GovernanceAssignmentAdditionalData().withTicketNumber(333965716)
                .withTicketLink("ijfqkacewiipfp")
                .withTicketStatus("ji"));
        model = BinaryData.fromObject(model).toObject(GovernanceAssignmentProperties.class);
        Assertions.assertEquals("s", model.owner());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-22T09:18:13Z"), model.remediationDueDate());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-23T03:32:16Z"), model.remediationEta().eta());
        Assertions.assertEquals("tgadgvraeaen", model.remediationEta().justification());
        Assertions.assertEquals(false, model.isGracePeriod());
        Assertions.assertEquals(true, model.governanceEmailNotification().disableManagerEmailNotification());
        Assertions.assertEquals(true, model.governanceEmailNotification().disableOwnerEmailNotification());
        Assertions.assertEquals(333965716, model.additionalData().ticketNumber());
        Assertions.assertEquals("ijfqkacewiipfp", model.additionalData().ticketLink());
        Assertions.assertEquals("ji", model.additionalData().ticketStatus());
    }
}
