// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.GovernanceAssignmentProperties;
import com.azure.resourcemanager.security.models.GovernanceAssignmentAdditionalData;
import com.azure.resourcemanager.security.models.GovernanceEmailNotification;
import com.azure.resourcemanager.security.models.RemediationEta;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class GovernanceAssignmentPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GovernanceAssignmentProperties model =
            BinaryData
                .fromString(
                    "{\"owner\":\"xtczhupeuknijd\",\"remediationDueDate\":\"2021-01-29T00:46:36Z\",\"remediationEta\":{\"eta\":\"2021-05-29T22:33:32Z\",\"justification\":\"spyd\"},\"isGracePeriod\":true,\"governanceEmailNotification\":{\"disableManagerEmailNotification\":false,\"disableOwnerEmailNotification\":true},\"additionalData\":{\"ticketNumber\":1649894132,\"ticketLink\":\"tywikd\",\"ticketStatus\":\"lakuflgbhgauacd\"}}")
                .toObject(GovernanceAssignmentProperties.class);
        Assertions.assertEquals("xtczhupeuknijd", model.owner());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-29T00:46:36Z"), model.remediationDueDate());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-29T22:33:32Z"), model.remediationEta().eta());
        Assertions.assertEquals("spyd", model.remediationEta().justification());
        Assertions.assertEquals(true, model.isGracePeriod());
        Assertions.assertEquals(false, model.governanceEmailNotification().disableManagerEmailNotification());
        Assertions.assertEquals(true, model.governanceEmailNotification().disableOwnerEmailNotification());
        Assertions.assertEquals(1649894132, model.additionalData().ticketNumber());
        Assertions.assertEquals("tywikd", model.additionalData().ticketLink());
        Assertions.assertEquals("lakuflgbhgauacd", model.additionalData().ticketStatus());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GovernanceAssignmentProperties model =
            new GovernanceAssignmentProperties()
                .withOwner("xtczhupeuknijd")
                .withRemediationDueDate(OffsetDateTime.parse("2021-01-29T00:46:36Z"))
                .withRemediationEta(
                    new RemediationEta()
                        .withEta(OffsetDateTime.parse("2021-05-29T22:33:32Z"))
                        .withJustification("spyd"))
                .withIsGracePeriod(true)
                .withGovernanceEmailNotification(
                    new GovernanceEmailNotification()
                        .withDisableManagerEmailNotification(false)
                        .withDisableOwnerEmailNotification(true))
                .withAdditionalData(
                    new GovernanceAssignmentAdditionalData()
                        .withTicketNumber(1649894132)
                        .withTicketLink("tywikd")
                        .withTicketStatus("lakuflgbhgauacd"));
        model = BinaryData.fromObject(model).toObject(GovernanceAssignmentProperties.class);
        Assertions.assertEquals("xtczhupeuknijd", model.owner());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-29T00:46:36Z"), model.remediationDueDate());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-29T22:33:32Z"), model.remediationEta().eta());
        Assertions.assertEquals("spyd", model.remediationEta().justification());
        Assertions.assertEquals(true, model.isGracePeriod());
        Assertions.assertEquals(false, model.governanceEmailNotification().disableManagerEmailNotification());
        Assertions.assertEquals(true, model.governanceEmailNotification().disableOwnerEmailNotification());
        Assertions.assertEquals(1649894132, model.additionalData().ticketNumber());
        Assertions.assertEquals("tywikd", model.additionalData().ticketLink());
        Assertions.assertEquals("lakuflgbhgauacd", model.additionalData().ticketStatus());
    }
}
