// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.AzureDevOpsOrgInner;
import com.azure.resourcemanager.security.models.ActionableRemediation;
import com.azure.resourcemanager.security.models.ActionableRemediationState;
import com.azure.resourcemanager.security.models.AnnotateDefaultBranchState;
import com.azure.resourcemanager.security.models.AzureDevOpsOrgProperties;
import com.azure.resourcemanager.security.models.CategoryConfiguration;
import com.azure.resourcemanager.security.models.InheritFromParentState;
import com.azure.resourcemanager.security.models.OnboardingState;
import com.azure.resourcemanager.security.models.RuleCategory;
import com.azure.resourcemanager.security.models.TargetBranchConfiguration;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class AzureDevOpsOrgInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AzureDevOpsOrgInner model = BinaryData.fromString(
            "{\"properties\":{\"provisioningStatusMessage\":\"zgnzv\",\"provisioningStatusUpdateTimeUtc\":\"2021-07-04T23:14:39Z\",\"provisioningState\":\"PendingDeletion\",\"onboardingState\":\"Onboarded\",\"actionableRemediation\":{\"state\":\"Enabled\",\"categoryConfigurations\":[{\"minimumSeverityLevel\":\"d\",\"category\":\"Dependencies\"}],\"branchConfiguration\":{\"branchNames\":[\"ewjptmcg\",\"bostzel\",\"dlat\",\"tmzlbiojlv\"],\"annotateDefaultBranch\":\"Enabled\"},\"inheritFromParentState\":\"Enabled\"}},\"id\":\"pn\",\"name\":\"qvcww\",\"type\":\"yurmochpprprs\"}")
            .toObject(AzureDevOpsOrgInner.class);
        Assertions.assertEquals(OnboardingState.ONBOARDED, model.properties().onboardingState());
        Assertions.assertEquals(ActionableRemediationState.ENABLED, model.properties().actionableRemediation().state());
        Assertions.assertEquals("d",
            model.properties().actionableRemediation().categoryConfigurations().get(0).minimumSeverityLevel());
        Assertions.assertEquals(RuleCategory.DEPENDENCIES,
            model.properties().actionableRemediation().categoryConfigurations().get(0).category());
        Assertions.assertEquals("ewjptmcg",
            model.properties().actionableRemediation().branchConfiguration().branchNames().get(0));
        Assertions.assertEquals(AnnotateDefaultBranchState.ENABLED,
            model.properties().actionableRemediation().branchConfiguration().annotateDefaultBranch());
        Assertions.assertEquals(InheritFromParentState.ENABLED,
            model.properties().actionableRemediation().inheritFromParentState());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AzureDevOpsOrgInner model = new AzureDevOpsOrgInner().withProperties(new AzureDevOpsOrgProperties()
            .withOnboardingState(OnboardingState.ONBOARDED)
            .withActionableRemediation(new ActionableRemediation().withState(ActionableRemediationState.ENABLED)
                .withCategoryConfigurations(Arrays.asList(
                    new CategoryConfiguration().withMinimumSeverityLevel("d").withCategory(RuleCategory.DEPENDENCIES)))
                .withBranchConfiguration(new TargetBranchConfiguration()
                    .withBranchNames(Arrays.asList("ewjptmcg", "bostzel", "dlat", "tmzlbiojlv"))
                    .withAnnotateDefaultBranch(AnnotateDefaultBranchState.ENABLED))
                .withInheritFromParentState(InheritFromParentState.ENABLED)));
        model = BinaryData.fromObject(model).toObject(AzureDevOpsOrgInner.class);
        Assertions.assertEquals(OnboardingState.ONBOARDED, model.properties().onboardingState());
        Assertions.assertEquals(ActionableRemediationState.ENABLED, model.properties().actionableRemediation().state());
        Assertions.assertEquals("d",
            model.properties().actionableRemediation().categoryConfigurations().get(0).minimumSeverityLevel());
        Assertions.assertEquals(RuleCategory.DEPENDENCIES,
            model.properties().actionableRemediation().categoryConfigurations().get(0).category());
        Assertions.assertEquals("ewjptmcg",
            model.properties().actionableRemediation().branchConfiguration().branchNames().get(0));
        Assertions.assertEquals(AnnotateDefaultBranchState.ENABLED,
            model.properties().actionableRemediation().branchConfiguration().annotateDefaultBranch());
        Assertions.assertEquals(InheritFromParentState.ENABLED,
            model.properties().actionableRemediation().inheritFromParentState());
    }
}
