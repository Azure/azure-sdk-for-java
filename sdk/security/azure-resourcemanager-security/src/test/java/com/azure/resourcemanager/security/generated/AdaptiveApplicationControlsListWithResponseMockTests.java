// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.AdaptiveApplicationControlGroups;
import com.azure.resourcemanager.security.models.EnforcementMode;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AdaptiveApplicationControlsListWithResponseMockTests {
    @Test
    public void testListWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"enforcementMode\":\"Audit\",\"protectionMode\":{\"exe\":\"Audit\",\"msi\":\"Enforce\",\"script\":\"None\",\"executable\":\"Audit\"},\"configurationStatus\":\"NotConfigured\",\"recommendationStatus\":\"NotAvailable\",\"issues\":[{},{}],\"sourceSystem\":\"NonAzure_AppLocker\",\"vmRecommendations\":[{},{},{}],\"pathRecommendations\":[{},{},{}]},\"location\":\"dlypkcpwsrqn\",\"id\":\"mjund\",\"name\":\"lxcltjhbcycg\",\"type\":\"a\"},{\"properties\":{\"enforcementMode\":\"Enforce\",\"protectionMode\":{\"exe\":\"Enforce\",\"msi\":\"Enforce\",\"script\":\"None\",\"executable\":\"None\"},\"configurationStatus\":\"Failed\",\"recommendationStatus\":\"NotAvailable\",\"issues\":[{}],\"sourceSystem\":\"Azure_AppLocker\",\"vmRecommendations\":[{},{},{},{}],\"pathRecommendations\":[{},{}]},\"location\":\"whzqqgugw\",\"id\":\"uxahtqmmkdhwq\",\"name\":\"qwebagm\",\"type\":\"pkephujeucosvkke\"},{\"properties\":{\"enforcementMode\":\"Enforce\",\"protectionMode\":{\"exe\":\"Enforce\",\"msi\":\"Enforce\",\"script\":\"Enforce\",\"executable\":\"None\"},\"configurationStatus\":\"InProgress\",\"recommendationStatus\":\"Recommended\",\"issues\":[{}],\"sourceSystem\":\"NonAzure_AppLocker\",\"vmRecommendations\":[{},{},{}],\"pathRecommendations\":[{},{},{}]},\"location\":\"buqxknvmcgmb\",\"id\":\"zyojfch\",\"name\":\"cp\",\"type\":\"rexzoksgq\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        AdaptiveApplicationControlGroups response = manager.adaptiveApplicationControls()
            .listWithResponse(false, false, com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(EnforcementMode.AUDIT, response.value().get(0).enforcementMode());
        Assertions.assertEquals(EnforcementMode.AUDIT, response.value().get(0).protectionMode().exe());
        Assertions.assertEquals(EnforcementMode.ENFORCE, response.value().get(0).protectionMode().msi());
        Assertions.assertEquals(EnforcementMode.NONE, response.value().get(0).protectionMode().script());
        Assertions.assertEquals(EnforcementMode.AUDIT, response.value().get(0).protectionMode().executable());
    }
}
