// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.IoTSecurityAggregatedRecommendationInner;
import com.azure.resourcemanager.security.models.IoTSecurityAggregatedRecommendationList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class IoTSecurityAggregatedRecommendationListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IoTSecurityAggregatedRecommendationList model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"recommendationName\":\"uuipldq\",\"recommendationDisplayName\":\"tekva\",\"description\":\"l\",\"recommendationTypeId\":\"jqvq\",\"detectedBy\":\"wehtaemxh\",\"remediationSteps\":\"ysev\",\"reportedSeverity\":\"Low\",\"healthyDevices\":3311459489311370250,\"unhealthyDeviceCount\":5720754078383440351,\"logAnalyticsQuery\":\"veimipskdyzatv\"},\"tags\":{\"jvvruxwigsyei\":\"kaf\",\"qgdgkkile\":\"qdsmjtg\",\"orvvmqfloygbdgw\":\"lkcsmknhwtbbae\"},\"id\":\"mgxdgdhpabgd\",\"name\":\"xjd\",\"type\":\"vjsaqwotm\"},{\"properties\":{\"recommendationName\":\"lcol\",\"recommendationDisplayName\":\"sxap\",\"description\":\"f\",\"recommendationTypeId\":\"xcgjokjljnhvlq\",\"detectedBy\":\"ek\",\"remediationSteps\":\"eksnbksdqhjvyk\",\"reportedSeverity\":\"Informational\",\"healthyDevices\":5086164099994248054,\"unhealthyDeviceCount\":8799946155135105306,\"logAnalyticsQuery\":\"tcpoqma\"},\"tags\":{\"jkxyb\":\"qjwgoknlej\",\"jbzten\":\"fdb\"},\"id\":\"vkzykjtjknsxf\",\"name\":\"us\",\"type\":\"cdp\"}],\"nextLink\":\"pn\"}")
            .toObject(IoTSecurityAggregatedRecommendationList.class);
        Assertions.assertEquals("kaf", model.value().get(0).tags().get("jvvruxwigsyei"));
        Assertions.assertEquals("uuipldq", model.value().get(0).recommendationName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IoTSecurityAggregatedRecommendationList model
            = new IoTSecurityAggregatedRecommendationList()
                .withValue(
                    Arrays.asList(
                        new IoTSecurityAggregatedRecommendationInner()
                            .withTags(mapOf("jvvruxwigsyei", "kaf", "qgdgkkile", "qdsmjtg", "orvvmqfloygbdgw",
                                "lkcsmknhwtbbae"))
                            .withRecommendationName("uuipldq"),
                        new IoTSecurityAggregatedRecommendationInner()
                            .withTags(mapOf("jkxyb", "qjwgoknlej", "jbzten", "fdb"))
                            .withRecommendationName("lcol")));
        model = BinaryData.fromObject(model).toObject(IoTSecurityAggregatedRecommendationList.class);
        Assertions.assertEquals("kaf", model.value().get(0).tags().get("jvvruxwigsyei"));
        Assertions.assertEquals("uuipldq", model.value().get(0).recommendationName());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
