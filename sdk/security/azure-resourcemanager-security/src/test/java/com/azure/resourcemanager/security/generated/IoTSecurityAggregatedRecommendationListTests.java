// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.IoTSecurityAggregatedRecommendationInner;
import com.azure.resourcemanager.security.models.IoTSecurityAggregatedRecommendationList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class IoTSecurityAggregatedRecommendationListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IoTSecurityAggregatedRecommendationList model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"recommendationName\":\"uhplrvkmjcwmjv\",\"recommendationDisplayName\":\"fggc\",\"description\":\"yylizrz\",\"recommendationTypeId\":\"psfxsf\",\"detectedBy\":\"tl\",\"remediationSteps\":\"mvagbwidqlvhuko\",\"reportedSeverity\":\"High\",\"healthyDevices\":229689641193790417,\"unhealthyDeviceCount\":3903457587821133847,\"logAnalyticsQuery\":\"nmjmvlwyzgiblk\"},\"tags\":{\"uyjucejikzo\":\"llfojuidjp\",\"ikyju\":\"ovvtzejetjkln\",\"bqzolxr\":\"k\",\"pcrrk\":\"vhqjwtrhtgvg\"},\"id\":\"lawjmjsmwrok\",\"name\":\"dxfzzzwyjaf\",\"type\":\"tlhguynuchl\"}],\"nextLink\":\"ltxdwhmozu\"}")
            .toObject(IoTSecurityAggregatedRecommendationList.class);
        Assertions.assertEquals("llfojuidjp", model.value().get(0).tags().get("uyjucejikzo"));
        Assertions.assertEquals("uhplrvkmjcwmjv", model.value().get(0).recommendationName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IoTSecurityAggregatedRecommendationList model = new IoTSecurityAggregatedRecommendationList()
            .withValue(Arrays.asList(new IoTSecurityAggregatedRecommendationInner()
                .withTags(mapOf("uyjucejikzo", "llfojuidjp", "ikyju", "ovvtzejetjkln", "bqzolxr", "k", "pcrrk",
                    "vhqjwtrhtgvg"))
                .withRecommendationName("uhplrvkmjcwmjv")));
        model = BinaryData.fromObject(model).toObject(IoTSecurityAggregatedRecommendationList.class);
        Assertions.assertEquals("llfojuidjp", model.value().get(0).tags().get("uyjucejikzo"));
        Assertions.assertEquals("uhplrvkmjcwmjv", model.value().get(0).recommendationName());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
