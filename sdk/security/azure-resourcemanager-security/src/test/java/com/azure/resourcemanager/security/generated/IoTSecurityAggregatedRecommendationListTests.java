// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.IoTSecurityAggregatedRecommendationInner;
import com.azure.resourcemanager.security.models.IoTSecurityAggregatedRecommendationList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class IoTSecurityAggregatedRecommendationListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IoTSecurityAggregatedRecommendationList model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"recommendationName\":\"usqxutrpbrr\",\"recommendationDisplayName\":\"uuatvlmbjwcol\",\"description\":\"x\",\"recommendationTypeId\":\"nwtpcpahprz\",\"detectedBy\":\"xhmtfhocnxzc\",\"remediationSteps\":\"hngxnoqrxtd\",\"reportedSeverity\":\"High\",\"healthyDevices\":2059120808472108916,\"unhealthyDeviceCount\":569738744375120531,\"logAnalyticsQuery\":\"ydidwhepfwwtjf\"},\"tags\":{\"wcdbckyoik\":\"sxxh\",\"rbhtmeplvukaobr\":\"kxhnegknj\",\"jhgem\":\"bpgsnbagnc\",\"ywalhjymxcg\":\"owa\"},\"id\":\"tagdrc\",\"name\":\"ssoljom\",\"type\":\"vtfycnlbvgjcodk\"},{\"properties\":{\"recommendationName\":\"iiy\",\"recommendationDisplayName\":\"sik\",\"description\":\"bcufqbvntn\",\"recommendationTypeId\":\"mqso\",\"detectedBy\":\"cekxgnly\",\"remediationSteps\":\"xcpwzvmdok\",\"reportedSeverity\":\"Informational\",\"healthyDevices\":2249768152395320200,\"unhealthyDeviceCount\":7657601157511707584,\"logAnalyticsQuery\":\"boncqbazqic\"},\"tags\":{\"pkxyqvgxi\":\"ygtvxbyjanepub\",\"tvo\":\"od\"},\"id\":\"kxdxuwsaifmcwn\",\"name\":\"s\",\"type\":\"zlehgcvkbcknjolg\"}],\"nextLink\":\"yxpvelszerqze\"}")
            .toObject(IoTSecurityAggregatedRecommendationList.class);
        Assertions.assertEquals("sxxh", model.value().get(0).tags().get("wcdbckyoik"));
        Assertions.assertEquals("usqxutrpbrr", model.value().get(0).recommendationName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IoTSecurityAggregatedRecommendationList model
            = new IoTSecurityAggregatedRecommendationList().withValue(Arrays.asList(
                new IoTSecurityAggregatedRecommendationInner().withTags(mapOf("wcdbckyoik", "sxxh", "rbhtmeplvukaobr",
                    "kxhnegknj", "jhgem", "bpgsnbagnc", "ywalhjymxcg", "owa")).withRecommendationName("usqxutrpbrr"),
                new IoTSecurityAggregatedRecommendationInner()
                    .withTags(mapOf("pkxyqvgxi", "ygtvxbyjanepub", "tvo", "od")).withRecommendationName("iiy")));
        model = BinaryData.fromObject(model).toObject(IoTSecurityAggregatedRecommendationList.class);
        Assertions.assertEquals("sxxh", model.value().get(0).tags().get("wcdbckyoik"));
        Assertions.assertEquals("usqxutrpbrr", model.value().get(0).recommendationName());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
