// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.models.DevOpsProvisioningState;
import com.azure.resourcemanager.security.models.GitHubOwnerProperties;
import com.azure.resourcemanager.security.models.OnboardingState;
import org.junit.jupiter.api.Assertions;

public final class GitHubOwnerPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GitHubOwnerProperties model = BinaryData.fromString(
            "{\"provisioningStatusMessage\":\"xkzrn\",\"provisioningStatusUpdateTimeUtc\":\"2021-08-03T14:02Z\",\"provisioningState\":\"PendingDeletion\",\"ownerUrl\":\"huosgwqpsqaz\",\"gitHubInternalId\":\"qodvqgcnbhcbmj\",\"onboardingState\":\"NotApplicable\"}")
            .toObject(GitHubOwnerProperties.class);
        Assertions.assertEquals(DevOpsProvisioningState.PENDING_DELETION, model.provisioningState());
        Assertions.assertEquals(OnboardingState.NOT_APPLICABLE, model.onboardingState());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GitHubOwnerProperties model
            = new GitHubOwnerProperties().withProvisioningState(DevOpsProvisioningState.PENDING_DELETION)
                .withOnboardingState(OnboardingState.NOT_APPLICABLE);
        model = BinaryData.fromObject(model).toObject(GitHubOwnerProperties.class);
        Assertions.assertEquals(DevOpsProvisioningState.PENDING_DELETION, model.provisioningState());
        Assertions.assertEquals(OnboardingState.NOT_APPLICABLE, model.onboardingState());
    }
}
