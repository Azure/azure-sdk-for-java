// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.SecurityFamily;
import com.azure.resourcemanager.security.models.SecuritySolutionsReferenceDataList;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SecuritySolutionsReferenceDatasListByHomeRegionWithResponseMockTests {
    @Test
    public void testListByHomeRegionWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"securityFamily\":\"Ngfw\",\"alertVendorName\":\"wtidcnzalgmpupj\",\"packageInfoUrl\":\"ltyl\",\"productName\":\"uudvbgvzlzjsb\",\"publisher\":\"p\",\"publisherDisplayName\":\"utzaziydpoknsea\",\"template\":\"mbdqra\"},\"location\":\"d\",\"id\":\"rluob\",\"name\":\"valqwzkny\",\"type\":\"j\"},{\"properties\":{\"securityFamily\":\"SaasWaf\",\"alertVendorName\":\"svclfjycl\",\"packageInfoUrl\":\"ildlffll\",\"productName\":\"irmtxfqpfildcg\",\"publisher\":\"fouzfbpg\",\"publisherDisplayName\":\"ryvidbzdylb\",\"template\":\"jatgngwn\"},\"location\":\"ftecgprzsqmpdqc\",\"id\":\"kzb\",\"name\":\"qhaathxo\",\"type\":\"x\"},{\"properties\":{\"securityFamily\":\"Va\",\"alertVendorName\":\"colusyruxrzhhlhr\",\"packageInfoUrl\":\"mgsbpgmncrvtpifo\",\"productName\":\"omppz\",\"publisher\":\"a\",\"publisherDisplayName\":\"qmeu\",\"template\":\"plfcmpua\"},\"location\":\"goce\",\"id\":\"tlyspjymwicc\",\"name\":\"rncfu\",\"type\":\"lakgixhqjqhgqwbb\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        SecuritySolutionsReferenceDataList response = manager.securitySolutionsReferenceDatas()
            .listByHomeRegionWithResponse("ucrxdtejob", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(SecurityFamily.NGFW, response.value().get(0).securityFamily());
        Assertions.assertEquals("wtidcnzalgmpupj", response.value().get(0).alertVendorName());
        Assertions.assertEquals("ltyl", response.value().get(0).packageInfoUrl());
        Assertions.assertEquals("uudvbgvzlzjsb", response.value().get(0).productName());
        Assertions.assertEquals("p", response.value().get(0).publisher());
        Assertions.assertEquals("utzaziydpoknsea", response.value().get(0).publisherDisplayName());
        Assertions.assertEquals("mbdqra", response.value().get(0).template());
    }
}
