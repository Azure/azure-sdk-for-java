// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.EndOfSupportStatus;
import com.azure.resourcemanager.security.models.Software;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SoftwareInventoriesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"deviceId\":\"micjixxfsf\",\"osPlatform\":\"rtnuguefxxijteb\",\"vendor\":\"eywetkrhlolmcn\",\"softwareName\":\"pfgsvbbvaqdljnp\",\"version\":\"l\",\"endOfSupportStatus\":\"upcomingNoLongerSupported\",\"endOfSupportDate\":\"etawevx\",\"numberOfKnownVulnerabilities\":615135158,\"firstSeenAt\":\"kdxl\"},\"id\":\"zvdov\",\"name\":\"rblerlprdaqcc\",\"type\":\"dcb\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Software response = manager.softwareInventories()
            .getWithResponse("dror", "yogzmsimehtcu", "wdhtqqhyhnimxtn", "ugisnomwnwngho", "ovke",
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("micjixxfsf", response.deviceId());
        Assertions.assertEquals("rtnuguefxxijteb", response.osPlatform());
        Assertions.assertEquals("eywetkrhlolmcn", response.vendor());
        Assertions.assertEquals("pfgsvbbvaqdljnp", response.softwareName());
        Assertions.assertEquals("l", response.version());
        Assertions.assertEquals(EndOfSupportStatus.UPCOMING_NO_LONGER_SUPPORTED, response.endOfSupportStatus());
        Assertions.assertEquals("etawevx", response.endOfSupportDate());
        Assertions.assertEquals(615135158, response.numberOfKnownVulnerabilities());
        Assertions.assertEquals("kdxl", response.firstSeenAt());
    }
}
