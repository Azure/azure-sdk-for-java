// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.models.ConfigurationStatus;
import com.azure.resourcemanager.security.models.FileType;
import com.azure.resourcemanager.security.models.PathRecommendation;
import com.azure.resourcemanager.security.models.PublisherInfo;
import com.azure.resourcemanager.security.models.RecommendationAction;
import com.azure.resourcemanager.security.models.RecommendationType;
import com.azure.resourcemanager.security.models.UserRecommendation;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PathRecommendationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PathRecommendation model = BinaryData.fromString(
            "{\"path\":\"kefgmwdhce\",\"action\":\"Remove\",\"type\":\"IoT_SharedCredentials\",\"publisherInfo\":{\"publisherName\":\"bglzoutbaaqgzek\",\"productName\":\"clyzgs\",\"binaryName\":\"rbjgmn\",\"version\":\"otvmrxk\"},\"common\":true,\"userSids\":[\"vjb\",\"vhdi\",\"ayfluiyuosnu\",\"dtelvhyibdrqrs\"],\"usernames\":[{\"username\":\"ubpyrow\",\"recommendationAction\":\"Add\"},{\"username\":\"ztfwfqchvcz\",\"recommendationAction\":\"Add\"},{\"username\":\"nctagfyvrtpqpem\",\"recommendationAction\":\"Add\"}],\"fileType\":\"Exe\",\"configurationStatus\":\"InProgress\"}")
            .toObject(PathRecommendation.class);
        Assertions.assertEquals("kefgmwdhce", model.path());
        Assertions.assertEquals(RecommendationAction.REMOVE, model.action());
        Assertions.assertEquals(RecommendationType.IO_T_SHARED_CREDENTIALS, model.type());
        Assertions.assertEquals("bglzoutbaaqgzek", model.publisherInfo().publisherName());
        Assertions.assertEquals("clyzgs", model.publisherInfo().productName());
        Assertions.assertEquals("rbjgmn", model.publisherInfo().binaryName());
        Assertions.assertEquals("otvmrxk", model.publisherInfo().version());
        Assertions.assertEquals(true, model.common());
        Assertions.assertEquals("vjb", model.userSids().get(0));
        Assertions.assertEquals("ubpyrow", model.usernames().get(0).username());
        Assertions.assertEquals(RecommendationAction.ADD, model.usernames().get(0).recommendationAction());
        Assertions.assertEquals(FileType.EXE, model.fileType());
        Assertions.assertEquals(ConfigurationStatus.IN_PROGRESS, model.configurationStatus());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PathRecommendation model = new PathRecommendation().withPath("kefgmwdhce")
            .withAction(RecommendationAction.REMOVE).withType(RecommendationType.IO_T_SHARED_CREDENTIALS)
            .withPublisherInfo(new PublisherInfo().withPublisherName("bglzoutbaaqgzek").withProductName("clyzgs")
                .withBinaryName("rbjgmn").withVersion("otvmrxk"))
            .withCommon(true).withUserSids(Arrays.asList("vjb", "vhdi", "ayfluiyuosnu", "dtelvhyibdrqrs"))
            .withUsernames(Arrays.asList(
                new UserRecommendation().withUsername("ubpyrow").withRecommendationAction(RecommendationAction.ADD),
                new UserRecommendation().withUsername("ztfwfqchvcz").withRecommendationAction(RecommendationAction.ADD),
                new UserRecommendation().withUsername("nctagfyvrtpqpem")
                    .withRecommendationAction(RecommendationAction.ADD)))
            .withFileType(FileType.EXE).withConfigurationStatus(ConfigurationStatus.IN_PROGRESS);
        model = BinaryData.fromObject(model).toObject(PathRecommendation.class);
        Assertions.assertEquals("kefgmwdhce", model.path());
        Assertions.assertEquals(RecommendationAction.REMOVE, model.action());
        Assertions.assertEquals(RecommendationType.IO_T_SHARED_CREDENTIALS, model.type());
        Assertions.assertEquals("bglzoutbaaqgzek", model.publisherInfo().publisherName());
        Assertions.assertEquals("clyzgs", model.publisherInfo().productName());
        Assertions.assertEquals("rbjgmn", model.publisherInfo().binaryName());
        Assertions.assertEquals("otvmrxk", model.publisherInfo().version());
        Assertions.assertEquals(true, model.common());
        Assertions.assertEquals("vjb", model.userSids().get(0));
        Assertions.assertEquals("ubpyrow", model.usernames().get(0).username());
        Assertions.assertEquals(RecommendationAction.ADD, model.usernames().get(0).recommendationAction());
        Assertions.assertEquals(FileType.EXE, model.fileType());
        Assertions.assertEquals(ConfigurationStatus.IN_PROGRESS, model.configurationStatus());
    }
}
