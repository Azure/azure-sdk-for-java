// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.models.ConfigurationStatus;
import com.azure.resourcemanager.security.models.FileType;
import com.azure.resourcemanager.security.models.PathRecommendation;
import com.azure.resourcemanager.security.models.PublisherInfo;
import com.azure.resourcemanager.security.models.RecommendationAction;
import com.azure.resourcemanager.security.models.RecommendationType;
import com.azure.resourcemanager.security.models.UserRecommendation;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PathRecommendationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PathRecommendation model = BinaryData.fromString(
            "{\"path\":\"mmpuj\",\"action\":\"Recommended\",\"type\":\"IoT_VulnerableTLSCipherSuite\",\"publisherInfo\":{\"publisherName\":\"uvsmbms\",\"productName\":\"oyovwz\",\"binaryName\":\"pqvyb\",\"version\":\"gvmxnok\"},\"common\":false,\"userSids\":[\"bse\",\"kvcuartrhunl\",\"iryky\",\"ndzfqivjreuyk\"],\"usernames\":[{\"username\":\"wagltbxoeeonqlnf\",\"recommendationAction\":\"Add\"},{\"username\":\"mvqdbpbhfckdvez\",\"recommendationAction\":\"Recommended\"},{\"username\":\"sbzhd\",\"recommendationAction\":\"Recommended\"}],\"fileType\":\"Script\",\"configurationStatus\":\"Configured\"}")
            .toObject(PathRecommendation.class);
        Assertions.assertEquals("mmpuj", model.path());
        Assertions.assertEquals(RecommendationAction.RECOMMENDED, model.action());
        Assertions.assertEquals(RecommendationType.IO_T_VULNERABLE_TLSCIPHER_SUITE, model.type());
        Assertions.assertEquals("uvsmbms", model.publisherInfo().publisherName());
        Assertions.assertEquals("oyovwz", model.publisherInfo().productName());
        Assertions.assertEquals("pqvyb", model.publisherInfo().binaryName());
        Assertions.assertEquals("gvmxnok", model.publisherInfo().version());
        Assertions.assertEquals(false, model.common());
        Assertions.assertEquals("bse", model.userSids().get(0));
        Assertions.assertEquals("wagltbxoeeonqlnf", model.usernames().get(0).username());
        Assertions.assertEquals(RecommendationAction.ADD, model.usernames().get(0).recommendationAction());
        Assertions.assertEquals(FileType.SCRIPT, model.fileType());
        Assertions.assertEquals(ConfigurationStatus.CONFIGURED, model.configurationStatus());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PathRecommendation model = new PathRecommendation().withPath("mmpuj")
            .withAction(RecommendationAction.RECOMMENDED)
            .withType(RecommendationType.IO_T_VULNERABLE_TLSCIPHER_SUITE)
            .withPublisherInfo(new PublisherInfo().withPublisherName("uvsmbms")
                .withProductName("oyovwz")
                .withBinaryName("pqvyb")
                .withVersion("gvmxnok"))
            .withCommon(false)
            .withUserSids(Arrays.asList("bse", "kvcuartrhunl", "iryky", "ndzfqivjreuyk"))
            .withUsernames(Arrays.asList(
                new UserRecommendation().withUsername("wagltbxoeeonqlnf")
                    .withRecommendationAction(RecommendationAction.ADD),
                new UserRecommendation().withUsername("mvqdbpbhfckdvez")
                    .withRecommendationAction(RecommendationAction.RECOMMENDED),
                new UserRecommendation().withUsername("sbzhd")
                    .withRecommendationAction(RecommendationAction.RECOMMENDED)))
            .withFileType(FileType.SCRIPT)
            .withConfigurationStatus(ConfigurationStatus.CONFIGURED);
        model = BinaryData.fromObject(model).toObject(PathRecommendation.class);
        Assertions.assertEquals("mmpuj", model.path());
        Assertions.assertEquals(RecommendationAction.RECOMMENDED, model.action());
        Assertions.assertEquals(RecommendationType.IO_T_VULNERABLE_TLSCIPHER_SUITE, model.type());
        Assertions.assertEquals("uvsmbms", model.publisherInfo().publisherName());
        Assertions.assertEquals("oyovwz", model.publisherInfo().productName());
        Assertions.assertEquals("pqvyb", model.publisherInfo().binaryName());
        Assertions.assertEquals("gvmxnok", model.publisherInfo().version());
        Assertions.assertEquals(false, model.common());
        Assertions.assertEquals("bse", model.userSids().get(0));
        Assertions.assertEquals("wagltbxoeeonqlnf", model.usernames().get(0).username());
        Assertions.assertEquals(RecommendationAction.ADD, model.usernames().get(0).recommendationAction());
        Assertions.assertEquals(FileType.SCRIPT, model.fileType());
        Assertions.assertEquals(ConfigurationStatus.CONFIGURED, model.configurationStatus());
    }
}
