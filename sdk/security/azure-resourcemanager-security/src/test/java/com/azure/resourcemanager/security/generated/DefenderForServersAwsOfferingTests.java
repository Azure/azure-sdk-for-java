// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.models.DefenderForServersAwsOffering;
import com.azure.resourcemanager.security.models.DefenderForServersAwsOfferingArcAutoProvisioning;
import com.azure.resourcemanager.security.models.DefenderForServersAwsOfferingDefenderForServers;
import com.azure.resourcemanager.security.models.DefenderForServersAwsOfferingMdeAutoProvisioning;
import com.azure.resourcemanager.security.models.DefenderForServersAwsOfferingSubPlan;
import com.azure.resourcemanager.security.models.DefenderForServersAwsOfferingVaAutoProvisioning;
import com.azure.resourcemanager.security.models.DefenderForServersAwsOfferingVaAutoProvisioningConfiguration;
import com.azure.resourcemanager.security.models.DefenderForServersAwsOfferingVmScanners;
import com.azure.resourcemanager.security.models.DefenderForServersAwsOfferingVmScannersConfiguration;
import com.azure.resourcemanager.security.models.ScanningMode;
import com.azure.resourcemanager.security.models.SubPlan;
import com.azure.resourcemanager.security.models.Type;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class DefenderForServersAwsOfferingTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DefenderForServersAwsOffering model =
            BinaryData
                .fromString(
                    "{\"offeringType\":\"DefenderForServersAws\",\"defenderForServers\":{\"cloudRoleArn\":\"ril\"},\"arcAutoProvisioning\":{\"enabled\":false,\"cloudRoleArn\":\"qqxvztpbn\"},\"vaAutoProvisioning\":{\"enabled\":false,\"configuration\":{\"type\":\"Qualys\"}},\"mdeAutoProvisioning\":{\"enabled\":false,\"configuration\":\"dataswbnfddepldwqjns\"},\"subPlan\":{\"type\":\"P1\"},\"vmScanners\":{\"enabled\":false,\"configuration\":{\"cloudRoleArn\":\"hvmywhsbrcarycs\",\"scanningMode\":\"Default\",\"exclusionTags\":{\"uvehzptd\":\"oaqa\",\"be\":\"krrbhmpful\",\"ununm\":\"gybpmfb\",\"kdschlzvfictnkjj\":\"zkrvfyi\"}}},\"description\":\"cwnphbkgfyrtogm\"}")
                .toObject(DefenderForServersAwsOffering.class);
        Assertions.assertEquals("ril", model.defenderForServers().cloudRoleArn());
        Assertions.assertEquals(false, model.arcAutoProvisioning().enabled());
        Assertions.assertEquals("qqxvztpbn", model.arcAutoProvisioning().cloudRoleArn());
        Assertions.assertEquals(false, model.vaAutoProvisioning().enabled());
        Assertions.assertEquals(Type.QUALYS, model.vaAutoProvisioning().configuration().type());
        Assertions.assertEquals(false, model.mdeAutoProvisioning().enabled());
        Assertions.assertEquals(SubPlan.P1, model.subPlan().type());
        Assertions.assertEquals(false, model.vmScanners().enabled());
        Assertions.assertEquals("hvmywhsbrcarycs", model.vmScanners().configuration().cloudRoleArn());
        Assertions.assertEquals(ScanningMode.DEFAULT, model.vmScanners().configuration().scanningMode());
        Assertions.assertEquals("oaqa", model.vmScanners().configuration().exclusionTags().get("uvehzptd"));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DefenderForServersAwsOffering model =
            new DefenderForServersAwsOffering()
                .withDefenderForServers(new DefenderForServersAwsOfferingDefenderForServers().withCloudRoleArn("ril"))
                .withArcAutoProvisioning(
                    new DefenderForServersAwsOfferingArcAutoProvisioning()
                        .withEnabled(false)
                        .withCloudRoleArn("qqxvztpbn"))
                .withVaAutoProvisioning(
                    new DefenderForServersAwsOfferingVaAutoProvisioning()
                        .withEnabled(false)
                        .withConfiguration(
                            new DefenderForServersAwsOfferingVaAutoProvisioningConfiguration().withType(Type.QUALYS)))
                .withMdeAutoProvisioning(
                    new DefenderForServersAwsOfferingMdeAutoProvisioning()
                        .withEnabled(false)
                        .withConfiguration("dataswbnfddepldwqjns"))
                .withSubPlan(new DefenderForServersAwsOfferingSubPlan().withType(SubPlan.P1))
                .withVmScanners(
                    new DefenderForServersAwsOfferingVmScanners()
                        .withEnabled(false)
                        .withConfiguration(
                            new DefenderForServersAwsOfferingVmScannersConfiguration()
                                .withCloudRoleArn("hvmywhsbrcarycs")
                                .withScanningMode(ScanningMode.DEFAULT)
                                .withExclusionTags(
                                    mapOf(
                                        "uvehzptd",
                                        "oaqa",
                                        "be",
                                        "krrbhmpful",
                                        "ununm",
                                        "gybpmfb",
                                        "kdschlzvfictnkjj",
                                        "zkrvfyi"))));
        model = BinaryData.fromObject(model).toObject(DefenderForServersAwsOffering.class);
        Assertions.assertEquals("ril", model.defenderForServers().cloudRoleArn());
        Assertions.assertEquals(false, model.arcAutoProvisioning().enabled());
        Assertions.assertEquals("qqxvztpbn", model.arcAutoProvisioning().cloudRoleArn());
        Assertions.assertEquals(false, model.vaAutoProvisioning().enabled());
        Assertions.assertEquals(Type.QUALYS, model.vaAutoProvisioning().configuration().type());
        Assertions.assertEquals(false, model.mdeAutoProvisioning().enabled());
        Assertions.assertEquals(SubPlan.P1, model.subPlan().type());
        Assertions.assertEquals(false, model.vmScanners().enabled());
        Assertions.assertEquals("hvmywhsbrcarycs", model.vmScanners().configuration().cloudRoleArn());
        Assertions.assertEquals(ScanningMode.DEFAULT, model.vmScanners().configuration().scanningMode());
        Assertions.assertEquals("oaqa", model.vmScanners().configuration().exclusionTags().get("uvehzptd"));
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
