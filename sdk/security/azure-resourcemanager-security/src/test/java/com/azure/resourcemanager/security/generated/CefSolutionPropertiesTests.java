// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.models.CefSolutionProperties;
import com.azure.resourcemanager.security.models.ConnectedWorkspace;
import org.junit.jupiter.api.Assertions;

public final class CefSolutionPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CefSolutionProperties model =
            BinaryData
                .fromString(
                    "{\"hostname\":\"hg\",\"agent\":\"kb\",\"lastEventReceived\":\"njolgjyyxpv\",\"deviceVendor\":\"szerqzevxoqei\",\"deviceType\":\"xwaljgl\",\"workspace\":{\"id\":\"lqwa\"},\"\":{\"bhdvafjrqpjiy\":\"dataqulhmzy\"}}")
                .toObject(CefSolutionProperties.class);
        Assertions.assertEquals("szerqzevxoqei", model.deviceVendor());
        Assertions.assertEquals("xwaljgl", model.deviceType());
        Assertions.assertEquals("lqwa", model.workspace().id());
        Assertions.assertEquals("hg", model.hostname());
        Assertions.assertEquals("kb", model.agent());
        Assertions.assertEquals("njolgjyyxpv", model.lastEventReceived());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CefSolutionProperties model =
            new CefSolutionProperties()
                .withDeviceVendor("szerqzevxoqei")
                .withDeviceType("xwaljgl")
                .withWorkspace(new ConnectedWorkspace().withId("lqwa"))
                .withHostname("hg")
                .withAgent("kb")
                .withLastEventReceived("njolgjyyxpv");
        model = BinaryData.fromObject(model).toObject(CefSolutionProperties.class);
        Assertions.assertEquals("szerqzevxoqei", model.deviceVendor());
        Assertions.assertEquals("xwaljgl", model.deviceType());
        Assertions.assertEquals("lqwa", model.workspace().id());
        Assertions.assertEquals("hg", model.hostname());
        Assertions.assertEquals("kb", model.agent());
        Assertions.assertEquals("njolgjyyxpv", model.lastEventReceived());
    }
}
