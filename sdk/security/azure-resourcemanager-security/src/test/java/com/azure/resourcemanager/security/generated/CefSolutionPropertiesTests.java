// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.models.CefSolutionProperties;
import com.azure.resourcemanager.security.models.ConnectedWorkspace;
import org.junit.jupiter.api.Assertions;

public final class CefSolutionPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CefSolutionProperties model = BinaryData.fromString(
            "{\"hostname\":\"fgsmdrjuqb\",\"agent\":\"tokljmtznpaxw\",\"lastEventReceived\":\"tyyqiprcltungb\",\"deviceVendor\":\"ljckmiigz\",\"deviceType\":\"uck\",\"workspace\":{\"id\":\"s\"},\"\":{\"swoykdn\":\"datatiiqqcqikclsmaln\"}}")
            .toObject(CefSolutionProperties.class);
        Assertions.assertEquals("ljckmiigz", model.deviceVendor());
        Assertions.assertEquals("uck", model.deviceType());
        Assertions.assertEquals("s", model.workspace().id());
        Assertions.assertEquals("fgsmdrjuqb", model.hostname());
        Assertions.assertEquals("tokljmtznpaxw", model.agent());
        Assertions.assertEquals("tyyqiprcltungb", model.lastEventReceived());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CefSolutionProperties model = new CefSolutionProperties().withDeviceVendor("ljckmiigz")
            .withDeviceType("uck")
            .withWorkspace(new ConnectedWorkspace().withId("s"))
            .withHostname("fgsmdrjuqb")
            .withAgent("tokljmtznpaxw")
            .withLastEventReceived("tyyqiprcltungb");
        model = BinaryData.fromObject(model).toObject(CefSolutionProperties.class);
        Assertions.assertEquals("ljckmiigz", model.deviceVendor());
        Assertions.assertEquals("uck", model.deviceType());
        Assertions.assertEquals("s", model.workspace().id());
        Assertions.assertEquals("fgsmdrjuqb", model.hostname());
        Assertions.assertEquals("tokljmtznpaxw", model.agent());
        Assertions.assertEquals("tyyqiprcltungb", model.lastEventReceived());
    }
}
