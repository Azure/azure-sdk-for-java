// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.models.CefSolutionProperties;
import com.azure.resourcemanager.security.models.ConnectedWorkspace;
import org.junit.jupiter.api.Assertions;

public final class CefSolutionPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CefSolutionProperties model = BinaryData.fromString(
            "{\"hostname\":\"wqsttewuvcys\",\"agent\":\"ufjxflpditfno\",\"lastEventReceived\":\"iyuxlvrh\",\"deviceVendor\":\"rvbwonleq\",\"deviceType\":\"vtlrvbstph\",\"workspace\":{\"id\":\"uninttlnrjdszd\"},\"\":{\"vgp\":\"dataiciqppo\",\"uhwfwj\":\"datae\",\"tfnressfepgck\":\"dataoxuo\",\"ym\":\"datacjmgvsnvbtqdxfm\"}}")
            .toObject(CefSolutionProperties.class);
        Assertions.assertEquals("rvbwonleq", model.deviceVendor());
        Assertions.assertEquals("vtlrvbstph", model.deviceType());
        Assertions.assertEquals("uninttlnrjdszd", model.workspace().id());
        Assertions.assertEquals("wqsttewuvcys", model.hostname());
        Assertions.assertEquals("ufjxflpditfno", model.agent());
        Assertions.assertEquals("iyuxlvrh", model.lastEventReceived());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CefSolutionProperties model = new CefSolutionProperties().withDeviceVendor("rvbwonleq")
            .withDeviceType("vtlrvbstph").withWorkspace(new ConnectedWorkspace().withId("uninttlnrjdszd"))
            .withHostname("wqsttewuvcys").withAgent("ufjxflpditfno").withLastEventReceived("iyuxlvrh");
        model = BinaryData.fromObject(model).toObject(CefSolutionProperties.class);
        Assertions.assertEquals("rvbwonleq", model.deviceVendor());
        Assertions.assertEquals("vtlrvbstph", model.deviceType());
        Assertions.assertEquals("uninttlnrjdszd", model.workspace().id());
        Assertions.assertEquals("wqsttewuvcys", model.hostname());
        Assertions.assertEquals("ufjxflpditfno", model.agent());
        Assertions.assertEquals("iyuxlvrh", model.lastEventReceived());
    }
}
