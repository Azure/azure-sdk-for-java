// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.SecurityContactInner;
import com.azure.resourcemanager.security.models.NotificationsSource;
import com.azure.resourcemanager.security.models.SecurityContactPropertiesNotificationsByRole;
import com.azure.resourcemanager.security.models.SecurityContactRole;
import com.azure.resourcemanager.security.models.State;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SecurityContactInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SecurityContactInner model = BinaryData.fromString(
            "{\"properties\":{\"emails\":\"arm\",\"phone\":\"dmjsjqb\",\"isEnabled\":true,\"notificationsSources\":[{\"sourceType\":\"NotificationsSource\"}],\"notificationsByRole\":{\"state\":\"Unsupported\",\"roles\":[\"AccountAdmin\"]}},\"id\":\"oduhp\",\"name\":\"xkgymareqnajxqu\",\"type\":\"jhkycub\"}")
            .toObject(SecurityContactInner.class);
        Assertions.assertEquals("arm", model.emails());
        Assertions.assertEquals("dmjsjqb", model.phone());
        Assertions.assertEquals(true, model.isEnabled());
        Assertions.assertEquals(State.UNSUPPORTED, model.notificationsByRole().state());
        Assertions.assertEquals(SecurityContactRole.ACCOUNT_ADMIN, model.notificationsByRole().roles().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SecurityContactInner model = new SecurityContactInner().withEmails("arm").withPhone("dmjsjqb")
            .withIsEnabled(true).withNotificationsSources(Arrays.asList(new NotificationsSource()))
            .withNotificationsByRole(new SecurityContactPropertiesNotificationsByRole().withState(State.UNSUPPORTED)
                .withRoles(Arrays.asList(SecurityContactRole.ACCOUNT_ADMIN)));
        model = BinaryData.fromObject(model).toObject(SecurityContactInner.class);
        Assertions.assertEquals("arm", model.emails());
        Assertions.assertEquals("dmjsjqb", model.phone());
        Assertions.assertEquals(true, model.isEnabled());
        Assertions.assertEquals(State.UNSUPPORTED, model.notificationsByRole().state());
        Assertions.assertEquals(SecurityContactRole.ACCOUNT_ADMIN, model.notificationsByRole().roles().get(0));
    }
}
