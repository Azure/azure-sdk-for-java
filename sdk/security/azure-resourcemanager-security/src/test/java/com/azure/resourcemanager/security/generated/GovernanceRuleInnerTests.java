// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.GovernanceRuleInner;
import com.azure.resourcemanager.security.models.GovernanceRuleEmailNotification;
import com.azure.resourcemanager.security.models.GovernanceRuleMetadata;
import com.azure.resourcemanager.security.models.GovernanceRuleOwnerSource;
import com.azure.resourcemanager.security.models.GovernanceRuleOwnerSourceType;
import com.azure.resourcemanager.security.models.GovernanceRuleSourceResourceType;
import com.azure.resourcemanager.security.models.GovernanceRuleType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class GovernanceRuleInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GovernanceRuleInner model = BinaryData.fromString(
            "{\"properties\":{\"tenantId\":\"lxgwimfnjhf\",\"displayName\":\"xw\",\"description\":\"zk\",\"remediationTimeframe\":\"oqreyfkzikfjawn\",\"isGracePeriod\":false,\"rulePriority\":841259449,\"isDisabled\":false,\"ruleType\":\"ServiceNow\",\"sourceResourceType\":\"Assessments\",\"excludedScopes\":[\"pcirelsfeaen\",\"abfatkl\",\"dxbjhwuaanozj\"],\"conditionSets\":[\"dataph\",\"dataoulpjrv\",\"dataag\",\"datarvimjwosytxitcsk\"],\"includeMemberScopes\":false,\"ownerSource\":{\"type\":\"ByTag\",\"value\":\"miekkezzikhlyfjh\"},\"governanceEmailNotification\":{\"disableManagerEmailNotification\":false,\"disableOwnerEmailNotification\":false},\"metadata\":{\"createdBy\":\"unygaeqid\",\"createdOn\":\"2021-08-07T13:11:54Z\",\"updatedBy\":\"t\",\"updatedOn\":\"2021-02-24T22:48:51Z\"}},\"id\":\"lr\",\"name\":\"cyjmoadsuvarmy\",\"type\":\"dmjsjqb\"}")
            .toObject(GovernanceRuleInner.class);
        Assertions.assertEquals("xw", model.displayName());
        Assertions.assertEquals("zk", model.description());
        Assertions.assertEquals("oqreyfkzikfjawn", model.remediationTimeframe());
        Assertions.assertEquals(false, model.isGracePeriod());
        Assertions.assertEquals(841259449, model.rulePriority());
        Assertions.assertEquals(false, model.isDisabled());
        Assertions.assertEquals(GovernanceRuleType.SERVICE_NOW, model.ruleType());
        Assertions.assertEquals(GovernanceRuleSourceResourceType.ASSESSMENTS, model.sourceResourceType());
        Assertions.assertEquals("pcirelsfeaen", model.excludedScopes().get(0));
        Assertions.assertEquals(false, model.includeMemberScopes());
        Assertions.assertEquals(GovernanceRuleOwnerSourceType.BY_TAG, model.ownerSource().type());
        Assertions.assertEquals("miekkezzikhlyfjh", model.ownerSource().value());
        Assertions.assertEquals(false, model.governanceEmailNotification().disableManagerEmailNotification());
        Assertions.assertEquals(false, model.governanceEmailNotification().disableOwnerEmailNotification());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GovernanceRuleInner model = new GovernanceRuleInner().withDisplayName("xw")
            .withDescription("zk")
            .withRemediationTimeframe("oqreyfkzikfjawn")
            .withIsGracePeriod(false)
            .withRulePriority(841259449)
            .withIsDisabled(false)
            .withRuleType(GovernanceRuleType.SERVICE_NOW)
            .withSourceResourceType(GovernanceRuleSourceResourceType.ASSESSMENTS)
            .withExcludedScopes(Arrays.asList("pcirelsfeaen", "abfatkl", "dxbjhwuaanozj"))
            .withConditionSets(Arrays.asList("dataph", "dataoulpjrv", "dataag", "datarvimjwosytxitcsk"))
            .withIncludeMemberScopes(false)
            .withOwnerSource(new GovernanceRuleOwnerSource().withType(GovernanceRuleOwnerSourceType.BY_TAG)
                .withValue("miekkezzikhlyfjh"))
            .withGovernanceEmailNotification(
                new GovernanceRuleEmailNotification().withDisableManagerEmailNotification(false)
                    .withDisableOwnerEmailNotification(false))
            .withMetadata(new GovernanceRuleMetadata());
        model = BinaryData.fromObject(model).toObject(GovernanceRuleInner.class);
        Assertions.assertEquals("xw", model.displayName());
        Assertions.assertEquals("zk", model.description());
        Assertions.assertEquals("oqreyfkzikfjawn", model.remediationTimeframe());
        Assertions.assertEquals(false, model.isGracePeriod());
        Assertions.assertEquals(841259449, model.rulePriority());
        Assertions.assertEquals(false, model.isDisabled());
        Assertions.assertEquals(GovernanceRuleType.SERVICE_NOW, model.ruleType());
        Assertions.assertEquals(GovernanceRuleSourceResourceType.ASSESSMENTS, model.sourceResourceType());
        Assertions.assertEquals("pcirelsfeaen", model.excludedScopes().get(0));
        Assertions.assertEquals(false, model.includeMemberScopes());
        Assertions.assertEquals(GovernanceRuleOwnerSourceType.BY_TAG, model.ownerSource().type());
        Assertions.assertEquals("miekkezzikhlyfjh", model.ownerSource().value());
        Assertions.assertEquals(false, model.governanceEmailNotification().disableManagerEmailNotification());
        Assertions.assertEquals(false, model.governanceEmailNotification().disableOwnerEmailNotification());
    }
}
