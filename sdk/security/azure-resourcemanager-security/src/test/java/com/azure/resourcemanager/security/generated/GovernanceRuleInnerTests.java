// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.GovernanceRuleInner;
import com.azure.resourcemanager.security.models.GovernanceRuleEmailNotification;
import com.azure.resourcemanager.security.models.GovernanceRuleMetadata;
import com.azure.resourcemanager.security.models.GovernanceRuleOwnerSource;
import com.azure.resourcemanager.security.models.GovernanceRuleOwnerSourceType;
import com.azure.resourcemanager.security.models.GovernanceRuleSourceResourceType;
import com.azure.resourcemanager.security.models.GovernanceRuleType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class GovernanceRuleInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GovernanceRuleInner model = BinaryData.fromString(
            "{\"properties\":{\"tenantId\":\"tnkdmkqj\",\"displayName\":\"lwuenvrkp\",\"description\":\"uaibrebqaaysj\",\"remediationTimeframe\":\"xqtnq\",\"isGracePeriod\":false,\"rulePriority\":442011268,\"isDisabled\":false,\"ruleType\":\"Integrated\",\"sourceResourceType\":\"Assessments\",\"excludedScopes\":[\"akpjpqqmtedlt\"],\"conditionSets\":[\"datajihy\",\"dataozphvwauyqncygu\",\"datakvi\"],\"includeMemberScopes\":true,\"ownerSource\":{\"type\":\"ByTag\",\"value\":\"xqupevzhf\"},\"governanceEmailNotification\":{\"disableManagerEmailNotification\":false,\"disableOwnerEmailNotification\":true},\"metadata\":{\"createdBy\":\"ujbypelmcuvhixb\",\"createdOn\":\"2021-07-14T21:41:35Z\",\"updatedBy\":\"w\",\"updatedOn\":\"2021-05-17T18:45:20Z\"}},\"id\":\"r\",\"name\":\"ool\",\"type\":\"ttpkiwkkbnujrywv\"}")
            .toObject(GovernanceRuleInner.class);
        Assertions.assertEquals("lwuenvrkp", model.displayName());
        Assertions.assertEquals("uaibrebqaaysj", model.description());
        Assertions.assertEquals("xqtnq", model.remediationTimeframe());
        Assertions.assertEquals(false, model.isGracePeriod());
        Assertions.assertEquals(442011268, model.rulePriority());
        Assertions.assertEquals(false, model.isDisabled());
        Assertions.assertEquals(GovernanceRuleType.INTEGRATED, model.ruleType());
        Assertions.assertEquals(GovernanceRuleSourceResourceType.ASSESSMENTS, model.sourceResourceType());
        Assertions.assertEquals("akpjpqqmtedlt", model.excludedScopes().get(0));
        Assertions.assertEquals(true, model.includeMemberScopes());
        Assertions.assertEquals(GovernanceRuleOwnerSourceType.BY_TAG, model.ownerSource().type());
        Assertions.assertEquals("xqupevzhf", model.ownerSource().value());
        Assertions.assertEquals(false, model.governanceEmailNotification().disableManagerEmailNotification());
        Assertions.assertEquals(true, model.governanceEmailNotification().disableOwnerEmailNotification());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GovernanceRuleInner model = new GovernanceRuleInner().withDisplayName("lwuenvrkp")
            .withDescription("uaibrebqaaysj").withRemediationTimeframe("xqtnq").withIsGracePeriod(false)
            .withRulePriority(442011268).withIsDisabled(false).withRuleType(GovernanceRuleType.INTEGRATED)
            .withSourceResourceType(GovernanceRuleSourceResourceType.ASSESSMENTS)
            .withExcludedScopes(Arrays.asList("akpjpqqmtedlt"))
            .withConditionSets(Arrays.asList("datajihy", "dataozphvwauyqncygu", "datakvi"))
            .withIncludeMemberScopes(true)
            .withOwnerSource(
                new GovernanceRuleOwnerSource().withType(GovernanceRuleOwnerSourceType.BY_TAG).withValue("xqupevzhf"))
            .withGovernanceEmailNotification(new GovernanceRuleEmailNotification()
                .withDisableManagerEmailNotification(false).withDisableOwnerEmailNotification(true))
            .withMetadata(new GovernanceRuleMetadata());
        model = BinaryData.fromObject(model).toObject(GovernanceRuleInner.class);
        Assertions.assertEquals("lwuenvrkp", model.displayName());
        Assertions.assertEquals("uaibrebqaaysj", model.description());
        Assertions.assertEquals("xqtnq", model.remediationTimeframe());
        Assertions.assertEquals(false, model.isGracePeriod());
        Assertions.assertEquals(442011268, model.rulePriority());
        Assertions.assertEquals(false, model.isDisabled());
        Assertions.assertEquals(GovernanceRuleType.INTEGRATED, model.ruleType());
        Assertions.assertEquals(GovernanceRuleSourceResourceType.ASSESSMENTS, model.sourceResourceType());
        Assertions.assertEquals("akpjpqqmtedlt", model.excludedScopes().get(0));
        Assertions.assertEquals(true, model.includeMemberScopes());
        Assertions.assertEquals(GovernanceRuleOwnerSourceType.BY_TAG, model.ownerSource().type());
        Assertions.assertEquals("xqupevzhf", model.ownerSource().value());
        Assertions.assertEquals(false, model.governanceEmailNotification().disableManagerEmailNotification());
        Assertions.assertEquals(true, model.governanceEmailNotification().disableOwnerEmailNotification());
    }
}
