// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.DescendantBehavior;
import com.azure.resourcemanager.security.models.DevOpsPolicyAssignment;
import com.azure.resourcemanager.security.models.DevOpsPolicyType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DevOpsPolicyAssignmentsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningStatusMessage\":\"fhpxnikouoxfalo\",\"provisioningStatusUpdateTimeUtc\":\"2021-03-12T16:22:03Z\",\"provisioningState\":\"DeletionFailure\",\"resourceId\":\"por\",\"descendantBehavior\":\"Unknown\",\"policy\":{\"policyName\":\"unbydlgfap\",\"policyId\":\"uubwts\",\"policyVersion\":\"nrt\",\"policyType\":\"Pipeline\"},\"assignedAt\":\"2021-03-14T08:21:58Z\"},\"id\":\"eeoxvqjmrnbl\",\"name\":\"hsdbfbm\",\"type\":\"ivixzhpjg\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<DevOpsPolicyAssignment> response = manager.devOpsPolicyAssignments()
            .list("tzeargvfvkhbj", "mvpjxsdhwe", "gnybffqcwwyne", "ktvmwgvconyse", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("por", response.iterator().next().properties().resourceId());
        Assertions.assertEquals(DescendantBehavior.UNKNOWN,
            response.iterator().next().properties().descendantBehavior());
        Assertions.assertEquals("unbydlgfap", response.iterator().next().properties().policy().policyName());
        Assertions.assertEquals("uubwts", response.iterator().next().properties().policy().policyId());
        Assertions.assertEquals("nrt", response.iterator().next().properties().policy().policyVersion());
        Assertions.assertEquals(DevOpsPolicyType.PIPELINE,
            response.iterator().next().properties().policy().policyType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-14T08:21:58Z"),
            response.iterator().next().properties().assignedAt());
    }
}
