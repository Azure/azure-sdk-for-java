// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.GetSensitivitySettingsResponse;
import com.azure.resourcemanager.security.models.MipIntegrationStatus;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SensitivitySettingsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"sensitiveInfoTypesIds\":[\"bf87a7d0-eb18-4a60-a403-cb727bc633bc\",\"273caa31-370b-4a18-871d-6d7addf0df69\"],\"sensitivityThresholdLabelOrder\":73.90602,\"sensitivityThresholdLabelId\":\"dd48a6c4-89b5-4778-8c5d-0a346c9a932a\",\"mipInformation\":{\"mipIntegrationStatus\":\"noMipLabels\",\"labels\":[{\"name\":\"blpectsmwpg\",\"id\":\"b1436e40-ebe2-4d31-9716-b6e10b3096e5\",\"order\":61.57176},{\"name\":\"bjqlqfbl\",\"id\":\"31f4f7ae-d8e1-4ba5-aed9-ea43479f1be0\",\"order\":1.8061817}],\"customInfoTypes\":[{\"name\":\"c\",\"id\":\"30388f17-9198-4530-bf42-05491ee571e8\",\"description\":\"ucihbymjjvt\"},{\"name\":\"erx\",\"id\":\"c5a56a94-5151-4123-be41-004243dedcf7\",\"description\":\"azra\"},{\"name\":\"lhbimyii\",\"id\":\"8e47eccb-5ea6-462a-8131-ee6af4e81ae3\",\"description\":\"mcthtpqgf\"}],\"builtInInfoTypes\":[{\"name\":\"i\",\"id\":\"3cfb36a8-5a6b-4d41-9445-45f4bdc82618\",\"type\":\"iuvflgzhcwjgwahc\"},{\"name\":\"ofgrutvnp\",\"id\":\"bee4c59c-8bf3-4022-a602-6857c8473b8c\",\"type\":\"zivxpmh\"}]}},\"id\":\"ghhh\",\"name\":\"vnnjd\",\"type\":\"ujqzvhnjvpmxnht\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        GetSensitivitySettingsResponse response
            = manager.sensitivitySettings().getWithResponse(com.azure.core.util.Context.NONE).getValue();

        Assertions.assertEquals(UUID.fromString("bf87a7d0-eb18-4a60-a403-cb727bc633bc"),
            response.properties().sensitiveInfoTypesIds().get(0));
        Assertions.assertEquals(73.90602F, response.properties().sensitivityThresholdLabelOrder());
        Assertions.assertEquals(UUID.fromString("dd48a6c4-89b5-4778-8c5d-0a346c9a932a"),
            response.properties().sensitivityThresholdLabelId());
        Assertions.assertEquals(MipIntegrationStatus.NO_MIP_LABELS,
            response.properties().mipInformation().mipIntegrationStatus());
        Assertions.assertEquals("blpectsmwpg", response.properties().mipInformation().labels().get(0).name());
        Assertions.assertEquals(UUID.fromString("b1436e40-ebe2-4d31-9716-b6e10b3096e5"),
            response.properties().mipInformation().labels().get(0).id());
        Assertions.assertEquals(61.57176F, response.properties().mipInformation().labels().get(0).order());
        Assertions.assertEquals("c", response.properties().mipInformation().customInfoTypes().get(0).name());
        Assertions.assertEquals(UUID.fromString("30388f17-9198-4530-bf42-05491ee571e8"),
            response.properties().mipInformation().customInfoTypes().get(0).id());
        Assertions.assertEquals("ucihbymjjvt",
            response.properties().mipInformation().customInfoTypes().get(0).description());
        Assertions.assertEquals("i", response.properties().mipInformation().builtInInfoTypes().get(0).name());
        Assertions.assertEquals(UUID.fromString("3cfb36a8-5a6b-4d41-9445-45f4bdc82618"),
            response.properties().mipInformation().builtInInfoTypes().get(0).id());
        Assertions.assertEquals("iuvflgzhcwjgwahc",
            response.properties().mipInformation().builtInInfoTypes().get(0).type());
    }
}
