// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.IoTSecuritySolutionAnalyticsModel;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class IotSecuritySolutionAnalyticsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"metrics\":{\"high\":2106353717333542413,\"medium\":2495792659584777574,\"low\":888997741715265005},\"unhealthyDeviceCount\":7144146952971948556,\"devicesMetrics\":[{\"date\":\"2021-04-26T04:39:07Z\",\"devicesMetrics\":{\"high\":4474660509534381203,\"medium\":2598312881697253685,\"low\":4314766624751861639}},{\"date\":\"2021-08-01T22:41:17Z\",\"devicesMetrics\":{\"high\":1471409114928873153,\"medium\":4888073699254605947,\"low\":282350342881437245}},{\"date\":\"2021-01-17T01:24:01Z\",\"devicesMetrics\":{\"high\":731605863112129795,\"medium\":4754909248045802106,\"low\":8735597685101657337}},{\"date\":\"2021-03-02T19:12:56Z\",\"devicesMetrics\":{\"high\":1182851245333857044,\"medium\":9152650178246753410,\"low\":3498123734109881598}}],\"topAlertedDevices\":[{\"deviceId\":\"qrmlujmtunl\",\"alertsCount\":1128642496899929588},{\"deviceId\":\"ebfqvmpjbh\",\"alertsCount\":1385710843394042952},{\"deviceId\":\"spe\",\"alertsCount\":8730955078840896328}],\"mostPrevalentDeviceAlerts\":[{\"alertDisplayName\":\"hdlckdoxocjc\",\"reportedSeverity\":\"Medium\",\"alertsCount\":1508351154753315430},{\"alertDisplayName\":\"eortwwyjmgvr\",\"reportedSeverity\":\"Informational\",\"alertsCount\":3936908695345671492},{\"alertDisplayName\":\"jnnhbcjywkdywks\",\"reportedSeverity\":\"High\",\"alertsCount\":5170210787561472476},{\"alertDisplayName\":\"nefictptplko\",\"reportedSeverity\":\"Informational\",\"alertsCount\":778199307919959010}],\"mostPrevalentDeviceRecommendations\":[{\"recommendationDisplayName\":\"wdqzuhfgt\",\"reportedSeverity\":\"Low\",\"devicesCount\":7203810234564800810},{\"recommendationDisplayName\":\"dccjny\",\"reportedSeverity\":\"Informational\",\"devicesCount\":5066454727952958188},{\"recommendationDisplayName\":\"jcgjtjkntomnl\",\"reportedSeverity\":\"Informational\",\"devicesCount\":1773062008304269582}]},\"id\":\"szsbzrrxeyv\",\"name\":\"d\",\"type\":\"owlrmbdctqxav\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        IoTSecuritySolutionAnalyticsModel response = manager.iotSecuritySolutionAnalytics()
            .getWithResponse("hlugfnlvvk", "wurxdqhv", com.azure.core.util.Context.NONE)
            .getValue();

    }
}
