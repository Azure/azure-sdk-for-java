// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.IoTSecuritySolutionAnalyticsModel;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class IotSecuritySolutionAnalyticsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"metrics\":{\"high\":3718581005296196648,\"medium\":4283775348615644989,\"low\":4025470059437781017},\"unhealthyDeviceCount\":4619464062207647079,\"devicesMetrics\":[{\"date\":\"2021-06-30T11:44:45Z\",\"devicesMetrics\":{\"high\":3838803535124986837,\"medium\":2455548528781852510,\"low\":4807900032809026267}},{\"date\":\"2021-03-09T20:36Z\",\"devicesMetrics\":{\"high\":412733890007149133,\"medium\":1903193819771828452,\"low\":3984105650425872737}}],\"topAlertedDevices\":[{\"deviceId\":\"zhvojyffwflbk\",\"alertsCount\":6279618288493315515},{\"deviceId\":\"iyg\",\"alertsCount\":2136869942230440532}],\"mostPrevalentDeviceAlerts\":[{\"alertDisplayName\":\"fpubaldjc\",\"reportedSeverity\":\"High\",\"alertsCount\":870303833198294884}],\"mostPrevalentDeviceRecommendations\":[{\"recommendationDisplayName\":\"kbhzi\",\"reportedSeverity\":\"Medium\",\"devicesCount\":5045460224599547877}]},\"id\":\"jbfomfbozpjyxe\",\"name\":\"ppqcwdnn\",\"type\":\"jthp\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        IoTSecuritySolutionAnalyticsModel response = manager.iotSecuritySolutionAnalytics()
            .getWithResponse("chxzj", "cwuzs", com.azure.core.util.Context.NONE)
            .getValue();

    }
}
