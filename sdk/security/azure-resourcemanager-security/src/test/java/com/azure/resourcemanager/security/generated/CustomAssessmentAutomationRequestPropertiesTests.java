// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.CustomAssessmentAutomationRequestProperties;
import com.azure.resourcemanager.security.models.SeverityEnum;
import com.azure.resourcemanager.security.models.SupportedCloudEnum;
import org.junit.jupiter.api.Assertions;

public final class CustomAssessmentAutomationRequestPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CustomAssessmentAutomationRequestProperties model = BinaryData.fromString(
            "{\"compressedQuery\":\"mnguxawqaldsyu\",\"supportedCloud\":\"GCP\",\"severity\":\"Medium\",\"displayName\":\"qfobwyz\",\"description\":\"bykutw\",\"remediationDescription\":\"hpagm\"}")
            .toObject(CustomAssessmentAutomationRequestProperties.class);
        Assertions.assertEquals("mnguxawqaldsyu", model.compressedQuery());
        Assertions.assertEquals(SupportedCloudEnum.GCP, model.supportedCloud());
        Assertions.assertEquals(SeverityEnum.MEDIUM, model.severity());
        Assertions.assertEquals("qfobwyz", model.displayName());
        Assertions.assertEquals("bykutw", model.description());
        Assertions.assertEquals("hpagm", model.remediationDescription());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CustomAssessmentAutomationRequestProperties model
            = new CustomAssessmentAutomationRequestProperties().withCompressedQuery("mnguxawqaldsyu")
                .withSupportedCloud(SupportedCloudEnum.GCP).withSeverity(SeverityEnum.MEDIUM).withDisplayName("qfobwyz")
                .withDescription("bykutw").withRemediationDescription("hpagm");
        model = BinaryData.fromObject(model).toObject(CustomAssessmentAutomationRequestProperties.class);
        Assertions.assertEquals("mnguxawqaldsyu", model.compressedQuery());
        Assertions.assertEquals(SupportedCloudEnum.GCP, model.supportedCloud());
        Assertions.assertEquals(SeverityEnum.MEDIUM, model.severity());
        Assertions.assertEquals("qfobwyz", model.displayName());
        Assertions.assertEquals("bykutw", model.description());
        Assertions.assertEquals("hpagm", model.remediationDescription());
    }
}
