// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.CustomAssessmentAutomationRequestProperties;
import com.azure.resourcemanager.security.models.SeverityEnum;
import com.azure.resourcemanager.security.models.SupportedCloudEnum;
import org.junit.jupiter.api.Assertions;

public final class CustomAssessmentAutomationRequestPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CustomAssessmentAutomationRequestProperties model = BinaryData.fromString(
            "{\"compressedQuery\":\"ibqdxbxwakbogqx\",\"supportedCloud\":\"GCP\",\"severity\":\"Medium\",\"displayName\":\"xhuri\",\"description\":\"bpodxunkbebxm\",\"remediationDescription\":\"yyntwl\"}")
            .toObject(CustomAssessmentAutomationRequestProperties.class);
        Assertions.assertEquals("ibqdxbxwakbogqx", model.compressedQuery());
        Assertions.assertEquals(SupportedCloudEnum.GCP, model.supportedCloud());
        Assertions.assertEquals(SeverityEnum.MEDIUM, model.severity());
        Assertions.assertEquals("xhuri", model.displayName());
        Assertions.assertEquals("bpodxunkbebxm", model.description());
        Assertions.assertEquals("yyntwl", model.remediationDescription());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CustomAssessmentAutomationRequestProperties model
            = new CustomAssessmentAutomationRequestProperties().withCompressedQuery("ibqdxbxwakbogqx")
                .withSupportedCloud(SupportedCloudEnum.GCP)
                .withSeverity(SeverityEnum.MEDIUM)
                .withDisplayName("xhuri")
                .withDescription("bpodxunkbebxm")
                .withRemediationDescription("yyntwl");
        model = BinaryData.fromObject(model).toObject(CustomAssessmentAutomationRequestProperties.class);
        Assertions.assertEquals("ibqdxbxwakbogqx", model.compressedQuery());
        Assertions.assertEquals(SupportedCloudEnum.GCP, model.supportedCloud());
        Assertions.assertEquals(SeverityEnum.MEDIUM, model.severity());
        Assertions.assertEquals("xhuri", model.displayName());
        Assertions.assertEquals("bpodxunkbebxm", model.description());
        Assertions.assertEquals("yyntwl", model.remediationDescription());
    }
}
