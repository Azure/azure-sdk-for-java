// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.RuleResults;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SqlVulnerabilityAssessmentBaselineRulesCreateOrUpdateWithResponseMockTests {
    @Test
    public void testCreateOrUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"results\":[[\"izeq\",\"fopvnopmotdsfhox\",\"lyo\",\"zyfbkmvldzmxojz\"],[\"ma\",\"gbqkvhyejthgeecb\",\"ergwlckihbam\",\"qsokknpug\"],[\"wdizc\",\"jixiujzkc\",\"exgkrsw\",\"sykkbxktxbbwl\"]]},\"id\":\"nwzoknvu\",\"name\":\"ddlggb\",\"type\":\"a\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        RuleResults response = manager.sqlVulnerabilityAssessmentBaselineRules()
            .define("gwfmsxjwdylwxm")
            .withExistingResourceId("ugeerclbltbhpwac")
            .withLatestScan(true)
            .withResults(Arrays.asList(Arrays.asList("wmvwryvdi", "kiikgpruccwmecbt", "syt"),
                Arrays.asList("exe", "wmrqjyw"), Arrays.asList("hvycfjncindi", "oqkajwjuriarsbc", "lanhzcknjxizba"),
                Arrays.asList("ygzkztxfexwacyy", "mlxppdndzkfevuii", "iib", "kcj")))
            .withWorkspaceId("zjow")
            .create();

        Assertions.assertEquals("izeq", response.properties().results().get(0).get(0));
    }
}
