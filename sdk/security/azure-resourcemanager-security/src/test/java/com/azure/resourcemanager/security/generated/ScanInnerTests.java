// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.ScanInner;
import com.azure.resourcemanager.security.models.ScanProperties;
import com.azure.resourcemanager.security.models.ScanState;
import com.azure.resourcemanager.security.models.ScanTriggerType;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class ScanInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ScanInner model = BinaryData.fromString(
            "{\"properties\":{\"triggerType\":\"Recurring\",\"state\":\"InProgress\",\"server\":\"mligov\",\"database\":\"rxkpmloazuruoc\",\"sqlVersion\":\"oorb\",\"startTime\":\"2021-08-02T17:26:36Z\",\"endTime\":\"2021-05-01T19:42:34Z\",\"highSeverityFailedRulesCount\":1010160642,\"mediumSeverityFailedRulesCount\":725653183,\"lowSeverityFailedRulesCount\":1900106080,\"totalPassedRulesCount\":1317019798,\"totalFailedRulesCount\":889333374,\"totalRulesCount\":1902606328,\"isBaselineApplied\":false,\"lastScanTime\":\"2021-09-24T00:40:29Z\"},\"id\":\"lmywwtkgkxnyed\",\"name\":\"b\",\"type\":\"yvudtjuewbci\"}")
            .toObject(ScanInner.class);
        Assertions.assertEquals(ScanTriggerType.RECURRING, model.properties().triggerType());
        Assertions.assertEquals(ScanState.IN_PROGRESS, model.properties().state());
        Assertions.assertEquals("mligov", model.properties().server());
        Assertions.assertEquals("rxkpmloazuruoc", model.properties().database());
        Assertions.assertEquals("oorb", model.properties().sqlVersion());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-02T17:26:36Z"), model.properties().startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-01T19:42:34Z"), model.properties().endTime());
        Assertions.assertEquals(1010160642, model.properties().highSeverityFailedRulesCount());
        Assertions.assertEquals(725653183, model.properties().mediumSeverityFailedRulesCount());
        Assertions.assertEquals(1900106080, model.properties().lowSeverityFailedRulesCount());
        Assertions.assertEquals(1317019798, model.properties().totalPassedRulesCount());
        Assertions.assertEquals(889333374, model.properties().totalFailedRulesCount());
        Assertions.assertEquals(1902606328, model.properties().totalRulesCount());
        Assertions.assertEquals(false, model.properties().isBaselineApplied());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-24T00:40:29Z"), model.properties().lastScanTime());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ScanInner model = new ScanInner().withProperties(new ScanProperties().withTriggerType(ScanTriggerType.RECURRING)
            .withState(ScanState.IN_PROGRESS).withServer("mligov").withDatabase("rxkpmloazuruoc").withSqlVersion("oorb")
            .withStartTime(OffsetDateTime.parse("2021-08-02T17:26:36Z"))
            .withEndTime(OffsetDateTime.parse("2021-05-01T19:42:34Z")).withHighSeverityFailedRulesCount(1010160642)
            .withMediumSeverityFailedRulesCount(725653183).withLowSeverityFailedRulesCount(1900106080)
            .withTotalPassedRulesCount(1317019798).withTotalFailedRulesCount(889333374).withTotalRulesCount(1902606328)
            .withIsBaselineApplied(false).withLastScanTime(OffsetDateTime.parse("2021-09-24T00:40:29Z")));
        model = BinaryData.fromObject(model).toObject(ScanInner.class);
        Assertions.assertEquals(ScanTriggerType.RECURRING, model.properties().triggerType());
        Assertions.assertEquals(ScanState.IN_PROGRESS, model.properties().state());
        Assertions.assertEquals("mligov", model.properties().server());
        Assertions.assertEquals("rxkpmloazuruoc", model.properties().database());
        Assertions.assertEquals("oorb", model.properties().sqlVersion());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-02T17:26:36Z"), model.properties().startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-01T19:42:34Z"), model.properties().endTime());
        Assertions.assertEquals(1010160642, model.properties().highSeverityFailedRulesCount());
        Assertions.assertEquals(725653183, model.properties().mediumSeverityFailedRulesCount());
        Assertions.assertEquals(1900106080, model.properties().lowSeverityFailedRulesCount());
        Assertions.assertEquals(1317019798, model.properties().totalPassedRulesCount());
        Assertions.assertEquals(889333374, model.properties().totalFailedRulesCount());
        Assertions.assertEquals(1902606328, model.properties().totalRulesCount());
        Assertions.assertEquals(false, model.properties().isBaselineApplied());
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-24T00:40:29Z"), model.properties().lastScanTime());
    }
}
