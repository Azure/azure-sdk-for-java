// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.Automation;
import com.azure.resourcemanager.security.models.EventSource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AutomationsGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"description\":\"pxrhrfj\",\"isEnabled\":true,\"scopes\":[{\"description\":\"efiktlhqashtost\",\"scopePath\":\"xyzsecigzzd\"},{\"description\":\"tacfvvtdpcbp\",\"scopePath\":\"omcsaugbrhfiwltk\"},{\"description\":\"su\",\"scopePath\":\"ethklxwhcv\"}],\"sources\":[{\"eventSource\":\"AttackPaths\",\"ruleSets\":[{},{},{}]},{\"eventSource\":\"AssessmentsSnapshot\",\"ruleSets\":[{},{}]},{\"eventSource\":\"AttackPathsSnapshot\",\"ruleSets\":[{},{},{},{}]}],\"actions\":[{\"actionType\":\"AutomationAction\"},{\"actionType\":\"AutomationAction\"}]},\"location\":\"yxxhwrlqom\",\"tags\":{\"rwnrzo\":\"yilpzz\",\"ksybvrrbnhylsb\":\"sxagysokli\",\"yllm\":\"ujcy\",\"zsyqagqllcbrvaid\":\"vpst\"},\"id\":\"lkyhtrrqwfyybpt\",\"name\":\"jjrnogykugdlavsa\",\"type\":\"gthkslgeu\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Automation response = manager.automations()
            .getByResourceGroupWithResponse("wofxxdplrel", "kvgahcbtu", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("yxxhwrlqom", response.location());
        Assertions.assertEquals("yilpzz", response.tags().get("rwnrzo"));
        Assertions.assertEquals("pxrhrfj", response.description());
        Assertions.assertEquals(true, response.isEnabled());
        Assertions.assertEquals("efiktlhqashtost", response.scopes().get(0).description());
        Assertions.assertEquals("xyzsecigzzd", response.scopes().get(0).scopePath());
        Assertions.assertEquals(EventSource.ATTACK_PATHS, response.sources().get(0).eventSource());
    }
}
