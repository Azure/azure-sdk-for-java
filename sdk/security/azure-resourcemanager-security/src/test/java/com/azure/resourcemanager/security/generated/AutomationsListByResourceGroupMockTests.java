// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.Automation;
import com.azure.resourcemanager.security.models.EventSource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AutomationsListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"description\":\"hsldqd\",\"isEnabled\":true,\"scopes\":[{\"description\":\"yevdy\",\"scopePath\":\"sytciksw\"}],\"sources\":[{\"eventSource\":\"AttackPathsSnapshot\",\"ruleSets\":[{}]},{\"eventSource\":\"Assessments\",\"ruleSets\":[{},{},{}]},{\"eventSource\":\"SubAssessments\",\"ruleSets\":[{},{},{}]},{\"eventSource\":\"SubAssessments\",\"ruleSets\":[{}]}],\"actions\":[{\"actionType\":\"AutomationAction\"}]},\"location\":\"rpbatvyrkljqkqw\",\"tags\":{\"y\":\"tvjkowggxawwdm\",\"g\":\"nkteiidlbovwbclp\",\"kjcnerek\":\"gani\",\"gpwxtvce\":\"julskwwnqhql\"},\"id\":\"avv\",\"name\":\"vxwve\",\"type\":\"enlrjcsmwevgu\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Automation> response
            = manager.automations().listByResourceGroup("xooqohgpncdmwkh", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("rpbatvyrkljqkqw", response.iterator().next().location());
        Assertions.assertEquals("tvjkowggxawwdm", response.iterator().next().tags().get("y"));
        Assertions.assertEquals("hsldqd", response.iterator().next().description());
        Assertions.assertEquals(true, response.iterator().next().isEnabled());
        Assertions.assertEquals("yevdy", response.iterator().next().scopes().get(0).description());
        Assertions.assertEquals("sytciksw", response.iterator().next().scopes().get(0).scopePath());
        Assertions.assertEquals(EventSource.ATTACK_PATHS_SNAPSHOT,
            response.iterator().next().sources().get(0).eventSource());
    }
}
