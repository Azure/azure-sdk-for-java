// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.models.GitHubRepositoryProperties;
import com.azure.resourcemanager.security.models.OnboardingState;
import org.junit.jupiter.api.Assertions;

public final class GitHubRepositoryPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GitHubRepositoryProperties model = BinaryData.fromString(
            "{\"provisioningStatusMessage\":\"n\",\"provisioningStatusUpdateTimeUtc\":\"2020-12-23T10:44:35Z\",\"provisioningState\":\"Failed\",\"repoId\":\"nkcoeqswankltyt\",\"repoName\":\"droznn\",\"repoFullName\":\"rlktgjcsggu\",\"onboardingState\":\"NotApplicable\",\"repoUrl\":\"lwywae\",\"parentOwnerName\":\"zgfbukklelssx\"}")
            .toObject(GitHubRepositoryProperties.class);
        Assertions.assertEquals(OnboardingState.NOT_APPLICABLE, model.onboardingState());
        Assertions.assertEquals("zgfbukklelssx", model.parentOwnerName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GitHubRepositoryProperties model
            = new GitHubRepositoryProperties().withOnboardingState(OnboardingState.NOT_APPLICABLE)
                .withParentOwnerName("zgfbukklelssx");
        model = BinaryData.fromObject(model).toObject(GitHubRepositoryProperties.class);
        Assertions.assertEquals(OnboardingState.NOT_APPLICABLE, model.onboardingState());
        Assertions.assertEquals("zgfbukklelssx", model.parentOwnerName());
    }
}
