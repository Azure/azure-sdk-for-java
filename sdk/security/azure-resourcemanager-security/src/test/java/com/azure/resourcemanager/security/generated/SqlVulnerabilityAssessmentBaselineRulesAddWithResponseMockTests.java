// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.RulesResults;
import com.azure.resourcemanager.security.models.RulesResultsInput;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SqlVulnerabilityAssessmentBaselineRulesAddWithResponseMockTests {
    @Test
    public void testAddWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"results\":[[\"nalbad\",\"isj\",\"leajvmvvlooub\"]]},\"id\":\"fxipjeop\",\"name\":\"kgocj\",\"type\":\"mlupfazusjcdhusl\"},{\"properties\":{\"results\":[[\"gdqyxajc\",\"grcavqc\"],[\"zoq\",\"kmqcww\",\"jnk\",\"ixepbntqqwwg\"],[\"sqxile\",\"ejse\",\"rznequqyntt\"]]},\"id\":\"knhajksbsyogjm\",\"name\":\"jhgcydijnmcvjb\",\"type\":\"sfcriqxzix\"},{\"properties\":{\"results\":[[\"mvcdkucpxpyaf\",\"wrgorogeuvmkrs\",\"nr\",\"jseml\"],[\"frsnqpljp\",\"tex\"],[\"ikelpmwgr\",\"ub\",\"udhvos\"],[\"zscueza\",\"ivdfwgqjh\",\"wc\",\"frxgg\"]]},\"id\":\"zkhzpriqi\",\"name\":\"senerr\",\"type\":\"syzaivnp\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        RulesResults response
            = manager.sqlVulnerabilityAssessmentBaselineRules()
                .addWithResponse("gfqpmq", "xpjhcfaaradci", new RulesResultsInput().withLatestScan(true)
                    .withResults(mapOf("ecvtamqwzmno",
                        Arrays.asList(Arrays.asList("ugr", "lwalaossnqe"), Arrays.asList("otbptg", "sman", "xrwqfmd")),
                        "qnzjcyqqz", Arrays.asList(Arrays.asList("wwps", "bxovuqo", "jrkblndyclwgycv")))),
                    com.azure.core.util.Context.NONE)
                .getValue();

        Assertions.assertEquals("nalbad", response.value().get(0).properties().results().get(0).get(0));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
