// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.DeviceSecurityGroup;
import java.nio.charset.StandardCharsets;
import java.time.Duration;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DeviceSecurityGroupsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"thresholdRules\":[{\"ruleType\":\"ThresholdCustomAlertRule\",\"minThreshold\":751041485,\"maxThreshold\":463306706,\"displayName\":\"vl\",\"description\":\"bjsarxsvmfpa\",\"isEnabled\":true},{\"ruleType\":\"ThresholdCustomAlertRule\",\"minThreshold\":98049556,\"maxThreshold\":11326826,\"displayName\":\"gfgqpudhgxgiea\",\"description\":\"fpxxav\",\"isEnabled\":false},{\"ruleType\":\"ThresholdCustomAlertRule\",\"minThreshold\":1017150164,\"maxThreshold\":1304076694,\"displayName\":\"gsnuhwy\",\"description\":\"sfmaxcebnbeo\",\"isEnabled\":true}],\"timeWindowRules\":[{\"ruleType\":\"TimeWindowCustomAlertRule\",\"timeWindowSize\":\"PT188H10M\",\"minThreshold\":1313140409,\"maxThreshold\":261913504,\"displayName\":\"wqxpjpvemdfkhtt\",\"description\":\"brxz\",\"isEnabled\":false},{\"ruleType\":\"TimeWindowCustomAlertRule\",\"timeWindowSize\":\"PT158H42M21S\",\"minThreshold\":1807910649,\"maxThreshold\":245641643,\"displayName\":\"jk\",\"description\":\"eecwtfm\",\"isEnabled\":true},{\"ruleType\":\"TimeWindowCustomAlertRule\",\"timeWindowSize\":\"PT100H59M29S\",\"minThreshold\":4708566,\"maxThreshold\":1811271519,\"displayName\":\"htwofxfmhlv\",\"description\":\"nslbqr\",\"isEnabled\":true}],\"allowlistRules\":[{\"ruleType\":\"AllowlistCustomAlertRule\",\"allowlistValues\":[\"ekhjgq\",\"rugwesps\"],\"valueType\":\"String\",\"displayName\":\"spt\",\"description\":\"wozfvza\",\"isEnabled\":false},{\"ruleType\":\"AllowlistCustomAlertRule\",\"allowlistValues\":[\"cv\",\"gx\",\"vwio\",\"hcmcgm\"],\"valueType\":\"String\",\"displayName\":\"vqxuyiarznhdqse\",\"description\":\"dlmajpuyxo\",\"isEnabled\":false},{\"ruleType\":\"AllowlistCustomAlertRule\",\"allowlistValues\":[\"mzgccy\",\"buvmsiehedmmv\",\"neeyrxparxtz\"],\"valueType\":\"String\",\"displayName\":\"ddigeblsplzdss\",\"description\":\"wveeozbjkj\",\"isEnabled\":false},{\"ruleType\":\"AllowlistCustomAlertRule\",\"allowlistValues\":[\"zdnuehxwltss\",\"dyw\"],\"valueType\":\"String\",\"displayName\":\"ge\",\"description\":\"actsawvxcimpthjr\",\"isEnabled\":true}],\"denylistRules\":[{\"ruleType\":\"DenylistCustomAlertRule\",\"denylistValues\":[\"slubnknyf\",\"ysj\"],\"valueType\":\"String\",\"displayName\":\"llfswarmybwmro\",\"description\":\"eysyqnipehfwwcbf\",\"isEnabled\":false}]},\"id\":\"iajuvjucf\",\"name\":\"isosfzl\",\"type\":\"raxnfyzguax\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<DeviceSecurityGroup> response
            = manager.deviceSecurityGroups().list("icxhsevmnkggh", com.azure.core.util.Context.NONE);

        Assertions.assertEquals(true, response.iterator().next().thresholdRules().get(0).isEnabled());
        Assertions.assertEquals(751041485, response.iterator().next().thresholdRules().get(0).minThreshold());
        Assertions.assertEquals(463306706, response.iterator().next().thresholdRules().get(0).maxThreshold());
        Assertions.assertEquals(false, response.iterator().next().timeWindowRules().get(0).isEnabled());
        Assertions.assertEquals(1313140409, response.iterator().next().timeWindowRules().get(0).minThreshold());
        Assertions.assertEquals(261913504, response.iterator().next().timeWindowRules().get(0).maxThreshold());
        Assertions.assertEquals(Duration.parse("PT188H10M"),
            response.iterator().next().timeWindowRules().get(0).timeWindowSize());
        Assertions.assertEquals(false, response.iterator().next().allowlistRules().get(0).isEnabled());
        Assertions.assertEquals("ekhjgq", response.iterator().next().allowlistRules().get(0).allowlistValues().get(0));
        Assertions.assertEquals(false, response.iterator().next().denylistRules().get(0).isEnabled());
        Assertions.assertEquals("slubnknyf", response.iterator().next().denylistRules().get(0).denylistValues().get(0));
    }
}
