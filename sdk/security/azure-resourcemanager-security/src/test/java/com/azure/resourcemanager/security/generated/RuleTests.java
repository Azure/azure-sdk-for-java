// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.models.Direction;
import com.azure.resourcemanager.security.models.Rule;
import com.azure.resourcemanager.security.models.TransportProtocol;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RuleTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        Rule model = BinaryData.fromString(
            "{\"name\":\"vogygzyvneez\",\"direction\":\"Inbound\",\"destinationPort\":1673103368,\"protocols\":[\"TCP\",\"UDP\",\"UDP\"],\"ipAddresses\":[\"ffhzbkrkjjjavfq\",\"vhnqo\"]}")
            .toObject(Rule.class);
        Assertions.assertEquals("vogygzyvneez", model.name());
        Assertions.assertEquals(Direction.INBOUND, model.direction());
        Assertions.assertEquals(1673103368, model.destinationPort());
        Assertions.assertEquals(TransportProtocol.TCP, model.protocols().get(0));
        Assertions.assertEquals("ffhzbkrkjjjavfq", model.ipAddresses().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        Rule model = new Rule().withName("vogygzyvneez")
            .withDirection(Direction.INBOUND)
            .withDestinationPort(1673103368)
            .withProtocols(Arrays.asList(TransportProtocol.TCP, TransportProtocol.UDP, TransportProtocol.UDP))
            .withIpAddresses(Arrays.asList("ffhzbkrkjjjavfq", "vhnqo"));
        model = BinaryData.fromObject(model).toObject(Rule.class);
        Assertions.assertEquals("vogygzyvneez", model.name());
        Assertions.assertEquals(Direction.INBOUND, model.direction());
        Assertions.assertEquals(1673103368, model.destinationPort());
        Assertions.assertEquals(TransportProtocol.TCP, model.protocols().get(0));
        Assertions.assertEquals("ffhzbkrkjjjavfq", model.ipAddresses().get(0));
    }
}
