// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.models.Baseline;
import com.azure.resourcemanager.security.models.BaselineAdjustedResult;
import com.azure.resourcemanager.security.models.RuleStatus;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class BaselineAdjustedResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BaselineAdjustedResult model =
            BinaryData
                .fromString(
                    "{\"baseline\":{\"expectedResults\":[[\"hjq\"],[\"pyeicxm\",\"ciwqvhk\",\"ixuigdtopbobj\",\"ghmewuam\"],[\"hrzayvvtpgvdf\",\"iotkftutqxl\",\"gxlefgugnxkrxd\"]],\"updatedTime\":\"2021-08-28T06:39:58Z\"},\"status\":\"Finding\",\"resultsNotInBaseline\":[[\"rvqdra\",\"hjybigehoqfbo\"],[\"kanyktzlcuiywg\",\"ywgndrv\"]],\"resultsOnlyInBaseline\":[[\"gpphrcgyn\",\"ocpecfvmmco\",\"fsxlzevgbmqjqa\",\"c\"],[\"mivkwlzuvcc\",\"wnfnbacf\",\"onlebxetqgtzxdpn\"],[\"qqwx\",\"jfeallnwsub\"],[\"njampm\",\"gnzscxaqwo\",\"chcbonqvpkvlrxnj\"]]}")
                .toObject(BaselineAdjustedResult.class);
        Assertions.assertEquals("hjq", model.baseline().expectedResults().get(0).get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-28T06:39:58Z"), model.baseline().updatedTime());
        Assertions.assertEquals(RuleStatus.FINDING, model.status());
        Assertions.assertEquals("rvqdra", model.resultsNotInBaseline().get(0).get(0));
        Assertions.assertEquals("gpphrcgyn", model.resultsOnlyInBaseline().get(0).get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BaselineAdjustedResult model =
            new BaselineAdjustedResult()
                .withBaseline(
                    new Baseline()
                        .withExpectedResults(
                            Arrays
                                .asList(
                                    Arrays.asList("hjq"),
                                    Arrays.asList("pyeicxm", "ciwqvhk", "ixuigdtopbobj", "ghmewuam"),
                                    Arrays.asList("hrzayvvtpgvdf", "iotkftutqxl", "gxlefgugnxkrxd")))
                        .withUpdatedTime(OffsetDateTime.parse("2021-08-28T06:39:58Z")))
                .withStatus(RuleStatus.FINDING)
                .withResultsNotInBaseline(
                    Arrays.asList(Arrays.asList("rvqdra", "hjybigehoqfbo"), Arrays.asList("kanyktzlcuiywg", "ywgndrv")))
                .withResultsOnlyInBaseline(
                    Arrays
                        .asList(
                            Arrays.asList("gpphrcgyn", "ocpecfvmmco", "fsxlzevgbmqjqa", "c"),
                            Arrays.asList("mivkwlzuvcc", "wnfnbacf", "onlebxetqgtzxdpn"),
                            Arrays.asList("qqwx", "jfeallnwsub"),
                            Arrays.asList("njampm", "gnzscxaqwo", "chcbonqvpkvlrxnj")));
        model = BinaryData.fromObject(model).toObject(BaselineAdjustedResult.class);
        Assertions.assertEquals("hjq", model.baseline().expectedResults().get(0).get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-28T06:39:58Z"), model.baseline().updatedTime());
        Assertions.assertEquals(RuleStatus.FINDING, model.status());
        Assertions.assertEquals("rvqdra", model.resultsNotInBaseline().get(0).get(0));
        Assertions.assertEquals("gpphrcgyn", model.resultsOnlyInBaseline().get(0).get(0));
    }
}
