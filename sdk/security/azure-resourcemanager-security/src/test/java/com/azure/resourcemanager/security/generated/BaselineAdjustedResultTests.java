// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.models.Baseline;
import com.azure.resourcemanager.security.models.BaselineAdjustedResult;
import com.azure.resourcemanager.security.models.RuleStatus;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class BaselineAdjustedResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BaselineAdjustedResult model = BinaryData.fromString(
            "{\"baseline\":{\"expectedResults\":[[\"coebjvewzcj\",\"nmwcpmgu\"]],\"updatedTime\":\"2021-09-25T00:56:36Z\"},\"status\":\"NonFinding\",\"resultsNotInBaseline\":[[\"ctkahzov\",\"jjziuxxpsh\",\"eekulfgslqubkwd\"],[\"nrdsutujbazpjuoh\"]],\"resultsOnlyInBaseline\":[[\"flnorwmduvwp\"],[\"vxwmygd\",\"pgpqchiszepnnb\"]]}")
            .toObject(BaselineAdjustedResult.class);
        Assertions.assertEquals("coebjvewzcj", model.baseline().expectedResults().get(0).get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-25T00:56:36Z"), model.baseline().updatedTime());
        Assertions.assertEquals(RuleStatus.NON_FINDING, model.status());
        Assertions.assertEquals("ctkahzov", model.resultsNotInBaseline().get(0).get(0));
        Assertions.assertEquals("flnorwmduvwp", model.resultsOnlyInBaseline().get(0).get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BaselineAdjustedResult model = new BaselineAdjustedResult()
            .withBaseline(new Baseline().withExpectedResults(Arrays.asList(Arrays.asList("coebjvewzcj", "nmwcpmgu")))
                .withUpdatedTime(OffsetDateTime.parse("2021-09-25T00:56:36Z")))
            .withStatus(RuleStatus.NON_FINDING)
            .withResultsNotInBaseline(Arrays.asList(Arrays.asList("ctkahzov", "jjziuxxpsh", "eekulfgslqubkwd"),
                Arrays.asList("nrdsutujbazpjuoh")))
            .withResultsOnlyInBaseline(
                Arrays.asList(Arrays.asList("flnorwmduvwp"), Arrays.asList("vxwmygd", "pgpqchiszepnnb")));
        model = BinaryData.fromObject(model).toObject(BaselineAdjustedResult.class);
        Assertions.assertEquals("coebjvewzcj", model.baseline().expectedResults().get(0).get(0));
        Assertions.assertEquals(OffsetDateTime.parse("2021-09-25T00:56:36Z"), model.baseline().updatedTime());
        Assertions.assertEquals(RuleStatus.NON_FINDING, model.status());
        Assertions.assertEquals("ctkahzov", model.resultsNotInBaseline().get(0).get(0));
        Assertions.assertEquals("flnorwmduvwp", model.resultsOnlyInBaseline().get(0).get(0));
    }
}
