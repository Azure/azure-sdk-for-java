// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.GitHubRepositoryInner;
import com.azure.resourcemanager.security.models.DevOpsProvisioningState;
import com.azure.resourcemanager.security.models.GitHubRepositoryProperties;
import com.azure.resourcemanager.security.models.OnboardingState;
import org.junit.jupiter.api.Assertions;

public final class GitHubRepositoryInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GitHubRepositoryInner model = BinaryData.fromString(
            "{\"properties\":{\"provisioningStatusMessage\":\"ln\",\"provisioningStatusUpdateTimeUtc\":\"2021-08-22T06:37:05Z\",\"provisioningState\":\"DeletionFailure\",\"repoId\":\"pafolp\",\"repoName\":\"wamxqzrag\",\"repoFullName\":\"dphtv\",\"onboardingState\":\"NotApplicable\",\"repoUrl\":\"jvlej\",\"parentOwnerName\":\"csrlzknmzl\"},\"id\":\"nrupdwvnphcnzqtp\",\"name\":\"hmqrhvthlaiwdc\",\"type\":\"smlzzhzdtxetlgy\"}")
            .toObject(GitHubRepositoryInner.class);
        Assertions.assertEquals(DevOpsProvisioningState.DELETION_FAILURE, model.properties().provisioningState());
        Assertions.assertEquals(OnboardingState.NOT_APPLICABLE, model.properties().onboardingState());
        Assertions.assertEquals("csrlzknmzl", model.properties().parentOwnerName());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GitHubRepositoryInner model = new GitHubRepositoryInner().withProperties(
            new GitHubRepositoryProperties().withProvisioningState(DevOpsProvisioningState.DELETION_FAILURE)
                .withOnboardingState(OnboardingState.NOT_APPLICABLE).withParentOwnerName("csrlzknmzl"));
        model = BinaryData.fromObject(model).toObject(GitHubRepositoryInner.class);
        Assertions.assertEquals(DevOpsProvisioningState.DELETION_FAILURE, model.properties().provisioningState());
        Assertions.assertEquals(OnboardingState.NOT_APPLICABLE, model.properties().onboardingState());
        Assertions.assertEquals("csrlzknmzl", model.properties().parentOwnerName());
    }
}
