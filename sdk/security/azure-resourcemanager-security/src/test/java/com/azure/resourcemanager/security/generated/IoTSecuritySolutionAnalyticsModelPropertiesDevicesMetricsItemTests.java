// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.models.IoTSecuritySolutionAnalyticsModelPropertiesDevicesMetricsItem;
import com.azure.resourcemanager.security.models.IoTSeverityMetrics;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class IoTSecuritySolutionAnalyticsModelPropertiesDevicesMetricsItemTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IoTSecuritySolutionAnalyticsModelPropertiesDevicesMetricsItem model = BinaryData.fromString(
            "{\"date\":\"2021-06-14T04:43:43Z\",\"devicesMetrics\":{\"high\":6220418535425358771,\"medium\":6180410125740199506,\"low\":7318694278946681854}}")
            .toObject(IoTSecuritySolutionAnalyticsModelPropertiesDevicesMetricsItem.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-14T04:43:43Z"), model.date());
        Assertions.assertEquals(6220418535425358771L, model.devicesMetrics().high());
        Assertions.assertEquals(6180410125740199506L, model.devicesMetrics().medium());
        Assertions.assertEquals(7318694278946681854L, model.devicesMetrics().low());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IoTSecuritySolutionAnalyticsModelPropertiesDevicesMetricsItem model
            = new IoTSecuritySolutionAnalyticsModelPropertiesDevicesMetricsItem()
                .withDate(OffsetDateTime.parse("2021-06-14T04:43:43Z"))
                .withDevicesMetrics(new IoTSeverityMetrics().withHigh(6220418535425358771L)
                    .withMedium(6180410125740199506L)
                    .withLow(7318694278946681854L));
        model = BinaryData.fromObject(model)
            .toObject(IoTSecuritySolutionAnalyticsModelPropertiesDevicesMetricsItem.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-06-14T04:43:43Z"), model.date());
        Assertions.assertEquals(6220418535425358771L, model.devicesMetrics().high());
        Assertions.assertEquals(6180410125740199506L, model.devicesMetrics().medium());
        Assertions.assertEquals(7318694278946681854L, model.devicesMetrics().low());
    }
}
