// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.models.IoTSecuritySolutionAnalyticsModelPropertiesDevicesMetricsItem;
import com.azure.resourcemanager.security.models.IoTSeverityMetrics;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class IoTSecuritySolutionAnalyticsModelPropertiesDevicesMetricsItemTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IoTSecuritySolutionAnalyticsModelPropertiesDevicesMetricsItem model = BinaryData.fromString(
            "{\"date\":\"2021-10-05T03:27:23Z\",\"devicesMetrics\":{\"high\":2527075455608168328,\"medium\":6370076856153350638,\"low\":2335530458639514784}}")
            .toObject(IoTSecuritySolutionAnalyticsModelPropertiesDevicesMetricsItem.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-05T03:27:23Z"), model.date());
        Assertions.assertEquals(2527075455608168328L, model.devicesMetrics().high());
        Assertions.assertEquals(6370076856153350638L, model.devicesMetrics().medium());
        Assertions.assertEquals(2335530458639514784L, model.devicesMetrics().low());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IoTSecuritySolutionAnalyticsModelPropertiesDevicesMetricsItem model
            = new IoTSecuritySolutionAnalyticsModelPropertiesDevicesMetricsItem()
                .withDate(OffsetDateTime.parse("2021-10-05T03:27:23Z"))
                .withDevicesMetrics(new IoTSeverityMetrics().withHigh(2527075455608168328L)
                    .withMedium(6370076856153350638L)
                    .withLow(2335530458639514784L));
        model = BinaryData.fromObject(model)
            .toObject(IoTSecuritySolutionAnalyticsModelPropertiesDevicesMetricsItem.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-10-05T03:27:23Z"), model.date());
        Assertions.assertEquals(2527075455608168328L, model.devicesMetrics().high());
        Assertions.assertEquals(6370076856153350638L, model.devicesMetrics().medium());
        Assertions.assertEquals(2335530458639514784L, model.devicesMetrics().low());
    }
}
