// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.IoTSecurityAggregatedAlertInner;
import com.azure.resourcemanager.security.models.IoTSecurityAggregatedAlertList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class IoTSecurityAggregatedAlertListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IoTSecurityAggregatedAlertList model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"alertType\":\"byl\",\"alertDisplayName\":\"igvxvatvcrk\",\"vendorName\":\"nbqxvhcsyhzlwxae\",\"reportedSeverity\":\"Low\",\"remediationSteps\":\"rexdndsbd\",\"description\":\"aderzmw\",\"count\":4429533101698917180,\"effectedResourceType\":\"gttmvmmagoaqyl\",\"systemSource\":\"ztj\",\"actionTaken\":\"azjcgmxitpfin\",\"logAnalyticsQuery\":\"pdltkrlg\",\"topDevicesList\":[{\"deviceId\":\"drvcqguef\",\"alertsCount\":284213355317197140,\"lastOccurrence\":\"heqdurelyujlfyou\"},{\"deviceId\":\"ckyeclcdigpta\",\"alertsCount\":3783691840262544626,\"lastOccurrence\":\"qxucycijoc\"},{\"deviceId\":\"iutgj\",\"alertsCount\":351358477968226471,\"lastOccurrence\":\"jdnrqjbt\"}]},\"tags\":{\"atbwbqam\":\"aoqaqbzgyhfwwv\",\"liys\":\"e\",\"uxx\":\"pkcvmwf\"},\"id\":\"pmywbormcq\",\"name\":\"iciijqpkzfbojx\",\"type\":\"mcsmyqwixvcp\"}],\"nextLink\":\"kwywzwofalic\"}")
            .toObject(IoTSecurityAggregatedAlertList.class);
        Assertions.assertEquals("aoqaqbzgyhfwwv", model.value().get(0).tags().get("atbwbqam"));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IoTSecurityAggregatedAlertList model
            = new IoTSecurityAggregatedAlertList().withValue(Arrays.asList(new IoTSecurityAggregatedAlertInner()
                .withTags(mapOf("atbwbqam", "aoqaqbzgyhfwwv", "liys", "e", "uxx", "pkcvmwf"))));
        model = BinaryData.fromObject(model).toObject(IoTSecurityAggregatedAlertList.class);
        Assertions.assertEquals("aoqaqbzgyhfwwv", model.value().get(0).tags().get("atbwbqam"));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
