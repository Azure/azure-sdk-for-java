// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.models.BlobsScanSummary;
import com.azure.resourcemanager.security.models.MalwareScanProperties;
import com.azure.resourcemanager.security.models.ScanSummary;
import org.junit.jupiter.api.Assertions;

public final class MalwareScanPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MalwareScanProperties model = BinaryData.fromString(
            "{\"scanId\":\"ciodhkhaz\",\"scanStatus\":\"hnzbonl\",\"scanStatusMessage\":\"toego\",\"scanStartTime\":\"wbw\",\"scanEndTime\":\"szzcmrvexztv\",\"scanSummary\":{\"blobs\":{\"totalBlobsScanned\":540192537661103477,\"maliciousBlobsCount\":8855643118762610472,\"skippedBlobsCount\":9020974612297395750,\"scannedBlobsInGB\":87.59352440002345},\"estimatedScanCostUSD\":48.065688954626694}}")
            .toObject(MalwareScanProperties.class);
        Assertions.assertEquals("ciodhkhaz", model.scanId());
        Assertions.assertEquals("hnzbonl", model.scanStatus());
        Assertions.assertEquals("toego", model.scanStatusMessage());
        Assertions.assertEquals("wbw", model.scanStartTime());
        Assertions.assertEquals("szzcmrvexztv", model.scanEndTime());
        Assertions.assertEquals(540192537661103477L, model.scanSummary().blobs().totalBlobsScanned());
        Assertions.assertEquals(8855643118762610472L, model.scanSummary().blobs().maliciousBlobsCount());
        Assertions.assertEquals(9020974612297395750L, model.scanSummary().blobs().skippedBlobsCount());
        Assertions.assertEquals(87.59352440002345D, model.scanSummary().blobs().scannedBlobsInGB());
        Assertions.assertEquals(48.065688954626694D, model.scanSummary().estimatedScanCostUsd());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MalwareScanProperties model = new MalwareScanProperties().withScanId("ciodhkhaz")
            .withScanStatus("hnzbonl")
            .withScanStatusMessage("toego")
            .withScanStartTime("wbw")
            .withScanEndTime("szzcmrvexztv")
            .withScanSummary(
                new ScanSummary().withBlobs(new BlobsScanSummary().withTotalBlobsScanned(540192537661103477L)
                    .withMaliciousBlobsCount(8855643118762610472L)
                    .withSkippedBlobsCount(9020974612297395750L)
                    .withScannedBlobsInGB(87.59352440002345D)).withEstimatedScanCostUsd(48.065688954626694D));
        model = BinaryData.fromObject(model).toObject(MalwareScanProperties.class);
        Assertions.assertEquals("ciodhkhaz", model.scanId());
        Assertions.assertEquals("hnzbonl", model.scanStatus());
        Assertions.assertEquals("toego", model.scanStatusMessage());
        Assertions.assertEquals("wbw", model.scanStartTime());
        Assertions.assertEquals("szzcmrvexztv", model.scanEndTime());
        Assertions.assertEquals(540192537661103477L, model.scanSummary().blobs().totalBlobsScanned());
        Assertions.assertEquals(8855643118762610472L, model.scanSummary().blobs().maliciousBlobsCount());
        Assertions.assertEquals(9020974612297395750L, model.scanSummary().blobs().skippedBlobsCount());
        Assertions.assertEquals(87.59352440002345D, model.scanSummary().blobs().scannedBlobsInGB());
        Assertions.assertEquals(48.065688954626694D, model.scanSummary().estimatedScanCostUsd());
    }
}
