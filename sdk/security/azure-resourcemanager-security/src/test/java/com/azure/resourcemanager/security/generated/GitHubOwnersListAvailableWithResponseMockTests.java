// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.DevOpsProvisioningState;
import com.azure.resourcemanager.security.models.GitHubOwnerListResponse;
import com.azure.resourcemanager.security.models.OnboardingState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class GitHubOwnersListAvailableWithResponseMockTests {
    @Test
    public void testListAvailableWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningStatusMessage\":\"wkzfggsuzkv\",\"provisioningStatusUpdateTimeUtc\":\"2021-02-21T17:44:02Z\",\"provisioningState\":\"DeletionSuccess\",\"ownerUrl\":\"uiwaz\",\"gitHubInternalId\":\"bthutctcabc\",\"onboardingState\":\"OnboardedByOtherConnector\"},\"id\":\"bzfihszfkpoidfzw\",\"name\":\"gvuojuwg\",\"type\":\"eccvufjqvfcfss\"},{\"properties\":{\"provisioningStatusMessage\":\"emkrhbsdgktluifi\",\"provisioningStatusUpdateTimeUtc\":\"2021-02-02T18:13:56Z\",\"provisioningState\":\"Canceled\",\"ownerUrl\":\"enobqysbeespqbvv\",\"gitHubInternalId\":\"rszsu\",\"onboardingState\":\"OnboardedByOtherConnector\"},\"id\":\"aut\",\"name\":\"ricv\",\"type\":\"ofenin\"},{\"properties\":{\"provisioningStatusMessage\":\"hyyqxckdlxjp\",\"provisioningStatusUpdateTimeUtc\":\"2021-08-27T02:35:06Z\",\"provisioningState\":\"DeletionFailure\",\"ownerUrl\":\"wincbesfvij\",\"gitHubInternalId\":\"bxfiiytqxewj\",\"onboardingState\":\"NotOnboarded\"},\"id\":\"tezlghkvoxdpo\",\"name\":\"xkivbkuto\",\"type\":\"ecyqoytwssbvqnp\"}],\"nextLink\":\"wdmuvyakrbqpw\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        GitHubOwnerListResponse response = manager.gitHubOwners()
            .listAvailableWithResponse("rrsjscosanjso", "trztogujg", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(DevOpsProvisioningState.DELETION_SUCCESS,
            response.value().get(0).properties().provisioningState());
        Assertions.assertEquals(OnboardingState.ONBOARDED_BY_OTHER_CONNECTOR,
            response.value().get(0).properties().onboardingState());
        Assertions.assertEquals("wdmuvyakrbqpw", response.nextLink());
    }
}
