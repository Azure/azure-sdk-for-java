// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.GitHubOwnerListResponse;
import com.azure.resourcemanager.security.models.OnboardingState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class GitHubOwnersListAvailableWithResponseMockTests {
    @Test
    public void testListAvailableWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningStatusMessage\":\"anklpu\",\"provisioningStatusUpdateTimeUtc\":\"2021-09-17T02:30:13Z\",\"provisioningState\":\"Canceled\",\"ownerUrl\":\"h\",\"gitHubInternalId\":\"jse\",\"onboardingState\":\"NotOnboarded\"},\"id\":\"yn\",\"name\":\"urdon\",\"type\":\"gobxblrdolen\"},{\"properties\":{\"provisioningStatusMessage\":\"npdrgnmzaofroe\",\"provisioningStatusUpdateTimeUtc\":\"2021-12-09T22:53:30Z\",\"provisioningState\":\"PendingDeletion\",\"ownerUrl\":\"vyrejyoy\",\"gitHubInternalId\":\"qftusdwmnrtvvbuc\",\"onboardingState\":\"OnboardedByOtherConnector\"},\"id\":\"ovomepxwsic\",\"name\":\"wqzocsfshennms\",\"type\":\"pywdibugvnrgal\"},{\"properties\":{\"provisioningStatusMessage\":\"ryibrb\",\"provisioningStatusUpdateTimeUtc\":\"2021-08-26T02:38:15Z\",\"provisioningState\":\"DeletionFailure\",\"ownerUrl\":\"cwojt\",\"gitHubInternalId\":\"qdvnpyeevff\",\"onboardingState\":\"NotOnboarded\"},\"id\":\"jgtdowlxmwefcby\",\"name\":\"pchrtczwjcujy\",\"type\":\"nvy\"}],\"nextLink\":\"qdjlgkuir\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        GitHubOwnerListResponse response = manager.gitHubOwners()
            .listAvailableWithResponse("jppitygv", "wdsoqtbfkvuozbzc", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(OnboardingState.NOT_ONBOARDED, response.value().get(0).properties().onboardingState());
        Assertions.assertEquals("qdjlgkuir", response.nextLink());
    }
}
