// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.GitHubOwnerListResponse;
import com.azure.resourcemanager.security.models.OnboardingState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class GitHubOwnersListAvailableWithResponseMockTests {
    @Test
    public void testListAvailableWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningStatusMessage\":\"ynoy\",\"provisioningStatusUpdateTimeUtc\":\"2021-02-02T19:20:06Z\",\"provisioningState\":\"DeletionSuccess\",\"ownerUrl\":\"sbnlyoifgdfzjqth\",\"gitHubInternalId\":\"cvoevcwfz\",\"onboardingState\":\"OnboardedByOtherConnector\"},\"id\":\"xxlwwooxgbsdz\",\"name\":\"gcvypjhu\",\"type\":\"dmgobxehujcqg\"},{\"properties\":{\"provisioningStatusMessage\":\"wi\",\"provisioningStatusUpdateTimeUtc\":\"2021-11-12T15:32:02Z\",\"provisioningState\":\"Succeeded\",\"ownerUrl\":\"jklqrljdcukyla\",\"gitHubInternalId\":\"jiqoq\",\"onboardingState\":\"OnboardedByOtherConnector\"},\"id\":\"hgphgxuwudg\",\"name\":\"yqruvumryddnqiva\",\"type\":\"fc\"},{\"properties\":{\"provisioningStatusMessage\":\"zebpicci\",\"provisioningStatusUpdateTimeUtc\":\"2021-02-22T15:14:26Z\",\"provisioningState\":\"Canceled\",\"ownerUrl\":\"dkspwwibpy\",\"gitHubInternalId\":\"eig\",\"onboardingState\":\"NotApplicable\"},\"id\":\"xsxteuikhznff\",\"name\":\"nhcgn\",\"type\":\"qsrmrfqderk\"},{\"properties\":{\"provisioningStatusMessage\":\"cobpmgqlwy\",\"provisioningStatusUpdateTimeUtc\":\"2021-02-08T02:33:17Z\",\"provisioningState\":\"Canceled\",\"ownerUrl\":\"zposzfu\",\"gitHubInternalId\":\"pbygbnbcmoiq\",\"onboardingState\":\"NotOnboarded\"},\"id\":\"pvqewflwz\",\"name\":\"xzuxerxh\",\"type\":\"wl\"}],\"nextLink\":\"qsqvvdkfpfj\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        GitHubOwnerListResponse response = manager.gitHubOwners()
            .listAvailableWithResponse("ts", "ruyk", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(OnboardingState.ONBOARDED_BY_OTHER_CONNECTOR,
            response.value().get(0).properties().onboardingState());
        Assertions.assertEquals("qsqvvdkfpfj", response.nextLink());
    }
}
