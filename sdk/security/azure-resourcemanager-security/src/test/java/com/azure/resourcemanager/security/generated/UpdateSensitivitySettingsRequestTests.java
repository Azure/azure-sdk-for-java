// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.models.UpdateSensitivitySettingsRequest;
import java.util.Arrays;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;

public final class UpdateSensitivitySettingsRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UpdateSensitivitySettingsRequest model = BinaryData.fromString(
            "{\"sensitiveInfoTypesIds\":[\"38b8154e-b705-49c5-9e38-2f2c0bbc5178\",\"2f786839-2c7e-4112-a18f-1efdf0193498\"],\"sensitivityThresholdLabelOrder\":79.26031,\"sensitivityThresholdLabelId\":\"c0ed0c76-4d4c-4eaa-a5a9-aa0271613d98\"}")
            .toObject(UpdateSensitivitySettingsRequest.class);
        Assertions.assertEquals(UUID.fromString("38b8154e-b705-49c5-9e38-2f2c0bbc5178"),
            model.sensitiveInfoTypesIds().get(0));
        Assertions.assertEquals(79.26031F, model.sensitivityThresholdLabelOrder());
        Assertions.assertEquals(UUID.fromString("c0ed0c76-4d4c-4eaa-a5a9-aa0271613d98"),
            model.sensitivityThresholdLabelId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UpdateSensitivitySettingsRequest model = new UpdateSensitivitySettingsRequest()
            .withSensitiveInfoTypesIds(Arrays.asList(UUID.fromString("38b8154e-b705-49c5-9e38-2f2c0bbc5178"),
                UUID.fromString("2f786839-2c7e-4112-a18f-1efdf0193498")))
            .withSensitivityThresholdLabelOrder(79.26031F)
            .withSensitivityThresholdLabelId(UUID.fromString("c0ed0c76-4d4c-4eaa-a5a9-aa0271613d98"));
        model = BinaryData.fromObject(model).toObject(UpdateSensitivitySettingsRequest.class);
        Assertions.assertEquals(UUID.fromString("38b8154e-b705-49c5-9e38-2f2c0bbc5178"),
            model.sensitiveInfoTypesIds().get(0));
        Assertions.assertEquals(79.26031F, model.sensitivityThresholdLabelOrder());
        Assertions.assertEquals(UUID.fromString("c0ed0c76-4d4c-4eaa-a5a9-aa0271613d98"),
            model.sensitivityThresholdLabelId());
    }
}
