// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.models.UpdateSensitivitySettingsRequest;
import java.util.Arrays;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;

public final class UpdateSensitivitySettingsRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UpdateSensitivitySettingsRequest model = BinaryData.fromString(
            "{\"sensitiveInfoTypesIds\":[\"a66eeca1-afb4-41d3-a085-e750641ec988\",\"06f7a01a-b884-4bee-9f5d-46cfa41c9075\"],\"sensitivityThresholdLabelOrder\":79.26031,\"sensitivityThresholdLabelId\":\"4360ca00-9412-46ae-a3d8-1e9a2e591eef\"}")
            .toObject(UpdateSensitivitySettingsRequest.class);
        Assertions.assertEquals(UUID.fromString("a66eeca1-afb4-41d3-a085-e750641ec988"),
            model.sensitiveInfoTypesIds().get(0));
        Assertions.assertEquals(79.26031F, model.sensitivityThresholdLabelOrder());
        Assertions.assertEquals(UUID.fromString("4360ca00-9412-46ae-a3d8-1e9a2e591eef"),
            model.sensitivityThresholdLabelId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UpdateSensitivitySettingsRequest model = new UpdateSensitivitySettingsRequest()
            .withSensitiveInfoTypesIds(Arrays.asList(UUID.fromString("a66eeca1-afb4-41d3-a085-e750641ec988"),
                UUID.fromString("06f7a01a-b884-4bee-9f5d-46cfa41c9075")))
            .withSensitivityThresholdLabelOrder(79.26031F)
            .withSensitivityThresholdLabelId(UUID.fromString("4360ca00-9412-46ae-a3d8-1e9a2e591eef"));
        model = BinaryData.fromObject(model).toObject(UpdateSensitivitySettingsRequest.class);
        Assertions.assertEquals(UUID.fromString("a66eeca1-afb4-41d3-a085-e750641ec988"),
            model.sensitiveInfoTypesIds().get(0));
        Assertions.assertEquals(79.26031F, model.sensitivityThresholdLabelOrder());
        Assertions.assertEquals(UUID.fromString("4360ca00-9412-46ae-a3d8-1e9a2e591eef"),
            model.sensitivityThresholdLabelId());
    }
}
