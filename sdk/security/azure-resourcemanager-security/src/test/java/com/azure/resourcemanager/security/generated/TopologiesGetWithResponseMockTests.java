// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.TopologyResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class TopologiesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"calculatedDateTime\":\"2021-05-28T21:22:31Z\",\"topologyResources\":[{\"resourceId\":\"xrvnhhmfsnqp\",\"severity\":\"tsh\",\"recommendationsExist\":true,\"networkZones\":\"sksd\",\"topologyScore\":1555917245,\"location\":\"tsy\",\"parents\":[{},{}],\"children\":[{},{},{},{}]},{\"resourceId\":\"oetx\",\"severity\":\"rfwxhf\",\"recommendationsExist\":false,\"networkZones\":\"ngaypxsazbxsn\",\"topologyScore\":1091617016,\"location\":\"znfstmprvg\",\"parents\":[{},{},{},{}],\"children\":[{},{},{}]},{\"resourceId\":\"twomlp\",\"severity\":\"lqboomzgmrolhsf\",\"recommendationsExist\":false,\"networkZones\":\"xvevwxmnbwaxa\",\"topologyScore\":911508907,\"location\":\"pyhtuh\",\"parents\":[{},{}],\"children\":[{},{}]},{\"resourceId\":\"dnao\",\"severity\":\"xznpnytkqja\",\"recommendationsExist\":false,\"networkZones\":\"btgt\",\"topologyScore\":381047323,\"location\":\"trm\",\"parents\":[{},{}],\"children\":[{},{},{}]}]},\"location\":\"tg\",\"id\":\"uupcze\",\"name\":\"qn\",\"type\":\"idvssvgyoggkztzt\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        TopologyResource response
            = manager.topologies().getWithResponse("cqt", "srbfbs", "ii", com.azure.core.util.Context.NONE).getValue();

    }
}
