// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.models.MqttC2DRejectedMessagesNotInAllowedRange;
import java.time.Duration;
import org.junit.jupiter.api.Assertions;

public final class MqttC2DRejectedMessagesNotInAllowedRangeTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        MqttC2DRejectedMessagesNotInAllowedRange model =
            BinaryData
                .fromString(
                    "{\"ruleType\":\"MqttC2DRejectedMessagesNotInAllowedRange\",\"timeWindowSize\":\"PT158H14M50S\",\"minThreshold\":8081594,\"maxThreshold\":218117716,\"displayName\":\"ambewreswmowe\",\"description\":\"mut\",\"isEnabled\":false}")
                .toObject(MqttC2DRejectedMessagesNotInAllowedRange.class);
        Assertions.assertEquals(false, model.isEnabled());
        Assertions.assertEquals(8081594, model.minThreshold());
        Assertions.assertEquals(218117716, model.maxThreshold());
        Assertions.assertEquals(Duration.parse("PT158H14M50S"), model.timeWindowSize());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        MqttC2DRejectedMessagesNotInAllowedRange model =
            new MqttC2DRejectedMessagesNotInAllowedRange()
                .withIsEnabled(false)
                .withMinThreshold(8081594)
                .withMaxThreshold(218117716)
                .withTimeWindowSize(Duration.parse("PT158H14M50S"));
        model = BinaryData.fromObject(model).toObject(MqttC2DRejectedMessagesNotInAllowedRange.class);
        Assertions.assertEquals(false, model.isEnabled());
        Assertions.assertEquals(8081594, model.minThreshold());
        Assertions.assertEquals(218117716, model.maxThreshold());
        Assertions.assertEquals(Duration.parse("PT158H14M50S"), model.timeWindowSize());
    }
}
