// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.DeviceSecurityGroupInner;
import com.azure.resourcemanager.security.models.AllowlistCustomAlertRule;
import com.azure.resourcemanager.security.models.DenylistCustomAlertRule;
import com.azure.resourcemanager.security.models.ThresholdCustomAlertRule;
import com.azure.resourcemanager.security.models.TimeWindowCustomAlertRule;
import java.time.Duration;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DeviceSecurityGroupInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DeviceSecurityGroupInner model = BinaryData.fromString(
            "{\"properties\":{\"thresholdRules\":[{\"ruleType\":\"ThresholdCustomAlertRule\",\"minThreshold\":1717815556,\"maxThreshold\":1979298796,\"displayName\":\"alvnbwgpb\",\"description\":\"eluclvdjj\",\"isEnabled\":true},{\"ruleType\":\"ThresholdCustomAlertRule\",\"minThreshold\":1658208052,\"maxThreshold\":1479009868,\"displayName\":\"nqodxahhxhq\",\"description\":\"qnvzoqgyipemch\",\"isEnabled\":true},{\"ruleType\":\"ThresholdCustomAlertRule\",\"minThreshold\":193366421,\"maxThreshold\":2088110978,\"displayName\":\"zuejd\",\"description\":\"ptlghwzhomewjjst\",\"isEnabled\":false}],\"timeWindowRules\":[{\"ruleType\":\"TimeWindowCustomAlertRule\",\"timeWindowSize\":\"PT89H6M1S\",\"minThreshold\":887233496,\"maxThreshold\":1890150004,\"displayName\":\"oaiancznvodrrs\",\"description\":\"lxydkxrxv\",\"isEnabled\":true},{\"ruleType\":\"TimeWindowCustomAlertRule\",\"timeWindowSize\":\"PT78H28M23S\",\"minThreshold\":611172975,\"maxThreshold\":925211968,\"displayName\":\"g\",\"description\":\"qljnqkhychoco\",\"isEnabled\":true}],\"allowlistRules\":[{\"ruleType\":\"AllowlistCustomAlertRule\",\"allowlistValues\":[\"urqlrqffawey\",\"rkphyjdxr\"],\"valueType\":\"IpCidr\",\"displayName\":\"qdbrxmrgc\",\"description\":\"apx\",\"isEnabled\":true},{\"ruleType\":\"AllowlistCustomAlertRule\",\"allowlistValues\":[\"fjjkbajb\"],\"valueType\":\"IpCidr\",\"displayName\":\"duusioycblevpmcl\",\"description\":\"yxkyxlz\",\"isEnabled\":true}],\"denylistRules\":[{\"ruleType\":\"DenylistCustomAlertRule\",\"denylistValues\":[\"zzlt\",\"fhbzffovwmbjlzq\",\"czpgvdwnapfdq\"],\"valueType\":\"IpCidr\",\"displayName\":\"tptnuwjtk\",\"description\":\"h\",\"isEnabled\":true}]},\"id\":\"gqy\",\"name\":\"leseyqrhvyeldo\",\"type\":\"jv\"}")
            .toObject(DeviceSecurityGroupInner.class);
        Assertions.assertEquals(true, model.thresholdRules().get(0).isEnabled());
        Assertions.assertEquals(1717815556, model.thresholdRules().get(0).minThreshold());
        Assertions.assertEquals(1979298796, model.thresholdRules().get(0).maxThreshold());
        Assertions.assertEquals(true, model.timeWindowRules().get(0).isEnabled());
        Assertions.assertEquals(887233496, model.timeWindowRules().get(0).minThreshold());
        Assertions.assertEquals(1890150004, model.timeWindowRules().get(0).maxThreshold());
        Assertions.assertEquals(Duration.parse("PT89H6M1S"), model.timeWindowRules().get(0).timeWindowSize());
        Assertions.assertEquals(true, model.allowlistRules().get(0).isEnabled());
        Assertions.assertEquals("urqlrqffawey", model.allowlistRules().get(0).allowlistValues().get(0));
        Assertions.assertEquals(true, model.denylistRules().get(0).isEnabled());
        Assertions.assertEquals("zzlt", model.denylistRules().get(0).denylistValues().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DeviceSecurityGroupInner model = new DeviceSecurityGroupInner()
            .withThresholdRules(Arrays.asList(
                new ThresholdCustomAlertRule().withIsEnabled(true)
                    .withMinThreshold(1717815556)
                    .withMaxThreshold(1979298796),
                new ThresholdCustomAlertRule().withIsEnabled(true)
                    .withMinThreshold(1658208052)
                    .withMaxThreshold(1479009868),
                new ThresholdCustomAlertRule().withIsEnabled(false)
                    .withMinThreshold(193366421)
                    .withMaxThreshold(2088110978)))
            .withTimeWindowRules(Arrays.asList(
                new TimeWindowCustomAlertRule().withIsEnabled(true)
                    .withMinThreshold(887233496)
                    .withMaxThreshold(1890150004)
                    .withTimeWindowSize(Duration.parse("PT89H6M1S")),
                new TimeWindowCustomAlertRule().withIsEnabled(true)
                    .withMinThreshold(611172975)
                    .withMaxThreshold(925211968)
                    .withTimeWindowSize(Duration.parse("PT78H28M23S"))))
            .withAllowlistRules(Arrays.asList(
                new AllowlistCustomAlertRule().withIsEnabled(true)
                    .withAllowlistValues(Arrays.asList("urqlrqffawey", "rkphyjdxr")),
                new AllowlistCustomAlertRule().withIsEnabled(true).withAllowlistValues(Arrays.asList("fjjkbajb"))))
            .withDenylistRules(Arrays.asList(new DenylistCustomAlertRule().withIsEnabled(true)
                .withDenylistValues(Arrays.asList("zzlt", "fhbzffovwmbjlzq", "czpgvdwnapfdq"))));
        model = BinaryData.fromObject(model).toObject(DeviceSecurityGroupInner.class);
        Assertions.assertEquals(true, model.thresholdRules().get(0).isEnabled());
        Assertions.assertEquals(1717815556, model.thresholdRules().get(0).minThreshold());
        Assertions.assertEquals(1979298796, model.thresholdRules().get(0).maxThreshold());
        Assertions.assertEquals(true, model.timeWindowRules().get(0).isEnabled());
        Assertions.assertEquals(887233496, model.timeWindowRules().get(0).minThreshold());
        Assertions.assertEquals(1890150004, model.timeWindowRules().get(0).maxThreshold());
        Assertions.assertEquals(Duration.parse("PT89H6M1S"), model.timeWindowRules().get(0).timeWindowSize());
        Assertions.assertEquals(true, model.allowlistRules().get(0).isEnabled());
        Assertions.assertEquals("urqlrqffawey", model.allowlistRules().get(0).allowlistValues().get(0));
        Assertions.assertEquals(true, model.denylistRules().get(0).isEnabled());
        Assertions.assertEquals("zzlt", model.denylistRules().get(0).denylistValues().get(0));
    }
}
