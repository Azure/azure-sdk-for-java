// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.GovernanceAssignmentInner;
import com.azure.resourcemanager.security.models.GovernanceAssignmentAdditionalData;
import com.azure.resourcemanager.security.models.GovernanceEmailNotification;
import com.azure.resourcemanager.security.models.RemediationEta;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class GovernanceAssignmentInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GovernanceAssignmentInner model = BinaryData.fromString(
            "{\"properties\":{\"owner\":\"quuvxzxcl\",\"remediationDueDate\":\"2021-05-15T02:55:17Z\",\"remediationEta\":{\"eta\":\"2021-08-08T02:42:25Z\",\"justification\":\"hqzonosggbhcoh\"},\"isGracePeriod\":false,\"governanceEmailNotification\":{\"disableManagerEmailNotification\":false,\"disableOwnerEmailNotification\":true},\"additionalData\":{\"ticketNumber\":215049895,\"ticketLink\":\"iiswacffgdkzze\",\"ticketStatus\":\"fvhqc\"}},\"id\":\"a\",\"name\":\"lvpnpp\",\"type\":\"uflrwd\"}")
            .toObject(GovernanceAssignmentInner.class);
        Assertions.assertEquals("quuvxzxcl", model.owner());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-15T02:55:17Z"), model.remediationDueDate());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-08T02:42:25Z"), model.remediationEta().eta());
        Assertions.assertEquals("hqzonosggbhcoh", model.remediationEta().justification());
        Assertions.assertEquals(false, model.isGracePeriod());
        Assertions.assertEquals(false, model.governanceEmailNotification().disableManagerEmailNotification());
        Assertions.assertEquals(true, model.governanceEmailNotification().disableOwnerEmailNotification());
        Assertions.assertEquals(215049895, model.additionalData().ticketNumber());
        Assertions.assertEquals("iiswacffgdkzze", model.additionalData().ticketLink());
        Assertions.assertEquals("fvhqc", model.additionalData().ticketStatus());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GovernanceAssignmentInner model = new GovernanceAssignmentInner().withOwner("quuvxzxcl")
            .withRemediationDueDate(OffsetDateTime.parse("2021-05-15T02:55:17Z"))
            .withRemediationEta(new RemediationEta().withEta(OffsetDateTime.parse("2021-08-08T02:42:25Z"))
                .withJustification("hqzonosggbhcoh"))
            .withIsGracePeriod(false)
            .withGovernanceEmailNotification(
                new GovernanceEmailNotification().withDisableManagerEmailNotification(false)
                    .withDisableOwnerEmailNotification(true))
            .withAdditionalData(new GovernanceAssignmentAdditionalData().withTicketNumber(215049895)
                .withTicketLink("iiswacffgdkzze")
                .withTicketStatus("fvhqc"));
        model = BinaryData.fromObject(model).toObject(GovernanceAssignmentInner.class);
        Assertions.assertEquals("quuvxzxcl", model.owner());
        Assertions.assertEquals(OffsetDateTime.parse("2021-05-15T02:55:17Z"), model.remediationDueDate());
        Assertions.assertEquals(OffsetDateTime.parse("2021-08-08T02:42:25Z"), model.remediationEta().eta());
        Assertions.assertEquals("hqzonosggbhcoh", model.remediationEta().justification());
        Assertions.assertEquals(false, model.isGracePeriod());
        Assertions.assertEquals(false, model.governanceEmailNotification().disableManagerEmailNotification());
        Assertions.assertEquals(true, model.governanceEmailNotification().disableOwnerEmailNotification());
        Assertions.assertEquals(215049895, model.additionalData().ticketNumber());
        Assertions.assertEquals("iiswacffgdkzze", model.additionalData().ticketLink());
        Assertions.assertEquals("fvhqc", model.additionalData().ticketStatus());
    }
}
