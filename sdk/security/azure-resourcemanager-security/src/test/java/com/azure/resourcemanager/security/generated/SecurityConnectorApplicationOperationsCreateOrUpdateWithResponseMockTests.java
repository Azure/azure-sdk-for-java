// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.fluent.models.ApplicationInner;
import com.azure.resourcemanager.security.models.Application;
import com.azure.resourcemanager.security.models.ApplicationSourceResourceType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SecurityConnectorApplicationOperationsCreateOrUpdateWithResponseMockTests {
    @Test
    public void testCreateOrUpdateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"displayName\":\"mtbtdvucfvvra\",\"description\":\"eurdeewlsuxp\",\"sourceResourceType\":\"Assessments\",\"conditionSets\":[\"datakdwjyjiznioro\",\"datafmfta\",\"datapmcreihu\",\"datatrnighm\"]},\"id\":\"nuwqxungro\",\"name\":\"gwfmsxjwdylwxm\",\"type\":\"zjow\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Application response = manager.securityConnectorApplicationOperations()
            .createOrUpdateWithResponse("krbuoggtdltlcuha", "zijvaylzeo", "lpsftqkrvm",
                new ApplicationInner().withDisplayName("vvcpwtqsuspn")
                    .withDescription("zydffet")
                    .withSourceResourceType(ApplicationSourceResourceType.ASSESSMENTS)
                    .withConditionSets(
                        Arrays.asList("datantfknwacycsyo", "datactkhfh", "datasatvcs", "datarmhnmizhvpr")),
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("mtbtdvucfvvra", response.displayName());
        Assertions.assertEquals("eurdeewlsuxp", response.description());
        Assertions.assertEquals(ApplicationSourceResourceType.ASSESSMENTS, response.sourceResourceType());
    }
}
