// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.security.fluent.models.PricingInner;
import com.azure.resourcemanager.security.fluent.models.PricingListInner;
import com.azure.resourcemanager.security.models.Enforce;
import com.azure.resourcemanager.security.models.Extension;
import com.azure.resourcemanager.security.models.IsEnabled;
import com.azure.resourcemanager.security.models.PricingTier;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class PricingListInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PricingListInner model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"pricingTier\":\"Standard\",\"subPlan\":\"cywhj\",\"freeTrialRemainingTime\":\"PT40H54M48S\",\"enablementTime\":\"2021-02-24T23:24:34Z\",\"enforce\":\"False\",\"inherited\":\"False\",\"inheritedFrom\":\"xcpup\",\"resourcesCoverageStatus\":\"FullyCovered\",\"extensions\":[{\"name\":\"j\",\"isEnabled\":\"True\",\"additionalExtensionProperties\":{\"iwsmosaonhqn\":\"datalvw\",\"aekewnazea\":\"datamppultas\"},\"operationStatus\":{}},{\"name\":\"kajlcyizy\",\"isEnabled\":\"False\",\"additionalExtensionProperties\":{\"krvfsxxbydes\":\"dataxo\",\"nm\":\"datalvgecpwgoljtz\",\"pjxvazyjf\":\"datasdobygoogxq\"},\"operationStatus\":{}},{\"name\":\"saodj\",\"isEnabled\":\"True\",\"additionalExtensionProperties\":{\"gmat\":\"datakvibfa\"},\"operationStatus\":{}},{\"name\":\"zpducdaak\",\"isEnabled\":\"True\",\"additionalExtensionProperties\":{\"fpqdow\":\"datatzboim\"},\"operationStatus\":{}}],\"deprecated\":false,\"replacedBy\":[\"ytfvpctfji\",\"ffffg\"]},\"id\":\"uhznwhvuldbk\",\"name\":\"ejjk\",\"type\":\"igaw\"},{\"properties\":{\"pricingTier\":\"Free\",\"subPlan\":\"xjqifhujjsbc\",\"freeTrialRemainingTime\":\"PT171H15M23S\",\"enablementTime\":\"2021-03-21T09:34:40Z\",\"enforce\":\"False\",\"inherited\":\"True\",\"inheritedFrom\":\"roolkolir\",\"resourcesCoverageStatus\":\"NotCovered\",\"extensions\":[{\"name\":\"usuzgfjzcvaaxo\",\"isEnabled\":\"True\",\"additionalExtensionProperties\":{\"kuk\":\"datahfxwccokd\",\"vl\":\"datakczynuhhoqeqsh\",\"xyrqo\":\"dataq\"},\"operationStatus\":{}},{\"name\":\"thbb\",\"isEnabled\":\"False\",\"additionalExtensionProperties\":{\"jncjmlfuyfjbp\":\"dataukwdrnzkjthfce\",\"yjmqrf\":\"dataiddhlrufzc\",\"azrhxudd\":\"dataiocuselqkr\"},\"operationStatus\":{}},{\"name\":\"dtffisjmrkkhm\",\"isEnabled\":\"False\",\"additionalExtensionProperties\":{\"jawh\":\"datalgyqixokw\",\"qfqqdlcvmyolc\":\"dataag\",\"tvsnvl\":\"dataymjc\",\"atuwqkokbc\":\"dataqdnzyza\"},\"operationStatus\":{}}],\"deprecated\":true,\"replacedBy\":[\"gobllms\",\"wgwima\",\"neakh\"]},\"id\":\"mhobcyan\",\"name\":\"fvqtvkhgvoo\",\"type\":\"xkf\"},{\"properties\":{\"pricingTier\":\"Standard\",\"subPlan\":\"qymhcctopuow\",\"freeTrialRemainingTime\":\"PT170H32M47S\",\"enablementTime\":\"2021-04-04T12:40:34Z\",\"enforce\":\"False\",\"inherited\":\"False\",\"inheritedFrom\":\"hczygxvhajpxe\",\"resourcesCoverageStatus\":\"FullyCovered\",\"extensions\":[{\"name\":\"hscozawmvgxsmpk\",\"isEnabled\":\"False\",\"additionalExtensionProperties\":{\"uoxudnmckaprh\":\"datarfljfewxq\",\"jgencdgmoque\":\"datanqi\"},\"operationStatus\":{}},{\"name\":\"hkkyowltjouw\",\"isEnabled\":\"False\",\"additionalExtensionProperties\":{\"rstvkitbfjtdy\":\"datawhieproqksmfxmcv\"},\"operationStatus\":{}},{\"name\":\"nplfac\",\"isEnabled\":\"True\",\"additionalExtensionProperties\":{\"rhutf\":\"dataqrqxwetjt\"},\"operationStatus\":{}}],\"deprecated\":true,\"replacedBy\":[\"op\",\"eh\",\"adkm\"]},\"id\":\"zgssz\",\"name\":\"vctkbbx\",\"type\":\"harls\"},{\"properties\":{\"pricingTier\":\"Standard\",\"subPlan\":\"clabv\",\"freeTrialRemainingTime\":\"PT135H31M40S\",\"enablementTime\":\"2021-07-05T08:53Z\",\"enforce\":\"False\",\"inherited\":\"True\",\"inheritedFrom\":\"bmyqjog\",\"resourcesCoverageStatus\":\"NotCovered\",\"extensions\":[{\"name\":\"djanormo\",\"isEnabled\":\"True\",\"additionalExtensionProperties\":{\"ntujmoilunwemhd\":\"datau\",\"jslkyozdsfzjue\":\"datae\"},\"operationStatus\":{}},{\"name\":\"hr\",\"isEnabled\":\"True\",\"additionalExtensionProperties\":{\"vgjbfio\":\"dataejtvxjn\"},\"operationStatus\":{}},{\"name\":\"njodfcbjqqwmtq\",\"isEnabled\":\"True\",\"additionalExtensionProperties\":{\"zzaczsinqbdn\":\"datasazuxejgwecywnfy\",\"syvrmkjmyitr\":\"datadbbo\",\"tpmnoe\":\"datahwudlxeei\"},\"operationStatus\":{}},{\"name\":\"qlfm\",\"isEnabled\":\"False\",\"additionalExtensionProperties\":{\"dpmypgfqvmtywh\":\"dataoyrfgxk\",\"xpejpewpy\":\"dataa\",\"zgeuqxbpiat\":\"datalfxampqc\"},\"operationStatus\":{}}],\"deprecated\":true,\"replacedBy\":[\"gqdtadrakg\",\"dhjkrukizy\",\"gsq\"]},\"id\":\"nqskt\",\"name\":\"qfpjb\",\"type\":\"ggweeiwdhdmncgb\"}]}")
            .toObject(PricingListInner.class);
        Assertions.assertEquals(PricingTier.STANDARD, model.value().get(0).pricingTier());
        Assertions.assertEquals("cywhj", model.value().get(0).subPlan());
        Assertions.assertEquals(Enforce.FALSE, model.value().get(0).enforce());
        Assertions.assertEquals("j", model.value().get(0).extensions().get(0).name());
        Assertions.assertEquals(IsEnabled.TRUE, model.value().get(0).extensions().get(0).isEnabled());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PricingListInner model
            = new PricingListInner()
                .withValue(
                    Arrays
                        .asList(
                            new PricingInner().withPricingTier(PricingTier.STANDARD)
                                .withSubPlan("cywhj")
                                .withEnforce(Enforce.FALSE)
                                .withExtensions(Arrays.asList(
                                    new Extension().withName("j")
                                        .withIsEnabled(IsEnabled.TRUE)
                                        .withAdditionalExtensionProperties(
                                            mapOf("iwsmosaonhqn", "datalvw", "aekewnazea", "datamppultas")),
                                    new Extension().withName("kajlcyizy")
                                        .withIsEnabled(IsEnabled.FALSE)
                                        .withAdditionalExtensionProperties(mapOf("krvfsxxbydes", "dataxo", "nm",
                                            "datalvgecpwgoljtz", "pjxvazyjf", "datasdobygoogxq")),
                                    new Extension().withName("saodj")
                                        .withIsEnabled(IsEnabled.TRUE)
                                        .withAdditionalExtensionProperties(mapOf("gmat", "datakvibfa")),
                                    new Extension().withName("zpducdaak")
                                        .withIsEnabled(IsEnabled.TRUE)
                                        .withAdditionalExtensionProperties(mapOf("fpqdow", "datatzboim")))),
                            new PricingInner().withPricingTier(PricingTier.FREE)
                                .withSubPlan("xjqifhujjsbc")
                                .withEnforce(Enforce.FALSE)
                                .withExtensions(Arrays.asList(
                                    new Extension().withName("usuzgfjzcvaaxo")
                                        .withIsEnabled(IsEnabled.TRUE)
                                        .withAdditionalExtensionProperties(mapOf("kuk", "datahfxwccokd", "vl",
                                            "datakczynuhhoqeqsh", "xyrqo", "dataq")),
                                    new Extension()
                                        .withName("thbb")
                                        .withIsEnabled(IsEnabled.FALSE)
                                        .withAdditionalExtensionProperties(
                                            mapOf("jncjmlfuyfjbp", "dataukwdrnzkjthfce", "yjmqrf", "dataiddhlrufzc",
                                                "azrhxudd", "dataiocuselqkr")),
                                    new Extension().withName("dtffisjmrkkhm")
                                        .withIsEnabled(IsEnabled.FALSE)
                                        .withAdditionalExtensionProperties(
                                            mapOf("jawh", "datalgyqixokw", "qfqqdlcvmyolc", "dataag", "tvsnvl",
                                                "dataymjc", "atuwqkokbc", "dataqdnzyza")))),
                            new PricingInner()
                                .withPricingTier(PricingTier.STANDARD)
                                .withSubPlan("qymhcctopuow")
                                .withEnforce(Enforce.FALSE)
                                .withExtensions(
                                    Arrays.asList(
                                        new Extension().withName("hscozawmvgxsmpk")
                                            .withIsEnabled(IsEnabled.FALSE)
                                            .withAdditionalExtensionProperties(
                                                mapOf("uoxudnmckaprh", "datarfljfewxq", "jgencdgmoque", "datanqi")),
                                        new Extension().withName("hkkyowltjouw")
                                            .withIsEnabled(IsEnabled.FALSE)
                                            .withAdditionalExtensionProperties(
                                                mapOf("rstvkitbfjtdy", "datawhieproqksmfxmcv")),
                                        new Extension()
                                            .withName("nplfac")
                                            .withIsEnabled(IsEnabled.TRUE)
                                            .withAdditionalExtensionProperties(mapOf("rhutf", "dataqrqxwetjt")))),
                            new PricingInner().withPricingTier(PricingTier.STANDARD)
                                .withSubPlan("clabv")
                                .withEnforce(Enforce.FALSE)
                                .withExtensions(Arrays.asList(
                                    new Extension().withName("djanormo")
                                        .withIsEnabled(IsEnabled.TRUE)
                                        .withAdditionalExtensionProperties(
                                            mapOf("ntujmoilunwemhd", "datau", "jslkyozdsfzjue", "datae")),
                                    new Extension().withName("hr")
                                        .withIsEnabled(IsEnabled.TRUE)
                                        .withAdditionalExtensionProperties(mapOf("vgjbfio", "dataejtvxjn")),
                                    new Extension().withName("njodfcbjqqwmtq")
                                        .withIsEnabled(IsEnabled.TRUE)
                                        .withAdditionalExtensionProperties(mapOf("zzaczsinqbdn", "datasazuxejgwecywnfy",
                                            "syvrmkjmyitr", "datadbbo", "tpmnoe", "datahwudlxeei")),
                                    new Extension().withName("qlfm")
                                        .withIsEnabled(IsEnabled.FALSE)
                                        .withAdditionalExtensionProperties(mapOf("dpmypgfqvmtywh", "dataoyrfgxk",
                                            "xpejpewpy", "dataa", "zgeuqxbpiat", "datalfxampqc"))))));
        model = BinaryData.fromObject(model).toObject(PricingListInner.class);
        Assertions.assertEquals(PricingTier.STANDARD, model.value().get(0).pricingTier());
        Assertions.assertEquals("cywhj", model.value().get(0).subPlan());
        Assertions.assertEquals(Enforce.FALSE, model.value().get(0).enforce());
        Assertions.assertEquals("j", model.value().get(0).extensions().get(0).name());
        Assertions.assertEquals(IsEnabled.TRUE, model.value().get(0).extensions().get(0).isEnabled());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
