// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.GitLabGroupListResponse;
import com.azure.resourcemanager.security.models.OnboardingState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class GitLabGroupsListAvailableWithResponseMockTests {
    @Test
    public void testListAvailableWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningStatusMessage\":\"wnlpjcxbjg\",\"provisioningStatusUpdateTimeUtc\":\"2021-03-13T00:00:14Z\",\"provisioningState\":\"Succeeded\",\"fullyQualifiedName\":\"frridzfpsf\",\"fullyQualifiedFriendlyName\":\"kidfhmlxrqkeknu\",\"url\":\"qafz\",\"onboardingState\":\"NotOnboarded\"},\"id\":\"riysjrgt\",\"name\":\"uwpuqpsrcekdvvo\",\"type\":\"dwedg\"},{\"properties\":{\"provisioningStatusMessage\":\"lvbwatzadrjbjn\",\"provisioningStatusUpdateTimeUtc\":\"2021-05-08T16:01:56Z\",\"provisioningState\":\"Canceled\",\"fullyQualifiedName\":\"drw\",\"fullyQualifiedFriendlyName\":\"mzc\",\"url\":\"iapypimr\",\"onboardingState\":\"NotApplicable\"},\"id\":\"qwipzesstuin\",\"name\":\"tkmlfupjzcxx\",\"type\":\"zj\"},{\"properties\":{\"provisioningStatusMessage\":\"gahxuerrdaktnyt\",\"provisioningStatusUpdateTimeUtc\":\"2021-07-12T18:46:29Z\",\"provisioningState\":\"DeletionFailure\",\"fullyQualifiedName\":\"cvcp\",\"fullyQualifiedFriendlyName\":\"qjc\",\"url\":\"pw\",\"onboardingState\":\"NotApplicable\"},\"id\":\"hnhhcikh\",\"name\":\"ebgjg\",\"type\":\"lsac\"},{\"properties\":{\"provisioningStatusMessage\":\"lrcygotohzwto\",\"provisioningStatusUpdateTimeUtc\":\"2021-10-16T22:40:59Z\",\"provisioningState\":\"Succeeded\",\"fullyQualifiedName\":\"trapw\",\"fullyQualifiedFriendlyName\":\"lutjsjzels\",\"url\":\"emvupmeak\",\"onboardingState\":\"NotApplicable\"},\"id\":\"sycvldee\",\"name\":\"cb\",\"type\":\"aipu\"}],\"nextLink\":\"ofkegbvbbdledffl\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        GitLabGroupListResponse response = manager.gitLabGroups()
            .listAvailableWithResponse("blcyeqdobobaq", "abebckc", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(OnboardingState.NOT_ONBOARDED, response.value().get(0).properties().onboardingState());
        Assertions.assertEquals("ofkegbvbbdledffl", response.nextLink());
    }
}
