// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.GitLabGroupListResponse;
import com.azure.resourcemanager.security.models.OnboardingState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class GitLabGroupsListAvailableWithResponseMockTests {
    @Test
    public void testListAvailableWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningStatusMessage\":\"bfpxxavlozukg\",\"provisioningStatusUpdateTimeUtc\":\"2021-11-09T21:08:15Z\",\"provisioningState\":\"Failed\",\"fullyQualifiedName\":\"xj\",\"fullyQualifiedFriendlyName\":\"maxcebnb\",\"url\":\"skemqqerw\",\"onboardingState\":\"NotOnboarded\"},\"id\":\"jpvemdfkht\",\"name\":\"uo\",\"type\":\"r\"},{\"properties\":{\"provisioningStatusMessage\":\"ytebjkjge\",\"provisioningStatusUpdateTimeUtc\":\"2020-12-31T04:30:28Z\",\"provisioningState\":\"Succeeded\",\"fullyQualifiedName\":\"abvbmnhtwofx\",\"fullyQualifiedFriendlyName\":\"hlvyqns\",\"url\":\"qrmlq\",\"onboardingState\":\"OnboardedByOtherConnector\"},\"id\":\"khjgqqrugwe\",\"name\":\"pscvsm\",\"type\":\"ptluwozfvzasupcv\"},{\"properties\":{\"provisioningStatusMessage\":\"vwio\",\"provisioningStatusUpdateTimeUtc\":\"2021-08-16T20:54:19Z\",\"provisioningState\":\"DeletionFailure\",\"fullyQualifiedName\":\"mlmpnvqxuyi\",\"fullyQualifiedFriendlyName\":\"z\",\"url\":\"dqseypdlmajpuy\",\"onboardingState\":\"NotApplicable\"},\"id\":\"f\",\"name\":\"mzgccy\",\"type\":\"buvmsiehedmmv\"},{\"properties\":{\"provisioningStatusMessage\":\"yrxp\",\"provisioningStatusUpdateTimeUtc\":\"2021-01-04T07:16:17Z\",\"provisioningState\":\"Failed\",\"fullyQualifiedName\":\"yqw\",\"fullyQualifiedFriendlyName\":\"igeblsp\",\"url\":\"d\",\"onboardingState\":\"Onboarded\"},\"id\":\"wwveeozbjkjq\",\"name\":\"izdnuehx\",\"type\":\"ltssjdywbnklge\"}],\"nextLink\":\"actsawvxcimpthjr\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        GitLabGroupListResponse response = manager.gitLabGroups()
            .listAvailableWithResponse("fpabwbpzgfg", "pudhg", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(OnboardingState.NOT_ONBOARDED, response.value().get(0).properties().onboardingState());
        Assertions.assertEquals("actsawvxcimpthjr", response.nextLink());
    }
}
