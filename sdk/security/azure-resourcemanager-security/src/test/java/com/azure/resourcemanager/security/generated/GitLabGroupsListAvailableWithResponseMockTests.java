// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.security.SecurityManager;
import com.azure.resourcemanager.security.models.DevOpsProvisioningState;
import com.azure.resourcemanager.security.models.GitLabGroupListResponse;
import com.azure.resourcemanager.security.models.OnboardingState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class GitLabGroupsListAvailableWithResponseMockTests {
    @Test
    public void testListAvailableWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningStatusMessage\":\"eikffjq\",\"provisioningStatusUpdateTimeUtc\":\"2021-11-13T22:44:39Z\",\"provisioningState\":\"PendingDeletion\",\"fullyQualifiedName\":\"wylavet\",\"fullyQualifiedFriendlyName\":\"vohy\",\"url\":\"dgjtpbtkogfg\",\"onboardingState\":\"NotOnboarded\"},\"id\":\"yzolrvws\",\"name\":\"seqjteoa\",\"type\":\"irmgis\"},{\"properties\":{\"provisioningStatusMessage\":\"bpvsobamtarir\",\"provisioningStatusUpdateTimeUtc\":\"2021-07-28T18:20:41Z\",\"provisioningState\":\"DeletionFailure\",\"fullyQualifiedName\":\"oflzuk\",\"fullyQualifiedFriendlyName\":\"ougxpyp\",\"url\":\"zqsxblmnxrxkul\",\"onboardingState\":\"NotApplicable\"},\"id\":\"vviyqonbxxyf\",\"name\":\"zbgodywxjikfrx\",\"type\":\"lused\"},{\"properties\":{\"provisioningStatusMessage\":\"imqaxtmvmycvjpa\",\"provisioningStatusUpdateTimeUtc\":\"2021-06-11T23:51:25Z\",\"provisioningState\":\"DeletionSuccess\",\"fullyQualifiedName\":\"yjehyvnfjng\",\"fullyQualifiedFriendlyName\":\"mrdvhbgtuhwhx\",\"url\":\"we\",\"onboardingState\":\"NotApplicable\"},\"id\":\"hylnuzgz\",\"name\":\"x\",\"type\":\"dusebkcfetxp\"},{\"properties\":{\"provisioningStatusMessage\":\"rmasuiqrsnm\",\"provisioningStatusUpdateTimeUtc\":\"2021-11-11T05:05:31Z\",\"provisioningState\":\"Succeeded\",\"fullyQualifiedName\":\"x\",\"fullyQualifiedFriendlyName\":\"xrbiyzjlgrw\",\"url\":\"s\",\"onboardingState\":\"NotOnboarded\"},\"id\":\"kbocsitsx\",\"name\":\"vsg\",\"type\":\"pwqieyxjkctyqst\"}],\"nextLink\":\"m\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SecurityManager manager = SecurityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        GitLabGroupListResponse response = manager.gitLabGroups()
            .listAvailableWithResponse("yplavbvs", "cedsoqwexi", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(DevOpsProvisioningState.PENDING_DELETION,
            response.value().get(0).properties().provisioningState());
        Assertions.assertEquals(OnboardingState.NOT_ONBOARDED, response.value().get(0).properties().onboardingState());
        Assertions.assertEquals("m", response.nextLink());
    }
}
